

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Feb 08 11:06:07 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   223                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   257                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   258                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   259                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   260   000000                     
   261                           ; Generated 12/10/2023 GMT
   262                           ; 
   263                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   264                           ; All rights reserved.
   265                           ; 
   266                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   267                           ; 
   268                           ; Redistribution and use in source and binary forms, with or without modification, are
   269                           ; permitted provided that the following conditions are met:
   270                           ; 
   271                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   272                           ;        conditions and the following disclaimer.
   273                           ; 
   274                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   275                           ;        of conditions and the following disclaimer in the documentation and/or other
   276                           ;        materials provided with the distribution. Publication is not required when
   277                           ;        this file is used in an embedded application.
   278                           ; 
   279                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   280                           ;        software without specific prior written permission.
   281                           ; 
   282                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   283                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   284                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   285                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   286                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   287                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   288                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   289                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   290                           ; 
   291                           ; 
   292                           ; Code-generator required, PIC18F26K80 Definitions
   293                           ; 
   294                           ; SFR Addresses
   295   000000                     
   296                           	psect	eeprom_data
   297   F003FF                     	org	1023	;# 
   298   F003FF  00                 	db	0	;# 
   299   000000                     _eventTable_absaddr	set	61312
   300                           
   301                           	psect	mediumconst
   302   00ED28                     __pmediumconst:
   303                           	callstack 0
   304   00ED28  00                 	db	0
   305   00ED29                     _priorities:
   306                           	callstack 0
   307   00ED29  01                 	db	1
   308   00ED2A  01                 	db	1
   309   00ED2B  03                 	db	3
   310   00ED2C  02                 	db	2
   311   00ED2D  02                 	db	2
   312   00ED2E  02                 	db	2
   313   00ED2F  02                 	db	2
   314   00ED30  03                 	db	3
   315   00ED31  02                 	db	2
   316   00ED32  02                 	db	2
   317   00ED33  03                 	db	3
   318   00ED34  01                 	db	1
   319   00ED35  00                 	db	0
   320   00ED36  00                 	db	0
   321   00ED37  01                 	db	1
   322   00ED38  01                 	db	1
   323   00ED39  01                 	db	1
   324   00ED3A  01                 	db	1
   325   00ED3B  01                 	db	1
   326   00ED3C  01                 	db	1
   327   00ED3D  01                 	db	1
   328   00ED3E  01                 	db	1
   329   00ED3F  01                 	db	1
   330   00ED40  01                 	db	1
   331   00ED41  01                 	db	1
   332   00ED42  01                 	db	1
   333   00ED43  01                 	db	1
   334   00ED44  01                 	db	1
   335   00ED45  01                 	db	1
   336   00ED46  01                 	db	1
   337   00ED47  01                 	db	1
   338   00ED48  01                 	db	1
   339   00ED49  01                 	db	1
   340   00ED4A  01                 	db	1
   341   00ED4B  01                 	db	1
   342   00ED4C  01                 	db	1
   343   00ED4D  01                 	db	1
   344   00ED4E  01                 	db	1
   345   00ED4F  01                 	db	1
   346   00ED50  01                 	db	1
   347   00ED51  01                 	db	1
   348   00ED52  01                 	db	1
   349   00ED53  01                 	db	1
   350   00ED54  01                 	db	1
   351   00ED55  01                 	db	1
   352   00ED56  01                 	db	1
   353   00ED57  01                 	db	1
   354   00ED58  01                 	db	1
   355   00ED59  01                 	db	1
   356   00ED5A  01                 	db	1
   357   00ED5B  01                 	db	1
   358   00ED5C  01                 	db	1
   359   00ED5D  01                 	db	1
   360   00ED5E  01                 	db	1
   361   00ED5F  01                 	db	1
   362   00ED60  01                 	db	1
   363   00ED61  01                 	db	1
   364   00ED62  01                 	db	1
   365   00ED63  01                 	db	1
   366   00ED64  01                 	db	1
   367   00ED65  01                 	db	1
   368   00ED66  01                 	db	1
   369   00ED67  01                 	db	1
   370   00ED68  00                 	db	0
   371   00ED69  01                 	db	1
   372   00ED6A  01                 	db	1
   373   00ED6B  01                 	db	1
   374   00ED6C  01                 	db	1
   375   00ED6D  01                 	db	1
   376   00ED6E  01                 	db	1
   377   00ED6F  01                 	db	1
   378   00ED70  01                 	db	1
   379   00ED71  01                 	db	1
   380   00ED72  00                 	db	0
   381   00ED73  01                 	db	1
   382   00ED74  01                 	db	1
   383   00ED75  00                 	db	0
   384   00ED76  00                 	db	0
   385   00ED77  00                 	db	0
   386   00ED78  00                 	db	0
   387   00ED79  00                 	db	0
   388   00ED7A  00                 	db	0
   389   00ED7B  00                 	db	0
   390   00ED7C  00                 	db	0
   391   00ED7D  00                 	db	0
   392   00ED7E  00                 	db	0
   393   00ED7F  00                 	db	0
   394   00ED80  00                 	db	0
   395   00ED81  00                 	db	0
   396   00ED82  00                 	db	0
   397   00ED83  00                 	db	0
   398   00ED84  00                 	db	0
   399   00ED85  00                 	db	0
   400   00ED86  01                 	db	1
   401   00ED87  01                 	db	1
   402   00ED88  01                 	db	1
   403   00ED89  01                 	db	1
   404   00ED8A  01                 	db	1
   405   00ED8B  03                 	db	3
   406   00ED8C  01                 	db	1
   407   00ED8D  01                 	db	1
   408   00ED8E  01                 	db	1
   409   00ED8F  01                 	db	1
   410   00ED90  01                 	db	1
   411   00ED91  01                 	db	1
   412   00ED92  01                 	db	1
   413   00ED93  01                 	db	1
   414   00ED94  00                 	db	0
   415   00ED95  00                 	db	0
   416   00ED96  00                 	db	0
   417   00ED97  00                 	db	0
   418   00ED98  00                 	db	0
   419   00ED99  00                 	db	0
   420   00ED9A  00                 	db	0
   421   00ED9B  00                 	db	0
   422   00ED9C  01                 	db	1
   423   00ED9D  00                 	db	0
   424   00ED9E  01                 	db	1
   425   00ED9F  01                 	db	1
   426   00EDA0  01                 	db	1
   427   00EDA1  01                 	db	1
   428   00EDA2  01                 	db	1
   429   00EDA3  01                 	db	1
   430   00EDA4  00                 	db	0
   431   00EDA5  01                 	db	1
   432   00EDA6  01                 	db	1
   433   00EDA7  01                 	db	1
   434   00EDA8  01                 	db	1
   435   00EDA9  01                 	db	1
   436   00EDAA  01                 	db	1
   437   00EDAB  01                 	db	1
   438   00EDAC  00                 	db	0
   439   00EDAD  01                 	db	1
   440   00EDAE  01                 	db	1
   441   00EDAF  01                 	db	1
   442   00EDB0  01                 	db	1
   443   00EDB1  01                 	db	1
   444   00EDB2  01                 	db	1
   445   00EDB3  00                 	db	0
   446   00EDB4  01                 	db	1
   447   00EDB5  00                 	db	0
   448   00EDB6  00                 	db	0
   449   00EDB7  00                 	db	0
   450   00EDB8  00                 	db	0
   451   00EDB9  00                 	db	0
   452   00EDBA  00                 	db	0
   453   00EDBB  00                 	db	0
   454   00EDBC  00                 	db	0
   455   00EDBD  00                 	db	0
   456   00EDBE  00                 	db	0
   457   00EDBF  00                 	db	0
   458   00EDC0  00                 	db	0
   459   00EDC1  00                 	db	0
   460   00EDC2  00                 	db	0
   461   00EDC3  00                 	db	0
   462   00EDC4  00                 	db	0
   463   00EDC5  01                 	db	1
   464   00EDC6  01                 	db	1
   465   00EDC7  01                 	db	1
   466   00EDC8  01                 	db	1
   467   00EDC9  01                 	db	1
   468   00EDCA  01                 	db	1
   469   00EDCB  01                 	db	1
   470   00EDCC  01                 	db	1
   471   00EDCD  01                 	db	1
   472   00EDCE  01                 	db	1
   473   00EDCF  01                 	db	1
   474   00EDD0  00                 	db	0
   475   00EDD1  00                 	db	0
   476   00EDD2  01                 	db	1
   477   00EDD3  01                 	db	1
   478   00EDD4  00                 	db	0
   479   00EDD5  00                 	db	0
   480   00EDD6  00                 	db	0
   481   00EDD7  00                 	db	0
   482   00EDD8  00                 	db	0
   483   00EDD9  00                 	db	0
   484   00EDDA  00                 	db	0
   485   00EDDB  00                 	db	0
   486   00EDDC  01                 	db	1
   487   00EDDD  00                 	db	0
   488   00EDDE  00                 	db	0
   489   00EDDF  01                 	db	1
   490   00EDE0  01                 	db	1
   491   00EDE1  01                 	db	1
   492   00EDE2  00                 	db	0
   493   00EDE3  00                 	db	0
   494   00EDE4  00                 	db	0
   495   00EDE5  01                 	db	1
   496   00EDE6  01                 	db	1
   497   00EDE7  01                 	db	1
   498   00EDE8  01                 	db	1
   499   00EDE9  01                 	db	1
   500   00EDEA  01                 	db	1
   501   00EDEB  01                 	db	1
   502   00EDEC  00                 	db	0
   503   00EDED  01                 	db	1
   504   00EDEE  01                 	db	1
   505   00EDEF  01                 	db	1
   506   00EDF0  01                 	db	1
   507   00EDF1  01                 	db	1
   508   00EDF2  01                 	db	1
   509   00EDF3  01                 	db	1
   510   00EDF4  01                 	db	1
   511   00EDF5  00                 	db	0
   512   00EDF6  00                 	db	0
   513   00EDF7  00                 	db	0
   514   00EDF8  00                 	db	0
   515   00EDF9  00                 	db	0
   516   00EDFA  00                 	db	0
   517   00EDFB  01                 	db	1
   518   00EDFC  01                 	db	1
   519   00EDFD  00                 	db	0
   520   00EDFE  00                 	db	0
   521   00EDFF  01                 	db	1
   522   00EE00  01                 	db	1
   523   00EE01  01                 	db	1
   524   00EE02  00                 	db	0
   525   00EE03  00                 	db	0
   526   00EE04  00                 	db	0
   527   00EE05  01                 	db	1
   528   00EE06  01                 	db	1
   529   00EE07  00                 	db	0
   530   00EE08  01                 	db	1
   531   00EE09  01                 	db	1
   532   00EE0A  01                 	db	1
   533   00EE0B  00                 	db	0
   534   00EE0C  00                 	db	0
   535   00EE0D  01                 	db	1
   536   00EE0E  00                 	db	0
   537   00EE0F  01                 	db	1
   538   00EE10  01                 	db	1
   539   00EE11  01                 	db	1
   540   00EE12  01                 	db	1
   541   00EE13  01                 	db	1
   542   00EE14  00                 	db	0
   543   00EE15  00                 	db	0
   544   00EE16  00                 	db	0
   545   00EE17  00                 	db	0
   546   00EE18  00                 	db	0
   547   00EE19  00                 	db	0
   548   00EE1A  00                 	db	0
   549   00EE1B  00                 	db	0
   550   00EE1C  00                 	db	0
   551   00EE1D  00                 	db	0
   552   00EE1E  00                 	db	0
   553   00EE1F  00                 	db	0
   554   00EE20  00                 	db	0
   555   00EE21  00                 	db	0
   556   00EE22  00                 	db	0
   557   00EE23  01                 	db	1
   558   00EE24  00                 	db	0
   559   00EE25  00                 	db	0
   560   00EE26  00                 	db	0
   561   00EE27  00                 	db	0
   562   00EE28  00                 	db	0
   563   00EE29                     __end_of_priorities:
   564                           	callstack 0
   565   00EE29                     _configs:
   566                           	callstack 0
   567   00EE29  0B                 	db	11
   568   00EE2A  43                 	db	67
   569   00EE2B  00                 	db	0
   570   00EE2C  FF                 	db	255
   571   00EE2D  0C                 	db	12
   572   00EE2E  43                 	db	67
   573   00EE2F  01                 	db	1
   574   00EE30  FF                 	db	255
   575   00EE31  0D                 	db	13
   576   00EE32  43                 	db	67
   577   00EE33  02                 	db	2
   578   00EE34  FF                 	db	255
   579   00EE35  0E                 	db	14
   580   00EE36  43                 	db	67
   581   00EE37  03                 	db	3
   582   00EE38  FF                 	db	255
   583   00EE39  0F                 	db	15
   584   00EE3A  43                 	db	67
   585   00EE3B  04                 	db	4
   586   00EE3C  FF                 	db	255
   587   00EE3D  10                 	db	16
   588   00EE3E  43                 	db	67
   589   00EE3F  05                 	db	5
   590   00EE40  FF                 	db	255
   591   00EE41  11                 	db	17
   592   00EE42  43                 	db	67
   593   00EE43  06                 	db	6
   594   00EE44  FF                 	db	255
   595   00EE45  12                 	db	18
   596   00EE46  43                 	db	67
   597   00EE47  07                 	db	7
   598   00EE48  FF                 	db	255
   599   00EE49  15                 	db	21
   600   00EE4A  42                 	db	66
   601   00EE4B  00                 	db	0
   602   00EE4C  0A                 	db	10
   603   00EE4D  16                 	db	22
   604   00EE4E  42                 	db	66
   605   00EE4F  01                 	db	1
   606   00EE50  08                 	db	8
   607   00EE51  19                 	db	25
   608   00EE52  42                 	db	66
   609   00EE53  04                 	db	4
   610   00EE54  09                 	db	9
   611   00EE55  1A                 	db	26
   612   00EE56  42                 	db	66
   613   00EE57  05                 	db	5
   614   00EE58  FF                 	db	255
   615   00EE59  03                 	db	3
   616   00EE5A  41                 	db	65
   617   00EE5B  01                 	db	1
   618   00EE5C  01                 	db	1
   619   00EE5D  02                 	db	2
   620   00EE5E  41                 	db	65
   621   00EE5F  00                 	db	0
   622   00EE60  00                 	db	0
   623   00EE61  05                 	db	5
   624   00EE62  41                 	db	65
   625   00EE63  03                 	db	3
   626   00EE64  03                 	db	3
   627   00EE65  07                 	db	7
   628   00EE66  41                 	db	65
   629   00EE67  05                 	db	5
   630   00EE68  04                 	db	4
   631   00EE69                     __end_of_configs:
   632                           	callstack 0
   633   000000                     _paramBlock_absaddr	set	2080
   634   00EE69                     _services:
   635                           	callstack 0
   636   00EE69  68                 	db	low _canService
   637   00EE6A  EF                 	db	high _canService
   638   00EE6B  56                 	db	low _mnsService
   639   00EE6C  EF                 	db	high _mnsService
   640   00EE6D  44                 	db	low _nvService
   641   00EE6E  EF                 	db	high _nvService
   642   00EE6F  32                 	db	low _bootService
   643   00EE70  EF                 	db	high _bootService
   644   00EE71  20                 	db	low _eventTeachService
   645   00EE72  EF                 	db	high _eventTeachService
   646   00EE73  0E                 	db	low _eventConsumer2QService
   647   00EE74  EF                 	db	high _eventConsumer2QService
   648   00EE75  FC                 	db	low _eventProducerService
   649   00EE76  EE                 	db	high _eventProducerService
   650   00EE77  EA                 	db	low _eventCoeService
   651   00EE78  EE                 	db	high _eventCoeService
   652   00EE79  D8                 	db	low _eventAckService
   653   00EE7A  EE                 	db	high _eventAckService
   654   00EE7B                     __end_of_services:
   655                           	callstack 0
   656   00EE7B                     _bl_version:
   657                           	callstack 0
   658   00EE7B  42                 	db	66
   659   00EE7C  4C                 	db	76
   660   00EE7D  5F                 	db	95
   661   00EE7E  56                 	db	86
   662   00EE7F  45                 	db	69
   663   00EE80  52                 	db	82
   664   00EE81  53                 	db	83
   665   00EE82  49                 	db	73
   666   00EE83  4F                 	db	79
   667   00EE84  4E                 	db	78
   668   00EE85  3D                 	db	61
   669   00EE86                     __end_of_bl_version:
   670                           	callstack 0
   671   000000                     _name_absaddr	set	2120
   672   00EE86                     _canPri:
   673                           	callstack 0
   674   00EE86  B0                 	db	176
   675   00EE87  A0                 	db	160
   676   00EE88  90                 	db	144
   677   00EE89  80                 	db	128
   678   00EE8A  00                 	db	0
   679   00EE8B                     __end_of_canPri:
   680                           	callstack 0
   681   00EE8B                     _channelDefaultNVs:
   682                           	callstack 0
   683   00EE8B  00                 	db	0
   684   00EE8C  06                 	db	6
   685   00EE8D  04                 	db	4
   686   00EE8E  04                 	db	4
   687   00EE8F  00                 	db	0
   688   00EE90  00                 	db	0
   689   00EE91  00                 	db	0
   690   00EE92  01                 	db	1
   691   00EE93  06                 	db	6
   692   00EE94  00                 	db	0
   693   00EE95  00                 	db	0
   694   00EE96  00                 	db	0
   695   00EE97  00                 	db	0
   696   00EE98  00                 	db	0
   697   00EE99  02                 	db	2
   698   00EE9A  06                 	db	6
   699   00EE9B  80                 	db	128
   700   00EE9C  80                 	db	128
   701   00EE9D  EB                 	db	235
   702   00EE9E  EB                 	db	235
   703   00EE9F  00                 	db	0
   704   00EEA0  03                 	db	3
   705   00EEA1  06                 	db	6
   706   00EEA2  80                 	db	128
   707   00EEA3  7F                 	db	127
   708   00EEA4  40                 	db	64
   709   00EEA5  03                 	db	3
   710   00EEA6  3C                 	db	60
   711   00EEA7  04                 	db	4
   712   00EEA8  06                 	db	6
   713   00EEA9  03                 	db	3
   714   00EEAA  80                 	db	128
   715   00EEAB  80                 	db	128
   716   00EEAC  80                 	db	128
   717   00EEAD  00                 	db	0
   718   00EEAE  05                 	db	5
   719   00EEAF  06                 	db	6
   720   00EEB0  80                 	db	128
   721   00EEB1  10                 	db	16
   722   00EEB2  00                 	db	0
   723   00EEB3  00                 	db	0
   724   00EEB4  00                 	db	0
   725   00EEB5  06                 	db	6
   726   00EEB6  06                 	db	6
   727   00EEB7  00                 	db	0
   728   00EEB8  7B                 	db	123
   729   00EEB9  20                 	db	32
   730   00EEBA  07                 	db	7
   731   00EEBB  FF                 	db	255
   732   00EEBC  07                 	db	7
   733   00EEBD  06                 	db	6
   734   00EEBE  05                 	db	5
   735   00EEBF  00                 	db	0
   736   00EEC0  00                 	db	0
   737   00EEC1  00                 	db	0
   738   00EEC2  00                 	db	0
   739   00EEC3  08                 	db	8
   740   00EEC4  00                 	db	0
   741   00EEC5  00                 	db	0
   742   00EEC6  00                 	db	0
   743   00EEC7  00                 	db	0
   744   00EEC8  00                 	db	0
   745   00EEC9  00                 	db	0
   746   00EECA  00                 	db	0
   747   00EECB  00                 	db	0
   748   00EECC  00                 	db	0
   749   00EECD  00                 	db	0
   750   00EECE  00                 	db	0
   751   00EECF  00                 	db	0
   752   00EED0  00                 	db	0
   753   00EED1  00                 	db	0
   754   00EED2  00                 	db	0
   755   00EED3  00                 	db	0
   756   00EED4  00                 	db	0
   757   00EED5  00                 	db	0
   758   00EED6  00                 	db	0
   759   00EED7  00                 	db	0
   760   00EED8                     __end_of_channelDefaultNVs:
   761                           	callstack 0
   762   00EED8                     _eventAckService:
   763                           	callstack 0
   764   00EED8  09                 	db	9
   765   00EED9  01                 	db	1
   766   00EEDA  00                 	db	0
   767   00EEDB  00                 	db	0
   768   00EEDC  D8                 	db	low _ackPowerUp
   769   00EEDD  C2                 	db	high _ackPowerUp
   770   00EEDE  C0                 	db	low _ackEventProcessMessage
   771   00EEDF  67                 	db	high _ackEventProcessMessage
   772   00EEE0  00                 	db	0
   773   00EEE1  00                 	db	0
   774   00EEE2  00                 	db	0
   775   00EEE3  00                 	db	0
   776   00EEE4  00                 	db	0
   777   00EEE5  00                 	db	0
   778   00EEE6  00                 	db	0
   779   00EEE7  00                 	db	0
   780   00EEE8  86                 	db	low _ackGetDiagnostic
   781   00EEE9  C4                 	db	high _ackGetDiagnostic
   782   00EEEA                     __end_of_eventAckService:
   783                           	callstack 0
   784   00EEEA                     _eventCoeService:
   785                           	callstack 0
   786   00EEEA  08                 	db	8
   787   00EEEB  01                 	db	1
   788   00EEEC  00                 	db	0
   789   00EEED  00                 	db	0
   790   00EEEE  00                 	db	0
   791   00EEEF  00                 	db	0
   792   00EEF0  00                 	db	0
   793   00EEF1  00                 	db	0
   794   00EEF2  00                 	db	0
   795   00EEF3  00                 	db	0
   796   00EEF4  00                 	db	0
   797   00EEF5  00                 	db	0
   798   00EEF6  00                 	db	0
   799   00EEF7  00                 	db	0
   800   00EEF8  00                 	db	0
   801   00EEF9  00                 	db	0
   802   00EEFA  00                 	db	0
   803   00EEFB  00                 	db	0
   804   00EEFC                     __end_of_eventCoeService:
   805                           	callstack 0
   806   00EEFC                     _eventProducerService:
   807                           	callstack 0
   808   00EEFC  05                 	db	5
   809   00EEFD  01                 	db	1
   810   00EEFE  00                 	db	0
   811   00EEFF  00                 	db	0
   812   00EF00  AA                 	db	low _producerPowerUp
   813   00EF01  C2                 	db	high _producerPowerUp
   814   00EF02  A8                 	db	low _producerProcessMessage
   815   00EF03  5E                 	db	high _producerProcessMessage
   816   00EF04  00                 	db	0
   817   00EF05  00                 	db	0
   818   00EF06  00                 	db	0
   819   00EF07  00                 	db	0
   820   00EF08  00                 	db	0
   821   00EF09  00                 	db	0
   822   00EF0A  9C                 	db	low _producerEsdData
   823   00EF0B  C6                 	db	high _producerEsdData
   824   00EF0C  0E                 	db	low _producerGetDiagnostic
   825   00EF0D  C4                 	db	high _producerGetDiagnostic
   826   00EF0E                     __end_of_eventProducerService:
   827                           	callstack 0
   828   00EF0E                     _eventConsumer2QService:
   829                           	callstack 0
   830   00EF0E  06                 	db	6
   831   00EF0F  01                 	db	1
   832   00EF10  00                 	db	0
   833   00EF11  00                 	db	0
   834   00EF12  4A                 	db	low _consumer2QPowerUp
   835   00EF13  BD                 	db	high _consumer2QPowerUp
   836   00EF14  32                 	db	low _consumer2QProcessMessage
   837   00EF15  3A                 	db	high _consumer2QProcessMessage
   838   00EF16  00                 	db	0
   839   00EF17  00                 	db	0
   840   00EF18  00                 	db	0
   841   00EF19  00                 	db	0
   842   00EF1A  00                 	db	0
   843   00EF1B  00                 	db	0
   844   00EF1C  BC                 	db	low _consumer2QEsdData
   845   00EF1D  C6                 	db	high _consumer2QEsdData
   846   00EF1E  AE                 	db	low _consumer2QGetDiagnostic
   847   00EF1F  C4                 	db	high _consumer2QGetDiagnostic
   848   00EF20                     __end_of_eventConsumer2QService:
   849                           	callstack 0
   850   00EF20                     _eventTeachService:
   851                           	callstack 0
   852   00EF20  04                 	db	4
   853   00EF21  01                 	db	1
   854   00EF22  DC                 	db	low _teachFactoryReset
   855   00EF23  C8                 	db	high _teachFactoryReset
   856   00EF24  C2                 	db	low _teachPowerUp
   857   00EF25  C0                 	db	high _teachPowerUp
   858   00EF26  BE                 	db	low _teachProcessMessage
   859   00EF27  22                 	db	high _teachProcessMessage
   860   00EF28  00                 	db	0
   861   00EF29  00                 	db	0
   862   00EF2A  00                 	db	0
   863   00EF2B  00                 	db	0
   864   00EF2C  00                 	db	0
   865   00EF2D  00                 	db	0
   866   00EF2E  0C                 	db	low _teachGetESDdata
   867   00EF2F  C6                 	db	high _teachGetESDdata
   868   00EF30  D6                 	db	low _teachGetDiagnostic
   869   00EF31  C4                 	db	high _teachGetDiagnostic
   870   00EF32                     __end_of_eventTeachService:
   871                           	callstack 0
   872   00EF32                     _bootService:
   873                           	callstack 0
   874   00EF32  0A                 	db	10
   875   00EF33  02                 	db	2
   876   00EF34  00                 	db	0
   877   00EF35  00                 	db	0
   878   00EF36  F2                 	db	low _bootPowerUp
   879   00EF37  93                 	db	high _bootPowerUp
   880   00EF38  6E                 	db	low _bootProcessMessage
   881   00EF39  A2                 	db	high _bootProcessMessage
   882   00EF3A  00                 	db	0
   883   00EF3B  00                 	db	0
   884   00EF3C  00                 	db	0
   885   00EF3D  00                 	db	0
   886   00EF3E  00                 	db	0
   887   00EF3F  00                 	db	0
   888   00EF40  E8                 	db	low _bootEsdData
   889   00EF41  C5                 	db	high _bootEsdData
   890   00EF42  00                 	db	0
   891   00EF43  00                 	db	0
   892   00EF44                     __end_of_bootService:
   893                           	callstack 0
   894   00EF44                     _nvService:
   895                           	callstack 0
   896   00EF44  02                 	db	2
   897   00EF45  01                 	db	1
   898   00EF46  DA                 	db	low _nvFactoryReset
   899   00EF47  BF                 	db	high _nvFactoryReset
   900   00EF48  F6                 	db	low _nvPowerUp
   901   00EF49  C0                 	db	high _nvPowerUp
   902   00EF4A  16                 	db	low _nvProcessMessage
   903   00EF4B  48                 	db	high _nvProcessMessage
   904   00EF4C  00                 	db	0
   905   00EF4D  00                 	db	0
   906   00EF4E  00                 	db	0
   907   00EF4F  00                 	db	0
   908   00EF50  00                 	db	0
   909   00EF51  00                 	db	0
   910   00EF52  8C                 	db	low _nvGetESDdata
   911   00EF53  C7                 	db	high _nvGetESDdata
   912   00EF54  36                 	db	low _nvGetDiagnostic
   913   00EF55  C4                 	db	high _nvGetDiagnostic
   914   00EF56                     __end_of_nvService:
   915                           	callstack 0
   916   00EF56                     _mnsService:
   917                           	callstack 0
   918   00EF56  01                 	db	1
   919   00EF57  01                 	db	1
   920   00EF58  2A                 	db	low _mnsFactoryReset
   921   00EF59  AE                 	db	high _mnsFactoryReset
   922   00EF5A  38                 	db	low _mnsPowerUp
   923   00EF5B  80                 	db	high _mnsPowerUp
   924   00EF5C  94                 	db	low _mnsProcessMessage
   925   00EF5D  17                 	db	high _mnsProcessMessage
   926   00EF5E  68                 	db	low _mnsPoll
   927   00EF5F  32                 	db	high _mnsPoll
   928   00EF60  00                 	db	0
   929   00EF61  00                 	db	0
   930   00EF62  1A                 	db	low _mnsLowIsr
   931   00EF63  C8                 	db	high _mnsLowIsr
   932   00EF64  00                 	db	0
   933   00EF65  00                 	db	0
   934   00EF66  5E                 	db	low _mnsGetDiagnostic
   935   00EF67  C4                 	db	high _mnsGetDiagnostic
   936   00EF68                     __end_of_mnsService:
   937                           	callstack 0
   938   00EF68                     _canService:
   939                           	callstack 0
   940   00EF68  03                 	db	3
   941   00EF69  02                 	db	2
   942   00EF6A  1C                 	db	low _canFactoryReset
   943   00EF6B  C7                 	db	high _canFactoryReset
   944   00EF6C  F2                 	db	low _canPowerUp
   945   00EF6D  70                 	db	high _canPowerUp
   946   00EF6E  F4                 	db	low _canProcessMessage
   947   00EF6F  9F                 	db	high _canProcessMessage
   948   00EF70  00                 	db	0
   949   00EF71  00                 	db	0
   950   00EF72  FC                 	db	low _canIsr
   951   00EF73  C6                 	db	high _canIsr
   952   00EF74  FC                 	db	low _canIsr
   953   00EF75  C6                 	db	high _canIsr
   954   00EF76  72                 	db	low _canEsdData
   955   00EF77  C7                 	db	high _canEsdData
   956   00EF78  2A                 	db	low _canGetDiagnostic
   957   00EF79  B2                 	db	high _canGetDiagnostic
   958   00EF7A                     __end_of_canService:
   959                           	callstack 0
   960   00EF7A                     _canTransport:
   961                           	callstack 0
   962   00EF7A  50                 	db	low _canSendMessage
   963   00EF7B  4B                 	db	high _canSendMessage
   964   00EF7C  B2                 	db	low _canReceiveMessage
   965   00EF7D  69                 	db	high _canReceiveMessage
   966   00EF7E                     __end_of_canTransport:
   967                           	callstack 0
   968   000000                     _eventTable_absaddr	set	61312
   969   00EF7E  00                 	db	0	; dummy byte at the end
   970   000000                     
   971                           	psect	_eventTable_text
   972   00EF80                     __p_eventTable_text:
   973                           	callstack 0
   974   00EF80                     _eventTable:
   975                           	callstack 0
   976   00EF80  FF                 	db	255
   977   00EF81  FF                 	db	255
   978   00EF82  FF                 	db	255
   979   00EF83  FF                 	db	255
   980   00EF84  FF                 	db	255
   981   00EF85  FF                 	db	255
   982   00EF86  FF                 	db	255
   983   00EF87  FF                 	db	255
   984   00EF88  FF                 	db	255
   985   00EF89  FF                 	db	255
   986   00EF8A  FF                 	db	255
   987   00EF8B  FF                 	db	255
   988   00EF8C  FF                 	db	255
   989   00EF8D  FF                 	db	255
   990   00EF8E  FF                 	db	255
   991   00EF8F  FF                 	db	255
   992   00EF90  FF                 	db	255
   993   00EF91  FF                 	db	255
   994   00EF92  FF                 	db	255
   995   00EF93  FF                 	db	255
   996   00EF94  FF                 	db	255
   997   00EF95  FF                 	db	255
   998   00EF96  FF                 	db	255
   999   00EF97  FF                 	db	255
  1000   00EF98  FF                 	db	255
  1001   00EF99  FF                 	db	255
  1002   00EF9A  FF                 	db	255
  1003   00EF9B  FF                 	db	255
  1004   00EF9C  FF                 	db	255
  1005   00EF9D  FF                 	db	255
  1006   00EF9E  FF                 	db	255
  1007   00EF9F  FF                 	db	255
  1008   00EFA0  FF                 	db	255
  1009   00EFA1  FF                 	db	255
  1010   00EFA2  FF                 	db	255
  1011   00EFA3  FF                 	db	255
  1012   00EFA4  FF                 	db	255
  1013   00EFA5  FF                 	db	255
  1014   00EFA6  FF                 	db	255
  1015   00EFA7  FF                 	db	255
  1016   00EFA8  FF                 	db	255
  1017   00EFA9  FF                 	db	255
  1018   00EFAA  FF                 	db	255
  1019   00EFAB  FF                 	db	255
  1020   00EFAC  FF                 	db	255
  1021   00EFAD  FF                 	db	255
  1022   00EFAE  FF                 	db	255
  1023   00EFAF  FF                 	db	255
  1024   00EFB0  FF                 	db	255
  1025   00EFB1  FF                 	db	255
  1026   00EFB2  FF                 	db	255
  1027   00EFB3  FF                 	db	255
  1028   00EFB4  FF                 	db	255
  1029   00EFB5  FF                 	db	255
  1030   00EFB6  FF                 	db	255
  1031   00EFB7  FF                 	db	255
  1032   00EFB8  FF                 	db	255
  1033   00EFB9  FF                 	db	255
  1034   00EFBA  FF                 	db	255
  1035   00EFBB  FF                 	db	255
  1036   00EFBC  FF                 	db	255
  1037   00EFBD  FF                 	db	255
  1038   00EFBE  FF                 	db	255
  1039   00EFBF  FF                 	db	255
  1040   00EFC0  FF                 	db	255
  1041   00EFC1  FF                 	db	255
  1042   00EFC2  FF                 	db	255
  1043   00EFC3  FF                 	db	255
  1044   00EFC4  FF                 	db	255
  1045   00EFC5  FF                 	db	255
  1046   00EFC6  FF                 	db	255
  1047   00EFC7  FF                 	db	255
  1048   00EFC8  FF                 	db	255
  1049   00EFC9  FF                 	db	255
  1050   00EFCA  FF                 	db	255
  1051   00EFCB  FF                 	db	255
  1052   00EFCC  FF                 	db	255
  1053   00EFCD  FF                 	db	255
  1054   00EFCE  FF                 	db	255
  1055   00EFCF  FF                 	db	255
  1056   00EFD0  FF                 	db	255
  1057   00EFD1  FF                 	db	255
  1058   00EFD2  FF                 	db	255
  1059   00EFD3  FF                 	db	255
  1060   00EFD4  FF                 	db	255
  1061   00EFD5  FF                 	db	255
  1062   00EFD6  FF                 	db	255
  1063   00EFD7  FF                 	db	255
  1064   00EFD8  FF                 	db	255
  1065   00EFD9  FF                 	db	255
  1066   00EFDA  FF                 	db	255
  1067   00EFDB  FF                 	db	255
  1068   00EFDC  FF                 	db	255
  1069   00EFDD  FF                 	db	255
  1070   00EFDE  FF                 	db	255
  1071   00EFDF  FF                 	db	255
  1072   00EFE0  FF                 	db	255
  1073   00EFE1  FF                 	db	255
  1074   00EFE2  FF                 	db	255
  1075   00EFE3  FF                 	db	255
  1076   00EFE4  FF                 	db	255
  1077   00EFE5  FF                 	db	255
  1078   00EFE6  FF                 	db	255
  1079   00EFE7  FF                 	db	255
  1080   00EFE8  FF                 	db	255
  1081   00EFE9  FF                 	db	255
  1082   00EFEA  FF                 	db	255
  1083   00EFEB  FF                 	db	255
  1084   00EFEC  FF                 	db	255
  1085   00EFED  FF                 	db	255
  1086   00EFEE  FF                 	db	255
  1087   00EFEF  FF                 	db	255
  1088   00EFF0  FF                 	db	255
  1089   00EFF1  FF                 	db	255
  1090   00EFF2  FF                 	db	255
  1091   00EFF3  FF                 	db	255
  1092   00EFF4  FF                 	db	255
  1093   00EFF5  FF                 	db	255
  1094   00EFF6  FF                 	db	255
  1095   00EFF7  FF                 	db	255
  1096   00EFF8  FF                 	db	255
  1097   00EFF9  FF                 	db	255
  1098   00EFFA  FF                 	db	255
  1099   00EFFB  FF                 	db	255
  1100   00EFFC  FF                 	db	255
  1101   00EFFD  FF                 	db	255
  1102   00EFFE  FF                 	db	255
  1103   00EFFF  FF                 	db	255
  1104   00F000  FF                 	db	255
  1105   00F001  FF                 	db	255
  1106   00F002  FF                 	db	255
  1107   00F003  FF                 	db	255
  1108   00F004  FF                 	db	255
  1109   00F005  FF                 	db	255
  1110   00F006  FF                 	db	255
  1111   00F007  FF                 	db	255
  1112   00F008  FF                 	db	255
  1113   00F009  FF                 	db	255
  1114   00F00A  FF                 	db	255
  1115   00F00B  FF                 	db	255
  1116   00F00C  FF                 	db	255
  1117   00F00D  FF                 	db	255
  1118   00F00E  FF                 	db	255
  1119   00F00F  FF                 	db	255
  1120   00F010  FF                 	db	255
  1121   00F011  FF                 	db	255
  1122   00F012  FF                 	db	255
  1123   00F013  FF                 	db	255
  1124   00F014  FF                 	db	255
  1125   00F015  FF                 	db	255
  1126   00F016  FF                 	db	255
  1127   00F017  FF                 	db	255
  1128   00F018  FF                 	db	255
  1129   00F019  FF                 	db	255
  1130   00F01A  FF                 	db	255
  1131   00F01B  FF                 	db	255
  1132   00F01C  FF                 	db	255
  1133   00F01D  FF                 	db	255
  1134   00F01E  FF                 	db	255
  1135   00F01F  FF                 	db	255
  1136   00F020  FF                 	db	255
  1137   00F021  FF                 	db	255
  1138   00F022  FF                 	db	255
  1139   00F023  FF                 	db	255
  1140   00F024  FF                 	db	255
  1141   00F025  FF                 	db	255
  1142   00F026  FF                 	db	255
  1143   00F027  FF                 	db	255
  1144   00F028  FF                 	db	255
  1145   00F029  FF                 	db	255
  1146   00F02A  FF                 	db	255
  1147   00F02B  FF                 	db	255
  1148   00F02C  FF                 	db	255
  1149   00F02D  FF                 	db	255
  1150   00F02E  FF                 	db	255
  1151   00F02F  FF                 	db	255
  1152   00F030  FF                 	db	255
  1153   00F031  FF                 	db	255
  1154   00F032  FF                 	db	255
  1155   00F033  FF                 	db	255
  1156   00F034  FF                 	db	255
  1157   00F035  FF                 	db	255
  1158   00F036  FF                 	db	255
  1159   00F037  FF                 	db	255
  1160   00F038  FF                 	db	255
  1161   00F039  FF                 	db	255
  1162   00F03A  FF                 	db	255
  1163   00F03B  FF                 	db	255
  1164   00F03C  FF                 	db	255
  1165   00F03D  FF                 	db	255
  1166   00F03E  FF                 	db	255
  1167   00F03F  FF                 	db	255
  1168   00F040  FF                 	db	255
  1169   00F041  FF                 	db	255
  1170   00F042  FF                 	db	255
  1171   00F043  FF                 	db	255
  1172   00F044  FF                 	db	255
  1173   00F045  FF                 	db	255
  1174   00F046  FF                 	db	255
  1175   00F047  FF                 	db	255
  1176   00F048  FF                 	db	255
  1177   00F049  FF                 	db	255
  1178   00F04A  FF                 	db	255
  1179   00F04B  FF                 	db	255
  1180   00F04C  FF                 	db	255
  1181   00F04D  FF                 	db	255
  1182   00F04E  FF                 	db	255
  1183   00F04F  FF                 	db	255
  1184   00F050  FF                 	db	255
  1185   00F051  FF                 	db	255
  1186   00F052  FF                 	db	255
  1187   00F053  FF                 	db	255
  1188   00F054  FF                 	db	255
  1189   00F055  FF                 	db	255
  1190   00F056  FF                 	db	255
  1191   00F057  FF                 	db	255
  1192   00F058  FF                 	db	255
  1193   00F059  FF                 	db	255
  1194   00F05A  FF                 	db	255
  1195   00F05B  FF                 	db	255
  1196   00F05C  FF                 	db	255
  1197   00F05D  FF                 	db	255
  1198   00F05E  FF                 	db	255
  1199   00F05F  FF                 	db	255
  1200   00F060  FF                 	db	255
  1201   00F061  FF                 	db	255
  1202   00F062  FF                 	db	255
  1203   00F063  FF                 	db	255
  1204   00F064  FF                 	db	255
  1205   00F065  FF                 	db	255
  1206   00F066  FF                 	db	255
  1207   00F067  FF                 	db	255
  1208   00F068  FF                 	db	255
  1209   00F069  FF                 	db	255
  1210   00F06A  FF                 	db	255
  1211   00F06B  FF                 	db	255
  1212   00F06C  FF                 	db	255
  1213   00F06D  FF                 	db	255
  1214   00F06E  FF                 	db	255
  1215   00F06F  FF                 	db	255
  1216   00F070  FF                 	db	255
  1217   00F071  FF                 	db	255
  1218   00F072  FF                 	db	255
  1219   00F073  FF                 	db	255
  1220   00F074  FF                 	db	255
  1221   00F075  FF                 	db	255
  1222   00F076  FF                 	db	255
  1223   00F077  FF                 	db	255
  1224   00F078  FF                 	db	255
  1225   00F079  FF                 	db	255
  1226   00F07A  FF                 	db	255
  1227   00F07B  FF                 	db	255
  1228   00F07C  FF                 	db	255
  1229   00F07D  FF                 	db	255
  1230   00F07E  FF                 	db	255
  1231   00F07F  FF                 	db	255
  1232   00F080  FF                 	db	255
  1233   00F081  FF                 	db	255
  1234   00F082  FF                 	db	255
  1235   00F083  FF                 	db	255
  1236   00F084  FF                 	db	255
  1237   00F085  FF                 	db	255
  1238   00F086  FF                 	db	255
  1239   00F087  FF                 	db	255
  1240   00F088  FF                 	db	255
  1241   00F089  FF                 	db	255
  1242   00F08A  FF                 	db	255
  1243   00F08B  FF                 	db	255
  1244   00F08C  FF                 	db	255
  1245   00F08D  FF                 	db	255
  1246   00F08E  FF                 	db	255
  1247   00F08F  FF                 	db	255
  1248   00F090  FF                 	db	255
  1249   00F091  FF                 	db	255
  1250   00F092  FF                 	db	255
  1251   00F093  FF                 	db	255
  1252   00F094  FF                 	db	255
  1253   00F095  FF                 	db	255
  1254   00F096  FF                 	db	255
  1255   00F097  FF                 	db	255
  1256   00F098  FF                 	db	255
  1257   00F099  FF                 	db	255
  1258   00F09A  FF                 	db	255
  1259   00F09B  FF                 	db	255
  1260   00F09C  FF                 	db	255
  1261   00F09D  FF                 	db	255
  1262   00F09E  FF                 	db	255
  1263   00F09F  FF                 	db	255
  1264   00F0A0  FF                 	db	255
  1265   00F0A1  FF                 	db	255
  1266   00F0A2  FF                 	db	255
  1267   00F0A3  FF                 	db	255
  1268   00F0A4  FF                 	db	255
  1269   00F0A5  FF                 	db	255
  1270   00F0A6  FF                 	db	255
  1271   00F0A7  FF                 	db	255
  1272   00F0A8  FF                 	db	255
  1273   00F0A9  FF                 	db	255
  1274   00F0AA  FF                 	db	255
  1275   00F0AB  FF                 	db	255
  1276   00F0AC  FF                 	db	255
  1277   00F0AD  FF                 	db	255
  1278   00F0AE  FF                 	db	255
  1279   00F0AF  FF                 	db	255
  1280   00F0B0  FF                 	db	255
  1281   00F0B1  FF                 	db	255
  1282   00F0B2  FF                 	db	255
  1283   00F0B3  FF                 	db	255
  1284   00F0B4  FF                 	db	255
  1285   00F0B5  FF                 	db	255
  1286   00F0B6  FF                 	db	255
  1287   00F0B7  FF                 	db	255
  1288   00F0B8  FF                 	db	255
  1289   00F0B9  FF                 	db	255
  1290   00F0BA  FF                 	db	255
  1291   00F0BB  FF                 	db	255
  1292   00F0BC  FF                 	db	255
  1293   00F0BD  FF                 	db	255
  1294   00F0BE  FF                 	db	255
  1295   00F0BF  FF                 	db	255
  1296   00F0C0  FF                 	db	255
  1297   00F0C1  FF                 	db	255
  1298   00F0C2  FF                 	db	255
  1299   00F0C3  FF                 	db	255
  1300   00F0C4  FF                 	db	255
  1301   00F0C5  FF                 	db	255
  1302   00F0C6  FF                 	db	255
  1303   00F0C7  FF                 	db	255
  1304   00F0C8  FF                 	db	255
  1305   00F0C9  FF                 	db	255
  1306   00F0CA  FF                 	db	255
  1307   00F0CB  FF                 	db	255
  1308   00F0CC  FF                 	db	255
  1309   00F0CD  FF                 	db	255
  1310   00F0CE  FF                 	db	255
  1311   00F0CF  FF                 	db	255
  1312   00F0D0  FF                 	db	255
  1313   00F0D1  FF                 	db	255
  1314   00F0D2  FF                 	db	255
  1315   00F0D3  FF                 	db	255
  1316   00F0D4  FF                 	db	255
  1317   00F0D5  FF                 	db	255
  1318   00F0D6  FF                 	db	255
  1319   00F0D7  FF                 	db	255
  1320   00F0D8  FF                 	db	255
  1321   00F0D9  FF                 	db	255
  1322   00F0DA  FF                 	db	255
  1323   00F0DB  FF                 	db	255
  1324   00F0DC  FF                 	db	255
  1325   00F0DD  FF                 	db	255
  1326   00F0DE  FF                 	db	255
  1327   00F0DF  FF                 	db	255
  1328   00F0E0  FF                 	db	255
  1329   00F0E1  FF                 	db	255
  1330   00F0E2  FF                 	db	255
  1331   00F0E3  FF                 	db	255
  1332   00F0E4  FF                 	db	255
  1333   00F0E5  FF                 	db	255
  1334   00F0E6  FF                 	db	255
  1335   00F0E7  FF                 	db	255
  1336   00F0E8  FF                 	db	255
  1337   00F0E9  FF                 	db	255
  1338   00F0EA  FF                 	db	255
  1339   00F0EB  FF                 	db	255
  1340   00F0EC  FF                 	db	255
  1341   00F0ED  FF                 	db	255
  1342   00F0EE  FF                 	db	255
  1343   00F0EF  FF                 	db	255
  1344   00F0F0  FF                 	db	255
  1345   00F0F1  FF                 	db	255
  1346   00F0F2  FF                 	db	255
  1347   00F0F3  FF                 	db	255
  1348   00F0F4  FF                 	db	255
  1349   00F0F5  FF                 	db	255
  1350   00F0F6  FF                 	db	255
  1351   00F0F7  FF                 	db	255
  1352   00F0F8  FF                 	db	255
  1353   00F0F9  FF                 	db	255
  1354   00F0FA  FF                 	db	255
  1355   00F0FB  FF                 	db	255
  1356   00F0FC  FF                 	db	255
  1357   00F0FD  FF                 	db	255
  1358   00F0FE  FF                 	db	255
  1359   00F0FF  FF                 	db	255
  1360   00F100  FF                 	db	255
  1361   00F101  FF                 	db	255
  1362   00F102  FF                 	db	255
  1363   00F103  FF                 	db	255
  1364   00F104  FF                 	db	255
  1365   00F105  FF                 	db	255
  1366   00F106  FF                 	db	255
  1367   00F107  FF                 	db	255
  1368   00F108  FF                 	db	255
  1369   00F109  FF                 	db	255
  1370   00F10A  FF                 	db	255
  1371   00F10B  FF                 	db	255
  1372   00F10C  FF                 	db	255
  1373   00F10D  FF                 	db	255
  1374   00F10E  FF                 	db	255
  1375   00F10F  FF                 	db	255
  1376   00F110  FF                 	db	255
  1377   00F111  FF                 	db	255
  1378   00F112  FF                 	db	255
  1379   00F113  FF                 	db	255
  1380   00F114  FF                 	db	255
  1381   00F115  FF                 	db	255
  1382   00F116  FF                 	db	255
  1383   00F117  FF                 	db	255
  1384   00F118  FF                 	db	255
  1385   00F119  FF                 	db	255
  1386   00F11A  FF                 	db	255
  1387   00F11B  FF                 	db	255
  1388   00F11C  FF                 	db	255
  1389   00F11D  FF                 	db	255
  1390   00F11E  FF                 	db	255
  1391   00F11F  FF                 	db	255
  1392   00F120  FF                 	db	255
  1393   00F121  FF                 	db	255
  1394   00F122  FF                 	db	255
  1395   00F123  FF                 	db	255
  1396   00F124  FF                 	db	255
  1397   00F125  FF                 	db	255
  1398   00F126  FF                 	db	255
  1399   00F127  FF                 	db	255
  1400   00F128  FF                 	db	255
  1401   00F129  FF                 	db	255
  1402   00F12A  FF                 	db	255
  1403   00F12B  FF                 	db	255
  1404   00F12C  FF                 	db	255
  1405   00F12D  FF                 	db	255
  1406   00F12E  FF                 	db	255
  1407   00F12F  FF                 	db	255
  1408   00F130  FF                 	db	255
  1409   00F131  FF                 	db	255
  1410   00F132  FF                 	db	255
  1411   00F133  FF                 	db	255
  1412   00F134  FF                 	db	255
  1413   00F135  FF                 	db	255
  1414   00F136  FF                 	db	255
  1415   00F137  FF                 	db	255
  1416   00F138  FF                 	db	255
  1417   00F139  FF                 	db	255
  1418   00F13A  FF                 	db	255
  1419   00F13B  FF                 	db	255
  1420   00F13C  FF                 	db	255
  1421   00F13D  FF                 	db	255
  1422   00F13E  FF                 	db	255
  1423   00F13F  FF                 	db	255
  1424   00F140  FF                 	db	255
  1425   00F141  FF                 	db	255
  1426   00F142  FF                 	db	255
  1427   00F143  FF                 	db	255
  1428   00F144  FF                 	db	255
  1429   00F145  FF                 	db	255
  1430   00F146  FF                 	db	255
  1431   00F147  FF                 	db	255
  1432   00F148  FF                 	db	255
  1433   00F149  FF                 	db	255
  1434   00F14A  FF                 	db	255
  1435   00F14B  FF                 	db	255
  1436   00F14C  FF                 	db	255
  1437   00F14D  FF                 	db	255
  1438   00F14E  FF                 	db	255
  1439   00F14F  FF                 	db	255
  1440   00F150  FF                 	db	255
  1441   00F151  FF                 	db	255
  1442   00F152  FF                 	db	255
  1443   00F153  FF                 	db	255
  1444   00F154  FF                 	db	255
  1445   00F155  FF                 	db	255
  1446   00F156  FF                 	db	255
  1447   00F157  FF                 	db	255
  1448   00F158  FF                 	db	255
  1449   00F159  FF                 	db	255
  1450   00F15A  FF                 	db	255
  1451   00F15B  FF                 	db	255
  1452   00F15C  FF                 	db	255
  1453   00F15D  FF                 	db	255
  1454   00F15E  FF                 	db	255
  1455   00F15F  FF                 	db	255
  1456   00F160  FF                 	db	255
  1457   00F161  FF                 	db	255
  1458   00F162  FF                 	db	255
  1459   00F163  FF                 	db	255
  1460   00F164  FF                 	db	255
  1461   00F165  FF                 	db	255
  1462   00F166  FF                 	db	255
  1463   00F167  FF                 	db	255
  1464   00F168  FF                 	db	255
  1465   00F169  FF                 	db	255
  1466   00F16A  FF                 	db	255
  1467   00F16B  FF                 	db	255
  1468   00F16C  FF                 	db	255
  1469   00F16D  FF                 	db	255
  1470   00F16E  FF                 	db	255
  1471   00F16F  FF                 	db	255
  1472   00F170  FF                 	db	255
  1473   00F171  FF                 	db	255
  1474   00F172  FF                 	db	255
  1475   00F173  FF                 	db	255
  1476   00F174  FF                 	db	255
  1477   00F175  FF                 	db	255
  1478   00F176  FF                 	db	255
  1479   00F177  FF                 	db	255
  1480   00F178  FF                 	db	255
  1481   00F179  FF                 	db	255
  1482   00F17A  FF                 	db	255
  1483   00F17B  FF                 	db	255
  1484   00F17C  FF                 	db	255
  1485   00F17D  FF                 	db	255
  1486   00F17E  FF                 	db	255
  1487   00F17F  FF                 	db	255
  1488   00F180  FF                 	db	255
  1489   00F181  FF                 	db	255
  1490   00F182  FF                 	db	255
  1491   00F183  FF                 	db	255
  1492   00F184  FF                 	db	255
  1493   00F185  FF                 	db	255
  1494   00F186  FF                 	db	255
  1495   00F187  FF                 	db	255
  1496   00F188  FF                 	db	255
  1497   00F189  FF                 	db	255
  1498   00F18A  FF                 	db	255
  1499   00F18B  FF                 	db	255
  1500   00F18C  FF                 	db	255
  1501   00F18D  FF                 	db	255
  1502   00F18E  FF                 	db	255
  1503   00F18F  FF                 	db	255
  1504   00F190  FF                 	db	255
  1505   00F191  FF                 	db	255
  1506   00F192  FF                 	db	255
  1507   00F193  FF                 	db	255
  1508   00F194  FF                 	db	255
  1509   00F195  FF                 	db	255
  1510   00F196  FF                 	db	255
  1511   00F197  FF                 	db	255
  1512   00F198  FF                 	db	255
  1513   00F199  FF                 	db	255
  1514   00F19A  FF                 	db	255
  1515   00F19B  FF                 	db	255
  1516   00F19C  FF                 	db	255
  1517   00F19D  FF                 	db	255
  1518   00F19E  FF                 	db	255
  1519   00F19F  FF                 	db	255
  1520   00F1A0  FF                 	db	255
  1521   00F1A1  FF                 	db	255
  1522   00F1A2  FF                 	db	255
  1523   00F1A3  FF                 	db	255
  1524   00F1A4  FF                 	db	255
  1525   00F1A5  FF                 	db	255
  1526   00F1A6  FF                 	db	255
  1527   00F1A7  FF                 	db	255
  1528   00F1A8  FF                 	db	255
  1529   00F1A9  FF                 	db	255
  1530   00F1AA  FF                 	db	255
  1531   00F1AB  FF                 	db	255
  1532   00F1AC  FF                 	db	255
  1533   00F1AD  FF                 	db	255
  1534   00F1AE  FF                 	db	255
  1535   00F1AF  FF                 	db	255
  1536   00F1B0  FF                 	db	255
  1537   00F1B1  FF                 	db	255
  1538   00F1B2  FF                 	db	255
  1539   00F1B3  FF                 	db	255
  1540   00F1B4  FF                 	db	255
  1541   00F1B5  FF                 	db	255
  1542   00F1B6  FF                 	db	255
  1543   00F1B7  FF                 	db	255
  1544   00F1B8  FF                 	db	255
  1545   00F1B9  FF                 	db	255
  1546   00F1BA  FF                 	db	255
  1547   00F1BB  FF                 	db	255
  1548   00F1BC  FF                 	db	255
  1549   00F1BD  FF                 	db	255
  1550   00F1BE  FF                 	db	255
  1551   00F1BF  FF                 	db	255
  1552   00F1C0  FF                 	db	255
  1553   00F1C1  FF                 	db	255
  1554   00F1C2  FF                 	db	255
  1555   00F1C3  FF                 	db	255
  1556   00F1C4  FF                 	db	255
  1557   00F1C5  FF                 	db	255
  1558   00F1C6  FF                 	db	255
  1559   00F1C7  FF                 	db	255
  1560   00F1C8  FF                 	db	255
  1561   00F1C9  FF                 	db	255
  1562   00F1CA  FF                 	db	255
  1563   00F1CB  FF                 	db	255
  1564   00F1CC  FF                 	db	255
  1565   00F1CD  FF                 	db	255
  1566   00F1CE  FF                 	db	255
  1567   00F1CF  FF                 	db	255
  1568   00F1D0  FF                 	db	255
  1569   00F1D1  FF                 	db	255
  1570   00F1D2  FF                 	db	255
  1571   00F1D3  FF                 	db	255
  1572   00F1D4  FF                 	db	255
  1573   00F1D5  FF                 	db	255
  1574   00F1D6  FF                 	db	255
  1575   00F1D7  FF                 	db	255
  1576   00F1D8  FF                 	db	255
  1577   00F1D9  FF                 	db	255
  1578   00F1DA  FF                 	db	255
  1579   00F1DB  FF                 	db	255
  1580   00F1DC  FF                 	db	255
  1581   00F1DD  FF                 	db	255
  1582   00F1DE  FF                 	db	255
  1583   00F1DF  FF                 	db	255
  1584   00F1E0  FF                 	db	255
  1585   00F1E1  FF                 	db	255
  1586   00F1E2  FF                 	db	255
  1587   00F1E3  FF                 	db	255
  1588   00F1E4  FF                 	db	255
  1589   00F1E5  FF                 	db	255
  1590   00F1E6  FF                 	db	255
  1591   00F1E7  FF                 	db	255
  1592   00F1E8  FF                 	db	255
  1593   00F1E9  FF                 	db	255
  1594   00F1EA  FF                 	db	255
  1595   00F1EB  FF                 	db	255
  1596   00F1EC  FF                 	db	255
  1597   00F1ED  FF                 	db	255
  1598   00F1EE  FF                 	db	255
  1599   00F1EF  FF                 	db	255
  1600   00F1F0  FF                 	db	255
  1601   00F1F1  FF                 	db	255
  1602   00F1F2  FF                 	db	255
  1603   00F1F3  FF                 	db	255
  1604   00F1F4  FF                 	db	255
  1605   00F1F5  FF                 	db	255
  1606   00F1F6  FF                 	db	255
  1607   00F1F7  FF                 	db	255
  1608   00F1F8  FF                 	db	255
  1609   00F1F9  FF                 	db	255
  1610   00F1FA  FF                 	db	255
  1611   00F1FB  FF                 	db	255
  1612   00F1FC  FF                 	db	255
  1613   00F1FD  FF                 	db	255
  1614   00F1FE  FF                 	db	255
  1615   00F1FF  FF                 	db	255
  1616   00F200  FF                 	db	255
  1617   00F201  FF                 	db	255
  1618   00F202  FF                 	db	255
  1619   00F203  FF                 	db	255
  1620   00F204  FF                 	db	255
  1621   00F205  FF                 	db	255
  1622   00F206  FF                 	db	255
  1623   00F207  FF                 	db	255
  1624   00F208  FF                 	db	255
  1625   00F209  FF                 	db	255
  1626   00F20A  FF                 	db	255
  1627   00F20B  FF                 	db	255
  1628   00F20C  FF                 	db	255
  1629   00F20D  FF                 	db	255
  1630   00F20E  FF                 	db	255
  1631   00F20F  FF                 	db	255
  1632   00F210  FF                 	db	255
  1633   00F211  FF                 	db	255
  1634   00F212  FF                 	db	255
  1635   00F213  FF                 	db	255
  1636   00F214  FF                 	db	255
  1637   00F215  FF                 	db	255
  1638   00F216  FF                 	db	255
  1639   00F217  FF                 	db	255
  1640   00F218  FF                 	db	255
  1641   00F219  FF                 	db	255
  1642   00F21A  FF                 	db	255
  1643   00F21B  FF                 	db	255
  1644   00F21C  FF                 	db	255
  1645   00F21D  FF                 	db	255
  1646   00F21E  FF                 	db	255
  1647   00F21F  FF                 	db	255
  1648   00F220  FF                 	db	255
  1649   00F221  FF                 	db	255
  1650   00F222  FF                 	db	255
  1651   00F223  FF                 	db	255
  1652   00F224  FF                 	db	255
  1653   00F225  FF                 	db	255
  1654   00F226  FF                 	db	255
  1655   00F227  FF                 	db	255
  1656   00F228  FF                 	db	255
  1657   00F229  FF                 	db	255
  1658   00F22A  FF                 	db	255
  1659   00F22B  FF                 	db	255
  1660   00F22C  FF                 	db	255
  1661   00F22D  FF                 	db	255
  1662   00F22E  FF                 	db	255
  1663   00F22F  FF                 	db	255
  1664   00F230  FF                 	db	255
  1665   00F231  FF                 	db	255
  1666   00F232  FF                 	db	255
  1667   00F233  FF                 	db	255
  1668   00F234  FF                 	db	255
  1669   00F235  FF                 	db	255
  1670   00F236  FF                 	db	255
  1671   00F237  FF                 	db	255
  1672   00F238  FF                 	db	255
  1673   00F239  FF                 	db	255
  1674   00F23A  FF                 	db	255
  1675   00F23B  FF                 	db	255
  1676   00F23C  FF                 	db	255
  1677   00F23D  FF                 	db	255
  1678   00F23E  FF                 	db	255
  1679   00F23F  FF                 	db	255
  1680   00F240  FF                 	db	255
  1681   00F241  FF                 	db	255
  1682   00F242  FF                 	db	255
  1683   00F243  FF                 	db	255
  1684   00F244  FF                 	db	255
  1685   00F245  FF                 	db	255
  1686   00F246  FF                 	db	255
  1687   00F247  FF                 	db	255
  1688   00F248  FF                 	db	255
  1689   00F249  FF                 	db	255
  1690   00F24A  FF                 	db	255
  1691   00F24B  FF                 	db	255
  1692   00F24C  FF                 	db	255
  1693   00F24D  FF                 	db	255
  1694   00F24E  FF                 	db	255
  1695   00F24F  FF                 	db	255
  1696   00F250  FF                 	db	255
  1697   00F251  FF                 	db	255
  1698   00F252  FF                 	db	255
  1699   00F253  FF                 	db	255
  1700   00F254  FF                 	db	255
  1701   00F255  FF                 	db	255
  1702   00F256  FF                 	db	255
  1703   00F257  FF                 	db	255
  1704   00F258  FF                 	db	255
  1705   00F259  FF                 	db	255
  1706   00F25A  FF                 	db	255
  1707   00F25B  FF                 	db	255
  1708   00F25C  FF                 	db	255
  1709   00F25D  FF                 	db	255
  1710   00F25E  FF                 	db	255
  1711   00F25F  FF                 	db	255
  1712   00F260  FF                 	db	255
  1713   00F261  FF                 	db	255
  1714   00F262  FF                 	db	255
  1715   00F263  FF                 	db	255
  1716   00F264  FF                 	db	255
  1717   00F265  FF                 	db	255
  1718   00F266  FF                 	db	255
  1719   00F267  FF                 	db	255
  1720   00F268  FF                 	db	255
  1721   00F269  FF                 	db	255
  1722   00F26A  FF                 	db	255
  1723   00F26B  FF                 	db	255
  1724   00F26C  FF                 	db	255
  1725   00F26D  FF                 	db	255
  1726   00F26E  FF                 	db	255
  1727   00F26F  FF                 	db	255
  1728   00F270  FF                 	db	255
  1729   00F271  FF                 	db	255
  1730   00F272  FF                 	db	255
  1731   00F273  FF                 	db	255
  1732   00F274  FF                 	db	255
  1733   00F275  FF                 	db	255
  1734   00F276  FF                 	db	255
  1735   00F277  FF                 	db	255
  1736   00F278  FF                 	db	255
  1737   00F279  FF                 	db	255
  1738   00F27A  FF                 	db	255
  1739   00F27B  FF                 	db	255
  1740   00F27C  FF                 	db	255
  1741   00F27D  FF                 	db	255
  1742   00F27E  FF                 	db	255
  1743   00F27F  FF                 	db	255
  1744   00F280  FF                 	db	255
  1745   00F281  FF                 	db	255
  1746   00F282  FF                 	db	255
  1747   00F283  FF                 	db	255
  1748   00F284  FF                 	db	255
  1749   00F285  FF                 	db	255
  1750   00F286  FF                 	db	255
  1751   00F287  FF                 	db	255
  1752   00F288  FF                 	db	255
  1753   00F289  FF                 	db	255
  1754   00F28A  FF                 	db	255
  1755   00F28B  FF                 	db	255
  1756   00F28C  FF                 	db	255
  1757   00F28D  FF                 	db	255
  1758   00F28E  FF                 	db	255
  1759   00F28F  FF                 	db	255
  1760   00F290  FF                 	db	255
  1761   00F291  FF                 	db	255
  1762   00F292  FF                 	db	255
  1763   00F293  FF                 	db	255
  1764   00F294  FF                 	db	255
  1765   00F295  FF                 	db	255
  1766   00F296  FF                 	db	255
  1767   00F297  FF                 	db	255
  1768   00F298  FF                 	db	255
  1769   00F299  FF                 	db	255
  1770   00F29A  FF                 	db	255
  1771   00F29B  FF                 	db	255
  1772   00F29C  FF                 	db	255
  1773   00F29D  FF                 	db	255
  1774   00F29E  FF                 	db	255
  1775   00F29F  FF                 	db	255
  1776   00F2A0  FF                 	db	255
  1777   00F2A1  FF                 	db	255
  1778   00F2A2  FF                 	db	255
  1779   00F2A3  FF                 	db	255
  1780   00F2A4  FF                 	db	255
  1781   00F2A5  FF                 	db	255
  1782   00F2A6  FF                 	db	255
  1783   00F2A7  FF                 	db	255
  1784   00F2A8  FF                 	db	255
  1785   00F2A9  FF                 	db	255
  1786   00F2AA  FF                 	db	255
  1787   00F2AB  FF                 	db	255
  1788   00F2AC  FF                 	db	255
  1789   00F2AD  FF                 	db	255
  1790   00F2AE  FF                 	db	255
  1791   00F2AF  FF                 	db	255
  1792   00F2B0  FF                 	db	255
  1793   00F2B1  FF                 	db	255
  1794   00F2B2  FF                 	db	255
  1795   00F2B3  FF                 	db	255
  1796   00F2B4  FF                 	db	255
  1797   00F2B5  FF                 	db	255
  1798   00F2B6  FF                 	db	255
  1799   00F2B7  FF                 	db	255
  1800   00F2B8  FF                 	db	255
  1801   00F2B9  FF                 	db	255
  1802   00F2BA  FF                 	db	255
  1803   00F2BB  FF                 	db	255
  1804   00F2BC  FF                 	db	255
  1805   00F2BD  FF                 	db	255
  1806   00F2BE  FF                 	db	255
  1807   00F2BF  FF                 	db	255
  1808   00F2C0  FF                 	db	255
  1809   00F2C1  FF                 	db	255
  1810   00F2C2  FF                 	db	255
  1811   00F2C3  FF                 	db	255
  1812   00F2C4  FF                 	db	255
  1813   00F2C5  FF                 	db	255
  1814   00F2C6  FF                 	db	255
  1815   00F2C7  FF                 	db	255
  1816   00F2C8  FF                 	db	255
  1817   00F2C9  FF                 	db	255
  1818   00F2CA  FF                 	db	255
  1819   00F2CB  FF                 	db	255
  1820   00F2CC  FF                 	db	255
  1821   00F2CD  FF                 	db	255
  1822   00F2CE  FF                 	db	255
  1823   00F2CF  FF                 	db	255
  1824   00F2D0  FF                 	db	255
  1825   00F2D1  FF                 	db	255
  1826   00F2D2  FF                 	db	255
  1827   00F2D3  FF                 	db	255
  1828   00F2D4  FF                 	db	255
  1829   00F2D5  FF                 	db	255
  1830   00F2D6  FF                 	db	255
  1831   00F2D7  FF                 	db	255
  1832   00F2D8  FF                 	db	255
  1833   00F2D9  FF                 	db	255
  1834   00F2DA  FF                 	db	255
  1835   00F2DB  FF                 	db	255
  1836   00F2DC  FF                 	db	255
  1837   00F2DD  FF                 	db	255
  1838   00F2DE  FF                 	db	255
  1839   00F2DF  FF                 	db	255
  1840   00F2E0  FF                 	db	255
  1841   00F2E1  FF                 	db	255
  1842   00F2E2  FF                 	db	255
  1843   00F2E3  FF                 	db	255
  1844   00F2E4  FF                 	db	255
  1845   00F2E5  FF                 	db	255
  1846   00F2E6  FF                 	db	255
  1847   00F2E7  FF                 	db	255
  1848   00F2E8  FF                 	db	255
  1849   00F2E9  FF                 	db	255
  1850   00F2EA  FF                 	db	255
  1851   00F2EB  FF                 	db	255
  1852   00F2EC  FF                 	db	255
  1853   00F2ED  FF                 	db	255
  1854   00F2EE  FF                 	db	255
  1855   00F2EF  FF                 	db	255
  1856   00F2F0  FF                 	db	255
  1857   00F2F1  FF                 	db	255
  1858   00F2F2  FF                 	db	255
  1859   00F2F3  FF                 	db	255
  1860   00F2F4  FF                 	db	255
  1861   00F2F5  FF                 	db	255
  1862   00F2F6  FF                 	db	255
  1863   00F2F7  FF                 	db	255
  1864   00F2F8  FF                 	db	255
  1865   00F2F9  FF                 	db	255
  1866   00F2FA  FF                 	db	255
  1867   00F2FB  FF                 	db	255
  1868   00F2FC  FF                 	db	255
  1869   00F2FD  FF                 	db	255
  1870   00F2FE  FF                 	db	255
  1871   00F2FF  FF                 	db	255
  1872   00F300  FF                 	db	255
  1873   00F301  FF                 	db	255
  1874   00F302  FF                 	db	255
  1875   00F303  FF                 	db	255
  1876   00F304  FF                 	db	255
  1877   00F305  FF                 	db	255
  1878   00F306  FF                 	db	255
  1879   00F307  FF                 	db	255
  1880   00F308  FF                 	db	255
  1881   00F309  FF                 	db	255
  1882   00F30A  FF                 	db	255
  1883   00F30B  FF                 	db	255
  1884   00F30C  FF                 	db	255
  1885   00F30D  FF                 	db	255
  1886   00F30E  FF                 	db	255
  1887   00F30F  FF                 	db	255
  1888   00F310  FF                 	db	255
  1889   00F311  FF                 	db	255
  1890   00F312  FF                 	db	255
  1891   00F313  FF                 	db	255
  1892   00F314  FF                 	db	255
  1893   00F315  FF                 	db	255
  1894   00F316  FF                 	db	255
  1895   00F317  FF                 	db	255
  1896   00F318  FF                 	db	255
  1897   00F319  FF                 	db	255
  1898   00F31A  FF                 	db	255
  1899   00F31B  FF                 	db	255
  1900   00F31C  FF                 	db	255
  1901   00F31D  FF                 	db	255
  1902   00F31E  FF                 	db	255
  1903   00F31F  FF                 	db	255
  1904   00F320  FF                 	db	255
  1905   00F321  FF                 	db	255
  1906   00F322  FF                 	db	255
  1907   00F323  FF                 	db	255
  1908   00F324  FF                 	db	255
  1909   00F325  FF                 	db	255
  1910   00F326  FF                 	db	255
  1911   00F327  FF                 	db	255
  1912   00F328  FF                 	db	255
  1913   00F329  FF                 	db	255
  1914   00F32A  FF                 	db	255
  1915   00F32B  FF                 	db	255
  1916   00F32C  FF                 	db	255
  1917   00F32D  FF                 	db	255
  1918   00F32E  FF                 	db	255
  1919   00F32F  FF                 	db	255
  1920   00F330  FF                 	db	255
  1921   00F331  FF                 	db	255
  1922   00F332  FF                 	db	255
  1923   00F333  FF                 	db	255
  1924   00F334  FF                 	db	255
  1925   00F335  FF                 	db	255
  1926   00F336  FF                 	db	255
  1927   00F337  FF                 	db	255
  1928   00F338  FF                 	db	255
  1929   00F339  FF                 	db	255
  1930   00F33A  FF                 	db	255
  1931   00F33B  FF                 	db	255
  1932   00F33C  FF                 	db	255
  1933   00F33D  FF                 	db	255
  1934   00F33E  FF                 	db	255
  1935   00F33F  FF                 	db	255
  1936   00F340  FF                 	db	255
  1937   00F341  FF                 	db	255
  1938   00F342  FF                 	db	255
  1939   00F343  FF                 	db	255
  1940   00F344  FF                 	db	255
  1941   00F345  FF                 	db	255
  1942   00F346  FF                 	db	255
  1943   00F347  FF                 	db	255
  1944   00F348  FF                 	db	255
  1945   00F349  FF                 	db	255
  1946   00F34A  FF                 	db	255
  1947   00F34B  FF                 	db	255
  1948   00F34C  FF                 	db	255
  1949   00F34D  FF                 	db	255
  1950   00F34E  FF                 	db	255
  1951   00F34F  FF                 	db	255
  1952   00F350  FF                 	db	255
  1953   00F351  FF                 	db	255
  1954   00F352  FF                 	db	255
  1955   00F353  FF                 	db	255
  1956   00F354  FF                 	db	255
  1957   00F355  FF                 	db	255
  1958   00F356  FF                 	db	255
  1959   00F357  FF                 	db	255
  1960   00F358  FF                 	db	255
  1961   00F359  FF                 	db	255
  1962   00F35A  FF                 	db	255
  1963   00F35B  FF                 	db	255
  1964   00F35C  FF                 	db	255
  1965   00F35D  FF                 	db	255
  1966   00F35E  FF                 	db	255
  1967   00F35F  FF                 	db	255
  1968   00F360  FF                 	db	255
  1969   00F361  FF                 	db	255
  1970   00F362  FF                 	db	255
  1971   00F363  FF                 	db	255
  1972   00F364  FF                 	db	255
  1973   00F365  FF                 	db	255
  1974   00F366  FF                 	db	255
  1975   00F367  FF                 	db	255
  1976   00F368  FF                 	db	255
  1977   00F369  FF                 	db	255
  1978   00F36A  FF                 	db	255
  1979   00F36B  FF                 	db	255
  1980   00F36C  FF                 	db	255
  1981   00F36D  FF                 	db	255
  1982   00F36E  FF                 	db	255
  1983   00F36F  FF                 	db	255
  1984   00F370  FF                 	db	255
  1985   00F371  FF                 	db	255
  1986   00F372  FF                 	db	255
  1987   00F373  FF                 	db	255
  1988   00F374  FF                 	db	255
  1989   00F375  FF                 	db	255
  1990   00F376  FF                 	db	255
  1991   00F377  FF                 	db	255
  1992   00F378  FF                 	db	255
  1993   00F379  FF                 	db	255
  1994   00F37A  FF                 	db	255
  1995   00F37B  FF                 	db	255
  1996   00F37C  FF                 	db	255
  1997   00F37D  FF                 	db	255
  1998   00F37E  FF                 	db	255
  1999   00F37F  FF                 	db	255
  2000   00F380  FF                 	db	255
  2001   00F381  FF                 	db	255
  2002   00F382  FF                 	db	255
  2003   00F383  FF                 	db	255
  2004   00F384  FF                 	db	255
  2005   00F385  FF                 	db	255
  2006   00F386  FF                 	db	255
  2007   00F387  FF                 	db	255
  2008   00F388  FF                 	db	255
  2009   00F389  FF                 	db	255
  2010   00F38A  FF                 	db	255
  2011   00F38B  FF                 	db	255
  2012   00F38C  FF                 	db	255
  2013   00F38D  FF                 	db	255
  2014   00F38E  FF                 	db	255
  2015   00F38F  FF                 	db	255
  2016   00F390  FF                 	db	255
  2017   00F391  FF                 	db	255
  2018   00F392  FF                 	db	255
  2019   00F393  FF                 	db	255
  2020   00F394  FF                 	db	255
  2021   00F395  FF                 	db	255
  2022   00F396  FF                 	db	255
  2023   00F397  FF                 	db	255
  2024   00F398  FF                 	db	255
  2025   00F399  FF                 	db	255
  2026   00F39A  FF                 	db	255
  2027   00F39B  FF                 	db	255
  2028   00F39C  FF                 	db	255
  2029   00F39D  FF                 	db	255
  2030   00F39E  FF                 	db	255
  2031   00F39F  FF                 	db	255
  2032   00F3A0  FF                 	db	255
  2033   00F3A1  FF                 	db	255
  2034   00F3A2  FF                 	db	255
  2035   00F3A3  FF                 	db	255
  2036   00F3A4  FF                 	db	255
  2037   00F3A5  FF                 	db	255
  2038   00F3A6  FF                 	db	255
  2039   00F3A7  FF                 	db	255
  2040   00F3A8  FF                 	db	255
  2041   00F3A9  FF                 	db	255
  2042   00F3AA  FF                 	db	255
  2043   00F3AB  FF                 	db	255
  2044   00F3AC  FF                 	db	255
  2045   00F3AD  FF                 	db	255
  2046   00F3AE  FF                 	db	255
  2047   00F3AF  FF                 	db	255
  2048   00F3B0  FF                 	db	255
  2049   00F3B1  FF                 	db	255
  2050   00F3B2  FF                 	db	255
  2051   00F3B3  FF                 	db	255
  2052   00F3B4  FF                 	db	255
  2053   00F3B5  FF                 	db	255
  2054   00F3B6  FF                 	db	255
  2055   00F3B7  FF                 	db	255
  2056   00F3B8  FF                 	db	255
  2057   00F3B9  FF                 	db	255
  2058   00F3BA  FF                 	db	255
  2059   00F3BB  FF                 	db	255
  2060   00F3BC  FF                 	db	255
  2061   00F3BD  FF                 	db	255
  2062   00F3BE  FF                 	db	255
  2063   00F3BF  FF                 	db	255
  2064   00F3C0  FF                 	db	255
  2065   00F3C1  FF                 	db	255
  2066   00F3C2  FF                 	db	255
  2067   00F3C3  FF                 	db	255
  2068   00F3C4  FF                 	db	255
  2069   00F3C5  FF                 	db	255
  2070   00F3C6  FF                 	db	255
  2071   00F3C7  FF                 	db	255
  2072   00F3C8  FF                 	db	255
  2073   00F3C9  FF                 	db	255
  2074   00F3CA  FF                 	db	255
  2075   00F3CB  FF                 	db	255
  2076   00F3CC  FF                 	db	255
  2077   00F3CD  FF                 	db	255
  2078   00F3CE  FF                 	db	255
  2079   00F3CF  FF                 	db	255
  2080   00F3D0  FF                 	db	255
  2081   00F3D1  FF                 	db	255
  2082   00F3D2  FF                 	db	255
  2083   00F3D3  FF                 	db	255
  2084   00F3D4  FF                 	db	255
  2085   00F3D5  FF                 	db	255
  2086   00F3D6  FF                 	db	255
  2087   00F3D7  FF                 	db	255
  2088   00F3D8  FF                 	db	255
  2089   00F3D9  FF                 	db	255
  2090   00F3DA  FF                 	db	255
  2091   00F3DB  FF                 	db	255
  2092   00F3DC  FF                 	db	255
  2093   00F3DD  FF                 	db	255
  2094   00F3DE  FF                 	db	255
  2095   00F3DF  FF                 	db	255
  2096   00F3E0  FF                 	db	255
  2097   00F3E1  FF                 	db	255
  2098   00F3E2  FF                 	db	255
  2099   00F3E3  FF                 	db	255
  2100   00F3E4  FF                 	db	255
  2101   00F3E5  FF                 	db	255
  2102   00F3E6  FF                 	db	255
  2103   00F3E7  FF                 	db	255
  2104   00F3E8  FF                 	db	255
  2105   00F3E9  FF                 	db	255
  2106   00F3EA  FF                 	db	255
  2107   00F3EB  FF                 	db	255
  2108   00F3EC  FF                 	db	255
  2109   00F3ED  FF                 	db	255
  2110   00F3EE  FF                 	db	255
  2111   00F3EF  FF                 	db	255
  2112   00F3F0  FF                 	db	255
  2113   00F3F1  FF                 	db	255
  2114   00F3F2  FF                 	db	255
  2115   00F3F3  FF                 	db	255
  2116   00F3F4  FF                 	db	255
  2117   00F3F5  FF                 	db	255
  2118   00F3F6  FF                 	db	255
  2119   00F3F7  FF                 	db	255
  2120   00F3F8  FF                 	db	255
  2121   00F3F9  FF                 	db	255
  2122   00F3FA  FF                 	db	255
  2123   00F3FB  FF                 	db	255
  2124   00F3FC  FF                 	db	255
  2125   00F3FD  FF                 	db	255
  2126   00F3FE  FF                 	db	255
  2127   00F3FF  FF                 	db	255
  2128   00F400  FF                 	db	255
  2129   00F401  FF                 	db	255
  2130   00F402  FF                 	db	255
  2131   00F403  FF                 	db	255
  2132   00F404  FF                 	db	255
  2133   00F405  FF                 	db	255
  2134   00F406  FF                 	db	255
  2135   00F407  FF                 	db	255
  2136   00F408  FF                 	db	255
  2137   00F409  FF                 	db	255
  2138   00F40A  FF                 	db	255
  2139   00F40B  FF                 	db	255
  2140   00F40C  FF                 	db	255
  2141   00F40D  FF                 	db	255
  2142   00F40E  FF                 	db	255
  2143   00F40F  FF                 	db	255
  2144   00F410  FF                 	db	255
  2145   00F411  FF                 	db	255
  2146   00F412  FF                 	db	255
  2147   00F413  FF                 	db	255
  2148   00F414  FF                 	db	255
  2149   00F415  FF                 	db	255
  2150   00F416  FF                 	db	255
  2151   00F417  FF                 	db	255
  2152   00F418  FF                 	db	255
  2153   00F419  FF                 	db	255
  2154   00F41A  FF                 	db	255
  2155   00F41B  FF                 	db	255
  2156   00F41C  FF                 	db	255
  2157   00F41D  FF                 	db	255
  2158   00F41E  FF                 	db	255
  2159   00F41F  FF                 	db	255
  2160   00F420  FF                 	db	255
  2161   00F421  FF                 	db	255
  2162   00F422  FF                 	db	255
  2163   00F423  FF                 	db	255
  2164   00F424  FF                 	db	255
  2165   00F425  FF                 	db	255
  2166   00F426  FF                 	db	255
  2167   00F427  FF                 	db	255
  2168   00F428  FF                 	db	255
  2169   00F429  FF                 	db	255
  2170   00F42A  FF                 	db	255
  2171   00F42B  FF                 	db	255
  2172   00F42C  FF                 	db	255
  2173   00F42D  FF                 	db	255
  2174   00F42E  FF                 	db	255
  2175   00F42F  FF                 	db	255
  2176   00F430  FF                 	db	255
  2177   00F431  FF                 	db	255
  2178   00F432  FF                 	db	255
  2179   00F433  FF                 	db	255
  2180   00F434  FF                 	db	255
  2181   00F435  FF                 	db	255
  2182   00F436  FF                 	db	255
  2183   00F437  FF                 	db	255
  2184   00F438  FF                 	db	255
  2185   00F439  FF                 	db	255
  2186   00F43A  FF                 	db	255
  2187   00F43B  FF                 	db	255
  2188   00F43C  FF                 	db	255
  2189   00F43D  FF                 	db	255
  2190   00F43E  FF                 	db	255
  2191   00F43F  FF                 	db	255
  2192   00F440  FF                 	db	255
  2193   00F441  FF                 	db	255
  2194   00F442  FF                 	db	255
  2195   00F443  FF                 	db	255
  2196   00F444  FF                 	db	255
  2197   00F445  FF                 	db	255
  2198   00F446  FF                 	db	255
  2199   00F447  FF                 	db	255
  2200   00F448  FF                 	db	255
  2201   00F449  FF                 	db	255
  2202   00F44A  FF                 	db	255
  2203   00F44B  FF                 	db	255
  2204   00F44C  FF                 	db	255
  2205   00F44D  FF                 	db	255
  2206   00F44E  FF                 	db	255
  2207   00F44F  FF                 	db	255
  2208   00F450  FF                 	db	255
  2209   00F451  FF                 	db	255
  2210   00F452  FF                 	db	255
  2211   00F453  FF                 	db	255
  2212   00F454  FF                 	db	255
  2213   00F455  FF                 	db	255
  2214   00F456  FF                 	db	255
  2215   00F457  FF                 	db	255
  2216   00F458  FF                 	db	255
  2217   00F459  FF                 	db	255
  2218   00F45A  FF                 	db	255
  2219   00F45B  FF                 	db	255
  2220   00F45C  FF                 	db	255
  2221   00F45D  FF                 	db	255
  2222   00F45E  FF                 	db	255
  2223   00F45F  FF                 	db	255
  2224   00F460  FF                 	db	255
  2225   00F461  FF                 	db	255
  2226   00F462  FF                 	db	255
  2227   00F463  FF                 	db	255
  2228   00F464  FF                 	db	255
  2229   00F465  FF                 	db	255
  2230   00F466  FF                 	db	255
  2231   00F467  FF                 	db	255
  2232   00F468  FF                 	db	255
  2233   00F469  FF                 	db	255
  2234   00F46A  FF                 	db	255
  2235   00F46B  FF                 	db	255
  2236   00F46C  FF                 	db	255
  2237   00F46D  FF                 	db	255
  2238   00F46E  FF                 	db	255
  2239   00F46F  FF                 	db	255
  2240   00F470  FF                 	db	255
  2241   00F471  FF                 	db	255
  2242   00F472  FF                 	db	255
  2243   00F473  FF                 	db	255
  2244   00F474  FF                 	db	255
  2245   00F475  FF                 	db	255
  2246   00F476  FF                 	db	255
  2247   00F477  FF                 	db	255
  2248   00F478  FF                 	db	255
  2249   00F479  FF                 	db	255
  2250   00F47A  FF                 	db	255
  2251   00F47B  FF                 	db	255
  2252   00F47C  FF                 	db	255
  2253   00F47D  FF                 	db	255
  2254   00F47E  FF                 	db	255
  2255   00F47F  FF                 	db	255
  2256   00F480  FF                 	db	255
  2257   00F481  FF                 	db	255
  2258   00F482  FF                 	db	255
  2259   00F483  FF                 	db	255
  2260   00F484  FF                 	db	255
  2261   00F485  FF                 	db	255
  2262   00F486  FF                 	db	255
  2263   00F487  FF                 	db	255
  2264   00F488  FF                 	db	255
  2265   00F489  FF                 	db	255
  2266   00F48A  FF                 	db	255
  2267   00F48B  FF                 	db	255
  2268   00F48C  FF                 	db	255
  2269   00F48D  FF                 	db	255
  2270   00F48E  FF                 	db	255
  2271   00F48F  FF                 	db	255
  2272   00F490  FF                 	db	255
  2273   00F491  FF                 	db	255
  2274   00F492  FF                 	db	255
  2275   00F493  FF                 	db	255
  2276   00F494  FF                 	db	255
  2277   00F495  FF                 	db	255
  2278   00F496  FF                 	db	255
  2279   00F497  FF                 	db	255
  2280   00F498  FF                 	db	255
  2281   00F499  FF                 	db	255
  2282   00F49A  FF                 	db	255
  2283   00F49B  FF                 	db	255
  2284   00F49C  FF                 	db	255
  2285   00F49D  FF                 	db	255
  2286   00F49E  FF                 	db	255
  2287   00F49F  FF                 	db	255
  2288   00F4A0  FF                 	db	255
  2289   00F4A1  FF                 	db	255
  2290   00F4A2  FF                 	db	255
  2291   00F4A3  FF                 	db	255
  2292   00F4A4  FF                 	db	255
  2293   00F4A5  FF                 	db	255
  2294   00F4A6  FF                 	db	255
  2295   00F4A7  FF                 	db	255
  2296   00F4A8  FF                 	db	255
  2297   00F4A9  FF                 	db	255
  2298   00F4AA  FF                 	db	255
  2299   00F4AB  FF                 	db	255
  2300   00F4AC  FF                 	db	255
  2301   00F4AD  FF                 	db	255
  2302   00F4AE  FF                 	db	255
  2303   00F4AF  FF                 	db	255
  2304   00F4B0  FF                 	db	255
  2305   00F4B1  FF                 	db	255
  2306   00F4B2  FF                 	db	255
  2307   00F4B3  FF                 	db	255
  2308   00F4B4  FF                 	db	255
  2309   00F4B5  FF                 	db	255
  2310   00F4B6  FF                 	db	255
  2311   00F4B7  FF                 	db	255
  2312   00F4B8  FF                 	db	255
  2313   00F4B9  FF                 	db	255
  2314   00F4BA  FF                 	db	255
  2315   00F4BB  FF                 	db	255
  2316   00F4BC  FF                 	db	255
  2317   00F4BD  FF                 	db	255
  2318   00F4BE  FF                 	db	255
  2319   00F4BF  FF                 	db	255
  2320   00F4C0  FF                 	db	255
  2321   00F4C1  FF                 	db	255
  2322   00F4C2  FF                 	db	255
  2323   00F4C3  FF                 	db	255
  2324   00F4C4  FF                 	db	255
  2325   00F4C5  FF                 	db	255
  2326   00F4C6  FF                 	db	255
  2327   00F4C7  FF                 	db	255
  2328   00F4C8  FF                 	db	255
  2329   00F4C9  FF                 	db	255
  2330   00F4CA  FF                 	db	255
  2331   00F4CB  FF                 	db	255
  2332   00F4CC  FF                 	db	255
  2333   00F4CD  FF                 	db	255
  2334   00F4CE  FF                 	db	255
  2335   00F4CF  FF                 	db	255
  2336   00F4D0  FF                 	db	255
  2337   00F4D1  FF                 	db	255
  2338   00F4D2  FF                 	db	255
  2339   00F4D3  FF                 	db	255
  2340   00F4D4  FF                 	db	255
  2341   00F4D5  FF                 	db	255
  2342   00F4D6  FF                 	db	255
  2343   00F4D7  FF                 	db	255
  2344   00F4D8  FF                 	db	255
  2345   00F4D9  FF                 	db	255
  2346   00F4DA  FF                 	db	255
  2347   00F4DB  FF                 	db	255
  2348   00F4DC  FF                 	db	255
  2349   00F4DD  FF                 	db	255
  2350   00F4DE  FF                 	db	255
  2351   00F4DF  FF                 	db	255
  2352   00F4E0  FF                 	db	255
  2353   00F4E1  FF                 	db	255
  2354   00F4E2  FF                 	db	255
  2355   00F4E3  FF                 	db	255
  2356   00F4E4  FF                 	db	255
  2357   00F4E5  FF                 	db	255
  2358   00F4E6  FF                 	db	255
  2359   00F4E7  FF                 	db	255
  2360   00F4E8  FF                 	db	255
  2361   00F4E9  FF                 	db	255
  2362   00F4EA  FF                 	db	255
  2363   00F4EB  FF                 	db	255
  2364   00F4EC  FF                 	db	255
  2365   00F4ED  FF                 	db	255
  2366   00F4EE  FF                 	db	255
  2367   00F4EF  FF                 	db	255
  2368   00F4F0  FF                 	db	255
  2369   00F4F1  FF                 	db	255
  2370   00F4F2  FF                 	db	255
  2371   00F4F3  FF                 	db	255
  2372   00F4F4  FF                 	db	255
  2373   00F4F5  FF                 	db	255
  2374   00F4F6  FF                 	db	255
  2375   00F4F7  FF                 	db	255
  2376   00F4F8  FF                 	db	255
  2377   00F4F9  FF                 	db	255
  2378   00F4FA  FF                 	db	255
  2379   00F4FB  FF                 	db	255
  2380   00F4FC  FF                 	db	255
  2381   00F4FD  FF                 	db	255
  2382   00F4FE  FF                 	db	255
  2383   00F4FF  FF                 	db	255
  2384   00F500  FF                 	db	255
  2385   00F501  FF                 	db	255
  2386   00F502  FF                 	db	255
  2387   00F503  FF                 	db	255
  2388   00F504  FF                 	db	255
  2389   00F505  FF                 	db	255
  2390   00F506  FF                 	db	255
  2391   00F507  FF                 	db	255
  2392   00F508  FF                 	db	255
  2393   00F509  FF                 	db	255
  2394   00F50A  FF                 	db	255
  2395   00F50B  FF                 	db	255
  2396   00F50C  FF                 	db	255
  2397   00F50D  FF                 	db	255
  2398   00F50E  FF                 	db	255
  2399   00F50F  FF                 	db	255
  2400   00F510  FF                 	db	255
  2401   00F511  FF                 	db	255
  2402   00F512  FF                 	db	255
  2403   00F513  FF                 	db	255
  2404   00F514  FF                 	db	255
  2405   00F515  FF                 	db	255
  2406   00F516  FF                 	db	255
  2407   00F517  FF                 	db	255
  2408   00F518  FF                 	db	255
  2409   00F519  FF                 	db	255
  2410   00F51A  FF                 	db	255
  2411   00F51B  FF                 	db	255
  2412   00F51C  FF                 	db	255
  2413   00F51D  FF                 	db	255
  2414   00F51E  FF                 	db	255
  2415   00F51F  FF                 	db	255
  2416   00F520  FF                 	db	255
  2417   00F521  FF                 	db	255
  2418   00F522  FF                 	db	255
  2419   00F523  FF                 	db	255
  2420   00F524  FF                 	db	255
  2421   00F525  FF                 	db	255
  2422   00F526  FF                 	db	255
  2423   00F527  FF                 	db	255
  2424   00F528  FF                 	db	255
  2425   00F529  FF                 	db	255
  2426   00F52A  FF                 	db	255
  2427   00F52B  FF                 	db	255
  2428   00F52C  FF                 	db	255
  2429   00F52D  FF                 	db	255
  2430   00F52E  FF                 	db	255
  2431   00F52F  FF                 	db	255
  2432   00F530  FF                 	db	255
  2433   00F531  FF                 	db	255
  2434   00F532  FF                 	db	255
  2435   00F533  FF                 	db	255
  2436   00F534  FF                 	db	255
  2437   00F535  FF                 	db	255
  2438   00F536  FF                 	db	255
  2439   00F537  FF                 	db	255
  2440   00F538  FF                 	db	255
  2441   00F539  FF                 	db	255
  2442   00F53A  FF                 	db	255
  2443   00F53B  FF                 	db	255
  2444   00F53C  FF                 	db	255
  2445   00F53D  FF                 	db	255
  2446   00F53E  FF                 	db	255
  2447   00F53F  FF                 	db	255
  2448   00F540  FF                 	db	255
  2449   00F541  FF                 	db	255
  2450   00F542  FF                 	db	255
  2451   00F543  FF                 	db	255
  2452   00F544  FF                 	db	255
  2453   00F545  FF                 	db	255
  2454   00F546  FF                 	db	255
  2455   00F547  FF                 	db	255
  2456   00F548  FF                 	db	255
  2457   00F549  FF                 	db	255
  2458   00F54A  FF                 	db	255
  2459   00F54B  FF                 	db	255
  2460   00F54C  FF                 	db	255
  2461   00F54D  FF                 	db	255
  2462   00F54E  FF                 	db	255
  2463   00F54F  FF                 	db	255
  2464   00F550  FF                 	db	255
  2465   00F551  FF                 	db	255
  2466   00F552  FF                 	db	255
  2467   00F553  FF                 	db	255
  2468   00F554  FF                 	db	255
  2469   00F555  FF                 	db	255
  2470   00F556  FF                 	db	255
  2471   00F557  FF                 	db	255
  2472   00F558  FF                 	db	255
  2473   00F559  FF                 	db	255
  2474   00F55A  FF                 	db	255
  2475   00F55B  FF                 	db	255
  2476   00F55C  FF                 	db	255
  2477   00F55D  FF                 	db	255
  2478   00F55E  FF                 	db	255
  2479   00F55F  FF                 	db	255
  2480   00F560  FF                 	db	255
  2481   00F561  FF                 	db	255
  2482   00F562  FF                 	db	255
  2483   00F563  FF                 	db	255
  2484   00F564  FF                 	db	255
  2485   00F565  FF                 	db	255
  2486   00F566  FF                 	db	255
  2487   00F567  FF                 	db	255
  2488   00F568  FF                 	db	255
  2489   00F569  FF                 	db	255
  2490   00F56A  FF                 	db	255
  2491   00F56B  FF                 	db	255
  2492   00F56C  FF                 	db	255
  2493   00F56D  FF                 	db	255
  2494   00F56E  FF                 	db	255
  2495   00F56F  FF                 	db	255
  2496   00F570  FF                 	db	255
  2497   00F571  FF                 	db	255
  2498   00F572  FF                 	db	255
  2499   00F573  FF                 	db	255
  2500   00F574  FF                 	db	255
  2501   00F575  FF                 	db	255
  2502   00F576  FF                 	db	255
  2503   00F577  FF                 	db	255
  2504   00F578  FF                 	db	255
  2505   00F579  FF                 	db	255
  2506   00F57A  FF                 	db	255
  2507   00F57B  FF                 	db	255
  2508   00F57C  FF                 	db	255
  2509   00F57D  FF                 	db	255
  2510   00F57E  FF                 	db	255
  2511   00F57F  FF                 	db	255
  2512   00F580  FF                 	db	255
  2513   00F581  FF                 	db	255
  2514   00F582  FF                 	db	255
  2515   00F583  FF                 	db	255
  2516   00F584  FF                 	db	255
  2517   00F585  FF                 	db	255
  2518   00F586  FF                 	db	255
  2519   00F587  FF                 	db	255
  2520   00F588  FF                 	db	255
  2521   00F589  FF                 	db	255
  2522   00F58A  FF                 	db	255
  2523   00F58B  FF                 	db	255
  2524   00F58C  FF                 	db	255
  2525   00F58D  FF                 	db	255
  2526   00F58E  FF                 	db	255
  2527   00F58F  FF                 	db	255
  2528   00F590  FF                 	db	255
  2529   00F591  FF                 	db	255
  2530   00F592  FF                 	db	255
  2531   00F593  FF                 	db	255
  2532   00F594  FF                 	db	255
  2533   00F595  FF                 	db	255
  2534   00F596  FF                 	db	255
  2535   00F597  FF                 	db	255
  2536   00F598  FF                 	db	255
  2537   00F599  FF                 	db	255
  2538   00F59A  FF                 	db	255
  2539   00F59B  FF                 	db	255
  2540   00F59C  FF                 	db	255
  2541   00F59D  FF                 	db	255
  2542   00F59E  FF                 	db	255
  2543   00F59F  FF                 	db	255
  2544   00F5A0  FF                 	db	255
  2545   00F5A1  FF                 	db	255
  2546   00F5A2  FF                 	db	255
  2547   00F5A3  FF                 	db	255
  2548   00F5A4  FF                 	db	255
  2549   00F5A5  FF                 	db	255
  2550   00F5A6  FF                 	db	255
  2551   00F5A7  FF                 	db	255
  2552   00F5A8  FF                 	db	255
  2553   00F5A9  FF                 	db	255
  2554   00F5AA  FF                 	db	255
  2555   00F5AB  FF                 	db	255
  2556   00F5AC  FF                 	db	255
  2557   00F5AD  FF                 	db	255
  2558   00F5AE  FF                 	db	255
  2559   00F5AF  FF                 	db	255
  2560   00F5B0  FF                 	db	255
  2561   00F5B1  FF                 	db	255
  2562   00F5B2  FF                 	db	255
  2563   00F5B3  FF                 	db	255
  2564   00F5B4  FF                 	db	255
  2565   00F5B5  FF                 	db	255
  2566   00F5B6  FF                 	db	255
  2567   00F5B7  FF                 	db	255
  2568   00F5B8  FF                 	db	255
  2569   00F5B9  FF                 	db	255
  2570   00F5BA  FF                 	db	255
  2571   00F5BB  FF                 	db	255
  2572   00F5BC  FF                 	db	255
  2573   00F5BD  FF                 	db	255
  2574   00F5BE  FF                 	db	255
  2575   00F5BF  FF                 	db	255
  2576   00F5C0  FF                 	db	255
  2577   00F5C1  FF                 	db	255
  2578   00F5C2  FF                 	db	255
  2579   00F5C3  FF                 	db	255
  2580   00F5C4  FF                 	db	255
  2581   00F5C5  FF                 	db	255
  2582   00F5C6  FF                 	db	255
  2583   00F5C7  FF                 	db	255
  2584   00F5C8  FF                 	db	255
  2585   00F5C9  FF                 	db	255
  2586   00F5CA  FF                 	db	255
  2587   00F5CB  FF                 	db	255
  2588   00F5CC  FF                 	db	255
  2589   00F5CD  FF                 	db	255
  2590   00F5CE  FF                 	db	255
  2591   00F5CF  FF                 	db	255
  2592   00F5D0  FF                 	db	255
  2593   00F5D1  FF                 	db	255
  2594   00F5D2  FF                 	db	255
  2595   00F5D3  FF                 	db	255
  2596   00F5D4  FF                 	db	255
  2597   00F5D5  FF                 	db	255
  2598   00F5D6  FF                 	db	255
  2599   00F5D7  FF                 	db	255
  2600   00F5D8  FF                 	db	255
  2601   00F5D9  FF                 	db	255
  2602   00F5DA  FF                 	db	255
  2603   00F5DB  FF                 	db	255
  2604   00F5DC  FF                 	db	255
  2605   00F5DD  FF                 	db	255
  2606   00F5DE  FF                 	db	255
  2607   00F5DF  FF                 	db	255
  2608   00F5E0  FF                 	db	255
  2609   00F5E1  FF                 	db	255
  2610   00F5E2  FF                 	db	255
  2611   00F5E3  FF                 	db	255
  2612   00F5E4  FF                 	db	255
  2613   00F5E5  FF                 	db	255
  2614   00F5E6  FF                 	db	255
  2615   00F5E7  FF                 	db	255
  2616   00F5E8  FF                 	db	255
  2617   00F5E9  FF                 	db	255
  2618   00F5EA  FF                 	db	255
  2619   00F5EB  FF                 	db	255
  2620   00F5EC  FF                 	db	255
  2621   00F5ED  FF                 	db	255
  2622   00F5EE  FF                 	db	255
  2623   00F5EF  FF                 	db	255
  2624   00F5F0  FF                 	db	255
  2625   00F5F1  FF                 	db	255
  2626   00F5F2  FF                 	db	255
  2627   00F5F3  FF                 	db	255
  2628   00F5F4  FF                 	db	255
  2629   00F5F5  FF                 	db	255
  2630   00F5F6  FF                 	db	255
  2631   00F5F7  FF                 	db	255
  2632   00F5F8  FF                 	db	255
  2633   00F5F9  FF                 	db	255
  2634   00F5FA  FF                 	db	255
  2635   00F5FB  FF                 	db	255
  2636   00F5FC  FF                 	db	255
  2637   00F5FD  FF                 	db	255
  2638   00F5FE  FF                 	db	255
  2639   00F5FF  FF                 	db	255
  2640   00F600  FF                 	db	255
  2641   00F601  FF                 	db	255
  2642   00F602  FF                 	db	255
  2643   00F603  FF                 	db	255
  2644   00F604  FF                 	db	255
  2645   00F605  FF                 	db	255
  2646   00F606  FF                 	db	255
  2647   00F607  FF                 	db	255
  2648   00F608  FF                 	db	255
  2649   00F609  FF                 	db	255
  2650   00F60A  FF                 	db	255
  2651   00F60B  FF                 	db	255
  2652   00F60C  FF                 	db	255
  2653   00F60D  FF                 	db	255
  2654   00F60E  FF                 	db	255
  2655   00F60F  FF                 	db	255
  2656   00F610  FF                 	db	255
  2657   00F611  FF                 	db	255
  2658   00F612  FF                 	db	255
  2659   00F613  FF                 	db	255
  2660   00F614  FF                 	db	255
  2661   00F615  FF                 	db	255
  2662   00F616  FF                 	db	255
  2663   00F617  FF                 	db	255
  2664   00F618  FF                 	db	255
  2665   00F619  FF                 	db	255
  2666   00F61A  FF                 	db	255
  2667   00F61B  FF                 	db	255
  2668   00F61C  FF                 	db	255
  2669   00F61D  FF                 	db	255
  2670   00F61E  FF                 	db	255
  2671   00F61F  FF                 	db	255
  2672   00F620  FF                 	db	255
  2673   00F621  FF                 	db	255
  2674   00F622  FF                 	db	255
  2675   00F623  FF                 	db	255
  2676   00F624  FF                 	db	255
  2677   00F625  FF                 	db	255
  2678   00F626  FF                 	db	255
  2679   00F627  FF                 	db	255
  2680   00F628  FF                 	db	255
  2681   00F629  FF                 	db	255
  2682   00F62A  FF                 	db	255
  2683   00F62B  FF                 	db	255
  2684   00F62C  FF                 	db	255
  2685   00F62D  FF                 	db	255
  2686   00F62E  FF                 	db	255
  2687   00F62F  FF                 	db	255
  2688   00F630  FF                 	db	255
  2689   00F631  FF                 	db	255
  2690   00F632  FF                 	db	255
  2691   00F633  FF                 	db	255
  2692   00F634  FF                 	db	255
  2693   00F635  FF                 	db	255
  2694   00F636  FF                 	db	255
  2695   00F637  FF                 	db	255
  2696   00F638  FF                 	db	255
  2697   00F639  FF                 	db	255
  2698   00F63A  FF                 	db	255
  2699   00F63B  FF                 	db	255
  2700   00F63C  FF                 	db	255
  2701   00F63D  FF                 	db	255
  2702   00F63E  FF                 	db	255
  2703   00F63F  FF                 	db	255
  2704   00F640  FF                 	db	255
  2705   00F641  FF                 	db	255
  2706   00F642  FF                 	db	255
  2707   00F643  FF                 	db	255
  2708   00F644  FF                 	db	255
  2709   00F645  FF                 	db	255
  2710   00F646  FF                 	db	255
  2711   00F647  FF                 	db	255
  2712   00F648  FF                 	db	255
  2713   00F649  FF                 	db	255
  2714   00F64A  FF                 	db	255
  2715   00F64B  FF                 	db	255
  2716   00F64C  FF                 	db	255
  2717   00F64D  FF                 	db	255
  2718   00F64E  FF                 	db	255
  2719   00F64F  FF                 	db	255
  2720   00F650  FF                 	db	255
  2721   00F651  FF                 	db	255
  2722   00F652  FF                 	db	255
  2723   00F653  FF                 	db	255
  2724   00F654  FF                 	db	255
  2725   00F655  FF                 	db	255
  2726   00F656  FF                 	db	255
  2727   00F657  FF                 	db	255
  2728   00F658  FF                 	db	255
  2729   00F659  FF                 	db	255
  2730   00F65A  FF                 	db	255
  2731   00F65B  FF                 	db	255
  2732   00F65C  FF                 	db	255
  2733   00F65D  FF                 	db	255
  2734   00F65E  FF                 	db	255
  2735   00F65F  FF                 	db	255
  2736   00F660  FF                 	db	255
  2737   00F661  FF                 	db	255
  2738   00F662  FF                 	db	255
  2739   00F663  FF                 	db	255
  2740   00F664  FF                 	db	255
  2741   00F665  FF                 	db	255
  2742   00F666  FF                 	db	255
  2743   00F667  FF                 	db	255
  2744   00F668  FF                 	db	255
  2745   00F669  FF                 	db	255
  2746   00F66A  FF                 	db	255
  2747   00F66B  FF                 	db	255
  2748   00F66C  FF                 	db	255
  2749   00F66D  FF                 	db	255
  2750   00F66E  FF                 	db	255
  2751   00F66F  FF                 	db	255
  2752   00F670  FF                 	db	255
  2753   00F671  FF                 	db	255
  2754   00F672  FF                 	db	255
  2755   00F673  FF                 	db	255
  2756   00F674  FF                 	db	255
  2757   00F675  FF                 	db	255
  2758   00F676  FF                 	db	255
  2759   00F677  FF                 	db	255
  2760   00F678  FF                 	db	255
  2761   00F679  FF                 	db	255
  2762   00F67A  FF                 	db	255
  2763   00F67B  FF                 	db	255
  2764   00F67C  FF                 	db	255
  2765   00F67D  FF                 	db	255
  2766   00F67E  FF                 	db	255
  2767   00F67F  FF                 	db	255
  2768   00F680  FF                 	db	255
  2769   00F681  FF                 	db	255
  2770   00F682  FF                 	db	255
  2771   00F683  FF                 	db	255
  2772   00F684  FF                 	db	255
  2773   00F685  FF                 	db	255
  2774   00F686  FF                 	db	255
  2775   00F687  FF                 	db	255
  2776   00F688  FF                 	db	255
  2777   00F689  FF                 	db	255
  2778   00F68A  FF                 	db	255
  2779   00F68B  FF                 	db	255
  2780   00F68C  FF                 	db	255
  2781   00F68D  FF                 	db	255
  2782   00F68E  FF                 	db	255
  2783   00F68F  FF                 	db	255
  2784   00F690  FF                 	db	255
  2785   00F691  FF                 	db	255
  2786   00F692  FF                 	db	255
  2787   00F693  FF                 	db	255
  2788   00F694  FF                 	db	255
  2789   00F695  FF                 	db	255
  2790   00F696  FF                 	db	255
  2791   00F697  FF                 	db	255
  2792   00F698  FF                 	db	255
  2793   00F699  FF                 	db	255
  2794   00F69A  FF                 	db	255
  2795   00F69B  FF                 	db	255
  2796   00F69C  FF                 	db	255
  2797   00F69D  FF                 	db	255
  2798   00F69E  FF                 	db	255
  2799   00F69F  FF                 	db	255
  2800   00F6A0  FF                 	db	255
  2801   00F6A1  FF                 	db	255
  2802   00F6A2  FF                 	db	255
  2803   00F6A3  FF                 	db	255
  2804   00F6A4  FF                 	db	255
  2805   00F6A5  FF                 	db	255
  2806   00F6A6  FF                 	db	255
  2807   00F6A7  FF                 	db	255
  2808   00F6A8  FF                 	db	255
  2809   00F6A9  FF                 	db	255
  2810   00F6AA  FF                 	db	255
  2811   00F6AB  FF                 	db	255
  2812   00F6AC  FF                 	db	255
  2813   00F6AD  FF                 	db	255
  2814   00F6AE  FF                 	db	255
  2815   00F6AF  FF                 	db	255
  2816   00F6B0  FF                 	db	255
  2817   00F6B1  FF                 	db	255
  2818   00F6B2  FF                 	db	255
  2819   00F6B3  FF                 	db	255
  2820   00F6B4  FF                 	db	255
  2821   00F6B5  FF                 	db	255
  2822   00F6B6  FF                 	db	255
  2823   00F6B7  FF                 	db	255
  2824   00F6B8  FF                 	db	255
  2825   00F6B9  FF                 	db	255
  2826   00F6BA  FF                 	db	255
  2827   00F6BB  FF                 	db	255
  2828   00F6BC  FF                 	db	255
  2829   00F6BD  FF                 	db	255
  2830   00F6BE  FF                 	db	255
  2831   00F6BF  FF                 	db	255
  2832   00F6C0  FF                 	db	255
  2833   00F6C1  FF                 	db	255
  2834   00F6C2  FF                 	db	255
  2835   00F6C3  FF                 	db	255
  2836   00F6C4  FF                 	db	255
  2837   00F6C5  FF                 	db	255
  2838   00F6C6  FF                 	db	255
  2839   00F6C7  FF                 	db	255
  2840   00F6C8  FF                 	db	255
  2841   00F6C9  FF                 	db	255
  2842   00F6CA  FF                 	db	255
  2843   00F6CB  FF                 	db	255
  2844   00F6CC  FF                 	db	255
  2845   00F6CD  FF                 	db	255
  2846   00F6CE  FF                 	db	255
  2847   00F6CF  FF                 	db	255
  2848   00F6D0  FF                 	db	255
  2849   00F6D1  FF                 	db	255
  2850   00F6D2  FF                 	db	255
  2851   00F6D3  FF                 	db	255
  2852   00F6D4  FF                 	db	255
  2853   00F6D5  FF                 	db	255
  2854   00F6D6  FF                 	db	255
  2855   00F6D7  FF                 	db	255
  2856   00F6D8  FF                 	db	255
  2857   00F6D9  FF                 	db	255
  2858   00F6DA  FF                 	db	255
  2859   00F6DB  FF                 	db	255
  2860   00F6DC  FF                 	db	255
  2861   00F6DD  FF                 	db	255
  2862   00F6DE  FF                 	db	255
  2863   00F6DF  FF                 	db	255
  2864   00F6E0  FF                 	db	255
  2865   00F6E1  FF                 	db	255
  2866   00F6E2  FF                 	db	255
  2867   00F6E3  FF                 	db	255
  2868   00F6E4  FF                 	db	255
  2869   00F6E5  FF                 	db	255
  2870   00F6E6  FF                 	db	255
  2871   00F6E7  FF                 	db	255
  2872   00F6E8  FF                 	db	255
  2873   00F6E9  FF                 	db	255
  2874   00F6EA  FF                 	db	255
  2875   00F6EB  FF                 	db	255
  2876   00F6EC  FF                 	db	255
  2877   00F6ED  FF                 	db	255
  2878   00F6EE  FF                 	db	255
  2879   00F6EF  FF                 	db	255
  2880   00F6F0  FF                 	db	255
  2881   00F6F1  FF                 	db	255
  2882   00F6F2  FF                 	db	255
  2883   00F6F3  FF                 	db	255
  2884   00F6F4  FF                 	db	255
  2885   00F6F5  FF                 	db	255
  2886   00F6F6  FF                 	db	255
  2887   00F6F7  FF                 	db	255
  2888   00F6F8  FF                 	db	255
  2889   00F6F9  FF                 	db	255
  2890   00F6FA  FF                 	db	255
  2891   00F6FB  FF                 	db	255
  2892   00F6FC  FF                 	db	255
  2893   00F6FD  FF                 	db	255
  2894   00F6FE  FF                 	db	255
  2895   00F6FF  FF                 	db	255
  2896   00F700  FF                 	db	255
  2897   00F701  FF                 	db	255
  2898   00F702  FF                 	db	255
  2899   00F703  FF                 	db	255
  2900   00F704  FF                 	db	255
  2901   00F705  FF                 	db	255
  2902   00F706  FF                 	db	255
  2903   00F707  FF                 	db	255
  2904   00F708  FF                 	db	255
  2905   00F709  FF                 	db	255
  2906   00F70A  FF                 	db	255
  2907   00F70B  FF                 	db	255
  2908   00F70C  FF                 	db	255
  2909   00F70D  FF                 	db	255
  2910   00F70E  FF                 	db	255
  2911   00F70F  FF                 	db	255
  2912   00F710  FF                 	db	255
  2913   00F711  FF                 	db	255
  2914   00F712  FF                 	db	255
  2915   00F713  FF                 	db	255
  2916   00F714  FF                 	db	255
  2917   00F715  FF                 	db	255
  2918   00F716  FF                 	db	255
  2919   00F717  FF                 	db	255
  2920   00F718  FF                 	db	255
  2921   00F719  FF                 	db	255
  2922   00F71A  FF                 	db	255
  2923   00F71B  FF                 	db	255
  2924   00F71C  FF                 	db	255
  2925   00F71D  FF                 	db	255
  2926   00F71E  FF                 	db	255
  2927   00F71F  FF                 	db	255
  2928   00F720  FF                 	db	255
  2929   00F721  FF                 	db	255
  2930   00F722  FF                 	db	255
  2931   00F723  FF                 	db	255
  2932   00F724  FF                 	db	255
  2933   00F725  FF                 	db	255
  2934   00F726  FF                 	db	255
  2935   00F727  FF                 	db	255
  2936   00F728  FF                 	db	255
  2937   00F729  FF                 	db	255
  2938   00F72A  FF                 	db	255
  2939   00F72B  FF                 	db	255
  2940   00F72C  FF                 	db	255
  2941   00F72D  FF                 	db	255
  2942   00F72E  FF                 	db	255
  2943   00F72F  FF                 	db	255
  2944   00F730  FF                 	db	255
  2945   00F731  FF                 	db	255
  2946   00F732  FF                 	db	255
  2947   00F733  FF                 	db	255
  2948   00F734  FF                 	db	255
  2949   00F735  FF                 	db	255
  2950   00F736  FF                 	db	255
  2951   00F737  FF                 	db	255
  2952   00F738  FF                 	db	255
  2953   00F739  FF                 	db	255
  2954   00F73A  FF                 	db	255
  2955   00F73B  FF                 	db	255
  2956   00F73C  FF                 	db	255
  2957   00F73D  FF                 	db	255
  2958   00F73E  FF                 	db	255
  2959   00F73F  FF                 	db	255
  2960   00F740  FF                 	db	255
  2961   00F741  FF                 	db	255
  2962   00F742  FF                 	db	255
  2963   00F743  FF                 	db	255
  2964   00F744  FF                 	db	255
  2965   00F745  FF                 	db	255
  2966   00F746  FF                 	db	255
  2967   00F747  FF                 	db	255
  2968   00F748  FF                 	db	255
  2969   00F749  FF                 	db	255
  2970   00F74A  FF                 	db	255
  2971   00F74B  FF                 	db	255
  2972   00F74C  FF                 	db	255
  2973   00F74D  FF                 	db	255
  2974   00F74E  FF                 	db	255
  2975   00F74F  FF                 	db	255
  2976   00F750  FF                 	db	255
  2977   00F751  FF                 	db	255
  2978   00F752  FF                 	db	255
  2979   00F753  FF                 	db	255
  2980   00F754  FF                 	db	255
  2981   00F755  FF                 	db	255
  2982   00F756  FF                 	db	255
  2983   00F757  FF                 	db	255
  2984   00F758  FF                 	db	255
  2985   00F759  FF                 	db	255
  2986   00F75A  FF                 	db	255
  2987   00F75B  FF                 	db	255
  2988   00F75C  FF                 	db	255
  2989   00F75D  FF                 	db	255
  2990   00F75E  FF                 	db	255
  2991   00F75F  FF                 	db	255
  2992   00F760  FF                 	db	255
  2993   00F761  FF                 	db	255
  2994   00F762  FF                 	db	255
  2995   00F763  FF                 	db	255
  2996   00F764  FF                 	db	255
  2997   00F765  FF                 	db	255
  2998   00F766  FF                 	db	255
  2999   00F767  FF                 	db	255
  3000   00F768  FF                 	db	255
  3001   00F769  FF                 	db	255
  3002   00F76A  FF                 	db	255
  3003   00F76B  FF                 	db	255
  3004   00F76C  FF                 	db	255
  3005   00F76D  FF                 	db	255
  3006   00F76E  FF                 	db	255
  3007   00F76F  FF                 	db	255
  3008   00F770  FF                 	db	255
  3009   00F771  FF                 	db	255
  3010   00F772  FF                 	db	255
  3011   00F773  FF                 	db	255
  3012   00F774  FF                 	db	255
  3013   00F775  FF                 	db	255
  3014   00F776  FF                 	db	255
  3015   00F777  FF                 	db	255
  3016   00F778  FF                 	db	255
  3017   00F779  FF                 	db	255
  3018   00F77A  FF                 	db	255
  3019   00F77B  FF                 	db	255
  3020   00F77C  FF                 	db	255
  3021   00F77D  FF                 	db	255
  3022   00F77E  FF                 	db	255
  3023   00F77F  FF                 	db	255
  3024   00F780  FF                 	db	255
  3025   00F781  FF                 	db	255
  3026   00F782  FF                 	db	255
  3027   00F783  FF                 	db	255
  3028   00F784  FF                 	db	255
  3029   00F785  FF                 	db	255
  3030   00F786  FF                 	db	255
  3031   00F787  FF                 	db	255
  3032   00F788  FF                 	db	255
  3033   00F789  FF                 	db	255
  3034   00F78A  FF                 	db	255
  3035   00F78B  FF                 	db	255
  3036   00F78C  FF                 	db	255
  3037   00F78D  FF                 	db	255
  3038   00F78E  FF                 	db	255
  3039   00F78F  FF                 	db	255
  3040   00F790  FF                 	db	255
  3041   00F791  FF                 	db	255
  3042   00F792  FF                 	db	255
  3043   00F793  FF                 	db	255
  3044   00F794  FF                 	db	255
  3045   00F795  FF                 	db	255
  3046   00F796  FF                 	db	255
  3047   00F797  FF                 	db	255
  3048   00F798  FF                 	db	255
  3049   00F799  FF                 	db	255
  3050   00F79A  FF                 	db	255
  3051   00F79B  FF                 	db	255
  3052   00F79C  FF                 	db	255
  3053   00F79D  FF                 	db	255
  3054   00F79E  FF                 	db	255
  3055   00F79F  FF                 	db	255
  3056   00F7A0  FF                 	db	255
  3057   00F7A1  FF                 	db	255
  3058   00F7A2  FF                 	db	255
  3059   00F7A3  FF                 	db	255
  3060   00F7A4  FF                 	db	255
  3061   00F7A5  FF                 	db	255
  3062   00F7A6  FF                 	db	255
  3063   00F7A7  FF                 	db	255
  3064   00F7A8  FF                 	db	255
  3065   00F7A9  FF                 	db	255
  3066   00F7AA  FF                 	db	255
  3067   00F7AB  FF                 	db	255
  3068   00F7AC  FF                 	db	255
  3069   00F7AD  FF                 	db	255
  3070   00F7AE  FF                 	db	255
  3071   00F7AF  FF                 	db	255
  3072   00F7B0  FF                 	db	255
  3073   00F7B1  FF                 	db	255
  3074   00F7B2  FF                 	db	255
  3075   00F7B3  FF                 	db	255
  3076   00F7B4  FF                 	db	255
  3077   00F7B5  FF                 	db	255
  3078   00F7B6  FF                 	db	255
  3079   00F7B7  FF                 	db	255
  3080   00F7B8  FF                 	db	255
  3081   00F7B9  FF                 	db	255
  3082   00F7BA  FF                 	db	255
  3083   00F7BB  FF                 	db	255
  3084   00F7BC  FF                 	db	255
  3085   00F7BD  FF                 	db	255
  3086   00F7BE  FF                 	db	255
  3087   00F7BF  FF                 	db	255
  3088   00F7C0  FF                 	db	255
  3089   00F7C1  FF                 	db	255
  3090   00F7C2  FF                 	db	255
  3091   00F7C3  FF                 	db	255
  3092   00F7C4  FF                 	db	255
  3093   00F7C5  FF                 	db	255
  3094   00F7C6  FF                 	db	255
  3095   00F7C7  FF                 	db	255
  3096   00F7C8  FF                 	db	255
  3097   00F7C9  FF                 	db	255
  3098   00F7CA  FF                 	db	255
  3099   00F7CB  FF                 	db	255
  3100   00F7CC  FF                 	db	255
  3101   00F7CD  FF                 	db	255
  3102   00F7CE  FF                 	db	255
  3103   00F7CF  FF                 	db	255
  3104   00F7D0  FF                 	db	255
  3105   00F7D1  FF                 	db	255
  3106   00F7D2  FF                 	db	255
  3107   00F7D3  FF                 	db	255
  3108   00F7D4  FF                 	db	255
  3109   00F7D5  FF                 	db	255
  3110   00F7D6  FF                 	db	255
  3111   00F7D7  FF                 	db	255
  3112   00F7D8  FF                 	db	255
  3113   00F7D9  FF                 	db	255
  3114   00F7DA  FF                 	db	255
  3115   00F7DB  FF                 	db	255
  3116   00F7DC  FF                 	db	255
  3117   00F7DD  FF                 	db	255
  3118   00F7DE  FF                 	db	255
  3119   00F7DF  FF                 	db	255
  3120   00F7E0  FF                 	db	255
  3121   00F7E1  FF                 	db	255
  3122   00F7E2  FF                 	db	255
  3123   00F7E3  FF                 	db	255
  3124   00F7E4  FF                 	db	255
  3125   00F7E5  FF                 	db	255
  3126   00F7E6  FF                 	db	255
  3127   00F7E7  FF                 	db	255
  3128   00F7E8  FF                 	db	255
  3129   00F7E9  FF                 	db	255
  3130   00F7EA  FF                 	db	255
  3131   00F7EB  FF                 	db	255
  3132   00F7EC  FF                 	db	255
  3133   00F7ED  FF                 	db	255
  3134   00F7EE  FF                 	db	255
  3135   00F7EF  FF                 	db	255
  3136   00F7F0  FF                 	db	255
  3137   00F7F1  FF                 	db	255
  3138   00F7F2  FF                 	db	255
  3139   00F7F3  FF                 	db	255
  3140   00F7F4  FF                 	db	255
  3141   00F7F5  FF                 	db	255
  3142   00F7F6  FF                 	db	255
  3143   00F7F7  FF                 	db	255
  3144   00F7F8  FF                 	db	255
  3145   00F7F9  FF                 	db	255
  3146   00F7FA  FF                 	db	255
  3147   00F7FB  FF                 	db	255
  3148   00F7FC  FF                 	db	255
  3149   00F7FD  FF                 	db	255
  3150   00F7FE  FF                 	db	255
  3151   00F7FF  FF                 	db	255
  3152   00F800  FF                 	db	255
  3153   00F801  FF                 	db	255
  3154   00F802  FF                 	db	255
  3155   00F803  FF                 	db	255
  3156   00F804  FF                 	db	255
  3157   00F805  FF                 	db	255
  3158   00F806  FF                 	db	255
  3159   00F807  FF                 	db	255
  3160   00F808  FF                 	db	255
  3161   00F809  FF                 	db	255
  3162   00F80A  FF                 	db	255
  3163   00F80B  FF                 	db	255
  3164   00F80C  FF                 	db	255
  3165   00F80D  FF                 	db	255
  3166   00F80E  FF                 	db	255
  3167   00F80F  FF                 	db	255
  3168   00F810  FF                 	db	255
  3169   00F811  FF                 	db	255
  3170   00F812  FF                 	db	255
  3171   00F813  FF                 	db	255
  3172   00F814  FF                 	db	255
  3173   00F815  FF                 	db	255
  3174   00F816  FF                 	db	255
  3175   00F817  FF                 	db	255
  3176   00F818  FF                 	db	255
  3177   00F819  FF                 	db	255
  3178   00F81A  FF                 	db	255
  3179   00F81B  FF                 	db	255
  3180   00F81C  FF                 	db	255
  3181   00F81D  FF                 	db	255
  3182   00F81E  FF                 	db	255
  3183   00F81F  FF                 	db	255
  3184   00F820  FF                 	db	255
  3185   00F821  FF                 	db	255
  3186   00F822  FF                 	db	255
  3187   00F823  FF                 	db	255
  3188   00F824  FF                 	db	255
  3189   00F825  FF                 	db	255
  3190   00F826  FF                 	db	255
  3191   00F827  FF                 	db	255
  3192   00F828  FF                 	db	255
  3193   00F829  FF                 	db	255
  3194   00F82A  FF                 	db	255
  3195   00F82B  FF                 	db	255
  3196   00F82C  FF                 	db	255
  3197   00F82D  FF                 	db	255
  3198   00F82E  FF                 	db	255
  3199   00F82F  FF                 	db	255
  3200   00F830  FF                 	db	255
  3201   00F831  FF                 	db	255
  3202   00F832  FF                 	db	255
  3203   00F833  FF                 	db	255
  3204   00F834  FF                 	db	255
  3205   00F835  FF                 	db	255
  3206   00F836  FF                 	db	255
  3207   00F837  FF                 	db	255
  3208   00F838  FF                 	db	255
  3209   00F839  FF                 	db	255
  3210   00F83A  FF                 	db	255
  3211   00F83B  FF                 	db	255
  3212   00F83C  FF                 	db	255
  3213   00F83D  FF                 	db	255
  3214   00F83E  FF                 	db	255
  3215   00F83F  FF                 	db	255
  3216   00F840  FF                 	db	255
  3217   00F841  FF                 	db	255
  3218   00F842  FF                 	db	255
  3219   00F843  FF                 	db	255
  3220   00F844  FF                 	db	255
  3221   00F845  FF                 	db	255
  3222   00F846  FF                 	db	255
  3223   00F847  FF                 	db	255
  3224   00F848  FF                 	db	255
  3225   00F849  FF                 	db	255
  3226   00F84A  FF                 	db	255
  3227   00F84B  FF                 	db	255
  3228   00F84C  FF                 	db	255
  3229   00F84D  FF                 	db	255
  3230   00F84E  FF                 	db	255
  3231   00F84F  FF                 	db	255
  3232   00F850  FF                 	db	255
  3233   00F851  FF                 	db	255
  3234   00F852  FF                 	db	255
  3235   00F853  FF                 	db	255
  3236   00F854  FF                 	db	255
  3237   00F855  FF                 	db	255
  3238   00F856  FF                 	db	255
  3239   00F857  FF                 	db	255
  3240   00F858  FF                 	db	255
  3241   00F859  FF                 	db	255
  3242   00F85A  FF                 	db	255
  3243   00F85B  FF                 	db	255
  3244   00F85C  FF                 	db	255
  3245   00F85D  FF                 	db	255
  3246   00F85E  FF                 	db	255
  3247   00F85F  FF                 	db	255
  3248   00F860  FF                 	db	255
  3249   00F861  FF                 	db	255
  3250   00F862  FF                 	db	255
  3251   00F863  FF                 	db	255
  3252   00F864  FF                 	db	255
  3253   00F865  FF                 	db	255
  3254   00F866  FF                 	db	255
  3255   00F867  FF                 	db	255
  3256   00F868  FF                 	db	255
  3257   00F869  FF                 	db	255
  3258   00F86A  FF                 	db	255
  3259   00F86B  FF                 	db	255
  3260   00F86C  FF                 	db	255
  3261   00F86D  FF                 	db	255
  3262   00F86E  FF                 	db	255
  3263   00F86F  FF                 	db	255
  3264   00F870  FF                 	db	255
  3265   00F871  FF                 	db	255
  3266   00F872  FF                 	db	255
  3267   00F873  FF                 	db	255
  3268   00F874  FF                 	db	255
  3269   00F875  FF                 	db	255
  3270   00F876  FF                 	db	255
  3271   00F877  FF                 	db	255
  3272   00F878  FF                 	db	255
  3273   00F879  FF                 	db	255
  3274   00F87A  FF                 	db	255
  3275   00F87B  FF                 	db	255
  3276   00F87C  FF                 	db	255
  3277   00F87D  FF                 	db	255
  3278   00F87E  FF                 	db	255
  3279   00F87F  FF                 	db	255
  3280   00F880  FF                 	db	255
  3281   00F881  FF                 	db	255
  3282   00F882  FF                 	db	255
  3283   00F883  FF                 	db	255
  3284   00F884  FF                 	db	255
  3285   00F885  FF                 	db	255
  3286   00F886  FF                 	db	255
  3287   00F887  FF                 	db	255
  3288   00F888  FF                 	db	255
  3289   00F889  FF                 	db	255
  3290   00F88A  FF                 	db	255
  3291   00F88B  FF                 	db	255
  3292   00F88C  FF                 	db	255
  3293   00F88D  FF                 	db	255
  3294   00F88E  FF                 	db	255
  3295   00F88F  FF                 	db	255
  3296   00F890  FF                 	db	255
  3297   00F891  FF                 	db	255
  3298   00F892  FF                 	db	255
  3299   00F893  FF                 	db	255
  3300   00F894  FF                 	db	255
  3301   00F895  FF                 	db	255
  3302   00F896  FF                 	db	255
  3303   00F897  FF                 	db	255
  3304   00F898  FF                 	db	255
  3305   00F899  FF                 	db	255
  3306   00F89A  FF                 	db	255
  3307   00F89B  FF                 	db	255
  3308   00F89C  FF                 	db	255
  3309   00F89D  FF                 	db	255
  3310   00F89E  FF                 	db	255
  3311   00F89F  FF                 	db	255
  3312   00F8A0  FF                 	db	255
  3313   00F8A1  FF                 	db	255
  3314   00F8A2  FF                 	db	255
  3315   00F8A3  FF                 	db	255
  3316   00F8A4  FF                 	db	255
  3317   00F8A5  FF                 	db	255
  3318   00F8A6  FF                 	db	255
  3319   00F8A7  FF                 	db	255
  3320   00F8A8  FF                 	db	255
  3321   00F8A9  FF                 	db	255
  3322   00F8AA  FF                 	db	255
  3323   00F8AB  FF                 	db	255
  3324   00F8AC  FF                 	db	255
  3325   00F8AD  FF                 	db	255
  3326   00F8AE  FF                 	db	255
  3327   00F8AF  FF                 	db	255
  3328   00F8B0  FF                 	db	255
  3329   00F8B1  FF                 	db	255
  3330   00F8B2  FF                 	db	255
  3331   00F8B3  FF                 	db	255
  3332   00F8B4  FF                 	db	255
  3333   00F8B5  FF                 	db	255
  3334   00F8B6  FF                 	db	255
  3335   00F8B7  FF                 	db	255
  3336   00F8B8  FF                 	db	255
  3337   00F8B9  FF                 	db	255
  3338   00F8BA  FF                 	db	255
  3339   00F8BB  FF                 	db	255
  3340   00F8BC  FF                 	db	255
  3341   00F8BD  FF                 	db	255
  3342   00F8BE  FF                 	db	255
  3343   00F8BF  FF                 	db	255
  3344   00F8C0  FF                 	db	255
  3345   00F8C1  FF                 	db	255
  3346   00F8C2  FF                 	db	255
  3347   00F8C3  FF                 	db	255
  3348   00F8C4  FF                 	db	255
  3349   00F8C5  FF                 	db	255
  3350   00F8C6  FF                 	db	255
  3351   00F8C7  FF                 	db	255
  3352   00F8C8  FF                 	db	255
  3353   00F8C9  FF                 	db	255
  3354   00F8CA  FF                 	db	255
  3355   00F8CB  FF                 	db	255
  3356   00F8CC  FF                 	db	255
  3357   00F8CD  FF                 	db	255
  3358   00F8CE  FF                 	db	255
  3359   00F8CF  FF                 	db	255
  3360   00F8D0  FF                 	db	255
  3361   00F8D1  FF                 	db	255
  3362   00F8D2  FF                 	db	255
  3363   00F8D3  FF                 	db	255
  3364   00F8D4  FF                 	db	255
  3365   00F8D5  FF                 	db	255
  3366   00F8D6  FF                 	db	255
  3367   00F8D7  FF                 	db	255
  3368   00F8D8  FF                 	db	255
  3369   00F8D9  FF                 	db	255
  3370   00F8DA  FF                 	db	255
  3371   00F8DB  FF                 	db	255
  3372   00F8DC  FF                 	db	255
  3373   00F8DD  FF                 	db	255
  3374   00F8DE  FF                 	db	255
  3375   00F8DF  FF                 	db	255
  3376   00F8E0  FF                 	db	255
  3377   00F8E1  FF                 	db	255
  3378   00F8E2  FF                 	db	255
  3379   00F8E3  FF                 	db	255
  3380   00F8E4  FF                 	db	255
  3381   00F8E5  FF                 	db	255
  3382   00F8E6  FF                 	db	255
  3383   00F8E7  FF                 	db	255
  3384   00F8E8  FF                 	db	255
  3385   00F8E9  FF                 	db	255
  3386   00F8EA  FF                 	db	255
  3387   00F8EB  FF                 	db	255
  3388   00F8EC  FF                 	db	255
  3389   00F8ED  FF                 	db	255
  3390   00F8EE  FF                 	db	255
  3391   00F8EF  FF                 	db	255
  3392   00F8F0  FF                 	db	255
  3393   00F8F1  FF                 	db	255
  3394   00F8F2  FF                 	db	255
  3395   00F8F3  FF                 	db	255
  3396   00F8F4  FF                 	db	255
  3397   00F8F5  FF                 	db	255
  3398   00F8F6  FF                 	db	255
  3399   00F8F7  FF                 	db	255
  3400   00F8F8  FF                 	db	255
  3401   00F8F9  FF                 	db	255
  3402   00F8FA  FF                 	db	255
  3403   00F8FB  FF                 	db	255
  3404   00F8FC  FF                 	db	255
  3405   00F8FD  FF                 	db	255
  3406   00F8FE  FF                 	db	255
  3407   00F8FF  FF                 	db	255
  3408   00F900  FF                 	db	255
  3409   00F901  FF                 	db	255
  3410   00F902  FF                 	db	255
  3411   00F903  FF                 	db	255
  3412   00F904  FF                 	db	255
  3413   00F905  FF                 	db	255
  3414   00F906  FF                 	db	255
  3415   00F907  FF                 	db	255
  3416   00F908  FF                 	db	255
  3417   00F909  FF                 	db	255
  3418   00F90A  FF                 	db	255
  3419   00F90B  FF                 	db	255
  3420   00F90C  FF                 	db	255
  3421   00F90D  FF                 	db	255
  3422   00F90E  FF                 	db	255
  3423   00F90F  FF                 	db	255
  3424   00F910  FF                 	db	255
  3425   00F911  FF                 	db	255
  3426   00F912  FF                 	db	255
  3427   00F913  FF                 	db	255
  3428   00F914  FF                 	db	255
  3429   00F915  FF                 	db	255
  3430   00F916  FF                 	db	255
  3431   00F917  FF                 	db	255
  3432   00F918  FF                 	db	255
  3433   00F919  FF                 	db	255
  3434   00F91A  FF                 	db	255
  3435   00F91B  FF                 	db	255
  3436   00F91C  FF                 	db	255
  3437   00F91D  FF                 	db	255
  3438   00F91E  FF                 	db	255
  3439   00F91F  FF                 	db	255
  3440   00F920  FF                 	db	255
  3441   00F921  FF                 	db	255
  3442   00F922  FF                 	db	255
  3443   00F923  FF                 	db	255
  3444   00F924  FF                 	db	255
  3445   00F925  FF                 	db	255
  3446   00F926  FF                 	db	255
  3447   00F927  FF                 	db	255
  3448   00F928  FF                 	db	255
  3449   00F929  FF                 	db	255
  3450   00F92A  FF                 	db	255
  3451   00F92B  FF                 	db	255
  3452   00F92C  FF                 	db	255
  3453   00F92D  FF                 	db	255
  3454   00F92E  FF                 	db	255
  3455   00F92F  FF                 	db	255
  3456   00F930  FF                 	db	255
  3457   00F931  FF                 	db	255
  3458   00F932  FF                 	db	255
  3459   00F933  FF                 	db	255
  3460   00F934  FF                 	db	255
  3461   00F935  FF                 	db	255
  3462   00F936  FF                 	db	255
  3463   00F937  FF                 	db	255
  3464   00F938  FF                 	db	255
  3465   00F939  FF                 	db	255
  3466   00F93A  FF                 	db	255
  3467   00F93B  FF                 	db	255
  3468   00F93C  FF                 	db	255
  3469   00F93D  FF                 	db	255
  3470   00F93E  FF                 	db	255
  3471   00F93F  FF                 	db	255
  3472   00F940  FF                 	db	255
  3473   00F941  FF                 	db	255
  3474   00F942  FF                 	db	255
  3475   00F943  FF                 	db	255
  3476   00F944  FF                 	db	255
  3477   00F945  FF                 	db	255
  3478   00F946  FF                 	db	255
  3479   00F947  FF                 	db	255
  3480   00F948  FF                 	db	255
  3481   00F949  FF                 	db	255
  3482   00F94A  FF                 	db	255
  3483   00F94B  FF                 	db	255
  3484   00F94C  FF                 	db	255
  3485   00F94D  FF                 	db	255
  3486   00F94E  FF                 	db	255
  3487   00F94F  FF                 	db	255
  3488   00F950  FF                 	db	255
  3489   00F951  FF                 	db	255
  3490   00F952  FF                 	db	255
  3491   00F953  FF                 	db	255
  3492   00F954  FF                 	db	255
  3493   00F955  FF                 	db	255
  3494   00F956  FF                 	db	255
  3495   00F957  FF                 	db	255
  3496   00F958  FF                 	db	255
  3497   00F959  FF                 	db	255
  3498   00F95A  FF                 	db	255
  3499   00F95B  FF                 	db	255
  3500   00F95C  FF                 	db	255
  3501   00F95D  FF                 	db	255
  3502   00F95E  FF                 	db	255
  3503   00F95F  FF                 	db	255
  3504   00F960  FF                 	db	255
  3505   00F961  FF                 	db	255
  3506   00F962  FF                 	db	255
  3507   00F963  FF                 	db	255
  3508   00F964  FF                 	db	255
  3509   00F965  FF                 	db	255
  3510   00F966  FF                 	db	255
  3511   00F967  FF                 	db	255
  3512   00F968  FF                 	db	255
  3513   00F969  FF                 	db	255
  3514   00F96A  FF                 	db	255
  3515   00F96B  FF                 	db	255
  3516   00F96C  FF                 	db	255
  3517   00F96D  FF                 	db	255
  3518   00F96E  FF                 	db	255
  3519   00F96F  FF                 	db	255
  3520   00F970  FF                 	db	255
  3521   00F971  FF                 	db	255
  3522   00F972  FF                 	db	255
  3523   00F973  FF                 	db	255
  3524   00F974  FF                 	db	255
  3525   00F975  FF                 	db	255
  3526   00F976  FF                 	db	255
  3527   00F977  FF                 	db	255
  3528   00F978  FF                 	db	255
  3529   00F979  FF                 	db	255
  3530   00F97A  FF                 	db	255
  3531   00F97B  FF                 	db	255
  3532   00F97C  FF                 	db	255
  3533   00F97D  FF                 	db	255
  3534   00F97E  FF                 	db	255
  3535   00F97F  FF                 	db	255
  3536   00F980  FF                 	db	255
  3537   00F981  FF                 	db	255
  3538   00F982  FF                 	db	255
  3539   00F983  FF                 	db	255
  3540   00F984  FF                 	db	255
  3541   00F985  FF                 	db	255
  3542   00F986  FF                 	db	255
  3543   00F987  FF                 	db	255
  3544   00F988  FF                 	db	255
  3545   00F989  FF                 	db	255
  3546   00F98A  FF                 	db	255
  3547   00F98B  FF                 	db	255
  3548   00F98C  FF                 	db	255
  3549   00F98D  FF                 	db	255
  3550   00F98E  FF                 	db	255
  3551   00F98F  FF                 	db	255
  3552   00F990  FF                 	db	255
  3553   00F991  FF                 	db	255
  3554   00F992  FF                 	db	255
  3555   00F993  FF                 	db	255
  3556   00F994  FF                 	db	255
  3557   00F995  FF                 	db	255
  3558   00F996  FF                 	db	255
  3559   00F997  FF                 	db	255
  3560   00F998  FF                 	db	255
  3561   00F999  FF                 	db	255
  3562   00F99A  FF                 	db	255
  3563   00F99B  FF                 	db	255
  3564   00F99C  FF                 	db	255
  3565   00F99D  FF                 	db	255
  3566   00F99E  FF                 	db	255
  3567   00F99F  FF                 	db	255
  3568   00F9A0  FF                 	db	255
  3569   00F9A1  FF                 	db	255
  3570   00F9A2  FF                 	db	255
  3571   00F9A3  FF                 	db	255
  3572   00F9A4  FF                 	db	255
  3573   00F9A5  FF                 	db	255
  3574   00F9A6  FF                 	db	255
  3575   00F9A7  FF                 	db	255
  3576   00F9A8  FF                 	db	255
  3577   00F9A9  FF                 	db	255
  3578   00F9AA  FF                 	db	255
  3579   00F9AB  FF                 	db	255
  3580   00F9AC  FF                 	db	255
  3581   00F9AD  FF                 	db	255
  3582   00F9AE  FF                 	db	255
  3583   00F9AF  FF                 	db	255
  3584   00F9B0  FF                 	db	255
  3585   00F9B1  FF                 	db	255
  3586   00F9B2  FF                 	db	255
  3587   00F9B3  FF                 	db	255
  3588   00F9B4  FF                 	db	255
  3589   00F9B5  FF                 	db	255
  3590   00F9B6  FF                 	db	255
  3591   00F9B7  FF                 	db	255
  3592   00F9B8  FF                 	db	255
  3593   00F9B9  FF                 	db	255
  3594   00F9BA  FF                 	db	255
  3595   00F9BB  FF                 	db	255
  3596   00F9BC  FF                 	db	255
  3597   00F9BD  FF                 	db	255
  3598   00F9BE  FF                 	db	255
  3599   00F9BF  FF                 	db	255
  3600   00F9C0  FF                 	db	255
  3601   00F9C1  FF                 	db	255
  3602   00F9C2  FF                 	db	255
  3603   00F9C3  FF                 	db	255
  3604   00F9C4  FF                 	db	255
  3605   00F9C5  FF                 	db	255
  3606   00F9C6  FF                 	db	255
  3607   00F9C7  FF                 	db	255
  3608   00F9C8  FF                 	db	255
  3609   00F9C9  FF                 	db	255
  3610   00F9CA  FF                 	db	255
  3611   00F9CB  FF                 	db	255
  3612   00F9CC  FF                 	db	255
  3613   00F9CD  FF                 	db	255
  3614   00F9CE  FF                 	db	255
  3615   00F9CF  FF                 	db	255
  3616   00F9D0  FF                 	db	255
  3617   00F9D1  FF                 	db	255
  3618   00F9D2  FF                 	db	255
  3619   00F9D3  FF                 	db	255
  3620   00F9D4  FF                 	db	255
  3621   00F9D5  FF                 	db	255
  3622   00F9D6  FF                 	db	255
  3623   00F9D7  FF                 	db	255
  3624   00F9D8  FF                 	db	255
  3625   00F9D9  FF                 	db	255
  3626   00F9DA  FF                 	db	255
  3627   00F9DB  FF                 	db	255
  3628   00F9DC  FF                 	db	255
  3629   00F9DD  FF                 	db	255
  3630   00F9DE  FF                 	db	255
  3631   00F9DF  FF                 	db	255
  3632   00F9E0  FF                 	db	255
  3633   00F9E1  FF                 	db	255
  3634   00F9E2  FF                 	db	255
  3635   00F9E3  FF                 	db	255
  3636   00F9E4  FF                 	db	255
  3637   00F9E5  FF                 	db	255
  3638   00F9E6  FF                 	db	255
  3639   00F9E7  FF                 	db	255
  3640   00F9E8  FF                 	db	255
  3641   00F9E9  FF                 	db	255
  3642   00F9EA  FF                 	db	255
  3643   00F9EB  FF                 	db	255
  3644   00F9EC  FF                 	db	255
  3645   00F9ED  FF                 	db	255
  3646   00F9EE  FF                 	db	255
  3647   00F9EF  FF                 	db	255
  3648   00F9F0  FF                 	db	255
  3649   00F9F1  FF                 	db	255
  3650   00F9F2  FF                 	db	255
  3651   00F9F3  FF                 	db	255
  3652   00F9F4  FF                 	db	255
  3653   00F9F5  FF                 	db	255
  3654   00F9F6  FF                 	db	255
  3655   00F9F7  FF                 	db	255
  3656   00F9F8  FF                 	db	255
  3657   00F9F9  FF                 	db	255
  3658   00F9FA  FF                 	db	255
  3659   00F9FB  FF                 	db	255
  3660   00F9FC  FF                 	db	255
  3661   00F9FD  FF                 	db	255
  3662   00F9FE  FF                 	db	255
  3663   00F9FF  FF                 	db	255
  3664   00FA00  FF                 	db	255
  3665   00FA01  FF                 	db	255
  3666   00FA02  FF                 	db	255
  3667   00FA03  FF                 	db	255
  3668   00FA04  FF                 	db	255
  3669   00FA05  FF                 	db	255
  3670   00FA06  FF                 	db	255
  3671   00FA07  FF                 	db	255
  3672   00FA08  FF                 	db	255
  3673   00FA09  FF                 	db	255
  3674   00FA0A  FF                 	db	255
  3675   00FA0B  FF                 	db	255
  3676   00FA0C  FF                 	db	255
  3677   00FA0D  FF                 	db	255
  3678   00FA0E  FF                 	db	255
  3679   00FA0F  FF                 	db	255
  3680   00FA10  FF                 	db	255
  3681   00FA11  FF                 	db	255
  3682   00FA12  FF                 	db	255
  3683   00FA13  FF                 	db	255
  3684   00FA14  FF                 	db	255
  3685   00FA15  FF                 	db	255
  3686   00FA16  FF                 	db	255
  3687   00FA17  FF                 	db	255
  3688   00FA18  FF                 	db	255
  3689   00FA19  FF                 	db	255
  3690   00FA1A  FF                 	db	255
  3691   00FA1B  FF                 	db	255
  3692   00FA1C  FF                 	db	255
  3693   00FA1D  FF                 	db	255
  3694   00FA1E  FF                 	db	255
  3695   00FA1F  FF                 	db	255
  3696   00FA20  FF                 	db	255
  3697   00FA21  FF                 	db	255
  3698   00FA22  FF                 	db	255
  3699   00FA23  FF                 	db	255
  3700   00FA24  FF                 	db	255
  3701   00FA25  FF                 	db	255
  3702   00FA26  FF                 	db	255
  3703   00FA27  FF                 	db	255
  3704   00FA28  FF                 	db	255
  3705   00FA29  FF                 	db	255
  3706   00FA2A  FF                 	db	255
  3707   00FA2B  FF                 	db	255
  3708   00FA2C  FF                 	db	255
  3709   00FA2D  FF                 	db	255
  3710   00FA2E  FF                 	db	255
  3711   00FA2F  FF                 	db	255
  3712   00FA30  FF                 	db	255
  3713   00FA31  FF                 	db	255
  3714   00FA32  FF                 	db	255
  3715   00FA33  FF                 	db	255
  3716   00FA34  FF                 	db	255
  3717   00FA35  FF                 	db	255
  3718   00FA36  FF                 	db	255
  3719   00FA37  FF                 	db	255
  3720   00FA38  FF                 	db	255
  3721   00FA39  FF                 	db	255
  3722   00FA3A  FF                 	db	255
  3723   00FA3B  FF                 	db	255
  3724   00FA3C  FF                 	db	255
  3725   00FA3D  FF                 	db	255
  3726   00FA3E  FF                 	db	255
  3727   00FA3F  FF                 	db	255
  3728   00FA40  FF                 	db	255
  3729   00FA41  FF                 	db	255
  3730   00FA42  FF                 	db	255
  3731   00FA43  FF                 	db	255
  3732   00FA44  FF                 	db	255
  3733   00FA45  FF                 	db	255
  3734   00FA46  FF                 	db	255
  3735   00FA47  FF                 	db	255
  3736   00FA48  FF                 	db	255
  3737   00FA49  FF                 	db	255
  3738   00FA4A  FF                 	db	255
  3739   00FA4B  FF                 	db	255
  3740   00FA4C  FF                 	db	255
  3741   00FA4D  FF                 	db	255
  3742   00FA4E  FF                 	db	255
  3743   00FA4F  FF                 	db	255
  3744   00FA50  FF                 	db	255
  3745   00FA51  FF                 	db	255
  3746   00FA52  FF                 	db	255
  3747   00FA53  FF                 	db	255
  3748   00FA54  FF                 	db	255
  3749   00FA55  FF                 	db	255
  3750   00FA56  FF                 	db	255
  3751   00FA57  FF                 	db	255
  3752   00FA58  FF                 	db	255
  3753   00FA59  FF                 	db	255
  3754   00FA5A  FF                 	db	255
  3755   00FA5B  FF                 	db	255
  3756   00FA5C  FF                 	db	255
  3757   00FA5D  FF                 	db	255
  3758   00FA5E  FF                 	db	255
  3759   00FA5F  FF                 	db	255
  3760   00FA60  FF                 	db	255
  3761   00FA61  FF                 	db	255
  3762   00FA62  FF                 	db	255
  3763   00FA63  FF                 	db	255
  3764   00FA64  FF                 	db	255
  3765   00FA65  FF                 	db	255
  3766   00FA66  FF                 	db	255
  3767   00FA67  FF                 	db	255
  3768   00FA68  FF                 	db	255
  3769   00FA69  FF                 	db	255
  3770   00FA6A  FF                 	db	255
  3771   00FA6B  FF                 	db	255
  3772   00FA6C  FF                 	db	255
  3773   00FA6D  FF                 	db	255
  3774   00FA6E  FF                 	db	255
  3775   00FA6F  FF                 	db	255
  3776   00FA70  FF                 	db	255
  3777   00FA71  FF                 	db	255
  3778   00FA72  FF                 	db	255
  3779   00FA73  FF                 	db	255
  3780   00FA74  FF                 	db	255
  3781   00FA75  FF                 	db	255
  3782   00FA76  FF                 	db	255
  3783   00FA77  FF                 	db	255
  3784   00FA78  FF                 	db	255
  3785   00FA79  FF                 	db	255
  3786   00FA7A  FF                 	db	255
  3787   00FA7B  FF                 	db	255
  3788   00FA7C  FF                 	db	255
  3789   00FA7D  FF                 	db	255
  3790   00FA7E  FF                 	db	255
  3791   00FA7F  FF                 	db	255
  3792   00FA80  FF                 	db	255
  3793   00FA81  FF                 	db	255
  3794   00FA82  FF                 	db	255
  3795   00FA83  FF                 	db	255
  3796   00FA84  FF                 	db	255
  3797   00FA85  FF                 	db	255
  3798   00FA86  FF                 	db	255
  3799   00FA87  FF                 	db	255
  3800   00FA88  FF                 	db	255
  3801   00FA89  FF                 	db	255
  3802   00FA8A  FF                 	db	255
  3803   00FA8B  FF                 	db	255
  3804   00FA8C  FF                 	db	255
  3805   00FA8D  FF                 	db	255
  3806   00FA8E  FF                 	db	255
  3807   00FA8F  FF                 	db	255
  3808   00FA90  FF                 	db	255
  3809   00FA91  FF                 	db	255
  3810   00FA92  FF                 	db	255
  3811   00FA93  FF                 	db	255
  3812   00FA94  FF                 	db	255
  3813   00FA95  FF                 	db	255
  3814   00FA96  FF                 	db	255
  3815   00FA97  FF                 	db	255
  3816   00FA98  FF                 	db	255
  3817   00FA99  FF                 	db	255
  3818   00FA9A  FF                 	db	255
  3819   00FA9B  FF                 	db	255
  3820   00FA9C  FF                 	db	255
  3821   00FA9D  FF                 	db	255
  3822   00FA9E  FF                 	db	255
  3823   00FA9F  FF                 	db	255
  3824   00FAA0  FF                 	db	255
  3825   00FAA1  FF                 	db	255
  3826   00FAA2  FF                 	db	255
  3827   00FAA3  FF                 	db	255
  3828   00FAA4  FF                 	db	255
  3829   00FAA5  FF                 	db	255
  3830   00FAA6  FF                 	db	255
  3831   00FAA7  FF                 	db	255
  3832   00FAA8  FF                 	db	255
  3833   00FAA9  FF                 	db	255
  3834   00FAAA  FF                 	db	255
  3835   00FAAB  FF                 	db	255
  3836   00FAAC  FF                 	db	255
  3837   00FAAD  FF                 	db	255
  3838   00FAAE  FF                 	db	255
  3839   00FAAF  FF                 	db	255
  3840   00FAB0  FF                 	db	255
  3841   00FAB1  FF                 	db	255
  3842   00FAB2  FF                 	db	255
  3843   00FAB3  FF                 	db	255
  3844   00FAB4  FF                 	db	255
  3845   00FAB5  FF                 	db	255
  3846   00FAB6  FF                 	db	255
  3847   00FAB7  FF                 	db	255
  3848   00FAB8  FF                 	db	255
  3849   00FAB9  FF                 	db	255
  3850   00FABA  FF                 	db	255
  3851   00FABB  FF                 	db	255
  3852   00FABC  FF                 	db	255
  3853   00FABD  FF                 	db	255
  3854   00FABE  FF                 	db	255
  3855   00FABF  FF                 	db	255
  3856   00FAC0  FF                 	db	255
  3857   00FAC1  FF                 	db	255
  3858   00FAC2  FF                 	db	255
  3859   00FAC3  FF                 	db	255
  3860   00FAC4  FF                 	db	255
  3861   00FAC5  FF                 	db	255
  3862   00FAC6  FF                 	db	255
  3863   00FAC7  FF                 	db	255
  3864   00FAC8  FF                 	db	255
  3865   00FAC9  FF                 	db	255
  3866   00FACA  FF                 	db	255
  3867   00FACB  FF                 	db	255
  3868   00FACC  FF                 	db	255
  3869   00FACD  FF                 	db	255
  3870   00FACE  FF                 	db	255
  3871   00FACF  FF                 	db	255
  3872   00FAD0  FF                 	db	255
  3873   00FAD1  FF                 	db	255
  3874   00FAD2  FF                 	db	255
  3875   00FAD3  FF                 	db	255
  3876   00FAD4  FF                 	db	255
  3877   00FAD5  FF                 	db	255
  3878   00FAD6  FF                 	db	255
  3879   00FAD7  FF                 	db	255
  3880   00FAD8  FF                 	db	255
  3881   00FAD9  FF                 	db	255
  3882   00FADA  FF                 	db	255
  3883   00FADB  FF                 	db	255
  3884   00FADC  FF                 	db	255
  3885   00FADD  FF                 	db	255
  3886   00FADE  FF                 	db	255
  3887   00FADF  FF                 	db	255
  3888   00FAE0  FF                 	db	255
  3889   00FAE1  FF                 	db	255
  3890   00FAE2  FF                 	db	255
  3891   00FAE3  FF                 	db	255
  3892   00FAE4  FF                 	db	255
  3893   00FAE5  FF                 	db	255
  3894   00FAE6  FF                 	db	255
  3895   00FAE7  FF                 	db	255
  3896   00FAE8  FF                 	db	255
  3897   00FAE9  FF                 	db	255
  3898   00FAEA  FF                 	db	255
  3899   00FAEB  FF                 	db	255
  3900   00FAEC  FF                 	db	255
  3901   00FAED  FF                 	db	255
  3902   00FAEE  FF                 	db	255
  3903   00FAEF  FF                 	db	255
  3904   00FAF0  FF                 	db	255
  3905   00FAF1  FF                 	db	255
  3906   00FAF2  FF                 	db	255
  3907   00FAF3  FF                 	db	255
  3908   00FAF4  FF                 	db	255
  3909   00FAF5  FF                 	db	255
  3910   00FAF6  FF                 	db	255
  3911   00FAF7  FF                 	db	255
  3912   00FAF8  FF                 	db	255
  3913   00FAF9  FF                 	db	255
  3914   00FAFA  FF                 	db	255
  3915   00FAFB  FF                 	db	255
  3916   00FAFC  FF                 	db	255
  3917   00FAFD  FF                 	db	255
  3918   00FAFE  FF                 	db	255
  3919   00FAFF  FF                 	db	255
  3920   00FB00  FF                 	db	255
  3921   00FB01  FF                 	db	255
  3922   00FB02  FF                 	db	255
  3923   00FB03  FF                 	db	255
  3924   00FB04  FF                 	db	255
  3925   00FB05  FF                 	db	255
  3926   00FB06  FF                 	db	255
  3927   00FB07  FF                 	db	255
  3928   00FB08  FF                 	db	255
  3929   00FB09  FF                 	db	255
  3930   00FB0A  FF                 	db	255
  3931   00FB0B  FF                 	db	255
  3932   00FB0C  FF                 	db	255
  3933   00FB0D  FF                 	db	255
  3934   00FB0E  FF                 	db	255
  3935   00FB0F  FF                 	db	255
  3936   00FB10  FF                 	db	255
  3937   00FB11  FF                 	db	255
  3938   00FB12  FF                 	db	255
  3939   00FB13  FF                 	db	255
  3940   00FB14  FF                 	db	255
  3941   00FB15  FF                 	db	255
  3942   00FB16  FF                 	db	255
  3943   00FB17  FF                 	db	255
  3944   00FB18  FF                 	db	255
  3945   00FB19  FF                 	db	255
  3946   00FB1A  FF                 	db	255
  3947   00FB1B  FF                 	db	255
  3948   00FB1C  FF                 	db	255
  3949   00FB1D  FF                 	db	255
  3950   00FB1E  FF                 	db	255
  3951   00FB1F  FF                 	db	255
  3952   00FB20  FF                 	db	255
  3953   00FB21  FF                 	db	255
  3954   00FB22  FF                 	db	255
  3955   00FB23  FF                 	db	255
  3956   00FB24  FF                 	db	255
  3957   00FB25  FF                 	db	255
  3958   00FB26  FF                 	db	255
  3959   00FB27  FF                 	db	255
  3960   00FB28  FF                 	db	255
  3961   00FB29  FF                 	db	255
  3962   00FB2A  FF                 	db	255
  3963   00FB2B  FF                 	db	255
  3964   00FB2C  FF                 	db	255
  3965   00FB2D  FF                 	db	255
  3966   00FB2E  FF                 	db	255
  3967   00FB2F  FF                 	db	255
  3968   00FB30  FF                 	db	255
  3969   00FB31  FF                 	db	255
  3970   00FB32  FF                 	db	255
  3971   00FB33  FF                 	db	255
  3972   00FB34  FF                 	db	255
  3973   00FB35  FF                 	db	255
  3974   00FB36  FF                 	db	255
  3975   00FB37  FF                 	db	255
  3976   00FB38  FF                 	db	255
  3977   00FB39  FF                 	db	255
  3978   00FB3A  FF                 	db	255
  3979   00FB3B  FF                 	db	255
  3980   00FB3C  FF                 	db	255
  3981   00FB3D  FF                 	db	255
  3982   00FB3E  FF                 	db	255
  3983   00FB3F  FF                 	db	255
  3984   00FB40  FF                 	db	255
  3985   00FB41  FF                 	db	255
  3986   00FB42  FF                 	db	255
  3987   00FB43  FF                 	db	255
  3988   00FB44  FF                 	db	255
  3989   00FB45  FF                 	db	255
  3990   00FB46  FF                 	db	255
  3991   00FB47  FF                 	db	255
  3992   00FB48  FF                 	db	255
  3993   00FB49  FF                 	db	255
  3994   00FB4A  FF                 	db	255
  3995   00FB4B  FF                 	db	255
  3996   00FB4C  FF                 	db	255
  3997   00FB4D  FF                 	db	255
  3998   00FB4E  FF                 	db	255
  3999   00FB4F  FF                 	db	255
  4000   00FB50  FF                 	db	255
  4001   00FB51  FF                 	db	255
  4002   00FB52  FF                 	db	255
  4003   00FB53  FF                 	db	255
  4004   00FB54  FF                 	db	255
  4005   00FB55  FF                 	db	255
  4006   00FB56  FF                 	db	255
  4007   00FB57  FF                 	db	255
  4008   00FB58  FF                 	db	255
  4009   00FB59  FF                 	db	255
  4010   00FB5A  FF                 	db	255
  4011   00FB5B  FF                 	db	255
  4012   00FB5C  FF                 	db	255
  4013   00FB5D  FF                 	db	255
  4014   00FB5E  FF                 	db	255
  4015   00FB5F  FF                 	db	255
  4016   00FB60  FF                 	db	255
  4017   00FB61  FF                 	db	255
  4018   00FB62  FF                 	db	255
  4019   00FB63  FF                 	db	255
  4020   00FB64  FF                 	db	255
  4021   00FB65  FF                 	db	255
  4022   00FB66  FF                 	db	255
  4023   00FB67  FF                 	db	255
  4024   00FB68  FF                 	db	255
  4025   00FB69  FF                 	db	255
  4026   00FB6A  FF                 	db	255
  4027   00FB6B  FF                 	db	255
  4028   00FB6C  FF                 	db	255
  4029   00FB6D  FF                 	db	255
  4030   00FB6E  FF                 	db	255
  4031   00FB6F  FF                 	db	255
  4032   00FB70  FF                 	db	255
  4033   00FB71  FF                 	db	255
  4034   00FB72  FF                 	db	255
  4035   00FB73  FF                 	db	255
  4036   00FB74  FF                 	db	255
  4037   00FB75  FF                 	db	255
  4038   00FB76  FF                 	db	255
  4039   00FB77  FF                 	db	255
  4040   00FB78  FF                 	db	255
  4041   00FB79  FF                 	db	255
  4042   00FB7A  FF                 	db	255
  4043   00FB7B  FF                 	db	255
  4044   00FB7C  FF                 	db	255
  4045   00FB7D  FF                 	db	255
  4046   00FB7E  FF                 	db	255
  4047   00FB7F  FF                 	db	255
  4048   00FB80  FF                 	db	255
  4049   00FB81  FF                 	db	255
  4050   00FB82  FF                 	db	255
  4051   00FB83  FF                 	db	255
  4052   00FB84  FF                 	db	255
  4053   00FB85  FF                 	db	255
  4054   00FB86  FF                 	db	255
  4055   00FB87  FF                 	db	255
  4056   00FB88  FF                 	db	255
  4057   00FB89  FF                 	db	255
  4058   00FB8A  FF                 	db	255
  4059   00FB8B  FF                 	db	255
  4060   00FB8C  FF                 	db	255
  4061   00FB8D  FF                 	db	255
  4062   00FB8E  FF                 	db	255
  4063   00FB8F  FF                 	db	255
  4064   00FB90  FF                 	db	255
  4065   00FB91  FF                 	db	255
  4066   00FB92  FF                 	db	255
  4067   00FB93  FF                 	db	255
  4068   00FB94  FF                 	db	255
  4069   00FB95  FF                 	db	255
  4070   00FB96  FF                 	db	255
  4071   00FB97  FF                 	db	255
  4072   00FB98  FF                 	db	255
  4073   00FB99  FF                 	db	255
  4074   00FB9A  FF                 	db	255
  4075   00FB9B  FF                 	db	255
  4076   00FB9C  FF                 	db	255
  4077   00FB9D  FF                 	db	255
  4078   00FB9E  FF                 	db	255
  4079   00FB9F  FF                 	db	255
  4080   00FBA0  FF                 	db	255
  4081   00FBA1  FF                 	db	255
  4082   00FBA2  FF                 	db	255
  4083   00FBA3  FF                 	db	255
  4084   00FBA4  FF                 	db	255
  4085   00FBA5  FF                 	db	255
  4086   00FBA6  FF                 	db	255
  4087   00FBA7  FF                 	db	255
  4088   00FBA8  FF                 	db	255
  4089   00FBA9  FF                 	db	255
  4090   00FBAA  FF                 	db	255
  4091   00FBAB  FF                 	db	255
  4092   00FBAC  FF                 	db	255
  4093   00FBAD  FF                 	db	255
  4094   00FBAE  FF                 	db	255
  4095   00FBAF  FF                 	db	255
  4096   00FBB0  FF                 	db	255
  4097   00FBB1  FF                 	db	255
  4098   00FBB2  FF                 	db	255
  4099   00FBB3  FF                 	db	255
  4100   00FBB4  FF                 	db	255
  4101   00FBB5  FF                 	db	255
  4102   00FBB6  FF                 	db	255
  4103   00FBB7  FF                 	db	255
  4104   00FBB8  FF                 	db	255
  4105   00FBB9  FF                 	db	255
  4106   00FBBA  FF                 	db	255
  4107   00FBBB  FF                 	db	255
  4108   00FBBC  FF                 	db	255
  4109   00FBBD  FF                 	db	255
  4110   00FBBE  FF                 	db	255
  4111   00FBBF  FF                 	db	255
  4112   00FBC0  FF                 	db	255
  4113   00FBC1  FF                 	db	255
  4114   00FBC2  FF                 	db	255
  4115   00FBC3  FF                 	db	255
  4116   00FBC4  FF                 	db	255
  4117   00FBC5  FF                 	db	255
  4118   00FBC6  FF                 	db	255
  4119   00FBC7  FF                 	db	255
  4120   00FBC8  FF                 	db	255
  4121   00FBC9  FF                 	db	255
  4122   00FBCA  FF                 	db	255
  4123   00FBCB  FF                 	db	255
  4124   00FBCC  FF                 	db	255
  4125   00FBCD  FF                 	db	255
  4126   00FBCE  FF                 	db	255
  4127   00FBCF  FF                 	db	255
  4128   00FBD0  FF                 	db	255
  4129   00FBD1  FF                 	db	255
  4130   00FBD2  FF                 	db	255
  4131   00FBD3  FF                 	db	255
  4132   00FBD4  FF                 	db	255
  4133   00FBD5  FF                 	db	255
  4134   00FBD6  FF                 	db	255
  4135   00FBD7  FF                 	db	255
  4136   00FBD8  FF                 	db	255
  4137   00FBD9  FF                 	db	255
  4138   00FBDA  FF                 	db	255
  4139   00FBDB  FF                 	db	255
  4140   00FBDC  FF                 	db	255
  4141   00FBDD  FF                 	db	255
  4142   00FBDE  FF                 	db	255
  4143   00FBDF  FF                 	db	255
  4144   00FBE0  FF                 	db	255
  4145   00FBE1  FF                 	db	255
  4146   00FBE2  FF                 	db	255
  4147   00FBE3  FF                 	db	255
  4148   00FBE4  FF                 	db	255
  4149   00FBE5  FF                 	db	255
  4150   00FBE6  FF                 	db	255
  4151   00FBE7  FF                 	db	255
  4152   00FBE8  FF                 	db	255
  4153   00FBE9  FF                 	db	255
  4154   00FBEA  FF                 	db	255
  4155   00FBEB  FF                 	db	255
  4156   00FBEC  FF                 	db	255
  4157   00FBED  FF                 	db	255
  4158   00FBEE  FF                 	db	255
  4159   00FBEF  FF                 	db	255
  4160   00FBF0  FF                 	db	255
  4161   00FBF1  FF                 	db	255
  4162   00FBF2  FF                 	db	255
  4163   00FBF3  FF                 	db	255
  4164   00FBF4  FF                 	db	255
  4165   00FBF5  FF                 	db	255
  4166   00FBF6  FF                 	db	255
  4167   00FBF7  FF                 	db	255
  4168   00FBF8  FF                 	db	255
  4169   00FBF9  FF                 	db	255
  4170   00FBFA  FF                 	db	255
  4171   00FBFB  FF                 	db	255
  4172   00FBFC  FF                 	db	255
  4173   00FBFD  FF                 	db	255
  4174   00FBFE  FF                 	db	255
  4175   00FBFF  FF                 	db	255
  4176   00FC00  FF                 	db	255
  4177   00FC01  FF                 	db	255
  4178   00FC02  FF                 	db	255
  4179   00FC03  FF                 	db	255
  4180   00FC04  FF                 	db	255
  4181   00FC05  FF                 	db	255
  4182   00FC06  FF                 	db	255
  4183   00FC07  FF                 	db	255
  4184   00FC08  FF                 	db	255
  4185   00FC09  FF                 	db	255
  4186   00FC0A  FF                 	db	255
  4187   00FC0B  FF                 	db	255
  4188   00FC0C  FF                 	db	255
  4189   00FC0D  FF                 	db	255
  4190   00FC0E  FF                 	db	255
  4191   00FC0F  FF                 	db	255
  4192   00FC10  FF                 	db	255
  4193   00FC11  FF                 	db	255
  4194   00FC12  FF                 	db	255
  4195   00FC13  FF                 	db	255
  4196   00FC14  FF                 	db	255
  4197   00FC15  FF                 	db	255
  4198   00FC16  FF                 	db	255
  4199   00FC17  FF                 	db	255
  4200   00FC18  FF                 	db	255
  4201   00FC19  FF                 	db	255
  4202   00FC1A  FF                 	db	255
  4203   00FC1B  FF                 	db	255
  4204   00FC1C  FF                 	db	255
  4205   00FC1D  FF                 	db	255
  4206   00FC1E  FF                 	db	255
  4207   00FC1F  FF                 	db	255
  4208   00FC20  FF                 	db	255
  4209   00FC21  FF                 	db	255
  4210   00FC22  FF                 	db	255
  4211   00FC23  FF                 	db	255
  4212   00FC24  FF                 	db	255
  4213   00FC25  FF                 	db	255
  4214   00FC26  FF                 	db	255
  4215   00FC27  FF                 	db	255
  4216   00FC28  FF                 	db	255
  4217   00FC29  FF                 	db	255
  4218   00FC2A  FF                 	db	255
  4219   00FC2B  FF                 	db	255
  4220   00FC2C  FF                 	db	255
  4221   00FC2D  FF                 	db	255
  4222   00FC2E  FF                 	db	255
  4223   00FC2F  FF                 	db	255
  4224   00FC30  FF                 	db	255
  4225   00FC31  FF                 	db	255
  4226   00FC32  FF                 	db	255
  4227   00FC33  FF                 	db	255
  4228   00FC34  FF                 	db	255
  4229   00FC35  FF                 	db	255
  4230   00FC36  FF                 	db	255
  4231   00FC37  FF                 	db	255
  4232   00FC38  FF                 	db	255
  4233   00FC39  FF                 	db	255
  4234   00FC3A  FF                 	db	255
  4235   00FC3B  FF                 	db	255
  4236   00FC3C  FF                 	db	255
  4237   00FC3D  FF                 	db	255
  4238   00FC3E  FF                 	db	255
  4239   00FC3F  FF                 	db	255
  4240   00FC40  FF                 	db	255
  4241   00FC41  FF                 	db	255
  4242   00FC42  FF                 	db	255
  4243   00FC43  FF                 	db	255
  4244   00FC44  FF                 	db	255
  4245   00FC45  FF                 	db	255
  4246   00FC46  FF                 	db	255
  4247   00FC47  FF                 	db	255
  4248   00FC48  FF                 	db	255
  4249   00FC49  FF                 	db	255
  4250   00FC4A  FF                 	db	255
  4251   00FC4B  FF                 	db	255
  4252   00FC4C  FF                 	db	255
  4253   00FC4D  FF                 	db	255
  4254   00FC4E  FF                 	db	255
  4255   00FC4F  FF                 	db	255
  4256   00FC50  FF                 	db	255
  4257   00FC51  FF                 	db	255
  4258   00FC52  FF                 	db	255
  4259   00FC53  FF                 	db	255
  4260   00FC54  FF                 	db	255
  4261   00FC55  FF                 	db	255
  4262   00FC56  FF                 	db	255
  4263   00FC57  FF                 	db	255
  4264   00FC58  FF                 	db	255
  4265   00FC59  FF                 	db	255
  4266   00FC5A  FF                 	db	255
  4267   00FC5B  FF                 	db	255
  4268   00FC5C  FF                 	db	255
  4269   00FC5D  FF                 	db	255
  4270   00FC5E  FF                 	db	255
  4271   00FC5F  FF                 	db	255
  4272   00FC60  FF                 	db	255
  4273   00FC61  FF                 	db	255
  4274   00FC62  FF                 	db	255
  4275   00FC63  FF                 	db	255
  4276   00FC64  FF                 	db	255
  4277   00FC65  FF                 	db	255
  4278   00FC66  FF                 	db	255
  4279   00FC67  FF                 	db	255
  4280   00FC68  FF                 	db	255
  4281   00FC69  FF                 	db	255
  4282   00FC6A  FF                 	db	255
  4283   00FC6B  FF                 	db	255
  4284   00FC6C  FF                 	db	255
  4285   00FC6D  FF                 	db	255
  4286   00FC6E  FF                 	db	255
  4287   00FC6F  FF                 	db	255
  4288   00FC70  FF                 	db	255
  4289   00FC71  FF                 	db	255
  4290   00FC72  FF                 	db	255
  4291   00FC73  FF                 	db	255
  4292   00FC74  FF                 	db	255
  4293   00FC75  FF                 	db	255
  4294   00FC76  FF                 	db	255
  4295   00FC77  FF                 	db	255
  4296   00FC78  FF                 	db	255
  4297   00FC79  FF                 	db	255
  4298   00FC7A  FF                 	db	255
  4299   00FC7B  FF                 	db	255
  4300   00FC7C  FF                 	db	255
  4301   00FC7D  FF                 	db	255
  4302   00FC7E  FF                 	db	255
  4303   00FC7F  FF                 	db	255
  4304   00FC80  FF                 	db	255
  4305   00FC81  FF                 	db	255
  4306   00FC82  FF                 	db	255
  4307   00FC83  FF                 	db	255
  4308   00FC84  FF                 	db	255
  4309   00FC85  FF                 	db	255
  4310   00FC86  FF                 	db	255
  4311   00FC87  FF                 	db	255
  4312   00FC88  FF                 	db	255
  4313   00FC89  FF                 	db	255
  4314   00FC8A  FF                 	db	255
  4315   00FC8B  FF                 	db	255
  4316   00FC8C  FF                 	db	255
  4317   00FC8D  FF                 	db	255
  4318   00FC8E  FF                 	db	255
  4319   00FC8F  FF                 	db	255
  4320   00FC90  FF                 	db	255
  4321   00FC91  FF                 	db	255
  4322   00FC92  FF                 	db	255
  4323   00FC93  FF                 	db	255
  4324   00FC94  FF                 	db	255
  4325   00FC95  FF                 	db	255
  4326   00FC96  FF                 	db	255
  4327   00FC97  FF                 	db	255
  4328   00FC98  FF                 	db	255
  4329   00FC99  FF                 	db	255
  4330   00FC9A  FF                 	db	255
  4331   00FC9B  FF                 	db	255
  4332   00FC9C  FF                 	db	255
  4333   00FC9D  FF                 	db	255
  4334   00FC9E  FF                 	db	255
  4335   00FC9F  FF                 	db	255
  4336   00FCA0  FF                 	db	255
  4337   00FCA1  FF                 	db	255
  4338   00FCA2  FF                 	db	255
  4339   00FCA3  FF                 	db	255
  4340   00FCA4  FF                 	db	255
  4341   00FCA5  FF                 	db	255
  4342   00FCA6  FF                 	db	255
  4343   00FCA7  FF                 	db	255
  4344   00FCA8  FF                 	db	255
  4345   00FCA9  FF                 	db	255
  4346   00FCAA  FF                 	db	255
  4347   00FCAB  FF                 	db	255
  4348   00FCAC  FF                 	db	255
  4349   00FCAD  FF                 	db	255
  4350   00FCAE  FF                 	db	255
  4351   00FCAF  FF                 	db	255
  4352   00FCB0  FF                 	db	255
  4353   00FCB1  FF                 	db	255
  4354   00FCB2  FF                 	db	255
  4355   00FCB3  FF                 	db	255
  4356   00FCB4  FF                 	db	255
  4357   00FCB5  FF                 	db	255
  4358   00FCB6  FF                 	db	255
  4359   00FCB7  FF                 	db	255
  4360   00FCB8  FF                 	db	255
  4361   00FCB9  FF                 	db	255
  4362   00FCBA  FF                 	db	255
  4363   00FCBB  FF                 	db	255
  4364   00FCBC  FF                 	db	255
  4365   00FCBD  FF                 	db	255
  4366   00FCBE  FF                 	db	255
  4367   00FCBF  FF                 	db	255
  4368   00FCC0  FF                 	db	255
  4369   00FCC1  FF                 	db	255
  4370   00FCC2  FF                 	db	255
  4371   00FCC3  FF                 	db	255
  4372   00FCC4  FF                 	db	255
  4373   00FCC5  FF                 	db	255
  4374   00FCC6  FF                 	db	255
  4375   00FCC7  FF                 	db	255
  4376   00FCC8  FF                 	db	255
  4377   00FCC9  FF                 	db	255
  4378   00FCCA  FF                 	db	255
  4379   00FCCB  FF                 	db	255
  4380   00FCCC  FF                 	db	255
  4381   00FCCD  FF                 	db	255
  4382   00FCCE  FF                 	db	255
  4383   00FCCF  FF                 	db	255
  4384   00FCD0  FF                 	db	255
  4385   00FCD1  FF                 	db	255
  4386   00FCD2  FF                 	db	255
  4387   00FCD3  FF                 	db	255
  4388   00FCD4  FF                 	db	255
  4389   00FCD5  FF                 	db	255
  4390   00FCD6  FF                 	db	255
  4391   00FCD7  FF                 	db	255
  4392   00FCD8  FF                 	db	255
  4393   00FCD9  FF                 	db	255
  4394   00FCDA  FF                 	db	255
  4395   00FCDB  FF                 	db	255
  4396   00FCDC  FF                 	db	255
  4397   00FCDD  FF                 	db	255
  4398   00FCDE  FF                 	db	255
  4399   00FCDF  FF                 	db	255
  4400   00FCE0  FF                 	db	255
  4401   00FCE1  FF                 	db	255
  4402   00FCE2  FF                 	db	255
  4403   00FCE3  FF                 	db	255
  4404   00FCE4  FF                 	db	255
  4405   00FCE5  FF                 	db	255
  4406   00FCE6  FF                 	db	255
  4407   00FCE7  FF                 	db	255
  4408   00FCE8  FF                 	db	255
  4409   00FCE9  FF                 	db	255
  4410   00FCEA  FF                 	db	255
  4411   00FCEB  FF                 	db	255
  4412   00FCEC  FF                 	db	255
  4413   00FCED  FF                 	db	255
  4414   00FCEE  FF                 	db	255
  4415   00FCEF  FF                 	db	255
  4416   00FCF0  FF                 	db	255
  4417   00FCF1  FF                 	db	255
  4418   00FCF2  FF                 	db	255
  4419   00FCF3  FF                 	db	255
  4420   00FCF4  FF                 	db	255
  4421   00FCF5  FF                 	db	255
  4422   00FCF6  FF                 	db	255
  4423   00FCF7  FF                 	db	255
  4424   00FCF8  FF                 	db	255
  4425   00FCF9  FF                 	db	255
  4426   00FCFA  FF                 	db	255
  4427   00FCFB  FF                 	db	255
  4428   00FCFC  FF                 	db	255
  4429   00FCFD  FF                 	db	255
  4430   00FCFE  FF                 	db	255
  4431   00FCFF  FF                 	db	255
  4432   00FD00  FF                 	db	255
  4433   00FD01  FF                 	db	255
  4434   00FD02  FF                 	db	255
  4435   00FD03  FF                 	db	255
  4436   00FD04  FF                 	db	255
  4437   00FD05  FF                 	db	255
  4438   00FD06  FF                 	db	255
  4439   00FD07  FF                 	db	255
  4440   00FD08  FF                 	db	255
  4441   00FD09  FF                 	db	255
  4442   00FD0A  FF                 	db	255
  4443   00FD0B  FF                 	db	255
  4444   00FD0C  FF                 	db	255
  4445   00FD0D  FF                 	db	255
  4446   00FD0E  FF                 	db	255
  4447   00FD0F  FF                 	db	255
  4448   00FD10  FF                 	db	255
  4449   00FD11  FF                 	db	255
  4450   00FD12  FF                 	db	255
  4451   00FD13  FF                 	db	255
  4452   00FD14  FF                 	db	255
  4453   00FD15  FF                 	db	255
  4454   00FD16  FF                 	db	255
  4455   00FD17  FF                 	db	255
  4456   00FD18  FF                 	db	255
  4457   00FD19  FF                 	db	255
  4458   00FD1A  FF                 	db	255
  4459   00FD1B  FF                 	db	255
  4460   00FD1C  FF                 	db	255
  4461   00FD1D  FF                 	db	255
  4462   00FD1E  FF                 	db	255
  4463   00FD1F  FF                 	db	255
  4464   00FD20  FF                 	db	255
  4465   00FD21  FF                 	db	255
  4466   00FD22  FF                 	db	255
  4467   00FD23  FF                 	db	255
  4468   00FD24  FF                 	db	255
  4469   00FD25  FF                 	db	255
  4470   00FD26  FF                 	db	255
  4471   00FD27  FF                 	db	255
  4472   00FD28  FF                 	db	255
  4473   00FD29  FF                 	db	255
  4474   00FD2A  FF                 	db	255
  4475   00FD2B  FF                 	db	255
  4476   00FD2C  FF                 	db	255
  4477   00FD2D  FF                 	db	255
  4478   00FD2E  FF                 	db	255
  4479   00FD2F  FF                 	db	255
  4480   00FD30  FF                 	db	255
  4481   00FD31  FF                 	db	255
  4482   00FD32  FF                 	db	255
  4483   00FD33  FF                 	db	255
  4484   00FD34  FF                 	db	255
  4485   00FD35  FF                 	db	255
  4486   00FD36  FF                 	db	255
  4487   00FD37  FF                 	db	255
  4488   00FD38  FF                 	db	255
  4489   00FD39  FF                 	db	255
  4490   00FD3A  FF                 	db	255
  4491   00FD3B  FF                 	db	255
  4492   00FD3C  FF                 	db	255
  4493   00FD3D  FF                 	db	255
  4494   00FD3E  FF                 	db	255
  4495   00FD3F  FF                 	db	255
  4496   00FD40  FF                 	db	255
  4497   00FD41  FF                 	db	255
  4498   00FD42  FF                 	db	255
  4499   00FD43  FF                 	db	255
  4500   00FD44  FF                 	db	255
  4501   00FD45  FF                 	db	255
  4502   00FD46  FF                 	db	255
  4503   00FD47  FF                 	db	255
  4504   00FD48  FF                 	db	255
  4505   00FD49  FF                 	db	255
  4506   00FD4A  FF                 	db	255
  4507   00FD4B  FF                 	db	255
  4508   00FD4C  FF                 	db	255
  4509   00FD4D  FF                 	db	255
  4510   00FD4E  FF                 	db	255
  4511   00FD4F  FF                 	db	255
  4512   00FD50  FF                 	db	255
  4513   00FD51  FF                 	db	255
  4514   00FD52  FF                 	db	255
  4515   00FD53  FF                 	db	255
  4516   00FD54  FF                 	db	255
  4517   00FD55  FF                 	db	255
  4518   00FD56  FF                 	db	255
  4519   00FD57  FF                 	db	255
  4520   00FD58  FF                 	db	255
  4521   00FD59  FF                 	db	255
  4522   00FD5A  FF                 	db	255
  4523   00FD5B  FF                 	db	255
  4524   00FD5C  FF                 	db	255
  4525   00FD5D  FF                 	db	255
  4526   00FD5E  FF                 	db	255
  4527   00FD5F  FF                 	db	255
  4528   00FD60  FF                 	db	255
  4529   00FD61  FF                 	db	255
  4530   00FD62  FF                 	db	255
  4531   00FD63  FF                 	db	255
  4532   00FD64  FF                 	db	255
  4533   00FD65  FF                 	db	255
  4534   00FD66  FF                 	db	255
  4535   00FD67  FF                 	db	255
  4536   00FD68  FF                 	db	255
  4537   00FD69  FF                 	db	255
  4538   00FD6A  FF                 	db	255
  4539   00FD6B  FF                 	db	255
  4540   00FD6C  FF                 	db	255
  4541   00FD6D  FF                 	db	255
  4542   00FD6E  FF                 	db	255
  4543   00FD6F  FF                 	db	255
  4544   00FD70  FF                 	db	255
  4545   00FD71  FF                 	db	255
  4546   00FD72  FF                 	db	255
  4547   00FD73  FF                 	db	255
  4548   00FD74  FF                 	db	255
  4549   00FD75  FF                 	db	255
  4550   00FD76  FF                 	db	255
  4551   00FD77  FF                 	db	255
  4552   00FD78  FF                 	db	255
  4553   00FD79  FF                 	db	255
  4554   00FD7A  FF                 	db	255
  4555   00FD7B  FF                 	db	255
  4556   00FD7C  FF                 	db	255
  4557   00FD7D  FF                 	db	255
  4558   00FD7E  FF                 	db	255
  4559   00FD7F  FF                 	db	255
  4560   00FD80  FF                 	db	255
  4561   00FD81  FF                 	db	255
  4562   00FD82  FF                 	db	255
  4563   00FD83  FF                 	db	255
  4564   00FD84  FF                 	db	255
  4565   00FD85  FF                 	db	255
  4566   00FD86  FF                 	db	255
  4567   00FD87  FF                 	db	255
  4568   00FD88  FF                 	db	255
  4569   00FD89  FF                 	db	255
  4570   00FD8A  FF                 	db	255
  4571   00FD8B  FF                 	db	255
  4572   00FD8C  FF                 	db	255
  4573   00FD8D  FF                 	db	255
  4574   00FD8E  FF                 	db	255
  4575   00FD8F  FF                 	db	255
  4576   00FD90  FF                 	db	255
  4577   00FD91  FF                 	db	255
  4578   00FD92  FF                 	db	255
  4579   00FD93  FF                 	db	255
  4580   00FD94  FF                 	db	255
  4581   00FD95  FF                 	db	255
  4582   00FD96  FF                 	db	255
  4583   00FD97  FF                 	db	255
  4584   00FD98  FF                 	db	255
  4585   00FD99  FF                 	db	255
  4586   00FD9A  FF                 	db	255
  4587   00FD9B  FF                 	db	255
  4588   00FD9C  FF                 	db	255
  4589   00FD9D  FF                 	db	255
  4590   00FD9E  FF                 	db	255
  4591   00FD9F  FF                 	db	255
  4592   00FDA0  FF                 	db	255
  4593   00FDA1  FF                 	db	255
  4594   00FDA2  FF                 	db	255
  4595   00FDA3  FF                 	db	255
  4596   00FDA4  FF                 	db	255
  4597   00FDA5  FF                 	db	255
  4598   00FDA6  FF                 	db	255
  4599   00FDA7  FF                 	db	255
  4600   00FDA8  FF                 	db	255
  4601   00FDA9  FF                 	db	255
  4602   00FDAA  FF                 	db	255
  4603   00FDAB  FF                 	db	255
  4604   00FDAC  FF                 	db	255
  4605   00FDAD  FF                 	db	255
  4606   00FDAE  FF                 	db	255
  4607   00FDAF  FF                 	db	255
  4608   00FDB0  FF                 	db	255
  4609   00FDB1  FF                 	db	255
  4610   00FDB2  FF                 	db	255
  4611   00FDB3  FF                 	db	255
  4612   00FDB4  FF                 	db	255
  4613   00FDB5  FF                 	db	255
  4614   00FDB6  FF                 	db	255
  4615   00FDB7  FF                 	db	255
  4616   00FDB8  FF                 	db	255
  4617   00FDB9  FF                 	db	255
  4618   00FDBA  FF                 	db	255
  4619   00FDBB  FF                 	db	255
  4620   00FDBC  FF                 	db	255
  4621   00FDBD  FF                 	db	255
  4622   00FDBE  FF                 	db	255
  4623   00FDBF  FF                 	db	255
  4624   00FDC0  FF                 	db	255
  4625   00FDC1  FF                 	db	255
  4626   00FDC2  FF                 	db	255
  4627   00FDC3  FF                 	db	255
  4628   00FDC4  FF                 	db	255
  4629   00FDC5  FF                 	db	255
  4630   00FDC6  FF                 	db	255
  4631   00FDC7  FF                 	db	255
  4632   00FDC8  FF                 	db	255
  4633   00FDC9  FF                 	db	255
  4634   00FDCA  FF                 	db	255
  4635   00FDCB  FF                 	db	255
  4636   00FDCC  FF                 	db	255
  4637   00FDCD  FF                 	db	255
  4638   00FDCE  FF                 	db	255
  4639   00FDCF  FF                 	db	255
  4640   00FDD0  FF                 	db	255
  4641   00FDD1  FF                 	db	255
  4642   00FDD2  FF                 	db	255
  4643   00FDD3  FF                 	db	255
  4644   00FDD4  FF                 	db	255
  4645   00FDD5  FF                 	db	255
  4646   00FDD6  FF                 	db	255
  4647   00FDD7  FF                 	db	255
  4648   00FDD8  FF                 	db	255
  4649   00FDD9  FF                 	db	255
  4650   00FDDA  FF                 	db	255
  4651   00FDDB  FF                 	db	255
  4652   00FDDC  FF                 	db	255
  4653   00FDDD  FF                 	db	255
  4654   00FDDE  FF                 	db	255
  4655   00FDDF  FF                 	db	255
  4656   00FDE0  FF                 	db	255
  4657   00FDE1  FF                 	db	255
  4658   00FDE2  FF                 	db	255
  4659   00FDE3  FF                 	db	255
  4660   00FDE4  FF                 	db	255
  4661   00FDE5  FF                 	db	255
  4662   00FDE6  FF                 	db	255
  4663   00FDE7  FF                 	db	255
  4664   00FDE8  FF                 	db	255
  4665   00FDE9  FF                 	db	255
  4666   00FDEA  FF                 	db	255
  4667   00FDEB  FF                 	db	255
  4668   00FDEC  FF                 	db	255
  4669   00FDED  FF                 	db	255
  4670   00FDEE  FF                 	db	255
  4671   00FDEF  FF                 	db	255
  4672   00FDF0  FF                 	db	255
  4673   00FDF1  FF                 	db	255
  4674   00FDF2  FF                 	db	255
  4675   00FDF3  FF                 	db	255
  4676   00FDF4  FF                 	db	255
  4677   00FDF5  FF                 	db	255
  4678   00FDF6  FF                 	db	255
  4679   00FDF7  FF                 	db	255
  4680   00FDF8  FF                 	db	255
  4681   00FDF9  FF                 	db	255
  4682   00FDFA  FF                 	db	255
  4683   00FDFB  FF                 	db	255
  4684   00FDFC  FF                 	db	255
  4685   00FDFD  FF                 	db	255
  4686   00FDFE  FF                 	db	255
  4687   00FDFF  FF                 	db	255
  4688   00FE00  FF                 	db	255
  4689   00FE01  FF                 	db	255
  4690   00FE02  FF                 	db	255
  4691   00FE03  FF                 	db	255
  4692   00FE04  FF                 	db	255
  4693   00FE05  FF                 	db	255
  4694   00FE06  FF                 	db	255
  4695   00FE07  FF                 	db	255
  4696   00FE08  FF                 	db	255
  4697   00FE09  FF                 	db	255
  4698   00FE0A  FF                 	db	255
  4699   00FE0B  FF                 	db	255
  4700   00FE0C  FF                 	db	255
  4701   00FE0D  FF                 	db	255
  4702   00FE0E  FF                 	db	255
  4703   00FE0F  FF                 	db	255
  4704   00FE10  FF                 	db	255
  4705   00FE11  FF                 	db	255
  4706   00FE12  FF                 	db	255
  4707   00FE13  FF                 	db	255
  4708   00FE14  FF                 	db	255
  4709   00FE15  FF                 	db	255
  4710   00FE16  FF                 	db	255
  4711   00FE17  FF                 	db	255
  4712   00FE18  FF                 	db	255
  4713   00FE19  FF                 	db	255
  4714   00FE1A  FF                 	db	255
  4715   00FE1B  FF                 	db	255
  4716   00FE1C  FF                 	db	255
  4717   00FE1D  FF                 	db	255
  4718   00FE1E  FF                 	db	255
  4719   00FE1F  FF                 	db	255
  4720   00FE20  FF                 	db	255
  4721   00FE21  FF                 	db	255
  4722   00FE22  FF                 	db	255
  4723   00FE23  FF                 	db	255
  4724   00FE24  FF                 	db	255
  4725   00FE25  FF                 	db	255
  4726   00FE26  FF                 	db	255
  4727   00FE27  FF                 	db	255
  4728   00FE28  FF                 	db	255
  4729   00FE29  FF                 	db	255
  4730   00FE2A  FF                 	db	255
  4731   00FE2B  FF                 	db	255
  4732   00FE2C  FF                 	db	255
  4733   00FE2D  FF                 	db	255
  4734   00FE2E  FF                 	db	255
  4735   00FE2F  FF                 	db	255
  4736   00FE30  FF                 	db	255
  4737   00FE31  FF                 	db	255
  4738   00FE32  FF                 	db	255
  4739   00FE33  FF                 	db	255
  4740   00FE34  FF                 	db	255
  4741   00FE35  FF                 	db	255
  4742   00FE36  FF                 	db	255
  4743   00FE37  FF                 	db	255
  4744   00FE38  FF                 	db	255
  4745   00FE39  FF                 	db	255
  4746   00FE3A  FF                 	db	255
  4747   00FE3B  FF                 	db	255
  4748   00FE3C  FF                 	db	255
  4749   00FE3D  FF                 	db	255
  4750   00FE3E  FF                 	db	255
  4751   00FE3F  FF                 	db	255
  4752   00FE40  FF                 	db	255
  4753   00FE41  FF                 	db	255
  4754   00FE42  FF                 	db	255
  4755   00FE43  FF                 	db	255
  4756   00FE44  FF                 	db	255
  4757   00FE45  FF                 	db	255
  4758   00FE46  FF                 	db	255
  4759   00FE47  FF                 	db	255
  4760   00FE48  FF                 	db	255
  4761   00FE49  FF                 	db	255
  4762   00FE4A  FF                 	db	255
  4763   00FE4B  FF                 	db	255
  4764   00FE4C  FF                 	db	255
  4765   00FE4D  FF                 	db	255
  4766   00FE4E  FF                 	db	255
  4767   00FE4F  FF                 	db	255
  4768   00FE50  FF                 	db	255
  4769   00FE51  FF                 	db	255
  4770   00FE52  FF                 	db	255
  4771   00FE53  FF                 	db	255
  4772   00FE54  FF                 	db	255
  4773   00FE55  FF                 	db	255
  4774   00FE56  FF                 	db	255
  4775   00FE57  FF                 	db	255
  4776   00FE58  FF                 	db	255
  4777   00FE59  FF                 	db	255
  4778   00FE5A  FF                 	db	255
  4779   00FE5B  FF                 	db	255
  4780   00FE5C  FF                 	db	255
  4781   00FE5D  FF                 	db	255
  4782   00FE5E  FF                 	db	255
  4783   00FE5F  FF                 	db	255
  4784   00FE60  FF                 	db	255
  4785   00FE61  FF                 	db	255
  4786   00FE62  FF                 	db	255
  4787   00FE63  FF                 	db	255
  4788   00FE64  FF                 	db	255
  4789   00FE65  FF                 	db	255
  4790   00FE66  FF                 	db	255
  4791   00FE67  FF                 	db	255
  4792   00FE68  FF                 	db	255
  4793   00FE69  FF                 	db	255
  4794   00FE6A  FF                 	db	255
  4795   00FE6B  FF                 	db	255
  4796   00FE6C  FF                 	db	255
  4797   00FE6D  FF                 	db	255
  4798   00FE6E  FF                 	db	255
  4799   00FE6F  FF                 	db	255
  4800   00FE70  FF                 	db	255
  4801   00FE71  FF                 	db	255
  4802   00FE72  FF                 	db	255
  4803   00FE73  FF                 	db	255
  4804   00FE74  FF                 	db	255
  4805   00FE75  FF                 	db	255
  4806   00FE76  FF                 	db	255
  4807   00FE77  FF                 	db	255
  4808   00FE78  FF                 	db	255
  4809   00FE79  FF                 	db	255
  4810   00FE7A  FF                 	db	255
  4811   00FE7B  FF                 	db	255
  4812   00FE7C  FF                 	db	255
  4813   00FE7D  FF                 	db	255
  4814   00FE7E  FF                 	db	255
  4815   00FE7F  FF                 	db	255
  4816   00FE80  FF                 	db	255
  4817   00FE81  FF                 	db	255
  4818   00FE82  FF                 	db	255
  4819   00FE83  FF                 	db	255
  4820   00FE84  FF                 	db	255
  4821   00FE85  FF                 	db	255
  4822   00FE86  FF                 	db	255
  4823   00FE87  FF                 	db	255
  4824   00FE88  FF                 	db	255
  4825   00FE89  FF                 	db	255
  4826   00FE8A  FF                 	db	255
  4827   00FE8B  FF                 	db	255
  4828   00FE8C  FF                 	db	255
  4829   00FE8D  FF                 	db	255
  4830   00FE8E  FF                 	db	255
  4831   00FE8F  FF                 	db	255
  4832   00FE90  FF                 	db	255
  4833   00FE91  FF                 	db	255
  4834   00FE92  FF                 	db	255
  4835   00FE93  FF                 	db	255
  4836   00FE94  FF                 	db	255
  4837   00FE95  FF                 	db	255
  4838   00FE96  FF                 	db	255
  4839   00FE97  FF                 	db	255
  4840   00FE98  FF                 	db	255
  4841   00FE99  FF                 	db	255
  4842   00FE9A  FF                 	db	255
  4843   00FE9B  FF                 	db	255
  4844   00FE9C  FF                 	db	255
  4845   00FE9D  FF                 	db	255
  4846   00FE9E  FF                 	db	255
  4847   00FE9F  FF                 	db	255
  4848   00FEA0  FF                 	db	255
  4849   00FEA1  FF                 	db	255
  4850   00FEA2  FF                 	db	255
  4851   00FEA3  FF                 	db	255
  4852   00FEA4  FF                 	db	255
  4853   00FEA5  FF                 	db	255
  4854   00FEA6  FF                 	db	255
  4855   00FEA7  FF                 	db	255
  4856   00FEA8  FF                 	db	255
  4857   00FEA9  FF                 	db	255
  4858   00FEAA  FF                 	db	255
  4859   00FEAB  FF                 	db	255
  4860   00FEAC  FF                 	db	255
  4861   00FEAD  FF                 	db	255
  4862   00FEAE  FF                 	db	255
  4863   00FEAF  FF                 	db	255
  4864   00FEB0  FF                 	db	255
  4865   00FEB1  FF                 	db	255
  4866   00FEB2  FF                 	db	255
  4867   00FEB3  FF                 	db	255
  4868   00FEB4  FF                 	db	255
  4869   00FEB5  FF                 	db	255
  4870   00FEB6  FF                 	db	255
  4871   00FEB7  FF                 	db	255
  4872   00FEB8  FF                 	db	255
  4873   00FEB9  FF                 	db	255
  4874   00FEBA  FF                 	db	255
  4875   00FEBB  FF                 	db	255
  4876   00FEBC  FF                 	db	255
  4877   00FEBD  FF                 	db	255
  4878   00FEBE  FF                 	db	255
  4879   00FEBF  FF                 	db	255
  4880   00FEC0  FF                 	db	255
  4881   00FEC1  FF                 	db	255
  4882   00FEC2  FF                 	db	255
  4883   00FEC3  FF                 	db	255
  4884   00FEC4  FF                 	db	255
  4885   00FEC5  FF                 	db	255
  4886   00FEC6  FF                 	db	255
  4887   00FEC7  FF                 	db	255
  4888   00FEC8  FF                 	db	255
  4889   00FEC9  FF                 	db	255
  4890   00FECA  FF                 	db	255
  4891   00FECB  FF                 	db	255
  4892   00FECC  FF                 	db	255
  4893   00FECD  FF                 	db	255
  4894   00FECE  FF                 	db	255
  4895   00FECF  FF                 	db	255
  4896   00FED0  FF                 	db	255
  4897   00FED1  FF                 	db	255
  4898   00FED2  FF                 	db	255
  4899   00FED3  FF                 	db	255
  4900   00FED4  FF                 	db	255
  4901   00FED5  FF                 	db	255
  4902   00FED6  FF                 	db	255
  4903   00FED7  FF                 	db	255
  4904   00FED8  FF                 	db	255
  4905   00FED9  FF                 	db	255
  4906   00FEDA  FF                 	db	255
  4907   00FEDB  FF                 	db	255
  4908   00FEDC  FF                 	db	255
  4909   00FEDD  FF                 	db	255
  4910   00FEDE  FF                 	db	255
  4911   00FEDF  FF                 	db	255
  4912   00FEE0  FF                 	db	255
  4913   00FEE1  FF                 	db	255
  4914   00FEE2  FF                 	db	255
  4915   00FEE3  FF                 	db	255
  4916   00FEE4  FF                 	db	255
  4917   00FEE5  FF                 	db	255
  4918   00FEE6  FF                 	db	255
  4919   00FEE7  FF                 	db	255
  4920   00FEE8  FF                 	db	255
  4921   00FEE9  FF                 	db	255
  4922   00FEEA  FF                 	db	255
  4923   00FEEB  FF                 	db	255
  4924   00FEEC  FF                 	db	255
  4925   00FEED  FF                 	db	255
  4926   00FEEE  FF                 	db	255
  4927   00FEEF  FF                 	db	255
  4928   00FEF0  FF                 	db	255
  4929   00FEF1  FF                 	db	255
  4930   00FEF2  FF                 	db	255
  4931   00FEF3  FF                 	db	255
  4932   00FEF4  FF                 	db	255
  4933   00FEF5  FF                 	db	255
  4934   00FEF6  FF                 	db	255
  4935   00FEF7  FF                 	db	255
  4936   00FEF8  FF                 	db	255
  4937   00FEF9  FF                 	db	255
  4938   00FEFA  FF                 	db	255
  4939   00FEFB  FF                 	db	255
  4940   00FEFC  FF                 	db	255
  4941   00FEFD  FF                 	db	255
  4942   00FEFE  FF                 	db	255
  4943   00FEFF  FF                 	db	255
  4944   00FF00  FF                 	db	255
  4945   00FF01  FF                 	db	255
  4946   00FF02  FF                 	db	255
  4947   00FF03  FF                 	db	255
  4948   00FF04  FF                 	db	255
  4949   00FF05  FF                 	db	255
  4950   00FF06  FF                 	db	255
  4951   00FF07  FF                 	db	255
  4952   00FF08  FF                 	db	255
  4953   00FF09  FF                 	db	255
  4954   00FF0A  FF                 	db	255
  4955   00FF0B  FF                 	db	255
  4956   00FF0C  FF                 	db	255
  4957   00FF0D  FF                 	db	255
  4958   00FF0E  FF                 	db	255
  4959   00FF0F  FF                 	db	255
  4960   00FF10  FF                 	db	255
  4961   00FF11  FF                 	db	255
  4962   00FF12  FF                 	db	255
  4963   00FF13  FF                 	db	255
  4964   00FF14  FF                 	db	255
  4965   00FF15  FF                 	db	255
  4966   00FF16  FF                 	db	255
  4967   00FF17  FF                 	db	255
  4968   00FF18  FF                 	db	255
  4969   00FF19  FF                 	db	255
  4970   00FF1A  FF                 	db	255
  4971   00FF1B  FF                 	db	255
  4972   00FF1C  FF                 	db	255
  4973   00FF1D  FF                 	db	255
  4974   00FF1E  FF                 	db	255
  4975   00FF1F  FF                 	db	255
  4976   00FF20  FF                 	db	255
  4977   00FF21  FF                 	db	255
  4978   00FF22  FF                 	db	255
  4979   00FF23  FF                 	db	255
  4980   00FF24  FF                 	db	255
  4981   00FF25  FF                 	db	255
  4982   00FF26  FF                 	db	255
  4983   00FF27  FF                 	db	255
  4984   00FF28  FF                 	db	255
  4985   00FF29  FF                 	db	255
  4986   00FF2A  FF                 	db	255
  4987   00FF2B  FF                 	db	255
  4988   00FF2C  FF                 	db	255
  4989   00FF2D  FF                 	db	255
  4990   00FF2E  FF                 	db	255
  4991   00FF2F  FF                 	db	255
  4992   00FF30  FF                 	db	255
  4993   00FF31  FF                 	db	255
  4994   00FF32  FF                 	db	255
  4995   00FF33  FF                 	db	255
  4996   00FF34  FF                 	db	255
  4997   00FF35  FF                 	db	255
  4998   00FF36  FF                 	db	255
  4999   00FF37  FF                 	db	255
  5000   00FF38  FF                 	db	255
  5001   00FF39  FF                 	db	255
  5002   00FF3A  FF                 	db	255
  5003   00FF3B  FF                 	db	255
  5004   00FF3C  FF                 	db	255
  5005   00FF3D  FF                 	db	255
  5006   00FF3E  FF                 	db	255
  5007   00FF3F  FF                 	db	255
  5008   00FF40  FF                 	db	255
  5009   00FF41  FF                 	db	255
  5010   00FF42  FF                 	db	255
  5011   00FF43  FF                 	db	255
  5012   00FF44  FF                 	db	255
  5013   00FF45  FF                 	db	255
  5014   00FF46  FF                 	db	255
  5015   00FF47  FF                 	db	255
  5016   00FF48  FF                 	db	255
  5017   00FF49  FF                 	db	255
  5018   00FF4A  FF                 	db	255
  5019   00FF4B  FF                 	db	255
  5020   00FF4C  FF                 	db	255
  5021   00FF4D  FF                 	db	255
  5022   00FF4E  FF                 	db	255
  5023   00FF4F  FF                 	db	255
  5024   00FF50  FF                 	db	255
  5025   00FF51  FF                 	db	255
  5026   00FF52  FF                 	db	255
  5027   00FF53  FF                 	db	255
  5028   00FF54  FF                 	db	255
  5029   00FF55  FF                 	db	255
  5030   00FF56  FF                 	db	255
  5031   00FF57  FF                 	db	255
  5032   00FF58  FF                 	db	255
  5033   00FF59  FF                 	db	255
  5034   00FF5A  FF                 	db	255
  5035   00FF5B  FF                 	db	255
  5036   00FF5C  FF                 	db	255
  5037   00FF5D  FF                 	db	255
  5038   00FF5E  FF                 	db	255
  5039   00FF5F  FF                 	db	255
  5040   00FF60  FF                 	db	255
  5041   00FF61  FF                 	db	255
  5042   00FF62  FF                 	db	255
  5043   00FF63  FF                 	db	255
  5044   00FF64  FF                 	db	255
  5045   00FF65  FF                 	db	255
  5046   00FF66  FF                 	db	255
  5047   00FF67  FF                 	db	255
  5048   00FF68  FF                 	db	255
  5049   00FF69  FF                 	db	255
  5050   00FF6A  FF                 	db	255
  5051   00FF6B  FF                 	db	255
  5052   00FF6C  FF                 	db	255
  5053   00FF6D  FF                 	db	255
  5054   00FF6E  FF                 	db	255
  5055   00FF6F  FF                 	db	255
  5056   00FF70                     __end_of_eventTable:
  5057                           	callstack 0
  5058   000000                     _paramBlock_absaddr	set	2080
  5059                           
  5060                           	psect	_paramBlock_text
  5061   000820                     __p_paramBlock_text:
  5062                           	callstack 0
  5063   000820                     _paramBlock:
  5064                           	callstack 0
  5065   000820  A5                 	db	165
  5066   000821  61                 	db	97
  5067   000822  20                 	db	32
  5068   000823  FF                 	db	255
  5069   000824  14                 	db	20
  5070   000825  7F                 	db	127
  5071   000826  04                 	db	4
  5072   000827  0B                 	db	11
  5073   000828  0F                 	db	15
  5074   000829  01                 	db	1
  5075   00082A  00                 	db	0
  5076   00082B  08                 	db	8
  5077   00082C  00                 	db	0
  5078   00082D  00                 	db	0
  5079   00082E  00                 	db	0
  5080   00082F  00                 	db	0
  5081   000830  00                 	db	0
  5082   000831  00                 	db	0
  5083   000832  01                 	db	1
  5084   000833  0C                 	db	12
  5085   000834  00                 	db	0
  5086   000835  00                 	db	0
  5087   000836  00                 	db	0
  5088   000837  00                 	db	0
  5089   000838  14                 	db	20
  5090   000839  00                 	db	0
  5091   00083A  48                 	db	72
  5092   00083B  08                 	db	8
  5093   00083C  00                 	db	0
  5094   00083D  00                 	db	0
  5095   00083E  50                 	db	80
  5096   00083F  03                 	db	3
  5097   000840                     __end_of_paramBlock:
  5098                           	callstack 0
  5099   000000                     _name_absaddr	set	2120
  5100                           
  5101                           	psect	_name_text
  5102   000848                     __p_name_text:
  5103                           	callstack 0
  5104   000848                     _name:
  5105                           	callstack 0
  5106   000848  4D                 	db	77
  5107   000849  49                 	db	73
  5108   00084A  4F                 	db	79
  5109   00084B  20                 	db	32
  5110   00084C  20                 	db	32
  5111   00084D  20                 	db	32
  5112   00084E  20                 	db	32
  5113   00084F  00                 	db	0
  5114   000850                     __end_of_name:
  5115                           	callstack 0
  5116   000000                     _COMSTAT	set	3953
  5117   000000                     _PIR5bits	set	3959
  5118   000000                     _PIE5bits	set	3958
  5119   000000                     _TXBIEbits	set	3711
  5120   000000                     _BIE0	set	3710
  5121   000000                     _RXF0SIDL	set	3809
  5122   000000                     _RXM0SIDH	set	3832
  5123   000000                     _CIOCON	set	3952
  5124   000000                     _ECANCON	set	3954
  5125   000000                     _IPR5	set	3960
  5126   000000                     _EECON2	set	3966
  5127   000000                     _TMR0L	set	4054
  5128   000000                     _TMR0H	set	4055
  5129   000000                     _TMR3L	set	4018
  5130   000000                     _TMR3H	set	4019
  5131   000000                     _TMR1L	set	4046
  5132   000000                     _TMR1H	set	4047
  5133   000000                     _T3CONbits	set	4017
  5134   000000                     _ANCON1	set	3932
  5135   000000                     _ANCON0	set	3933
  5136   000000                     _B0CON	set	3712
  5137                           
  5138                           	psect	nvBANK0
  5139   0000D1                     __pnvBANK0:
  5140                           	callstack 0
  5141   0000D1                     _flashBlock:
  5142                           	callstack 0
  5143   0000D1                     	ds	2
  5144   000000                     _TXB2CONbits	set	3840
  5145   000000                     _TXB1CONbits	set	3856
  5146   000000                     _TXB0CONbits	set	3872
  5147   000000                     _COMSTATbits	set	3953
  5148   000000                     _EECON1	set	3967
  5149   000000                     _T0CONbits	set	4053
  5150   000000                     _LATBbits	set	3978
  5151   000000                     _TRISAbits	set	3986
  5152   000000                     _TRISBbits	set	3987
  5153   000000                     _PORTAbits	set	3968
  5154   000000                     _BRGCON1	set	3651
  5155   000000                     _BSEL0	set	3709
  5156   000000                     _WPUB	set	3931
  5157   000000                     _INTCON2bits	set	4081
  5158   000000                     _TBLPTR	set	4086
  5159   000000                     _TABLAT	set	4085
  5160   000000                     _TBLPTRU	set	4088
  5161   000000                     _INTCONbits	set	4082
  5162   000000                     _CANSTATbits	set	3950
  5163   000000                     _CANCON	set	3951
  5164   000000                     _EEDATA	set	3955
  5165   000000                     _EEADR	set	3956
  5166   000000                     _EEADRH	set	3957
  5167   000000                     _EECON1bits	set	3967
  5168   000000                     _PORTA	set	3968
  5169   000000                     _LATA	set	3977
  5170   000000                     _TRISA	set	3986
  5171   000000                     _RXB0CON	set	3936
  5172   000000                     _OSCTUNEbits	set	3995
  5173   000000                     _PIE1bits	set	3997
  5174   000000                     _PIR1bits	set	3998
  5175   000000                     _TRISC	set	3988
  5176   000000                     _TRISB	set	3987
  5177   000000                     _PIE2bits	set	4000
  5178   000000                     _PIR2bits	set	4001
  5179   000000                     _T1GCONbits	set	4010
  5180   000000                     _LATC	set	3979
  5181   000000                     _LATB	set	3978
  5182   000000                     _PORTC	set	3970
  5183   000000                     _PORTB	set	3969
  5184   000000                     _T3GCONbits	set	4016
  5185   000000                     _T1CONbits	set	4045
  5186   000000                     _RCONbits	set	4048
  5187   000000                     _T0CON	set	4053
  5188   000000                     _EEIF	set	32190
  5189   000000                     _RXFCON0	set	3654
  5190   000000                     _RXFBCON0	set	3697
  5191   000000                     _BRGCON3	set	3653
  5192   000000                     _BRGCON2	set	3652
  5193   000000                     _TXB2CON	set	3840
  5194   000000                     _TXB1CON	set	3856
  5195   000000                     _TXB0CON	set	3872
  5196   000000                     _RXM0EIDL	set	3835
  5197   000000                     _RXM0EIDH	set	3834
  5198   000000                     _RXM0SIDL	set	3833
  5199   000000                     _RXB1CON	set	3888
  5200   000000                     _MSEL0	set	3705
  5201   000000                     _B1CON	set	3728
  5202   000000                     _B2CON	set	3744
  5203   000000                     _B3CON	set	3760
  5204   000000                     _B4CON	set	3776
  5205   000000                     _B5CON	set	3792
  5206   000000                     _TXB0SIDL	set	3874
  5207   000000                     _TXB0SIDH	set	3873
  5208   000000                     _TXB0DLC	set	3877
  5209   000000                     _TXB0D7	set	3885
  5210   000000                     _TXB0D6	set	3884
  5211   000000                     _TXB0D5	set	3883
  5212   000000                     _TXB0D4	set	3882
  5213   000000                     _TXB0D3	set	3881
  5214   000000                     _TXB0D2	set	3880
  5215   000000                     _TXB0D1	set	3879
  5216   000000                     _TXB0D0	set	3878
  5217   000000                     _TXB1SIDL	set	3858
  5218   000000                     _TXB1SIDH	set	3857
  5219   000000                     _TXB1DLC	set	3861
  5220   000000                     _TXB2SIDL	set	3842
  5221   000000                     _TXB2SIDH	set	3841
  5222   000000                     _TXB2DLC	set	3845
  5223                           
  5224                           ; #config settings
  5225                           
  5226                           	psect	cinit
  5227   00AEA2                     __pcinit:
  5228                           	callstack 0
  5229   00AEA2                     start_initialization:
  5230                           	callstack 0
  5231   00AEA2                     __initialization:
  5232                           	callstack 0
  5233                           
  5234                           ; Clear objects allocated to BIGRAM (928 bytes)
  5235   00AEA2  EE05  F048         	lfsr	0,__pbssBIGRAM
  5236   00AEA6  EE13 F0A0          	lfsr	1,928
  5237   00AEAA                     clear_0:
  5238   00AEAA  6AEE               	clrf	postinc0,c
  5239   00AEAC  50E5               	movf	postdec1,w,c
  5240   00AEAE  50E1               	movf	fsr1l,w,c
  5241   00AEB0  E1FC               	bnz	clear_0
  5242   00AEB2  50E2               	movf	fsr1h,w,c
  5243   00AEB4  E1FA               	bnz	clear_0
  5244                           
  5245                           ; Clear objects allocated to BANK5 (72 bytes)
  5246   00AEB6  EE05  F000         	lfsr	0,__pbssBANK5
  5247   00AEBA  0E48               	movlw	72
  5248   00AEBC                     clear_1:
  5249   00AEBC  6AEE               	clrf	postinc0,c
  5250   00AEBE  06E8               	decf	wreg,f,c
  5251   00AEC0  E1FD               	bnz	clear_1
  5252                           
  5253                           ; Clear objects allocated to BANK4 (192 bytes)
  5254   00AEC2  EE04  F000         	lfsr	0,__pbssBANK4
  5255   00AEC6  0EC0               	movlw	192
  5256   00AEC8                     clear_2:
  5257   00AEC8  6AEE               	clrf	postinc0,c
  5258   00AECA  06E8               	decf	wreg,f,c
  5259   00AECC  E1FD               	bnz	clear_2
  5260                           
  5261                           ; Clear objects allocated to BANK3 (200 bytes)
  5262   00AECE  EE03  F000         	lfsr	0,__pbssBANK3
  5263   00AED2  0EC8               	movlw	200
  5264   00AED4                     clear_3:
  5265   00AED4  6AEE               	clrf	postinc0,c
  5266   00AED6  06E8               	decf	wreg,f,c
  5267   00AED8  E1FD               	bnz	clear_3
  5268                           
  5269                           ; Clear objects allocated to BANK2 (204 bytes)
  5270   00AEDA  EE02  F000         	lfsr	0,__pbssBANK2
  5271   00AEDE  0ECC               	movlw	204
  5272   00AEE0                     clear_4:
  5273   00AEE0  6AEE               	clrf	postinc0,c
  5274   00AEE2  06E8               	decf	wreg,f,c
  5275   00AEE4  E1FD               	bnz	clear_4
  5276                           
  5277                           ; Clear objects allocated to BANK1 (190 bytes)
  5278   00AEE6  EE01  F000         	lfsr	0,__pbssBANK1
  5279   00AEEA  0EBE               	movlw	190
  5280   00AEEC                     clear_5:
  5281   00AEEC  6AEE               	clrf	postinc0,c
  5282   00AEEE  06E8               	decf	wreg,f,c
  5283   00AEF0  E1FD               	bnz	clear_5
  5284                           
  5285                           ; Clear objects allocated to BANK0 (39 bytes)
  5286   00AEF2  EE00  F0AA         	lfsr	0,__pbssBANK0
  5287   00AEF6  0E27               	movlw	39
  5288   00AEF8                     clear_6:
  5289   00AEF8  6AEE               	clrf	postinc0,c
  5290   00AEFA  06E8               	decf	wreg,f,c
  5291   00AEFC  E1FD               	bnz	clear_6
  5292                           
  5293                           ; Clear objects allocated to COMRAM (42 bytes)
  5294   00AEFE  EE00  F001         	lfsr	0,__pbssCOMRAM
  5295   00AF02  0E2A               	movlw	42
  5296   00AF04                     clear_7:
  5297   00AF04  6AEE               	clrf	postinc0,c
  5298   00AF06  06E8               	decf	wreg,f,c
  5299   00AF08  E1FD               	bnz	clear_7
  5300   00AF0A                     end_of_initialization:
  5301                           	callstack 0
  5302   00AF0A                     __end_of__initialization:
  5303                           	callstack 0
  5304   00AF0A  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5305   00AF0C  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5306   00AF0E  0100               	movlb	0
  5307   00AF10  EF11  F05E         	goto	_main	;jump to C main() function
  5308                           
  5309                           	psect	bssCOMRAM
  5310   000001                     __pbssCOMRAM:
  5311                           	callstack 0
  5312   000001                     _targetPos:
  5313                           	callstack 0
  5314   000001                     	ds	16
  5315   000011                     _enumerationStartTime:
  5316                           	callstack 0
  5317   000011                     	ds	4
  5318   000015                     _canTransmitTimeout:
  5319                           	callstack 0
  5320   000015                     	ds	4
  5321   000019                     _startWait:
  5322                           	callstack 0
  5323   000019                     	ds	4
  5324   00001D                     _startTime:
  5325                           	callstack 0
  5326   00001D                     	ds	4
  5327   000021                     _timedResponseCallback:
  5328                           	callstack 0
  5329   000021                     	ds	2
  5330   000023                     _EnumerationState:
  5331                           	callstack 0
  5332   000023                     	ds	1
  5333   000024                     _eeBootFlag:
  5334                           	callstack 0
  5335   000024                     	ds	1
  5336   000025                     _expedited:
  5337                           	callstack 0
  5338   000025                     	ds	1
  5339   000026                     _rxQueue:
  5340                           	callstack 0
  5341   000026                     	ds	5
  5342                           
  5343                           	psect	bssBANK0
  5344   0000AA                     __pbssBANK0:
  5345                           	callstack 0
  5346   0000AA                     _pbTimer:
  5347                           	callstack 0
  5348   0000AA                     	ds	4
  5349   0000AE                     _flashCounter:
  5350                           	callstack 0
  5351   0000AE                     	ds	2
  5352   0000B0                     _ledState:
  5353                           	callstack 0
  5354   0000B0                     	ds	2
  5355   0000B2                     _servoActive:
  5356                           	callstack 0
  5357   0000B2                     	ds	2
  5358   0000B4                     _nn:
  5359                           	callstack 0
  5360   0000B4                     	ds	2
  5361   0000B6                     _timedResponseOpcode:
  5362                           	callstack 0
  5363   0000B6                     	ds	1
  5364   0000B7                     _enumerationState:
  5365                           	callstack 0
  5366   0000B7                     	ds	1
  5367   0000B8                     _canTransmitFailed:
  5368                           	callstack 0
  5369   0000B8                     	ds	1
  5370   0000B9                     _canId:
  5371                           	callstack 0
  5372   0000B9                     	ds	1
  5373   0000BA                     _flashFlags:
  5374                           	callstack 0
  5375   0000BA                     	ds	1
  5376   0000BB                     _timedResponseStep:
  5377                           	callstack 0
  5378   0000BB                     	ds	1
  5379   0000BC                     _timedResponseType:
  5380                           	callstack 0
  5381   0000BC                     	ds	1
  5382   0000BD                     _timedResponseAllServicesFlag:
  5383                           	callstack 0
  5384   0000BD                     	ds	1
  5385   0000BE                     _timedResponseServiceIndex:
  5386                           	callstack 0
  5387   0000BE                     	ds	1
  5388   0000BF                     _heartbeatSequence:
  5389                           	callstack 0
  5390   0000BF                     	ds	1
  5391   0000C0                     _pbWasPushed:
  5392                           	callstack 0
  5393   0000C0                     	ds	1
  5394   0000C1                     _setupModePreviousMode:
  5395                           	callstack 0
  5396   0000C1                     	ds	1
  5397   0000C2                     _last_mode_flags:
  5398                           	callstack 0
  5399   0000C2                     	ds	1
  5400   0000C3                     _last_mode_state:
  5401                           	callstack 0
  5402   0000C3                     	ds	1
  5403   0000C4                     _mode_state:
  5404                           	callstack 0
  5405   0000C4                     	ds	1
  5406   0000C5                     _timerExtension2:
  5407                           	callstack 0
  5408   0000C5                     	ds	1
  5409   0000C6                     _timerExtension1:
  5410                           	callstack 0
  5411   0000C6                     	ds	1
  5412   0000C7                     _bootloaderVersion:
  5413                           	callstack 0
  5414   0000C7                     	ds	1
  5415   0000C8                     _bootloaderType:
  5416                           	callstack 0
  5417   0000C8                     	ds	1
  5418   0000C9                     _servoInBlock:
  5419                           	callstack 0
  5420   0000C9                     	ds	1
  5421   0000CA                     _expeditedWriteIndex:
  5422                           	callstack 0
  5423   0000CA                     	ds	1
  5424   0000CB                     _expeditedReadIndex:
  5425                           	callstack 0
  5426   0000CB                     	ds	1
  5427   0000CC                     _normalWriteIndex:
  5428                           	callstack 0
  5429   0000CC                     	ds	1
  5430   0000CD                     _normalReadIndex:
  5431                           	callstack 0
  5432   0000CD                     	ds	1
  5433   0000CE                     _io@inputs$F849:
  5434                           	callstack 0
  5435   0000CE                     	ds	1
  5436   0000CF                     _io:
  5437                           	callstack 0
  5438   0000CF                     	ds	1
  5439   0000D0                     _started:
  5440                           	callstack 0
  5441   0000D0                     	ds	1
  5442                           
  5443                           	psect	bssBANK1
  5444   000100                     __pbssBANK1:
  5445                           	callstack 0
  5446   000100                     _stepsPerPollSpeed:
  5447                           	callstack 0
  5448   000100                     	ds	16
  5449   000110                     _servoState:
  5450                           	callstack 0
  5451   000110                     	ds	16
  5452   000120                     _flashDelays:
  5453                           	callstack 0
  5454   000120                     	ds	16
  5455   000130                     _currentPos:
  5456                           	callstack 0
  5457   000130                     	ds	16
  5458   000140                     _flashFlushTime:
  5459                           	callstack 0
  5460   000140                     	ds	4
  5461   000144                     _timedResponseTime:
  5462                           	callstack 0
  5463   000144                     	ds	4
  5464   000148                     _ledTimer:
  5465                           	callstack 0
  5466   000148                     	ds	4
  5467   00014C                     _uptimeTimer:
  5468                           	callstack 0
  5469   00014C                     	ds	4
  5470   000150                     _heartbeatTimer:
  5471                           	callstack 0
  5472   000150                     	ds	4
  5473   000154                     _lastActionPollTime:
  5474                           	callstack 0
  5475   000154                     	ds	4
  5476   000158                     _lastInputScanTime:
  5477                           	callstack 0
  5478   000158                     	ds	4
  5479   00015C                     _lastServoStartTime:
  5480                           	callstack 0
  5481   00015C                     	ds	4
  5482   000160                     _previousNN:
  5483                           	callstack 0
  5484   000160                     	ds	2
  5485   000162                     _transport:
  5486                           	callstack 0
  5487   000162                     	ds	2
  5488   000164                     _timedResponseDelay:
  5489                           	callstack 0
  5490   000164                     	ds	1
  5491   000165                     _mode_flags:
  5492                           	callstack 0
  5493   000165                     	ds	1
  5494   000166                     _canDiagnostics:
  5495                           	callstack 0
  5496   000166                     	ds	38
  5497   00018C                     _mnsDiagnostics:
  5498                           	callstack 0
  5499   00018C                     	ds	14
  5500   00019A                     _tmpMessage:
  5501                           	callstack 0
  5502   00019A                     	ds	9
  5503   0001A3                     _nvDiagnostics:
  5504                           	callstack 0
  5505   0001A3                     	ds	6
  5506   0001A9                     _txQueue:
  5507                           	callstack 0
  5508   0001A9                     	ds	5
  5509   0001AE                     _producerDiagnostics:
  5510                           	callstack 0
  5511   0001AE                     	ds	4
  5512   0001B2                     _teachDiagnostics:
  5513                           	callstack 0
  5514   0001B2                     	ds	4
  5515   0001B6                     _ackDiagnostics:
  5516                           	callstack 0
  5517   0001B6                     	ds	4
  5518   0001BA                     _consumer2QDiagnostics:
  5519                           	callstack 0
  5520   0001BA                     	ds	4
  5521                           
  5522                           	psect	bssBANK2
  5523   000200                     __pbssBANK2:
  5524                           	callstack 0
  5525   000200                     _speed:
  5526                           	callstack 0
  5527   000200                     	ds	32
  5528   000220                     _evs:
  5529                           	callstack 0
  5530   000220                     	ds	20
  5531   000234                     _enumerationResults:
  5532                           	callstack 0
  5533   000234                     	ds	16
  5534   000244                     _bounceState:
  5535                           	callstack 0
  5536   000244                     	ds	16
  5537   000254                     _loopCount:
  5538                           	callstack 0
  5539   000254                     	ds	16
  5540   000264                     _pollCount:
  5541                           	callstack 0
  5542   000264                     	ds	16
  5543   000274                     _pollsPerStepSpeed:
  5544                           	callstack 0
  5545   000274                     	ds	16
  5546   000284                     _delayCount:
  5547                           	callstack 0
  5548   000284                     	ds	16
  5549   000294                     _inputState:
  5550                           	callstack 0
  5551   000294                     	ds	16
  5552   0002A4                     _pulseDelays:
  5553                           	callstack 0
  5554   0002A4                     	ds	16
  5555   0002B4                     _outputState:
  5556                           	callstack 0
  5557   0002B4                     	ds	16
  5558   0002C4                     _expeditedQueueBuf:
  5559                           	callstack 0
  5560   0002C4                     	ds	8
  5561                           
  5562                           	psect	bssBANK3
  5563   000300                     __pbssBANK3:
  5564                           	callstack 0
  5565   000300                     _happening2Event:
  5566                           	callstack 0
  5567   000300                     	ds	72
  5568   000348                     _flashBuffer:
  5569                           	callstack 0
  5570   000348                     	ds	64
  5571   000388                     _ticksWhenStopped:
  5572                           	callstack 0
  5573   000388                     	ds	64
  5574                           
  5575                           	psect	bssBANK4
  5576   000400                     __pbssBANK4:
  5577                           	callstack 0
  5578   000400                     _nvCache:
  5579                           	callstack 0
  5580   000400                     	ds	128
  5581   000480                     _normalQueueBuf:
  5582                           	callstack 0
  5583   000480                     	ds	64
  5584                           
  5585                           	psect	bssBANK5
  5586   000500                     __pbssBANK5:
  5587                           	callstack 0
  5588   000500                     _txBuffers:
  5589                           	callstack 0
  5590   000500                     	ds	72
  5591                           
  5592                           	psect	bssBIGRAM
  5593   000548                     __pbssBIGRAM:
  5594                           	callstack 0
  5595   000548                     _eventChains:
  5596                           	callstack 0
  5597   000548                     	ds	640
  5598   0007C8                     _rxBuffers:
  5599                           	callstack 0
  5600   0007C8                     	ds	288
  5601                           
  5602                           	psect	cstackBANK2
  5603   0002CC                     __pcstackBANK2:
  5604                           	callstack 0
  5605   0002CC                     ??_consumer2QProcessMessage:
  5606   0002CC                     ??_bootProcessMessage:
  5607   0002CC                     ??_ackEventProcessMessage:
  5608   0002CC                     ??_mnsProcessMessage:
  5609   0002CC                     ??_nvProcessMessage:
  5610   0002CC                     ??_canProcessMessage:
  5611   0002CC                     ??_teachProcessMessage:
  5612   0002CC                     ??_producerProcessMessage:
  5613                           
  5614                           ; 1 bytes @ 0x0
  5615   0002CC                     	ds	2
  5616   0002CE                     ackEventProcessMessage@eventEN:
  5617                           	callstack 0
  5618   0002CE                     nvProcessMessage@valueOrError:
  5619                           	callstack 0
  5620                           
  5621                           ; 2 bytes @ 0x2
  5622   0002CE                     	ds	1
  5623   0002CF                     consumer2QProcessMessage@end:
  5624                           	callstack 0
  5625                           
  5626                           ; 1 bytes @ 0x3
  5627   0002CF                     	ds	1
  5628   0002D0                     consumer2QProcessMessage@change:
  5629                           	callstack 0
  5630   0002D0                     ackEventProcessMessage@eventIndex:
  5631                           	callstack 0
  5632                           
  5633                           ; 1 bytes @ 0x4
  5634   0002D0                     	ds	1
  5635   0002D1                     consumer2QProcessMessage@opc:
  5636                           	callstack 0
  5637   0002D1                     ackEventProcessMessage@eventNN:
  5638                           	callstack 0
  5639                           
  5640                           ; 2 bytes @ 0x5
  5641   0002D1                     	ds	1
  5642   0002D2                     consumer2QProcessMessage@enn:
  5643                           	callstack 0
  5644   0002D2                     producerProcessMessage@ev:
  5645                           	callstack 0
  5646                           
  5647                           ; 2 bytes @ 0x6
  5648   0002D2                     	ds	2
  5649   0002D4                     consumer2QProcessMessage@tableIndex:
  5650                           	callstack 0
  5651   0002D4                     producerProcessMessage@h:
  5652                           	callstack 0
  5653                           
  5654                           ; 1 bytes @ 0x8
  5655   0002D4                     	ds	1
  5656   0002D5                     consumer2QProcessMessage@nextAction:
  5657                           	callstack 0
  5658   0002D5                     producerProcessMessage@index:
  5659                           	callstack 0
  5660                           
  5661                           ; 1 bytes @ 0x9
  5662   0002D5                     	ds	1
  5663   0002D6                     consumer2QProcessMessage@firstAction:
  5664                           	callstack 0
  5665                           
  5666                           ; 1 bytes @ 0xA
  5667   0002D6                     	ds	1
  5668   0002D7                     consumer2QProcessMessage@nextSimultaneous:
  5669                           	callstack 0
  5670                           
  5671                           ; 1 bytes @ 0xB
  5672   0002D7                     	ds	1
  5673   0002D8                     consumer2QProcessMessage@io:
  5674                           	callstack 0
  5675                           
  5676                           ; 1 bytes @ 0xC
  5677   0002D8                     	ds	1
  5678   0002D9                     consumer2QProcessMessage@masked_action:
  5679                           	callstack 0
  5680                           
  5681                           ; 1 bytes @ 0xD
  5682   0002D9                     	ds	1
  5683   0002DA                     consumer2QProcessMessage@ca:
  5684                           	callstack 0
  5685                           
  5686                           ; 1 bytes @ 0xE
  5687   0002DA                     	ds	1
  5688   0002DB                     consumer2QProcessMessage@e:
  5689                           	callstack 0
  5690                           
  5691                           ; 1 bytes @ 0xF
  5692   0002DB                     	ds	1
  5693   0002DC                     consumer2QProcessMessage@action:
  5694                           	callstack 0
  5695                           
  5696                           ; 1 bytes @ 0x10
  5697   0002DC                     	ds	14
  5698   0002EA                     mnsProcessMessage@i:
  5699                           	callstack 0
  5700                           
  5701                           ; 1 bytes @ 0x1E
  5702   0002EA                     	ds	1
  5703   0002EB                     _mnsProcessMessage$3632:
  5704                           	callstack 0
  5705                           
  5706                           ; 1 bytes @ 0x1F
  5707   0002EB                     	ds	1
  5708   0002EC                     mnsProcessMessage@d:
  5709                           	callstack 0
  5710                           
  5711                           ; 2 bytes @ 0x20
  5712   0002EC                     	ds	2
  5713   0002EE                     mnsProcessMessage@newMode:
  5714                           	callstack 0
  5715                           
  5716                           ; 1 bytes @ 0x22
  5717   0002EE                     	ds	1
  5718   0002EF                     ??_poll:
  5719                           
  5720                           ; 1 bytes @ 0x23
  5721   0002EF                     	ds	4
  5722   0002F3                     poll@handled:
  5723                           	callstack 0
  5724                           
  5725                           ; 1 bytes @ 0x27
  5726   0002F3                     	ds	1
  5727   0002F4                     poll@i:
  5728                           	callstack 0
  5729                           
  5730                           ; 1 bytes @ 0x28
  5731   0002F4                     	ds	1
  5732   0002F5                     poll@m:
  5733                           	callstack 0
  5734                           
  5735                           ; 9 bytes @ 0x29
  5736   0002F5                     	ds	9
  5737                           
  5738                           	psect	cstackBANK1
  5739   0001BE                     __pcstackBANK1:
  5740                           	callstack 0
  5741   0001BE                     ??_rebuildHashtable:
  5742   0001BE                     sendMessage@len:
  5743                           	callstack 0
  5744   0001BE                     writeNVM@type:
  5745                           	callstack 0
  5746   0001BE                     findEvent@nodeNumber:
  5747                           	callstack 0
  5748                           
  5749                           ; 2 bytes @ 0x0
  5750   0001BE                     	ds	1
  5751   0001BF                     ??_configIO:
  5752   0001BF                     ??_nvFactoryReset:
  5753   0001BF                     saveNV@value:
  5754                           	callstack 0
  5755   0001BF                     sendMessage@data1:
  5756                           	callstack 0
  5757   0001BF                     setNewCanId@newCanId:
  5758                           	callstack 0
  5759                           
  5760                           ; 1 bytes @ 0x1
  5761   0001BF                     	ds	1
  5762   0001C0                     ??_saveNV:
  5763   0001C0                     ??_processEnumeration:
  5764   0001C0                     sendMessage@data2:
  5765                           	callstack 0
  5766   0001C0                     findEvent@eventNumber:
  5767                           	callstack 0
  5768                           
  5769                           ; 2 bytes @ 0x2
  5770   0001C0                     	ds	1
  5771   0001C1                     nvFactoryReset@i:
  5772                           	callstack 0
  5773   0001C1                     sendMessage@data3:
  5774                           	callstack 0
  5775   0001C1                     _configIO$8093:
  5776                           	callstack 0
  5777   0001C1                     rebuildHashtable@ev:
  5778                           	callstack 0
  5779                           
  5780                           ; 2 bytes @ 0x3
  5781   0001C1                     	ds	1
  5782   0001C2                     ??_findEvent:
  5783   0001C2                     saveNV@index:
  5784                           	callstack 0
  5785   0001C2                     sendMessage@data4:
  5786                           	callstack 0
  5787   0001C2                     _configIO$746:
  5788                           	callstack 0
  5789                           
  5790                           ; 2 bytes @ 0x4
  5791   0001C2                     	ds	1
  5792   0001C3                     defaultNVs@type:
  5793                           	callstack 0
  5794   0001C3                     sendMessage@data5:
  5795                           	callstack 0
  5796   0001C3                     rebuildHashtable@hash:
  5797                           	callstack 0
  5798                           
  5799                           ; 1 bytes @ 0x5
  5800   0001C3                     	ds	1
  5801   0001C4                     ??_defaultNVs:
  5802   0001C4                     configIO@action:
  5803                           	callstack 0
  5804   0001C4                     sendMessage@data6:
  5805                           	callstack 0
  5806   0001C4                     processEnumeration@enumResult:
  5807                           	callstack 0
  5808   0001C4                     rebuildHashtable@happening:
  5809                           	callstack 0
  5810   0001C4                     findEvent@nn:
  5811                           	callstack 0
  5812                           
  5813                           ; 2 bytes @ 0x6
  5814   0001C4                     	ds	1
  5815   0001C5                     configIO@type:
  5816                           	callstack 0
  5817   0001C5                     sendMessage@data7:
  5818                           	callstack 0
  5819   0001C5                     processEnumeration@newCanId:
  5820                           	callstack 0
  5821   0001C5                     rebuildHashtable@chainIdx:
  5822                           	callstack 0
  5823                           
  5824                           ; 1 bytes @ 0x7
  5825   0001C5                     	ds	1
  5826   0001C6                     configIO@i:
  5827                           	callstack 0
  5828   0001C6                     defaultNVs@io:
  5829                           	callstack 0
  5830   0001C6                     sendMessage3@opc:
  5831                           	callstack 0
  5832   0001C6                     sendMessage4@data1:
  5833                           	callstack 0
  5834   0001C6                     sendMessage5@data1:
  5835                           	callstack 0
  5836   0001C6                     sendMessage6@data1:
  5837                           	callstack 0
  5838   0001C6                     sendMessage7@data1:
  5839                           	callstack 0
  5840   0001C6                     processEnumeration@i:
  5841                           	callstack 0
  5842   0001C6                     rebuildHashtable@tableIndex:
  5843                           	callstack 0
  5844   0001C6                     findEvent@en:
  5845                           	callstack 0
  5846                           
  5847                           ; 2 bytes @ 0x8
  5848   0001C6                     	ds	1
  5849   0001C7                     ??_clearAllEvents:
  5850   0001C7                     ??_doNnevn:
  5851   0001C7                     ??_removeTableEntry:
  5852   0001C7                     ??_powerUp:
  5853   0001C7                     defaultNVs@i:
  5854                           	callstack 0
  5855   0001C7                     sendMessage4@data2:
  5856                           	callstack 0
  5857   0001C7                     sendMessage5@data2:
  5858                           	callstack 0
  5859   0001C7                     sendMessage6@data2:
  5860                           	callstack 0
  5861   0001C7                     sendMessage7@data2:
  5862                           	callstack 0
  5863   0001C7                     doRqevn@count:
  5864                           	callstack 0
  5865   0001C7                     canReceiveMessage@m:
  5866                           	callstack 0
  5867                           
  5868                           ; 2 bytes @ 0x9
  5869   0001C7                     	ds	1
  5870   0001C8                     sendMessage4@data3:
  5871                           	callstack 0
  5872   0001C8                     sendMessage5@data3:
  5873                           	callstack 0
  5874   0001C8                     sendMessage6@data3:
  5875                           	callstack 0
  5876   0001C8                     sendMessage7@data3:
  5877                           	callstack 0
  5878   0001C8                     doRqevn@i:
  5879                           	callstack 0
  5880   0001C8                     findEvent@hash:
  5881                           	callstack 0
  5882                           
  5883                           ; 1 bytes @ 0xA
  5884   0001C8                     	ds	1
  5885   0001C9                     sendMessage4@data4:
  5886                           	callstack 0
  5887   0001C9                     sendMessage5@data4:
  5888                           	callstack 0
  5889   0001C9                     sendMessage6@data4:
  5890                           	callstack 0
  5891   0001C9                     sendMessage7@data4:
  5892                           	callstack 0
  5893   0001C9                     findEvent@chainIdx:
  5894                           	callstack 0
  5895                           
  5896                           ; 1 bytes @ 0xB
  5897   0001C9                     	ds	1
  5898   0001CA                     sendMessage5@data5:
  5899                           	callstack 0
  5900   0001CA                     sendMessage6@data5:
  5901                           	callstack 0
  5902   0001CA                     sendMessage7@data5:
  5903                           	callstack 0
  5904   0001CA                     canReceiveMessage@messageAvailable:
  5905                           	callstack 0
  5906   0001CA                     findEvent@tableIndex:
  5907                           	callstack 0
  5908   0001CA                     sendProducedEvent@opc:
  5909                           	callstack 0
  5910                           
  5911                           ; 1 bytes @ 0xC
  5912   0001CA                     	ds	1
  5913   0001CB                     ??_mnsPoll:
  5914   0001CB                     powerUp@i:
  5915                           	callstack 0
  5916   0001CB                     sendMessage6@data6:
  5917                           	callstack 0
  5918   0001CB                     sendMessage7@data6:
  5919                           	callstack 0
  5920   0001CB                     clearAllEvents@tableIndex:
  5921                           	callstack 0
  5922   0001CB                     doNnevn@f:
  5923                           	callstack 0
  5924   0001CB                     doNenrd@index:
  5925                           	callstack 0
  5926   0001CB                     doReval@evNum:
  5927                           	callstack 0
  5928   0001CB                     removeTableEntry@f:
  5929                           	callstack 0
  5930   0001CB                     checkLen@m:
  5931                           	callstack 0
  5932   0001CB                     canReceiveMessage@mp:
  5933                           	callstack 0
  5934   0001CB                     sendProducedEvent@producedEventEN:
  5935                           	callstack 0
  5936                           
  5937                           ; 2 bytes @ 0xD
  5938   0001CB                     	ds	1
  5939   0001CC                     ??_doReval:
  5940   0001CC                     sendMessage7@data7:
  5941                           	callstack 0
  5942   0001CC                     doNnevn@count:
  5943                           	callstack 0
  5944   0001CC                     removeTableEntry@tableIndex:
  5945                           	callstack 0
  5946   0001CC                     doNenrd@nodeNumber:
  5947                           	callstack 0
  5948   0001CC                     doReqev@nodeNumber:
  5949                           	callstack 0
  5950                           
  5951                           ; 2 bytes @ 0xE
  5952   0001CC                     	ds	1
  5953   0001CD                     checkLen@needed:
  5954                           	callstack 0
  5955   0001CD                     canReceiveMessage@no:
  5956                           	callstack 0
  5957   0001CD                     doNnevn@i:
  5958                           	callstack 0
  5959   0001CD                     doReval@evIndex:
  5960                           	callstack 0
  5961   0001CD                     checkRemoveTableEntry@tableIndex:
  5962                           	callstack 0
  5963   0001CD                     removeEvent@nodeNumber:
  5964                           	callstack 0
  5965   0001CD                     sendProducedEvent@producedEventNN:
  5966                           	callstack 0
  5967                           
  5968                           ; 2 bytes @ 0xF
  5969   0001CD                     	ds	1
  5970   0001CE                     checkLen@service:
  5971                           	callstack 0
  5972   0001CE                     doReval@enNum:
  5973                           	callstack 0
  5974   0001CE                     checkRemoveTableEntry@e:
  5975                           	callstack 0
  5976   0001CE                     canReceiveMessage@p:
  5977                           	callstack 0
  5978   0001CE                     doNenrd@eventNumber:
  5979                           	callstack 0
  5980   0001CE                     doReqev@eventNumber:
  5981                           	callstack 0
  5982                           
  5983                           ; 2 bytes @ 0x10
  5984   0001CE                     	ds	1
  5985   0001CF                     writeEv@evNum:
  5986                           	callstack 0
  5987   0001CF                     sendProducedEvent@happening:
  5988                           	callstack 0
  5989   0001CF                     ackEventCheckLen@m:
  5990                           	callstack 0
  5991   0001CF                     teachCheckLen@m:
  5992                           	callstack 0
  5993   0001CF                     doReval@evVal:
  5994                           	callstack 0
  5995   0001CF                     removeEvent@eventNumber:
  5996                           	callstack 0
  5997                           
  5998                           ; 2 bytes @ 0x11
  5999   0001CF                     	ds	1
  6000   0001D0                     ??_inputScan:
  6001   0001D0                     ??_pollServos:
  6002   0001D0                     sendInvertedProducedEvent@state:
  6003                           	callstack 0
  6004   0001D0                     doNenrd@tableIndex:
  6005                           	callstack 0
  6006   0001D0                     doReqev@evNum:
  6007                           	callstack 0
  6008   0001D0                     writeEv@evVal:
  6009                           	callstack 0
  6010                           
  6011                           ; 1 bytes @ 0x12
  6012   0001D0                     	ds	1
  6013   0001D1                     ??_writeEv:
  6014   0001D1                     processOutputs@io:
  6015                           	callstack 0
  6016   0001D1                     sendInvertedProducedEvent@invert:
  6017                           	callstack 0
  6018   0001D1                     ackEventCheckLen@needed:
  6019                           	callstack 0
  6020   0001D1                     teachCheckLen@needed:
  6021                           	callstack 0
  6022   0001D1                     doReval@tableIndex:
  6023                           	callstack 0
  6024   0001D1                     removeEvent@tableIndex:
  6025                           	callstack 0
  6026   0001D1                     doReqev@evVal:
  6027                           	callstack 0
  6028                           
  6029                           ; 2 bytes @ 0x13
  6030   0001D1                     	ds	1
  6031   0001D2                     inputScan@change:
  6032                           	callstack 0
  6033   0001D2                     sendInvertedProducedEvent@can_send_on:
  6034                           	callstack 0
  6035   0001D2                     teachCheckLen@learn:
  6036                           	callstack 0
  6037   0001D2                     doEvuln@nodeNumber:
  6038                           	callstack 0
  6039                           
  6040                           ; 2 bytes @ 0x14
  6041   0001D2                     	ds	1
  6042   0001D3                     inputScan@input:
  6043                           	callstack 0
  6044   0001D3                     sendInvertedProducedEvent@can_send_off:
  6045                           	callstack 0
  6046   0001D3                     doReqev@tableIndex:
  6047                           	callstack 0
  6048                           
  6049                           ; 1 bytes @ 0x15
  6050   0001D3                     	ds	1
  6051   0001D4                     sendInvertedProducedEvent@happening:
  6052                           	callstack 0
  6053   0001D4                     doEvuln@eventNumber:
  6054                           	callstack 0
  6055                           
  6056                           ; 2 bytes @ 0x16
  6057   0001D4                     	ds	1
  6058   0001D5                     writeEv@startIndex:
  6059                           	callstack 0
  6060   0001D5                     _sendInvertedProducedEvent$1404:
  6061                           	callstack 0
  6062                           
  6063                           ; 2 bytes @ 0x17
  6064   0001D5                     	ds	1
  6065   0001D6                     doEvuln@result:
  6066                           	callstack 0
  6067   0001D6                     writeEv@nextF:
  6068                           	callstack 0
  6069                           
  6070                           ; 1 bytes @ 0x18
  6071   0001D6                     	ds	1
  6072   0001D7                     sendInvertedProducedEvent@state_to_send:
  6073                           	callstack 0
  6074   0001D7                     writeEv@e:
  6075                           	callstack 0
  6076                           
  6077                           ; 1 bytes @ 0x19
  6078   0001D7                     	ds	1
  6079   0001D8                     startDigitalOutput@state:
  6080                           	callstack 0
  6081   0001D8                     pollServos@target:
  6082                           	callstack 0
  6083   0001D8                     mnsTRallDiagnosticsCallback@serviceIndex:
  6084                           	callstack 0
  6085   0001D8                     reqevCallback@serviceIndex:
  6086                           	callstack 0
  6087   0001D8                     writeEv@f:
  6088                           	callstack 0
  6089                           
  6090                           ; 1 bytes @ 0x1A
  6091   0001D8                     	ds	1
  6092   0001D9                     ??_startDigitalOutput:
  6093   0001D9                     sodTRCallback@step:
  6094                           	callstack 0
  6095   0001D9                     pollServos@beforeMidway:
  6096                           	callstack 0
  6097   0001D9                     mnsTRserviceDiscoveryCallback@step:
  6098                           	callstack 0
  6099   0001D9                     mnsTRallDiagnosticsCallback@step:
  6100                           	callstack 0
  6101   0001D9                     mnsTRrqnpnCallback@step:
  6102                           	callstack 0
  6103   0001D9                     nvTRnvrdCallback@step:
  6104                           	callstack 0
  6105   0001D9                     nerdCallback@step:
  6106                           	callstack 0
  6107   0001D9                     reqevCallback@step:
  6108                           	callstack 0
  6109   0001D9                     writeEv@tableIndex:
  6110                           	callstack 0
  6111                           
  6112                           ; 1 bytes @ 0x1B
  6113   0001D9                     	ds	1
  6114   0001DA                     ??_mnsTRallDiagnosticsCallback:
  6115   0001DA                     ??_mnsTRserviceDiscoveryCallback:
  6116   0001DA                     ??_reqevCallback:
  6117   0001DA                     sodTRCallback@disable_SOD_response:
  6118                           	callstack 0
  6119   0001DA                     pollServos@midway:
  6120                           	callstack 0
  6121   0001DA                     writeEv@nextIdx:
  6122                           	callstack 0
  6123   0001DA                     nvTRnvrdCallback@valueOrError:
  6124                           	callstack 0
  6125   0001DA                     nerdCallback@nodeNumber:
  6126                           	callstack 0
  6127                           
  6128                           ; 2 bytes @ 0x1C
  6129   0001DA                     	ds	1
  6130   0001DB                     deleteActionRange@number:
  6131                           	callstack 0
  6132   0001DB                     sodTRCallback@send_on_ok:
  6133                           	callstack 0
  6134   0001DB                     pollServos@io:
  6135                           	callstack 0
  6136   0001DB                     deleteHappeningRange@number:
  6137                           	callstack 0
  6138   0001DB                     _startDigitalOutput$808:
  6139                           	callstack 0
  6140   0001DB                     addEvent@nodeNumber:
  6141                           	callstack 0
  6142                           
  6143                           ; 2 bytes @ 0x1D
  6144   0001DB                     	ds	1
  6145   0001DC                     ??_deleteHappeningRange:
  6146   0001DC                     ??_deleteActionRange:
  6147   0001DC                     sodTRCallback@send_off_ok:
  6148                           	callstack 0
  6149   0001DC                     startServos@type:
  6150                           	callstack 0
  6151   0001DC                     nerdCallback@eventNumber:
  6152                           	callstack 0
  6153                           
  6154                           ; 2 bytes @ 0x1E
  6155   0001DC                     	ds	1
  6156   0001DD                     startDigitalOutput@pinState:
  6157                           	callstack 0
  6158   0001DD                     _sodTRCallback$1424:
  6159                           	callstack 0
  6160   0001DD                     addEvent@eventNumber:
  6161                           	callstack 0
  6162                           
  6163                           ; 2 bytes @ 0x1F
  6164   0001DD                     	ds	1
  6165   0001DE                     startDigitalOutput@actionState:
  6166                           	callstack 0
  6167   0001DE                     _sodTRCallback$1425:
  6168                           	callstack 0
  6169   0001DE                     mnsTRallDiagnosticsCallback@d:
  6170                           	callstack 0
  6171                           
  6172                           ; 2 bytes @ 0x20
  6173   0001DE                     	ds	1
  6174   0001DF                     startDigitalOutput@io:
  6175                           	callstack 0
  6176   0001DF                     sodTRCallback@happeningIndex:
  6177                           	callstack 0
  6178   0001DF                     reqevCallback@nEv:
  6179                           	callstack 0
  6180   0001DF                     addEvent@evNum:
  6181                           	callstack 0
  6182                           
  6183                           ; 1 bytes @ 0x21
  6184   0001DF                     	ds	1
  6185   0001E0                     sodTRCallback@disable_off:
  6186                           	callstack 0
  6187   0001E0                     startOutput@act:
  6188                           	callstack 0
  6189   0001E0                     addEvent@evVal:
  6190                           	callstack 0
  6191   0001E0                     reqevCallback@eventNumber:
  6192                           	callstack 0
  6193                           
  6194                           ; 2 bytes @ 0x22
  6195   0001E0                     	ds	1
  6196   0001E1                     deleteActionRange@updated:
  6197                           	callstack 0
  6198   0001E1                     sodTRCallback@value:
  6199                           	callstack 0
  6200   0001E1                     startOutput@type:
  6201                           	callstack 0
  6202   0001E1                     addEvent@forceOwnNN:
  6203                           	callstack 0
  6204   0001E1                     deleteHappeningRange@happening:
  6205                           	callstack 0
  6206                           
  6207                           ; 1 bytes @ 0x23
  6208   0001E1                     	ds	1
  6209   0001E2                     ??_addEvent:
  6210   0001E2                     deleteActionRange@action:
  6211                           	callstack 0
  6212   0001E2                     sodTRCallback@event_inverted:
  6213                           	callstack 0
  6214   0001E2                     startOutput@io:
  6215                           	callstack 0
  6216   0001E2                     deleteHappeningRange@h:
  6217                           	callstack 0
  6218   0001E2                     reqevCallback@ev:
  6219                           	callstack 0
  6220                           
  6221                           ; 2 bytes @ 0x24
  6222   0001E2                     	ds	1
  6223   0001E3                     deleteActionRange@e:
  6224                           	callstack 0
  6225   0001E3                     processActions@simultaneous:
  6226                           	callstack 0
  6227   0001E3                     sodTRCallback@flags:
  6228                           	callstack 0
  6229   0001E3                     deleteHappeningRange@tableIndex:
  6230                           	callstack 0
  6231                           
  6232                           ; 1 bytes @ 0x25
  6233   0001E3                     	ds	1
  6234   0001E4                     deleteActionRange@tableIndex:
  6235                           	callstack 0
  6236   0001E4                     processActions@peekItem:
  6237                           	callstack 0
  6238   0001E4                     sodTRCallback@io:
  6239                           	callstack 0
  6240   0001E4                     reqevCallback@nodeNumber:
  6241                           	callstack 0
  6242                           
  6243                           ; 2 bytes @ 0x26
  6244   0001E4                     	ds	1
  6245   0001E5                     clearEvents@io:
  6246                           	callstack 0
  6247   0001E5                     processActions@nextType:
  6248                           	callstack 0
  6249                           
  6250                           ; 1 bytes @ 0x27
  6251   0001E5                     	ds	1
  6252   0001E6                     processActions@nextIo:
  6253                           	callstack 0
  6254   0001E6                     reqevCallback@tableIndex:
  6255                           	callstack 0
  6256   0001E6                     addEvent@error:
  6257                           	callstack 0
  6258                           
  6259                           ; 1 bytes @ 0x28
  6260   0001E6                     	ds	1
  6261   0001E7                     ??_pollTimedResponse:
  6262   0001E7                     processActions@type:
  6263                           	callstack 0
  6264   0001E7                     addEvent@f:
  6265                           	callstack 0
  6266                           
  6267                           ; 1 bytes @ 0x29
  6268   0001E7                     	ds	1
  6269   0001E8                     processActions@ioAction:
  6270                           	callstack 0
  6271   0001E8                     addEvent@e:
  6272                           	callstack 0
  6273                           
  6274                           ; 1 bytes @ 0x2A
  6275   0001E8                     	ds	1
  6276   0001E9                     processActions@nextAction:
  6277                           	callstack 0
  6278   0001E9                     pollTimedResponse@result:
  6279                           	callstack 0
  6280   0001E9                     addEvent@tableIndex:
  6281                           	callstack 0
  6282                           
  6283                           ; 1 bytes @ 0x2B
  6284   0001E9                     	ds	1
  6285   0001EA                     defaultEvents@type:
  6286                           	callstack 0
  6287   0001EA                     processActions@io:
  6288                           	callstack 0
  6289   0001EA                     APP_addEvent@nodeNumber:
  6290                           	callstack 0
  6291                           
  6292                           ; 2 bytes @ 0x2C
  6293   0001EA                     	ds	1
  6294   0001EB                     processActions@action:
  6295                           	callstack 0
  6296   0001EB                     defaultEvents@en:
  6297                           	callstack 0
  6298                           
  6299                           ; 2 bytes @ 0x2D
  6300   0001EB                     	ds	1
  6301   0001EC                     ??_loop:
  6302   0001EC                     APP_addEvent@eventNumber:
  6303                           	callstack 0
  6304                           
  6305                           ; 2 bytes @ 0x2E
  6306   0001EC                     	ds	1
  6307   0001ED                     defaultEvents@io:
  6308                           	callstack 0
  6309                           
  6310                           ; 1 bytes @ 0x2F
  6311   0001ED                     	ds	1
  6312   0001EE                     setType@type:
  6313                           	callstack 0
  6314   0001EE                     APP_addEvent@evNum:
  6315                           	callstack 0
  6316                           
  6317                           ; 1 bytes @ 0x30
  6318   0001EE                     	ds	1
  6319   0001EF                     setType@index:
  6320                           	callstack 0
  6321   0001EF                     APP_addEvent@evVal:
  6322                           	callstack 0
  6323                           
  6324                           ; 1 bytes @ 0x31
  6325   0001EF                     	ds	1
  6326   0001F0                     setType@io:
  6327                           	callstack 0
  6328   0001F0                     APP_addEvent@forceOwnNN:
  6329                           	callstack 0
  6330                           
  6331                           ; 1 bytes @ 0x32
  6332   0001F0                     	ds	1
  6333   0001F1                     APP_factoryReset@io:
  6334                           	callstack 0
  6335   0001F1                     APP_addEvent@tableIndex:
  6336                           	callstack 0
  6337   0001F1                     APP_nvValueChanged@value:
  6338                           	callstack 0
  6339                           
  6340                           ; 1 bytes @ 0x33
  6341   0001F1                     	ds	1
  6342   0001F2                     ??_factoryReset:
  6343   0001F2                     APP_nvValueChanged@oldValue:
  6344                           	callstack 0
  6345   0001F2                     doEvlrn@nodeNumber:
  6346                           	callstack 0
  6347                           
  6348                           ; 2 bytes @ 0x34
  6349   0001F2                     	ds	1
  6350   0001F3                     ??_APP_nvValueChanged:
  6351                           
  6352                           ; 1 bytes @ 0x35
  6353   0001F3                     	ds	1
  6354   0001F4                     doEvlrn@eventNumber:
  6355                           	callstack 0
  6356                           
  6357                           ; 2 bytes @ 0x36
  6358   0001F4                     	ds	2
  6359   0001F6                     APP_nvValueChanged@index:
  6360                           	callstack 0
  6361   0001F6                     factoryReset@i:
  6362                           	callstack 0
  6363   0001F6                     doEvlrn@evNum:
  6364                           	callstack 0
  6365                           
  6366                           ; 1 bytes @ 0x38
  6367   0001F6                     	ds	1
  6368   0001F7                     APP_nvValueChanged@io:
  6369                           	callstack 0
  6370   0001F7                     checkPowerOnPb@i:
  6371                           	callstack 0
  6372   0001F7                     doEvlrn@evVal:
  6373                           	callstack 0
  6374                           
  6375                           ; 1 bytes @ 0x39
  6376   0001F7                     	ds	1
  6377   0001F8                     setNV@value:
  6378                           	callstack 0
  6379   0001F8                     doEvlrn@error:
  6380                           	callstack 0
  6381                           
  6382                           ; 1 bytes @ 0x3A
  6383   0001F8                     	ds	1
  6384   0001F9                     ??_setNV:
  6385                           
  6386                           ; 1 bytes @ 0x3B
  6387   0001F9                     	ds	2
  6388   0001FB                     setNV@oldValue:
  6389                           	callstack 0
  6390                           
  6391                           ; 1 bytes @ 0x3D
  6392   0001FB                     	ds	1
  6393   0001FC                     setNV@index:
  6394                           	callstack 0
  6395                           
  6396                           ; 1 bytes @ 0x3E
  6397   0001FC                     	ds	1
  6398   0001FD                     consumer2QProcessMessage@m:
  6399                           	callstack 0
  6400   0001FD                     bootProcessMessage@m:
  6401                           	callstack 0
  6402   0001FD                     ackEventProcessMessage@m:
  6403                           	callstack 0
  6404   0001FD                     mnsProcessMessage@m:
  6405                           	callstack 0
  6406   0001FD                     nvProcessMessage@m:
  6407                           	callstack 0
  6408   0001FD                     canProcessMessage@m:
  6409                           	callstack 0
  6410   0001FD                     teachProcessMessage@m:
  6411                           	callstack 0
  6412   0001FD                     producerProcessMessage@m:
  6413                           	callstack 0
  6414                           
  6415                           ; 2 bytes @ 0x3F
  6416   0001FD                     	ds	2
  6417                           
  6418                           	psect	cstackBANK0
  6419   000060                     __pcstackBANK0:
  6420                           	callstack 0
  6421   000060                     ?i1_getNextWriteMessage:
  6422                           	callstack 0
  6423   000060                     ?i1_pop:
  6424                           	callstack 0
  6425   000060                     ?i1_getBufferPointer:
  6426                           	callstack 0
  6427   000060                     ?i1_tickGet:
  6428                           	callstack 0
  6429   000060                     i1_isEvent$4896:
  6430                           	callstack 0
  6431   000060                     i1getNextWriteMessage@q:
  6432                           	callstack 0
  6433   000060                     i1pop@q:
  6434                           	callstack 0
  6435                           
  6436                           ; 2 bytes @ 0x0
  6437   000060                     	ds	1
  6438   000061                     i1isEvent@opc:
  6439                           	callstack 0
  6440                           
  6441                           ; 1 bytes @ 0x1
  6442   000061                     	ds	1
  6443   000062                     ??i1_getNextWriteMessage:
  6444   000062                     ??i1_pop:
  6445   000062                     i1getBufferPointer@b:
  6446                           	callstack 0
  6447                           
  6448                           ; 1 bytes @ 0x2
  6449   000062                     	ds	2
  6450   000064                     i1tickGet@IntFlag2:
  6451                           	callstack 0
  6452                           
  6453                           ; 1 bytes @ 0x4
  6454   000064                     	ds	1
  6455   000065                     i1tickGet@IntFlag1:
  6456                           	callstack 0
  6457                           
  6458                           ; 1 bytes @ 0x5
  6459   000065                     	ds	1
  6460   000066                     i1tickGet@currentTime:
  6461                           	callstack 0
  6462                           
  6463                           ; 4 bytes @ 0x6
  6464   000066                     	ds	1
  6465   000067                     i1pop@ret:
  6466                           	callstack 0
  6467                           
  6468                           ; 2 bytes @ 0x7
  6469   000067                     	ds	4
  6470   00006B                     i1getNextWriteMessage@wr:
  6471                           	callstack 0
  6472                           
  6473                           ; 1 bytes @ 0xB
  6474   00006B                     	ds	1
  6475   00006C                     ??_checkTxFifo:
  6476   00006C                     canFillRxFifo@m:
  6477                           	callstack 0
  6478                           
  6479                           ; 2 bytes @ 0xC
  6480   00006C                     	ds	2
  6481   00006E                     canFillRxFifo@ptr:
  6482                           	callstack 0
  6483                           
  6484                           ; 2 bytes @ 0xE
  6485   00006E                     	ds	3
  6486   000071                     checkTxFifo@m:
  6487                           	callstack 0
  6488                           
  6489                           ; 2 bytes @ 0x11
  6490   000071                     	ds	2
  6491   000073                     checkTxFifo@mp:
  6492                           	callstack 0
  6493                           
  6494                           ; 2 bytes @ 0x13
  6495   000073                     	ds	2
  6496   000075                     ??_checkCANTimeout:
  6497                           
  6498                           ; 1 bytes @ 0x15
  6499   000075                     	ds	4
  6500   000079                     ??_lowIsr:
  6501                           
  6502                           ; 1 bytes @ 0x19
  6503   000079                     	ds	4
  6504   00007D                     lowIsr@i:
  6505                           	callstack 0
  6506                           
  6507                           ; 1 bytes @ 0x1D
  6508   00007D                     	ds	1
  6509   00007E                     ??_isrLow:
  6510                           
  6511                           ; 1 bytes @ 0x1E
  6512   00007E                     	ds	15
  6513   00008D                     ??_findServiceIndex:
  6514   00008D                     ??_have:
  6515   00008D                     ??_showStatus:
  6516   00008D                     ?_getNV:
  6517                           	callstack 0
  6518   00008D                     ?_findService:
  6519                           	callstack 0
  6520   00008D                     ?_getNextWriteMessage:
  6521                           	callstack 0
  6522   00008D                     ?_pop:
  6523                           	callstack 0
  6524   00008D                     ?_getBufferPointer:
  6525                           	callstack 0
  6526   00008D                     ?___awmod:
  6527                           	callstack 0
  6528   00008D                     ?_tickGet:
  6529                           	callstack 0
  6530   00008D                     initOutputs@io:
  6531                           	callstack 0
  6532   00008D                     consumer2QEsdData@index:
  6533                           	callstack 0
  6534   00008D                     pushTwoAction@a:
  6535                           	callstack 0
  6536   00008D                     peekTwoActionQueue@qty:
  6537                           	callstack 0
  6538   00008D                     deleteTwoActionQueue@qty:
  6539                           	callstack 0
  6540   00008D                     needsStarting@act:
  6541                           	callstack 0
  6542   00008D                     completed@action:
  6543                           	callstack 0
  6544   00008D                     finaliseOutput@type:
  6545                           	callstack 0
  6546   00008D                     startBounceOutput@action:
  6547                           	callstack 0
  6548   00008D                     initBounce@io:
  6549                           	callstack 0
  6550   00008D                     bootEsdData@id:
  6551                           	callstack 0
  6552   00008D                     ackPowerUp@i:
  6553                           	callstack 0
  6554   00008D                     nvGetESDdata@id:
  6555                           	callstack 0
  6556   00008D                     initTicker@priority:
  6557                           	callstack 0
  6558   00008D                     setTimedResponseDelay@delay:
  6559                           	callstack 0
  6560   00008D                     _isEvent$4896:
  6561                           	callstack 0
  6562   00008D                     getNextWriteMessage@q:
  6563                           	callstack 0
  6564   00008D                     eraseFlashBlock@interruptEnabled:
  6565                           	callstack 0
  6566   00008D                     loadFlashBlock@i:
  6567                           	callstack 0
  6568   00008D                     canEsdData@id:
  6569                           	callstack 0
  6570   00008D                     teachGetESDdata@id:
  6571                           	callstack 0
  6572   00008D                     evtIdxToTableIndex@evtIdx:
  6573                           	callstack 0
  6574   00008D                     tableIndexToEvtIdx@tableIndex:
  6575                           	callstack 0
  6576   00008D                     producerPowerUp@i:
  6577                           	callstack 0
  6578   00008D                     producerEsdData@index:
  6579                           	callstack 0
  6580   00008D                     APP_preProcessMessage@m:
  6581                           	callstack 0
  6582   00008D                     APP_postProcessMessage@m:
  6583                           	callstack 0
  6584   00008D                     push@q:
  6585                           	callstack 0
  6586   00008D                     pop@q:
  6587                           	callstack 0
  6588   00008D                     quantity@q:
  6589                           	callstack 0
  6590   00008D                     EEPROM_Read@index:
  6591                           	callstack 0
  6592   00008D                     FLASH_Read@address:
  6593                           	callstack 0
  6594   00008D                     ___awmod@dividend:
  6595                           	callstack 0
  6596   00008D                     memcpy@d1:
  6597                           	callstack 0
  6598                           
  6599                           ; 2 bytes @ 0x2D
  6600   00008D                     	ds	1
  6601   00008E                     peekTwoActionQueue@index:
  6602                           	callstack 0
  6603   00008E                     deleteTwoActionQueue@index:
  6604                           	callstack 0
  6605   00008E                     needsStarting@type:
  6606                           	callstack 0
  6607   00008E                     completed@type:
  6608                           	callstack 0
  6609   00008E                     startBounceOutput@io:
  6610                           	callstack 0
  6611   00008E                     initTicker@divider:
  6612                           	callstack 0
  6613   00008E                     isEvent@opc:
  6614                           	callstack 0
  6615   00008E                     flushFlashBlock@interruptEnabled:
  6616                           	callstack 0
  6617                           
  6618                           ; 1 bytes @ 0x2E
  6619   00008E                     	ds	1
  6620   00008F                     ??_getNV:
  6621   00008F                     ??_findService:
  6622   00008F                     ??_getNextWriteMessage:
  6623   00008F                     ??_pop:
  6624   00008F                     ??_quantity:
  6625   00008F                     ??_FLASH_Read:
  6626   00008F                     showStatus@s:
  6627                           	callstack 0
  6628   00008F                     initTicker@i:
  6629                           	callstack 0
  6630   00008F                     findServiceIndex@serviceType:
  6631                           	callstack 0
  6632   00008F                     have@id:
  6633                           	callstack 0
  6634   00008F                     flushFlashBlock@i:
  6635                           	callstack 0
  6636   00008F                     getBufferPointer@b:
  6637                           	callstack 0
  6638   00008F                     push@m:
  6639                           	callstack 0
  6640   00008F                     EEPROM_Write@index:
  6641                           	callstack 0
  6642   00008F                     ___awmod@divisor:
  6643                           	callstack 0
  6644   00008F                     memcpy@s1:
  6645                           	callstack 0
  6646                           
  6647                           ; 2 bytes @ 0x2F
  6648   00008F                     	ds	1
  6649   000090                     getNV@index:
  6650                           	callstack 0
  6651   000090                     findServiceIndex@i:
  6652                           	callstack 0
  6653   000090                     have@i:
  6654                           	callstack 0
  6655   000090                     FLASH_Write@index:
  6656                           	callstack 0
  6657                           
  6658                           ; 2 bytes @ 0x30
  6659   000090                     	ds	1
  6660   000091                     ??_readInput:
  6661   000091                     ??_push:
  6662   000091                     ?_readNVM:
  6663                           	callstack 0
  6664   000091                     ?___wmul:
  6665                           	callstack 0
  6666   000091                     ?___lmul:
  6667                           	callstack 0
  6668   000091                     setOutputPin@state:
  6669                           	callstack 0
  6670   000091                     needsStarting@io:
  6671                           	callstack 0
  6672   000091                     _completed$1545:
  6673                           	callstack 0
  6674   000091                     startServoOutput@action:
  6675                           	callstack 0
  6676   000091                     startMultiOutput@action:
  6677                           	callstack 0
  6678   000091                     setServoState@action:
  6679                           	callstack 0
  6680   000091                     setBounceState@action:
  6681                           	callstack 0
  6682   000091                     setMultiState@action:
  6683                           	callstack 0
  6684   000091                     getParameterFlags@flags:
  6685                           	callstack 0
  6686   000091                     tickGet@IntFlag2:
  6687                           	callstack 0
  6688   000091                     startTimedResponse@serviceIndex:
  6689                           	callstack 0
  6690   000091                     findService@id:
  6691                           	callstack 0
  6692   000091                     EEPROM_Write@value:
  6693                           	callstack 0
  6694   000091                     ___awmod@counter:
  6695                           	callstack 0
  6696   000091                     ___wmul@multiplier:
  6697                           	callstack 0
  6698   000091                     memcpy@n:
  6699                           	callstack 0
  6700   000091                     readNVM@index:
  6701                           	callstack 0
  6702   000091                     ___lmul@multiplier:
  6703                           	callstack 0
  6704                           
  6705                           ; 4 bytes @ 0x31
  6706   000091                     	ds	1
  6707   000092                     ??_setOutputPin:
  6708   000092                     ??_startServoOutput:
  6709   000092                     ??_startMultiOutput:
  6710   000092                     completed@io:
  6711                           	callstack 0
  6712   000092                     setServoState@io:
  6713                           	callstack 0
  6714   000092                     setBounceState@io:
  6715                           	callstack 0
  6716   000092                     setMultiState@io:
  6717                           	callstack 0
  6718   000092                     getParameter@idx:
  6719                           	callstack 0
  6720   000092                     tickGet@IntFlag1:
  6721                           	callstack 0
  6722   000092                     findService@i:
  6723                           	callstack 0
  6724   000092                     EEPROM_Write@interruptEnabled:
  6725                           	callstack 0
  6726   000092                     FLASH_Write@value:
  6727                           	callstack 0
  6728   000092                     ___awmod@sign:
  6729                           	callstack 0
  6730   000092                     startTimedResponse@callback:
  6731                           	callstack 0
  6732                           
  6733                           ; 2 bytes @ 0x32
  6734   000092                     	ds	1
  6735   000093                     ??_FLASH_Write:
  6736   000093                     readInput@io:
  6737                           	callstack 0
  6738   000093                     setOutputState@act:
  6739                           	callstack 0
  6740   000093                     startServoOutput@io:
  6741                           	callstack 0
  6742   000093                     startMultiOutput@io:
  6743                           	callstack 0
  6744   000093                     memcpy@tmp:
  6745                           	callstack 0
  6746   000093                     getNumRxBuffersInUse@ptr:
  6747                           	callstack 0
  6748   000093                     ___wmul@multiplicand:
  6749                           	callstack 0
  6750   000093                     tickGet@currentTime:
  6751                           	callstack 0
  6752                           
  6753                           ; 4 bytes @ 0x33
  6754   000093                     	ds	1
  6755   000094                     ??_readNVM:
  6756   000094                     setOutputPin@io:
  6757                           	callstack 0
  6758   000094                     setOutputState@type:
  6759                           	callstack 0
  6760   000094                     startTimedResponse@type:
  6761                           	callstack 0
  6762   000094                     pop@ret:
  6763                           	callstack 0
  6764   000094                     memcpy@d:
  6765                           	callstack 0
  6766                           
  6767                           ; 2 bytes @ 0x34
  6768   000094                     	ds	1
  6769   000095                     ??_setupTimer1:
  6770   000095                     ??_setupTimer3:
  6771   000095                     setOutputState@io:
  6772                           	callstack 0
  6773   000095                     getNumRxBuffersInUse@no:
  6774                           	callstack 0
  6775   000095                     ___wmul@product:
  6776                           	callstack 0
  6777   000095                     ___lmul@multiplicand:
  6778                           	callstack 0
  6779                           
  6780                           ; 4 bytes @ 0x35
  6781   000095                     	ds	1
  6782   000096                     readNVM@type:
  6783                           	callstack 0
  6784   000096                     getNumRxBuffersInUse@i:
  6785                           	callstack 0
  6786   000096                     memcpy@s:
  6787                           	callstack 0
  6788                           
  6789                           ; 2 bytes @ 0x36
  6790   000096                     	ds	1
  6791   000097                     ??_initInputScan:
  6792   000097                     ??_validStart:
  6793   000097                     ??_loadNvCache:
  6794   000097                     ??_canPowerUp:
  6795   000097                     ?_consumer2QGetDiagnostic:
  6796                           	callstack 0
  6797   000097                     ?_ackGetDiagnostic:
  6798                           	callstack 0
  6799   000097                     ?_mnsGetDiagnostic:
  6800                           	callstack 0
  6801   000097                     ?_nvGetDiagnostic:
  6802                           	callstack 0
  6803   000097                     ?_canGetDiagnostic:
  6804                           	callstack 0
  6805   000097                     ?_teachGetDiagnostic:
  6806                           	callstack 0
  6807   000097                     ?_getNN:
  6808                           	callstack 0
  6809   000097                     ?_getEN:
  6810                           	callstack 0
  6811   000097                     ?_producerGetDiagnostic:
  6812                           	callstack 0
  6813   000097                     ?___awdiv:
  6814                           	callstack 0
  6815   000097                     ?___lldiv:
  6816                           	callstack 0
  6817   000097                     setDigitalOutput@state:
  6818                           	callstack 0
  6819   000097                     bootPowerUp@b:
  6820                           	callstack 0
  6821   000097                     mnsPowerUp@i:
  6822                           	callstack 0
  6823   000097                     handleSelfEnumeration@p:
  6824                           	callstack 0
  6825   000097                     ___awdiv@dividend:
  6826                           	callstack 0
  6827   000097                     ___lldiv@dividend:
  6828                           	callstack 0
  6829                           
  6830                           ; 4 bytes @ 0x37
  6831   000097                     	ds	1
  6832   000098                     setDigitalOutput@pinState:
  6833                           	callstack 0
  6834   000098                     bootPowerUp@found:
  6835                           	callstack 0
  6836   000098                     getNextWriteMessage@wr:
  6837                           	callstack 0
  6838   000098                     _setupTimer1$1932:
  6839                           	callstack 0
  6840   000098                     _setupTimer3$1936:
  6841                           	callstack 0
  6842   000098                     mnsPowerUp@temp:
  6843                           	callstack 0
  6844   000098                     canPowerUp@temp:
  6845                           	callstack 0
  6846                           
  6847                           ; 2 bytes @ 0x38
  6848   000098                     	ds	1
  6849   000099                     ??_canGetDiagnostic:
  6850   000099                     ??_handleSelfEnumeration:
  6851   000099                     ??_getNN:
  6852   000099                     ??_getEN:
  6853   000099                     setDigitalOutput@io:
  6854                           	callstack 0
  6855   000099                     initInputScan@input:
  6856                           	callstack 0
  6857   000099                     consumer2QGetDiagnostic@index:
  6858                           	callstack 0
  6859   000099                     bootPowerUp@i:
  6860                           	callstack 0
  6861   000099                     ackGetDiagnostic@index:
  6862                           	callstack 0
  6863   000099                     mnsGetDiagnostic@index:
  6864                           	callstack 0
  6865   000099                     nvGetDiagnostic@index:
  6866                           	callstack 0
  6867   000099                     teachGetDiagnostic@index:
  6868                           	callstack 0
  6869   000099                     producerGetDiagnostic@index:
  6870                           	callstack 0
  6871   000099                     loadNvCache@temp:
  6872                           	callstack 0
  6873   000099                     ___awdiv@divisor:
  6874                           	callstack 0
  6875   000099                     ___lmul@product:
  6876                           	callstack 0
  6877                           
  6878                           ; 4 bytes @ 0x39
  6879   000099                     	ds	1
  6880   00009A                     canGetDiagnostic@index:
  6881                           	callstack 0
  6882   00009A                     setupTimer1@ticks:
  6883                           	callstack 0
  6884   00009A                     setupTimer3@ticks:
  6885                           	callstack 0
  6886   00009A                     canSendMessage@mp:
  6887                           	callstack 0
  6888   00009A                     bootPowerUp@a:
  6889                           	callstack 0
  6890                           
  6891                           ; 3 bytes @ 0x3A
  6892   00009A                     	ds	1
  6893   00009B                     loadNvCache@i:
  6894                           	callstack 0
  6895   00009B                     validStart@tableIndex:
  6896                           	callstack 0
  6897   00009B                     ___awdiv@counter:
  6898                           	callstack 0
  6899   00009B                     ___lldiv@divisor:
  6900                           	callstack 0
  6901                           
  6902                           ; 4 bytes @ 0x3B
  6903   00009B                     	ds	1
  6904   00009C                     ??_canSendMessage:
  6905   00009C                     setupTimer1@io:
  6906                           	callstack 0
  6907   00009C                     setupTimer3@io:
  6908                           	callstack 0
  6909   00009C                     nvPowerUp@i:
  6910                           	callstack 0
  6911   00009C                     validStart@f:
  6912                           	callstack 0
  6913   00009C                     ___awdiv@sign:
  6914                           	callstack 0
  6915                           
  6916                           ; 1 bytes @ 0x3C
  6917   00009C                     	ds	1
  6918   00009D                     ??_getEVs:
  6919   00009D                     ??_numEv:
  6920   00009D                     ?_getEv:
  6921                           	callstack 0
  6922   00009D                     handleSelfEnumeration@incomingCanId:
  6923                           	callstack 0
  6924   00009D                     getEv@evNum:
  6925                           	callstack 0
  6926   00009D                     doWait@duration:
  6927                           	callstack 0
  6928   00009D                     getNN@hi:
  6929                           	callstack 0
  6930   00009D                     getEN@hi:
  6931                           	callstack 0
  6932   00009D                     ___awdiv@quotient:
  6933                           	callstack 0
  6934                           
  6935                           ; 2 bytes @ 0x3D
  6936   00009D                     	ds	2
  6937   00009F                     ??_getEv:
  6938   00009F                     ??_doWait:
  6939   00009F                     ??_bounceUp:
  6940   00009F                     ??_bounceDown:
  6941   00009F                     ??_APP_GetEventState:
  6942   00009F                     ??_APP_nvDefault:
  6943   00009F                     ??_leds_poll:
  6944   00009F                     APP_nvValidate@value:
  6945                           	callstack 0
  6946   00009F                     setServoPosition@pos:
  6947                           	callstack 0
  6948   00009F                     getNN@lo:
  6949                           	callstack 0
  6950   00009F                     getEN@lo:
  6951                           	callstack 0
  6952   00009F                     ___lldiv@quotient:
  6953                           	callstack 0
  6954                           
  6955                           ; 4 bytes @ 0x3F
  6956   00009F                     	ds	1
  6957   0000A0                     APP_nvValidate@index:
  6958                           	callstack 0
  6959   0000A0                     setServoPosition@io:
  6960                           	callstack 0
  6961                           
  6962                           ; 1 bytes @ 0x40
  6963   0000A0                     	ds	1
  6964   0000A1                     setOutputPosition@pos:
  6965                           	callstack 0
  6966   0000A1                     canSendMessage@no:
  6967                           	callstack 0
  6968   0000A1                     numEv@num:
  6969                           	callstack 0
  6970   0000A1                     getEVs@f:
  6971                           	callstack 0
  6972   0000A1                     getNN@f:
  6973                           	callstack 0
  6974   0000A1                     getEN@tableIndex:
  6975                           	callstack 0
  6976                           
  6977                           ; 1 bytes @ 0x41
  6978   0000A1                     	ds	1
  6979   0000A2                     setOutputPosition@type:
  6980                           	callstack 0
  6981   0000A2                     numEv@f:
  6982                           	callstack 0
  6983   0000A2                     getEVs@evIdx:
  6984                           	callstack 0
  6985   0000A2                     getNN@tableIndex:
  6986                           	callstack 0
  6987   0000A2                     canSendMessage@m:
  6988                           	callstack 0
  6989                           
  6990                           ; 2 bytes @ 0x42
  6991   0000A2                     	ds	1
  6992   0000A3                     APP_nvDefault@index:
  6993                           	callstack 0
  6994   0000A3                     setOutputPosition@io:
  6995                           	callstack 0
  6996   0000A3                     numEv@tableIndex:
  6997                           	callstack 0
  6998   0000A3                     getEVs@tableIndex:
  6999                           	callstack 0
  7000   0000A3                     ___lldiv@counter:
  7001                           	callstack 0
  7002   0000A3                     getHash@nn:
  7003                           	callstack 0
  7004                           
  7005                           ; 2 bytes @ 0x43
  7006   0000A3                     	ds	1
  7007   0000A4                     ??_initServos:
  7008   0000A4                     ??_sendMessage:
  7009   0000A4                     ??_pbDownTimer:
  7010   0000A4                     ??_pbUpTimer:
  7011   0000A4                     getEv@f:
  7012                           	callstack 0
  7013   0000A4                     getEVs@evNum:
  7014                           	callstack 0
  7015   0000A4                     writeNVM@index:
  7016                           	callstack 0
  7017                           
  7018                           ; 3 bytes @ 0x44
  7019   0000A4                     	ds	1
  7020   0000A5                     bounceUp@reversed:
  7021                           	callstack 0
  7022   0000A5                     getEv@tableIndex:
  7023                           	callstack 0
  7024   0000A5                     getHash@en:
  7025                           	callstack 0
  7026                           
  7027                           ; 2 bytes @ 0x45
  7028   0000A5                     	ds	1
  7029   0000A6                     APP_GetEventState@flags:
  7030                           	callstack 0
  7031   0000A6                     isConsumedEvent@eventIndex:
  7032                           	callstack 0
  7033   0000A6                     bounceDown@reversed:
  7034                           	callstack 0
  7035   0000A6                     bounceUp@midway:
  7036                           	callstack 0
  7037   0000A6                     sendMessage@opc:
  7038                           	callstack 0
  7039   0000A6                     _initServos$8095:
  7040                           	callstack 0
  7041                           
  7042                           ; 1 bytes @ 0x46
  7043   0000A6                     	ds	1
  7044   0000A7                     ??_getHash:
  7045   0000A7                     APP_GetEventState@disable_off:
  7046                           	callstack 0
  7047   0000A7                     isConsumedEvent@ev:
  7048                           	callstack 0
  7049   0000A7                     bounceUp@io:
  7050                           	callstack 0
  7051   0000A7                     sendMessage2@data1:
  7052                           	callstack 0
  7053   0000A7                     sendMessage3@data1:
  7054                           	callstack 0
  7055   0000A7                     sendMessage4@opc:
  7056                           	callstack 0
  7057   0000A7                     sendMessage5@opc:
  7058                           	callstack 0
  7059   0000A7                     sendMessage6@opc:
  7060                           	callstack 0
  7061   0000A7                     sendMessage7@opc:
  7062                           	callstack 0
  7063   0000A7                     writeNVM@value:
  7064                           	callstack 0
  7065   0000A7                     _initServos$8094:
  7066                           	callstack 0
  7067   0000A7                     bounceDown@tmp:
  7068                           	callstack 0
  7069                           
  7070                           ; 2 bytes @ 0x47
  7071   0000A7                     	ds	1
  7072   0000A8                     ??_writeNVM:
  7073   0000A8                     APP_GetEventState@h:
  7074                           	callstack 0
  7075   0000A8                     initServos@io:
  7076                           	callstack 0
  7077   0000A8                     pbDownTimer@timeout:
  7078                           	callstack 0
  7079   0000A8                     pbUpTimer@timeout:
  7080                           	callstack 0
  7081   0000A8                     sendMessage2@data2:
  7082                           	callstack 0
  7083   0000A8                     sendMessage3@data2:
  7084                           	callstack 0
  7085   0000A8                     getHash@hash:
  7086                           	callstack 0
  7087   0000A8                     sendProducedEvent@onOff:
  7088                           	callstack 0
  7089                           
  7090                           ; 1 bytes @ 0x48
  7091   0000A8                     	ds	1
  7092   0000A9                     APP_GetEventState@happeningIndex:
  7093                           	callstack 0
  7094   0000A9                     bounceDown@io:
  7095                           	callstack 0
  7096   0000A9                     sendMessage2@opc:
  7097                           	callstack 0
  7098   0000A9                     sendMessage3@data3:
  7099                           	callstack 0
  7100   0000A9                     teachPowerUp@i:
  7101                           	callstack 0
  7102                           
  7103                           ; 1 bytes @ 0x49
  7104   0000A9                     	ds	1
  7105   0000AA                     
  7106                           ; 1 bytes @ 0x4A
  7107                           
  7108                           	psect	cstackCOMRAM
  7109   00002B                     __pcstackCOMRAM:
  7110                           	callstack 0
  7111   00002B                     ?i2_getNV:
  7112                           	callstack 0
  7113   00002B                     ?i2_getNextWriteMessage:
  7114                           	callstack 0
  7115   00002B                     ?i2_pop:
  7116                           	callstack 0
  7117   00002B                     ?i2_getBufferPointer:
  7118                           	callstack 0
  7119   00002B                     ?i2_tickGet:
  7120                           	callstack 0
  7121   00002B                     i2_isEvent$4896:
  7122                           	callstack 0
  7123   00002B                     i2getNextWriteMessage@q:
  7124                           	callstack 0
  7125   00002B                     i2pop@q:
  7126                           	callstack 0
  7127                           
  7128                           ; 2 bytes @ 0x0
  7129   00002B                     	ds	1
  7130   00002C                     i2isEvent@opc:
  7131                           	callstack 0
  7132                           
  7133                           ; 1 bytes @ 0x1
  7134   00002C                     	ds	1
  7135   00002D                     ??i2_getNV:
  7136   00002D                     ??i2_getNextWriteMessage:
  7137   00002D                     ??i2_pop:
  7138   00002D                     i2getBufferPointer@b:
  7139                           	callstack 0
  7140                           
  7141                           ; 1 bytes @ 0x2
  7142   00002D                     	ds	1
  7143   00002E                     i2getNV@index:
  7144                           	callstack 0
  7145                           
  7146                           ; 1 bytes @ 0x3
  7147   00002E                     	ds	1
  7148   00002F                     i2setOutputPin@state:
  7149                           	callstack 0
  7150   00002F                     i2tickGet@IntFlag2:
  7151                           	callstack 0
  7152                           
  7153                           ; 1 bytes @ 0x4
  7154   00002F                     	ds	1
  7155   000030                     ??i2_setOutputPin:
  7156   000030                     i2tickGet@IntFlag1:
  7157                           	callstack 0
  7158                           
  7159                           ; 1 bytes @ 0x5
  7160   000030                     	ds	1
  7161   000031                     i2tickGet@currentTime:
  7162                           	callstack 0
  7163                           
  7164                           ; 4 bytes @ 0x6
  7165   000031                     	ds	1
  7166   000032                     i2setOutputPin@io:
  7167                           	callstack 0
  7168   000032                     i2pop@ret:
  7169                           	callstack 0
  7170                           
  7171                           ; 2 bytes @ 0x7
  7172   000032                     	ds	1
  7173   000033                     
  7174                           ; 1 bytes @ 0x8
  7175   000033                     	ds	3
  7176   000036                     i2getNextWriteMessage@wr:
  7177                           	callstack 0
  7178                           
  7179                           ; 1 bytes @ 0xB
  7180   000036                     	ds	1
  7181   000037                     ??i2_checkTxFifo:
  7182   000037                     i2canFillRxFifo@m:
  7183                           	callstack 0
  7184                           
  7185                           ; 2 bytes @ 0xC
  7186   000037                     	ds	2
  7187   000039                     i2canFillRxFifo@ptr:
  7188                           	callstack 0
  7189                           
  7190                           ; 2 bytes @ 0xE
  7191   000039                     	ds	3
  7192   00003C                     i2checkTxFifo@m:
  7193                           	callstack 0
  7194                           
  7195                           ; 2 bytes @ 0x11
  7196   00003C                     	ds	2
  7197   00003E                     i2checkTxFifo@mp:
  7198                           	callstack 0
  7199                           
  7200                           ; 2 bytes @ 0x13
  7201   00003E                     	ds	2
  7202   000040                     ??i2_checkCANTimeout:
  7203   000040                     
  7204                           ; 1 bytes @ 0x15
  7205   000040                     	ds	4
  7206   000044                     ??_highIsr:
  7207   000044                     
  7208                           ; 1 bytes @ 0x19
  7209   000044                     	ds	4
  7210   000048                     highIsr@i:
  7211                           	callstack 0
  7212                           
  7213                           ; 1 bytes @ 0x1D
  7214   000048                     	ds	1
  7215   000049                     ??_isrHigh:
  7216                           
  7217                           ; 1 bytes @ 0x1E
  7218   000049                     	ds	12
  7219                           
  7220 ;;
  7221 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7222 ;;
  7223 ;; *************** function _main *****************
  7224 ;; Defined at:
  7225 ;;		line 1249 in file "../../VLCBlib_PIC/vlcb.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;		None
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  i               1    0        unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  1    wreg      void 
  7232 ;; Registers used:
  7233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7243 ;;Total ram usage:        0 bytes
  7244 ;; Hardware stack levels required when called: 29
  7245 ;; This function calls:
  7246 ;;		_checkPowerOnPb
  7247 ;;		_factoryReset
  7248 ;;		_initRomOps
  7249 ;;		_loop
  7250 ;;		_poll
  7251 ;;		_powerUp
  7252 ;;		_readNVM
  7253 ;;		_setup
  7254 ;; This function is called by:
  7255 ;;		Startup code after reset
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           	psect	text0
  7260   00BC22                     __ptext0:
  7261                           	callstack 0
  7262   00BC22                     _main:
  7263                           	callstack 2
  7264                           
  7265                           ;../../VLCBlib_PIC/vlcb.c: 1250:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1256:     OSCT
      +                          UNEbits.PLLEN = 1;
  7266                           
  7267                           ;incstack = 0
  7268   00BC22  8C9B               	bsf	155,6,c	;volatile
  7269                           
  7270                           ;../../VLCBlib_PIC/vlcb.c: 1271:     RCONbits.IPEN = 1;
  7271   00BC24  8ED0               	bsf	208,7,c	;volatile
  7272                           
  7273                           ;../../VLCBlib_PIC/vlcb.c: 1293:     initRomOps();
  7274   00BC26  EC03  F064         	call	_initRomOps	;wreg free
  7275                           
  7276                           ;../../VLCBlib_PIC/vlcb.c: 1295:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
  7277   00BC2A  0EFA               	movlw	250
  7278   00BC2C  0100               	movlb	0	; () banked
  7279   00BC2E  6F91               	movwf	readNVM@index& (0+255),b
  7280   00BC30  0E03               	movlw	3
  7281   00BC32  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7282   00BC34  0E00               	movlw	0
  7283   00BC36  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7284   00BC38  0E00               	movlw	0
  7285   00BC3A  EC0F  F05B         	call	_readNVM
  7286   00BC3E  0100               	movlb	0	; () banked
  7287   00BC40  0591               	decf	?_readNVM& (0+255),w,b
  7288   00BC42  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7289   00BC44  A4D8               	btfss	status,2,c
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;../../VLCBlib_PIC/vlcb.c: 1296:         factoryReset();
  7293   00BC46  ECAC  F043         	call	_factoryReset	;wreg free
  7294                           
  7295                           ;../../VLCBlib_PIC/vlcb.c: 1300:     powerUp();
  7296                           
  7297                           ;../../VLCBlib_PIC/vlcb.c: 1297:     }
  7298   00BC4A  EC73  F045         	call	_powerUp	;wreg free
  7299                           
  7300                           ;../../VLCBlib_PIC/vlcb.c: 1303:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7301   00BC4E  8EF2               	bsf	242,7,c	;volatile
  7302   00BC50  8CF2               	bsf	242,6,c	;volatile
  7303                           
  7304                           ;../../VLCBlib_PIC/vlcb.c: 1304:     checkPowerOnPb();
  7305   00BC52  EC6E  F05B         	call	_checkPowerOnPb	;wreg free
  7306                           
  7307                           ;../../VLCBlib_PIC/vlcb.c: 1307:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7308   00BC56  9EF2               	bcf	242,7,c	;volatile
  7309   00BC58  9CF2               	bcf	242,6,c	;volatile
  7310                           
  7311                           ;../../VLCBlib_PIC/vlcb.c: 1308:     setup();
  7312   00BC5A  EC52  F04E         	call	_setup	;wreg free
  7313                           
  7314                           ;../../VLCBlib_PIC/vlcb.c: 1311:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7315   00BC5E  8EF2               	bsf	242,7,c	;volatile
  7316   00BC60  8CF2               	bsf	242,6,c	;volatile
  7317   00BC62                     l25445:
  7318                           
  7319                           ;../../VLCBlib_PIC/vlcb.c: 1315:         poll();
  7320   00BC62  ECA7  F020         	call	_poll	;wreg free
  7321                           
  7322                           ;../../VLCBlib_PIC/vlcb.c: 1316:         loop();
  7323   00BC66  ECB6  F036         	call	_loop	;wreg free
  7324   00BC6A  D7FB               	goto	l25445
  7325   00BC6C                     __end_of_main:
  7326                           	callstack 0
  7327                           
  7328 ;; *************** function _setup *****************
  7329 ;; Defined at:
  7330 ;;		line 236 in file "../main.c"
  7331 ;; Parameters:    Size  Location     Type
  7332 ;;		None
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;		None
  7335 ;; Return value:  Size  Location     Type
  7336 ;;                  1    wreg      void 
  7337 ;; Registers used:
  7338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7339 ;; Tracked objects:
  7340 ;;		On entry : 0/0
  7341 ;;		On exit  : 0/0
  7342 ;;		Unchanged: 0/0
  7343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7348 ;;Total ram usage:        0 bytes
  7349 ;; Hardware stack levels used: 1
  7350 ;; Hardware stack levels required when called: 19
  7351 ;; This function calls:
  7352 ;;		_configIO
  7353 ;;		_getNV
  7354 ;;		_initInputScan
  7355 ;;		_initOutputs
  7356 ;;		_initServos
  7357 ;;		_setTimedResponseDelay
  7358 ;;		_tickGet
  7359 ;;		_universalEventsInit
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text1
  7366   009CA4                     __ptext1:
  7367                           	callstack 0
  7368   009CA4                     _setup:
  7369                           	callstack 11
  7370                           
  7371                           ;../main.c: 241:     transport = &canTransport;
  7372                           
  7373                           ;incstack = 0
  7374   009CA4  0E7A               	movlw	low _canTransport
  7375   009CA6  0101               	movlb	1	; () banked
  7376   009CA8  6F62               	movwf	_transport& (0+255),b
  7377   009CAA  0EEF               	movlw	high _canTransport
  7378   009CAC  6F63               	movwf	(_transport+1)& (0+255),b
  7379                           
  7380                           ; BSR set to: 1
  7381                           ;../main.c: 248:     INTCON2bits.RBPU = 0;
  7382   009CAE  9EF1               	bcf	241,7,c	;volatile
  7383                           
  7384                           ; BSR set to: 1
  7385                           ;../main.c: 250:     WPUB = (uint8_t)getNV(4);
  7386   009CB0  0E04               	movlw	4
  7387   009CB2  ECB0  F05F         	call	_getNV
  7388   009CB6  0100               	movlb	0	; () banked
  7389   009CB8  518D               	movf	?_getNV& (0+255),w,b
  7390   009CBA  010F               	movlb	15	; () banked
  7391   009CBC  6F5B               	movwf	91,b	;volatile
  7392                           
  7393                           ; BSR set to: 15
  7394                           ;../main.c: 304:     setTimedResponseDelay((uint8_t)getNV(5));
  7395   009CBE  0E05               	movlw	5
  7396   009CC0  ECB0  F05F         	call	_getNV
  7397   009CC4  0100               	movlb	0	; () banked
  7398   009CC6  518D               	movf	?_getNV& (0+255),w,b
  7399   009CC8  EC55  F064         	call	_setTimedResponseDelay
  7400                           
  7401                           ;../main.c: 305:     universalEventsInit();
  7402   009CCC  EC17  F064         	call	_universalEventsInit	;wreg free
  7403                           
  7404                           ;../main.c: 312:     ANCON0 = 0x00;
  7405   009CD0  0E00               	movlw	0
  7406   009CD2  010F               	movlb	15	; () banked
  7407   009CD4  6F5D               	movwf	93,b	;volatile
  7408                           
  7409                           ; BSR set to: 15
  7410                           ;../main.c: 313:     ANCON1 = 0x00;
  7411   009CD6  0E00               	movlw	0
  7412   009CD8  6F5C               	movwf	92,b	;volatile
  7413                           
  7414                           ; BSR set to: 15
  7415                           ;../main.c: 326:     initServos();
  7416   009CDA  ECF2  F03E         	call	_initServos	;wreg free
  7417                           
  7418                           ;../main.c: 328:     initOutputs();
  7419   009CDE  ECB1  F061         	call	_initOutputs	;wreg free
  7420                           
  7421                           ;../main.c: 331:     for (io=0; io< 16; io++) {
  7422   009CE2  0E00               	movlw	0
  7423   009CE4  0100               	movlb	0	; () banked
  7424   009CE6  6FCF               	movwf	_io& (0+255),b
  7425   009CE8                     l25193:
  7426                           
  7427                           ; BSR set to: 0
  7428   009CE8  0E0F               	movlw	15
  7429   009CEA  65CF               	cpfsgt	_io& (0+255),b
  7430   009CEC  D001               	goto	l25197
  7431   009CEE  D006               	goto	l25203
  7432   009CF0                     l25197:
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;../main.c: 332:         configIO(io);
  7436   009CF0  51CF               	movf	_io& (0+255),w,b
  7437   009CF2  EC28  F027         	call	_configIO
  7438                           
  7439                           ;../main.c: 333:     }
  7440   009CF6  0100               	movlb	0	; () banked
  7441   009CF8  2BCF               	incf	_io& (0+255),f,b
  7442   009CFA  D7F6               	goto	l25193
  7443   009CFC                     l25203:
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;../main.c: 334:     initInputScan();
  7447   009CFC  ECA7  F04E         	call	_initInputScan	;wreg free
  7448                           
  7449                           ;../main.c: 340:     (INTCONbits.GIE = 1);
  7450   009D00  8EF2               	bsf	242,7,c	;volatile
  7451                           
  7452                           ;../main.c: 342:     startTime.val = tickGet();
  7453   009D02  EC23  F05C         	call	_tickGet	;wreg free
  7454   009D06  C08D  F01D         	movff	?_tickGet,_startTime
  7455   009D0A  C08E  F01E         	movff	?_tickGet+1,_startTime+1
  7456   009D0E  C08F  F01F         	movff	?_tickGet+2,_startTime+2
  7457   009D12  C090  F020         	movff	?_tickGet+3,_startTime+3
  7458                           
  7459                           ;../main.c: 343:     lastServoStartTime.val = startTime.val;
  7460   009D16  C01D  F15C         	movff	_startTime,_lastServoStartTime
  7461   009D1A  C01E  F15D         	movff	_startTime+1,_lastServoStartTime+1
  7462   009D1E  C01F  F15E         	movff	_startTime+2,_lastServoStartTime+2
  7463   009D22  C020  F15F         	movff	_startTime+3,_lastServoStartTime+3
  7464                           
  7465                           ;../main.c: 344:     lastInputScanTime.val = startTime.val;
  7466   009D26  C01D  F158         	movff	_startTime,_lastInputScanTime
  7467   009D2A  C01E  F159         	movff	_startTime+1,_lastInputScanTime+1
  7468   009D2E  C01F  F15A         	movff	_startTime+2,_lastInputScanTime+2
  7469   009D32  C020  F15B         	movff	_startTime+3,_lastInputScanTime+3
  7470                           
  7471                           ;../main.c: 345:     lastActionPollTime.val = startTime.val;
  7472   009D36  C01D  F154         	movff	_startTime,_lastActionPollTime
  7473   009D3A  C01E  F155         	movff	_startTime+1,_lastActionPollTime+1
  7474   009D3E  C01F  F156         	movff	_startTime+2,_lastActionPollTime+2
  7475   009D42  C020  F157         	movff	_startTime+3,_lastActionPollTime+3
  7476                           
  7477                           ;../main.c: 350:     started = FALSE;
  7478   009D46  0E00               	movlw	0
  7479   009D48  0100               	movlb	0	; () banked
  7480   009D4A  6FD0               	movwf	_started& (0+255),b
  7481                           
  7482                           ; BSR set to: 0
  7483   009D4C  0012               	return		;funcret
  7484   009D4E                     __end_of_setup:
  7485                           	callstack 0
  7486                           
  7487 ;; *************** function _universalEventsInit *****************
  7488 ;; Defined at:
  7489 ;;		line 93 in file "../universalEvents.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7507 ;;Total ram usage:        0 bytes
  7508 ;; Hardware stack levels used: 1
  7509 ;; Hardware stack levels required when called: 12
  7510 ;; This function calls:
  7511 ;;		Nothing
  7512 ;; This function is called by:
  7513 ;;		_setup
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           
  7517                           	psect	text2
  7518   00C82E                     __ptext2:
  7519                           	callstack 0
  7520   00C82E                     _universalEventsInit:
  7521                           	callstack 17
  7522                           
  7523                           ;../universalEvents.c: 94:     startWait.val = 0;
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;incstack = 0
  7527   00C82E  0E00               	movlw	0
  7528   00C830  6E19               	movwf	_startWait^0,c
  7529   00C832  0E00               	movlw	0
  7530   00C834  6E1A               	movwf	(_startWait+1)^0,c
  7531   00C836  0E00               	movlw	0
  7532   00C838  6E1B               	movwf	(_startWait+2)^0,c
  7533   00C83A  0E00               	movlw	0
  7534   00C83C  6E1C               	movwf	(_startWait+3)^0,c
  7535   00C83E  0012               	return		;funcret
  7536   00C840                     __end_of_universalEventsInit:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function _initServos *****************
  7540 ;; Defined at:
  7541 ;;		line 124 in file "../servo.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;		None
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  io              1   72[BANK0 ] unsigned char 
  7546 ;; Return value:  Size  Location     Type
  7547 ;;                  1    wreg      void 
  7548 ;; Registers used:
  7549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7550 ;; Tracked objects:
  7551 ;;		On entry : 0/0
  7552 ;;		On exit  : 0/0
  7553 ;;		Unchanged: 0/0
  7554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7556 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7558 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7559 ;;Total ram usage:        5 bytes
  7560 ;; Hardware stack levels used: 1
  7561 ;; Hardware stack levels required when called: 15
  7562 ;; This function calls:
  7563 ;;		_getNV
  7564 ;;		_readNVM
  7565 ;;		_setOutputPosition
  7566 ;;		_tickGet
  7567 ;; This function is called by:
  7568 ;;		_setup
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           	psect	text3
  7573   007DE4                     __ptext3:
  7574                           	callstack 0
  7575   007DE4                     _initServos:
  7576                           	callstack 14
  7577                           
  7578                           ;incstack = 0
  7579   007DE4  0E00               	movlw	0
  7580   007DE6  0100               	movlb	0	; () banked
  7581   007DE8  6FA8               	movwf	initServos@io& (0+255),b
  7582   007DEA                     l23115:
  7583                           
  7584                           ; BSR set to: 0
  7585   007DEA  51A8               	movf	initServos@io& (0+255),w,b
  7586   007DEC  0D07               	mullw	7
  7587   007DEE  50F3               	movf	243,w,c
  7588   007DF0  0F11               	addlw	17
  7589   007DF2  ECB0  F05F         	call	_getNV
  7590   007DF6  0100               	movlb	0	; () banked
  7591   007DF8  A58D               	btfss	?_getNV& (0+255),2,b
  7592   007DFA  D009               	goto	l23119
  7593                           
  7594                           ; BSR set to: 0
  7595   007DFC  0E10               	movlw	low _servoState
  7596   007DFE  25A8               	addwf	initServos@io& (0+255),w,b
  7597   007E00  6ED9               	movwf	fsr2l,c
  7598   007E02  6ADA               	clrf	fsr2h,c
  7599   007E04  0E01               	movlw	high _servoState
  7600   007E06  22DA               	addwfc	fsr2h,f,c
  7601   007E08  0E01               	movlw	1
  7602   007E0A  6EDF               	movwf	indf2,c
  7603   007E0C  D007               	goto	l23121
  7604   007E0E                     l23119:
  7605                           
  7606                           ; BSR set to: 0
  7607   007E0E  0E10               	movlw	low _servoState
  7608   007E10  25A8               	addwf	initServos@io& (0+255),w,b
  7609   007E12  6ED9               	movwf	fsr2l,c
  7610   007E14  6ADA               	clrf	fsr2h,c
  7611   007E16  0E01               	movlw	high _servoState
  7612   007E18  22DA               	addwfc	fsr2h,f,c
  7613   007E1A  6ADF               	clrf	indf2,c
  7614   007E1C                     l23121:
  7615                           
  7616                           ; BSR set to: 0
  7617   007E1C  EC23  F05C         	call	_tickGet	;wreg free
  7618   007E20  0100               	movlb	0	; () banked
  7619   007E22  51A8               	movf	initServos@io& (0+255),w,b
  7620   007E24  0D04               	mullw	4
  7621   007E26  0E88               	movlw	low _ticksWhenStopped
  7622   007E28  24F3               	addwf	243,w,c
  7623   007E2A  6ED9               	movwf	fsr2l,c
  7624   007E2C  0E03               	movlw	high _ticksWhenStopped
  7625   007E2E  20F4               	addwfc	prodh,w,c
  7626   007E30  6EDA               	movwf	fsr2h,c
  7627   007E32  C08D  FFDE         	movff	?_tickGet,postinc2
  7628   007E36  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7629   007E3A  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7630   007E3E  C090  FFDE         	movff	?_tickGet+3,postinc2
  7631                           
  7632                           ; BSR set to: 0
  7633   007E42  51A8               	movf	initServos@io& (0+255),w,b
  7634   007E44  0D07               	mullw	7
  7635   007E46  50F3               	movf	243,w,c
  7636   007E48  0F11               	addlw	17
  7637   007E4A  ECB0  F05F         	call	_getNV
  7638   007E4E  0100               	movlb	0	; () banked
  7639   007E50  A58D               	btfss	?_getNV& (0+255),2,b
  7640   007E52  D020               	goto	l23129
  7641                           
  7642                           ; BSR set to: 0
  7643   007E54  51A8               	movf	initServos@io& (0+255),w,b
  7644   007E56  0D07               	mullw	7
  7645   007E58  50F3               	movf	243,w,c
  7646   007E5A  0F10               	addlw	16
  7647   007E5C  ECB0  F05F         	call	_getNV
  7648   007E60  0100               	movlb	0	; () banked
  7649   007E62  518D               	movf	?_getNV& (0+255),w,b
  7650   007E64  6FA7               	movwf	_initServos$8094& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653   007E66  0EDE               	movlw	222
  7654   007E68  25A8               	addwf	initServos@io& (0+255),w,b
  7655   007E6A  6FA4               	movwf	??_initServos& (0+255),b
  7656   007E6C  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7657   007E6E  0E03               	movlw	3
  7658   007E70  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7659   007E72  C0A4  F091         	movff	??_initServos,readNVM@index
  7660   007E76  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7661   007E7A  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7662   007E7C  0E00               	movlw	0
  7663   007E7E  EC0F  F05B         	call	_readNVM
  7664   007E82  0100               	movlb	0	; () banked
  7665   007E84  5191               	movf	?_readNVM& (0+255),w,b
  7666   007E86  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7667   007E88  C0A7  F0A2         	movff	_initServos$8094,setOutputPosition@type
  7668   007E8C  51A8               	movf	initServos@io& (0+255),w,b
  7669   007E8E  EC8A  F057         	call	_setOutputPosition
  7670   007E92  D019               	goto	l23133
  7671   007E94                     l23129:
  7672                           
  7673                           ; BSR set to: 0
  7674   007E94  51A8               	movf	initServos@io& (0+255),w,b
  7675   007E96  0D07               	mullw	7
  7676   007E98  50F3               	movf	243,w,c
  7677   007E9A  0F12               	addlw	18
  7678   007E9C  ECB0  F05F         	call	_getNV
  7679   007EA0  0100               	movlb	0	; () banked
  7680   007EA2  518D               	movf	?_getNV& (0+255),w,b
  7681   007EA4  6FA7               	movwf	_initServos$8094& (0+255),b
  7682   007EA6  51A8               	movf	initServos@io& (0+255),w,b
  7683   007EA8  0D07               	mullw	7
  7684   007EAA  50F3               	movf	243,w,c
  7685   007EAC  0F10               	addlw	16
  7686   007EAE  ECB0  F05F         	call	_getNV
  7687   007EB2  0100               	movlb	0	; () banked
  7688   007EB4  518D               	movf	?_getNV& (0+255),w,b
  7689   007EB6  6FA6               	movwf	_initServos$8095& (0+255),b
  7690                           
  7691                           ; BSR set to: 0
  7692   007EB8  C0A7  F0A1         	movff	_initServos$8094,setOutputPosition@pos
  7693   007EBC  C0A6  F0A2         	movff	_initServos$8095,setOutputPosition@type
  7694   007EC0  51A8               	movf	initServos@io& (0+255),w,b
  7695   007EC2  EC8A  F057         	call	_setOutputPosition
  7696   007EC6                     l23133:
  7697   007EC6  0E00               	movlw	low _stepsPerPollSpeed
  7698   007EC8  0100               	movlb	0	; () banked
  7699   007ECA  25A8               	addwf	initServos@io& (0+255),w,b
  7700   007ECC  6ED9               	movwf	fsr2l,c
  7701   007ECE  6ADA               	clrf	fsr2h,c
  7702   007ED0  0E01               	movlw	high _stepsPerPollSpeed
  7703   007ED2  22DA               	addwfc	fsr2h,f,c
  7704   007ED4  6ADF               	clrf	indf2,c
  7705                           
  7706                           ; BSR set to: 0
  7707   007ED6  2BA8               	incf	initServos@io& (0+255),f,b
  7708                           
  7709                           ; BSR set to: 0
  7710   007ED8  0E0F               	movlw	15
  7711   007EDA  65A8               	cpfsgt	initServos@io& (0+255),b
  7712   007EDC  D786               	goto	l23115
  7713                           
  7714                           ; BSR set to: 0
  7715   007EDE  9EAA               	bcf	170,7,c	;volatile
  7716                           
  7717                           ; BSR set to: 0
  7718   007EE0  0E3F               	movlw	-193
  7719   007EE2  16CD               	andwf	205,f,c	;volatile
  7720   007EE4  50CD               	movf	205,w,c	;volatile
  7721   007EE6  0BCF               	andlw	-49
  7722   007EE8  0920               	iorlw	32
  7723   007EEA  6ECD               	movwf	205,c	;volatile
  7724                           
  7725                           ; BSR set to: 0
  7726   007EEC  86CD               	bsf	205,3,c	;volatile
  7727                           
  7728                           ; BSR set to: 0
  7729   007EEE  82CD               	bsf	205,1,c	;volatile
  7730                           
  7731                           ; BSR set to: 0
  7732   007EF0  809D               	bsf	157,0,c	;volatile
  7733                           
  7734                           ; BSR set to: 0
  7735   007EF2  9EB0               	bcf	176,7,c	;volatile
  7736   007EF4  0E3F               	movlw	-193
  7737   007EF6  16B1               	andwf	177,f,c	;volatile
  7738   007EF8  50B1               	movf	177,w,c	;volatile
  7739   007EFA  0BCF               	andlw	-49
  7740   007EFC  0920               	iorlw	32
  7741   007EFE  6EB1               	movwf	177,c	;volatile
  7742                           
  7743                           ; BSR set to: 0
  7744   007F00  86B1               	bsf	177,3,c	;volatile
  7745                           
  7746                           ; BSR set to: 0
  7747   007F02  82B1               	bsf	177,1,c	;volatile
  7748                           
  7749                           ; BSR set to: 0
  7750   007F04  82A0               	bsf	160,1,c	;volatile
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;../servo.c: 176:     servoInBlock = io -1;
  7754   007F06  05A8               	decf	initServos@io& (0+255),w,b
  7755   007F08  6FC9               	movwf	_servoInBlock& (0+255),b
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;../servo.c: 177:     servoActive[0] = 0;
  7759   007F0A  0E00               	movlw	0
  7760   007F0C  6FB2               	movwf	_servoActive& (0+255),b
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;../servo.c: 178:     servoActive[1] = 0;
  7764   007F0E  0E00               	movlw	0
  7765   007F10  6FB3               	movwf	(_servoActive+1)& (0+255),b
  7766                           
  7767                           ; BSR set to: 0
  7768   007F12  0012               	return		;funcret
  7769   007F14                     __end_of_initServos:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function _setOutputPosition *****************
  7773 ;; Defined at:
  7774 ;;		line 148 in file "../outputs.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  io              1    wreg     unsigned char 
  7777 ;;  pos             1   65[BANK0 ] unsigned char 
  7778 ;;  type            1   66[BANK0 ] unsigned char 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  io              1   67[BANK0 ] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  1    wreg      void 
  7783 ;; Registers used:
  7784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7790 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7791 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7793 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7794 ;;Total ram usage:        3 bytes
  7795 ;; Hardware stack levels used: 1
  7796 ;; Hardware stack levels required when called: 14
  7797 ;; This function calls:
  7798 ;;		_getNV
  7799 ;;		_setDigitalOutput
  7800 ;;		_setOutputPin
  7801 ;;		_setServoPosition
  7802 ;; This function is called by:
  7803 ;;		_initServos
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           	psect	text4
  7808   00AF14                     __ptext4:
  7809                           	callstack 0
  7810   00AF14                     _setOutputPosition:
  7811                           	callstack 14
  7812                           
  7813                           ; BSR set to: 0
  7814                           ;incstack = 0
  7815                           ;setOutputPosition@io stored from wreg
  7816   00AF14  0100               	movlb	0	; () banked
  7817   00AF16  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7818                           
  7819                           ;../outputs.c: 149:     switch(type) {
  7820   00AF18  D020               	goto	l21975
  7821   00AF1A                     l21963:
  7822                           
  7823                           ; BSR set to: 0
  7824                           ;../outputs.c: 156:             setDigitalOutput(io, pos);
  7825   00AF1A  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7826   00AF1E  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7827   00AF20  EC87  F053         	call	_setDigitalOutput
  7828   00AF24  0012               	return	
  7829   00AF26                     l21967:
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;../outputs.c: 166:             setServoPosition(io, pos);
  7833   00AF26  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7834   00AF2A  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7835   00AF2C  ECE2  F062         	call	_setServoPosition
  7836                           
  7837                           ;../outputs.c: 167:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7838   00AF30  0100               	movlb	0	; () banked
  7839   00AF32  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7840   00AF34  0D07               	mullw	7
  7841   00AF36  50F3               	movf	243,w,c
  7842   00AF38  0F11               	addlw	17
  7843   00AF3A  0B20               	andlw	32
  7844   00AF3C  ECB0  F05F         	call	_getNV
  7845   00AF40  0100               	movlb	0	; () banked
  7846   00AF42  518D               	movf	?_getNV& (0+255),w,b
  7847   00AF44  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7848   00AF46  B4D8               	btfsc	status,2,c
  7849   00AF48  D002               	goto	u22550
  7850   00AF4A  0E01               	movlw	1
  7851   00AF4C  D001               	goto	u22560
  7852   00AF4E                     u22550:
  7853   00AF4E  0E00               	movlw	0
  7854   00AF50                     u22560:
  7855   00AF50  6F91               	movwf	setOutputPin@state& (0+255),b
  7856   00AF52  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7857   00AF54  EC9A  F037         	call	_setOutputPin
  7858   00AF58  0012               	return	
  7859   00AF5A                     l21975:
  7860   00AF5A  0100               	movlb	0	; () banked
  7861   00AF5C  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7862                           
  7863                           ; Switch size 1, requested type "simple"
  7864                           ; Number of cases is 7, Range of values is 0 to 6
  7865                           ; switch strategies available:
  7866                           ; Name         Instructions Cycles
  7867                           ; simple_byte           22    12 (average)
  7868                           ;	Chosen strategy is simple_byte
  7869   00AF5E  0A00               	xorlw	0	; case 0
  7870   00AF60  B4D8               	btfsc	status,2,c
  7871   00AF62  0012               	return	
  7872   00AF64  0A01               	xorlw	1	; case 1
  7873   00AF66  B4D8               	btfsc	status,2,c
  7874   00AF68  D7D8               	goto	l21963
  7875   00AF6A  0A03               	xorlw	3	; case 2
  7876   00AF6C  B4D8               	btfsc	status,2,c
  7877   00AF6E  D7DB               	goto	l21967
  7878   00AF70  0A01               	xorlw	1	; case 3
  7879   00AF72  B4D8               	btfsc	status,2,c
  7880   00AF74  D7D8               	goto	l21967
  7881   00AF76  0A07               	xorlw	7	; case 4
  7882   00AF78  B4D8               	btfsc	status,2,c
  7883   00AF7A  D7D5               	goto	l21967
  7884   00AF7C  0A01               	xorlw	1	; case 5
  7885   00AF7E  B4D8               	btfsc	status,2,c
  7886   00AF80  0012               	return	
  7887   00AF82  0A03               	xorlw	3	; case 6
  7888   00AF84  0012               	return	
  7889   00AF86                     __end_of_setOutputPosition:
  7890                           	callstack 0
  7891                           
  7892 ;; *************** function _initOutputs *****************
  7893 ;; Defined at:
  7894 ;;		line 86 in file "../digitalOut.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;		None
  7897 ;; Auto vars:     Size  Location     Type
  7898 ;;  io              1   45[BANK0 ] unsigned char 
  7899 ;; Return value:  Size  Location     Type
  7900 ;;                  1    wreg      void 
  7901 ;; Registers used:
  7902 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7903 ;; Tracked objects:
  7904 ;;		On entry : 0/0
  7905 ;;		On exit  : 0/0
  7906 ;;		Unchanged: 0/0
  7907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7911 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7912 ;;Total ram usage:        1 bytes
  7913 ;; Hardware stack levels used: 1
  7914 ;; Hardware stack levels required when called: 12
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_setup
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           	psect	text5
  7923   00C362                     __ptext5:
  7924                           	callstack 0
  7925   00C362                     _initOutputs:
  7926                           	callstack 17
  7927                           
  7928                           ;../digitalOut.c: 88:     uint8_t io;;../digitalOut.c: 89:     for (io=0; io<16; io++) {
  7929                           
  7930                           ;incstack = 0
  7931   00C362  0E00               	movlw	0
  7932   00C364  0100               	movlb	0	; () banked
  7933   00C366  6F8D               	movwf	initOutputs@io& (0+255),b
  7934   00C368                     l15803:
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;../digitalOut.c: 90:        pulseDelays[io] = 0;
  7938   00C368  0EA4               	movlw	low _pulseDelays
  7939   00C36A  258D               	addwf	initOutputs@io& (0+255),w,b
  7940   00C36C  6ED9               	movwf	fsr2l,c
  7941   00C36E  6ADA               	clrf	fsr2h,c
  7942   00C370  0E02               	movlw	high _pulseDelays
  7943   00C372  22DA               	addwfc	fsr2h,f,c
  7944   00C374  6ADF               	clrf	indf2,c
  7945                           
  7946                           ;../digitalOut.c: 91:        flashDelays[io] = 0;
  7947   00C376  0E20               	movlw	low _flashDelays
  7948   00C378  258D               	addwf	initOutputs@io& (0+255),w,b
  7949   00C37A  6ED9               	movwf	fsr2l,c
  7950   00C37C  6ADA               	clrf	fsr2h,c
  7951   00C37E  0E01               	movlw	high _flashDelays
  7952   00C380  22DA               	addwfc	fsr2h,f,c
  7953   00C382  6ADF               	clrf	indf2,c
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;../digitalOut.c: 92:     }
  7957   00C384  2B8D               	incf	initOutputs@io& (0+255),f,b
  7958                           
  7959                           ; BSR set to: 0
  7960   00C386  0E0F               	movlw	15
  7961   00C388  658D               	cpfsgt	initOutputs@io& (0+255),b
  7962   00C38A  D7EE               	goto	l15803
  7963   00C38C  0012               	return	
  7964   00C38E                     __end_of_initOutputs:
  7965                           	callstack 0
  7966                           
  7967 ;; *************** function _initInputScan *****************
  7968 ;; Defined at:
  7969 ;;		line 76 in file "../inputs.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;  input           1   57[BANK0 ] unsigned char 
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7984 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7985 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7986 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7987 ;;Total ram usage:        3 bytes
  7988 ;; Hardware stack levels used: 1
  7989 ;; Hardware stack levels required when called: 14
  7990 ;; This function calls:
  7991 ;;		_getNV
  7992 ;;		_readInput
  7993 ;;		_readNVM
  7994 ;; This function is called by:
  7995 ;;		_setup
  7996 ;; This function uses a non-reentrant model
  7997 ;;
  7998                           
  7999                           	psect	text6
  8000   009D4E                     __ptext6:
  8001                           	callstack 0
  8002   009D4E                     _initInputScan:
  8003                           	callstack 15
  8004                           
  8005                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;incstack = 0
  8009   009D4E  0E00               	movlw	0
  8010   009D50  0100               	movlb	0	; () banked
  8011   009D52  6FCE               	movwf	_io@inputs$F849& (0+255),b
  8012   009D54                     l23163:
  8013                           
  8014                           ; BSR set to: 0
  8015   009D54  0E0F               	movlw	15
  8016   009D56  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
  8017   009D58  D001               	goto	l23167
  8018   009D5A  0012               	return	
  8019   009D5C                     l23167:
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  8023   009D5C  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8024   009D5E  ECAB  F040         	call	_readInput
  8025   009D62  0100               	movlb	0	; () banked
  8026   009D64  6F99               	movwf	initInputScan@input& (0+255),b
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;../inputs.c: 79:         inputState[io] = input;
  8030   009D66  0E94               	movlw	low _inputState
  8031   009D68  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8032   009D6A  6ED9               	movwf	fsr2l,c
  8033   009D6C  6ADA               	clrf	fsr2h,c
  8034   009D6E  0E02               	movlw	high _inputState
  8035   009D70  22DA               	addwfc	fsr2h,f,c
  8036   009D72  C099  FFDF         	movff	initInputScan@input,indf2
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  8040   009D76  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8041   009D78  0D07               	mullw	7
  8042   009D7A  50F3               	movf	243,w,c
  8043   009D7C  0F11               	addlw	17
  8044   009D7E  ECB0  F05F         	call	_getNV
  8045   009D82  0100               	movlb	0	; () banked
  8046   009D84  B18D               	btfsc	?_getNV& (0+255),0,b
  8047   009D86  D007               	goto	l23175
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;../inputs.c: 81:             input = !input;
  8051   009D88  5199               	movf	initInputScan@input& (0+255),w,b
  8052   009D8A  A4D8               	btfss	status,2,c
  8053   009D8C  D002               	goto	u24300
  8054   009D8E  0E01               	movlw	1
  8055   009D90  D001               	goto	u24310
  8056   009D92                     u24300:
  8057   009D92  0E00               	movlw	0
  8058   009D94                     u24310:
  8059   009D94  6F99               	movwf	initInputScan@input& (0+255),b
  8060   009D96                     l23175:
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;../inputs.c: 83:         outputState[io] = input;
  8064   009D96  0EB4               	movlw	low _outputState
  8065   009D98  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8066   009D9A  6ED9               	movwf	fsr2l,c
  8067   009D9C  6ADA               	clrf	fsr2h,c
  8068   009D9E  0E02               	movlw	high _outputState
  8069   009DA0  22DA               	addwfc	fsr2h,f,c
  8070   009DA2  C099  FFDF         	movff	initInputScan@input,indf2
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  8074   009DA6  51CE               	movf	_io@inputs$F849& (0+255),w,b
  8075   009DA8  0D07               	mullw	7
  8076   009DAA  50F3               	movf	243,w,c
  8077   009DAC  0F11               	addlw	17
  8078   009DAE  ECB0  F05F         	call	_getNV
  8079   009DB2  0100               	movlb	0	; () banked
  8080   009DB4  A98D               	btfss	?_getNV& (0+255),4,b
  8081   009DB6  D017               	goto	l23181
  8082                           
  8083                           ; BSR set to: 0
  8084                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  8085   009DB8  0EDE               	movlw	222
  8086   009DBA  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8087   009DBC  6F97               	movwf	??_initInputScan& (0+255),b
  8088   009DBE  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8089   009DC0  0E03               	movlw	3
  8090   009DC2  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8091   009DC4  C097  F091         	movff	??_initInputScan,readNVM@index
  8092   009DC8  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8093   009DCC  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8094   009DCE  0E00               	movlw	0
  8095   009DD0  EC0F  F05B         	call	_readNVM
  8096   009DD4  0EB4               	movlw	low _outputState
  8097   009DD6  0100               	movlb	0	; () banked
  8098   009DD8  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8099   009DDA  6ED9               	movwf	fsr2l,c
  8100   009DDC  6ADA               	clrf	fsr2h,c
  8101   009DDE  0E02               	movlw	high _outputState
  8102   009DE0  22DA               	addwfc	fsr2h,f,c
  8103   009DE2  C091  FFDF         	movff	?_readNVM,indf2
  8104   009DE6                     l23181:
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;../inputs.c: 87:         delayCount[io] = 0;
  8108   009DE6  0E84               	movlw	low _delayCount
  8109   009DE8  25CE               	addwf	_io@inputs$F849& (0+255),w,b
  8110   009DEA  6ED9               	movwf	fsr2l,c
  8111   009DEC  6ADA               	clrf	fsr2h,c
  8112   009DEE  0E02               	movlw	high _delayCount
  8113   009DF0  22DA               	addwfc	fsr2h,f,c
  8114   009DF2  6ADF               	clrf	indf2,c
  8115                           
  8116                           ; BSR set to: 0
  8117                           ;../inputs.c: 88:     }
  8118   009DF4  2BCE               	incf	_io@inputs$F849& (0+255),f,b
  8119   009DF6  D7AE               	goto	l23163
  8120   009DF8                     __end_of_initInputScan:
  8121                           	callstack 0
  8122                           
  8123 ;; *************** function _powerUp *****************
  8124 ;; Defined at:
  8125 ;;		line 876 in file "../../VLCBlib_PIC/vlcb.c"
  8126 ;; Parameters:    Size  Location     Type
  8127 ;;		None
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  i               1   13[BANK1 ] unsigned char 
  8130 ;;  divider         1    0        unsigned char 
  8131 ;; Return value:  Size  Location     Type
  8132 ;;                  1    wreg      void 
  8133 ;; Registers used:
  8134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8135 ;; Tracked objects:
  8136 ;;		On entry : 0/0
  8137 ;;		On exit  : 0/0
  8138 ;;		Unchanged: 0/0
  8139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8141 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8142 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8143 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8144 ;;Total ram usage:        5 bytes
  8145 ;; Hardware stack levels used: 1
  8146 ;; Hardware stack levels required when called: 18
  8147 ;; This function calls:
  8148 ;;		NULL
  8149 ;;		_ackPowerUp
  8150 ;;		_bootPowerUp
  8151 ;;		_canPowerUp
  8152 ;;		_consumer2QPowerUp
  8153 ;;		_initTicker
  8154 ;;		_initTimedResponse
  8155 ;;		_leds_powerUp
  8156 ;;		_mnsPowerUp
  8157 ;;		_nvPowerUp
  8158 ;;		_producerPowerUp
  8159 ;;		_teachPowerUp
  8160 ;; This function is called by:
  8161 ;;		_main
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           	psect	text7
  8166   008AE6                     __ptext7:
  8167                           	callstack 0
  8168   008AE6                     _powerUp:
  8169                           	callstack 12
  8170                           
  8171                           ;../../VLCBlib_PIC/vlcb.c: 877:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 878:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 881:     initTicker(0);
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;incstack = 0
  8175   008AE6  0E00               	movlw	0
  8176   008AE8  ECED  F05E         	call	_initTicker
  8177                           
  8178                           ;../../VLCBlib_PIC/vlcb.c: 882:     initTimedResponse();
  8179   008AEC  EC62  F064         	call	_initTimedResponse	;wreg free
  8180                           
  8181                           ;../../VLCBlib_PIC/vlcb.c: 883:     leds_powerUp();
  8182   008AF0  ECAD  F060         	call	_leds_powerUp	;wreg free
  8183                           
  8184                           ;../../VLCBlib_PIC/vlcb.c: 884:     timedResponseDelay = 5;
  8185   008AF4  0E05               	movlw	5
  8186   008AF6  0101               	movlb	1	; () banked
  8187   008AF8  6F64               	movwf	_timedResponseDelay& (0+255),b
  8188                           
  8189                           ; BSR set to: 1
  8190                           ;../../VLCBlib_PIC/vlcb.c: 886:     for (i=0; i<9; i++) {
  8191   008AFA  0E00               	movlw	0
  8192   008AFC  6FCB               	movwf	powerUp@i& (0+255),b
  8193   008AFE                     l25259:
  8194                           
  8195                           ; BSR set to: 1
  8196                           ;../../VLCBlib_PIC/vlcb.c: 887:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8197   008AFE  51CB               	movf	powerUp@i& (0+255),w,b
  8198   008B00  0D02               	mullw	2
  8199   008B02  0E69               	movlw	low _services
  8200   008B04  24F3               	addwf	243,w,c
  8201   008B06  6EF6               	movwf	tblptrl,c
  8202   008B08  0EEE               	movlw	high _services
  8203   008B0A  20F4               	addwfc	244,w,c
  8204   008B0C  6EF7               	movwf	tblptrh,c
  8205   008B0E                     	if	1	;There are 3 active tblptr bytes
  8206   008B0E  6AF8               	clrf	tblptru,c
  8207   008B10  0E00               	movlw	low (__mediumconst shr (0+16))
  8208   008B12  22F8               	addwfc	tblptru,f,c
  8209   008B14                     	endif
  8210   008B14  0009               	tblrd		*+
  8211   008B16  50F5               	movf	tablat,w,c
  8212   008B18  0009               	tblrd		*+
  8213   008B1A  10F5               	iorwf	tablat,w,c
  8214   008B1C  B4D8               	btfsc	status,2,c
  8215   008B1E  D04B               	goto	u27069
  8216                           
  8217                           ; BSR set to: 1
  8218   008B20  51CB               	movf	powerUp@i& (0+255),w,b
  8219   008B22  0D02               	mullw	2
  8220   008B24  0E69               	movlw	low _services
  8221   008B26  24F3               	addwf	243,w,c
  8222   008B28  6EF6               	movwf	tblptrl,c
  8223   008B2A  0EEE               	movlw	high _services
  8224   008B2C  20F4               	addwfc	244,w,c
  8225   008B2E  6EF7               	movwf	tblptrh,c
  8226   008B30                     	if	1	;There are 3 active tblptr bytes
  8227   008B30  6AF8               	clrf	tblptru,c
  8228   008B32  0E00               	movlw	low (__mediumconst shr (0+16))
  8229   008B34  22F8               	addwfc	tblptru,f,c
  8230   008B36                     	endif
  8231   008B36  0009               	tblrd		*+
  8232   008B38  CFF5 F1C7          	movff	tablat,??_powerUp
  8233   008B3C  0009               	tblrd		*+
  8234   008B3E  CFF5 F1C8          	movff	tablat,??_powerUp+1
  8235   008B42  0E04               	movlw	4
  8236   008B44  27C7               	addwf	??_powerUp& (0+255),f,b
  8237   008B46  0E00               	movlw	0
  8238   008B48  23C8               	addwfc	(??_powerUp+1)& (0+255),f,b
  8239   008B4A  C1C7  FFF6         	movff	??_powerUp,tblptrl
  8240   008B4E  C1C8  FFF7         	movff	??_powerUp+1,tblptrh
  8241   008B52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8242   008B52  6AF8               	clrf	tblptru,c
  8243   008B54                     	endif
  8244   008B54                     	if	0	;tblptru may be non-zero
  8245   008B54                     	endif
  8246   008B54  0009               	tblrd		*+
  8247   008B56  50F5               	movf	tablat,w,c
  8248   008B58  0009               	tblrd		*+
  8249   008B5A  10F5               	iorwf	tablat,w,c
  8250   008B5C  B4D8               	btfsc	status,2,c
  8251   008B5E  D02B               	goto	u27069
  8252                           
  8253                           ; BSR set to: 1
  8254                           ;../../VLCBlib_PIC/vlcb.c: 888:             services[i]->powerUp();
  8255   008B60  51CB               	movf	powerUp@i& (0+255),w,b
  8256   008B62  0D02               	mullw	2
  8257   008B64  0E69               	movlw	low _services
  8258   008B66  24F3               	addwf	243,w,c
  8259   008B68  6EF6               	movwf	tblptrl,c
  8260   008B6A  0EEE               	movlw	high _services
  8261   008B6C  20F4               	addwfc	244,w,c
  8262   008B6E  6EF7               	movwf	tblptrh,c
  8263   008B70                     	if	1	;There are 3 active tblptr bytes
  8264   008B70  6AF8               	clrf	tblptru,c
  8265   008B72  0E00               	movlw	low (__mediumconst shr (0+16))
  8266   008B74  22F8               	addwfc	tblptru,f,c
  8267   008B76                     	endif
  8268   008B76  0009               	tblrd		*+
  8269   008B78  CFF5 F1C7          	movff	tablat,??_powerUp
  8270   008B7C  0009               	tblrd		*+
  8271   008B7E  CFF5 F1C8          	movff	tablat,??_powerUp+1
  8272   008B82  0E04               	movlw	4
  8273   008B84  27C7               	addwf	??_powerUp& (0+255),f,b
  8274   008B86  0E00               	movlw	0
  8275   008B88  23C8               	addwfc	(??_powerUp+1)& (0+255),f,b
  8276   008B8A  C1C7  FFF6         	movff	??_powerUp,tblptrl
  8277   008B8E  C1C8  FFF7         	movff	??_powerUp+1,tblptrh
  8278   008B92                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8279   008B92  6AF8               	clrf	tblptru,c
  8280   008B94                     	endif
  8281   008B94                     	if	0	;tblptru may be non-zero
  8282   008B94                     	endif
  8283   008B94  0009               	tblrd		*+
  8284   008B96  CFF5 F1C9          	movff	tablat,??_powerUp+2
  8285   008B9A  0009               	tblrd		*+
  8286   008B9C  CFF5 F1CA          	movff	tablat,??_powerUp+3
  8287   008BA0  D801               	call	u27068
  8288   008BA2  D009               	goto	u27069
  8289   008BA4                     u27068:
  8290   008BA4  0005               	push	
  8291   008BA6  6EFA               	movwf	pclath,c
  8292   008BA8  51C9               	movf	(??_powerUp+2)& (0+255),w,b
  8293   008BAA  6EFD               	movwf	tosl,c
  8294   008BAC  51CA               	movf	(??_powerUp+3)& (0+255),w,b
  8295   008BAE  6EFE               	movwf	tosh,c
  8296   008BB0  6AFF               	clrf	tosu,c
  8297   008BB2  50FA               	movf	pclath,w,c
  8298   008BB4  0012               	return		;indir
  8299   008BB6                     u27069:
  8300                           
  8301                           ;../../VLCBlib_PIC/vlcb.c: 890:     }
  8302   008BB6  0101               	movlb	1	; () banked
  8303   008BB8  2BCB               	incf	powerUp@i& (0+255),f,b
  8304                           
  8305                           ; BSR set to: 1
  8306   008BBA  0E08               	movlw	8
  8307   008BBC  65CB               	cpfsgt	powerUp@i& (0+255),b
  8308   008BBE  D79F               	goto	l25259
  8309   008BC0  0012               	return	
  8310   008BC2                     __end_of_powerUp:
  8311                           	callstack 0
  8312                           
  8313 ;; *************** function _producerPowerUp *****************
  8314 ;; Defined at:
  8315 ;;		line 108 in file "../../VLCBlib_PIC/event_producer_happening.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;		None
  8318 ;; Auto vars:     Size  Location     Type
  8319 ;;  i               1   45[BANK0 ] unsigned char 
  8320 ;; Return value:  Size  Location     Type
  8321 ;;                  1    wreg      void 
  8322 ;; Registers used:
  8323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8324 ;; Tracked objects:
  8325 ;;		On entry : 0/0
  8326 ;;		On exit  : 0/0
  8327 ;;		Unchanged: 0/0
  8328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8332 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8333 ;;Total ram usage:        1 bytes
  8334 ;; Hardware stack levels used: 1
  8335 ;; Hardware stack levels required when called: 12
  8336 ;; This function calls:
  8337 ;;		Nothing
  8338 ;; This function is called by:
  8339 ;;		_powerUp
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text8
  8344   00C2AA                     __ptext8:
  8345                           	callstack 0
  8346   00C2AA                     _producerPowerUp:
  8347                           	callstack 17
  8348                           
  8349                           ;../../VLCBlib_PIC/event_producer_happening.c: 109:     uint8_t i;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 110:     for (i=1; i <= 1; i++) {
  8350                           
  8351                           ; BSR set to: 1
  8352                           ;incstack = 0
  8353   00C2AA  0E01               	movlw	1
  8354   00C2AC  0100               	movlb	0	; () banked
  8355   00C2AE  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8356   00C2B0                     l25091:
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;../../VLCBlib_PIC/event_producer_happening.c: 111:         producerDiagnostics[i].asUin
      +                          t = 0;
  8360   00C2B0  518D               	movf	producerPowerUp@i& (0+255),w,b
  8361   00C2B2  0D02               	mullw	2
  8362   00C2B4  0EAE               	movlw	low _producerDiagnostics
  8363   00C2B6  24F3               	addwf	243,w,c
  8364   00C2B8  6ED9               	movwf	fsr2l,c
  8365   00C2BA  0E01               	movlw	high _producerDiagnostics
  8366   00C2BC  20F4               	addwfc	prodh,w,c
  8367   00C2BE  6EDA               	movwf	fsr2h,c
  8368   00C2C0  6ADE               	clrf	postinc2,c
  8369   00C2C2  6ADD               	clrf	postdec2,c
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;../../VLCBlib_PIC/event_producer_happening.c: 112:     }
  8373   00C2C4  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  8374                           
  8375                           ; BSR set to: 0
  8376   00C2C6  0E01               	movlw	1
  8377   00C2C8  658D               	cpfsgt	producerPowerUp@i& (0+255),b
  8378   00C2CA  D7F2               	goto	l25091
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;../../VLCBlib_PIC/event_producer_happening.c: 113:     producerDiagnostics[0].asUint = 
      +                          1;
  8382   00C2CC  0E00               	movlw	0
  8383   00C2CE  0101               	movlb	1	; () banked
  8384   00C2D0  6FAF               	movwf	(_producerDiagnostics+1)& (0+255),b
  8385   00C2D2  0E01               	movlw	1
  8386   00C2D4  6FAE               	movwf	_producerDiagnostics& (0+255),b
  8387                           
  8388                           ; BSR set to: 1
  8389   00C2D6  0012               	return		;funcret
  8390   00C2D8                     __end_of_producerPowerUp:
  8391                           	callstack 0
  8392                           
  8393 ;; *************** function _canPowerUp *****************
  8394 ;; Defined at:
  8395 ;;		line 217 in file "../../VLCBlib_PIC/can18_ecan.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;		None
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  temp            2   56[BANK0 ] int 
  8400 ;; Return value:  Size  Location     Type
  8401 ;;                  1    wreg      void 
  8402 ;; Registers used:
  8403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8404 ;; Tracked objects:
  8405 ;;		On entry : 0/0
  8406 ;;		On exit  : 0/0
  8407 ;;		Unchanged: 0/0
  8408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8412 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8413 ;;Total ram usage:        3 bytes
  8414 ;; Hardware stack levels used: 1
  8415 ;; Hardware stack levels required when called: 14
  8416 ;; This function calls:
  8417 ;;		_readNVM
  8418 ;;		_tickGet
  8419 ;; This function is called by:
  8420 ;;		_powerUp
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text9
  8425   0070F2                     __ptext9:
  8426                           	callstack 0
  8427   0070F2                     _canPowerUp:
  8428                           	callstack 15
  8429                           
  8430                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 221:
      +                               rxQueue.readIndex = 0;
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;incstack = 0
  8434   0070F2  0E00               	movlw	0
  8435   0070F4  6E28               	movwf	(_rxQueue+2)^0,c
  8436                           
  8437                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     rxQueue.writeIndex = 0;
  8438   0070F6  0E00               	movlw	0
  8439   0070F8  6E29               	movwf	(_rxQueue+3)^0,c
  8440                           
  8441                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     rxQueue.messages = rxBuffers;
  8442   0070FA  0EC8               	movlw	low _rxBuffers
  8443   0070FC  6E26               	movwf	_rxQueue^0,c
  8444   0070FE  0E07               	movlw	high _rxBuffers
  8445   007100  6E27               	movwf	(_rxQueue+1)^0,c
  8446                           
  8447                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     rxQueue.size = 32;
  8448   007102  0E20               	movlw	32
  8449   007104  6E2A               	movwf	(_rxQueue+4)^0,c
  8450                           
  8451                           ;../../VLCBlib_PIC/can18_ecan.c: 226:     txQueue.readIndex = 0;
  8452   007106  0E00               	movlw	0
  8453   007108  0101               	movlb	1	; () banked
  8454   00710A  6FAB               	movwf	(_txQueue+2)& (0+255),b
  8455                           
  8456                           ; BSR set to: 1
  8457                           ;../../VLCBlib_PIC/can18_ecan.c: 227:     txQueue.writeIndex = 0;
  8458   00710C  0E00               	movlw	0
  8459   00710E  6FAC               	movwf	(_txQueue+3)& (0+255),b
  8460                           
  8461                           ;../../VLCBlib_PIC/can18_ecan.c: 228:     txQueue.messages = txBuffers;
  8462   007110  0E00               	movlw	low _txBuffers
  8463   007112  6FA9               	movwf	_txQueue& (0+255),b
  8464   007114  0E05               	movlw	high _txBuffers
  8465   007116  6FAA               	movwf	(_txQueue+1)& (0+255),b
  8466                           
  8467                           ; BSR set to: 1
  8468                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     txQueue.size = 8;
  8469   007118  0E08               	movlw	8
  8470   00711A  6FAD               	movwf	(_txQueue+4)& (0+255),b
  8471                           
  8472                           ; BSR set to: 1
  8473                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8474   00711C  0EFE               	movlw	254
  8475   00711E  0100               	movlb	0	; () banked
  8476   007120  6F91               	movwf	readNVM@index& (0+255),b
  8477   007122  0E03               	movlw	3
  8478   007124  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8479   007126  0E00               	movlw	0
  8480   007128  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8481   00712A  0E00               	movlw	0
  8482   00712C  EC0F  F05B         	call	_readNVM
  8483   007130  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8484   007134  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8485                           
  8486                           ;../../VLCBlib_PIC/can18_ecan.c: 234:     if (temp < 0) {
  8487   007138  0100               	movlb	0	; () banked
  8488   00713A  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8489   00713C  D003               	goto	l2465
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;../../VLCBlib_PIC/can18_ecan.c: 236:         canId = 0;
  8493   00713E  0E00               	movlw	0
  8494   007140  6FB9               	movwf	_canId& (0+255),b
  8495                           
  8496                           ;../../VLCBlib_PIC/can18_ecan.c: 237:     } else {
  8497   007142  D002               	goto	l24579
  8498   007144                     l2465:
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;../../VLCBlib_PIC/can18_ecan.c: 238:         canId = (uint8_t)temp;
  8502   007144  C098  F0B9         	movff	canPowerUp@temp,_canId
  8503   007148                     l24579:
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;../../VLCBlib_PIC/can18_ecan.c: 242:     for (temp=1; temp <= 18; temp++) {
  8507   007148  0E00               	movlw	0
  8508   00714A  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8509   00714C  0E01               	movlw	1
  8510   00714E  6F98               	movwf	canPowerUp@temp& (0+255),b
  8511   007150                     l24585:
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;../../VLCBlib_PIC/can18_ecan.c: 243:         canDiagnostics[temp].asUint = 0;
  8515   007150  90D8               	bcf	status,0,c
  8516   007152  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8517   007154  6ED9               	movwf	fsr2l,c
  8518   007156  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8519   007158  6EDA               	movwf	fsr2h,c
  8520   00715A  0E66               	movlw	low _canDiagnostics
  8521   00715C  26D9               	addwf	fsr2l,f,c
  8522   00715E  0E01               	movlw	high _canDiagnostics
  8523   007160  22DA               	addwfc	fsr2h,f,c
  8524   007162  6ADE               	clrf	postinc2,c
  8525   007164  6ADD               	clrf	postdec2,c
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     }
  8529   007166  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8530   007168  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8531                           
  8532                           ; BSR set to: 0
  8533   00716A  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8534   00716C  D7F1               	goto	l24585
  8535   00716E  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8536   007170  E104               	bnz	u26270
  8537   007172  0E13               	movlw	19
  8538   007174  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8539   007176  A0D8               	btfss	status,0,c
  8540   007178  D7EB               	goto	l24585
  8541   00717A                     u26270:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;../../VLCBlib_PIC/can18_ecan.c: 245:     canDiagnostics[0x00].asUint = 18;
  8545   00717A  0E00               	movlw	0
  8546   00717C  0101               	movlb	1	; () banked
  8547   00717E  6F67               	movwf	(_canDiagnostics+1)& (0+255),b
  8548   007180  0E12               	movlw	18
  8549   007182  6F66               	movwf	_canDiagnostics& (0+255),b
  8550                           
  8551                           ;../../VLCBlib_PIC/can18_ecan.c: 248:     canTransmitFailed=0;
  8552   007184  0E00               	movlw	0
  8553   007186  0100               	movlb	0	; () banked
  8554   007188  6FB8               	movwf	_canTransmitFailed& (0+255),b
  8555                           
  8556                           ;../../VLCBlib_PIC/can18_ecan.c: 249:     IPR5 = 0;
  8557   00718A  0E00               	movlw	0
  8558   00718C  6E78               	movwf	120,c	;volatile
  8559                           
  8560                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     CANCON = 0b10000000;
  8561   00718E  0E80               	movlw	128
  8562   007190  6E6F               	movwf	111,c	;volatile
  8563   007192                     l2469:
  8564   007192  AE6E               	btfss	110,7,c	;volatile
  8565   007194  D7FE               	goto	l2469
  8566                           
  8567                           ;../../VLCBlib_PIC/can18_ecan.c: 256:     ECANCON = 0b10110000;
  8568   007196  0EB0               	movlw	176
  8569   007198  6E72               	movwf	114,c	;volatile
  8570                           
  8571                           ;../../VLCBlib_PIC/can18_ecan.c: 257:     BSEL0 = 0;
  8572   00719A  0E00               	movlw	0
  8573   00719C  010E               	movlb	14	; () banked
  8574   00719E  6F7D               	movwf	125,b	;volatile
  8575                           
  8576                           ;../../VLCBlib_PIC/can18_ecan.c: 281:       BRGCON1 = 0b00001111;
  8577   0071A0  0E0F               	movlw	15
  8578   0071A2  6F43               	movwf	67,b	;volatile
  8579                           
  8580                           ;../../VLCBlib_PIC/can18_ecan.c: 284:     BRGCON2 = 0b10011110;
  8581   0071A4  0E9E               	movlw	158
  8582   0071A6  6F44               	movwf	68,b	;volatile
  8583                           
  8584                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     BRGCON3 = 0b00000011;
  8585   0071A8  0E03               	movlw	3
  8586   0071AA  6F45               	movwf	69,b	;volatile
  8587                           
  8588                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     CIOCON = 0b00100000;
  8589   0071AC  0E20               	movlw	32
  8590   0071AE  6E70               	movwf	112,c	;volatile
  8591                           
  8592                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXM0SIDH = 0;
  8593   0071B0  0E00               	movlw	0
  8594   0071B2  6FF8               	movwf	248,b	;volatile
  8595                           
  8596                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXM0SIDL = 0x08;
  8597   0071B4  0E08               	movlw	8
  8598   0071B6  6FF9               	movwf	249,b	;volatile
  8599                           
  8600                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXM0EIDH = 0;
  8601   0071B8  0E00               	movlw	0
  8602   0071BA  6FFA               	movwf	250,b	;volatile
  8603                           
  8604                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXM0EIDL = 0;
  8605   0071BC  0E00               	movlw	0
  8606   0071BE  6FFB               	movwf	251,b	;volatile
  8607                           
  8608                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXF0SIDL = 0x00;
  8609   0071C0  0E00               	movlw	0
  8610   0071C2  6FE1               	movwf	225,b	;volatile
  8611                           
  8612                           ;../../VLCBlib_PIC/can18_ecan.c: 297:     RXFBCON0 = 0;
  8613   0071C4  0E00               	movlw	0
  8614   0071C6  6F71               	movwf	113,b	;volatile
  8615                           
  8616                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL0 = 0;
  8617   0071C8  0E00               	movlw	0
  8618   0071CA  6F79               	movwf	121,b	;volatile
  8619                           
  8620                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     RXFCON0 = 1;
  8621   0071CC  0E01               	movlw	1
  8622   0071CE  6F46               	movwf	70,b	;volatile
  8623                           
  8624                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB0CON = 0x00;
  8625   0071D0  0E00               	movlw	0
  8626   0071D2  6E60               	movwf	96,c	;volatile
  8627                           
  8628                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     RXB1CON = 0x00;
  8629   0071D4  0E00               	movlw	0
  8630   0071D6  010F               	movlb	15	; () banked
  8631   0071D8  6F30               	movwf	48,b	;volatile
  8632                           
  8633                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B0CON = 0;
  8634   0071DA  0E00               	movlw	0
  8635   0071DC  010E               	movlb	14	; () banked
  8636   0071DE  6F80               	movwf	128,b	;volatile
  8637                           
  8638                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B1CON = 0;
  8639   0071E0  0E00               	movlw	0
  8640   0071E2  6F90               	movwf	144,b	;volatile
  8641                           
  8642                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B2CON = 0;
  8643   0071E4  0E00               	movlw	0
  8644   0071E6  6FA0               	movwf	160,b	;volatile
  8645                           
  8646                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B3CON = 0;
  8647   0071E8  0E00               	movlw	0
  8648   0071EA  6FB0               	movwf	176,b	;volatile
  8649                           
  8650                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B4CON = 0;
  8651   0071EC  0E00               	movlw	0
  8652   0071EE  6FC0               	movwf	192,b	;volatile
  8653                           
  8654                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     B5CON = 0;
  8655   0071F0  0E00               	movlw	0
  8656   0071F2  6FD0               	movwf	208,b	;volatile
  8657                           
  8658                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     BIE0 = 0;
  8659   0071F4  0E00               	movlw	0
  8660   0071F6  6F7E               	movwf	126,b	;volatile
  8661                           
  8662                           ; BSR set to: 14
  8663                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB0IE = 1;
  8664   0071F8  857F               	bsf	127,2,b	;volatile
  8665                           
  8666                           ; BSR set to: 14
  8667                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB1IE = 0;
  8668   0071FA  977F               	bcf	127,3,b	;volatile
  8669                           
  8670                           ; BSR set to: 14
  8671                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     TXBIEbits.TXB2IE = 0;
  8672   0071FC  997F               	bcf	127,4,b	;volatile
  8673                           
  8674                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     CANCON = 0;
  8675   0071FE  0E00               	movlw	0
  8676   007200  6E6F               	movwf	111,c	;volatile
  8677   007202                     l2472:
  8678   007202  BE6E               	btfsc	110,7,c	;volatile
  8679   007204  D7FE               	goto	l2472
  8680                           
  8681                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0CON = 0;
  8682   007206  0E00               	movlw	0
  8683   007208  010F               	movlb	15	; () banked
  8684   00720A  6F20               	movwf	32,b	;volatile
  8685                           
  8686                           ; BSR set to: 15
  8687                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0CONbits.TXPRI0 = 0;
  8688   00720C  9120               	bcf	32,0,b	;volatile
  8689                           
  8690                           ; BSR set to: 15
  8691                           ;../../VLCBlib_PIC/can18_ecan.c: 329:     TXB0CONbits.TXPRI1 = 0;
  8692   00720E  9320               	bcf	32,1,b	;volatile
  8693                           
  8694                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0DLC = 0;
  8695   007210  0E00               	movlw	0
  8696   007212  6F25               	movwf	37,b	;volatile
  8697                           
  8698                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB0SIDH = 0;
  8699   007214  0E00               	movlw	0
  8700   007216  6F21               	movwf	33,b	;volatile
  8701                           
  8702                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB0SIDL = 0;
  8703   007218  0E00               	movlw	0
  8704   00721A  6F22               	movwf	34,b	;volatile
  8705                           
  8706                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1CON = 0;
  8707   00721C  0E00               	movlw	0
  8708   00721E  6F10               	movwf	16,b	;volatile
  8709                           
  8710                           ; BSR set to: 15
  8711                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1CONbits.TXPRI0 = 0;
  8712   007220  9110               	bcf	16,0,b	;volatile
  8713                           
  8714                           ; BSR set to: 15
  8715                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1CONbits.TXPRI1 = 1;
  8716   007222  8310               	bsf	16,1,b	;volatile
  8717                           
  8718                           ;../../VLCBlib_PIC/can18_ecan.c: 340:     TXB1DLC = 0x40;
  8719   007224  0E40               	movlw	64
  8720   007226  6F15               	movwf	21,b	;volatile
  8721                           
  8722                           ; BSR set to: 15
  8723                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8724   007228  0E8A               	movlw	low (_canPri+4)
  8725   00722A  6EF6               	movwf	tblptrl,c
  8726   00722C  0EEE               	movlw	high (_canPri+4)
  8727   00722E  6EF7               	movwf	tblptrh,c
  8728   007230                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8729   007230  6AF8               	clrf	tblptru,c
  8730   007232                     	endif
  8731   007232                     	if	0	;tblptru may be non-zero
  8732   007232                     	endif
  8733   007232  0008               	tblrd		*
  8734   007234  CFF5 F097          	movff	tablat,??_canPowerUp
  8735   007238  0100               	movlb	0	; () banked
  8736   00723A  39B9               	swapf	_canId& (0+255),w,b
  8737   00723C  46E8               	rlncf	wreg,f,c
  8738   00723E  0B1F               	andlw	31
  8739   007240  0B0F               	andlw	15
  8740   007242  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8741   007244  010F               	movlb	15	; () banked
  8742   007246  6F11               	movwf	17,b	;volatile
  8743                           
  8744                           ; BSR set to: 15
  8745                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB1SIDL = TXB0SIDL;
  8746   007248  CF22 FF12          	movff	3874,3858	;volatile
  8747                           
  8748                           ; BSR set to: 15
  8749                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2CON = 0;
  8750   00724C  0E00               	movlw	0
  8751   00724E  6F00               	movwf	0,b	;volatile
  8752                           
  8753                           ; BSR set to: 15
  8754                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2CONbits.TXPRI0 = 1;
  8755   007250  8100               	bsf	0,0,b	;volatile
  8756                           
  8757                           ; BSR set to: 15
  8758                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2CONbits.TXPRI1 = 1;
  8759   007252  8300               	bsf	0,1,b	;volatile
  8760                           
  8761                           ; BSR set to: 15
  8762                           ;../../VLCBlib_PIC/can18_ecan.c: 349:     TXB2DLC = 0;
  8763   007254  0E00               	movlw	0
  8764   007256  6F05               	movwf	5,b	;volatile
  8765                           
  8766                           ; BSR set to: 15
  8767                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8768   007258  0E8A               	movlw	low (_canPri+4)
  8769   00725A  6EF6               	movwf	tblptrl,c
  8770   00725C  0EEE               	movlw	high (_canPri+4)
  8771   00725E  6EF7               	movwf	tblptrh,c
  8772   007260                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8773   007260  6AF8               	clrf	tblptru,c
  8774   007262                     	endif
  8775   007262                     	if	0	;tblptru may be non-zero
  8776   007262                     	endif
  8777   007262  0008               	tblrd		*
  8778   007264  CFF5 F097          	movff	tablat,??_canPowerUp
  8779   007268  0100               	movlb	0	; () banked
  8780   00726A  39B9               	swapf	_canId& (0+255),w,b
  8781   00726C  46E8               	rlncf	wreg,f,c
  8782   00726E  0B1F               	andlw	31
  8783   007270  0B0F               	andlw	15
  8784   007272  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8785   007274  010F               	movlb	15	; () banked
  8786   007276  6F01               	movwf	1,b	;volatile
  8787                           
  8788                           ; BSR set to: 15
  8789                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     TXB2SIDL = TXB0SIDL;
  8790   007278  CF22 FF02          	movff	3874,3842	;volatile
  8791                           
  8792                           ;../../VLCBlib_PIC/can18_ecan.c: 355:     enumerationState = NO_ENUMERATION;
  8793   00727C  0E00               	movlw	0
  8794   00727E  0100               	movlb	0	; () banked
  8795   007280  6FB7               	movwf	_enumerationState& (0+255),b
  8796                           
  8797                           ; BSR set to: 0
  8798                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     enumerationStartTime.val = tickGet();
  8799   007282  EC23  F05C         	call	_tickGet	;wreg free
  8800   007286  C08D  F011         	movff	?_tickGet,_enumerationStartTime
  8801   00728A  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
  8802   00728E  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
  8803   007292  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
  8804                           
  8805                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8806   007296  C011  F015         	movff	_enumerationStartTime,_canTransmitTimeout
  8807   00729A  C012  F016         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8808   00729E  C013  F017         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8809   0072A2  C014  F018         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8810                           
  8811                           ;../../VLCBlib_PIC/can18_ecan.c: 361:     PIE5bits.FIFOWMIE = 1;
  8812   0072A6  8076               	bsf	118,0,c	;volatile
  8813                           
  8814                           ;../../VLCBlib_PIC/can18_ecan.c: 362:     PIE5bits.TXBnIE = 1;
  8815   0072A8  8876               	bsf	118,4,c	;volatile
  8816                           
  8817                           ;../../VLCBlib_PIC/can18_ecan.c: 363:     PIE5bits.ERRIE = 1;
  8818   0072AA  8A76               	bsf	118,5,c	;volatile
  8819   0072AC  0012               	return		;funcret
  8820   0072AE                     __end_of_canPowerUp:
  8821                           	callstack 0
  8822                           
  8823 ;; *************** function _nvPowerUp *****************
  8824 ;; Defined at:
  8825 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;  i               1   60[BANK0 ] unsigned char 
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8843 ;;Total ram usage:        1 bytes
  8844 ;; Hardware stack levels used: 1
  8845 ;; Hardware stack levels required when called: 15
  8846 ;; This function calls:
  8847 ;;		_loadNvCache
  8848 ;; This function is called by:
  8849 ;;		_powerUp
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           
  8853                           	psect	text10
  8854   00C0F6                     __ptext10:
  8855                           	callstack 0
  8856   00C0F6                     _nvPowerUp:
  8857                           	callstack 14
  8858                           
  8859                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
  8860                           
  8861                           ;incstack = 0
  8862   00C0F6  0E01               	movlw	1
  8863   00C0F8  0100               	movlb	0	; () banked
  8864   00C0FA  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8865   00C0FC                     l24329:
  8866                           
  8867                           ; BSR set to: 0
  8868                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8869   00C0FC  519C               	movf	nvPowerUp@i& (0+255),w,b
  8870   00C0FE  0D02               	mullw	2
  8871   00C100  0EA3               	movlw	low _nvDiagnostics
  8872   00C102  24F3               	addwf	243,w,c
  8873   00C104  6ED9               	movwf	fsr2l,c
  8874   00C106  0E01               	movlw	high _nvDiagnostics
  8875   00C108  20F4               	addwfc	prodh,w,c
  8876   00C10A  6EDA               	movwf	fsr2h,c
  8877   00C10C  6ADE               	clrf	postinc2,c
  8878   00C10E  6ADD               	clrf	postdec2,c
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8882   00C110  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8883                           
  8884                           ; BSR set to: 0
  8885   00C112  0E02               	movlw	2
  8886   00C114  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8887   00C116  D7F2               	goto	l24329
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
  8891   00C118  0E00               	movlw	0
  8892   00C11A  0101               	movlb	1	; () banked
  8893   00C11C  6FA4               	movwf	(_nvDiagnostics+1)& (0+255),b
  8894   00C11E  0E02               	movlw	2
  8895   00C120  6FA3               	movwf	_nvDiagnostics& (0+255),b
  8896                           
  8897                           ; BSR set to: 1
  8898                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
  8899   00C122  EC5B  F05E         	call	_loadNvCache	;wreg free
  8900   00C126  0012               	return		;funcret
  8901   00C128                     __end_of_nvPowerUp:
  8902                           	callstack 0
  8903                           
  8904 ;; *************** function _mnsPowerUp *****************
  8905 ;; Defined at:
  8906 ;;		line 299 in file "../../VLCBlib_PIC/mns.c"
  8907 ;; Parameters:    Size  Location     Type
  8908 ;;		None
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  temp            2   56[BANK0 ] int 
  8911 ;;  i               1   55[BANK0 ] unsigned char 
  8912 ;; Return value:  Size  Location     Type
  8913 ;;                  1    wreg      void 
  8914 ;; Registers used:
  8915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8916 ;; Tracked objects:
  8917 ;;		On entry : 0/0
  8918 ;;		On exit  : 0/0
  8919 ;;		Unchanged: 0/0
  8920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8922 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8924 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8925 ;;Total ram usage:        3 bytes
  8926 ;; Hardware stack levels used: 1
  8927 ;; Hardware stack levels required when called: 14
  8928 ;; This function calls:
  8929 ;;		_readNVM
  8930 ;;		_setLEDsByMode
  8931 ;;		_tickGet
  8932 ;; This function is called by:
  8933 ;;		_powerUp
  8934 ;; This function uses a non-reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text11
  8938   008038                     __ptext11:
  8939                           	callstack 0
  8940   008038                     _mnsPowerUp:
  8941                           	callstack 15
  8942                           
  8943                           ;../../VLCBlib_PIC/mns.c: 300:     int temp;;../../VLCBlib_PIC/mns.c: 301:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 303:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8944                           
  8945                           ;incstack = 0
  8946   008038  0EFD               	movlw	253
  8947   00803A  0100               	movlb	0	; () banked
  8948   00803C  6F91               	movwf	readNVM@index& (0+255),b
  8949   00803E  0E03               	movlw	3
  8950   008040  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8951   008042  0E00               	movlw	0
  8952   008044  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8953   008046  0E00               	movlw	0
  8954   008048  EC0F  F05B         	call	_readNVM
  8955   00804C  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8956   008050  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8957                           
  8958                           ;../../VLCBlib_PIC/mns.c: 304:     if (temp < 0) {
  8959   008054  0100               	movlb	0	; () banked
  8960   008056  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8961   008058  D005               	goto	l1450
  8962   00805A                     u25360:
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;../../VLCBlib_PIC/mns.c: 305:         nn.bytes.hi = 0;
  8966   00805A  0E00               	movlw	0
  8967   00805C  6FB5               	movwf	(_nn+1)& (0+255),b
  8968                           
  8969                           ;../../VLCBlib_PIC/mns.c: 306:         nn.bytes.lo = 0;
  8970   00805E  0E00               	movlw	0
  8971   008060  6FB4               	movwf	_nn& (0+255),b
  8972                           
  8973                           ;../../VLCBlib_PIC/mns.c: 307:     } else {
  8974   008062  D014               	goto	l23829
  8975   008064                     l1450:
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;../../VLCBlib_PIC/mns.c: 308:         nn.bytes.hi = (uint8_t)temp;
  8979   008064  C098  F0B5         	movff	mnsPowerUp@temp,_nn+1
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;../../VLCBlib_PIC/mns.c: 309:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8983   008068  0EFC               	movlw	252
  8984   00806A  6F91               	movwf	readNVM@index& (0+255),b
  8985   00806C  0E03               	movlw	3
  8986   00806E  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8987   008070  0E00               	movlw	0
  8988   008072  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8989   008074  0E00               	movlw	0
  8990   008076  EC0F  F05B         	call	_readNVM
  8991   00807A  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8992   00807E  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8993                           
  8994                           ;../../VLCBlib_PIC/mns.c: 310:         if (temp < 0) {
  8995   008082  0100               	movlb	0	; () banked
  8996   008084  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8997   008086  D7E9               	goto	u25360
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;../../VLCBlib_PIC/mns.c: 314:             nn.bytes.lo = (uint8_t)temp;
  9001   008088  C098  F0B4         	movff	mnsPowerUp@temp,_nn
  9002   00808C                     l23829:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;../../VLCBlib_PIC/mns.c: 317:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  9006   00808C  0EFB               	movlw	251
  9007   00808E  6F91               	movwf	readNVM@index& (0+255),b
  9008   008090  0E03               	movlw	3
  9009   008092  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9010   008094  0E00               	movlw	0
  9011   008096  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9012   008098  0E00               	movlw	0
  9013   00809A  EC0F  F05B         	call	_readNVM
  9014   00809E  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  9015   0080A2  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  9016                           
  9017                           ;../../VLCBlib_PIC/mns.c: 318:     if (temp < 0) {
  9018   0080A6  0100               	movlb	0	; () banked
  9019   0080A8  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  9020   0080AA  D002               	goto	l1454
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;../../VLCBlib_PIC/mns.c: 319:         mode_state = MODE_UNINITIALISED;
  9024   0080AC  69C4               	setf	_mode_state& (0+255),b
  9025                           
  9026                           ;../../VLCBlib_PIC/mns.c: 320:     } else {
  9027   0080AE  D002               	goto	l1455
  9028   0080B0                     l1454:
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;../../VLCBlib_PIC/mns.c: 321:         mode_state = (uint8_t)temp;
  9032   0080B0  C098  F0C4         	movff	mnsPowerUp@temp,_mode_state
  9033   0080B4                     l1455:
  9034                           
  9035                           ; BSR set to: 0
  9036                           ;../../VLCBlib_PIC/mns.c: 323:     setupModePreviousMode = mode_state;
  9037   0080B4  C0C4  F0C1         	movff	_mode_state,_setupModePreviousMode
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;../../VLCBlib_PIC/mns.c: 324:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
  9041   0080B8  0EF9               	movlw	249
  9042   0080BA  6F91               	movwf	readNVM@index& (0+255),b
  9043   0080BC  0E03               	movlw	3
  9044   0080BE  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9045   0080C0  0E00               	movlw	0
  9046   0080C2  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9047   0080C4  0E00               	movlw	0
  9048   0080C6  EC0F  F05B         	call	_readNVM
  9049   0080CA  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  9050   0080CE  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  9051                           
  9052                           ;../../VLCBlib_PIC/mns.c: 325:     if (temp < 0) {
  9053   0080D2  0100               	movlb	0	; () banked
  9054   0080D4  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  9055   0080D6  D004               	goto	l1456
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;../../VLCBlib_PIC/mns.c: 326:         mode_flags = 4;
  9059   0080D8  0E04               	movlw	4
  9060   0080DA  0101               	movlb	1	; () banked
  9061   0080DC  6F65               	movwf	_mode_flags& (0+255),b
  9062                           
  9063                           ;../../VLCBlib_PIC/mns.c: 327:     } else {
  9064   0080DE  D002               	goto	l23841
  9065   0080E0                     l1456:
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;../../VLCBlib_PIC/mns.c: 328:         mode_flags = (uint8_t)temp;
  9069   0080E0  C098  F165         	movff	mnsPowerUp@temp,_mode_flags
  9070   0080E4                     l23841:
  9071                           
  9072                           ;../../VLCBlib_PIC/mns.c: 331:     setLEDsByMode();
  9073   0080E4  EC94  F060         	call	_setLEDsByMode	;wreg free
  9074                           
  9075                           ;../../VLCBlib_PIC/mns.c: 333:     pbTimer.val = tickGet();
  9076   0080E8  EC23  F05C         	call	_tickGet	;wreg free
  9077   0080EC  C08D  F0AA         	movff	?_tickGet,_pbTimer
  9078   0080F0  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
  9079   0080F4  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
  9080   0080F8  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
  9081                           
  9082                           ;../../VLCBlib_PIC/mns.c: 334:     pbWasPushed = FALSE;
  9083   0080FC  0E00               	movlw	0
  9084   0080FE  0100               	movlb	0	; () banked
  9085   008100  6FC0               	movwf	_pbWasPushed& (0+255),b
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;../../VLCBlib_PIC/mns.c: 338:     for (i=1; i<= 6; i++) {
  9089   008102  0E01               	movlw	1
  9090   008104  6F97               	movwf	mnsPowerUp@i& (0+255),b
  9091   008106                     l23851:
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;../../VLCBlib_PIC/mns.c: 339:         mnsDiagnostics[i].asInt = 0;
  9095   008106  5197               	movf	mnsPowerUp@i& (0+255),w,b
  9096   008108  0D02               	mullw	2
  9097   00810A  0E8C               	movlw	low _mnsDiagnostics
  9098   00810C  24F3               	addwf	243,w,c
  9099   00810E  6ED9               	movwf	fsr2l,c
  9100   008110  0E01               	movlw	high _mnsDiagnostics
  9101   008112  20F4               	addwfc	prodh,w,c
  9102   008114  6EDA               	movwf	fsr2h,c
  9103   008116  6ADE               	clrf	postinc2,c
  9104   008118  6ADD               	clrf	postdec2,c
  9105                           
  9106                           ; BSR set to: 0
  9107                           ;../../VLCBlib_PIC/mns.c: 340:     }
  9108   00811A  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  9109                           
  9110                           ; BSR set to: 0
  9111   00811C  0E06               	movlw	6
  9112   00811E  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  9113   008120  D7F2               	goto	l23851
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;../../VLCBlib_PIC/mns.c: 341:     mnsDiagnostics[0x00].asInt = 6;
  9117   008122  0E00               	movlw	0
  9118   008124  0101               	movlb	1	; () banked
  9119   008126  6F8D               	movwf	(_mnsDiagnostics+1)& (0+255),b
  9120   008128  0E06               	movlw	6
  9121   00812A  6F8C               	movwf	_mnsDiagnostics& (0+255),b
  9122                           
  9123                           ;../../VLCBlib_PIC/mns.c: 343:     heartbeatSequence = 0;
  9124   00812C  0E00               	movlw	0
  9125   00812E  0100               	movlb	0	; () banked
  9126   008130  6FBF               	movwf	_heartbeatSequence& (0+255),b
  9127                           
  9128                           ;../../VLCBlib_PIC/mns.c: 344:     heartbeatTimer.val = 0;
  9129   008132  0E00               	movlw	0
  9130   008134  0101               	movlb	1	; () banked
  9131   008136  6F50               	movwf	_heartbeatTimer& (0+255),b
  9132   008138  0E00               	movlw	0
  9133   00813A  6F51               	movwf	(_heartbeatTimer+1)& (0+255),b
  9134   00813C  0E00               	movlw	0
  9135   00813E  6F52               	movwf	(_heartbeatTimer+2)& (0+255),b
  9136   008140  0E00               	movlw	0
  9137   008142  6F53               	movwf	(_heartbeatTimer+3)& (0+255),b
  9138                           
  9139                           ;../../VLCBlib_PIC/mns.c: 345:     uptimeTimer.val = 0;
  9140   008144  0E00               	movlw	0
  9141   008146  6F4C               	movwf	_uptimeTimer& (0+255),b
  9142   008148  0E00               	movlw	0
  9143   00814A  6F4D               	movwf	(_uptimeTimer+1)& (0+255),b
  9144   00814C  0E00               	movlw	0
  9145   00814E  6F4E               	movwf	(_uptimeTimer+2)& (0+255),b
  9146   008150  0E00               	movlw	0
  9147   008152  6F4F               	movwf	(_uptimeTimer+3)& (0+255),b
  9148                           
  9149                           ; BSR set to: 1
  9150   008154  0012               	return		;funcret
  9151   008156                     __end_of_mnsPowerUp:
  9152                           	callstack 0
  9153                           
  9154 ;; *************** function _ackPowerUp *****************
  9155 ;; Defined at:
  9156 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;		None
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;  i               1   45[BANK0 ] unsigned char 
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;Total ram usage:        1 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 12
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_powerUp
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text12
  9185   00C2D8                     __ptext12:
  9186                           	callstack 0
  9187   00C2D8                     _ackPowerUp:
  9188                           	callstack 17
  9189                           
  9190                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 101:     for (i=1; i<= 1; i++) {
  9191                           
  9192                           ; BSR set to: 1
  9193                           ;incstack = 0
  9194   00C2D8  0E01               	movlw	1
  9195   00C2DA  0100               	movlb	0	; () banked
  9196   00C2DC  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9197   00C2DE                     l23729:
  9198                           
  9199                           ; BSR set to: 0
  9200                           ;../../VLCBlib_PIC/event_acknowledge.c: 102:         ackDiagnostics[i].asUint = 0;
  9201   00C2DE  518D               	movf	ackPowerUp@i& (0+255),w,b
  9202   00C2E0  0D02               	mullw	2
  9203   00C2E2  0EB6               	movlw	low _ackDiagnostics
  9204   00C2E4  24F3               	addwf	243,w,c
  9205   00C2E6  6ED9               	movwf	fsr2l,c
  9206   00C2E8  0E01               	movlw	high _ackDiagnostics
  9207   00C2EA  20F4               	addwfc	prodh,w,c
  9208   00C2EC  6EDA               	movwf	fsr2h,c
  9209   00C2EE  6ADE               	clrf	postinc2,c
  9210   00C2F0  6ADD               	clrf	postdec2,c
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:     }
  9214   00C2F2  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9215                           
  9216                           ; BSR set to: 0
  9217   00C2F4  0E01               	movlw	1
  9218   00C2F6  658D               	cpfsgt	ackPowerUp@i& (0+255),b
  9219   00C2F8  D7F2               	goto	l23729
  9220                           
  9221                           ; BSR set to: 0
  9222                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:     ackDiagnostics[0x00].asUint = 1;
  9223   00C2FA  0E00               	movlw	0
  9224   00C2FC  0101               	movlb	1	; () banked
  9225   00C2FE  6FB7               	movwf	(_ackDiagnostics+1)& (0+255),b
  9226   00C300  0E01               	movlw	1
  9227   00C302  6FB6               	movwf	_ackDiagnostics& (0+255),b
  9228                           
  9229                           ; BSR set to: 1
  9230   00C304  0012               	return		;funcret
  9231   00C306                     __end_of_ackPowerUp:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function _bootPowerUp *****************
  9235 ;; Defined at:
  9236 ;;		line 197 in file "../../VLCBlib_PIC/boot.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;		None
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  a               3   58[BANK0 ] unsigned um
  9241 ;;  i               1   57[BANK0 ] unsigned char 
  9242 ;;  found           1   56[BANK0 ] unsigned char 
  9243 ;;  b               1   55[BANK0 ] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9254 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9256 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9257 ;;Total ram usage:        6 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 14
  9260 ;; This function calls:
  9261 ;;		_readNVM
  9262 ;; This function is called by:
  9263 ;;		_powerUp
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           
  9267                           	psect	text13
  9268   0093F2                     __ptext13:
  9269                           	callstack 0
  9270   0093F2                     _bootPowerUp:
  9271                           	callstack 15
  9272                           
  9273                           ;../../VLCBlib_PIC/boot.c: 198:     uint24_t a;;../../VLCBlib_PIC/boot.c: 199:     uint8
      +                          _t i;;../../VLCBlib_PIC/boot.c: 200:     uint8_t b;;../../VLCBlib_PIC/boot.c: 201:     u
      +                          int8_t found;;../../VLCBlib_PIC/boot.c: 203:     bootloaderType = BL_TYPE_Unknown;
  9274                           
  9275                           ; BSR set to: 1
  9276                           ;incstack = 0
  9277   0093F2  0E00               	movlw	0
  9278   0093F4  0100               	movlb	0	; () banked
  9279   0093F6  6FC8               	movwf	_bootloaderType& (0+255),b
  9280                           
  9281                           ;../../VLCBlib_PIC/boot.c: 204:     bootloaderVersion = 0;
  9282   0093F8  0E00               	movlw	0
  9283   0093FA  6FC7               	movwf	_bootloaderVersion& (0+255),b
  9284                           
  9285                           ;../../VLCBlib_PIC/boot.c: 207:     for (a=0; a<0x7FF; a++) {
  9286   0093FC  0E00               	movlw	0
  9287   0093FE  6F9A               	movwf	bootPowerUp@a& (0+255),b
  9288   009400  0E00               	movlw	0
  9289   009402  6F9B               	movwf	(bootPowerUp@a+1)& (0+255),b
  9290   009404  0E00               	movlw	0
  9291   009406  6F9C               	movwf	(bootPowerUp@a+2)& (0+255),b
  9292   009408                     l23657:
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;../../VLCBlib_PIC/boot.c: 209:         for (i=0; i<11; i++) {
  9296   009408  0E00               	movlw	0
  9297   00940A  6F99               	movwf	bootPowerUp@i& (0+255),b
  9298   00940C                     l23663:
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;../../VLCBlib_PIC/boot.c: 210:             b = (uint8_t)readNVM(FLASH_NVM_TYPE, a+i);
  9302   00940C  5199               	movf	bootPowerUp@i& (0+255),w,b
  9303   00940E  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9304   009410  6F91               	movwf	readNVM@index& (0+255),b
  9305   009412  0E00               	movlw	0
  9306   009414  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9307   009416  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9308   009418  0E00               	movlw	0
  9309   00941A  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9310   00941C  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9311   00941E  0E01               	movlw	1
  9312   009420  EC0F  F05B         	call	_readNVM
  9313   009424  0100               	movlb	0	; () banked
  9314   009426  5191               	movf	?_readNVM& (0+255),w,b
  9315   009428  6F97               	movwf	bootPowerUp@b& (0+255),b
  9316                           
  9317                           ; BSR set to: 0
  9318                           ;../../VLCBlib_PIC/boot.c: 211:             if (b != bl_version[i]) {
  9319   00942A  0E7B               	movlw	low _bl_version
  9320   00942C  2599               	addwf	bootPowerUp@i& (0+255),w,b
  9321   00942E  6EF6               	movwf	tblptrl,c
  9322   009430  6AF7               	clrf	tblptrh,c
  9323   009432  0EEE               	movlw	high _bl_version
  9324   009434  22F7               	addwfc	tblptrh,f,c
  9325   009436                     	if	1	;There are 3 active tblptr bytes
  9326   009436  6AF8               	clrf	tblptru,c
  9327   009438  0E00               	movlw	low (__mediumconst shr (0+16))
  9328   00943A  22F8               	addwfc	tblptru,f,c
  9329   00943C                     	endif
  9330   00943C  0008               	tblrd		*
  9331   00943E  50F5               	movf	tablat,w,c
  9332   009440  1997               	xorwf	bootPowerUp@b& (0+255),w,b
  9333   009442  B4D8               	btfsc	status,2,c
  9334   009444  D003               	goto	l23671
  9335                           
  9336                           ; BSR set to: 0
  9337                           ;../../VLCBlib_PIC/boot.c: 212:                 found = 0;
  9338   009446  0E00               	movlw	0
  9339   009448  6F98               	movwf	bootPowerUp@found& (0+255),b
  9340                           
  9341                           ;../../VLCBlib_PIC/boot.c: 213:                 break;
  9342   00944A  D006               	goto	u25180
  9343   00944C                     l23671:
  9344                           
  9345                           ; BSR set to: 0
  9346                           ;../../VLCBlib_PIC/boot.c: 215:                 found = 1;
  9347   00944C  0E01               	movlw	1
  9348   00944E  6F98               	movwf	bootPowerUp@found& (0+255),b
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;../../VLCBlib_PIC/boot.c: 217:         }
  9352   009450  2B99               	incf	bootPowerUp@i& (0+255),f,b
  9353                           
  9354                           ; BSR set to: 0
  9355   009452  0E0A               	movlw	10
  9356   009454  6599               	cpfsgt	bootPowerUp@i& (0+255),b
  9357   009456  D7DA               	goto	l23663
  9358   009458                     u25180:
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;../../VLCBlib_PIC/boot.c: 218:         if (found) {
  9362   009458  5198               	movf	bootPowerUp@found& (0+255),w,b
  9363   00945A  B4D8               	btfsc	status,2,c
  9364   00945C  D01F               	goto	l1269
  9365                           
  9366                           ; BSR set to: 0
  9367                           ;../../VLCBlib_PIC/boot.c: 219:             bootloaderType = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, a+11);
  9368   00945E  0E0B               	movlw	11
  9369   009460  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9370   009462  6F91               	movwf	readNVM@index& (0+255),b
  9371   009464  0E00               	movlw	0
  9372   009466  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9373   009468  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9374   00946A  0E00               	movlw	0
  9375   00946C  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9376   00946E  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9377   009470  0E01               	movlw	1
  9378   009472  EC0F  F05B         	call	_readNVM
  9379   009476  0100               	movlb	0	; () banked
  9380   009478  5191               	movf	?_readNVM& (0+255),w,b
  9381   00947A  6FC8               	movwf	_bootloaderType& (0+255),b
  9382                           
  9383                           ;../../VLCBlib_PIC/boot.c: 220:             bootloaderVersion = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, a+12);
  9384   00947C  0E0C               	movlw	12
  9385   00947E  259A               	addwf	bootPowerUp@a& (0+255),w,b
  9386   009480  6F91               	movwf	readNVM@index& (0+255),b
  9387   009482  0E00               	movlw	0
  9388   009484  219B               	addwfc	(bootPowerUp@a+1)& (0+255),w,b
  9389   009486  6F92               	movwf	(readNVM@index+1)& (0+255),b
  9390   009488  0E00               	movlw	0
  9391   00948A  219C               	addwfc	(bootPowerUp@a+2)& (0+255),w,b
  9392   00948C  6F93               	movwf	(readNVM@index+2)& (0+255),b
  9393   00948E  0E01               	movlw	1
  9394   009490  EC0F  F05B         	call	_readNVM
  9395   009494  0100               	movlb	0	; () banked
  9396   009496  5191               	movf	?_readNVM& (0+255),w,b
  9397   009498  6FC7               	movwf	_bootloaderVersion& (0+255),b
  9398   00949A  0012               	return	
  9399   00949C                     l1269:
  9400                           
  9401                           ; BSR set to: 0
  9402                           ;../../VLCBlib_PIC/boot.c: 223:     }
  9403   00949C  0E01               	movlw	1
  9404   00949E  279A               	addwf	bootPowerUp@a& (0+255),f,b
  9405   0094A0  0E00               	movlw	0
  9406   0094A2  239B               	addwfc	(bootPowerUp@a+1)& (0+255),f,b
  9407   0094A4  0E00               	movlw	0
  9408   0094A6  239C               	addwfc	(bootPowerUp@a+2)& (0+255),f,b
  9409                           
  9410                           ; BSR set to: 0
  9411   0094A8  519C               	movf	(bootPowerUp@a+2)& (0+255),w,b
  9412   0094AA  E106               	bnz	u25200
  9413   0094AC  299A               	incf	bootPowerUp@a& (0+255),w,b
  9414   0094AE  0E07               	movlw	7
  9415   0094B0  599B               	subwfb	(bootPowerUp@a+1)& (0+255),w,b
  9416   0094B2  B0D8               	btfsc	status,0,c
  9417   0094B4  0012               	return	
  9418   0094B6  D7A8               	goto	l23657
  9419   0094B8                     u25200:
  9420                           
  9421                           ; BSR set to: 0
  9422   0094B8  0012               	return		;funcret
  9423   0094BA                     __end_of_bootPowerUp:
  9424                           	callstack 0
  9425                           
  9426 ;; *************** function _consumer2QPowerUp *****************
  9427 ;; Defined at:
  9428 ;;		line 109 in file "../event_consumerDualActionQueue.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;		None
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;		None
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1    wreg      void 
  9435 ;; Registers used:
  9436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9446 ;;Total ram usage:        0 bytes
  9447 ;; Hardware stack levels used: 1
  9448 ;; Hardware stack levels required when called: 12
  9449 ;; This function calls:
  9450 ;;		Nothing
  9451 ;; This function is called by:
  9452 ;;		_powerUp
  9453 ;; This function uses a non-reentrant model
  9454 ;;
  9455                           
  9456                           	psect	text14
  9457   00BD4A                     __ptext14:
  9458                           	callstack 0
  9459   00BD4A                     _consumer2QPowerUp:
  9460                           	callstack 17
  9461                           
  9462                           ;../event_consumerDualActionQueue.c: 110:     for (normalReadIndex=1; normalReadIndex <=
      +                           1; normalReadIndex++) {
  9463                           
  9464                           ; BSR set to: 0
  9465                           ;incstack = 0
  9466   00BD4A  0E01               	movlw	1
  9467   00BD4C  0100               	movlb	0	; () banked
  9468   00BD4E  6FCD               	movwf	_normalReadIndex& (0+255),b
  9469   00BD50                     l23459:
  9470                           
  9471                           ; BSR set to: 0
  9472   00BD50  0E01               	movlw	1
  9473   00BD52  65CD               	cpfsgt	_normalReadIndex& (0+255),b
  9474   00BD54  D001               	goto	l23463
  9475   00BD56  D00C               	goto	l23469
  9476   00BD58                     l23463:
  9477                           
  9478                           ; BSR set to: 0
  9479                           ;../event_consumerDualActionQueue.c: 111:         consumer2QDiagnostics[normalReadIndex]
      +                          .asUint = 0;
  9480   00BD58  51CD               	movf	_normalReadIndex& (0+255),w,b
  9481   00BD5A  0D02               	mullw	2
  9482   00BD5C  0EBA               	movlw	low _consumer2QDiagnostics
  9483   00BD5E  24F3               	addwf	243,w,c
  9484   00BD60  6ED9               	movwf	fsr2l,c
  9485   00BD62  0E01               	movlw	high _consumer2QDiagnostics
  9486   00BD64  20F4               	addwfc	prodh,w,c
  9487   00BD66  6EDA               	movwf	fsr2h,c
  9488   00BD68  6ADE               	clrf	postinc2,c
  9489   00BD6A  6ADD               	clrf	postdec2,c
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;../event_consumerDualActionQueue.c: 112:     }
  9493   00BD6C  2BCD               	incf	_normalReadIndex& (0+255),f,b
  9494   00BD6E  D7F0               	goto	l23459
  9495   00BD70                     l23469:
  9496                           
  9497                           ; BSR set to: 0
  9498                           ;../event_consumerDualActionQueue.c: 113:     consumer2QDiagnostics[0].asUint = 1;
  9499   00BD70  0E00               	movlw	0
  9500   00BD72  0101               	movlb	1	; () banked
  9501   00BD74  6FBB               	movwf	(_consumer2QDiagnostics+1)& (0+255),b
  9502   00BD76  0E01               	movlw	1
  9503   00BD78  6FBA               	movwf	_consumer2QDiagnostics& (0+255),b
  9504                           
  9505                           ;../event_consumerDualActionQueue.c: 115:     normalReadIndex = 0;
  9506   00BD7A  0E00               	movlw	0
  9507   00BD7C  0100               	movlb	0	; () banked
  9508   00BD7E  6FCD               	movwf	_normalReadIndex& (0+255),b
  9509                           
  9510                           ;../event_consumerDualActionQueue.c: 116:     normalWriteIndex = 0;
  9511   00BD80  0E00               	movlw	0
  9512   00BD82  6FCC               	movwf	_normalWriteIndex& (0+255),b
  9513                           
  9514                           ;../event_consumerDualActionQueue.c: 117:     expeditedReadIndex = 0;
  9515   00BD84  0E00               	movlw	0
  9516   00BD86  6FCB               	movwf	_expeditedReadIndex& (0+255),b
  9517                           
  9518                           ;../event_consumerDualActionQueue.c: 118:     expeditedWriteIndex = 0;
  9519   00BD88  0E00               	movlw	0
  9520   00BD8A  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
  9521                           
  9522                           ;../event_consumerDualActionQueue.c: 120:     expedited = FALSE;
  9523   00BD8C  0E00               	movlw	0
  9524   00BD8E  6E25               	movwf	_expedited^0,c
  9525                           
  9526                           ; BSR set to: 0
  9527   00BD90  0012               	return		;funcret
  9528   00BD92                     __end_of_consumer2QPowerUp:
  9529                           	callstack 0
  9530                           
  9531 ;; *************** function _teachPowerUp *****************
  9532 ;; Defined at:
  9533 ;;		line 361 in file "../../VLCBlib_PIC/event_teach_large.c"
  9534 ;; Parameters:    Size  Location     Type
  9535 ;;		None
  9536 ;; Auto vars:     Size  Location     Type
  9537 ;;  i               1   73[BANK0 ] unsigned char 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  1    wreg      void 
  9540 ;; Registers used:
  9541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9548 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9550 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9551 ;;Total ram usage:        1 bytes
  9552 ;; Hardware stack levels used: 1
  9553 ;; Hardware stack levels required when called: 17
  9554 ;; This function calls:
  9555 ;;		_rebuildHashtable
  9556 ;; This function is called by:
  9557 ;;		_powerUp
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           
  9561                           	psect	text15
  9562   00C0C2                     __ptext15:
  9563                           	callstack 0
  9564   00C0C2                     _teachPowerUp:
  9565                           	callstack 12
  9566                           
  9567                           ;../../VLCBlib_PIC/event_teach_large.c: 362:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 364:     rebuildHashtable();
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;incstack = 0
  9571   00C0C2  EC8A  F03F         	call	_rebuildHashtable	;wreg free
  9572                           
  9573                           ;../../VLCBlib_PIC/event_teach_large.c: 368:     for (i=1; i<= 1; i++) {
  9574   00C0C6  0E01               	movlw	1
  9575   00C0C8  0100               	movlb	0	; () banked
  9576   00C0CA  6FA9               	movwf	teachPowerUp@i& (0+255),b
  9577   00C0CC                     l24795:
  9578                           
  9579                           ; BSR set to: 0
  9580                           ;../../VLCBlib_PIC/event_teach_large.c: 369:         teachDiagnostics[i].asUint = 0;
  9581   00C0CC  51A9               	movf	teachPowerUp@i& (0+255),w,b
  9582   00C0CE  0D02               	mullw	2
  9583   00C0D0  0EB2               	movlw	low _teachDiagnostics
  9584   00C0D2  24F3               	addwf	243,w,c
  9585   00C0D4  6ED9               	movwf	fsr2l,c
  9586   00C0D6  0E01               	movlw	high _teachDiagnostics
  9587   00C0D8  20F4               	addwfc	prodh,w,c
  9588   00C0DA  6EDA               	movwf	fsr2h,c
  9589   00C0DC  6ADE               	clrf	postinc2,c
  9590   00C0DE  6ADD               	clrf	postdec2,c
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;../../VLCBlib_PIC/event_teach_large.c: 370:     }
  9594   00C0E0  2BA9               	incf	teachPowerUp@i& (0+255),f,b
  9595                           
  9596                           ; BSR set to: 0
  9597   00C0E2  0E01               	movlw	1
  9598   00C0E4  65A9               	cpfsgt	teachPowerUp@i& (0+255),b
  9599   00C0E6  D7F2               	goto	l24795
  9600                           
  9601                           ; BSR set to: 0
  9602                           ;../../VLCBlib_PIC/event_teach_large.c: 371:     teachDiagnostics[0x00].asUint = 1;
  9603   00C0E8  0E00               	movlw	0
  9604   00C0EA  0101               	movlb	1	; () banked
  9605   00C0EC  6FB3               	movwf	(_teachDiagnostics+1)& (0+255),b
  9606   00C0EE  0E01               	movlw	1
  9607   00C0F0  6FB2               	movwf	_teachDiagnostics& (0+255),b
  9608                           
  9609                           ; BSR set to: 1
  9610                           ;../../VLCBlib_PIC/event_teach_large.c: 373:     mode_flags &= ~1;
  9611   00C0F2  9165               	bcf	_mode_flags& (0+255),0,b
  9612                           
  9613                           ; BSR set to: 1
  9614   00C0F4  0012               	return		;funcret
  9615   00C0F6                     __end_of_teachPowerUp:
  9616                           	callstack 0
  9617                           
  9618 ;; *************** function _leds_powerUp *****************
  9619 ;; Defined at:
  9620 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;		None
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;		None
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      void 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9638 ;;Total ram usage:        0 bytes
  9639 ;; Hardware stack levels used: 1
  9640 ;; Hardware stack levels required when called: 13
  9641 ;; This function calls:
  9642 ;;		_tickGet
  9643 ;; This function is called by:
  9644 ;;		_powerUp
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text16
  9649   00C15A                     __ptext16:
  9650                           	callstack 0
  9651   00C15A                     _leds_powerUp:
  9652                           	callstack 16
  9653                           
  9654                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9655                           
  9656                           ; BSR set to: 1
  9657                           ;incstack = 0
  9658   00C15A  0E00               	movlw	0
  9659   00C15C  010F               	movlb	15	; () banked
  9660   00C15E  6F5C               	movwf	92,b	;volatile
  9661   00C160  CF5C FF5D          	movff	3932,3933	;volatile
  9662                           
  9663                           ; BSR set to: 15
  9664   00C164  9E93               	bcf	147,7,c	;volatile
  9665   00C166  9C93               	bcf	147,6,c	;volatile
  9666                           
  9667                           ; BSR set to: 15
  9668   00C168  8492               	bsf	146,2,c	;volatile
  9669                           
  9670                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9671   00C16A  0E00               	movlw	0
  9672   00C16C  0100               	movlb	0	; () banked
  9673   00C16E  6FAE               	movwf	_flashCounter& (0+255),b
  9674                           
  9675                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9676   00C170  0E00               	movlw	0
  9677   00C172  6FAF               	movwf	(_flashCounter+1)& (0+255),b
  9678                           
  9679                           ; BSR set to: 0
  9680                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9681   00C174  EC23  F05C         	call	_tickGet	;wreg free
  9682   00C178  C08D  F148         	movff	?_tickGet,_ledTimer
  9683   00C17C  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
  9684   00C180  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
  9685   00C184  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
  9686   00C188  0012               	return		;funcret
  9687   00C18A                     __end_of_leds_powerUp:
  9688                           	callstack 0
  9689                           
  9690 ;; *************** function _initTimedResponse *****************
  9691 ;; Defined at:
  9692 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;		None
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		None
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 12
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_powerUp
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text17
  9721   00C8C4                     __ptext17:
  9722                           	callstack 0
  9723   00C8C4                     _initTimedResponse:
  9724                           	callstack 17
  9725                           
  9726                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9727                           
  9728                           ;incstack = 0
  9729   00C8C4  0100               	movlb	0	; () banked
  9730   00C8C6  69BC               	setf	_timedResponseType& (0+255),b
  9731                           
  9732                           ; BSR set to: 0
  9733   00C8C8  0012               	return		;funcret
  9734   00C8CA                     __end_of_initTimedResponse:
  9735                           	callstack 0
  9736                           
  9737 ;; *************** function _initTicker *****************
  9738 ;; Defined at:
  9739 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;  priority        1    wreg     unsigned char 
  9742 ;; Auto vars:     Size  Location     Type
  9743 ;;  priority        1   45[BANK0 ] unsigned char 
  9744 ;;  i               1   47[BANK0 ] unsigned char 
  9745 ;;  divider         1   46[BANK0 ] unsigned char 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      void 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9756 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9758 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9759 ;;Total ram usage:        3 bytes
  9760 ;; Hardware stack levels used: 1
  9761 ;; Hardware stack levels required when called: 12
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_powerUp
  9766 ;; This function uses a non-reentrant model
  9767 ;;
  9768                           
  9769                           	psect	text18
  9770   00BDDA                     __ptext18:
  9771                           	callstack 0
  9772   00BDDA                     _initTicker:
  9773                           	callstack 17
  9774                           
  9775                           ; BSR set to: 0
  9776                           ;incstack = 0
  9777                           ;initTicker@priority stored from wreg
  9778   00BDDA  0100               	movlb	0	; () banked
  9779   00BDDC  6F8D               	movwf	initTicker@priority& (0+255),b
  9780                           
  9781                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9782   00BDDE  0E00               	movlw	0
  9783   00BDE0  0100               	movlb	0	; () banked
  9784   00BDE2  6F8E               	movwf	initTicker@divider& (0+255),b
  9785                           
  9786                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9787   00BDE4  0E40               	movlw	64
  9788   00BDE6  6F8F               	movwf	initTicker@i& (0+255),b
  9789   00BDE8                     l24489:
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9793   00BDE8  2B8E               	incf	initTicker@divider& (0+255),f,b
  9794                           
  9795                           ; BSR set to: 0
  9796   00BDEA  90D8               	bcf	status,0,c
  9797   00BDEC  338F               	rrcf	initTicker@i& (0+255),f,b
  9798                           
  9799                           ; BSR set to: 0
  9800   00BDEE  518F               	movf	initTicker@i& (0+255),w,b
  9801   00BDF0  A4D8               	btfss	status,2,c
  9802   00BDF2  D7FA               	goto	l24489
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9806   00BDF4  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9807                           
  9808                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9809   00BDF8  9CD5               	bcf	213,6,c	;volatile
  9810                           
  9811                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9812   00BDFA  9AD5               	bcf	213,5,c	;volatile
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9816   00BDFC  0E00               	movlw	0
  9817   00BDFE  6ED7               	movwf	215,c	;volatile
  9818                           
  9819                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9820   00BE00  0E00               	movlw	0
  9821   00BE02  6ED6               	movwf	214,c	;volatile
  9822                           
  9823                           ; BSR set to: 0
  9824                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9825   00BE04  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9826   00BE06  D002               	bra	u26165
  9827   00BE08  94F1               	bcf	241,2,c	;volatile
  9828   00BE0A  D001               	bra	u26166
  9829   00BE0C                     u26165:
  9830   00BE0C  84F1               	bsf	241,2,c	;volatile
  9831   00BE0E                     u26166:
  9832                           
  9833                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9834   00BE0E  94F2               	bcf	242,2,c	;volatile
  9835                           
  9836                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9837   00BE10  8AF2               	bsf	242,5,c	;volatile
  9838                           
  9839                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9840   00BE12  8ED5               	bsf	213,7,c	;volatile
  9841                           
  9842                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9843   00BE14  0E00               	movlw	0
  9844   00BE16  0100               	movlb	0	; () banked
  9845   00BE18  6FC6               	movwf	_timerExtension1& (0+255),b	;volatile
  9846                           
  9847                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9848   00BE1A  0E00               	movlw	0
  9849   00BE1C  6FC5               	movwf	_timerExtension2& (0+255),b	;volatile
  9850                           
  9851                           ; BSR set to: 0
  9852   00BE1E  0012               	return		;funcret
  9853   00BE20                     __end_of_initTicker:
  9854                           	callstack 0
  9855                           
  9856 ;; *************** function _poll *****************
  9857 ;; Defined at:
  9858 ;;		line 993 in file "../../VLCBlib_PIC/vlcb.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;		None
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  m               9   41[BANK2 ] struct Message
  9863 ;;  i               1   40[BANK2 ] unsigned char 
  9864 ;;  handled         1   39[BANK2 ] enum E12799
  9865 ;; Return value:  Size  Location     Type
  9866 ;;                  1    wreg      void 
  9867 ;; Registers used:
  9868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9869 ;; Tracked objects:
  9870 ;;		On entry : 0/0
  9871 ;;		On exit  : 0/0
  9872 ;;		Unchanged: 0/0
  9873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9875 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9876 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9877 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9878 ;;Total ram usage:       15 bytes
  9879 ;; Hardware stack levels used: 1
  9880 ;; Hardware stack levels required when called: 28
  9881 ;; This function calls:
  9882 ;;		NULL
  9883 ;;		_APP_postProcessMessage
  9884 ;;		_APP_preProcessMessage
  9885 ;;		___lmul
  9886 ;;		_ackEventProcessMessage
  9887 ;;		_bootProcessMessage
  9888 ;;		_canProcessMessage
  9889 ;;		_canReceiveMessage
  9890 ;;		_consumer2QProcessMessage
  9891 ;;		_flushFlashBlock
  9892 ;;		_leds_poll
  9893 ;;		_mnsPoll
  9894 ;;		_mnsProcessMessage
  9895 ;;		_nvProcessMessage
  9896 ;;		_pollTimedResponse
  9897 ;;		_producerProcessMessage
  9898 ;;		_showStatus
  9899 ;;		_teachProcessMessage
  9900 ;;		_tickGet
  9901 ;; This function is called by:
  9902 ;;		_main
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           	psect	text19
  9907   00414E                     __ptext19:
  9908                           	callstack 0
  9909   00414E                     _poll:
  9910                           	callstack 2
  9911                           
  9912                           ;../../VLCBlib_PIC/vlcb.c: 994:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 995:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 996:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 999
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;incstack = 0
  9916   00414E  EC23  F05C         	call	_tickGet	;wreg free
  9917   004152  0101               	movlb	1	; () banked
  9918   004154  5144               	movf	_timedResponseTime& (0+255),w,b
  9919   004156  0100               	movlb	0	; () banked
  9920   004158  5D8D               	subwf	?_tickGet& (0+255),w,b
  9921   00415A  0102               	movlb	2	; () banked
  9922   00415C  6FEF               	movwf	??_poll& (0+255),b
  9923   00415E  0101               	movlb	1	; () banked
  9924   004160  5145               	movf	(_timedResponseTime+1)& (0+255),w,b
  9925   004162  0100               	movlb	0	; () banked
  9926   004164  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9927   004166  0102               	movlb	2	; () banked
  9928   004168  6FF0               	movwf	(??_poll+1)& (0+255),b
  9929   00416A  0101               	movlb	1	; () banked
  9930   00416C  5146               	movf	(_timedResponseTime+2)& (0+255),w,b
  9931   00416E  0100               	movlb	0	; () banked
  9932   004170  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9933   004172  0102               	movlb	2	; () banked
  9934   004174  6FF1               	movwf	(??_poll+2)& (0+255),b
  9935   004176  0101               	movlb	1	; () banked
  9936   004178  5147               	movf	(_timedResponseTime+3)& (0+255),w,b
  9937   00417A  0100               	movlb	0	; () banked
  9938   00417C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9939   00417E  0102               	movlb	2	; () banked
  9940   004180  6FF2               	movwf	(??_poll+3)& (0+255),b
  9941   004182  0101               	movlb	1	; () banked
  9942   004184  5164               	movf	_timedResponseDelay& (0+255),w,b
  9943   004186  0100               	movlb	0	; () banked
  9944   004188  6F91               	movwf	___lmul@multiplier& (0+255),b
  9945   00418A  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9946   00418C  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9947   00418E  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9948   004190  0E3E               	movlw	62
  9949   004192  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9950   004194  0E00               	movlw	0
  9951   004196  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9952   004198  0E00               	movlw	0
  9953   00419A  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9954   00419C  0E00               	movlw	0
  9955   00419E  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9956   0041A0  EC4F  F05C         	call	___lmul	;wreg free
  9957   0041A4  0102               	movlb	2	; () banked
  9958   0041A6  51EF               	movf	??_poll& (0+255),w,b
  9959   0041A8  0100               	movlb	0	; () banked
  9960   0041AA  5D91               	subwf	?___lmul& (0+255),w,b
  9961   0041AC  0102               	movlb	2	; () banked
  9962   0041AE  51F0               	movf	(??_poll+1)& (0+255),w,b
  9963   0041B0  0100               	movlb	0	; () banked
  9964   0041B2  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9965   0041B4  0102               	movlb	2	; () banked
  9966   0041B6  51F1               	movf	(??_poll+2)& (0+255),w,b
  9967   0041B8  0100               	movlb	0	; () banked
  9968   0041BA  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9969   0041BC  0102               	movlb	2	; () banked
  9970   0041BE  51F2               	movf	(??_poll+3)& (0+255),w,b
  9971   0041C0  0100               	movlb	0	; () banked
  9972   0041C2  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9973   0041C4  B0D8               	btfsc	status,0,c
  9974   0041C6  D00C               	goto	l25307
  9975                           
  9976                           ; BSR set to: 0
  9977                           ;../../VLCBlib_PIC/vlcb.c: 1000:         pollTimedResponse();
  9978   0041C8  EC1F  F056         	call	_pollTimedResponse	;wreg free
  9979                           
  9980                           ;../../VLCBlib_PIC/vlcb.c: 1001:         timedResponseTime.val = tickGet();
  9981   0041CC  EC23  F05C         	call	_tickGet	;wreg free
  9982   0041D0  C08D  F144         	movff	?_tickGet,_timedResponseTime
  9983   0041D4  C08E  F145         	movff	?_tickGet+1,_timedResponseTime+1
  9984   0041D8  C08F  F146         	movff	?_tickGet+2,_timedResponseTime+2
  9985   0041DC  C090  F147         	movff	?_tickGet+3,_timedResponseTime+3
  9986   0041E0                     l25307:
  9987                           
  9988                           ;../../VLCBlib_PIC/vlcb.c: 1003:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9989   0041E0  EC23  F05C         	call	_tickGet	;wreg free
  9990   0041E4  0101               	movlb	1	; () banked
  9991   0041E6  5140               	movf	_flashFlushTime& (0+255),w,b
  9992   0041E8  0100               	movlb	0	; () banked
  9993   0041EA  5D8D               	subwf	?_tickGet& (0+255),w,b
  9994   0041EC  0102               	movlb	2	; () banked
  9995   0041EE  6FEF               	movwf	??_poll& (0+255),b
  9996   0041F0  0101               	movlb	1	; () banked
  9997   0041F2  5141               	movf	(_flashFlushTime+1)& (0+255),w,b
  9998   0041F4  0100               	movlb	0	; () banked
  9999   0041F6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 10000   0041F8  0102               	movlb	2	; () banked
 10001   0041FA  6FF0               	movwf	(??_poll+1)& (0+255),b
 10002   0041FC  0101               	movlb	1	; () banked
 10003   0041FE  5142               	movf	(_flashFlushTime+2)& (0+255),w,b
 10004   004200  0100               	movlb	0	; () banked
 10005   004202  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 10006   004204  0102               	movlb	2	; () banked
 10007   004206  6FF1               	movwf	(??_poll+2)& (0+255),b
 10008   004208  0101               	movlb	1	; () banked
 10009   00420A  5143               	movf	(_flashFlushTime+3)& (0+255),w,b
 10010   00420C  0100               	movlb	0	; () banked
 10011   00420E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 10012   004210  0102               	movlb	2	; () banked
 10013   004212  6FF2               	movwf	(??_poll+3)& (0+255),b
 10014   004214  51F2               	movf	(??_poll+3)& (0+255),w,b
 10015   004216  11F1               	iorwf	(??_poll+2)& (0+255),w,b
 10016   004218  E106               	bnz	u27170
 10017   00421A  0E25               	movlw	37
 10018   00421C  5DEF               	subwf	??_poll& (0+255),w,b
 10019   00421E  0EF4               	movlw	244
 10020   004220  59F0               	subwfb	(??_poll+1)& (0+255),w,b
 10021   004222  A0D8               	btfss	status,0,c
 10022   004224  D00C               	goto	l25313
 10023   004226                     u27170:
 10024                           
 10025                           ; BSR set to: 2
 10026                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flushFlashBlock();
 10027   004226  EC9C  F054         	call	_flushFlashBlock	;wreg free
 10028                           
 10029                           ;../../VLCBlib_PIC/vlcb.c: 1005:         flashFlushTime.val = tickGet();
 10030   00422A  EC23  F05C         	call	_tickGet	;wreg free
 10031   00422E  C08D  F140         	movff	?_tickGet,_flashFlushTime
 10032   004232  C08E  F141         	movff	?_tickGet+1,_flashFlushTime+1
 10033   004236  C08F  F142         	movff	?_tickGet+2,_flashFlushTime+2
 10034   00423A  C090  F143         	movff	?_tickGet+3,_flashFlushTime+3
 10035   00423E                     l25313:
 10036                           
 10037                           ;../../VLCBlib_PIC/vlcb.c: 1008:     for (i=0; i<9; i++) {
 10038   00423E  0E00               	movlw	0
 10039   004240  0102               	movlb	2	; () banked
 10040   004242  6FF4               	movwf	poll@i& (0+255),b
 10041   004244                     l25319:
 10042                           
 10043                           ; BSR set to: 2
 10044                           ;../../VLCBlib_PIC/vlcb.c: 1009:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
 10045   004244  51F4               	movf	poll@i& (0+255),w,b
 10046   004246  0D02               	mullw	2
 10047   004248  0E69               	movlw	low _services
 10048   00424A  24F3               	addwf	243,w,c
 10049   00424C  6EF6               	movwf	tblptrl,c
 10050   00424E  0EEE               	movlw	high _services
 10051   004250  20F4               	addwfc	244,w,c
 10052   004252  6EF7               	movwf	tblptrh,c
 10053   004254                     	if	1	;There are 3 active tblptr bytes
 10054   004254  6AF8               	clrf	tblptru,c
 10055   004256  0E00               	movlw	low (__mediumconst shr (0+16))
 10056   004258  22F8               	addwfc	tblptru,f,c
 10057   00425A                     	endif
 10058   00425A  0009               	tblrd		*+
 10059   00425C  50F5               	movf	tablat,w,c
 10060   00425E  0009               	tblrd		*+
 10061   004260  10F5               	iorwf	tablat,w,c
 10062   004262  B4D8               	btfsc	status,2,c
 10063   004264  D04B               	goto	u27209
 10064                           
 10065                           ; BSR set to: 2
 10066   004266  51F4               	movf	poll@i& (0+255),w,b
 10067   004268  0D02               	mullw	2
 10068   00426A  0E69               	movlw	low _services
 10069   00426C  24F3               	addwf	243,w,c
 10070   00426E  6EF6               	movwf	tblptrl,c
 10071   004270  0EEE               	movlw	high _services
 10072   004272  20F4               	addwfc	244,w,c
 10073   004274  6EF7               	movwf	tblptrh,c
 10074   004276                     	if	1	;There are 3 active tblptr bytes
 10075   004276  6AF8               	clrf	tblptru,c
 10076   004278  0E00               	movlw	low (__mediumconst shr (0+16))
 10077   00427A  22F8               	addwfc	tblptru,f,c
 10078   00427C                     	endif
 10079   00427C  0009               	tblrd		*+
 10080   00427E  CFF5 F2EF          	movff	tablat,??_poll
 10081   004282  0009               	tblrd		*+
 10082   004284  CFF5 F2F0          	movff	tablat,??_poll+1
 10083   004288  0E08               	movlw	8
 10084   00428A  27EF               	addwf	??_poll& (0+255),f,b
 10085   00428C  0E00               	movlw	0
 10086   00428E  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10087   004290  C2EF  FFF6         	movff	??_poll,tblptrl
 10088   004294  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10089   004298                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10090   004298  6AF8               	clrf	tblptru,c
 10091   00429A                     	endif
 10092   00429A                     	if	0	;tblptru may be non-zero
 10093   00429A                     	endif
 10094   00429A  0009               	tblrd		*+
 10095   00429C  50F5               	movf	tablat,w,c
 10096   00429E  0009               	tblrd		*+
 10097   0042A0  10F5               	iorwf	tablat,w,c
 10098   0042A2  B4D8               	btfsc	status,2,c
 10099   0042A4  D02B               	goto	u27209
 10100                           
 10101                           ; BSR set to: 2
 10102                           ;../../VLCBlib_PIC/vlcb.c: 1010:             services[i]->poll();
 10103   0042A6  51F4               	movf	poll@i& (0+255),w,b
 10104   0042A8  0D02               	mullw	2
 10105   0042AA  0E69               	movlw	low _services
 10106   0042AC  24F3               	addwf	243,w,c
 10107   0042AE  6EF6               	movwf	tblptrl,c
 10108   0042B0  0EEE               	movlw	high _services
 10109   0042B2  20F4               	addwfc	244,w,c
 10110   0042B4  6EF7               	movwf	tblptrh,c
 10111   0042B6                     	if	1	;There are 3 active tblptr bytes
 10112   0042B6  6AF8               	clrf	tblptru,c
 10113   0042B8  0E00               	movlw	low (__mediumconst shr (0+16))
 10114   0042BA  22F8               	addwfc	tblptru,f,c
 10115   0042BC                     	endif
 10116   0042BC  0009               	tblrd		*+
 10117   0042BE  CFF5 F2EF          	movff	tablat,??_poll
 10118   0042C2  0009               	tblrd		*+
 10119   0042C4  CFF5 F2F0          	movff	tablat,??_poll+1
 10120   0042C8  0E08               	movlw	8
 10121   0042CA  27EF               	addwf	??_poll& (0+255),f,b
 10122   0042CC  0E00               	movlw	0
 10123   0042CE  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10124   0042D0  C2EF  FFF6         	movff	??_poll,tblptrl
 10125   0042D4  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10126   0042D8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10127   0042D8  6AF8               	clrf	tblptru,c
 10128   0042DA                     	endif
 10129   0042DA                     	if	0	;tblptru may be non-zero
 10130   0042DA                     	endif
 10131   0042DA  0009               	tblrd		*+
 10132   0042DC  CFF5 F2F1          	movff	tablat,??_poll+2
 10133   0042E0  0009               	tblrd		*+
 10134   0042E2  CFF5 F2F2          	movff	tablat,??_poll+3
 10135   0042E6  D801               	call	u27208
 10136   0042E8  D009               	goto	u27209
 10137   0042EA                     u27208:
 10138   0042EA  0005               	push	
 10139   0042EC  6EFA               	movwf	pclath,c
 10140   0042EE  51F1               	movf	(??_poll+2)& (0+255),w,b
 10141   0042F0  6EFD               	movwf	tosl,c
 10142   0042F2  51F2               	movf	(??_poll+3)& (0+255),w,b
 10143   0042F4  6EFE               	movwf	tosh,c
 10144   0042F6  6AFF               	clrf	tosu,c
 10145   0042F8  50FA               	movf	pclath,w,c
 10146   0042FA  0012               	return		;indir
 10147   0042FC                     u27209:
 10148                           
 10149                           ;../../VLCBlib_PIC/vlcb.c: 1012:     }
 10150   0042FC  0102               	movlb	2	; () banked
 10151   0042FE  2BF4               	incf	poll@i& (0+255),f,b
 10152                           
 10153                           ; BSR set to: 2
 10154   004300  0E08               	movlw	8
 10155   004302  65F4               	cpfsgt	poll@i& (0+255),b
 10156   004304  D79F               	goto	l25319
 10157                           
 10158                           ; BSR set to: 2
 10159                           ;../../VLCBlib_PIC/vlcb.c: 1014:     leds_poll();
 10160   004306  EC8B  F030         	call	_leds_poll	;wreg free
 10161                           
 10162                           ;../../VLCBlib_PIC/vlcb.c: 1017:     handled = NOT_PROCESSED;
 10163   00430A  0E00               	movlw	0
 10164   00430C  0102               	movlb	2	; () banked
 10165   00430E  6FF3               	movwf	poll@handled& (0+255),b
 10166                           
 10167                           ; BSR set to: 2
 10168                           ;../../VLCBlib_PIC/vlcb.c: 1018:     if (transport != ((void*)0)) {
 10169   004310  0101               	movlb	1	; () banked
 10170   004312  5162               	movf	_transport& (0+255),w,b
 10171   004314  1163               	iorwf	(_transport+1)& (0+255),w,b
 10172   004316  B4D8               	btfsc	status,2,c
 10173   004318  D0CA               	goto	l2038
 10174                           
 10175                           ; BSR set to: 1
 10176                           ;../../VLCBlib_PIC/vlcb.c: 1019:         if (transport->receiveMessage != ((void*)0)) {
 10177   00431A  0E02               	movlw	2
 10178   00431C  2562               	addwf	_transport& (0+255),w,b
 10179   00431E  0102               	movlb	2	; () banked
 10180   004320  6FEF               	movwf	??_poll& (0+255),b
 10181   004322  0E00               	movlw	0
 10182   004324  0101               	movlb	1	; () banked
 10183   004326  2163               	addwfc	(_transport+1)& (0+255),w,b
 10184   004328  0102               	movlb	2	; () banked
 10185   00432A  6FF0               	movwf	(??_poll+1)& (0+255),b
 10186   00432C  C2EF  FFF6         	movff	??_poll,tblptrl
 10187   004330  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10188   004334                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10189   004334  6AF8               	clrf	tblptru,c
 10190   004336                     	endif
 10191   004336                     	if	0	;tblptru may be non-zero
 10192   004336                     	endif
 10193   004336  0009               	tblrd		*+
 10194   004338  50F5               	movf	tablat,w,c
 10195   00433A  0009               	tblrd		*+
 10196   00433C  10F5               	iorwf	tablat,w,c
 10197   00433E  B4D8               	btfsc	status,2,c
 10198   004340  D0B6               	goto	l2038
 10199                           
 10200                           ; BSR set to: 2
 10201                           ;../../VLCBlib_PIC/vlcb.c: 1020:             if (transport->receiveMessage(&m)) {
 10202   004342  0EF5               	movlw	low poll@m
 10203   004344  0101               	movlb	1	; () banked
 10204   004346  6FC7               	movwf	canReceiveMessage@m& (0+255),b
 10205   004348  0E02               	movlw	high poll@m
 10206   00434A  6FC8               	movwf	(canReceiveMessage@m+1)& (0+255),b
 10207   00434C  0E02               	movlw	2
 10208   00434E  2562               	addwf	_transport& (0+255),w,b
 10209   004350  0102               	movlb	2	; () banked
 10210   004352  6FEF               	movwf	??_poll& (0+255),b
 10211   004354  0E00               	movlw	0
 10212   004356  0101               	movlb	1	; () banked
 10213   004358  2163               	addwfc	(_transport+1)& (0+255),w,b
 10214   00435A  0102               	movlb	2	; () banked
 10215   00435C  6FF0               	movwf	(??_poll+1)& (0+255),b
 10216   00435E  C2EF  FFF6         	movff	??_poll,tblptrl
 10217   004362  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10218   004366                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10219   004366  6AF8               	clrf	tblptru,c
 10220   004368                     	endif
 10221   004368                     	if	0	;tblptru may be non-zero
 10222   004368                     	endif
 10223   004368  0009               	tblrd		*+
 10224   00436A  CFF5 F2F1          	movff	tablat,??_poll+2
 10225   00436E  0009               	tblrd		*+
 10226   004370  CFF5 F2F2          	movff	tablat,??_poll+3
 10227   004374  D801               	call	u27248
 10228   004376  D009               	goto	u27249
 10229   004378                     u27248:
 10230   004378  0005               	push	
 10231   00437A  6EFA               	movwf	pclath,c
 10232   00437C  51F1               	movf	(??_poll+2)& (0+255),w,b
 10233   00437E  6EFD               	movwf	tosl,c
 10234   004380  51F2               	movf	(??_poll+3)& (0+255),w,b
 10235   004382  6EFE               	movwf	tosh,c
 10236   004384  6AFF               	clrf	tosu,c
 10237   004386  50FA               	movf	pclath,w,c
 10238   004388  0012               	return		;indir
 10239   00438A                     u27249:
 10240   00438A  0900               	iorlw	0
 10241   00438C  B4D8               	btfsc	status,2,c
 10242   00438E  D08F               	goto	l2038
 10243                           
 10244                           ;../../VLCBlib_PIC/vlcb.c: 1021:                 if (m.len > 0) {
 10245   004390  0102               	movlb	2	; () banked
 10246   004392  51F5               	movf	poll@m& (0+255),w,b
 10247   004394  B4D8               	btfsc	status,2,c
 10248   004396  D08B               	goto	l2038
 10249                           
 10250                           ; BSR set to: 2
 10251                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
 10252   004398  0E07               	movlw	7
 10253   00439A  EC91  F044         	call	_showStatus
 10254                           
 10255                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     handled = APP_preProcessMessage(&m)
      +                          ;
 10256   00439E  0EF5               	movlw	low poll@m
 10257   0043A0  0100               	movlb	0	; () banked
 10258   0043A2  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
 10259   0043A4  0E02               	movlw	high poll@m
 10260   0043A6  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
 10261   0043A8  EC71  F064         	call	_APP_preProcessMessage	;wreg free
 10262   0043AC  0102               	movlb	2	; () banked
 10263   0043AE  6FF3               	movwf	poll@handled& (0+255),b
 10264                           
 10265                           ; BSR set to: 2
 10266                           ;../../VLCBlib_PIC/vlcb.c: 1024:                     if (handled == NOT_PROCESSED) {
 10267   0043B0  51F3               	movf	poll@handled& (0+255),w,b
 10268   0043B2  A4D8               	btfss	status,2,c
 10269   0043B4  D07C               	goto	l2038
 10270                           
 10271                           ; BSR set to: 2
 10272                           ;../../VLCBlib_PIC/vlcb.c: 1025:                         for (i=0; i<9; i++) {
 10273   0043B6  0E00               	movlw	0
 10274   0043B8  6FF4               	movwf	poll@i& (0+255),b
 10275   0043BA                     l25351:
 10276                           
 10277                           ; BSR set to: 2
 10278                           ;../../VLCBlib_PIC/vlcb.c: 1026:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 10279   0043BA  51F4               	movf	poll@i& (0+255),w,b
 10280   0043BC  0D02               	mullw	2
 10281   0043BE  0E69               	movlw	low _services
 10282   0043C0  24F3               	addwf	243,w,c
 10283   0043C2  6EF6               	movwf	tblptrl,c
 10284   0043C4  0EEE               	movlw	high _services
 10285   0043C6  20F4               	addwfc	244,w,c
 10286   0043C8  6EF7               	movwf	tblptrh,c
 10287   0043CA                     	if	1	;There are 3 active tblptr bytes
 10288   0043CA  6AF8               	clrf	tblptru,c
 10289   0043CC  0E00               	movlw	low (__mediumconst shr (0+16))
 10290   0043CE  22F8               	addwfc	tblptru,f,c
 10291   0043D0                     	endif
 10292   0043D0  0009               	tblrd		*+
 10293   0043D2  50F5               	movf	tablat,w,c
 10294   0043D4  0009               	tblrd		*+
 10295   0043D6  10F5               	iorwf	tablat,w,c
 10296   0043D8  B4D8               	btfsc	status,2,c
 10297   0043DA  D058               	goto	l25359
 10298                           
 10299                           ; BSR set to: 2
 10300   0043DC  51F4               	movf	poll@i& (0+255),w,b
 10301   0043DE  0D02               	mullw	2
 10302   0043E0  0E69               	movlw	low _services
 10303   0043E2  24F3               	addwf	243,w,c
 10304   0043E4  6EF6               	movwf	tblptrl,c
 10305   0043E6  0EEE               	movlw	high _services
 10306   0043E8  20F4               	addwfc	244,w,c
 10307   0043EA  6EF7               	movwf	tblptrh,c
 10308   0043EC                     	if	1	;There are 3 active tblptr bytes
 10309   0043EC  6AF8               	clrf	tblptru,c
 10310   0043EE  0E00               	movlw	low (__mediumconst shr (0+16))
 10311   0043F0  22F8               	addwfc	tblptru,f,c
 10312   0043F2                     	endif
 10313   0043F2  0009               	tblrd		*+
 10314   0043F4  CFF5 F2EF          	movff	tablat,??_poll
 10315   0043F8  0009               	tblrd		*+
 10316   0043FA  CFF5 F2F0          	movff	tablat,??_poll+1
 10317   0043FE  0E06               	movlw	6
 10318   004400  27EF               	addwf	??_poll& (0+255),f,b
 10319   004402  0E00               	movlw	0
 10320   004404  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10321   004406  C2EF  FFF6         	movff	??_poll,tblptrl
 10322   00440A  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10323   00440E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10324   00440E  6AF8               	clrf	tblptru,c
 10325   004410                     	endif
 10326   004410                     	if	0	;tblptru may be non-zero
 10327   004410                     	endif
 10328   004410  0009               	tblrd		*+
 10329   004412  50F5               	movf	tablat,w,c
 10330   004414  0009               	tblrd		*+
 10331   004416  10F5               	iorwf	tablat,w,c
 10332   004418  B4D8               	btfsc	status,2,c
 10333   00441A  D038               	goto	l25359
 10334                           
 10335                           ; BSR set to: 2
 10336                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 10337   00441C  0EF5               	movlw	low poll@m
 10338   00441E  0101               	movlb	1	; () banked
 10339   004420  6FFD               	movwf	producerProcessMessage@m& (0+255),b
 10340   004422  0E02               	movlw	high poll@m
 10341   004424  6FFE               	movwf	(producerProcessMessage@m+1)& (0+255),b
 10342   004426  0102               	movlb	2	; () banked
 10343   004428  51F4               	movf	poll@i& (0+255),w,b
 10344   00442A  0D02               	mullw	2
 10345   00442C  0E69               	movlw	low _services
 10346   00442E  24F3               	addwf	243,w,c
 10347   004430  6EF6               	movwf	tblptrl,c
 10348   004432  0EEE               	movlw	high _services
 10349   004434  20F4               	addwfc	244,w,c
 10350   004436  6EF7               	movwf	tblptrh,c
 10351   004438                     	if	1	;There are 3 active tblptr bytes
 10352   004438  6AF8               	clrf	tblptru,c
 10353   00443A  0E00               	movlw	low (__mediumconst shr (0+16))
 10354   00443C  22F8               	addwfc	tblptru,f,c
 10355   00443E                     	endif
 10356   00443E  0009               	tblrd		*+
 10357   004440  CFF5 F2EF          	movff	tablat,??_poll
 10358   004444  0009               	tblrd		*+
 10359   004446  CFF5 F2F0          	movff	tablat,??_poll+1
 10360   00444A  0E06               	movlw	6
 10361   00444C  27EF               	addwf	??_poll& (0+255),f,b
 10362   00444E  0E00               	movlw	0
 10363   004450  23F0               	addwfc	(??_poll+1)& (0+255),f,b
 10364   004452  C2EF  FFF6         	movff	??_poll,tblptrl
 10365   004456  C2F0  FFF7         	movff	??_poll+1,tblptrh
 10366   00445A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10367   00445A  6AF8               	clrf	tblptru,c
 10368   00445C                     	endif
 10369   00445C                     	if	0	;tblptru may be non-zero
 10370   00445C                     	endif
 10371   00445C  0009               	tblrd		*+
 10372   00445E  CFF5 F2F1          	movff	tablat,??_poll+2
 10373   004462  0009               	tblrd		*+
 10374   004464  CFF5 F2F2          	movff	tablat,??_poll+3
 10375   004468  D801               	call	u27308
 10376   00446A  D009               	goto	u27309
 10377   00446C                     u27308:
 10378   00446C  0005               	push	
 10379   00446E  6EFA               	movwf	pclath,c
 10380   004470  51F1               	movf	(??_poll+2)& (0+255),w,b
 10381   004472  6EFD               	movwf	tosl,c
 10382   004474  51F2               	movf	(??_poll+3)& (0+255),w,b
 10383   004476  6EFE               	movwf	tosh,c
 10384   004478  6AFF               	clrf	tosu,c
 10385   00447A  50FA               	movf	pclath,w,c
 10386   00447C  0012               	return		;indir
 10387   00447E                     u27309:
 10388   00447E  06E8               	decf	wreg,f,c
 10389   004480  A4D8               	btfss	status,2,c
 10390   004482  D004               	goto	l25359
 10391                           
 10392                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     handled = PROCESSED
      +                          ;
 10393   004484  0E01               	movlw	1
 10394   004486  0102               	movlb	2	; () banked
 10395   004488  6FF3               	movwf	poll@handled& (0+255),b
 10396                           
 10397                           ;../../VLCBlib_PIC/vlcb.c: 1029:                                     break;
 10398   00448A  D005               	goto	u27320
 10399   00448C                     l25359:
 10400                           
 10401                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         }
 10402   00448C  0102               	movlb	2	; () banked
 10403   00448E  2BF4               	incf	poll@i& (0+255),f,b
 10404                           
 10405                           ; BSR set to: 2
 10406   004490  0E08               	movlw	8
 10407   004492  65F4               	cpfsgt	poll@i& (0+255),b
 10408   004494  D792               	goto	l25351
 10409   004496                     u27320:
 10410                           
 10411                           ; BSR set to: 2
 10412                           ;../../VLCBlib_PIC/vlcb.c: 1033:                         if (handled == NOT_PROCESSED) {
 10413   004496  51F3               	movf	poll@handled& (0+255),w,b
 10414   004498  A4D8               	btfss	status,2,c
 10415   00449A  D009               	goto	l2038
 10416                           
 10417                           ; BSR set to: 2
 10418                           ;../../VLCBlib_PIC/vlcb.c: 1034:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10419   00449C  0EF5               	movlw	low poll@m
 10420   00449E  0100               	movlb	0	; () banked
 10421   0044A0  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10422   0044A2  0E02               	movlw	high poll@m
 10423   0044A4  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10424   0044A6  EC73  F064         	call	_APP_postProcessMessage	;wreg free
 10425   0044AA  0102               	movlb	2	; () banked
 10426   0044AC  6FF3               	movwf	poll@handled& (0+255),b
 10427   0044AE                     l2038:
 10428                           
 10429                           ;../../VLCBlib_PIC/vlcb.c: 1041:     if (handled) {
 10430                           
 10431                           ; BSR set to: 2
 10432   0044AE  0102               	movlb	2	; () banked
 10433   0044B0  51F3               	movf	poll@handled& (0+255),w,b
 10434   0044B2  B4D8               	btfsc	status,2,c
 10435   0044B4  0012               	return	
 10436                           
 10437                           ; BSR set to: 2
 10438                           ;../../VLCBlib_PIC/vlcb.c: 1042:         mnsDiagnostics[0x06].asUint++;
 10439   0044B6  0101               	movlb	1	; () banked
 10440   0044B8  4B98               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 10441   0044BA  2B99               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 10442                           
 10443                           ; BSR set to: 1
 10444                           ;../../VLCBlib_PIC/vlcb.c: 1043:         showStatus(STATUS_MESSAGE_ACTED);
 10445   0044BC  0E08               	movlw	8
 10446   0044BE  EC91  F044         	call	_showStatus
 10447   0044C2  0012               	return		;funcret
 10448   0044C4                     __end_of_poll:
 10449                           	callstack 0
 10450                           
 10451 ;; *************** function _producerProcessMessage *****************
 10452 ;; Defined at:
 10453 ;;		line 124 in file "../../VLCBlib_PIC/event_producer_happening.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  m               2   63[BANK1 ] PTR struct Message
 10456 ;;		 -> poll@m(9), 
 10457 ;; Auto vars:     Size  Location     Type
 10458 ;;  ev              2    6[BANK2 ] short 
 10459 ;;  index           1    9[BANK2 ] unsigned char 
 10460 ;;  h               1    8[BANK2 ] unsigned char 
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      enum E12749
 10463 ;; Registers used:
 10464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10470 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10471 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10472 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10473 ;;      Totals:         0       0       2      10       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10474 ;;Total ram usage:       12 bytes
 10475 ;; Hardware stack levels used: 1
 10476 ;; Hardware stack levels required when called: 17
 10477 ;; This function calls:
 10478 ;;		_APP_GetEventState
 10479 ;;		_findEvent
 10480 ;;		_getEv
 10481 ;;		_sendMessage3
 10482 ;;		_sendMessage4
 10483 ;; This function is called by:
 10484 ;;		_poll
 10485 ;; This function uses a non-reentrant model
 10486 ;;
 10487                           
 10488                           	psect	text20
 10489   005EA8                     __ptext20:
 10490                           	callstack 0
 10491   005EA8                     _producerProcessMessage:
 10492                           	callstack 12
 10493                           
 10494                           ;../../VLCBlib_PIC/event_producer_happening.c: 125:     uint8_t index;;../../VLCBlib_PIC
      +                          /event_producer_happening.c: 126:     Happening h;;../../VLCBlib_PIC/event_producer_happ
      +                          ening.c: 127:     int16_t ev;;../../VLCBlib_PIC/event_producer_happening.c: 129:     swi
      +                          tch (m->opc) {
 10495                           
 10496                           ;incstack = 0
 10497   005EA8  D11E               	goto	l25149
 10498   005EAA                     l25101:
 10499                           
 10500                           ; BSR set to: 2
 10501                           ;../../VLCBlib_PIC/event_producer_happening.c: 132:             if (m->len < 5) {
 10502   005EAA  C1FD  FFD9         	movff	producerProcessMessage@m,fsr2l
 10503   005EAE  C1FE  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 10504   005EB2  0E05               	movlw	5
 10505   005EB4  60DF               	cpfslt	indf2,c
 10506   005EB6  D00C               	goto	l25109
 10507                           
 10508                           ; BSR set to: 2
 10509                           ;../../VLCBlib_PIC/event_producer_happening.c: 133:                 sendMessage3(OPC_CMD
      +                          ERR, nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 10510   005EB8  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 10511   005EBC  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 10512   005EC0  0E01               	movlw	1
 10513   005EC2  0100               	movlb	0	; () banked
 10514   005EC4  6FA9               	movwf	sendMessage3@data3& (0+255),b
 10515   005EC6  0E6F               	movlw	111
 10516   005EC8  EC83  F061         	call	_sendMessage3
 10517   005ECC                     l25105:
 10518                           
 10519                           ;../../VLCBlib_PIC/event_producer_happening.c: 134:                 return PROCESSED;
 10520   005ECC  0E01               	movlw	1
 10521   005ECE  0012               	return	
 10522   005ED0                     l25109:
 10523                           
 10524                           ; BSR set to: 2
 10525                           ;../../VLCBlib_PIC/event_producer_happening.c: 136:             if (m->opc == OPC_AREQ) 
      +                          {
 10526   005ED0  0101               	movlb	1	; () banked
 10527   005ED2  EE20 F001          	lfsr	2,1
 10528   005ED6  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10529   005ED8  26D9               	addwf	fsr2l,f,c
 10530   005EDA  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10531   005EDC  22DA               	addwfc	fsr2h,f,c
 10532   005EDE  0E92               	movlw	146
 10533   005EE0  18DE               	xorwf	postinc2,w,c
 10534   005EE2  A4D8               	btfss	status,2,c
 10535   005EE4  D033               	goto	l25113
 10536                           
 10537                           ; BSR set to: 1
 10538                           ;../../VLCBlib_PIC/event_producer_happening.c: 137:                 index = findEvent((u
      +                          int16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10539   005EE6  EE20 F003          	lfsr	2,3
 10540   005EEA  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10541   005EEC  26D9               	addwf	fsr2l,f,c
 10542   005EEE  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10543   005EF0  22DA               	addwfc	fsr2h,f,c
 10544   005EF2  50DF               	movf	indf2,w,c
 10545   005EF4  0102               	movlb	2	; () banked
 10546   005EF6  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10547   005EF8  0101               	movlb	1	; () banked
 10548   005EFA  EE20 F002          	lfsr	2,2
 10549   005EFE  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10550   005F00  26D9               	addwf	fsr2l,f,c
 10551   005F02  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10552   005F04  22DA               	addwfc	fsr2h,f,c
 10553   005F06  50DF               	movf	indf2,w,c
 10554   005F08  0102               	movlb	2	; () banked
 10555   005F0A  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10556   005F0C  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10557   005F0E  0101               	movlb	1	; () banked
 10558   005F10  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 10559   005F12  C2CD  F1BF         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 10560   005F16  EE20 F005          	lfsr	2,5
 10561   005F1A  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10562   005F1C  26D9               	addwf	fsr2l,f,c
 10563   005F1E  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10564   005F20  22DA               	addwfc	fsr2h,f,c
 10565   005F22  50DF               	movf	indf2,w,c
 10566   005F24  0102               	movlb	2	; () banked
 10567   005F26  6FCF               	movwf	(??_producerProcessMessage+3)& (0+255),b
 10568   005F28  0101               	movlb	1	; () banked
 10569   005F2A  EE20 F004          	lfsr	2,4
 10570   005F2E  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10571   005F30  26D9               	addwf	fsr2l,f,c
 10572   005F32  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10573   005F34  22DA               	addwfc	fsr2h,f,c
 10574   005F36  50DF               	movf	indf2,w,c
 10575   005F38  0102               	movlb	2	; () banked
 10576   005F3A  6FD0               	movwf	(??_producerProcessMessage+4)& (0+255),b
 10577   005F3C  51CF               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 10578   005F3E  0101               	movlb	1	; () banked
 10579   005F40  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 10580   005F42  C2D0  F1C1         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 10581   005F46  ECF8  F052         	call	_findEvent	;wreg free
 10582   005F4A  D01E               	goto	L1
 10583   005F4C                     l25113:
 10584                           
 10585                           ; BSR set to: 1
 10586                           ;../../VLCBlib_PIC/event_producer_happening.c: 139:                 index = findEvent(0,
      +                           (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10587   005F4C  0E00               	movlw	0
 10588   005F4E  6FBF               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 10589   005F50  0E00               	movlw	0
 10590   005F52  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 10591   005F54  EE20 F005          	lfsr	2,5
 10592   005F58  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10593   005F5A  26D9               	addwf	fsr2l,f,c
 10594   005F5C  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10595   005F5E  22DA               	addwfc	fsr2h,f,c
 10596   005F60  50DF               	movf	indf2,w,c
 10597   005F62  0102               	movlb	2	; () banked
 10598   005F64  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10599   005F66  0101               	movlb	1	; () banked
 10600   005F68  EE20 F004          	lfsr	2,4
 10601   005F6C  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10602   005F6E  26D9               	addwf	fsr2l,f,c
 10603   005F70  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10604   005F72  22DA               	addwfc	fsr2h,f,c
 10605   005F74  50DF               	movf	indf2,w,c
 10606   005F76  0102               	movlb	2	; () banked
 10607   005F78  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10608   005F7A  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10609   005F7C  0101               	movlb	1	; () banked
 10610   005F7E  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 10611   005F80  C2CD  F1C1         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 10612   005F84  ECF8  F052         	call	_findEvent	;wreg free
 10613   005F88                     L1:
 10614   005F88  0102               	movlb	2	; () banked
 10615   005F8A  6FD5               	movwf	producerProcessMessage@index& (0+255),b
 10616                           
 10617                           ; BSR set to: 2
 10618                           ;../../VLCBlib_PIC/event_producer_happening.c: 141:             if (index == 0xff) retur
      +                          n PROCESSED;
 10619   005F8C  29D5               	incf	producerProcessMessage@index& (0+255),w,b
 10620   005F8E  B4D8               	btfsc	status,2,c
 10621   005F90  D79D               	goto	l25105
 10622                           
 10623                           ; BSR set to: 2
 10624                           ;../../VLCBlib_PIC/event_producer_happening.c: 143:             ev = getEv(index, 0);
 10625   005F92  0E00               	movlw	0
 10626   005F94  0100               	movlb	0	; () banked
 10627   005F96  6F9D               	movwf	getEv@evNum& (0+255),b
 10628   005F98  0102               	movlb	2	; () banked
 10629   005F9A  51D5               	movf	producerProcessMessage@index& (0+255),w,b
 10630   005F9C  ECFA  F03C         	call	_getEv
 10631   005FA0  C09D  F2D2         	movff	?_getEv,producerProcessMessage@ev
 10632   005FA4  C09E  F2D3         	movff	?_getEv+1,producerProcessMessage@ev+1
 10633                           
 10634                           ;../../VLCBlib_PIC/event_producer_happening.c: 144:             if (ev <= 0) return PROC
      +                          ESSED;
 10635   005FA8  0102               	movlb	2	; () banked
 10636   005FAA  BFD3               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 10637   005FAC  D78F               	goto	l25105
 10638   005FAE  51D3               	movf	(producerProcessMessage@ev+1)& (0+255),w,b
 10639   005FB0  E103               	bnz	l3081
 10640   005FB2  05D2               	decf	producerProcessMessage@ev& (0+255),w,b
 10641   005FB4  A0D8               	btfss	status,0,c
 10642   005FB6  D78A               	goto	l25105
 10643   005FB8                     l3081:
 10644                           
 10645                           ; BSR set to: 2
 10646                           ;../../VLCBlib_PIC/event_producer_happening.c: 146:             h = (uint8_t)ev;
 10647   005FB8  C2D2  F2D4         	movff	producerProcessMessage@ev,producerProcessMessage@h
 10648                           
 10649                           ; BSR set to: 2
 10650                           ;../../VLCBlib_PIC/event_producer_happening.c: 154:             if (m->opc == OPC_AREQ) 
      +                          {
 10651   005FBC  0101               	movlb	1	; () banked
 10652   005FBE  EE20 F001          	lfsr	2,1
 10653   005FC2  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10654   005FC4  26D9               	addwf	fsr2l,f,c
 10655   005FC6  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10656   005FC8  22DA               	addwfc	fsr2h,f,c
 10657   005FCA  0E92               	movlw	146
 10658   005FCC  18DE               	xorwf	postinc2,w,c
 10659   005FCE  A4D8               	btfss	status,2,c
 10660   005FD0  D051               	goto	l25137
 10661                           
 10662                           ; BSR set to: 1
 10663                           ;../../VLCBlib_PIC/event_producer_happening.c: 155:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10664   005FD2  0102               	movlb	2	; () banked
 10665   005FD4  51D4               	movf	producerProcessMessage@h& (0+255),w,b
 10666   005FD6  EC62  F022         	call	_APP_GetEventState
 10667   005FDA  06E8               	decf	wreg,f,c
 10668   005FDC  A4D8               	btfss	status,2,c
 10669   005FDE  D025               	goto	l25135
 10670                           
 10671                           ;../../VLCBlib_PIC/event_producer_happening.c: 156:                     sendMessage4(OPC
      +                          _ARON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10672   005FE0  0101               	movlb	1	; () banked
 10673   005FE2  EE20 F002          	lfsr	2,2
 10674   005FE6  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10675   005FE8  26D9               	addwf	fsr2l,f,c
 10676   005FEA  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10677   005FEC  22DA               	addwfc	fsr2h,f,c
 10678   005FEE  50DF               	movf	indf2,w,c
 10679   005FF0  6FC6               	movwf	sendMessage4@data1& (0+255),b
 10680   005FF2  EE20 F003          	lfsr	2,3
 10681   005FF6  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10682   005FF8  26D9               	addwf	fsr2l,f,c
 10683   005FFA  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10684   005FFC  22DA               	addwfc	fsr2h,f,c
 10685   005FFE  50DF               	movf	indf2,w,c
 10686   006000  6FC7               	movwf	sendMessage4@data2& (0+255),b
 10687   006002  EE20 F004          	lfsr	2,4
 10688   006006  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10689   006008  26D9               	addwf	fsr2l,f,c
 10690   00600A  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10691   00600C  22DA               	addwfc	fsr2h,f,c
 10692   00600E  50DF               	movf	indf2,w,c
 10693   006010  6FC8               	movwf	sendMessage4@data3& (0+255),b
 10694   006012  EE20 F005          	lfsr	2,5
 10695   006016  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10696   006018  26D9               	addwf	fsr2l,f,c
 10697   00601A  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10698   00601C  22DA               	addwfc	fsr2h,f,c
 10699   00601E  50DF               	movf	indf2,w,c
 10700   006020  6FC9               	movwf	sendMessage4@data4& (0+255),b
 10701   006022  0E93               	movlw	147
 10702   006024  EC3D  F061         	call	_sendMessage4
 10703                           
 10704                           ;../../VLCBlib_PIC/event_producer_happening.c: 157:                 } else {
 10705   006028  D751               	goto	l25105
 10706   00602A                     l25135:
 10707                           
 10708                           ;../../VLCBlib_PIC/event_producer_happening.c: 158:                     sendMessage4(OPC
      +                          _AROF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10709   00602A  0101               	movlb	1	; () banked
 10710   00602C  EE20 F002          	lfsr	2,2
 10711   006030  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10712   006032  26D9               	addwf	fsr2l,f,c
 10713   006034  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10714   006036  22DA               	addwfc	fsr2h,f,c
 10715   006038  50DF               	movf	indf2,w,c
 10716   00603A  6FC6               	movwf	sendMessage4@data1& (0+255),b
 10717   00603C  EE20 F003          	lfsr	2,3
 10718   006040  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10719   006042  26D9               	addwf	fsr2l,f,c
 10720   006044  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10721   006046  22DA               	addwfc	fsr2h,f,c
 10722   006048  50DF               	movf	indf2,w,c
 10723   00604A  6FC7               	movwf	sendMessage4@data2& (0+255),b
 10724   00604C  EE20 F004          	lfsr	2,4
 10725   006050  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10726   006052  26D9               	addwf	fsr2l,f,c
 10727   006054  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10728   006056  22DA               	addwfc	fsr2h,f,c
 10729   006058  50DF               	movf	indf2,w,c
 10730   00605A  6FC8               	movwf	sendMessage4@data3& (0+255),b
 10731   00605C  EE20 F005          	lfsr	2,5
 10732   006060  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10733   006062  26D9               	addwf	fsr2l,f,c
 10734   006064  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10735   006066  22DA               	addwfc	fsr2h,f,c
 10736   006068  50DF               	movf	indf2,w,c
 10737   00606A  6FC9               	movwf	sendMessage4@data4& (0+255),b
 10738   00606C  0E94               	movlw	148
 10739   00606E  EC3D  F061         	call	_sendMessage4
 10740   006072  D72C               	goto	l25105
 10741   006074                     l25137:
 10742                           
 10743                           ; BSR set to: 1
 10744                           ;../../VLCBlib_PIC/event_producer_happening.c: 161:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10745   006074  0102               	movlb	2	; () banked
 10746   006076  51D4               	movf	producerProcessMessage@h& (0+255),w,b
 10747   006078  EC62  F022         	call	_APP_GetEventState
 10748   00607C  06E8               	decf	wreg,f,c
 10749   00607E  A4D8               	btfss	status,2,c
 10750   006080  D019               	goto	l25141
 10751                           
 10752                           ;../../VLCBlib_PIC/event_producer_happening.c: 162:                     sendMessage4(OPC
      +                          _ARSON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10753   006082  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 10754   006086  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 10755   00608A  0101               	movlb	1	; () banked
 10756   00608C  EE20 F004          	lfsr	2,4
 10757   006090  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10758   006092  26D9               	addwf	fsr2l,f,c
 10759   006094  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10760   006096  22DA               	addwfc	fsr2h,f,c
 10761   006098  50DF               	movf	indf2,w,c
 10762   00609A  6FC8               	movwf	sendMessage4@data3& (0+255),b
 10763   00609C  EE20 F005          	lfsr	2,5
 10764   0060A0  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10765   0060A2  26D9               	addwf	fsr2l,f,c
 10766   0060A4  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10767   0060A6  22DA               	addwfc	fsr2h,f,c
 10768   0060A8  50DF               	movf	indf2,w,c
 10769   0060AA  6FC9               	movwf	sendMessage4@data4& (0+255),b
 10770   0060AC  0E9D               	movlw	157
 10771   0060AE  EC3D  F061         	call	_sendMessage4
 10772                           
 10773                           ;../../VLCBlib_PIC/event_producer_happening.c: 163:                 } else {
 10774   0060B2  D70C               	goto	l25105
 10775   0060B4                     l25141:
 10776                           
 10777                           ;../../VLCBlib_PIC/event_producer_happening.c: 164:                     sendMessage4(OPC
      +                          _ARSOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10778   0060B4  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 10779   0060B8  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 10780   0060BC  0101               	movlb	1	; () banked
 10781   0060BE  EE20 F004          	lfsr	2,4
 10782   0060C2  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10783   0060C4  26D9               	addwf	fsr2l,f,c
 10784   0060C6  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10785   0060C8  22DA               	addwfc	fsr2h,f,c
 10786   0060CA  50DF               	movf	indf2,w,c
 10787   0060CC  6FC8               	movwf	sendMessage4@data3& (0+255),b
 10788   0060CE  EE20 F005          	lfsr	2,5
 10789   0060D2  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10790   0060D4  26D9               	addwf	fsr2l,f,c
 10791   0060D6  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10792   0060D8  22DA               	addwfc	fsr2h,f,c
 10793   0060DA  50DF               	movf	indf2,w,c
 10794   0060DC  6FC9               	movwf	sendMessage4@data4& (0+255),b
 10795   0060DE  0E9E               	movlw	158
 10796   0060E0  EC3D  F061         	call	_sendMessage4
 10797   0060E4  D6F3               	goto	l25105
 10798   0060E6                     l25149:
 10799   0060E6  0101               	movlb	1	; () banked
 10800   0060E8  EE20 F001          	lfsr	2,1
 10801   0060EC  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 10802   0060EE  26D9               	addwf	fsr2l,f,c
 10803   0060F0  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10804   0060F2  22DA               	addwfc	fsr2h,f,c
 10805   0060F4  50DF               	movf	indf2,w,c
 10806   0060F6  0102               	movlb	2	; () banked
 10807   0060F8  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10808   0060FA  6BCD               	clrf	(??_producerProcessMessage+1)& (0+255),b
 10809                           
 10810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10811                           ; Switch size 1, requested type "simple"
 10812                           ; Number of cases is 1, Range of values is 0 to 0
 10813                           ; switch strategies available:
 10814                           ; Name         Instructions Cycles
 10815                           ; simple_byte            4     3 (average)
 10816                           ;	Chosen strategy is simple_byte
 10817   0060FC  51CD               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 10818   0060FE  0A00               	xorlw	0	; case 0
 10819   006100  A4D8               	btfss	status,2,c
 10820   006102  D007               	goto	l25151
 10821                           
 10822                           ; BSR set to: 2
 10823                           ; Switch size 1, requested type "simple"
 10824                           ; Number of cases is 2, Range of values is 146 to 154
 10825                           ; switch strategies available:
 10826                           ; Name         Instructions Cycles
 10827                           ; simple_byte            7     4 (average)
 10828                           ;	Chosen strategy is simple_byte
 10829   006104  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10830   006106  0A92               	xorlw	146	; case 146
 10831   006108  B4D8               	btfsc	status,2,c
 10832   00610A  D6CF               	goto	l25101
 10833   00610C  0A08               	xorlw	8	; case 154
 10834   00610E  B4D8               	btfsc	status,2,c
 10835   006110  D6CC               	goto	l25101
 10836   006112                     l25151:
 10837                           
 10838                           ; BSR set to: 2
 10839                           ;../../VLCBlib_PIC/event_producer_happening.c: 171:     return NOT_PROCESSED;
 10840   006112  0E00               	movlw	0
 10841   006114  0012               	return		;funcret
 10842   006116                     __end_of_producerProcessMessage:
 10843                           	callstack 0
 10844                           
 10845 ;; *************** function _canProcessMessage *****************
 10846 ;; Defined at:
 10847 ;;		line 373 in file "../../VLCBlib_PIC/can18_ecan.c"
 10848 ;; Parameters:    Size  Location     Type
 10849 ;;  m               2   63[BANK1 ] PTR struct Message
 10850 ;;		 -> poll@m(9), 
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      enum E12966
 10855 ;; Registers used:
 10856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10862 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10864 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10865 ;;      Totals:         0       0       2       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10866 ;;Total ram usage:        4 bytes
 10867 ;; Hardware stack levels used: 1
 10868 ;; Hardware stack levels required when called: 17
 10869 ;; This function calls:
 10870 ;;		_sendMessage5
 10871 ;; This function is called by:
 10872 ;;		_poll
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text21
 10877   009FF4                     __ptext21:
 10878                           	callstack 0
 10879   009FF4                     _canProcessMessage:
 10880                           	callstack 12
 10881                           
 10882                           ;../../VLCBlib_PIC/can18_ecan.c: 375:     if (m->len < 3) return NOT_PROCESSED;
 10883                           
 10884                           ;incstack = 0
 10885   009FF4  C1FD  FFD9         	movff	canProcessMessage@m,fsr2l
 10886   009FF8  C1FE  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10887   009FFC  0E03               	movlw	3
 10888   009FFE  60DF               	cpfslt	indf2,c
 10889   00A000  D002               	goto	l24643
 10890   00A002                     u26300:
 10891   00A002  0E00               	movlw	0
 10892   00A004  0012               	return	
 10893   00A006                     l24643:
 10894                           
 10895                           ;../../VLCBlib_PIC/can18_ecan.c: 376:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10896   00A006  0101               	movlb	1	; () banked
 10897   00A008  EE20 F002          	lfsr	2,2
 10898   00A00C  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10899   00A00E  26D9               	addwf	fsr2l,f,c
 10900   00A010  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10901   00A012  22DA               	addwfc	fsr2h,f,c
 10902   00A014  50DE               	movf	postinc2,w,c
 10903   00A016  0100               	movlb	0	; () banked
 10904   00A018  19B5               	xorwf	(_nn+1)& (0+255),w,b
 10905   00A01A  A4D8               	btfss	status,2,c
 10906   00A01C  D7F2               	goto	u26300
 10907                           
 10908                           ; BSR set to: 0
 10909                           ;../../VLCBlib_PIC/can18_ecan.c: 377:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10910   00A01E  0101               	movlb	1	; () banked
 10911   00A020  EE20 F003          	lfsr	2,3
 10912   00A024  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10913   00A026  26D9               	addwf	fsr2l,f,c
 10914   00A028  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10915   00A02A  22DA               	addwfc	fsr2h,f,c
 10916   00A02C  0100               	movlb	0	; () banked
 10917   00A02E  51B4               	movf	_nn& (0+255),w,b
 10918   00A030  18DE               	xorwf	postinc2,w,c
 10919   00A032  A4D8               	btfss	status,2,c
 10920   00A034  D7E6               	goto	u26300
 10921   00A036  D018               	goto	l24673
 10922   00A038                     l24655:
 10923                           
 10924                           ;../../VLCBlib_PIC/can18_ecan.c: 383:             return PROCESSED;
 10925   00A038  0E01               	movlw	1
 10926   00A03A  0012               	return	
 10927   00A03C                     l24659:
 10928                           
 10929                           ; BSR set to: 2
 10930                           ;../../VLCBlib_PIC/can18_ecan.c: 385:             if (m->len < 4) {
 10931   00A03C  C1FD  FFD9         	movff	canProcessMessage@m,fsr2l
 10932   00A040  C1FE  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10933   00A044  0E04               	movlw	4
 10934   00A046  60DF               	cpfslt	indf2,c
 10935   00A048  D7F7               	goto	l24655
 10936                           
 10937                           ; BSR set to: 2
 10938                           ;../../VLCBlib_PIC/can18_ecan.c: 387:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_CANID, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10939   00A04A  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10940   00A04E  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10941   00A052  0E75               	movlw	117
 10942   00A054  0101               	movlb	1	; () banked
 10943   00A056  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10944   00A058  0E01               	movlw	1
 10945   00A05A  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10946   00A05C  0E01               	movlw	1
 10947   00A05E  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10948   00A060  0EAF               	movlw	175
 10949   00A062  EC25  F061         	call	_sendMessage5
 10950   00A066  D7E8               	goto	l24655
 10951   00A068                     l24673:
 10952                           
 10953                           ; BSR set to: 0
 10954   00A068  0101               	movlb	1	; () banked
 10955   00A06A  EE20 F001          	lfsr	2,1
 10956   00A06E  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10957   00A070  26D9               	addwf	fsr2l,f,c
 10958   00A072  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10959   00A074  22DA               	addwfc	fsr2h,f,c
 10960   00A076  50DF               	movf	indf2,w,c
 10961   00A078  0102               	movlb	2	; () banked
 10962   00A07A  6FCC               	movwf	??_canProcessMessage& (0+255),b
 10963   00A07C  6BCD               	clrf	(??_canProcessMessage+1)& (0+255),b
 10964                           
 10965                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10966                           ; Switch size 1, requested type "simple"
 10967                           ; Number of cases is 1, Range of values is 0 to 0
 10968                           ; switch strategies available:
 10969                           ; Name         Instructions Cycles
 10970                           ; simple_byte            4     3 (average)
 10971                           ;	Chosen strategy is simple_byte
 10972   00A07E  51CD               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10973   00A080  0A00               	xorlw	0	; case 0
 10974   00A082  A4D8               	btfss	status,2,c
 10975   00A084  D7BE               	goto	u26300
 10976                           
 10977                           ; BSR set to: 2
 10978                           ; Switch size 1, requested type "simple"
 10979                           ; Number of cases is 2, Range of values is 93 to 117
 10980                           ; switch strategies available:
 10981                           ; Name         Instructions Cycles
 10982                           ; simple_byte            7     4 (average)
 10983                           ;	Chosen strategy is simple_byte
 10984   00A086  51CC               	movf	??_canProcessMessage& (0+255),w,b
 10985   00A088  0A5D               	xorlw	93	; case 93
 10986   00A08A  B4D8               	btfsc	status,2,c
 10987   00A08C  D7D5               	goto	l24655
 10988   00A08E  0A28               	xorlw	40	; case 117
 10989   00A090  B4D8               	btfsc	status,2,c
 10990   00A092  D7D4               	goto	l24659
 10991   00A094  D7B6               	goto	u26300
 10992   00A096                     __end_of_canProcessMessage:
 10993                           	callstack 0
 10994                           
 10995 ;; *************** function _nvProcessMessage *****************
 10996 ;; Defined at:
 10997 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 10998 ;; Parameters:    Size  Location     Type
 10999 ;;  m               2   63[BANK1 ] PTR struct Message
 11000 ;;		 -> poll@m(9), 
 11001 ;; Auto vars:     Size  Location     Type
 11002 ;;  valueOrError    2    2[BANK2 ] short 
 11003 ;; Return value:  Size  Location     Type
 11004 ;;                  1    wreg      enum E12799
 11005 ;; Registers used:
 11006 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11007 ;; Tracked objects:
 11008 ;;		On entry : 0/0
 11009 ;;		On exit  : 0/0
 11010 ;;		Unchanged: 0/0
 11011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11012 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11013 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11014 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11015 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11016 ;;Total ram usage:        6 bytes
 11017 ;; Hardware stack levels used: 1
 11018 ;; Hardware stack levels required when called: 27
 11019 ;; This function calls:
 11020 ;;		_findServiceIndex
 11021 ;;		_getNV
 11022 ;;		_sendMessage2
 11023 ;;		_sendMessage3
 11024 ;;		_sendMessage4
 11025 ;;		_sendMessage5
 11026 ;;		_setNV
 11027 ;;		_startTimedResponse
 11028 ;; This function is called by:
 11029 ;;		_poll
 11030 ;; This function uses a non-reentrant model
 11031 ;;
 11032                           
 11033                           	psect	text22
 11034   004816                     __ptext22:
 11035                           	callstack 0
 11036   004816                     _nvProcessMessage:
 11037                           	callstack 2
 11038                           
 11039                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 11040                           
 11041                           ;incstack = 0
 11042   004816  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 11043   00481A  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11044   00481E  0E03               	movlw	3
 11045   004820  60DF               	cpfslt	indf2,c
 11046   004822  D002               	goto	l24345
 11047   004824                     u26040:
 11048                           
 11049                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 11050   004824  0E00               	movlw	0
 11051   004826  0012               	return	
 11052   004828                     l24345:
 11053                           
 11054                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11055   004828  0101               	movlb	1	; () banked
 11056   00482A  EE20 F002          	lfsr	2,2
 11057   00482E  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11058   004830  26D9               	addwf	fsr2l,f,c
 11059   004832  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11060   004834  22DA               	addwfc	fsr2h,f,c
 11061   004836  50DE               	movf	postinc2,w,c
 11062   004838  0100               	movlb	0	; () banked
 11063   00483A  19B5               	xorwf	(_nn+1)& (0+255),w,b
 11064   00483C  A4D8               	btfss	status,2,c
 11065   00483E  D7F2               	goto	u26040
 11066                           
 11067                           ; BSR set to: 0
 11068                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11069   004840  0101               	movlb	1	; () banked
 11070   004842  EE20 F003          	lfsr	2,3
 11071   004846  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11072   004848  26D9               	addwf	fsr2l,f,c
 11073   00484A  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11074   00484C  22DA               	addwfc	fsr2h,f,c
 11075   00484E  0100               	movlb	0	; () banked
 11076   004850  51B4               	movf	_nn& (0+255),w,b
 11077   004852  18DE               	xorwf	postinc2,w,c
 11078   004854  A4D8               	btfss	status,2,c
 11079   004856  D7E6               	goto	u26040
 11080   004858  D161               	goto	l24467
 11081   00485A                     l24357:
 11082                           
 11083                           ; BSR set to: 2
 11084                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 11085   00485A  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 11086   00485E  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11087   004862  0E04               	movlw	4
 11088   004864  60DF               	cpfslt	indf2,c
 11089   004866  D01D               	goto	l24367
 11090                           
 11091                           ; BSR set to: 2
 11092                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 11093   004868  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11094   00486C  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11095   004870  0E01               	movlw	1
 11096   004872  0100               	movlb	0	; () banked
 11097   004874  6FA9               	movwf	sendMessage3@data3& (0+255),b
 11098   004876  0E6F               	movlw	111
 11099   004878  EC83  F061         	call	_sendMessage3
 11100                           
 11101                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11102   00487C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11103   004880  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11104   004884  0E71               	movlw	113
 11105   004886  0101               	movlb	1	; () banked
 11106   004888  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11107   00488A  0E01               	movlw	1
 11108   00488C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11109   00488E  0E01               	movlw	1
 11110   004890  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11111   004892  0EAF               	movlw	175
 11112   004894  EC25  F061         	call	_sendMessage5
 11113   004898                     l24361:
 11114                           
 11115                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 11116   004898  0101               	movlb	1	; () banked
 11117   00489A  4BA7               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 11118   00489C  2BA8               	incf	(_nvDiagnostics+5)& (0+255),f,b
 11119   00489E                     l24363:
 11120                           
 11121                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 11122   00489E  0E01               	movlw	1
 11123   0048A0  0012               	return	
 11124   0048A2                     l24367:
 11125                           
 11126                           ; BSR set to: 2
 11127                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 11128   0048A2  0101               	movlb	1	; () banked
 11129   0048A4  EE20 F004          	lfsr	2,4
 11130   0048A8  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11131   0048AA  26D9               	addwf	fsr2l,f,c
 11132   0048AC  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11133   0048AE  22DA               	addwfc	fsr2h,f,c
 11134   0048B0  50DF               	movf	indf2,w,c
 11135   0048B2  ECB0  F05F         	call	_getNV
 11136   0048B6  C08D  F2CE         	movff	?_getNV,nvProcessMessage@valueOrError
 11137   0048BA  C08E  F2CF         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11138                           
 11139                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 11140   0048BE  0102               	movlb	2	; () banked
 11141   0048C0  AFCF               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11142   0048C2  D01D               	goto	l24379
 11143                           
 11144                           ; BSR set to: 2
 11145                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11146   0048C4  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11147   0048C8  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11148   0048CC  51CE               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11149   0048CE  0800               	sublw	0
 11150   0048D0  0100               	movlb	0	; () banked
 11151   0048D2  6FA9               	movwf	sendMessage3@data3& (0+255),b
 11152   0048D4  0E6F               	movlw	111
 11153   0048D6  EC83  F061         	call	_sendMessage3
 11154                           
 11155                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11156   0048DA  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11157   0048DE  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11158   0048E2  0E71               	movlw	113
 11159   0048E4  0101               	movlb	1	; () banked
 11160   0048E6  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11161   0048E8  0E01               	movlw	1
 11162   0048EA  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11163   0048EC  0102               	movlb	2	; () banked
 11164   0048EE  51CE               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11165   0048F0  0800               	sublw	0
 11166   0048F2  0101               	movlb	1	; () banked
 11167   0048F4  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11168   0048F6  0EAF               	movlw	175
 11169   0048F8  EC25  F061         	call	_sendMessage5
 11170   0048FC  D7CD               	goto	l24361
 11171   0048FE                     l24379:
 11172                           
 11173                           ; BSR set to: 2
 11174                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 11175   0048FE  0101               	movlb	1	; () banked
 11176   004900  4BA5               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11177   004902  2BA6               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11178                           
 11179                           ; BSR set to: 1
 11180                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11181   004904  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 11182   004908  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 11183   00490C  EE20 F004          	lfsr	2,4
 11184   004910  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11185   004912  26D9               	addwf	fsr2l,f,c
 11186   004914  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11187   004916  22DA               	addwfc	fsr2h,f,c
 11188   004918  50DF               	movf	indf2,w,c
 11189   00491A  6FC8               	movwf	sendMessage4@data3& (0+255),b
 11190   00491C  C2CE  F1C9         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11191   004920  0E97               	movlw	151
 11192   004922  EC3D  F061         	call	_sendMessage4
 11193                           
 11194                           ;../../VLCBlib_PIC/nv.c: 278:             if (m->bytes[2] == 0) {
 11195   004926  0101               	movlb	1	; () banked
 11196   004928  EE20 F004          	lfsr	2,4
 11197   00492C  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11198   00492E  26D9               	addwf	fsr2l,f,c
 11199   004930  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11200   004932  22DA               	addwfc	fsr2h,f,c
 11201   004934  50DF               	movf	indf2,w,c
 11202   004936  A4D8               	btfss	status,2,c
 11203   004938  D7B2               	goto	l24363
 11204                           
 11205                           ; BSR set to: 1
 11206                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 11207   00493A  0E02               	movlw	2
 11208   00493C  ECFC  F057         	call	_findServiceIndex
 11209   004940  0100               	movlb	0	; () banked
 11210   004942  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11211   004944  0E66               	movlw	low _nvTRnvrdCallback
 11212   004946  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11213   004948  0EBE               	movlw	high _nvTRnvrdCallback
 11214   00494A  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11215   00494C  0E06               	movlw	6
 11216   00494E  EC53  F05F         	call	_startTimedResponse
 11217   004952  D7A5               	goto	l24363
 11218   004954                     l24391:
 11219                           
 11220                           ; BSR set to: 2
 11221                           ;../../VLCBlib_PIC/nv.c: 285:             if (m->len < 5) {
 11222   004954  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 11223   004958  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11224   00495C  0E05               	movlw	5
 11225   00495E  60DF               	cpfslt	indf2,c
 11226   004960  D00F               	goto	l24401
 11227                           
 11228                           ; BSR set to: 2
 11229                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11230   004962  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11231   004966  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11232   00496A  0E96               	movlw	150
 11233   00496C  0101               	movlb	1	; () banked
 11234   00496E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11235   004970  0E01               	movlw	1
 11236   004972  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11237   004974  0E01               	movlw	1
 11238   004976  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11239   004978  0EAF               	movlw	175
 11240   00497A  EC25  F061         	call	_sendMessage5
 11241   00497E  D78C               	goto	l24361
 11242   004980                     l24401:
 11243                           
 11244                           ; BSR set to: 2
 11245                           ;../../VLCBlib_PIC/nv.c: 295:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11246   004980  0101               	movlb	1	; () banked
 11247   004982  EE20 F005          	lfsr	2,5
 11248   004986  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11249   004988  26D9               	addwf	fsr2l,f,c
 11250   00498A  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11251   00498C  22DA               	addwfc	fsr2h,f,c
 11252   00498E  50DF               	movf	indf2,w,c
 11253   004990  6FF8               	movwf	setNV@value& (0+255),b
 11254   004992  EE20 F004          	lfsr	2,4
 11255   004996  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11256   004998  26D9               	addwf	fsr2l,f,c
 11257   00499A  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11258   00499C  22DA               	addwfc	fsr2h,f,c
 11259   00499E  50DF               	movf	indf2,w,c
 11260   0049A0  EC5D  F056         	call	_setNV
 11261   0049A4  0102               	movlb	2	; () banked
 11262   0049A6  6FCC               	movwf	??_nvProcessMessage& (0+255),b
 11263   0049A8  51CC               	movf	??_nvProcessMessage& (0+255),w,b
 11264   0049AA  6FCE               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11265   0049AC  6BCF               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11266                           
 11267                           ; BSR set to: 2
 11268                           ;../../VLCBlib_PIC/nv.c: 296:             if (valueOrError >0) {
 11269   0049AE  BFCF               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11270   0049B0  D00F               	goto	l24413
 11271   0049B2  51CF               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11272   0049B4  E103               	bnz	u26110
 11273   0049B6  05CE               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11274   0049B8  A0D8               	btfss	status,0,c
 11275   0049BA  D00A               	goto	l24413
 11276   0049BC                     u26110:
 11277                           
 11278                           ; BSR set to: 2
 11279                           ;../../VLCBlib_PIC/nv.c: 297:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11280   0049BC  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11281   0049C0  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11282   0049C4  C2CE  F0A9         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11283   0049C8  0E6F               	movlw	111
 11284   0049CA  EC83  F061         	call	_sendMessage3
 11285   0049CE  D764               	goto	l24361
 11286   0049D0                     l24413:
 11287                           
 11288                           ; BSR set to: 2
 11289                           ;../../VLCBlib_PIC/nv.c: 304:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 11290   0049D0  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 11291   0049D4  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 11292   0049D8  0E59               	movlw	89
 11293   0049DA  ECF5  F060         	call	_sendMessage2
 11294                           
 11295                           ;../../VLCBlib_PIC/nv.c: 306:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 11296   0049DE  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11297   0049E2  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11298   0049E6  0E96               	movlw	150
 11299   0049E8  0101               	movlb	1	; () banked
 11300   0049EA  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11301   0049EC  0E01               	movlw	1
 11302   0049EE  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11303   0049F0  0E00               	movlw	0
 11304   0049F2  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11305   0049F4  0EAF               	movlw	175
 11306   0049F6  EC25  F061         	call	_sendMessage5
 11307   0049FA  D751               	goto	l24363
 11308   0049FC                     l24419:
 11309                           
 11310                           ; BSR set to: 2
 11311                           ;../../VLCBlib_PIC/nv.c: 311:             if (m->len < 5) {
 11312   0049FC  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 11313   004A00  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11314   004A04  0E05               	movlw	5
 11315   004A06  60DF               	cpfslt	indf2,c
 11316   004A08  D00F               	goto	l24429
 11317                           
 11318                           ; BSR set to: 2
 11319                           ;../../VLCBlib_PIC/nv.c: 313:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11320   004A0A  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11321   004A0E  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11322   004A12  0E8E               	movlw	142
 11323   004A14  0101               	movlb	1	; () banked
 11324   004A16  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11325   004A18  0E01               	movlw	1
 11326   004A1A  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11327   004A1C  0E01               	movlw	1
 11328   004A1E  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11329   004A20  0EAF               	movlw	175
 11330   004A22  EC25  F061         	call	_sendMessage5
 11331   004A26  D738               	goto	l24361
 11332   004A28                     l24429:
 11333                           
 11334                           ; BSR set to: 2
 11335                           ;../../VLCBlib_PIC/nv.c: 319:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11336   004A28  0101               	movlb	1	; () banked
 11337   004A2A  EE20 F005          	lfsr	2,5
 11338   004A2E  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11339   004A30  26D9               	addwf	fsr2l,f,c
 11340   004A32  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11341   004A34  22DA               	addwfc	fsr2h,f,c
 11342   004A36  50DF               	movf	indf2,w,c
 11343   004A38  6FF8               	movwf	setNV@value& (0+255),b
 11344   004A3A  EE20 F004          	lfsr	2,4
 11345   004A3E  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11346   004A40  26D9               	addwf	fsr2l,f,c
 11347   004A42  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11348   004A44  22DA               	addwfc	fsr2h,f,c
 11349   004A46  50DF               	movf	indf2,w,c
 11350   004A48  EC5D  F056         	call	_setNV
 11351   004A4C  0102               	movlb	2	; () banked
 11352   004A4E  6FCC               	movwf	??_nvProcessMessage& (0+255),b
 11353   004A50  51CC               	movf	??_nvProcessMessage& (0+255),w,b
 11354   004A52  6FCE               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11355   004A54  6BCF               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11356                           
 11357                           ; BSR set to: 2
 11358                           ;../../VLCBlib_PIC/nv.c: 320:             if (valueOrError >0) {
 11359   004A56  BFCF               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11360   004A58  D01D               	goto	l24441
 11361   004A5A  51CF               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11362   004A5C  E103               	bnz	u26130
 11363   004A5E  05CE               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11364   004A60  A0D8               	btfss	status,0,c
 11365   004A62  D018               	goto	l24441
 11366   004A64                     u26130:
 11367                           
 11368                           ; BSR set to: 2
 11369                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11370   004A64  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11371   004A68  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11372   004A6C  C2CE  F0A9         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11373   004A70  0E6F               	movlw	111
 11374   004A72  EC83  F061         	call	_sendMessage3
 11375                           
 11376                           ;../../VLCBlib_PIC/nv.c: 322:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 11377   004A76  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11378   004A7A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11379   004A7E  0E8E               	movlw	142
 11380   004A80  0101               	movlb	1	; () banked
 11381   004A82  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11382   004A84  0E01               	movlw	1
 11383   004A86  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11384   004A88  C2CE  F1CA         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 11385   004A8C  0EAF               	movlw	175
 11386   004A8E  EC25  F061         	call	_sendMessage5
 11387   004A92  D702               	goto	l24361
 11388   004A94                     l24441:
 11389                           
 11390                           ; BSR set to: 2
 11391                           ;../../VLCBlib_PIC/nv.c: 328:             valueOrError = getNV(m->bytes[2]);
 11392   004A94  0101               	movlb	1	; () banked
 11393   004A96  EE20 F004          	lfsr	2,4
 11394   004A9A  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11395   004A9C  26D9               	addwf	fsr2l,f,c
 11396   004A9E  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11397   004AA0  22DA               	addwfc	fsr2h,f,c
 11398   004AA2  50DF               	movf	indf2,w,c
 11399   004AA4  ECB0  F05F         	call	_getNV
 11400   004AA8  C08D  F2CE         	movff	?_getNV,nvProcessMessage@valueOrError
 11401   004AAC  C08E  F2CF         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11402                           
 11403                           ;../../VLCBlib_PIC/nv.c: 329:             if (valueOrError < 0) {
 11404   004AB0  0102               	movlb	2	; () banked
 11405   004AB2  AFCF               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11406   004AB4  D01D               	goto	l24453
 11407                           
 11408                           ; BSR set to: 2
 11409                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11410   004AB6  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 11411   004ABA  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 11412   004ABE  51CE               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11413   004AC0  0800               	sublw	0
 11414   004AC2  0100               	movlb	0	; () banked
 11415   004AC4  6FA9               	movwf	sendMessage3@data3& (0+255),b
 11416   004AC6  0E6F               	movlw	111
 11417   004AC8  EC83  F061         	call	_sendMessage3
 11418                           
 11419                           ;../../VLCBlib_PIC/nv.c: 331:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11420   004ACC  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11421   004AD0  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11422   004AD4  0E8E               	movlw	142
 11423   004AD6  0101               	movlb	1	; () banked
 11424   004AD8  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11425   004ADA  0E01               	movlw	1
 11426   004ADC  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11427   004ADE  0102               	movlb	2	; () banked
 11428   004AE0  51CE               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11429   004AE2  0800               	sublw	0
 11430   004AE4  0101               	movlb	1	; () banked
 11431   004AE6  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11432   004AE8  0EAF               	movlw	175
 11433   004AEA  EC25  F061         	call	_sendMessage5
 11434   004AEE  D6D4               	goto	l24361
 11435   004AF0                     l24453:
 11436                           
 11437                           ; BSR set to: 2
 11438                           ;../../VLCBlib_PIC/nv.c: 337:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11439   004AF0  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 11440   004AF4  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 11441   004AF8  0101               	movlb	1	; () banked
 11442   004AFA  EE20 F004          	lfsr	2,4
 11443   004AFE  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11444   004B00  26D9               	addwf	fsr2l,f,c
 11445   004B02  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11446   004B04  22DA               	addwfc	fsr2h,f,c
 11447   004B06  50DF               	movf	indf2,w,c
 11448   004B08  6FC8               	movwf	sendMessage4@data3& (0+255),b
 11449   004B0A  C2CE  F1C9         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11450   004B0E  0E97               	movlw	151
 11451   004B10  EC3D  F061         	call	_sendMessage4
 11452                           
 11453                           ;../../VLCBlib_PIC/nv.c: 339:             nvDiagnostics[0x01].asUint++;
 11454   004B14  0101               	movlb	1	; () banked
 11455   004B16  4BA5               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11456   004B18  2BA6               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11457   004B1A  D6C1               	goto	l24363
 11458   004B1C                     l24467:
 11459                           
 11460                           ; BSR set to: 0
 11461   004B1C  0101               	movlb	1	; () banked
 11462   004B1E  EE20 F001          	lfsr	2,1
 11463   004B22  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 11464   004B24  26D9               	addwf	fsr2l,f,c
 11465   004B26  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11466   004B28  22DA               	addwfc	fsr2h,f,c
 11467   004B2A  50DF               	movf	indf2,w,c
 11468   004B2C  0102               	movlb	2	; () banked
 11469   004B2E  6FCC               	movwf	??_nvProcessMessage& (0+255),b
 11470   004B30  6BCD               	clrf	(??_nvProcessMessage+1)& (0+255),b
 11471                           
 11472                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11473                           ; Switch size 1, requested type "simple"
 11474                           ; Number of cases is 1, Range of values is 0 to 0
 11475                           ; switch strategies available:
 11476                           ; Name         Instructions Cycles
 11477                           ; simple_byte            4     3 (average)
 11478                           ;	Chosen strategy is simple_byte
 11479   004B32  51CD               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 11480   004B34  0A00               	xorlw	0	; case 0
 11481   004B36  A4D8               	btfss	status,2,c
 11482   004B38  D675               	goto	u26040
 11483                           
 11484                           ; BSR set to: 2
 11485                           ; Switch size 1, requested type "simple"
 11486                           ; Number of cases is 3, Range of values is 113 to 150
 11487                           ; switch strategies available:
 11488                           ; Name         Instructions Cycles
 11489                           ; simple_byte           10     6 (average)
 11490                           ;	Chosen strategy is simple_byte
 11491   004B3A  51CC               	movf	??_nvProcessMessage& (0+255),w,b
 11492   004B3C  0A71               	xorlw	113	; case 113
 11493   004B3E  B4D8               	btfsc	status,2,c
 11494   004B40  D68C               	goto	l24357
 11495   004B42  0AFF               	xorlw	255	; case 142
 11496   004B44  B4D8               	btfsc	status,2,c
 11497   004B46  D75A               	goto	l24419
 11498   004B48  0A18               	xorlw	24	; case 150
 11499   004B4A  B4D8               	btfsc	status,2,c
 11500   004B4C  D703               	goto	l24391
 11501   004B4E  D66A               	goto	u26040
 11502   004B50                     __end_of_nvProcessMessage:
 11503                           	callstack 0
 11504                           
 11505 ;; *************** function _mnsProcessMessage *****************
 11506 ;; Defined at:
 11507 ;;		line 356 in file "../../VLCBlib_PIC/mns.c"
 11508 ;; Parameters:    Size  Location     Type
 11509 ;;  m               2   63[BANK1 ] PTR struct Message
 11510 ;;		 -> poll@m(9), 
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;  d               2   32[BANK2 ] PTR struct DiagnosticVal
 11513 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 11514 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 11515 ;;  newMode         1   34[BANK2 ] unsigned char 
 11516 ;;  i               1   30[BANK2 ] unsigned char 
 11517 ;;  flags           1    0        unsigned char 
 11518 ;; Return value:  Size  Location     Type
 11519 ;;                  1    wreg      enum E12799
 11520 ;; Registers used:
 11521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11522 ;; Tracked objects:
 11523 ;;		On entry : 0/0
 11524 ;;		On exit  : 0/0
 11525 ;;		Unchanged: 0/0
 11526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11527 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;      Temps:          0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11530 ;;      Totals:         0       0       2      35       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11531 ;;Total ram usage:       37 bytes
 11532 ;; Hardware stack levels used: 1
 11533 ;; Hardware stack levels required when called: 27
 11534 ;; This function calls:
 11535 ;;		NULL
 11536 ;;		_ackGetDiagnostic
 11537 ;;		_bootEsdData
 11538 ;;		_canEsdData
 11539 ;;		_canGetDiagnostic
 11540 ;;		_consumer2QEsdData
 11541 ;;		_consumer2QGetDiagnostic
 11542 ;;		_factoryReset
 11543 ;;		_findServiceIndex
 11544 ;;		_getParameter
 11545 ;;		_getParameterFlags
 11546 ;;		_mnsGetDiagnostic
 11547 ;;		_nvGetDiagnostic
 11548 ;;		_nvGetESDdata
 11549 ;;		_producerEsdData
 11550 ;;		_producerGetDiagnostic
 11551 ;;		_rebuildHashtable
 11552 ;;		_sendMessage2
 11553 ;;		_sendMessage3
 11554 ;;		_sendMessage4
 11555 ;;		_sendMessage5
 11556 ;;		_sendMessage6
 11557 ;;		_sendMessage7
 11558 ;;		_setLEDsByMode
 11559 ;;		_startTimedResponse
 11560 ;;		_teachGetDiagnostic
 11561 ;;		_teachGetESDdata
 11562 ;;		_writeNVM
 11563 ;; This function is called by:
 11564 ;;		_poll
 11565 ;; This function uses a non-reentrant model
 11566 ;;
 11567                           
 11568                           	psect	text23
 11569   001794                     __ptext23:
 11570                           	callstack 0
 11571   001794                     _mnsProcessMessage:
 11572                           	callstack 2
 11573                           
 11574                           ;../../VLCBlib_PIC/mns.c: 357:     uint8_t i;;../../VLCBlib_PIC/mns.c: 358:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 360:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 365: 
      +                              if (mode_state == MODE_SETUP) {
 11575                           
 11576                           ;incstack = 0
 11577   001794  0100               	movlb	0	; () banked
 11578   001796  51C4               	movf	_mode_state& (0+255),w,b
 11579   001798  B4D8               	btfsc	status,2,c
 11580   00179A  D0BC               	goto	l23907
 11581   00179C  D12A               	goto	l23953
 11582   00179E                     l23863:
 11583                           
 11584                           ; BSR set to: 2
 11585                           ;../../VLCBlib_PIC/mns.c: 368:                 if (m->len < 3) {
 11586   00179E  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11587   0017A2  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11588   0017A6  0E03               	movlw	3
 11589   0017A8  60DF               	cpfslt	indf2,c
 11590   0017AA  D00F               	goto	l23867
 11591                           
 11592                           ; BSR set to: 2
 11593                           ;../../VLCBlib_PIC/mns.c: 370:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_SNN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11594   0017AC  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11595   0017B0  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11596   0017B4  0E42               	movlw	66
 11597   0017B6  0101               	movlb	1	; () banked
 11598   0017B8  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11599   0017BA  0E01               	movlw	1
 11600   0017BC  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11601   0017BE  0E01               	movlw	1
 11602   0017C0  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11603   0017C2  0EAF               	movlw	175
 11604   0017C4  EC25  F061         	call	_sendMessage5
 11605                           
 11606                           ;../../VLCBlib_PIC/mns.c: 372:                 } else {
 11607   0017C8  D03C               	goto	l23883
 11608   0017CA                     l23867:
 11609                           
 11610                           ; BSR set to: 2
 11611                           ;../../VLCBlib_PIC/mns.c: 373:                     nn.bytes.hi = m->bytes[0];
 11612   0017CA  0101               	movlb	1	; () banked
 11613   0017CC  EE20 F002          	lfsr	2,2
 11614   0017D0  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11615   0017D2  26D9               	addwf	fsr2l,f,c
 11616   0017D4  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11617   0017D6  22DA               	addwfc	fsr2h,f,c
 11618   0017D8  50DF               	movf	indf2,w,c
 11619   0017DA  0100               	movlb	0	; () banked
 11620   0017DC  6FB5               	movwf	(_nn+1)& (0+255),b
 11621                           
 11622                           ;../../VLCBlib_PIC/mns.c: 374:                     nn.bytes.lo = m->bytes[1];
 11623   0017DE  0101               	movlb	1	; () banked
 11624   0017E0  EE20 F003          	lfsr	2,3
 11625   0017E4  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11626   0017E6  26D9               	addwf	fsr2l,f,c
 11627   0017E8  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11628   0017EA  22DA               	addwfc	fsr2h,f,c
 11629   0017EC  50DF               	movf	indf2,w,c
 11630   0017EE  0100               	movlb	0	; () banked
 11631   0017F0  6FB4               	movwf	_nn& (0+255),b
 11632                           
 11633                           ; BSR set to: 0
 11634                           ;../../VLCBlib_PIC/mns.c: 375:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 11635   0017F2  0EFD               	movlw	253
 11636   0017F4  6FA4               	movwf	writeNVM@index& (0+255),b
 11637   0017F6  0E03               	movlw	3
 11638   0017F8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11639   0017FA  0E00               	movlw	0
 11640   0017FC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11641   0017FE  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 11642   001802  0E00               	movlw	0
 11643   001804  EC9F  F05D         	call	_writeNVM
 11644                           
 11645                           ;../../VLCBlib_PIC/mns.c: 376:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 11646   001808  0EFC               	movlw	252
 11647   00180A  0100               	movlb	0	; () banked
 11648   00180C  6FA4               	movwf	writeNVM@index& (0+255),b
 11649   00180E  0E03               	movlw	3
 11650   001810  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11651   001812  0E00               	movlw	0
 11652   001814  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11653   001816  C0B4  F0A7         	movff	_nn,writeNVM@value
 11654   00181A  0E00               	movlw	0
 11655   00181C  EC9F  F05D         	call	_writeNVM
 11656                           
 11657                           ;../../VLCBlib_PIC/mns.c: 378:                     mode_state = MODE_NORMAL;
 11658   001820  0E01               	movlw	1
 11659   001822  0100               	movlb	0	; () banked
 11660   001824  6FC4               	movwf	_mode_state& (0+255),b
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;../../VLCBlib_PIC/mns.c: 381:                     rebuildHashtable();
 11664   001826  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 11665                           
 11666                           ;../../VLCBlib_PIC/mns.c: 384:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 11667   00182A  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 11668   00182E  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 11669   001832  0E52               	movlw	82
 11670   001834  ECF5  F060         	call	_sendMessage2
 11671                           
 11672                           ;../../VLCBlib_PIC/mns.c: 386:                     mnsDiagnostics[0x05].asUint++;
 11673   001838  0101               	movlb	1	; () banked
 11674   00183A  4B96               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 11675   00183C  2B97               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 11676   00183E                     l23881:
 11677                           
 11678                           ;../../VLCBlib_PIC/mns.c: 389:                     setLEDsByMode();
 11679   00183E  EC94  F060         	call	_setLEDsByMode	;wreg free
 11680   001842                     l23883:
 11681                           
 11682                           ;../../VLCBlib_PIC/mns.c: 391:                 return PROCESSED;
 11683   001842  0E01               	movlw	1
 11684   001844  0012               	return	
 11685   001846                     l23887:
 11686                           
 11687                           ; BSR set to: 2
 11688                           ;../../VLCBlib_PIC/mns.c: 393:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 11689   001846  0EA5               	movlw	165
 11690   001848  0101               	movlb	1	; () banked
 11691   00184A  6FC6               	movwf	sendMessage7@data1& (0+255),b
 11692   00184C  0E61               	movlw	97
 11693   00184E  6FC7               	movwf	sendMessage7@data2& (0+255),b
 11694   001850  0E20               	movlw	32
 11695   001852  6FC8               	movwf	sendMessage7@data3& (0+255),b
 11696   001854  0EFF               	movlw	255
 11697   001856  6FC9               	movwf	sendMessage7@data4& (0+255),b
 11698   001858  0E14               	movlw	20
 11699   00185A  6FCA               	movwf	sendMessage7@data5& (0+255),b
 11700   00185C  0E7F               	movlw	127
 11701   00185E  6FCB               	movwf	sendMessage7@data6& (0+255),b
 11702   001860  0E04               	movlw	4
 11703   001862  6FCC               	movwf	sendMessage7@data7& (0+255),b
 11704   001864  0EEF               	movlw	239
 11705   001866  EC0D  F061         	call	_sendMessage7
 11706   00186A  D7EB               	goto	l23883
 11707   00186C                     l23893:
 11708                           
 11709                           ; BSR set to: 2
 11710                           ;../../VLCBlib_PIC/mns.c: 398:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 11711   00186C  0E48               	movlw	72
 11712   00186E  6EF6               	movwf	tblptrl,c
 11713   001870                     	if	1	;There is more than 1 active tblptr byte
 11714   001870  0E08               	movlw	8
 11715   001872  6EF7               	movwf	tblptrh,c
 11716   001874                     	endif
 11717   001874                     	if	1	;There are 3 active tblptr bytes
 11718   001874  0E00               	movlw	0
 11719   001876  6EF8               	movwf	tblptru,c
 11720   001878                     	endif
 11721   001878  0008               	tblrd		*
 11722   00187A  CFF5 F1C6          	movff	tablat,sendMessage7@data1
 11723   00187E  0E49               	movlw	73
 11724   001880  6EF6               	movwf	tblptrl,c
 11725   001882  0E08               	movlw	8
 11726   001884  6EF7               	movwf	tblptrh,c
 11727   001886  0E00               	movlw	0
 11728   001888  6EF8               	movwf	tblptru,c
 11729   00188A  0008               	tblrd		*
 11730   00188C  CFF5 F1C7          	movff	tablat,sendMessage7@data2
 11731   001890  0E4A               	movlw	74
 11732   001892  6EF6               	movwf	tblptrl,c
 11733   001894  0E08               	movlw	8
 11734   001896  6EF7               	movwf	tblptrh,c
 11735   001898  0E00               	movlw	0
 11736   00189A  6EF8               	movwf	tblptru,c
 11737   00189C  0008               	tblrd		*
 11738   00189E  CFF5 F1C8          	movff	tablat,sendMessage7@data3
 11739   0018A2  0E4B               	movlw	75
 11740   0018A4  6EF6               	movwf	tblptrl,c
 11741   0018A6  0E08               	movlw	8
 11742   0018A8  6EF7               	movwf	tblptrh,c
 11743   0018AA  0E00               	movlw	0
 11744   0018AC  6EF8               	movwf	tblptru,c
 11745   0018AE  0008               	tblrd		*
 11746   0018B0  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 11747   0018B4  0E4C               	movlw	76
 11748   0018B6  6EF6               	movwf	tblptrl,c
 11749   0018B8  0E08               	movlw	8
 11750   0018BA  6EF7               	movwf	tblptrh,c
 11751   0018BC  0E00               	movlw	0
 11752   0018BE  6EF8               	movwf	tblptru,c
 11753   0018C0  0008               	tblrd		*
 11754   0018C2  CFF5 F1CA          	movff	tablat,sendMessage7@data5
 11755   0018C6  0E4D               	movlw	77
 11756   0018C8  6EF6               	movwf	tblptrl,c
 11757   0018CA  0E08               	movlw	8
 11758   0018CC  6EF7               	movwf	tblptrh,c
 11759   0018CE  0E00               	movlw	0
 11760   0018D0  6EF8               	movwf	tblptru,c
 11761   0018D2  0008               	tblrd		*
 11762   0018D4  CFF5 F1CB          	movff	tablat,sendMessage7@data6
 11763   0018D8  0E4E               	movlw	78
 11764   0018DA  6EF6               	movwf	tblptrl,c
 11765   0018DC  0E08               	movlw	8
 11766   0018DE  6EF7               	movwf	tblptrh,c
 11767   0018E0  0E00               	movlw	0
 11768   0018E2  6EF8               	movwf	tblptru,c
 11769   0018E4  0008               	tblrd		*
 11770   0018E6  CFF5 F1CC          	movff	tablat,sendMessage7@data7
 11771   0018EA  0EE2               	movlw	226
 11772   0018EC  EC0D  F061         	call	_sendMessage7
 11773   0018F0  D7A8               	goto	l23883
 11774   0018F2                     l23899:
 11775                           
 11776                           ; BSR set to: 2
 11777                           ;../../VLCBlib_PIC/mns.c: 402:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 11778   0018F2  0E00               	movlw	0
 11779   0018F4  0101               	movlb	1	; () banked
 11780   0018F6  6FC6               	movwf	sendMessage5@data1& (0+255),b
 11781   0018F8  0E00               	movlw	0
 11782   0018FA  6FC7               	movwf	sendMessage5@data2& (0+255),b
 11783   0018FC  0EA5               	movlw	165
 11784   0018FE  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11785   001900  0E20               	movlw	32
 11786   001902  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11787   001904  ECF7  F05B         	call	_getParameterFlags	;wreg free
 11788   001908  0101               	movlb	1	; () banked
 11789   00190A  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11790   00190C  0EB6               	movlw	182
 11791   00190E  EC25  F061         	call	_sendMessage5
 11792   001912  D797               	goto	l23883
 11793   001914                     l23907:
 11794                           
 11795                           ; BSR set to: 0
 11796   001914  0101               	movlb	1	; () banked
 11797   001916  EE20 F001          	lfsr	2,1
 11798   00191A  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11799   00191C  26D9               	addwf	fsr2l,f,c
 11800   00191E  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11801   001920  22DA               	addwfc	fsr2h,f,c
 11802   001922  50DF               	movf	indf2,w,c
 11803   001924  0102               	movlb	2	; () banked
 11804   001926  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11805   001928  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11806                           
 11807                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11808                           ; Switch size 1, requested type "simple"
 11809                           ; Number of cases is 1, Range of values is 0 to 0
 11810                           ; switch strategies available:
 11811                           ; Name         Instructions Cycles
 11812                           ; simple_byte            4     3 (average)
 11813                           ;	Chosen strategy is simple_byte
 11814   00192A  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11815   00192C  0A00               	xorlw	0	; case 0
 11816   00192E  A4D8               	btfss	status,2,c
 11817   001930  D00D               	goto	l23909
 11818                           
 11819                           ; BSR set to: 2
 11820                           ; Switch size 1, requested type "simple"
 11821                           ; Number of cases is 4, Range of values is 13 to 66
 11822                           ; switch strategies available:
 11823                           ; Name         Instructions Cycles
 11824                           ; simple_byte           13     7 (average)
 11825                           ;	Chosen strategy is simple_byte
 11826   001932  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11827   001934  0A0D               	xorlw	13	; case 13
 11828   001936  B4D8               	btfsc	status,2,c
 11829   001938  D7DC               	goto	l23899
 11830   00193A  0A1D               	xorlw	29	; case 16
 11831   00193C  B4D8               	btfsc	status,2,c
 11832   00193E  D783               	goto	l23887
 11833   001940  0A01               	xorlw	1	; case 17
 11834   001942  B4D8               	btfsc	status,2,c
 11835   001944  D793               	goto	l23893
 11836   001946  0A53               	xorlw	83	; case 66
 11837   001948  B4D8               	btfsc	status,2,c
 11838   00194A  D729               	goto	l23863
 11839   00194C                     l23909:
 11840                           
 11841                           ;../../VLCBlib_PIC/mns.c: 407:         return NOT_PROCESSED;
 11842   00194C  0E00               	movlw	0
 11843   00194E  0012               	return	
 11844   001950                     l23913:
 11845                           
 11846                           ; BSR set to: 2
 11847                           ;../../VLCBlib_PIC/mns.c: 412:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11848   001950  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11849   001954  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11850   001958  0EA5               	movlw	165
 11851   00195A  0101               	movlb	1	; () banked
 11852   00195C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11853   00195E  0E20               	movlw	32
 11854   001960  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11855   001962  ECF7  F05B         	call	_getParameterFlags	;wreg free
 11856   001966  0101               	movlb	1	; () banked
 11857   001968  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11858   00196A  0EB6               	movlw	182
 11859   00196C  EC25  F061         	call	_sendMessage5
 11860   001970  D768               	goto	l23883
 11861   001972                     l23919:
 11862                           
 11863                           ; BSR set to: 2
 11864                           ;../../VLCBlib_PIC/mns.c: 416:             if (m->len < 4) {
 11865   001972  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11866   001976  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11867   00197A  0E04               	movlw	4
 11868   00197C  60DF               	cpfslt	indf2,c
 11869   00197E  D00F               	goto	l23927
 11870                           
 11871                           ; BSR set to: 2
 11872                           ;../../VLCBlib_PIC/mns.c: 417:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11873   001980  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11874   001984  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11875   001988  0E76               	movlw	118
 11876   00198A  0101               	movlb	1	; () banked
 11877   00198C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11878   00198E  0E01               	movlw	1
 11879   001990  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11880   001992  0E01               	movlw	1
 11881   001994  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11882   001996  0EAF               	movlw	175
 11883   001998  EC25  F061         	call	_sendMessage5
 11884   00199C  D752               	goto	l23883
 11885   00199E                     l23927:
 11886                           
 11887                           ; BSR set to: 2
 11888                           ;../../VLCBlib_PIC/mns.c: 420:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11889   00199E  0101               	movlb	1	; () banked
 11890   0019A0  EE20 F002          	lfsr	2,2
 11891   0019A4  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11892   0019A6  26D9               	addwf	fsr2l,f,c
 11893   0019A8  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11894   0019AA  22DA               	addwfc	fsr2h,f,c
 11895   0019AC  50DF               	movf	indf2,w,c
 11896   0019AE  A4D8               	btfss	status,2,c
 11897   0019B0  D036               	goto	l23955
 11898                           
 11899                           ; BSR set to: 1
 11900   0019B2  EE20 F003          	lfsr	2,3
 11901   0019B6  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11902   0019B8  26D9               	addwf	fsr2l,f,c
 11903   0019BA  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11904   0019BC  22DA               	addwfc	fsr2h,f,c
 11905   0019BE  50DF               	movf	indf2,w,c
 11906   0019C0  A4D8               	btfss	status,2,c
 11907   0019C2  D02D               	goto	l23955
 11908                           
 11909                           ; BSR set to: 1
 11910                           ;../../VLCBlib_PIC/mns.c: 421:                 newMode = m->bytes[2];
 11911   0019C4  EE20 F004          	lfsr	2,4
 11912   0019C8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11913   0019CA  26D9               	addwf	fsr2l,f,c
 11914   0019CC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11915   0019CE  22DA               	addwfc	fsr2h,f,c
 11916   0019D0  50DF               	movf	indf2,w,c
 11917   0019D2  0102               	movlb	2	; () banked
 11918   0019D4  6FEE               	movwf	mnsProcessMessage@newMode& (0+255),b
 11919                           
 11920                           ; BSR set to: 2
 11921                           ;../../VLCBlib_PIC/mns.c: 423:                 if (newMode == MODE_HEARTBEAT_ON) {
 11922   0019D6  0E0C               	movlw	12
 11923   0019D8  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11924   0019DA  A4D8               	btfss	status,2,c
 11925   0019DC  D003               	goto	l23943
 11926                           
 11927                           ; BSR set to: 2
 11928                           ;../../VLCBlib_PIC/mns.c: 424:                     mode_flags |= 4;
 11929   0019DE  0101               	movlb	1	; () banked
 11930   0019E0  8565               	bsf	_mode_flags& (0+255),2,b
 11931   0019E2  D72F               	goto	l23883
 11932   0019E4                     l23943:
 11933                           
 11934                           ; BSR set to: 2
 11935   0019E4  0E0D               	movlw	13
 11936   0019E6  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11937   0019E8  A4D8               	btfss	status,2,c
 11938   0019EA  D019               	goto	l23955
 11939                           
 11940                           ; BSR set to: 2
 11941                           ;../../VLCBlib_PIC/mns.c: 428:                     mode_flags &= ~4;
 11942   0019EC  0101               	movlb	1	; () banked
 11943   0019EE  9565               	bcf	_mode_flags& (0+255),2,b
 11944   0019F0  D728               	goto	l23883
 11945   0019F2                     l23953:
 11946                           
 11947                           ; BSR set to: 0
 11948   0019F2  0101               	movlb	1	; () banked
 11949   0019F4  EE20 F001          	lfsr	2,1
 11950   0019F8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11951   0019FA  26D9               	addwf	fsr2l,f,c
 11952   0019FC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11953   0019FE  22DA               	addwfc	fsr2h,f,c
 11954   001A00  50DF               	movf	indf2,w,c
 11955   001A02  0102               	movlb	2	; () banked
 11956   001A04  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11957   001A06  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11958                           
 11959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11960                           ; Switch size 1, requested type "simple"
 11961                           ; Number of cases is 1, Range of values is 0 to 0
 11962                           ; switch strategies available:
 11963                           ; Name         Instructions Cycles
 11964                           ; simple_byte            4     3 (average)
 11965                           ;	Chosen strategy is simple_byte
 11966   001A08  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11967   001A0A  0A00               	xorlw	0	; case 0
 11968   001A0C  A4D8               	btfss	status,2,c
 11969   001A0E  D007               	goto	l23955
 11970                           
 11971                           ; BSR set to: 2
 11972                           ; Switch size 1, requested type "simple"
 11973                           ; Number of cases is 2, Range of values is 13 to 118
 11974                           ; switch strategies available:
 11975                           ; Name         Instructions Cycles
 11976                           ; simple_byte            7     4 (average)
 11977                           ;	Chosen strategy is simple_byte
 11978   001A10  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11979   001A12  0A0D               	xorlw	13	; case 13
 11980   001A14  B4D8               	btfsc	status,2,c
 11981   001A16  D79C               	goto	l23913
 11982   001A18  0A7B               	xorlw	123	; case 118
 11983   001A1A  B4D8               	btfsc	status,2,c
 11984   001A1C  D7AA               	goto	l23919
 11985   001A1E                     l23955:
 11986                           
 11987                           ;../../VLCBlib_PIC/mns.c: 438:     if (m->len < 3) {
 11988   001A1E  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11989   001A22  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11990   001A26  0E03               	movlw	3
 11991   001A28  60DF               	cpfslt	indf2,c
 11992   001A2A  D001               	goto	l23961
 11993   001A2C  D78F               	goto	l23909
 11994   001A2E                     l23961:
 11995                           
 11996                           ;../../VLCBlib_PIC/mns.c: 442:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11997   001A2E  0101               	movlb	1	; () banked
 11998   001A30  EE20 F002          	lfsr	2,2
 11999   001A34  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12000   001A36  26D9               	addwf	fsr2l,f,c
 12001   001A38  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12002   001A3A  22DA               	addwfc	fsr2h,f,c
 12003   001A3C  50DE               	movf	postinc2,w,c
 12004   001A3E  0100               	movlb	0	; () banked
 12005   001A40  19B5               	xorwf	(_nn+1)& (0+255),w,b
 12006   001A42  A4D8               	btfss	status,2,c
 12007   001A44  D783               	goto	l23909
 12008                           
 12009                           ; BSR set to: 0
 12010                           ;../../VLCBlib_PIC/mns.c: 443:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 12011   001A46  0101               	movlb	1	; () banked
 12012   001A48  EE20 F003          	lfsr	2,3
 12013   001A4C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12014   001A4E  26D9               	addwf	fsr2l,f,c
 12015   001A50  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12016   001A52  22DA               	addwfc	fsr2h,f,c
 12017   001A54  0100               	movlb	0	; () banked
 12018   001A56  51B4               	movf	_nn& (0+255),w,b
 12019   001A58  18DE               	xorwf	postinc2,w,c
 12020   001A5A  A4D8               	btfss	status,2,c
 12021   001A5C  D777               	goto	l23909
 12022   001A5E  EF39  F011         	goto	l24161
 12023   001A62                     l23973:
 12024                           
 12025                           ; BSR set to: 2
 12026                           ;../../VLCBlib_PIC/mns.c: 447:             if (m->len < 4) {
 12027   001A62  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12028   001A66  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12029   001A6A  0E04               	movlw	4
 12030   001A6C  60DF               	cpfslt	indf2,c
 12031   001A6E  D00F               	goto	l23981
 12032                           
 12033                           ; BSR set to: 2
 12034                           ;../../VLCBlib_PIC/mns.c: 449:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12035   001A70  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12036   001A74  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12037   001A78  0E73               	movlw	115
 12038   001A7A  0101               	movlb	1	; () banked
 12039   001A7C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12040   001A7E  0E01               	movlw	1
 12041   001A80  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12042   001A82  0E01               	movlw	1
 12043   001A84  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12044   001A86  0EAF               	movlw	175
 12045   001A88  EC25  F061         	call	_sendMessage5
 12046   001A8C  D6DA               	goto	l23883
 12047   001A8E                     l23981:
 12048                           
 12049                           ; BSR set to: 2
 12050                           ;../../VLCBlib_PIC/mns.c: 453:             if (m->bytes[2] > 20) {
 12051   001A8E  0101               	movlb	1	; () banked
 12052   001A90  EE20 F004          	lfsr	2,4
 12053   001A94  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12054   001A96  26D9               	addwf	fsr2l,f,c
 12055   001A98  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12056   001A9A  22DA               	addwfc	fsr2h,f,c
 12057   001A9C  0E14               	movlw	20
 12058   001A9E  64DF               	cpfsgt	indf2,c
 12059   001AA0  D019               	goto	l23989
 12060                           
 12061                           ; BSR set to: 1
 12062                           ;../../VLCBlib_PIC/mns.c: 454:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 12063   001AA2  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 12064   001AA6  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 12065   001AAA  0E09               	movlw	9
 12066   001AAC  0100               	movlb	0	; () banked
 12067   001AAE  6FA9               	movwf	sendMessage3@data3& (0+255),b
 12068   001AB0  0E6F               	movlw	111
 12069   001AB2  EC83  F061         	call	_sendMessage3
 12070                           
 12071                           ;../../VLCBlib_PIC/mns.c: 456:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 12072   001AB6  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12073   001ABA  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12074   001ABE  0E73               	movlw	115
 12075   001AC0  0101               	movlb	1	; () banked
 12076   001AC2  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12077   001AC4  0E01               	movlw	1
 12078   001AC6  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12079   001AC8  0E09               	movlw	9
 12080   001ACA  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12081   001ACC  0EAF               	movlw	175
 12082   001ACE  EC25  F061         	call	_sendMessage5
 12083   001AD2  D6B7               	goto	l23883
 12084   001AD4                     l23989:
 12085                           
 12086                           ; BSR set to: 1
 12087                           ;../../VLCBlib_PIC/mns.c: 460:             i = getParameter(m->bytes[2]);
 12088   001AD4  EE20 F004          	lfsr	2,4
 12089   001AD8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12090   001ADA  26D9               	addwf	fsr2l,f,c
 12091   001ADC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12092   001ADE  22DA               	addwfc	fsr2h,f,c
 12093   001AE0  50DF               	movf	indf2,w,c
 12094   001AE2  EC1F  F044         	call	_getParameter
 12095   001AE6  0102               	movlb	2	; () banked
 12096   001AE8  6FEA               	movwf	mnsProcessMessage@i& (0+255),b
 12097                           
 12098                           ; BSR set to: 2
 12099                           ;../../VLCBlib_PIC/mns.c: 461:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 12100   001AEA  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 12101   001AEE  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 12102   001AF2  0101               	movlb	1	; () banked
 12103   001AF4  EE20 F004          	lfsr	2,4
 12104   001AF8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12105   001AFA  26D9               	addwf	fsr2l,f,c
 12106   001AFC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12107   001AFE  22DA               	addwfc	fsr2h,f,c
 12108   001B00  50DF               	movf	indf2,w,c
 12109   001B02  6FC8               	movwf	sendMessage4@data3& (0+255),b
 12110   001B04  C2EA  F1C9         	movff	mnsProcessMessage@i,sendMessage4@data4
 12111   001B08  0E9B               	movlw	155
 12112   001B0A  EC3D  F061         	call	_sendMessage4
 12113                           
 12114                           ;../../VLCBlib_PIC/mns.c: 463:             if (m->bytes[2] == 0) {
 12115   001B0E  0101               	movlb	1	; () banked
 12116   001B10  EE20 F004          	lfsr	2,4
 12117   001B14  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12118   001B16  26D9               	addwf	fsr2l,f,c
 12119   001B18  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12120   001B1A  22DA               	addwfc	fsr2h,f,c
 12121   001B1C  50DF               	movf	indf2,w,c
 12122   001B1E  A4D8               	btfss	status,2,c
 12123   001B20  D690               	goto	l23883
 12124                           
 12125                           ; BSR set to: 1
 12126                           ;../../VLCBlib_PIC/mns.c: 464:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 12127   001B22  0E01               	movlw	1
 12128   001B24  ECFC  F057         	call	_findServiceIndex
 12129   001B28  0100               	movlb	0	; () banked
 12130   001B2A  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12131   001B2C  0E8E               	movlw	low _mnsTRrqnpnCallback
 12132   001B2E  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12133   001B30  0EC3               	movlw	high _mnsTRrqnpnCallback
 12134   001B32  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12135   001B34  0E07               	movlw	7
 12136   001B36  EC53  F05F         	call	_startTimedResponse
 12137   001B3A  D683               	goto	l23883
 12138   001B3C                     l1492:
 12139                           
 12140                           ; BSR set to: 2
 12141                           ;../../VLCBlib_PIC/mns.c: 469:             previousNN.word = nn.word;
 12142   001B3C  C0B4  F160         	movff	_nn,_previousNN
 12143   001B40  C0B5  F161         	movff	_nn+1,_previousNN+1
 12144                           
 12145                           ; BSR set to: 2
 12146                           ;../../VLCBlib_PIC/mns.c: 470:             factoryReset();
 12147   001B44  ECAC  F043         	call	_factoryReset	;wreg free
 12148                           
 12149                           ;../../VLCBlib_PIC/mns.c: 471:             if (previousNN.word != 0) {
 12150   001B48  0101               	movlb	1	; () banked
 12151   001B4A  5160               	movf	_previousNN& (0+255),w,b
 12152   001B4C  1161               	iorwf	(_previousNN+1)& (0+255),w,b
 12153   001B4E  B4D8               	btfsc	status,2,c
 12154   001B50  D007               	goto	l1493
 12155                           
 12156                           ; BSR set to: 1
 12157                           ;../../VLCBlib_PIC/mns.c: 472:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 12158   001B52  C161  F0A7         	movff	_previousNN+1,sendMessage2@data1
 12159   001B56  C160  F0A8         	movff	_previousNN,sendMessage2@data2
 12160   001B5A  0E51               	movlw	81
 12161   001B5C  ECF5  F060         	call	_sendMessage2
 12162   001B60                     l1493:
 12163   001B60  00FF               	reset		;# 
 12164   001B62                     l24007:
 12165                           
 12166                           ;../../VLCBlib_PIC/mns.c: 477:             if (m->len < 5) {
 12167   001B62  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12168   001B66  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12169   001B6A  0E05               	movlw	5
 12170   001B6C  60DF               	cpfslt	indf2,c
 12171   001B6E  D00F               	goto	l24015
 12172                           
 12173                           ;../../VLCBlib_PIC/mns.c: 478:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12174   001B70  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12175   001B74  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12176   001B78  0E87               	movlw	135
 12177   001B7A  0101               	movlb	1	; () banked
 12178   001B7C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12179   001B7E  0E01               	movlw	1
 12180   001B80  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12181   001B82  0E01               	movlw	1
 12182   001B84  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12183   001B86  0EAF               	movlw	175
 12184   001B88  EC25  F061         	call	_sendMessage5
 12185   001B8C  D65A               	goto	l23883
 12186   001B8E                     l24015:
 12187                           
 12188                           ;../../VLCBlib_PIC/mns.c: 481:             if (m->bytes[2] == 0) {
 12189   001B8E  0101               	movlb	1	; () banked
 12190   001B90  EE20 F004          	lfsr	2,4
 12191   001B94  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12192   001B96  26D9               	addwf	fsr2l,f,c
 12193   001B98  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12194   001B9A  22DA               	addwfc	fsr2h,f,c
 12195   001B9C  50DF               	movf	indf2,w,c
 12196   001B9E  A4D8               	btfss	status,2,c
 12197   001BA0  D00B               	goto	l24019
 12198                           
 12199                           ; BSR set to: 1
 12200                           ;../../VLCBlib_PIC/mns.c: 483:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 12201   001BA2  0E00               	movlw	0
 12202   001BA4  0100               	movlb	0	; () banked
 12203   001BA6  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12204   001BA8  0E66               	movlw	low _mnsTRallDiagnosticsCallback
 12205   001BAA  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12206   001BAC  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 12207   001BAE  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12208   001BB0  0E04               	movlw	4
 12209   001BB2  EC53  F05F         	call	_startTimedResponse
 12210                           
 12211                           ;../../VLCBlib_PIC/mns.c: 484:             } else {
 12212   001BB6  D645               	goto	l23883
 12213   001BB8                     l24019:
 12214                           
 12215                           ; BSR set to: 1
 12216                           ;../../VLCBlib_PIC/mns.c: 486:                 if (m->bytes[2] > 9) {
 12217   001BB8  EE20 F004          	lfsr	2,4
 12218   001BBC  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12219   001BBE  26D9               	addwf	fsr2l,f,c
 12220   001BC0  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12221   001BC2  22DA               	addwfc	fsr2h,f,c
 12222   001BC4  0E09               	movlw	9
 12223   001BC6  64DF               	cpfsgt	indf2,c
 12224   001BC8  D00E               	goto	l24027
 12225                           
 12226                           ; BSR set to: 1
 12227                           ;../../VLCBlib_PIC/mns.c: 487:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 12228   001BCA  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12229   001BCE  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12230   001BD2  0E87               	movlw	135
 12231   001BD4  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12232   001BD6  0E01               	movlw	1
 12233   001BD8  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12234   001BDA  0EFC               	movlw	252
 12235   001BDC  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12236   001BDE  0EAF               	movlw	175
 12237   001BE0  EC25  F061         	call	_sendMessage5
 12238   001BE4  D62E               	goto	l23883
 12239   001BE6                     l24027:
 12240                           
 12241                           ; BSR set to: 1
 12242                           ;../../VLCBlib_PIC/mns.c: 490:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 12243   001BE6  EE20 F004          	lfsr	2,4
 12244   001BEA  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12245   001BEC  26D9               	addwf	fsr2l,f,c
 12246   001BEE  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12247   001BF0  22DA               	addwfc	fsr2h,f,c
 12248   001BF2  50DF               	movf	indf2,w,c
 12249   001BF4  0102               	movlb	2	; () banked
 12250   001BF6  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12251   001BF8  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12252   001BFA  90D8               	bcf	status,0,c
 12253   001BFC  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12254   001BFE  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12255   001C00  0EFE               	movlw	254
 12256   001C02  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12257   001C04  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12258   001C06  0EFF               	movlw	255
 12259   001C08  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12260   001C0A  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12261   001C0C  0E69               	movlw	low _services
 12262   001C0E  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12263   001C10  6EF6               	movwf	tblptrl,c
 12264   001C12  0EEE               	movlw	high _services
 12265   001C14  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12266   001C16  6EF7               	movwf	tblptrh,c
 12267   001C18                     	if	1	;There are 3 active tblptr bytes
 12268   001C18  6AF8               	clrf	tblptru,c
 12269   001C1A  0E00               	movlw	low (__mediumconst shr (0+16))
 12270   001C1C  22F8               	addwfc	tblptru,f,c
 12271   001C1E                     	endif
 12272   001C1E  0009               	tblrd		*+
 12273   001C20  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12274   001C24  0009               	tblrd		*+
 12275   001C26  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12276   001C2A  0E10               	movlw	16
 12277   001C2C  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12278   001C2E  0E00               	movlw	0
 12279   001C30  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12280   001C32  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12281   001C36  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12282   001C3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12283   001C3A  6AF8               	clrf	tblptru,c
 12284   001C3C                     	endif
 12285   001C3C                     	if	0	;tblptru may be non-zero
 12286   001C3C                     	endif
 12287   001C3C  0009               	tblrd		*+
 12288   001C3E  50F5               	movf	tablat,w,c
 12289   001C40  0009               	tblrd		*+
 12290   001C42  10F5               	iorwf	tablat,w,c
 12291   001C44  A4D8               	btfss	status,2,c
 12292   001C46  D014               	goto	l24031
 12293                           
 12294                           ; BSR set to: 2
 12295                           ;../../VLCBlib_PIC/mns.c: 492:                     sendMessage5(OPC_DGN, nn.bytes.hi, nn
      +                          .bytes.lo, OPC_RDGN, m->bytes[2], 0);
 12296   001C48  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12297   001C4C  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12298   001C50  0E87               	movlw	135
 12299   001C52  0101               	movlb	1	; () banked
 12300   001C54  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12301   001C56  EE20 F004          	lfsr	2,4
 12302   001C5A  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12303   001C5C  26D9               	addwf	fsr2l,f,c
 12304   001C5E  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12305   001C60  22DA               	addwfc	fsr2h,f,c
 12306   001C62  50DF               	movf	indf2,w,c
 12307   001C64  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12308   001C66  0E00               	movlw	0
 12309   001C68  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12310   001C6A  0EC7               	movlw	199
 12311   001C6C  EC25  F061         	call	_sendMessage5
 12312   001C70                     l24031:
 12313                           
 12314                           ;../../VLCBlib_PIC/mns.c: 494:                 if (m->bytes[3] == 0) {
 12315   001C70  0101               	movlb	1	; () banked
 12316   001C72  EE20 F005          	lfsr	2,5
 12317   001C76  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12318   001C78  26D9               	addwf	fsr2l,f,c
 12319   001C7A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12320   001C7C  22DA               	addwfc	fsr2h,f,c
 12321   001C7E  50DF               	movf	indf2,w,c
 12322   001C80  A4D8               	btfss	status,2,c
 12323   001C82  D011               	goto	l24041
 12324                           
 12325                           ; BSR set to: 1
 12326                           ;../../VLCBlib_PIC/mns.c: 496:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 12327   001C84  EE20 F004          	lfsr	2,4
 12328   001C88  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12329   001C8A  26D9               	addwf	fsr2l,f,c
 12330   001C8C  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12331   001C8E  22DA               	addwfc	fsr2h,f,c
 12332   001C90  50DF               	movf	indf2,w,c
 12333   001C92  0100               	movlb	0	; () banked
 12334   001C94  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12335   001C96  0E66               	movlw	low _mnsTRallDiagnosticsCallback
 12336   001C98  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12337   001C9A  0E83               	movlw	high _mnsTRallDiagnosticsCallback
 12338   001C9C  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12339   001C9E  0E04               	movlw	4
 12340   001CA0  EC53  F05F         	call	_startTimedResponse
 12341   001CA4  D5CE               	goto	l23883
 12342   001CA6                     l24041:
 12343                           
 12344                           ; BSR set to: 1
 12345                           ;../../VLCBlib_PIC/mns.c: 499:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 12346   001CA6  EE20 F004          	lfsr	2,4
 12347   001CAA  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12348   001CAC  26D9               	addwf	fsr2l,f,c
 12349   001CAE  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12350   001CB0  22DA               	addwfc	fsr2h,f,c
 12351   001CB2  50DF               	movf	indf2,w,c
 12352   001CB4  0102               	movlb	2	; () banked
 12353   001CB6  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12354   001CB8  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12355   001CBA  90D8               	bcf	status,0,c
 12356   001CBC  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12357   001CBE  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12358   001CC0  0EFE               	movlw	254
 12359   001CC2  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12360   001CC4  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12361   001CC6  0EFF               	movlw	255
 12362   001CC8  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12363   001CCA  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12364   001CCC  0E69               	movlw	low _services
 12365   001CCE  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12366   001CD0  6EF6               	movwf	tblptrl,c
 12367   001CD2  0EEE               	movlw	high _services
 12368   001CD4  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12369   001CD6  6EF7               	movwf	tblptrh,c
 12370   001CD8                     	if	1	;There are 3 active tblptr bytes
 12371   001CD8  6AF8               	clrf	tblptru,c
 12372   001CDA  0E00               	movlw	low (__mediumconst shr (0+16))
 12373   001CDC  22F8               	addwfc	tblptru,f,c
 12374   001CDE                     	endif
 12375   001CDE  0009               	tblrd		*+
 12376   001CE0  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12377   001CE4  0009               	tblrd		*+
 12378   001CE6  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12379   001CEA  0E10               	movlw	16
 12380   001CEC  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12381   001CEE  0E00               	movlw	0
 12382   001CF0  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12383   001CF2  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12384   001CF6  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12385   001CFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12386   001CFA  6AF8               	clrf	tblptru,c
 12387   001CFC                     	endif
 12388   001CFC                     	if	0	;tblptru may be non-zero
 12389   001CFC                     	endif
 12390   001CFC  0009               	tblrd		*+
 12391   001CFE  CFF5 F2D2          	movff	tablat,??_mnsProcessMessage+6
 12392   001D02  0009               	tblrd		*+
 12393   001D04  CFF5 F2D3          	movff	tablat,??_mnsProcessMessage+7
 12394   001D08  D801               	call	u25608
 12395   001D0A  D011               	goto	u25609
 12396   001D0C                     u25608:
 12397   001D0C  0005               	push	
 12398   001D0E  6EFA               	movwf	pclath,c
 12399   001D10  51D2               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 12400   001D12  6EFD               	movwf	tosl,c
 12401   001D14  51D3               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 12402   001D16  6EFE               	movwf	tosh,c
 12403   001D18  6AFF               	clrf	tosu,c
 12404   001D1A  50FA               	movf	pclath,w,c
 12405   001D1C  0101               	movlb	1	; () banked
 12406   001D1E  EE20 F005          	lfsr	2,5
 12407   001D22  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12408   001D24  26D9               	addwf	fsr2l,f,c
 12409   001D26  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12410   001D28  22DA               	addwfc	fsr2h,f,c
 12411   001D2A  50DF               	movf	indf2,w,c
 12412   001D2C  0012               	return		;indir
 12413   001D2E                     u25609:
 12414   001D2E  C097  F2EC         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 12415   001D32  C098  F2ED         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 12416                           
 12417                           ;../../VLCBlib_PIC/mns.c: 500:                     if (d == ((void*)0)) {
 12418   001D36  0102               	movlb	2	; () banked
 12419   001D38  51EC               	movf	mnsProcessMessage@d& (0+255),w,b
 12420   001D3A  11ED               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 12421   001D3C  A4D8               	btfss	status,2,c
 12422   001D3E  D00F               	goto	l24047
 12423                           
 12424                           ; BSR set to: 2
 12425                           ;../../VLCBlib_PIC/mns.c: 502:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12426   001D40  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12427   001D44  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12428   001D48  0E87               	movlw	135
 12429   001D4A  0101               	movlb	1	; () banked
 12430   001D4C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12431   001D4E  0E01               	movlw	1
 12432   001D50  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12433   001D52  0EFD               	movlw	253
 12434   001D54  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12435   001D56  0EAF               	movlw	175
 12436   001D58  EC25  F061         	call	_sendMessage5
 12437                           
 12438                           ;../../VLCBlib_PIC/mns.c: 503:                     } else {
 12439   001D5C  D572               	goto	l23883
 12440   001D5E                     l24047:
 12441                           
 12442                           ; BSR set to: 2
 12443                           ;../../VLCBlib_PIC/mns.c: 505:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 12444   001D5E  C0B5  F1C6         	movff	_nn+1,sendMessage6@data1
 12445   001D62  C0B4  F1C7         	movff	_nn,sendMessage6@data2
 12446   001D66  0101               	movlb	1	; () banked
 12447   001D68  EE20 F004          	lfsr	2,4
 12448   001D6C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12449   001D6E  26D9               	addwf	fsr2l,f,c
 12450   001D70  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12451   001D72  22DA               	addwfc	fsr2h,f,c
 12452   001D74  50DF               	movf	indf2,w,c
 12453   001D76  6FC8               	movwf	sendMessage6@data3& (0+255),b
 12454   001D78  EE20 F005          	lfsr	2,5
 12455   001D7C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12456   001D7E  26D9               	addwf	fsr2l,f,c
 12457   001D80  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12458   001D82  22DA               	addwfc	fsr2h,f,c
 12459   001D84  50DF               	movf	indf2,w,c
 12460   001D86  6FC9               	movwf	sendMessage6@data4& (0+255),b
 12461   001D88  0102               	movlb	2	; () banked
 12462   001D8A  EE20 F001          	lfsr	2,1
 12463   001D8E  51EC               	movf	mnsProcessMessage@d& (0+255),w,b
 12464   001D90  26D9               	addwf	fsr2l,f,c
 12465   001D92  51ED               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 12466   001D94  22DA               	addwfc	fsr2h,f,c
 12467   001D96  50DF               	movf	indf2,w,c
 12468   001D98  0101               	movlb	1	; () banked
 12469   001D9A  6FCA               	movwf	sendMessage6@data5& (0+255),b
 12470   001D9C  C2EC  FFD9         	movff	mnsProcessMessage@d,fsr2l
 12471   001DA0  C2ED  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 12472   001DA4  50DF               	movf	indf2,w,c
 12473   001DA6  6FCB               	movwf	sendMessage6@data6& (0+255),b
 12474   001DA8  0EC7               	movlw	199
 12475   001DAA  ECDD  F060         	call	_sendMessage6
 12476   001DAE  D549               	goto	l23883
 12477   001DB0                     l24053:
 12478                           
 12479                           ; BSR set to: 2
 12480                           ;../../VLCBlib_PIC/mns.c: 513:             if (m->len < 4) {
 12481   001DB0  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12482   001DB4  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12483   001DB8  0E04               	movlw	4
 12484   001DBA  60DF               	cpfslt	indf2,c
 12485   001DBC  D00F               	goto	l24061
 12486                           
 12487                           ; BSR set to: 2
 12488                           ;../../VLCBlib_PIC/mns.c: 514:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12489   001DBE  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12490   001DC2  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12491   001DC6  0E78               	movlw	120
 12492   001DC8  0101               	movlb	1	; () banked
 12493   001DCA  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12494   001DCC  0E01               	movlw	1
 12495   001DCE  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12496   001DD0  0E01               	movlw	1
 12497   001DD2  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12498   001DD4  0EAF               	movlw	175
 12499   001DD6  EC25  F061         	call	_sendMessage5
 12500   001DDA  D533               	goto	l23883
 12501   001DDC                     l24061:
 12502                           
 12503                           ; BSR set to: 2
 12504                           ;../../VLCBlib_PIC/mns.c: 517:             if (m->bytes[2] == 0) {
 12505   001DDC  0101               	movlb	1	; () banked
 12506   001DDE  EE20 F004          	lfsr	2,4
 12507   001DE2  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12508   001DE4  26D9               	addwf	fsr2l,f,c
 12509   001DE6  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12510   001DE8  22DA               	addwfc	fsr2h,f,c
 12511   001DEA  50DF               	movf	indf2,w,c
 12512   001DEC  A4D8               	btfss	status,2,c
 12513   001DEE  D018               	goto	l24067
 12514                           
 12515                           ; BSR set to: 1
 12516                           ;../../VLCBlib_PIC/mns.c: 519:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 12517   001DF0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12518   001DF4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12519   001DF8  0E00               	movlw	0
 12520   001DFA  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12521   001DFC  0E00               	movlw	0
 12522   001DFE  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12523   001E00  0E09               	movlw	9
 12524   001E02  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12525   001E04  0EAC               	movlw	172
 12526   001E06  EC25  F061         	call	_sendMessage5
 12527                           
 12528                           ;../../VLCBlib_PIC/mns.c: 521:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 12529   001E0A  0E01               	movlw	1
 12530   001E0C  0100               	movlb	0	; () banked
 12531   001E0E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12532   001E10  0E80               	movlw	low _mnsTRserviceDiscoveryCallback
 12533   001E12  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12534   001E14  0EA6               	movlw	high _mnsTRserviceDiscoveryCallback
 12535   001E16  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12536   001E18  0E03               	movlw	3
 12537   001E1A  EC53  F05F         	call	_startTimedResponse
 12538                           
 12539                           ;../../VLCBlib_PIC/mns.c: 522:             } else if (m->bytes[2] > 9) {
 12540   001E1E  D511               	goto	l23883
 12541   001E20                     l24067:
 12542                           
 12543                           ; BSR set to: 1
 12544   001E20  EE20 F004          	lfsr	2,4
 12545   001E24  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12546   001E26  26D9               	addwf	fsr2l,f,c
 12547   001E28  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12548   001E2A  22DA               	addwfc	fsr2h,f,c
 12549   001E2C  0E09               	movlw	9
 12550   001E2E  64DF               	cpfsgt	indf2,c
 12551   001E30  D00E               	goto	l24077
 12552                           
 12553                           ; BSR set to: 1
 12554                           ;../../VLCBlib_PIC/mns.c: 523:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 12555   001E32  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12556   001E36  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12557   001E3A  0E78               	movlw	120
 12558   001E3C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12559   001E3E  0E01               	movlw	1
 12560   001E40  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12561   001E42  0EFC               	movlw	252
 12562   001E44  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12563   001E46  0EAF               	movlw	175
 12564   001E48  EC25  F061         	call	_sendMessage5
 12565   001E4C  D4FA               	goto	l23883
 12566   001E4E                     l24077:
 12567                           
 12568                           ; BSR set to: 1
 12569                           ;../../VLCBlib_PIC/mns.c: 527:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 12570   001E4E  EE20 F004          	lfsr	2,4
 12571   001E52  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12572   001E54  26D9               	addwf	fsr2l,f,c
 12573   001E56  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12574   001E58  22DA               	addwfc	fsr2h,f,c
 12575   001E5A  50DF               	movf	indf2,w,c
 12576   001E5C  0102               	movlb	2	; () banked
 12577   001E5E  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12578   001E60  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12579   001E62  90D8               	bcf	status,0,c
 12580   001E64  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12581   001E66  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12582   001E68  0EFE               	movlw	254
 12583   001E6A  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12584   001E6C  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12585   001E6E  0EFF               	movlw	255
 12586   001E70  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12587   001E72  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12588   001E74  0E69               	movlw	low _services
 12589   001E76  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12590   001E78  6EF6               	movwf	tblptrl,c
 12591   001E7A  0EEE               	movlw	high _services
 12592   001E7C  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12593   001E7E  6EF7               	movwf	tblptrh,c
 12594   001E80                     	if	1	;There are 3 active tblptr bytes
 12595   001E80  6AF8               	clrf	tblptru,c
 12596   001E82  0E00               	movlw	low (__mediumconst shr (0+16))
 12597   001E84  22F8               	addwfc	tblptru,f,c
 12598   001E86                     	endif
 12599   001E86  0009               	tblrd		*+
 12600   001E88  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12601   001E8C  0009               	tblrd		*+
 12602   001E8E  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12603   001E92  0E0E               	movlw	14
 12604   001E94  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12605   001E96  0E00               	movlw	0
 12606   001E98  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12607   001E9A  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12608   001E9E  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12609   001EA2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12610   001EA2  6AF8               	clrf	tblptru,c
 12611   001EA4                     	endif
 12612   001EA4                     	if	0	;tblptru may be non-zero
 12613   001EA4                     	endif
 12614   001EA4  0009               	tblrd		*+
 12615   001EA6  50F5               	movf	tablat,w,c
 12616   001EA8  0009               	tblrd		*+
 12617   001EAA  10F5               	iorwf	tablat,w,c
 12618   001EAC  A4D8               	btfss	status,2,c
 12619   001EAE  D042               	goto	l24081
 12620                           
 12621                           ; BSR set to: 2
 12622                           ;../../VLCBlib_PIC/mns.c: 528:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 12623   001EB0  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 12624   001EB4  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 12625   001EB8  0101               	movlb	1	; () banked
 12626   001EBA  EE20 F004          	lfsr	2,4
 12627   001EBE  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12628   001EC0  26D9               	addwf	fsr2l,f,c
 12629   001EC2  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12630   001EC4  22DA               	addwfc	fsr2h,f,c
 12631   001EC6  50DF               	movf	indf2,w,c
 12632   001EC8  6FC8               	movwf	sendMessage7@data3& (0+255),b
 12633   001ECA  EE20 F004          	lfsr	2,4
 12634   001ECE  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12635   001ED0  26D9               	addwf	fsr2l,f,c
 12636   001ED2  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12637   001ED4  22DA               	addwfc	fsr2h,f,c
 12638   001ED6  50DF               	movf	indf2,w,c
 12639   001ED8  0102               	movlb	2	; () banked
 12640   001EDA  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12641   001EDC  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12642   001EDE  90D8               	bcf	status,0,c
 12643   001EE0  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12644   001EE2  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12645   001EE4  0EFE               	movlw	254
 12646   001EE6  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12647   001EE8  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12648   001EEA  0EFF               	movlw	255
 12649   001EEC  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12650   001EEE  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12651   001EF0  0E69               	movlw	low _services
 12652   001EF2  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12653   001EF4  6EF6               	movwf	tblptrl,c
 12654   001EF6  0EEE               	movlw	high _services
 12655   001EF8  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12656   001EFA  6EF7               	movwf	tblptrh,c
 12657   001EFC                     	if	1	;There are 3 active tblptr bytes
 12658   001EFC  6AF8               	clrf	tblptru,c
 12659   001EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12660   001F00  22F8               	addwfc	tblptru,f,c
 12661   001F02                     	endif
 12662   001F02  0009               	tblrd		*+
 12663   001F04  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12664   001F08  0009               	tblrd		*+
 12665   001F0A  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12666   001F0E  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12667   001F12  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12668   001F16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12669   001F16  6AF8               	clrf	tblptru,c
 12670   001F18                     	endif
 12671   001F18                     	if	0	;tblptru may be non-zero
 12672   001F18                     	endif
 12673   001F18  0008               	tblrd		*
 12674   001F1A  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 12675   001F1E  0E00               	movlw	0
 12676   001F20  0101               	movlb	1	; () banked
 12677   001F22  6FCA               	movwf	sendMessage7@data5& (0+255),b
 12678   001F24  0E00               	movlw	0
 12679   001F26  6FCB               	movwf	sendMessage7@data6& (0+255),b
 12680   001F28  0E00               	movlw	0
 12681   001F2A  6FCC               	movwf	sendMessage7@data7& (0+255),b
 12682   001F2C  0EE7               	movlw	231
 12683   001F2E  EC0D  F061         	call	_sendMessage7
 12684                           
 12685                           ;../../VLCBlib_PIC/mns.c: 529:                 } else {
 12686   001F32  D487               	goto	l23883
 12687   001F34                     l24081:
 12688                           
 12689                           ; BSR set to: 2
 12690                           ;../../VLCBlib_PIC/mns.c: 530:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 12691   001F34  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 12692   001F38  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 12693   001F3C  0101               	movlb	1	; () banked
 12694   001F3E  EE20 F004          	lfsr	2,4
 12695   001F42  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12696   001F44  26D9               	addwf	fsr2l,f,c
 12697   001F46  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12698   001F48  22DA               	addwfc	fsr2h,f,c
 12699   001F4A  50DF               	movf	indf2,w,c
 12700   001F4C  6FC8               	movwf	sendMessage7@data3& (0+255),b
 12701   001F4E  EE20 F004          	lfsr	2,4
 12702   001F52  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12703   001F54  26D9               	addwf	fsr2l,f,c
 12704   001F56  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12705   001F58  22DA               	addwfc	fsr2h,f,c
 12706   001F5A  50DF               	movf	indf2,w,c
 12707   001F5C  0102               	movlb	2	; () banked
 12708   001F5E  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12709   001F60  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12710   001F62  90D8               	bcf	status,0,c
 12711   001F64  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12712   001F66  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12713   001F68  0EFE               	movlw	254
 12714   001F6A  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12715   001F6C  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12716   001F6E  0EFF               	movlw	255
 12717   001F70  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12718   001F72  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12719   001F74  0E69               	movlw	low _services
 12720   001F76  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12721   001F78  6EF6               	movwf	tblptrl,c
 12722   001F7A  0EEE               	movlw	high _services
 12723   001F7C  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12724   001F7E  6EF7               	movwf	tblptrh,c
 12725   001F80                     	if	1	;There are 3 active tblptr bytes
 12726   001F80  6AF8               	clrf	tblptru,c
 12727   001F82  0E00               	movlw	low (__mediumconst shr (0+16))
 12728   001F84  22F8               	addwfc	tblptru,f,c
 12729   001F86                     	endif
 12730   001F86  0009               	tblrd		*+
 12731   001F88  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12732   001F8C  0009               	tblrd		*+
 12733   001F8E  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12734   001F92  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12735   001F96  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12736   001F9A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12737   001F9A  6AF8               	clrf	tblptru,c
 12738   001F9C                     	endif
 12739   001F9C                     	if	0	;tblptru may be non-zero
 12740   001F9C                     	endif
 12741   001F9C  0008               	tblrd		*
 12742   001F9E  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 12743   001FA2  0101               	movlb	1	; () banked
 12744   001FA4  EE20 F004          	lfsr	2,4
 12745   001FA8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12746   001FAA  26D9               	addwf	fsr2l,f,c
 12747   001FAC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12748   001FAE  22DA               	addwfc	fsr2h,f,c
 12749   001FB0  50DF               	movf	indf2,w,c
 12750   001FB2  0102               	movlb	2	; () banked
 12751   001FB4  6FD2               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 12752   001FB6  6BD3               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 12753   001FB8  90D8               	bcf	status,0,c
 12754   001FBA  37D2               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 12755   001FBC  37D3               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 12756   001FBE  0EFE               	movlw	254
 12757   001FC0  25D2               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 12758   001FC2  6FD4               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 12759   001FC4  0EFF               	movlw	255
 12760   001FC6  21D3               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 12761   001FC8  6FD5               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 12762   001FCA  0E69               	movlw	low _services
 12763   001FCC  25D4               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 12764   001FCE  6EF6               	movwf	tblptrl,c
 12765   001FD0  0EEE               	movlw	high _services
 12766   001FD2  21D5               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 12767   001FD4  6EF7               	movwf	tblptrh,c
 12768   001FD6                     	if	1	;There are 3 active tblptr bytes
 12769   001FD6  6AF8               	clrf	tblptru,c
 12770   001FD8  0E00               	movlw	low (__mediumconst shr (0+16))
 12771   001FDA  22F8               	addwfc	tblptru,f,c
 12772   001FDC                     	endif
 12773   001FDC  0009               	tblrd		*+
 12774   001FDE  CFF5 F2D6          	movff	tablat,??_mnsProcessMessage+10
 12775   001FE2  0009               	tblrd		*+
 12776   001FE4  CFF5 F2D7          	movff	tablat,??_mnsProcessMessage+11
 12777   001FE8  0E0E               	movlw	14
 12778   001FEA  27D6               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 12779   001FEC  0E00               	movlw	0
 12780   001FEE  23D7               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 12781   001FF0  C2D6  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 12782   001FF4  C2D7  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 12783   001FF8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12784   001FF8  6AF8               	clrf	tblptru,c
 12785   001FFA                     	endif
 12786   001FFA                     	if	0	;tblptru may be non-zero
 12787   001FFA                     	endif
 12788   001FFA  0009               	tblrd		*+
 12789   001FFC  CFF5 F2D8          	movff	tablat,??_mnsProcessMessage+12
 12790   002000  0009               	tblrd		*+
 12791   002002  CFF5 F2D9          	movff	tablat,??_mnsProcessMessage+13
 12792   002006  D801               	call	u25668
 12793   002008  D00A               	goto	u25669
 12794   00200A                     u25668:
 12795   00200A  0005               	push	
 12796   00200C  6EFA               	movwf	pclath,c
 12797   00200E  51D8               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 12798   002010  6EFD               	movwf	tosl,c
 12799   002012  51D9               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 12800   002014  6EFE               	movwf	tosh,c
 12801   002016  6AFF               	clrf	tosu,c
 12802   002018  50FA               	movf	pclath,w,c
 12803   00201A  0E01               	movlw	1
 12804   00201C  0012               	return		;indir
 12805   00201E                     u25669:
 12806   00201E  0101               	movlb	1	; () banked
 12807   002020  6FCA               	movwf	sendMessage7@data5& (0+255),b
 12808   002022  EE20 F004          	lfsr	2,4
 12809   002026  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12810   002028  26D9               	addwf	fsr2l,f,c
 12811   00202A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12812   00202C  22DA               	addwfc	fsr2h,f,c
 12813   00202E  50DF               	movf	indf2,w,c
 12814   002030  0102               	movlb	2	; () banked
 12815   002032  6FDA               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12816   002034  6BDB               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12817   002036  90D8               	bcf	status,0,c
 12818   002038  37DA               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12819   00203A  37DB               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12820   00203C  0EFE               	movlw	254
 12821   00203E  25DA               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12822   002040  6FDC               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12823   002042  0EFF               	movlw	255
 12824   002044  21DB               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12825   002046  6FDD               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12826   002048  0E69               	movlw	low _services
 12827   00204A  25DC               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12828   00204C  6EF6               	movwf	tblptrl,c
 12829   00204E  0EEE               	movlw	high _services
 12830   002050  21DD               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12831   002052  6EF7               	movwf	tblptrh,c
 12832   002054                     	if	1	;There are 3 active tblptr bytes
 12833   002054  6AF8               	clrf	tblptru,c
 12834   002056  0E00               	movlw	low (__mediumconst shr (0+16))
 12835   002058  22F8               	addwfc	tblptru,f,c
 12836   00205A                     	endif
 12837   00205A  0009               	tblrd		*+
 12838   00205C  CFF5 F2DE          	movff	tablat,??_mnsProcessMessage+18
 12839   002060  0009               	tblrd		*+
 12840   002062  CFF5 F2DF          	movff	tablat,??_mnsProcessMessage+19
 12841   002066  0E0E               	movlw	14
 12842   002068  27DE               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12843   00206A  0E00               	movlw	0
 12844   00206C  23DF               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12845   00206E  C2DE  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12846   002072  C2DF  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12847   002076                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12848   002076  6AF8               	clrf	tblptru,c
 12849   002078                     	endif
 12850   002078                     	if	0	;tblptru may be non-zero
 12851   002078                     	endif
 12852   002078  0009               	tblrd		*+
 12853   00207A  CFF5 F2E0          	movff	tablat,??_mnsProcessMessage+20
 12854   00207E  0009               	tblrd		*+
 12855   002080  CFF5 F2E1          	movff	tablat,??_mnsProcessMessage+21
 12856   002084  D801               	call	u25678
 12857   002086  D00A               	goto	u25679
 12858   002088                     u25678:
 12859   002088  0005               	push	
 12860   00208A  6EFA               	movwf	pclath,c
 12861   00208C  51E0               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12862   00208E  6EFD               	movwf	tosl,c
 12863   002090  51E1               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12864   002092  6EFE               	movwf	tosh,c
 12865   002094  6AFF               	clrf	tosu,c
 12866   002096  50FA               	movf	pclath,w,c
 12867   002098  0E02               	movlw	2
 12868   00209A  0012               	return		;indir
 12869   00209C                     u25679:
 12870   00209C  0101               	movlb	1	; () banked
 12871   00209E  6FCB               	movwf	sendMessage7@data6& (0+255),b
 12872   0020A0  EE20 F004          	lfsr	2,4
 12873   0020A4  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12874   0020A6  26D9               	addwf	fsr2l,f,c
 12875   0020A8  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12876   0020AA  22DA               	addwfc	fsr2h,f,c
 12877   0020AC  50DF               	movf	indf2,w,c
 12878   0020AE  0102               	movlb	2	; () banked
 12879   0020B0  6FE2               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12880   0020B2  6BE3               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12881   0020B4  90D8               	bcf	status,0,c
 12882   0020B6  37E2               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12883   0020B8  37E3               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12884   0020BA  0EFE               	movlw	254
 12885   0020BC  25E2               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12886   0020BE  6FE4               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12887   0020C0  0EFF               	movlw	255
 12888   0020C2  21E3               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12889   0020C4  6FE5               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12890   0020C6  0E69               	movlw	low _services
 12891   0020C8  25E4               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12892   0020CA  6EF6               	movwf	tblptrl,c
 12893   0020CC  0EEE               	movlw	high _services
 12894   0020CE  21E5               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12895   0020D0  6EF7               	movwf	tblptrh,c
 12896   0020D2                     	if	1	;There are 3 active tblptr bytes
 12897   0020D2  6AF8               	clrf	tblptru,c
 12898   0020D4  0E00               	movlw	low (__mediumconst shr (0+16))
 12899   0020D6  22F8               	addwfc	tblptru,f,c
 12900   0020D8                     	endif
 12901   0020D8  0009               	tblrd		*+
 12902   0020DA  CFF5 F2E6          	movff	tablat,??_mnsProcessMessage+26
 12903   0020DE  0009               	tblrd		*+
 12904   0020E0  CFF5 F2E7          	movff	tablat,??_mnsProcessMessage+27
 12905   0020E4  0E0E               	movlw	14
 12906   0020E6  27E6               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12907   0020E8  0E00               	movlw	0
 12908   0020EA  23E7               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12909   0020EC  C2E6  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12910   0020F0  C2E7  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12911   0020F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12912   0020F4  6AF8               	clrf	tblptru,c
 12913   0020F6                     	endif
 12914   0020F6                     	if	0	;tblptru may be non-zero
 12915   0020F6                     	endif
 12916   0020F6  0009               	tblrd		*+
 12917   0020F8  CFF5 F2E8          	movff	tablat,??_mnsProcessMessage+28
 12918   0020FC  0009               	tblrd		*+
 12919   0020FE  CFF5 F2E9          	movff	tablat,??_mnsProcessMessage+29
 12920   002102  D801               	call	u25688
 12921   002104  D00A               	goto	u25689
 12922   002106                     u25688:
 12923   002106  0005               	push	
 12924   002108  6EFA               	movwf	pclath,c
 12925   00210A  51E8               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12926   00210C  6EFD               	movwf	tosl,c
 12927   00210E  51E9               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12928   002110  6EFE               	movwf	tosh,c
 12929   002112  6AFF               	clrf	tosu,c
 12930   002114  50FA               	movf	pclath,w,c
 12931   002116  0E03               	movlw	3
 12932   002118  0012               	return		;indir
 12933   00211A                     u25689:
 12934   00211A  0101               	movlb	1	; () banked
 12935   00211C  6FCC               	movwf	sendMessage7@data7& (0+255),b
 12936   00211E  0EE7               	movlw	231
 12937   002120  EC0D  F061         	call	_sendMessage7
 12938   002124  EF21  F00C         	goto	l23883
 12939   002128                     l24087:
 12940                           
 12941                           ; BSR set to: 2
 12942                           ;../../VLCBlib_PIC/mns.c: 540:             if (m->len < 4) {
 12943   002128  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12944   00212C  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12945   002130  0E04               	movlw	4
 12946   002132  60DF               	cpfslt	indf2,c
 12947   002134  D010               	goto	l24095
 12948                           
 12949                           ; BSR set to: 2
 12950                           ;../../VLCBlib_PIC/mns.c: 541:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12951   002136  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12952   00213A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12953   00213E  0E76               	movlw	118
 12954   002140  0101               	movlb	1	; () banked
 12955   002142  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12956   002144  0E01               	movlw	1
 12957   002146  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12958   002148  0E01               	movlw	1
 12959   00214A  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12960   00214C  0EAF               	movlw	175
 12961   00214E  EC25  F061         	call	_sendMessage5
 12962   002152  EF21  F00C         	goto	l23883
 12963   002156                     l24095:
 12964                           
 12965                           ; BSR set to: 2
 12966                           ;../../VLCBlib_PIC/mns.c: 544:             newMode = m->bytes[2];
 12967   002156  0101               	movlb	1	; () banked
 12968   002158  EE20 F004          	lfsr	2,4
 12969   00215C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12970   00215E  26D9               	addwf	fsr2l,f,c
 12971   002160  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12972   002162  22DA               	addwfc	fsr2h,f,c
 12973   002164  50DF               	movf	indf2,w,c
 12974   002166  0102               	movlb	2	; () banked
 12975   002168  6FEE               	movwf	mnsProcessMessage@newMode& (0+255),b
 12976                           
 12977                           ; BSR set to: 2
 12978                           ;../../VLCBlib_PIC/mns.c: 545:             previousNN.word = nn.word;
 12979   00216A  C0B4  F160         	movff	_nn,_previousNN
 12980   00216E  C0B5  F161         	movff	_nn+1,_previousNN+1
 12981                           
 12982                           ; BSR set to: 2
 12983                           ;../../VLCBlib_PIC/mns.c: 547:             if (mode_state == MODE_NORMAL) {
 12984   002172  0100               	movlb	0	; () banked
 12985   002174  05C4               	decf	_mode_state& (0+255),w,b
 12986   002176  A4D8               	btfss	status,2,c
 12987   002178  D04D               	goto	l24129
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;../../VLCBlib_PIC/mns.c: 548:                 if ((newMode == MODE_SETUP) || (newMode =
      +                          = MODE_UNINITIALISED)) {
 12991   00217A  0102               	movlb	2	; () banked
 12992   00217C  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12993   00217E  B4D8               	btfsc	status,2,c
 12994   002180  D003               	goto	u25720
 12995                           
 12996                           ; BSR set to: 2
 12997   002182  29EE               	incf	mnsProcessMessage@newMode& (0+255),w,b
 12998   002184  A4D8               	btfss	status,2,c
 12999   002186  D046               	goto	l24129
 13000   002188                     u25720:
 13001                           
 13002                           ; BSR set to: 2
 13003                           ;../../VLCBlib_PIC/mns.c: 549:                     sendMessage2((newMode == MODE_SETUP) 
      +                          ? OPC_RQNN : OPC_NNREL, nn.bytes.hi, nn.bytes.lo);
 13004   002188  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 13005   00218A  B4D8               	btfsc	status,2,c
 13006   00218C  D002               	goto	l24109
 13007                           
 13008                           ; BSR set to: 2
 13009   00218E  0E51               	movlw	81
 13010   002190  D001               	goto	L2
 13011   002192                     l24109:
 13012                           
 13013                           ; BSR set to: 2
 13014   002192  0E50               	movlw	80
 13015   002194                     L2:
 13016   002194  6FEB               	movwf	_mnsProcessMessage$3632& (0+255),b
 13017                           
 13018                           ; BSR set to: 2
 13019   002196  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 13020   00219A  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 13021   00219E  51EB               	movf	_mnsProcessMessage$3632& (0+255),w,b
 13022   0021A0  ECF5  F060         	call	_sendMessage2
 13023                           
 13024                           ;../../VLCBlib_PIC/mns.c: 550:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13025   0021A4  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 13026   0021A8  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 13027   0021AC  0E76               	movlw	118
 13028   0021AE  0101               	movlb	1	; () banked
 13029   0021B0  6FC8               	movwf	sendMessage5@data3& (0+255),b
 13030   0021B2  0E01               	movlw	1
 13031   0021B4  6FC9               	movwf	sendMessage5@data4& (0+255),b
 13032   0021B6  0E00               	movlw	0
 13033   0021B8  6FCA               	movwf	sendMessage5@data5& (0+255),b
 13034   0021BA  0EAF               	movlw	175
 13035   0021BC  EC25  F061         	call	_sendMessage5
 13036                           
 13037                           ;../../VLCBlib_PIC/mns.c: 551:                     nn.bytes.lo = nn.bytes.hi = 0;
 13038   0021C0  0E00               	movlw	0
 13039   0021C2  0100               	movlb	0	; () banked
 13040   0021C4  6FB5               	movwf	(_nn+1)& (0+255),b
 13041   0021C6  C0B5  F0B4         	movff	_nn+1,_nn
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;../../VLCBlib_PIC/mns.c: 552:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.hi);
 13045   0021CA  0EFD               	movlw	253
 13046   0021CC  6FA4               	movwf	writeNVM@index& (0+255),b
 13047   0021CE  0E03               	movlw	3
 13048   0021D0  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13049   0021D2  0E00               	movlw	0
 13050   0021D4  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13051   0021D6  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 13052   0021DA  0E00               	movlw	0
 13053   0021DC  EC9F  F05D         	call	_writeNVM
 13054                           
 13055                           ;../../VLCBlib_PIC/mns.c: 553:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.lo);
 13056   0021E0  0EFC               	movlw	252
 13057   0021E2  0100               	movlb	0	; () banked
 13058   0021E4  6FA4               	movwf	writeNVM@index& (0+255),b
 13059   0021E6  0E03               	movlw	3
 13060   0021E8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13061   0021EA  0E00               	movlw	0
 13062   0021EC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13063   0021EE  C0B4  F0A7         	movff	_nn,writeNVM@value
 13064   0021F2  0E00               	movlw	0
 13065   0021F4  EC9F  F05D         	call	_writeNVM
 13066                           
 13067                           ;../../VLCBlib_PIC/mns.c: 555:                     mode_state = (newMode == MODE_SETUP) 
      +                          ? MODE_SETUP : MODE_UNINITIALISED;
 13068   0021F8  0102               	movlb	2	; () banked
 13069   0021FA  51EE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 13070   0021FC  B4D8               	btfsc	status,2,c
 13071   0021FE  D003               	goto	l24121
 13072                           
 13073                           ; BSR set to: 2
 13074   002200  0100               	movlb	0	; () banked
 13075   002202  69C4               	setf	_mode_state& (0+255),b
 13076   002204  D003               	goto	l1525
 13077   002206                     l24121:
 13078                           
 13079                           ; BSR set to: 2
 13080   002206  0E00               	movlw	0
 13081   002208  0100               	movlb	0	; () banked
 13082   00220A  6FC4               	movwf	_mode_state& (0+255),b
 13083   00220C                     l1525:
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;../../VLCBlib_PIC/mns.c: 556:                     setupModePreviousMode = MODE_NORMAL;
 13087   00220C  0E01               	movlw	1
 13088   00220E  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 13089   002210  EF1F  F00C         	goto	l23881
 13090   002214                     l24129:
 13091                           
 13092                           ;../../VLCBlib_PIC/mns.c: 563:             if (newMode == MODE_HEARTBEAT_ON) {
 13093   002214  0E0C               	movlw	12
 13094   002216  0102               	movlb	2	; () banked
 13095   002218  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13096   00221A  A4D8               	btfss	status,2,c
 13097   00221C  D011               	goto	l24141
 13098                           
 13099                           ; BSR set to: 2
 13100                           ;../../VLCBlib_PIC/mns.c: 564:                 mode_flags |= 4;
 13101   00221E  0101               	movlb	1	; () banked
 13102   002220  8565               	bsf	_mode_flags& (0+255),2,b
 13103                           
 13104                           ; BSR set to: 1
 13105                           ;../../VLCBlib_PIC/mns.c: 565:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13106   002222  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 13107   002226  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 13108   00222A  0E76               	movlw	118
 13109   00222C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 13110   00222E  0E01               	movlw	1
 13111   002230  6FC9               	movwf	sendMessage5@data4& (0+255),b
 13112   002232  0E00               	movlw	0
 13113   002234  6FCA               	movwf	sendMessage5@data5& (0+255),b
 13114   002236  0EAF               	movlw	175
 13115   002238  EC25  F061         	call	_sendMessage5
 13116   00223C  EF21  F00C         	goto	l23883
 13117   002240                     l24141:
 13118                           
 13119                           ; BSR set to: 2
 13120   002240  0E0D               	movlw	13
 13121   002242  19EE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 13122   002244  A4D8               	btfss	status,2,c
 13123   002246  EFA6  F00C         	goto	l23909
 13124                           
 13125                           ; BSR set to: 2
 13126                           ;../../VLCBlib_PIC/mns.c: 568:                 mode_flags &= ~4;
 13127   00224A  0101               	movlb	1	; () banked
 13128   00224C  9565               	bcf	_mode_flags& (0+255),2,b
 13129                           
 13130                           ; BSR set to: 1
 13131                           ;../../VLCBlib_PIC/mns.c: 569:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 13132   00224E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 13133   002252  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 13134   002256  0E76               	movlw	118
 13135   002258  6FC8               	movwf	sendMessage5@data3& (0+255),b
 13136   00225A  0E01               	movlw	1
 13137   00225C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 13138   00225E  0E00               	movlw	0
 13139   002260  6FCA               	movwf	sendMessage5@data5& (0+255),b
 13140   002262  0EAF               	movlw	175
 13141   002264  EC25  F061         	call	_sendMessage5
 13142   002268  EF21  F00C         	goto	l23883
 13143   00226C                     l1529:
 13144                           
 13145                           ; BSR set to: 2
 13146   00226C  00FF               	reset		;# 
 13147   00226E  EF21  F00C         	goto	l23883
 13148   002272                     l24161:
 13149                           
 13150                           ; BSR set to: 0
 13151   002272  0101               	movlb	1	; () banked
 13152   002274  EE20 F001          	lfsr	2,1
 13153   002278  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 13154   00227A  26D9               	addwf	fsr2l,f,c
 13155   00227C  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 13156   00227E  22DA               	addwfc	fsr2h,f,c
 13157   002280  50DF               	movf	indf2,w,c
 13158   002282  0102               	movlb	2	; () banked
 13159   002284  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 13160   002286  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 13161                           
 13162                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13163                           ; Switch size 1, requested type "simple"
 13164                           ; Number of cases is 1, Range of values is 0 to 0
 13165                           ; switch strategies available:
 13166                           ; Name         Instructions Cycles
 13167                           ; simple_byte            4     3 (average)
 13168                           ;	Chosen strategy is simple_byte
 13169   002288  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 13170   00228A  0A00               	xorlw	0	; case 0
 13171   00228C  A4D8               	btfss	status,2,c
 13172   00228E  EFA6  F00C         	goto	l23909
 13173                           
 13174                           ; BSR set to: 2
 13175                           ; Switch size 1, requested type "simple"
 13176                           ; Number of cases is 6, Range of values is 79 to 135
 13177                           ; switch strategies available:
 13178                           ; Name         Instructions Cycles
 13179                           ; simple_byte           19    10 (average)
 13180                           ;	Chosen strategy is simple_byte
 13181   002292  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 13182   002294  0A4F               	xorlw	79	; case 79
 13183   002296  B4D8               	btfsc	status,2,c
 13184   002298  D451               	goto	l1492
 13185   00229A  0A11               	xorlw	17	; case 94
 13186   00229C  B4D8               	btfsc	status,2,c
 13187   00229E  D7E6               	goto	l1529
 13188   0022A0  0A2D               	xorlw	45	; case 115
 13189   0022A2  B4D8               	btfsc	status,2,c
 13190   0022A4  EF31  F00D         	goto	l23973
 13191   0022A8  0A05               	xorlw	5	; case 118
 13192   0022AA  B4D8               	btfsc	status,2,c
 13193   0022AC  D73D               	goto	l24087
 13194   0022AE  0A0E               	xorlw	14	; case 120
 13195   0022B0  B4D8               	btfsc	status,2,c
 13196   0022B2  D57E               	goto	l24053
 13197   0022B4  0AFF               	xorlw	255	; case 135
 13198   0022B6  B4D8               	btfsc	status,2,c
 13199   0022B8  D454               	goto	l24007
 13200   0022BA  EFA6  F00C         	goto	l23909
 13201   0022BE                     __end_of_mnsProcessMessage:
 13202                           	callstack 0
 13203                           
 13204 ;; *************** function _ackEventProcessMessage *****************
 13205 ;; Defined at:
 13206 ;;		line 111 in file "../../VLCBlib_PIC/event_acknowledge.c"
 13207 ;; Parameters:    Size  Location     Type
 13208 ;;  m               2   63[BANK1 ] PTR struct Message
 13209 ;;		 -> poll@m(9), 
 13210 ;; Auto vars:     Size  Location     Type
 13211 ;;  eventNN         2    5[BANK2 ] struct Word
 13212 ;;  eventEN         2    2[BANK2 ] struct Word
 13213 ;;  ev              2    0        short 
 13214 ;;  eventIndex      1    4[BANK2 ] unsigned char 
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  1    wreg      enum E12799
 13217 ;; Registers used:
 13218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13219 ;; Tracked objects:
 13220 ;;		On entry : 0/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13224 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13225 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13226 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13227 ;;      Totals:         0       0       2       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13228 ;;Total ram usage:        9 bytes
 13229 ;; Hardware stack levels used: 1
 13230 ;; Hardware stack levels required when called: 19
 13231 ;; This function calls:
 13232 ;;		_ackEventCheckLen
 13233 ;;		_findEvent
 13234 ;;		_findService
 13235 ;;		_isConsumedEvent
 13236 ;;		_sendMessage7
 13237 ;; This function is called by:
 13238 ;;		_poll
 13239 ;; This function uses a non-reentrant model
 13240 ;;
 13241                           
 13242                           	psect	text24
 13243   0067C0                     __ptext24:
 13244                           	callstack 0
 13245   0067C0                     _ackEventProcessMessage:
 13246                           	callstack 10
 13247                           
 13248                           ;../../VLCBlib_PIC/event_acknowledge.c: 112:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 113:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 114:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 117:     if (m->opc == OP
      +                          C_MODE) {
 13249                           
 13250                           ;incstack = 0
 13251   0067C0  0101               	movlb	1	; () banked
 13252   0067C2  EE20 F001          	lfsr	2,1
 13253   0067C6  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13254   0067C8  26D9               	addwf	fsr2l,f,c
 13255   0067CA  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13256   0067CC  22DA               	addwfc	fsr2h,f,c
 13257   0067CE  0E76               	movlw	118
 13258   0067D0  18DE               	xorwf	postinc2,w,c
 13259   0067D2  A4D8               	btfss	status,2,c
 13260   0067D4  D040               	goto	l1323
 13261                           
 13262                           ; BSR set to: 1
 13263                           ;../../VLCBlib_PIC/event_acknowledge.c: 118:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 13264   0067D6  C1FD  F1CF         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 13265   0067DA  C1FE  F1D0         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 13266   0067DE  0E04               	movlw	4
 13267   0067E0  6FD1               	movwf	ackEventCheckLen@needed& (0+255),b
 13268   0067E2  ECE0  F063         	call	_ackEventCheckLen	;wreg free
 13269   0067E6  06E8               	decf	wreg,f,c
 13270   0067E8  A4D8               	btfss	status,2,c
 13271   0067EA  D002               	goto	l23745
 13272   0067EC                     u25260:
 13273   0067EC  0E01               	movlw	1
 13274   0067EE  0012               	return	
 13275   0067F0                     l23745:
 13276                           
 13277                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 13278   0067F0  0101               	movlb	1	; () banked
 13279   0067F2  EE20 F002          	lfsr	2,2
 13280   0067F6  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13281   0067F8  26D9               	addwf	fsr2l,f,c
 13282   0067FA  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13283   0067FC  22DA               	addwfc	fsr2h,f,c
 13284   0067FE  50DE               	movf	postinc2,w,c
 13285   006800  0100               	movlb	0	; () banked
 13286   006802  19B5               	xorwf	(_nn+1)& (0+255),w,b
 13287   006804  A4D8               	btfss	status,2,c
 13288   006806  D025               	goto	l23767
 13289                           
 13290                           ; BSR set to: 0
 13291   006808  0101               	movlb	1	; () banked
 13292   00680A  EE20 F003          	lfsr	2,3
 13293   00680E  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13294   006810  26D9               	addwf	fsr2l,f,c
 13295   006812  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13296   006814  22DA               	addwfc	fsr2h,f,c
 13297   006816  0100               	movlb	0	; () banked
 13298   006818  51B4               	movf	_nn& (0+255),w,b
 13299   00681A  18DE               	xorwf	postinc2,w,c
 13300   00681C  A4D8               	btfss	status,2,c
 13301   00681E  D019               	goto	l23767
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;../../VLCBlib_PIC/event_acknowledge.c: 120:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 13305   006820  0101               	movlb	1	; () banked
 13306   006822  EE20 F004          	lfsr	2,4
 13307   006826  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13308   006828  26D9               	addwf	fsr2l,f,c
 13309   00682A  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13310   00682C  22DA               	addwfc	fsr2h,f,c
 13311   00682E  0E0A               	movlw	10
 13312   006830  18DE               	xorwf	postinc2,w,c
 13313   006832  A4D8               	btfss	status,2,c
 13314   006834  D002               	goto	l23759
 13315                           
 13316                           ; BSR set to: 1
 13317                           ;../../VLCBlib_PIC/event_acknowledge.c: 122:                 mode_flags |= 1;
 13318   006836  8165               	bsf	_mode_flags& (0+255),0,b
 13319   006838  D7D9               	goto	u25260
 13320   00683A                     l23759:
 13321                           
 13322                           ; BSR set to: 1
 13323   00683A  EE20 F004          	lfsr	2,4
 13324   00683E  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13325   006840  26D9               	addwf	fsr2l,f,c
 13326   006842  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13327   006844  22DA               	addwfc	fsr2h,f,c
 13328   006846  0E0B               	movlw	11
 13329   006848  18DE               	xorwf	postinc2,w,c
 13330   00684A  A4D8               	btfss	status,2,c
 13331   00684C  D002               	goto	l23767
 13332                           
 13333                           ; BSR set to: 1
 13334                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:                 mode_flags &= ~1;
 13335   00684E  9165               	bcf	_mode_flags& (0+255),0,b
 13336   006850  D7CD               	goto	u25260
 13337   006852                     l23767:
 13338                           
 13339                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:         return NOT_PROCESSED;
 13340   006852  0E00               	movlw	0
 13341   006854  0012               	return	
 13342   006856                     l1323:
 13343                           
 13344                           ; BSR set to: 1
 13345                           ;../../VLCBlib_PIC/event_acknowledge.c: 135:     if (! (mode_flags & 2)) {
 13346   006856  A365               	btfss	_mode_flags& (0+255),1,b
 13347   006858  D7FC               	goto	l23767
 13348                           
 13349                           ; BSR set to: 1
 13350                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 13351   00685A  0E06               	movlw	6
 13352   00685C  EC83  F051         	call	_findService
 13353   006860  0100               	movlb	0	; () banked
 13354   006862  518D               	movf	?_findService& (0+255),w,b
 13355   006864  118E               	iorwf	(?_findService+1)& (0+255),w,b
 13356   006866  B4D8               	btfsc	status,2,c
 13357   006868  D7F4               	goto	l23767
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     if (m->len < 5) {
 13361   00686A  C1FD  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 13362   00686E  C1FE  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 13363   006872  0E05               	movlw	5
 13364   006874  60DF               	cpfslt	indf2,c
 13365   006876  D001               	goto	l23787
 13366   006878  D7EC               	goto	l23767
 13367   00687A                     l23787:
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventNN.bytes.hi = m->bytes[0];
 13371   00687A  0101               	movlb	1	; () banked
 13372   00687C  EE20 F002          	lfsr	2,2
 13373   006880  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13374   006882  26D9               	addwf	fsr2l,f,c
 13375   006884  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13376   006886  22DA               	addwfc	fsr2h,f,c
 13377   006888  50DF               	movf	indf2,w,c
 13378   00688A  0102               	movlb	2	; () banked
 13379   00688C  6FD2               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 13380                           
 13381                           ;../../VLCBlib_PIC/event_acknowledge.c: 146:     eventNN.bytes.lo = m->bytes[1];
 13382   00688E  0101               	movlb	1	; () banked
 13383   006890  EE20 F003          	lfsr	2,3
 13384   006894  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13385   006896  26D9               	addwf	fsr2l,f,c
 13386   006898  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13387   00689A  22DA               	addwfc	fsr2h,f,c
 13388   00689C  50DF               	movf	indf2,w,c
 13389   00689E  0102               	movlb	2	; () banked
 13390   0068A0  6FD1               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 13391                           
 13392                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     eventEN.bytes.hi = m->bytes[2];
 13393   0068A2  0101               	movlb	1	; () banked
 13394   0068A4  EE20 F004          	lfsr	2,4
 13395   0068A8  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13396   0068AA  26D9               	addwf	fsr2l,f,c
 13397   0068AC  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13398   0068AE  22DA               	addwfc	fsr2h,f,c
 13399   0068B0  50DF               	movf	indf2,w,c
 13400   0068B2  0102               	movlb	2	; () banked
 13401   0068B4  6FCF               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13402                           
 13403                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     eventEN.bytes.lo = m->bytes[3];
 13404   0068B6  0101               	movlb	1	; () banked
 13405   0068B8  EE20 F005          	lfsr	2,5
 13406   0068BC  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13407   0068BE  26D9               	addwf	fsr2l,f,c
 13408   0068C0  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13409   0068C2  22DA               	addwfc	fsr2h,f,c
 13410   0068C4  50DF               	movf	indf2,w,c
 13411   0068C6  0102               	movlb	2	; () banked
 13412   0068C8  6FCE               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13413                           
 13414                           ;../../VLCBlib_PIC/event_acknowledge.c: 150:     switch (m->opc) {
 13415   0068CA  D019               	goto	l23799
 13416   0068CC                     l23789:
 13417                           
 13418                           ; BSR set to: 2
 13419                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13420   0068CC  C2D1  F1BE         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13421   0068D0  C2D2  F1BF         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13422   0068D4  C2D1  F1C0         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13423   0068D8  C2D2  F1C1         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13424   0068DC  ECF8  F052         	call	_findEvent	;wreg free
 13425   0068E0  D00B               	goto	L3
 13426   0068E2                     l23791:
 13427                           
 13428                           ; BSR set to: 2
 13429                           ;../../VLCBlib_PIC/event_acknowledge.c: 159:             eventIndex = findEvent(0, event
      +                          NN.word);
 13430   0068E2  0E00               	movlw	0
 13431   0068E4  0101               	movlb	1	; () banked
 13432   0068E6  6FBF               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13433   0068E8  0E00               	movlw	0
 13434   0068EA  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 13435   0068EC  C2D1  F1C0         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13436   0068F0  C2D2  F1C1         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13437   0068F4  ECF8  F052         	call	_findEvent	;wreg free
 13438   0068F8                     L3:
 13439   0068F8  0102               	movlb	2	; () banked
 13440   0068FA  6FD0               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13441                           
 13442                           ;../../VLCBlib_PIC/event_acknowledge.c: 160:             break;
 13443   0068FC  D01D               	goto	l23801
 13444   0068FE                     l23799:
 13445                           
 13446                           ; BSR set to: 2
 13447   0068FE  0101               	movlb	1	; () banked
 13448   006900  EE20 F001          	lfsr	2,1
 13449   006904  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13450   006906  26D9               	addwf	fsr2l,f,c
 13451   006908  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13452   00690A  22DA               	addwfc	fsr2h,f,c
 13453   00690C  50DF               	movf	indf2,w,c
 13454   00690E  0102               	movlb	2	; () banked
 13455   006910  6FCC               	movwf	??_ackEventProcessMessage& (0+255),b
 13456   006912  6BCD               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13457                           
 13458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13459                           ; Switch size 1, requested type "simple"
 13460                           ; Number of cases is 1, Range of values is 0 to 0
 13461                           ; switch strategies available:
 13462                           ; Name         Instructions Cycles
 13463                           ; simple_byte            4     3 (average)
 13464                           ;	Chosen strategy is simple_byte
 13465   006914  51CD               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13466   006916  0A00               	xorlw	0	; case 0
 13467   006918  A4D8               	btfss	status,2,c
 13468   00691A  D79B               	goto	l23767
 13469                           
 13470                           ; BSR set to: 2
 13471                           ; Switch size 1, requested type "simple"
 13472                           ; Number of cases is 4, Range of values is 144 to 153
 13473                           ; switch strategies available:
 13474                           ; Name         Instructions Cycles
 13475                           ; simple_byte           13     7 (average)
 13476                           ;	Chosen strategy is simple_byte
 13477   00691C  51CC               	movf	??_ackEventProcessMessage& (0+255),w,b
 13478   00691E  0A90               	xorlw	144	; case 144
 13479   006920  B4D8               	btfsc	status,2,c
 13480   006922  D7D4               	goto	l23789
 13481   006924  0A01               	xorlw	1	; case 145
 13482   006926  B4D8               	btfsc	status,2,c
 13483   006928  D7D1               	goto	l23789
 13484   00692A  0A09               	xorlw	9	; case 152
 13485   00692C  B4D8               	btfsc	status,2,c
 13486   00692E  D7D9               	goto	l23791
 13487   006930  0A01               	xorlw	1	; case 153
 13488   006932  B4D8               	btfsc	status,2,c
 13489   006934  D7D6               	goto	l23791
 13490   006936  D78D               	goto	l23767
 13491   006938                     l23801:
 13492                           
 13493                           ; BSR set to: 2
 13494                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:     if (eventIndex != 0xff) {
 13495   006938  29D0               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13496   00693A  B4D8               	btfsc	status,2,c
 13497   00693C  D78A               	goto	l23767
 13498                           
 13499                           ; BSR set to: 2
 13500                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:         if (isConsumedEvent(eventIndex)) {
 13501   00693E  51D0               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13502   006940  EC18  F063         	call	_isConsumedEvent
 13503   006944  0900               	iorlw	0
 13504   006946  B4D8               	btfsc	status,2,c
 13505   006948  D784               	goto	l23767
 13506                           
 13507                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13508   00694A  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 13509   00694E  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 13510   006952  0101               	movlb	1	; () banked
 13511   006954  EE20 F001          	lfsr	2,1
 13512   006958  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13513   00695A  26D9               	addwf	fsr2l,f,c
 13514   00695C  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13515   00695E  22DA               	addwfc	fsr2h,f,c
 13516   006960  50DF               	movf	indf2,w,c
 13517   006962  6FC8               	movwf	sendMessage7@data3& (0+255),b
 13518   006964  EE20 F002          	lfsr	2,2
 13519   006968  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13520   00696A  26D9               	addwf	fsr2l,f,c
 13521   00696C  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13522   00696E  22DA               	addwfc	fsr2h,f,c
 13523   006970  50DF               	movf	indf2,w,c
 13524   006972  6FC9               	movwf	sendMessage7@data4& (0+255),b
 13525   006974  EE20 F003          	lfsr	2,3
 13526   006978  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13527   00697A  26D9               	addwf	fsr2l,f,c
 13528   00697C  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13529   00697E  22DA               	addwfc	fsr2h,f,c
 13530   006980  50DF               	movf	indf2,w,c
 13531   006982  6FCA               	movwf	sendMessage7@data5& (0+255),b
 13532   006984  EE20 F004          	lfsr	2,4
 13533   006988  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13534   00698A  26D9               	addwf	fsr2l,f,c
 13535   00698C  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13536   00698E  22DA               	addwfc	fsr2h,f,c
 13537   006990  50DF               	movf	indf2,w,c
 13538   006992  6FCB               	movwf	sendMessage7@data6& (0+255),b
 13539   006994  EE20 F005          	lfsr	2,5
 13540   006998  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13541   00699A  26D9               	addwf	fsr2l,f,c
 13542   00699C  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13543   00699E  22DA               	addwfc	fsr2h,f,c
 13544   0069A0  50DF               	movf	indf2,w,c
 13545   0069A2  6FCC               	movwf	sendMessage7@data7& (0+255),b
 13546   0069A4  0EE6               	movlw	230
 13547   0069A6  EC0D  F061         	call	_sendMessage7
 13548                           
 13549                           ;../../VLCBlib_PIC/event_acknowledge.c: 171:             ackDiagnostics[0x01].asInt++;
 13550   0069AA  0101               	movlb	1	; () banked
 13551   0069AC  4BB8               	infsnz	(_ackDiagnostics+2)& (0+255),f,b
 13552   0069AE  2BB9               	incf	(_ackDiagnostics+3)& (0+255),f,b
 13553   0069B0  D750               	goto	l23767
 13554   0069B2                     __end_of_ackEventProcessMessage:
 13555                           	callstack 0
 13556                           
 13557 ;; *************** function _bootProcessMessage *****************
 13558 ;; Defined at:
 13559 ;;		line 231 in file "../../VLCBlib_PIC/boot.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;  m               2   63[BANK1 ] PTR struct Message
 13562 ;;		 -> poll@m(9), 
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;		None
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      enum E12799
 13567 ;; Registers used:
 13568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13574 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13576 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13577 ;;      Totals:         0       0       2       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13578 ;;Total ram usage:        4 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 18
 13581 ;; This function calls:
 13582 ;;		_writeNVM
 13583 ;; This function is called by:
 13584 ;;		_poll
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           	psect	text25
 13589   00A26E                     __ptext25:
 13590                           	callstack 0
 13591   00A26E                     _bootProcessMessage:
 13592                           	callstack 11
 13593                           
 13594                           ;../../VLCBlib_PIC/boot.c: 233:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13595                           
 13596                           ;incstack = 0
 13597   00A26E  0101               	movlb	1	; () banked
 13598   00A270  EE20 F002          	lfsr	2,2
 13599   00A274  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13600   00A276  26D9               	addwf	fsr2l,f,c
 13601   00A278  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13602   00A27A  22DA               	addwfc	fsr2h,f,c
 13603   00A27C  50DE               	movf	postinc2,w,c
 13604   00A27E  0100               	movlb	0	; () banked
 13605   00A280  19B5               	xorwf	(_nn+1)& (0+255),w,b
 13606   00A282  B4D8               	btfsc	status,2,c
 13607   00A284  D002               	goto	l23691
 13608   00A286                     u25210:
 13609   00A286  0E00               	movlw	0
 13610   00A288  0012               	return	
 13611   00A28A                     l23691:
 13612                           
 13613                           ; BSR set to: 0
 13614                           ;../../VLCBlib_PIC/boot.c: 234:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13615   00A28A  0101               	movlb	1	; () banked
 13616   00A28C  EE20 F003          	lfsr	2,3
 13617   00A290  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13618   00A292  26D9               	addwf	fsr2l,f,c
 13619   00A294  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13620   00A296  22DA               	addwfc	fsr2h,f,c
 13621   00A298  0100               	movlb	0	; () banked
 13622   00A29A  51B4               	movf	_nn& (0+255),w,b
 13623   00A29C  18DE               	xorwf	postinc2,w,c
 13624   00A29E  A4D8               	btfss	status,2,c
 13625   00A2A0  D7F2               	goto	u25210
 13626   00A2A2  D01A               	goto	l23715
 13627   00A2A4                     l23697:
 13628                           
 13629                           ; BSR set to: 2
 13630                           ;../../VLCBlib_PIC/boot.c: 239:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13631   00A2A4  0101               	movlb	1	; () banked
 13632   00A2A6  EE20 F004          	lfsr	2,4
 13633   00A2AA  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13634   00A2AC  26D9               	addwf	fsr2l,f,c
 13635   00A2AE  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13636   00A2B0  22DA               	addwfc	fsr2h,f,c
 13637   00A2B2  0E0E               	movlw	14
 13638   00A2B4  18DE               	xorwf	postinc2,w,c
 13639   00A2B6  A4D8               	btfss	status,2,c
 13640   00A2B8  D7E6               	goto	u25210
 13641   00A2BA                     l23703:
 13642                           
 13643                           ;../../VLCBlib_PIC/boot.c: 244:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13644   00A2BA  0EFF               	movlw	255
 13645   00A2BC  0100               	movlb	0	; () banked
 13646   00A2BE  6FA4               	movwf	writeNVM@index& (0+255),b
 13647   00A2C0  0E03               	movlw	3
 13648   00A2C2  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13649   00A2C4  0E00               	movlw	0
 13650   00A2C6  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13651   00A2C8  0EFF               	movlw	255
 13652   00A2CA  6FA7               	movwf	writeNVM@value& (0+255),b
 13653   00A2CC  0E00               	movlw	0
 13654   00A2CE  EC9F  F05D         	call	_writeNVM
 13655   00A2D2  00FF               	reset		;# 
 13656                           
 13657                           ;../../VLCBlib_PIC/boot.c: 246:             return PROCESSED;
 13658   00A2D4  0E01               	movlw	1
 13659   00A2D6  0012               	return	
 13660   00A2D8                     l23715:
 13661                           
 13662                           ; BSR set to: 0
 13663   00A2D8  0101               	movlb	1	; () banked
 13664   00A2DA  EE20 F001          	lfsr	2,1
 13665   00A2DE  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13666   00A2E0  26D9               	addwf	fsr2l,f,c
 13667   00A2E2  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13668   00A2E4  22DA               	addwfc	fsr2h,f,c
 13669   00A2E6  50DF               	movf	indf2,w,c
 13670   00A2E8  0102               	movlb	2	; () banked
 13671   00A2EA  6FCC               	movwf	??_bootProcessMessage& (0+255),b
 13672   00A2EC  6BCD               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13673                           
 13674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13675                           ; Switch size 1, requested type "simple"
 13676                           ; Number of cases is 1, Range of values is 0 to 0
 13677                           ; switch strategies available:
 13678                           ; Name         Instructions Cycles
 13679                           ; simple_byte            4     3 (average)
 13680                           ;	Chosen strategy is simple_byte
 13681   00A2EE  51CD               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13682   00A2F0  0A00               	xorlw	0	; case 0
 13683   00A2F2  A4D8               	btfss	status,2,c
 13684   00A2F4  D7C8               	goto	u25210
 13685                           
 13686                           ; BSR set to: 2
 13687                           ; Switch size 1, requested type "simple"
 13688                           ; Number of cases is 2, Range of values is 92 to 118
 13689                           ; switch strategies available:
 13690                           ; Name         Instructions Cycles
 13691                           ; simple_byte            7     4 (average)
 13692                           ;	Chosen strategy is simple_byte
 13693   00A2F6  51CC               	movf	??_bootProcessMessage& (0+255),w,b
 13694   00A2F8  0A5C               	xorlw	92	; case 92
 13695   00A2FA  B4D8               	btfsc	status,2,c
 13696   00A2FC  D7DE               	goto	l23703
 13697   00A2FE  0A2A               	xorlw	42	; case 118
 13698   00A300  B4D8               	btfsc	status,2,c
 13699   00A302  D7D0               	goto	l23697
 13700   00A304  D7C0               	goto	u25210
 13701   00A306                     __end_of_bootProcessMessage:
 13702                           	callstack 0
 13703                           
 13704 ;; *************** function _consumer2QProcessMessage *****************
 13705 ;; Defined at:
 13706 ;;		line 142 in file "../event_consumerDualActionQueue.c"
 13707 ;; Parameters:    Size  Location     Type
 13708 ;;  m               2   63[BANK1 ] PTR struct Message
 13709 ;;		 -> poll@m(9), 
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;  nextSimultan    1   11[BANK2 ] unsigned char 
 13712 ;;  firstAction     1   10[BANK2 ] unsigned char 
 13713 ;;  nextAction      1    9[BANK2 ] unsigned char 
 13714 ;;  enn             2    6[BANK2 ] unsigned short 
 13715 ;;  action          1   16[BANK2 ] unsigned char 
 13716 ;;  e               1   15[BANK2 ] unsigned char 
 13717 ;;  ca              1   14[BANK2 ] unsigned char 
 13718 ;;  masked_actio    1   13[BANK2 ] unsigned char 
 13719 ;;  io              1   12[BANK2 ] unsigned char 
 13720 ;;  tableIndex      1    8[BANK2 ] unsigned char 
 13721 ;;  opc             1    5[BANK2 ] unsigned char 
 13722 ;;  change          1    4[BANK2 ] char 
 13723 ;;  end             1    3[BANK2 ] unsigned char 
 13724 ;;  start           1    0        unsigned char 
 13725 ;; Return value:  Size  Location     Type
 13726 ;;                  1    wreg      enum E12799
 13727 ;; Registers used:
 13728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13729 ;; Tracked objects:
 13730 ;;		On entry : 0/0
 13731 ;;		On exit  : 0/0
 13732 ;;		Unchanged: 0/0
 13733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13734 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13735 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13736 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13737 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13738 ;;Total ram usage:       19 bytes
 13739 ;; Hardware stack levels used: 1
 13740 ;; Hardware stack levels required when called: 16
 13741 ;; This function calls:
 13742 ;;		___awdiv
 13743 ;;		___awmod
 13744 ;;		_findEvent
 13745 ;;		_getEVs
 13746 ;;		_getNV
 13747 ;;		_pushTwoAction
 13748 ;;		_setExpeditedActions
 13749 ;;		_setNormalActions
 13750 ;; This function is called by:
 13751 ;;		_poll
 13752 ;; This function uses a non-reentrant model
 13753 ;;
 13754                           
 13755                           	psect	text26
 13756   003A32                     __ptext26:
 13757                           	callstack 0
 13758   003A32                     _consumer2QProcessMessage:
 13759                           	callstack 13
 13760                           
 13761                           ;../event_consumerDualActionQueue.c: 143:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 144:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 145:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 146:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 147:     uint8_t action;;../event_consumerDualActionQueue.c: 148:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 149:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 150:     uint8_t io;;../event_consumerDualActionQueue.c: 15
      +                          1:     uint16_t enn;
 13762                           
 13763                           ;incstack = 0
 13764   003A32  C1FD  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13765   003A36  C1FE  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13766   003A3A  0E05               	movlw	5
 13767   003A3C  60DF               	cpfslt	indf2,c
 13768   003A3E  D002               	goto	l23477
 13769   003A40                     u24940:
 13770   003A40  0E00               	movlw	0
 13771   003A42  0012               	return	
 13772   003A44                     l23477:
 13773                           
 13774                           ;../event_consumerDualActionQueue.c: 155:     enn = ((uint16_t)m->bytes[0])*256+m->bytes
      +                          [1];
 13775   003A44  0101               	movlb	1	; () banked
 13776   003A46  EE20 F003          	lfsr	2,3
 13777   003A4A  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13778   003A4C  26D9               	addwf	fsr2l,f,c
 13779   003A4E  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13780   003A50  22DA               	addwfc	fsr2h,f,c
 13781   003A52  50DF               	movf	indf2,w,c
 13782   003A54  0102               	movlb	2	; () banked
 13783   003A56  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13784   003A58  0101               	movlb	1	; () banked
 13785   003A5A  EE20 F002          	lfsr	2,2
 13786   003A5E  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13787   003A60  26D9               	addwf	fsr2l,f,c
 13788   003A62  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13789   003A64  22DA               	addwfc	fsr2h,f,c
 13790   003A66  50DF               	movf	indf2,w,c
 13791   003A68  0102               	movlb	2	; () banked
 13792   003A6A  6FCD               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13793   003A6C  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13794   003A6E  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13795   003A70  C2CD  F2D3         	movff	??_consumer2QProcessMessage+1,consumer2QProcessMessage@enn+1
 13796                           
 13797                           ;../event_consumerDualActionQueue.c: 157:     switch (m->opc) {
 13798   003A74  D010               	goto	l23491
 13799   003A76                     l449:
 13800                           
 13801                           ; BSR set to: 2
 13802                           ;../event_consumerDualActionQueue.c: 164:             enn = 0;
 13803                           
 13804                           ; BSR set to: 2
 13805   003A76  0E00               	movlw	0
 13806   003A78  6FD3               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13807   003A7A  0E00               	movlw	0
 13808   003A7C  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13809   003A7E                     l454:
 13810                           
 13811                           ; BSR set to: 2
 13812                           ;../event_consumerDualActionQueue.c: 173:             end = 20;
 13813   003A7E  0E14               	movlw	20
 13814   003A80  6FCF               	movwf	consumer2QProcessMessage@end& (0+255),b
 13815                           
 13816                           ;../event_consumerDualActionQueue.c: 174:             change = 1;
 13817   003A82  0E01               	movlw	1
 13818   003A84  6FD0               	movwf	consumer2QProcessMessage@change& (0+255),b
 13819                           
 13820                           ;../event_consumerDualActionQueue.c: 175:             break;
 13821   003A86  D048               	goto	l23493
 13822   003A88                     l458:
 13823                           
 13824                           ; BSR set to: 2
 13825                           ;../event_consumerDualActionQueue.c: 182:             enn = 0;
 13826                           
 13827                           ; BSR set to: 2
 13828   003A88  0E00               	movlw	0
 13829   003A8A  6FD3               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13830   003A8C  0E00               	movlw	0
 13831   003A8E  6FD2               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13832   003A90                     l463:
 13833                           
 13834                           ; BSR set to: 2
 13835                           ;../event_consumerDualActionQueue.c: 191:             end = 1 -1;
 13836   003A90  0E00               	movlw	0
 13837   003A92  6FCF               	movwf	consumer2QProcessMessage@end& (0+255),b
 13838                           
 13839                           ; BSR set to: 2
 13840                           ;../event_consumerDualActionQueue.c: 193:             break;
 13841   003A94  D041               	goto	l23493
 13842   003A96                     l23491:
 13843                           
 13844                           ; BSR set to: 2
 13845   003A96  0101               	movlb	1	; () banked
 13846   003A98  EE20 F001          	lfsr	2,1
 13847   003A9C  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13848   003A9E  26D9               	addwf	fsr2l,f,c
 13849   003AA0  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13850   003AA2  22DA               	addwfc	fsr2h,f,c
 13851   003AA4  50DF               	movf	indf2,w,c
 13852   003AA6  0102               	movlb	2	; () banked
 13853   003AA8  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13854   003AAA  6BCD               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13855                           
 13856                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13857                           ; Switch size 1, requested type "simple"
 13858                           ; Number of cases is 1, Range of values is 0 to 0
 13859                           ; switch strategies available:
 13860                           ; Name         Instructions Cycles
 13861                           ; simple_byte            4     3 (average)
 13862                           ;	Chosen strategy is simple_byte
 13863   003AAC  51CD               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13864   003AAE  0A00               	xorlw	0	; case 0
 13865   003AB0  A4D8               	btfss	status,2,c
 13866   003AB2  D7C6               	goto	u24940
 13867                           
 13868                           ; BSR set to: 2
 13869                           ; Switch size 1, requested type "simple"
 13870                           ; Number of cases is 16, Range of values is 144 to 249
 13871                           ; switch strategies available:
 13872                           ; Name         Instructions Cycles
 13873                           ; simple_byte           49    25 (average)
 13874                           ;	Chosen strategy is simple_byte
 13875   003AB4  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13876   003AB6  0A90               	xorlw	144	; case 144
 13877   003AB8  B4D8               	btfsc	status,2,c
 13878   003ABA  D7E1               	goto	l454
 13879   003ABC  0A01               	xorlw	1	; case 145
 13880   003ABE  B4D8               	btfsc	status,2,c
 13881   003AC0  D7E7               	goto	l463
 13882   003AC2  0A09               	xorlw	9	; case 152
 13883   003AC4  B4D8               	btfsc	status,2,c
 13884   003AC6  D7D7               	goto	l449
 13885   003AC8  0A01               	xorlw	1	; case 153
 13886   003ACA  B4D8               	btfsc	status,2,c
 13887   003ACC  D7DD               	goto	l458
 13888   003ACE  0A29               	xorlw	41	; case 176
 13889   003AD0  B4D8               	btfsc	status,2,c
 13890   003AD2  D7D5               	goto	l454
 13891   003AD4  0A01               	xorlw	1	; case 177
 13892   003AD6  B4D8               	btfsc	status,2,c
 13893   003AD8  D7DB               	goto	l463
 13894   003ADA  0A09               	xorlw	9	; case 184
 13895   003ADC  B4D8               	btfsc	status,2,c
 13896   003ADE  D7CB               	goto	l449
 13897   003AE0  0A01               	xorlw	1	; case 185
 13898   003AE2  B4D8               	btfsc	status,2,c
 13899   003AE4  D7D1               	goto	l458
 13900   003AE6  0A69               	xorlw	105	; case 208
 13901   003AE8  B4D8               	btfsc	status,2,c
 13902   003AEA  D7C9               	goto	l454
 13903   003AEC  0A01               	xorlw	1	; case 209
 13904   003AEE  B4D8               	btfsc	status,2,c
 13905   003AF0  D7CF               	goto	l463
 13906   003AF2  0A09               	xorlw	9	; case 216
 13907   003AF4  B4D8               	btfsc	status,2,c
 13908   003AF6  D7BF               	goto	l449
 13909   003AF8  0A01               	xorlw	1	; case 217
 13910   003AFA  B4D8               	btfsc	status,2,c
 13911   003AFC  D7C5               	goto	l458
 13912   003AFE  0A29               	xorlw	41	; case 240
 13913   003B00  B4D8               	btfsc	status,2,c
 13914   003B02  D7BD               	goto	l454
 13915   003B04  0A01               	xorlw	1	; case 241
 13916   003B06  B4D8               	btfsc	status,2,c
 13917   003B08  D7C3               	goto	l463
 13918   003B0A  0A09               	xorlw	9	; case 248
 13919   003B0C  B4D8               	btfsc	status,2,c
 13920   003B0E  D7B3               	goto	l449
 13921   003B10  0A01               	xorlw	1	; case 249
 13922   003B12  B4D8               	btfsc	status,2,c
 13923   003B14  D7B9               	goto	l458
 13924   003B16  D794               	goto	u24940
 13925   003B18                     l23493:
 13926                           
 13927                           ; BSR set to: 2
 13928                           ;../event_consumerDualActionQueue.c: 199:     tableIndex = findEvent(enn, ((uint16_t)m->
      +                          bytes[2])*256+m->bytes[3]);
 13929   003B18  C2D2  F1BE         	movff	consumer2QProcessMessage@enn,findEvent@nodeNumber
 13930   003B1C  C2D3  F1BF         	movff	consumer2QProcessMessage@enn+1,findEvent@nodeNumber+1
 13931   003B20  0101               	movlb	1	; () banked
 13932   003B22  EE20 F005          	lfsr	2,5
 13933   003B26  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13934   003B28  26D9               	addwf	fsr2l,f,c
 13935   003B2A  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13936   003B2C  22DA               	addwfc	fsr2h,f,c
 13937   003B2E  50DF               	movf	indf2,w,c
 13938   003B30  0102               	movlb	2	; () banked
 13939   003B32  6FCC               	movwf	??_consumer2QProcessMessage& (0+255),b
 13940   003B34  0101               	movlb	1	; () banked
 13941   003B36  EE20 F004          	lfsr	2,4
 13942   003B3A  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13943   003B3C  26D9               	addwf	fsr2l,f,c
 13944   003B3E  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13945   003B40  22DA               	addwfc	fsr2h,f,c
 13946   003B42  50DF               	movf	indf2,w,c
 13947   003B44  0102               	movlb	2	; () banked
 13948   003B46  6FCD               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13949   003B48  51CC               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13950   003B4A  0101               	movlb	1	; () banked
 13951   003B4C  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 13952   003B4E  C2CD  F1C1         	movff	??_consumer2QProcessMessage+1,findEvent@eventNumber+1
 13953   003B52  ECF8  F052         	call	_findEvent	;wreg free
 13954   003B56  0102               	movlb	2	; () banked
 13955   003B58  6FD4               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13956                           
 13957                           ; BSR set to: 2
 13958                           ;../event_consumerDualActionQueue.c: 200:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13959   003B5A  29D4               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13960   003B5C  B4D8               	btfsc	status,2,c
 13961   003B5E  D770               	goto	u24940
 13962                           
 13963                           ; BSR set to: 2
 13964   003B60  51D4               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13965   003B62  EC35  F042         	call	_getEVs
 13966                           
 13967                           ;../event_consumerDualActionQueue.c: 208:     opc=m->opc;
 13968   003B66  0101               	movlb	1	; () banked
 13969   003B68  EE20 F001          	lfsr	2,1
 13970   003B6C  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13971   003B6E  26D9               	addwf	fsr2l,f,c
 13972   003B70  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13973   003B72  22DA               	addwfc	fsr2h,f,c
 13974   003B74  50DF               	movf	indf2,w,c
 13975   003B76  0102               	movlb	2	; () banked
 13976   003B78  6FD1               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13977                           
 13978                           ; BSR set to: 2
 13979                           ;../event_consumerDualActionQueue.c: 210:     if ( ! (opc&0b00000001)) {
 13980   003B7A  B1D1               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13981   003B7C  D07F               	goto	l466
 13982                           
 13983                           ; BSR set to: 2
 13984                           ;../event_consumerDualActionQueue.c: 214:         for (e=1; e<20 ;e++) {
 13985   003B7E  0E01               	movlw	1
 13986   003B80  6FDB               	movwf	consumer2QProcessMessage@e& (0+255),b
 13987   003B82                     l23513:
 13988                           
 13989                           ; BSR set to: 2
 13990                           ;../event_consumerDualActionQueue.c: 215:             action = evs[e];
 13991   003B82  0E20               	movlw	low _evs
 13992   003B84  25DB               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13993   003B86  6ED9               	movwf	fsr2l,c
 13994   003B88  6ADA               	clrf	fsr2h,c
 13995   003B8A  0E02               	movlw	high _evs
 13996   003B8C  22DA               	addwfc	fsr2h,f,c
 13997   003B8E  50DF               	movf	indf2,w,c
 13998   003B90  6FDC               	movwf	consumer2QProcessMessage@action& (0+255),b
 13999                           
 14000                           ; BSR set to: 2
 14001                           ;../event_consumerDualActionQueue.c: 216:             if (action != 0) {
 14002   003B92  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14003   003B94  B4D8               	btfsc	status,2,c
 14004   003B96  D06C               	goto	l470
 14005                           
 14006                           ; BSR set to: 2
 14007                           ;../event_consumerDualActionQueue.c: 218:                 masked_action = action&0x7F;
 14008   003B98  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14009   003B9A  0B7F               	andlw	127
 14010   003B9C  6FD9               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 14011                           
 14012                           ;../event_consumerDualActionQueue.c: 219:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 14013   003B9E  0E59               	movlw	89
 14014   003BA0  61D9               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 14015   003BA2  D066               	goto	l470
 14016                           
 14017                           ; BSR set to: 2
 14018                           ;../event_consumerDualActionQueue.c: 221:                     if ((masked_action) == 7) 
      +                          {
 14019   003BA4  0E07               	movlw	7
 14020   003BA6  19D9               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14021   003BA8  B4D8               	btfsc	status,2,c
 14022   003BAA  D106               	goto	u25160
 14023                           
 14024                           ; BSR set to: 2
 14025                           ;../event_consumerDualActionQueue.c: 224:                     if ((masked_action) < 8) {
 14026   003BAC  0E08               	movlw	8
 14027   003BAE  61D9               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 14028   003BB0  D004               	goto	l23527
 14029                           
 14030                           ; BSR set to: 2
 14031                           ;../event_consumerDualActionQueue.c: 225:                         pushTwoAction(action);
 14032   003BB2  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14033   003BB4  EC3F  F05B         	call	_pushTwoAction
 14034                           
 14035                           ;../event_consumerDualActionQueue.c: 226:                     } else {
 14036   003BB8  D05B               	goto	l470
 14037   003BBA                     l23527:
 14038                           
 14039                           ; BSR set to: 2
 14040                           ;../event_consumerDualActionQueue.c: 227:                         io = (((masked_action)
      +                          -8)/5);
 14041   003BBA  0EF8               	movlw	248
 14042   003BBC  25D9               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14043   003BBE  0100               	movlb	0	; () banked
 14044   003BC0  6F97               	movwf	___awdiv@dividend& (0+255),b
 14045   003BC2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14046   003BC4  0EFF               	movlw	255
 14047   003BC6  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14048   003BC8  0E00               	movlw	0
 14049   003BCA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14050   003BCC  0E05               	movlw	5
 14051   003BCE  6F99               	movwf	___awdiv@divisor& (0+255),b
 14052   003BD0  EC59  F054         	call	___awdiv	;wreg free
 14053   003BD4  0100               	movlb	0	; () banked
 14054   003BD6  5197               	movf	?___awdiv& (0+255),w,b
 14055   003BD8  0102               	movlb	2	; () banked
 14056   003BDA  6FD8               	movwf	consumer2QProcessMessage@io& (0+255),b
 14057                           
 14058                           ;../event_consumerDualActionQueue.c: 228:                         ca = (((masked_action)
      +                          -8)%5);
 14059   003BDC  0EF8               	movlw	248
 14060   003BDE  25D9               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 14061   003BE0  0100               	movlb	0	; () banked
 14062   003BE2  6F8D               	movwf	___awmod@dividend& (0+255),b
 14063   003BE4  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14064   003BE6  0EFF               	movlw	255
 14065   003BE8  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14066   003BEA  0E00               	movlw	0
 14067   003BEC  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14068   003BEE  0E05               	movlw	5
 14069   003BF0  6F8F               	movwf	___awmod@divisor& (0+255),b
 14070   003BF2  EC6E  F058         	call	___awmod	;wreg free
 14071   003BF6  0100               	movlb	0	; () banked
 14072   003BF8  518D               	movf	?___awmod& (0+255),w,b
 14073   003BFA  0102               	movlb	2	; () banked
 14074   003BFC  6FDA               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14075                           
 14076                           ;../event_consumerDualActionQueue.c: 229:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14077   003BFE  D020               	goto	l23549
 14078   003C00                     l23529:
 14079                           
 14080                           ; BSR set to: 0
 14081                           ;../event_consumerDualActionQueue.c: 234:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14082   003C00  0102               	movlb	2	; () banked
 14083   003C02  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14084   003C04  0D07               	mullw	7
 14085   003C06  50F3               	movf	243,w,c
 14086   003C08  0F11               	addlw	17
 14087   003C0A  ECB0  F05F         	call	_getNV
 14088   003C0E  0100               	movlb	0	; () banked
 14089   003C10  BF8D               	btfsc	?_getNV& (0+255),7,b
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;../event_consumerDualActionQueue.c: 235:                                     setExpedit
      +                          edActions();
 14093   003C12  EC68  F064         	call	_setExpeditedActions	;wreg free
 14094   003C16                     l23533:
 14095                           
 14096                           ;../event_consumerDualActionQueue.c: 240:                                 if (ca == 0) {
 14097   003C16  0102               	movlb	2	; () banked
 14098   003C18  51DA               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14099   003C1A  B4D8               	btfsc	status,2,c
 14100                           
 14101                           ; BSR set to: 2
 14102                           ;../event_consumerDualActionQueue.c: 242:                                     action++;
 14103   003C1C  2BDC               	incf	consumer2QProcessMessage@action& (0+255),f,b
 14104                           
 14105                           ; BSR set to: 2
 14106                           ;../event_consumerDualActionQueue.c: 244:                                 if (ca == 4) {
 14107   003C1E  0E04               	movlw	4
 14108   003C20  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14109   003C22  A4D8               	btfss	status,2,c
 14110   003C24  D002               	goto	l23541
 14111                           
 14112                           ; BSR set to: 2
 14113                           ;../event_consumerDualActionQueue.c: 246:                                     action-=2;
 14114   003C26  0E02               	movlw	2
 14115   003C28  5FDC               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14116   003C2A                     l23541:
 14117                           
 14118                           ; BSR set to: 2
 14119                           ;../event_consumerDualActionQueue.c: 248:                                 pushTwoAction(
      +                          action);
 14120   003C2A  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14121   003C2C  EC3F  F05B         	call	_pushTwoAction
 14122                           
 14123                           ;../event_consumerDualActionQueue.c: 249:                                 setNormalActio
      +                          ns();
 14124   003C30  EC65  F064         	call	_setNormalActions	;wreg free
 14125                           
 14126                           ;../event_consumerDualActionQueue.c: 250:                                 break;
 14127   003C34  D01D               	goto	l470
 14128   003C36                     l23545:
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;../event_consumerDualActionQueue.c: 252:                                 pushTwoAction(
      +                          action);
 14132   003C36  0102               	movlb	2	; () banked
 14133   003C38  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14134   003C3A  EC3F  F05B         	call	_pushTwoAction
 14135                           
 14136                           ;../event_consumerDualActionQueue.c: 253:                                 break;
 14137   003C3E  D018               	goto	l470
 14138   003C40                     l23549:
 14139                           
 14140                           ; BSR set to: 2
 14141   003C40  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14142   003C42  0D07               	mullw	7
 14143   003C44  50F3               	movf	243,w,c
 14144   003C46  0F10               	addlw	16
 14145   003C48  ECB0  F05F         	call	_getNV
 14146                           
 14147                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14148                           ; Switch size 1, requested type "simple"
 14149                           ; Number of cases is 1, Range of values is 0 to 0
 14150                           ; switch strategies available:
 14151                           ; Name         Instructions Cycles
 14152                           ; simple_byte            4     3 (average)
 14153                           ;	Chosen strategy is simple_byte
 14154   003C4C  0100               	movlb	0	; () banked
 14155   003C4E  518E               	movf	(?_getNV+1)& (0+255),w,b
 14156   003C50  0A00               	xorlw	0	; case 0
 14157   003C52  A4D8               	btfss	status,2,c
 14158   003C54  D00D               	goto	l470
 14159                           
 14160                           ; BSR set to: 0
 14161                           ; Switch size 1, requested type "simple"
 14162                           ; Number of cases is 4, Range of values is 1 to 4
 14163                           ; switch strategies available:
 14164                           ; Name         Instructions Cycles
 14165                           ; simple_byte           13     7 (average)
 14166                           ;	Chosen strategy is simple_byte
 14167   003C56  518D               	movf	?_getNV& (0+255),w,b
 14168   003C58  0A01               	xorlw	1	; case 1
 14169   003C5A  B4D8               	btfsc	status,2,c
 14170   003C5C  D7D1               	goto	l23529
 14171   003C5E  0A03               	xorlw	3	; case 2
 14172   003C60  B4D8               	btfsc	status,2,c
 14173   003C62  D7D9               	goto	l23533
 14174   003C64  0A01               	xorlw	1	; case 3
 14175   003C66  B4D8               	btfsc	status,2,c
 14176   003C68  D7D6               	goto	l23533
 14177   003C6A  0A07               	xorlw	7	; case 4
 14178   003C6C  B4D8               	btfsc	status,2,c
 14179   003C6E  D7E3               	goto	l23545
 14180   003C70                     l470:
 14181                           
 14182                           ;../event_consumerDualActionQueue.c: 261:         }
 14183                           
 14184                           ; BSR set to: 0
 14185   003C70  0102               	movlb	2	; () banked
 14186   003C72  2BDB               	incf	consumer2QProcessMessage@e& (0+255),f,b
 14187                           
 14188                           ; BSR set to: 2
 14189   003C74  0E13               	movlw	19
 14190   003C76  65DB               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14191   003C78  D784               	goto	l23513
 14192   003C7A  D09E               	goto	u25160
 14193   003C7C                     l466:
 14194                           
 14195                           ; BSR set to: 2
 14196                           ;../event_consumerDualActionQueue.c: 265:         uint8_t nextAction = evs[20 -1];
 14197   003C7C  C233  F2D5         	movff	_evs+19,consumer2QProcessMessage@nextAction
 14198                           
 14199                           ; BSR set to: 2
 14200                           ;../event_consumerDualActionQueue.c: 267:         for (e=20 -1; e>=1 ;e--) {
 14201   003C80  0E13               	movlw	19
 14202   003C82  6FDB               	movwf	consumer2QProcessMessage@e& (0+255),b
 14203   003C84                     l23559:
 14204                           
 14205                           ; BSR set to: 2
 14206                           ;../event_consumerDualActionQueue.c: 268:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 269:             uint8_t firstAction = 0;
 14207   003C84  0E00               	movlw	0
 14208   003C86  6FD6               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 14209                           
 14210                           ; BSR set to: 2
 14211                           ;../event_consumerDualActionQueue.c: 270:             action = nextAction;
 14212   003C88  C2D5  F2DC         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 14213                           
 14214                           ; BSR set to: 2
 14215                           ;../event_consumerDualActionQueue.c: 274:             if (e > 1) {
 14216   003C8C  0E01               	movlw	1
 14217   003C8E  65DB               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 14218   003C90  D00A               	goto	l23569
 14219                           
 14220                           ; BSR set to: 2
 14221                           ;../event_consumerDualActionQueue.c: 275:                 nextAction = evs[e-1];
 14222   003C92  0E1F               	movlw	low (_evs+65535)
 14223   003C94  25DB               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 14224   003C96  6ED9               	movwf	fsr2l,c
 14225   003C98  6ADA               	clrf	fsr2h,c
 14226   003C9A  0E02               	movlw	high (_evs+65535)
 14227   003C9C  22DA               	addwfc	fsr2h,f,c
 14228   003C9E  50DF               	movf	indf2,w,c
 14229   003CA0  6FD5               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 14230                           
 14231                           ; BSR set to: 2
 14232                           ;../event_consumerDualActionQueue.c: 276:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 14233   003CA2  51D5               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 14234   003CA4  D001               	goto	L4
 14235   003CA6                     l23569:
 14236                           
 14237                           ; BSR set to: 2
 14238                           ;../event_consumerDualActionQueue.c: 278:                 nextSimultaneous = firstAction
      +                           & 0x80;
 14239   003CA6  51D6               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14240   003CA8                     L4:
 14241   003CA8  0B80               	andlw	128
 14242   003CAA  6FD7               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 14243                           
 14244                           ; BSR set to: 2
 14245                           ;../event_consumerDualActionQueue.c: 280:             if (action != 0) {
 14246   003CAC  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14247   003CAE  B4D8               	btfsc	status,2,c
 14248   003CB0  D07E               	goto	l491
 14249                           
 14250                           ; BSR set to: 2
 14251                           ;../event_consumerDualActionQueue.c: 282:                 if (firstAction == 0) {
 14252   003CB2  51D6               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 14253   003CB4  B4D8               	btfsc	status,2,c
 14254                           
 14255                           ; BSR set to: 2
 14256                           ;../event_consumerDualActionQueue.c: 283:                     firstAction = action;
 14257   003CB6  C2DC  F2D6         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 14258                           
 14259                           ; BSR set to: 2
 14260                           ;../event_consumerDualActionQueue.c: 285:                 action &= 0x7F;
 14261   003CBA  9FDC               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 14262                           
 14263                           ; BSR set to: 2
 14264                           ;../event_consumerDualActionQueue.c: 286:                 if (action <= (8 + 5 * 16)) {
 14265   003CBC  0E59               	movlw	89
 14266   003CBE  61DC               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14267   003CC0  D076               	goto	l491
 14268                           
 14269                           ; BSR set to: 2
 14270                           ;../event_consumerDualActionQueue.c: 288:                     if ((action) == 7) {
 14271   003CC2  0E07               	movlw	7
 14272   003CC4  19DC               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 14273   003CC6  B4D8               	btfsc	status,2,c
 14274   003CC8  D077               	goto	u25160
 14275                           
 14276                           ; BSR set to: 2
 14277                           ;../event_consumerDualActionQueue.c: 291:                     if ((action < 8) && (actio
      +                          n != 1)) {
 14278   003CCA  0E08               	movlw	8
 14279   003CCC  61DC               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 14280   003CCE  D009               	goto	l23593
 14281                           
 14282                           ; BSR set to: 2
 14283   003CD0  05DC               	decf	consumer2QProcessMessage@action& (0+255),w,b
 14284   003CD2  B4D8               	btfsc	status,2,c
 14285   003CD4  D006               	goto	l23593
 14286                           
 14287                           ; BSR set to: 2
 14288                           ;../event_consumerDualActionQueue.c: 292:                         action |= nextSimultan
      +                          eous;
 14289   003CD6  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14290   003CD8  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14291                           
 14292                           ; BSR set to: 2
 14293                           ;../event_consumerDualActionQueue.c: 293:                         pushTwoAction(action);
 14294   003CDA  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14295   003CDC  EC3F  F05B         	call	_pushTwoAction
 14296                           
 14297                           ;../event_consumerDualActionQueue.c: 294:                     } else {
 14298   003CE0  D066               	goto	l491
 14299   003CE2                     l23593:
 14300                           
 14301                           ; BSR set to: 2
 14302                           ;../event_consumerDualActionQueue.c: 295:                         io = (((action)-8)/5);
 14303   003CE2  0EF8               	movlw	248
 14304   003CE4  25DC               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14305   003CE6  0100               	movlb	0	; () banked
 14306   003CE8  6F97               	movwf	___awdiv@dividend& (0+255),b
 14307   003CEA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14308   003CEC  0EFF               	movlw	255
 14309   003CEE  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14310   003CF0  0E00               	movlw	0
 14311   003CF2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14312   003CF4  0E05               	movlw	5
 14313   003CF6  6F99               	movwf	___awdiv@divisor& (0+255),b
 14314   003CF8  EC59  F054         	call	___awdiv	;wreg free
 14315   003CFC  0100               	movlb	0	; () banked
 14316   003CFE  5197               	movf	?___awdiv& (0+255),w,b
 14317   003D00  0102               	movlb	2	; () banked
 14318   003D02  6FD8               	movwf	consumer2QProcessMessage@io& (0+255),b
 14319                           
 14320                           ;../event_consumerDualActionQueue.c: 296:                         ca = (((action)-8)%5);
 14321   003D04  0EF8               	movlw	248
 14322   003D06  25DC               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14323   003D08  0100               	movlb	0	; () banked
 14324   003D0A  6F8D               	movwf	___awmod@dividend& (0+255),b
 14325   003D0C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14326   003D0E  0EFF               	movlw	255
 14327   003D10  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14328   003D12  0E00               	movlw	0
 14329   003D14  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14330   003D16  0E05               	movlw	5
 14331   003D18  6F8F               	movwf	___awmod@divisor& (0+255),b
 14332   003D1A  EC6E  F058         	call	___awmod	;wreg free
 14333   003D1E  0100               	movlb	0	; () banked
 14334   003D20  518D               	movf	?___awmod& (0+255),w,b
 14335   003D22  0102               	movlb	2	; () banked
 14336   003D24  6FDA               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14337                           
 14338                           ;../event_consumerDualActionQueue.c: 297:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14339   003D26  D02B               	goto	l23621
 14340   003D28                     l23595:
 14341                           
 14342                           ; BSR set to: 0
 14343                           ;../event_consumerDualActionQueue.c: 302:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14344   003D28  0102               	movlb	2	; () banked
 14345   003D2A  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14346   003D2C  0D07               	mullw	7
 14347   003D2E  50F3               	movf	243,w,c
 14348   003D30  0F11               	addlw	17
 14349   003D32  ECB0  F05F         	call	_getNV
 14350   003D36  0100               	movlb	0	; () banked
 14351   003D38  BF8D               	btfsc	?_getNV& (0+255),7,b
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;../event_consumerDualActionQueue.c: 303:                                     setExpedit
      +                          edActions();
 14355   003D3A  EC68  F064         	call	_setExpeditedActions	;wreg free
 14356                           
 14357                           ;../event_consumerDualActionQueue.c: 305:                                 if (ca == 3) {
 14358   003D3E  0E03               	movlw	3
 14359   003D40  0102               	movlb	2	; () banked
 14360   003D42  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14361   003D44  B4D8               	btfsc	status,2,c
 14362                           
 14363                           ; BSR set to: 2
 14364                           ;../event_consumerDualActionQueue.c: 307:                                     action--;
 14365   003D46  07DC               	decf	consumer2QProcessMessage@action& (0+255),f,b
 14366   003D48                     l23603:
 14367                           
 14368                           ;../event_consumerDualActionQueue.c: 312:                                 if (ca == 0) {
 14369   003D48  0102               	movlb	2	; () banked
 14370   003D4A  51DA               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14371   003D4C  A4D8               	btfss	status,2,c
 14372   003D4E  D002               	goto	l501
 14373                           
 14374                           ; BSR set to: 2
 14375                           ;../event_consumerDualActionQueue.c: 314:                                     action += 
      +                          2;
 14376   003D50  0E02               	movlw	2
 14377   003D52  27DC               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14378   003D54                     l501:
 14379                           
 14380                           ; BSR set to: 2
 14381                           ;../event_consumerDualActionQueue.c: 316:                                 if (ca == 4) {
 14382   003D54  0E04               	movlw	4
 14383   003D56  19DA               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14384   003D58  A4D8               	btfss	status,2,c
 14385   003D5A  D002               	goto	l502
 14386                           
 14387                           ; BSR set to: 2
 14388                           ;../event_consumerDualActionQueue.c: 318:                                     action -= 
      +                          3;
 14389   003D5C  0E03               	movlw	3
 14390   003D5E  5FDC               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14391   003D60                     l502:
 14392                           
 14393                           ; BSR set to: 2
 14394                           ;../event_consumerDualActionQueue.c: 320:                                 action |= next
      +                          Simultaneous;
 14395   003D60  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14396   003D62  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14397                           
 14398                           ; BSR set to: 2
 14399                           ;../event_consumerDualActionQueue.c: 321:                                 pushTwoAction(
      +                          action);
 14400   003D64  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14401   003D66  EC3F  F05B         	call	_pushTwoAction
 14402   003D6A                     l23611:
 14403                           
 14404                           ;../event_consumerDualActionQueue.c: 322:                                 setNormalActio
      +                          ns();
 14405   003D6A  EC65  F064         	call	_setNormalActions	;wreg free
 14406                           
 14407                           ;../event_consumerDualActionQueue.c: 323:                                 break;
 14408   003D6E  D01F               	goto	l491
 14409   003D70                     l23613:
 14410                           
 14411                           ; BSR set to: 0
 14412                           ;../event_consumerDualActionQueue.c: 325:                                 action |= next
      +                          Simultaneous;
 14413   003D70  0102               	movlb	2	; () banked
 14414   003D72  51D7               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14415   003D74  13DC               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14416                           
 14417                           ; BSR set to: 2
 14418                           ;../event_consumerDualActionQueue.c: 326:                                 pushTwoAction(
      +                          action);
 14419   003D76  51DC               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14420   003D78  EC3F  F05B         	call	_pushTwoAction
 14421   003D7C  D7F6               	goto	l23611
 14422   003D7E                     l23621:
 14423                           
 14424                           ; BSR set to: 2
 14425   003D7E  51D8               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14426   003D80  0D07               	mullw	7
 14427   003D82  50F3               	movf	243,w,c
 14428   003D84  0F10               	addlw	16
 14429   003D86  ECB0  F05F         	call	_getNV
 14430                           
 14431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14432                           ; Switch size 1, requested type "simple"
 14433                           ; Number of cases is 1, Range of values is 0 to 0
 14434                           ; switch strategies available:
 14435                           ; Name         Instructions Cycles
 14436                           ; simple_byte            4     3 (average)
 14437                           ;	Chosen strategy is simple_byte
 14438   003D8A  0100               	movlb	0	; () banked
 14439   003D8C  518E               	movf	(?_getNV+1)& (0+255),w,b
 14440   003D8E  0A00               	xorlw	0	; case 0
 14441   003D90  A4D8               	btfss	status,2,c
 14442   003D92  D00D               	goto	l491
 14443                           
 14444                           ; BSR set to: 0
 14445                           ; Switch size 1, requested type "simple"
 14446                           ; Number of cases is 4, Range of values is 1 to 4
 14447                           ; switch strategies available:
 14448                           ; Name         Instructions Cycles
 14449                           ; simple_byte           13     7 (average)
 14450                           ;	Chosen strategy is simple_byte
 14451   003D94  518D               	movf	?_getNV& (0+255),w,b
 14452   003D96  0A01               	xorlw	1	; case 1
 14453   003D98  B4D8               	btfsc	status,2,c
 14454   003D9A  D7C6               	goto	l23595
 14455   003D9C  0A03               	xorlw	3	; case 2
 14456   003D9E  B4D8               	btfsc	status,2,c
 14457   003DA0  D7D3               	goto	l23603
 14458   003DA2  0A01               	xorlw	1	; case 3
 14459   003DA4  B4D8               	btfsc	status,2,c
 14460   003DA6  D7D0               	goto	l23603
 14461   003DA8  0A07               	xorlw	7	; case 4
 14462   003DAA  B4D8               	btfsc	status,2,c
 14463   003DAC  D7E1               	goto	l23613
 14464   003DAE                     l491:
 14465                           
 14466                           ;../event_consumerDualActionQueue.c: 336:         }
 14467                           
 14468                           ; BSR set to: 0
 14469   003DAE  0102               	movlb	2	; () banked
 14470   003DB0  07DB               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14471                           
 14472                           ; BSR set to: 2
 14473   003DB2  51DB               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14474   003DB4  A4D8               	btfss	status,2,c
 14475   003DB6  D766               	goto	l23559
 14476   003DB8                     u25160:
 14477                           
 14478                           ; BSR set to: 2
 14479                           ;../event_consumerDualActionQueue.c: 339:     consumer2QDiagnostics[1].asUint++;
 14480   003DB8  0101               	movlb	1	; () banked
 14481   003DBA  4BBC               	infsnz	(_consumer2QDiagnostics+2)& (0+255),f,b
 14482   003DBC  2BBD               	incf	(_consumer2QDiagnostics+3)& (0+255),f,b
 14483                           
 14484                           ; BSR set to: 1
 14485                           ;../event_consumerDualActionQueue.c: 341:     return PROCESSED;
 14486   003DBE  0E01               	movlw	1
 14487   003DC0  0012               	return		;funcret
 14488   003DC2                     __end_of_consumer2QProcessMessage:
 14489                           	callstack 0
 14490                           
 14491 ;; *************** function _teachProcessMessage *****************
 14492 ;; Defined at:
 14493 ;;		line 383 in file "../../VLCBlib_PIC/event_teach_large.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;  m               2   63[BANK1 ] PTR struct Message
 14496 ;;		 -> poll@m(9), 
 14497 ;; Auto vars:     Size  Location     Type
 14498 ;;		None
 14499 ;; Return value:  Size  Location     Type
 14500 ;;                  1    wreg      enum E12799
 14501 ;; Registers used:
 14502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14503 ;; Tracked objects:
 14504 ;;		On entry : 0/0
 14505 ;;		On exit  : 0/0
 14506 ;;		Unchanged: 0/0
 14507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14508 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14510 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14511 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14512 ;;Total ram usage:        8 bytes
 14513 ;; Hardware stack levels used: 1
 14514 ;; Hardware stack levels required when called: 24
 14515 ;; This function calls:
 14516 ;;		_doEvlrn
 14517 ;;		_doEvuln
 14518 ;;		_doNenrd
 14519 ;;		_doNerd
 14520 ;;		_doNnclr
 14521 ;;		_doNnevn
 14522 ;;		_doReqev
 14523 ;;		_doReval
 14524 ;;		_doRqevn
 14525 ;;		_sendMessage3
 14526 ;;		_sendMessage5
 14527 ;;		_teachCheckLen
 14528 ;; This function is called by:
 14529 ;;		_poll
 14530 ;; This function uses a non-reentrant model
 14531 ;;
 14532                           
 14533                           	psect	text27
 14534   0022BE                     __ptext27:
 14535                           	callstack 0
 14536   0022BE                     _teachProcessMessage:
 14537                           	callstack 5
 14538                           
 14539                           ;../../VLCBlib_PIC/event_teach_large.c: 384:     switch(m->opc) {
 14540                           
 14541                           ;incstack = 0
 14542   0022BE  D318               	goto	l25073
 14543   0022C0                     l24807:
 14544                           
 14545                           ; BSR set to: 2
 14546                           ;../../VLCBlib_PIC/event_teach_large.c: 387:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14547   0022C0  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14548   0022C4  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14549   0022C8  0E03               	movlw	3
 14550   0022CA  0101               	movlb	1	; () banked
 14551   0022CC  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14552   0022CE  0E00               	movlw	0
 14553   0022D0  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14554   0022D2  ECDF  F05A         	call	_teachCheckLen	;wreg free
 14555   0022D6  06E8               	decf	wreg,f,c
 14556   0022D8  A4D8               	btfss	status,2,c
 14557   0022DA  D002               	goto	l24813
 14558   0022DC                     u26460:
 14559   0022DC  0E01               	movlw	1
 14560   0022DE  0012               	return	
 14561   0022E0                     l24813:
 14562                           
 14563                           ;../../VLCBlib_PIC/event_teach_large.c: 388:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14564   0022E0  0101               	movlb	1	; () banked
 14565   0022E2  EE20 F002          	lfsr	2,2
 14566   0022E6  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14567   0022E8  26D9               	addwf	fsr2l,f,c
 14568   0022EA  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14569   0022EC  22DA               	addwfc	fsr2h,f,c
 14570   0022EE  50DE               	movf	postinc2,w,c
 14571   0022F0  0100               	movlb	0	; () banked
 14572   0022F2  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14573   0022F4  A4D8               	btfss	status,2,c
 14574   0022F6  D00F               	goto	l24819
 14575                           
 14576                           ; BSR set to: 0
 14577   0022F8  0101               	movlb	1	; () banked
 14578   0022FA  EE20 F003          	lfsr	2,3
 14579   0022FE  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14580   002300  26D9               	addwf	fsr2l,f,c
 14581   002302  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14582   002304  22DA               	addwfc	fsr2h,f,c
 14583   002306  0100               	movlb	0	; () banked
 14584   002308  51B4               	movf	_nn& (0+255),w,b
 14585   00230A  18DE               	xorwf	postinc2,w,c
 14586   00230C  A4D8               	btfss	status,2,c
 14587   00230E  D003               	goto	l24819
 14588   002310                     u26480:
 14589                           
 14590                           ;../../VLCBlib_PIC/event_teach_large.c: 389:                 mode_flags |= 1;
 14591   002310  0101               	movlb	1	; () banked
 14592   002312  8165               	bsf	_mode_flags& (0+255),0,b
 14593                           
 14594                           ;../../VLCBlib_PIC/event_teach_large.c: 390:             } else {
 14595   002314  D7E3               	goto	u26460
 14596   002316                     l24819:
 14597                           
 14598                           ;../../VLCBlib_PIC/event_teach_large.c: 391:                 mode_flags &= ~1;
 14599   002316  0101               	movlb	1	; () banked
 14600   002318  9165               	bcf	_mode_flags& (0+255),0,b
 14601   00231A  D7E0               	goto	u26460
 14602   00231C                     l24825:
 14603                           
 14604                           ; BSR set to: 2
 14605                           ;../../VLCBlib_PIC/event_teach_large.c: 396:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14606   00231C  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14607   002320  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14608   002324  0E04               	movlw	4
 14609   002326  0101               	movlb	1	; () banked
 14610   002328  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14611   00232A  0E00               	movlw	0
 14612   00232C  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14613   00232E  ECDF  F05A         	call	_teachCheckLen	;wreg free
 14614   002332  06E8               	decf	wreg,f,c
 14615   002334  B4D8               	btfsc	status,2,c
 14616   002336  D7D2               	goto	u26460
 14617                           
 14618                           ;../../VLCBlib_PIC/event_teach_large.c: 397:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14619   002338  0101               	movlb	1	; () banked
 14620   00233A  EE20 F002          	lfsr	2,2
 14621   00233E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14622   002340  26D9               	addwf	fsr2l,f,c
 14623   002342  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14624   002344  22DA               	addwfc	fsr2h,f,c
 14625   002346  50DE               	movf	postinc2,w,c
 14626   002348  0100               	movlb	0	; () banked
 14627   00234A  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14628   00234C  A4D8               	btfss	status,2,c
 14629   00234E  D022               	goto	l24853
 14630                           
 14631                           ; BSR set to: 0
 14632   002350  0101               	movlb	1	; () banked
 14633   002352  EE20 F003          	lfsr	2,3
 14634   002356  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14635   002358  26D9               	addwf	fsr2l,f,c
 14636   00235A  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14637   00235C  22DA               	addwfc	fsr2h,f,c
 14638   00235E  0100               	movlb	0	; () banked
 14639   002360  51B4               	movf	_nn& (0+255),w,b
 14640   002362  18DE               	xorwf	postinc2,w,c
 14641   002364  A4D8               	btfss	status,2,c
 14642   002366  D016               	goto	l24853
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;../../VLCBlib_PIC/event_teach_large.c: 398:                 if (m->bytes[2] == MODE_LEA
      +                          RN_ON) {
 14646   002368  0101               	movlb	1	; () banked
 14647   00236A  EE20 F004          	lfsr	2,4
 14648   00236E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14649   002370  26D9               	addwf	fsr2l,f,c
 14650   002372  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14651   002374  22DA               	addwfc	fsr2h,f,c
 14652   002376  0E08               	movlw	8
 14653   002378  18DE               	xorwf	postinc2,w,c
 14654   00237A  B4D8               	btfsc	status,2,c
 14655   00237C  D7C9               	goto	u26480
 14656                           
 14657                           ; BSR set to: 1
 14658   00237E  EE20 F004          	lfsr	2,4
 14659   002382  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14660   002384  26D9               	addwf	fsr2l,f,c
 14661   002386  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14662   002388  22DA               	addwfc	fsr2h,f,c
 14663   00238A  0E09               	movlw	9
 14664   00238C  18DE               	xorwf	postinc2,w,c
 14665   00238E  B4D8               	btfsc	status,2,c
 14666   002390  D7C2               	goto	l24819
 14667   002392  D002               	goto	l24855
 14668   002394                     l24853:
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;../../VLCBlib_PIC/event_teach_large.c: 409:                 mode_flags &= ~1;
 14672   002394  0101               	movlb	1	; () banked
 14673   002396  9165               	bcf	_mode_flags& (0+255),0,b
 14674   002398                     l24855:
 14675                           
 14676                           ;../../VLCBlib_PIC/event_teach_large.c: 411:             return NOT_PROCESSED;
 14677   002398  0E00               	movlw	0
 14678   00239A  0012               	return	
 14679   00239C                     l24859:
 14680                           
 14681                           ; BSR set to: 2
 14682                           ;../../VLCBlib_PIC/event_teach_large.c: 415:             if (teachCheckLen(m, 7, 1) == P
      +                          ROCESSED) {
 14683   00239C  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14684   0023A0  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14685   0023A4  0E07               	movlw	7
 14686   0023A6  0101               	movlb	1	; () banked
 14687   0023A8  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14688   0023AA  0E01               	movlw	1
 14689   0023AC  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14690   0023AE  ECDF  F05A         	call	_teachCheckLen	;wreg free
 14691   0023B2  06E8               	decf	wreg,f,c
 14692   0023B4  A4D8               	btfss	status,2,c
 14693   0023B6  D00B               	goto	l2760
 14694                           
 14695                           ;../../VLCBlib_PIC/event_teach_large.c: 416:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 14696   0023B8  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 14697   0023BC  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 14698   0023C0  0E01               	movlw	1
 14699   0023C2  0100               	movlb	0	; () banked
 14700   0023C4  6FA9               	movwf	sendMessage3@data3& (0+255),b
 14701   0023C6  0E6F               	movlw	111
 14702   0023C8  EC83  F061         	call	_sendMessage3
 14703   0023CC  D787               	goto	u26460
 14704   0023CE                     l2760:
 14705                           
 14706                           ;../../VLCBlib_PIC/event_teach_large.c: 420:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14707   0023CE  0101               	movlb	1	; () banked
 14708   0023D0  A165               	btfss	_mode_flags& (0+255),0,b
 14709   0023D2  D784               	goto	u26460
 14710                           
 14711                           ; BSR set to: 1
 14712                           ;../../VLCBlib_PIC/event_teach_large.c: 422:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5
      +                          ]);
 14713   0023D4  EE20 F003          	lfsr	2,3
 14714   0023D8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14715   0023DA  26D9               	addwf	fsr2l,f,c
 14716   0023DC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14717   0023DE  22DA               	addwfc	fsr2h,f,c
 14718   0023E0  50DF               	movf	indf2,w,c
 14719   0023E2  0102               	movlb	2	; () banked
 14720   0023E4  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14721   0023E6  0101               	movlb	1	; () banked
 14722   0023E8  EE20 F002          	lfsr	2,2
 14723   0023EC  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14724   0023EE  26D9               	addwf	fsr2l,f,c
 14725   0023F0  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14726   0023F2  22DA               	addwfc	fsr2h,f,c
 14727   0023F4  50DF               	movf	indf2,w,c
 14728   0023F6  0102               	movlb	2	; () banked
 14729   0023F8  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14730   0023FA  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14731   0023FC  0101               	movlb	1	; () banked
 14732   0023FE  6FF2               	movwf	doEvlrn@nodeNumber& (0+255),b
 14733   002400  C2CD  F1F3         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14734   002404  EE20 F005          	lfsr	2,5
 14735   002408  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14736   00240A  26D9               	addwf	fsr2l,f,c
 14737   00240C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14738   00240E  22DA               	addwfc	fsr2h,f,c
 14739   002410  50DF               	movf	indf2,w,c
 14740   002412  0102               	movlb	2	; () banked
 14741   002414  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14742   002416  0101               	movlb	1	; () banked
 14743   002418  EE20 F004          	lfsr	2,4
 14744   00241C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14745   00241E  26D9               	addwf	fsr2l,f,c
 14746   002420  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14747   002422  22DA               	addwfc	fsr2h,f,c
 14748   002424  50DF               	movf	indf2,w,c
 14749   002426  0102               	movlb	2	; () banked
 14750   002428  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14751   00242A  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14752   00242C  0101               	movlb	1	; () banked
 14753   00242E  6FF4               	movwf	doEvlrn@eventNumber& (0+255),b
 14754   002430  C2D0  F1F5         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14755   002434  EE20 F006          	lfsr	2,6
 14756   002438  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14757   00243A  26D9               	addwf	fsr2l,f,c
 14758   00243C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14759   00243E  22DA               	addwfc	fsr2h,f,c
 14760   002440  50DF               	movf	indf2,w,c
 14761   002442  6FF6               	movwf	doEvlrn@evNum& (0+255),b
 14762   002444  EE20 F007          	lfsr	2,7
 14763   002448  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14764   00244A  26D9               	addwf	fsr2l,f,c
 14765   00244C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14766   00244E  22DA               	addwfc	fsr2h,f,c
 14767   002450  50DF               	movf	indf2,w,c
 14768   002452  6FF7               	movwf	doEvlrn@evVal& (0+255),b
 14769   002454  EC5D  F04A         	call	_doEvlrn	;wreg free
 14770   002458  D741               	goto	u26460
 14771   00245A                     l24877:
 14772                           
 14773                           ; BSR set to: 2
 14774                           ;../../VLCBlib_PIC/event_teach_large.c: 425:             if (teachCheckLen(m, 5, 1) == P
      +                          ROCESSED) return PROCESSED;
 14775   00245A  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14776   00245E  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14777   002462  0E05               	movlw	5
 14778   002464  0101               	movlb	1	; () banked
 14779   002466  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14780   002468  0E01               	movlw	1
 14781   00246A  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14782   00246C  ECDF  F05A         	call	_teachCheckLen	;wreg free
 14783   002470  06E8               	decf	wreg,f,c
 14784   002472  B4D8               	btfsc	status,2,c
 14785   002474  D733               	goto	u26460
 14786                           
 14787                           ;../../VLCBlib_PIC/event_teach_large.c: 426:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14788   002476  0101               	movlb	1	; () banked
 14789   002478  A165               	btfss	_mode_flags& (0+255),0,b
 14790   00247A  D730               	goto	u26460
 14791                           
 14792                           ; BSR set to: 1
 14793                           ;../../VLCBlib_PIC/event_teach_large.c: 428:             doEvuln((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14794   00247C  EE20 F003          	lfsr	2,3
 14795   002480  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14796   002482  26D9               	addwf	fsr2l,f,c
 14797   002484  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14798   002486  22DA               	addwfc	fsr2h,f,c
 14799   002488  50DF               	movf	indf2,w,c
 14800   00248A  0102               	movlb	2	; () banked
 14801   00248C  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14802   00248E  0101               	movlb	1	; () banked
 14803   002490  EE20 F002          	lfsr	2,2
 14804   002494  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14805   002496  26D9               	addwf	fsr2l,f,c
 14806   002498  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14807   00249A  22DA               	addwfc	fsr2h,f,c
 14808   00249C  50DF               	movf	indf2,w,c
 14809   00249E  0102               	movlb	2	; () banked
 14810   0024A0  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14811   0024A2  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14812   0024A4  0101               	movlb	1	; () banked
 14813   0024A6  6FD2               	movwf	doEvuln@nodeNumber& (0+255),b
 14814   0024A8  C2CD  F1D3         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14815   0024AC  EE20 F005          	lfsr	2,5
 14816   0024B0  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14817   0024B2  26D9               	addwf	fsr2l,f,c
 14818   0024B4  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14819   0024B6  22DA               	addwfc	fsr2h,f,c
 14820   0024B8  50DF               	movf	indf2,w,c
 14821   0024BA  0102               	movlb	2	; () banked
 14822   0024BC  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14823   0024BE  0101               	movlb	1	; () banked
 14824   0024C0  EE20 F004          	lfsr	2,4
 14825   0024C4  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14826   0024C6  26D9               	addwf	fsr2l,f,c
 14827   0024C8  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14828   0024CA  22DA               	addwfc	fsr2h,f,c
 14829   0024CC  50DF               	movf	indf2,w,c
 14830   0024CE  0102               	movlb	2	; () banked
 14831   0024D0  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14832   0024D2  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14833   0024D4  0101               	movlb	1	; () banked
 14834   0024D6  6FD4               	movwf	doEvuln@eventNumber& (0+255),b
 14835   0024D8  C2D0  F1D5         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14836   0024DC  EC9B  F056         	call	_doEvuln	;wreg free
 14837   0024E0  D6FD               	goto	u26460
 14838   0024E2                     l24893:
 14839                           
 14840                           ; BSR set to: 2
 14841                           ;../../VLCBlib_PIC/event_teach_large.c: 431:             if (teachCheckLen(m, 6, 1) == P
      +                          ROCESSED) return PROCESSED;
 14842   0024E2  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14843   0024E6  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14844   0024EA  0E06               	movlw	6
 14845   0024EC  0101               	movlb	1	; () banked
 14846   0024EE  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14847   0024F0  0E01               	movlw	1
 14848   0024F2  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14849   0024F4  ECDF  F05A         	call	_teachCheckLen	;wreg free
 14850   0024F8  06E8               	decf	wreg,f,c
 14851   0024FA  B4D8               	btfsc	status,2,c
 14852   0024FC  D6EF               	goto	u26460
 14853                           
 14854                           ;../../VLCBlib_PIC/event_teach_large.c: 432:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14855   0024FE  0101               	movlb	1	; () banked
 14856   002500  A165               	btfss	_mode_flags& (0+255),0,b
 14857   002502  D6EC               	goto	u26460
 14858                           
 14859                           ; BSR set to: 1
 14860                           ;../../VLCBlib_PIC/event_teach_large.c: 434:             doReqev((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14861   002504  EE20 F003          	lfsr	2,3
 14862   002508  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14863   00250A  26D9               	addwf	fsr2l,f,c
 14864   00250C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14865   00250E  22DA               	addwfc	fsr2h,f,c
 14866   002510  50DF               	movf	indf2,w,c
 14867   002512  0102               	movlb	2	; () banked
 14868   002514  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14869   002516  0101               	movlb	1	; () banked
 14870   002518  EE20 F002          	lfsr	2,2
 14871   00251C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14872   00251E  26D9               	addwf	fsr2l,f,c
 14873   002520  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14874   002522  22DA               	addwfc	fsr2h,f,c
 14875   002524  50DF               	movf	indf2,w,c
 14876   002526  0102               	movlb	2	; () banked
 14877   002528  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14878   00252A  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14879   00252C  0101               	movlb	1	; () banked
 14880   00252E  6FCC               	movwf	doReqev@nodeNumber& (0+255),b
 14881   002530  C2CD  F1CD         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14882   002534  EE20 F005          	lfsr	2,5
 14883   002538  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14884   00253A  26D9               	addwf	fsr2l,f,c
 14885   00253C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14886   00253E  22DA               	addwfc	fsr2h,f,c
 14887   002540  50DF               	movf	indf2,w,c
 14888   002542  0102               	movlb	2	; () banked
 14889   002544  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14890   002546  0101               	movlb	1	; () banked
 14891   002548  EE20 F004          	lfsr	2,4
 14892   00254C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14893   00254E  26D9               	addwf	fsr2l,f,c
 14894   002550  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14895   002552  22DA               	addwfc	fsr2h,f,c
 14896   002554  50DF               	movf	indf2,w,c
 14897   002556  0102               	movlb	2	; () banked
 14898   002558  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14899   00255A  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14900   00255C  0101               	movlb	1	; () banked
 14901   00255E  6FCE               	movwf	doReqev@eventNumber& (0+255),b
 14902   002560  C2D0  F1CF         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14903   002564  EE20 F006          	lfsr	2,6
 14904   002568  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14905   00256A  26D9               	addwf	fsr2l,f,c
 14906   00256C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14907   00256E  22DA               	addwfc	fsr2h,f,c
 14908   002570  50DF               	movf	indf2,w,c
 14909   002572  6FD0               	movwf	doReqev@evNum& (0+255),b
 14910   002574  EC4F  F03E         	call	_doReqev	;wreg free
 14911   002578  D6B1               	goto	u26460
 14912   00257A                     l24909:
 14913                           
 14914                           ; BSR set to: 2
 14915                           ;../../VLCBlib_PIC/event_teach_large.c: 438:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14916   00257A  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14917   00257E  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14918   002582  0E03               	movlw	3
 14919   002584  0101               	movlb	1	; () banked
 14920   002586  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14921   002588  0E00               	movlw	0
 14922   00258A  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14923   00258C  ECDF  F05A         	call	_teachCheckLen	;wreg free
 14924   002590  06E8               	decf	wreg,f,c
 14925   002592  B4D8               	btfsc	status,2,c
 14926   002594  D6A3               	goto	u26460
 14927                           
 14928                           ;../../VLCBlib_PIC/event_teach_large.c: 439:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14929   002596  0101               	movlb	1	; () banked
 14930   002598  EE20 F002          	lfsr	2,2
 14931   00259C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14932   00259E  26D9               	addwf	fsr2l,f,c
 14933   0025A0  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14934   0025A2  22DA               	addwfc	fsr2h,f,c
 14935   0025A4  50DE               	movf	postinc2,w,c
 14936   0025A6  0100               	movlb	0	; () banked
 14937   0025A8  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14938   0025AA  A4D8               	btfss	status,2,c
 14939   0025AC  D697               	goto	u26460
 14940                           
 14941                           ; BSR set to: 0
 14942   0025AE  0101               	movlb	1	; () banked
 14943   0025B0  EE20 F003          	lfsr	2,3
 14944   0025B4  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14945   0025B6  26D9               	addwf	fsr2l,f,c
 14946   0025B8  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14947   0025BA  22DA               	addwfc	fsr2h,f,c
 14948   0025BC  0100               	movlb	0	; () banked
 14949   0025BE  51B4               	movf	_nn& (0+255),w,b
 14950   0025C0  18DE               	xorwf	postinc2,w,c
 14951   0025C2  A4D8               	btfss	status,2,c
 14952   0025C4  D68B               	goto	u26460
 14953   0025C6  D6A7               	goto	l24819
 14954   0025C8                     l24929:
 14955                           
 14956                           ; BSR set to: 2
 14957                           ;../../VLCBlib_PIC/event_teach_large.c: 444:             if (teachCheckLen(m, 3, 1) == P
      +                          ROCESSED) return PROCESSED;
 14958   0025C8  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14959   0025CC  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14960   0025D0  0E03               	movlw	3
 14961   0025D2  0101               	movlb	1	; () banked
 14962   0025D4  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14963   0025D6  0E01               	movlw	1
 14964   0025D8  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14965   0025DA  ECDF  F05A         	call	_teachCheckLen	;wreg free
 14966   0025DE  06E8               	decf	wreg,f,c
 14967   0025E0  B4D8               	btfsc	status,2,c
 14968   0025E2  D67C               	goto	u26460
 14969                           
 14970                           ;../../VLCBlib_PIC/event_teach_large.c: 445:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14971   0025E4  0101               	movlb	1	; () banked
 14972   0025E6  EE20 F002          	lfsr	2,2
 14973   0025EA  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14974   0025EC  26D9               	addwf	fsr2l,f,c
 14975   0025EE  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14976   0025F0  22DA               	addwfc	fsr2h,f,c
 14977   0025F2  50DE               	movf	postinc2,w,c
 14978   0025F4  0100               	movlb	0	; () banked
 14979   0025F6  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14980   0025F8  A4D8               	btfss	status,2,c
 14981   0025FA  D670               	goto	u26460
 14982                           
 14983                           ; BSR set to: 0
 14984   0025FC  0101               	movlb	1	; () banked
 14985   0025FE  EE20 F003          	lfsr	2,3
 14986   002602  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14987   002604  26D9               	addwf	fsr2l,f,c
 14988   002606  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14989   002608  22DA               	addwfc	fsr2h,f,c
 14990   00260A  0100               	movlb	0	; () banked
 14991   00260C  51B4               	movf	_nn& (0+255),w,b
 14992   00260E  18DE               	xorwf	postinc2,w,c
 14993   002610  A4D8               	btfss	status,2,c
 14994   002612  D664               	goto	u26460
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;../../VLCBlib_PIC/event_teach_large.c: 447:             if (! (mode_flags & 1)) {
 14998   002614  0101               	movlb	1	; () banked
 14999   002616  B165               	btfsc	_mode_flags& (0+255),0,b
 15000   002618  D019               	goto	l24949
 15001                           
 15002                           ; BSR set to: 1
 15003                           ;../../VLCBlib_PIC/event_teach_large.c: 448:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 15004   00261A  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15005   00261E  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15006   002622  0E02               	movlw	2
 15007   002624  0100               	movlb	0	; () banked
 15008   002626  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15009   002628  0E6F               	movlw	111
 15010   00262A  EC83  F061         	call	_sendMessage3
 15011                           
 15012                           ;../../VLCBlib_PIC/event_teach_large.c: 450:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 15013   00262E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15014   002632  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15015   002636  0E55               	movlw	85
 15016   002638  0101               	movlb	1	; () banked
 15017   00263A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15018   00263C  0E04               	movlw	4
 15019   00263E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15020   002640  0E02               	movlw	2
 15021   002642  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15022   002644  0EAF               	movlw	175
 15023   002646  EC25  F061         	call	_sendMessage5
 15024   00264A  D648               	goto	u26460
 15025   00264C                     l24949:
 15026                           
 15027                           ; BSR set to: 1
 15028                           ;../../VLCBlib_PIC/event_teach_large.c: 455:             doNnclr();
 15029   00264C  ECC5  F060         	call	_doNnclr	;wreg free
 15030                           
 15031                           ;../../VLCBlib_PIC/event_teach_large.c: 456:             break;
 15032   002650  D6A3               	goto	l24855
 15033   002652                     l24951:
 15034                           
 15035                           ; BSR set to: 2
 15036                           ;../../VLCBlib_PIC/event_teach_large.c: 458:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15037   002652  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15038   002656  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15039   00265A  0E03               	movlw	3
 15040   00265C  0101               	movlb	1	; () banked
 15041   00265E  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15042   002660  0E00               	movlw	0
 15043   002662  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15044   002664  ECDF  F05A         	call	_teachCheckLen	;wreg free
 15045   002668  06E8               	decf	wreg,f,c
 15046   00266A  B4D8               	btfsc	status,2,c
 15047   00266C  D637               	goto	u26460
 15048                           
 15049                           ;../../VLCBlib_PIC/event_teach_large.c: 459:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15050   00266E  0101               	movlb	1	; () banked
 15051   002670  EE20 F002          	lfsr	2,2
 15052   002674  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15053   002676  26D9               	addwf	fsr2l,f,c
 15054   002678  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15055   00267A  22DA               	addwfc	fsr2h,f,c
 15056   00267C  50DE               	movf	postinc2,w,c
 15057   00267E  0100               	movlb	0	; () banked
 15058   002680  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15059   002682  A4D8               	btfss	status,2,c
 15060   002684  D62B               	goto	u26460
 15061                           
 15062                           ; BSR set to: 0
 15063   002686  0101               	movlb	1	; () banked
 15064   002688  EE20 F003          	lfsr	2,3
 15065   00268C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15066   00268E  26D9               	addwf	fsr2l,f,c
 15067   002690  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15068   002692  22DA               	addwfc	fsr2h,f,c
 15069   002694  0100               	movlb	0	; () banked
 15070   002696  51B4               	movf	_nn& (0+255),w,b
 15071   002698  18DE               	xorwf	postinc2,w,c
 15072   00269A  A4D8               	btfss	status,2,c
 15073   00269C  D61F               	goto	u26460
 15074                           
 15075                           ; BSR set to: 0
 15076                           ;../../VLCBlib_PIC/event_teach_large.c: 461:             doNerd();
 15077   00269E  ECAC  F063         	call	_doNerd	;wreg free
 15078   0026A2  D61C               	goto	u26460
 15079   0026A4                     l24971:
 15080                           
 15081                           ; BSR set to: 2
 15082                           ;../../VLCBlib_PIC/event_teach_large.c: 464:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15083   0026A4  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15084   0026A8  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15085   0026AC  0E03               	movlw	3
 15086   0026AE  0101               	movlb	1	; () banked
 15087   0026B0  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15088   0026B2  0E00               	movlw	0
 15089   0026B4  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15090   0026B6  ECDF  F05A         	call	_teachCheckLen	;wreg free
 15091   0026BA  06E8               	decf	wreg,f,c
 15092   0026BC  B4D8               	btfsc	status,2,c
 15093   0026BE  D60E               	goto	u26460
 15094                           
 15095                           ;../../VLCBlib_PIC/event_teach_large.c: 465:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15096   0026C0  0101               	movlb	1	; () banked
 15097   0026C2  EE20 F002          	lfsr	2,2
 15098   0026C6  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15099   0026C8  26D9               	addwf	fsr2l,f,c
 15100   0026CA  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15101   0026CC  22DA               	addwfc	fsr2h,f,c
 15102   0026CE  50DE               	movf	postinc2,w,c
 15103   0026D0  0100               	movlb	0	; () banked
 15104   0026D2  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15105   0026D4  A4D8               	btfss	status,2,c
 15106   0026D6  D602               	goto	u26460
 15107                           
 15108                           ; BSR set to: 0
 15109   0026D8  0101               	movlb	1	; () banked
 15110   0026DA  EE20 F003          	lfsr	2,3
 15111   0026DE  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15112   0026E0  26D9               	addwf	fsr2l,f,c
 15113   0026E2  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15114   0026E4  22DA               	addwfc	fsr2h,f,c
 15115   0026E6  0100               	movlb	0	; () banked
 15116   0026E8  51B4               	movf	_nn& (0+255),w,b
 15117   0026EA  18DE               	xorwf	postinc2,w,c
 15118   0026EC  A4D8               	btfss	status,2,c
 15119   0026EE  D5F6               	goto	u26460
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;../../VLCBlib_PIC/event_teach_large.c: 467:             doNnevn();
 15123   0026F0  EC4B  F059         	call	_doNnevn	;wreg free
 15124   0026F4  D5F3               	goto	u26460
 15125   0026F6                     l24991:
 15126                           
 15127                           ; BSR set to: 2
 15128                           ;../../VLCBlib_PIC/event_teach_large.c: 470:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 15129   0026F6  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15130   0026FA  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15131   0026FE  0E03               	movlw	3
 15132   002700  0101               	movlb	1	; () banked
 15133   002702  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15134   002704  0E00               	movlw	0
 15135   002706  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15136   002708  ECDF  F05A         	call	_teachCheckLen	;wreg free
 15137   00270C  06E8               	decf	wreg,f,c
 15138   00270E  B4D8               	btfsc	status,2,c
 15139   002710  D5E5               	goto	u26460
 15140                           
 15141                           ;../../VLCBlib_PIC/event_teach_large.c: 471:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15142   002712  0101               	movlb	1	; () banked
 15143   002714  EE20 F002          	lfsr	2,2
 15144   002718  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15145   00271A  26D9               	addwf	fsr2l,f,c
 15146   00271C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15147   00271E  22DA               	addwfc	fsr2h,f,c
 15148   002720  50DE               	movf	postinc2,w,c
 15149   002722  0100               	movlb	0	; () banked
 15150   002724  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15151   002726  A4D8               	btfss	status,2,c
 15152   002728  D5D9               	goto	u26460
 15153                           
 15154                           ; BSR set to: 0
 15155   00272A  0101               	movlb	1	; () banked
 15156   00272C  EE20 F003          	lfsr	2,3
 15157   002730  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15158   002732  26D9               	addwf	fsr2l,f,c
 15159   002734  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15160   002736  22DA               	addwfc	fsr2h,f,c
 15161   002738  0100               	movlb	0	; () banked
 15162   00273A  51B4               	movf	_nn& (0+255),w,b
 15163   00273C  18DE               	xorwf	postinc2,w,c
 15164   00273E  A4D8               	btfss	status,2,c
 15165   002740  D5CD               	goto	u26460
 15166                           
 15167                           ; BSR set to: 0
 15168                           ;../../VLCBlib_PIC/event_teach_large.c: 473:             doRqevn();
 15169   002742  EC45  F060         	call	_doRqevn	;wreg free
 15170   002746  D5CA               	goto	u26460
 15171   002748                     l25011:
 15172                           
 15173                           ; BSR set to: 2
 15174                           ;../../VLCBlib_PIC/event_teach_large.c: 476:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 15175   002748  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15176   00274C  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15177   002750  0E04               	movlw	4
 15178   002752  0101               	movlb	1	; () banked
 15179   002754  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15180   002756  0E00               	movlw	0
 15181   002758  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15182   00275A  ECDF  F05A         	call	_teachCheckLen	;wreg free
 15183   00275E  06E8               	decf	wreg,f,c
 15184   002760  B4D8               	btfsc	status,2,c
 15185   002762  D5BC               	goto	u26460
 15186                           
 15187                           ;../../VLCBlib_PIC/event_teach_large.c: 477:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15188   002764  0101               	movlb	1	; () banked
 15189   002766  EE20 F002          	lfsr	2,2
 15190   00276A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15191   00276C  26D9               	addwf	fsr2l,f,c
 15192   00276E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15193   002770  22DA               	addwfc	fsr2h,f,c
 15194   002772  50DE               	movf	postinc2,w,c
 15195   002774  0100               	movlb	0	; () banked
 15196   002776  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15197   002778  A4D8               	btfss	status,2,c
 15198   00277A  D5B0               	goto	u26460
 15199                           
 15200                           ; BSR set to: 0
 15201   00277C  0101               	movlb	1	; () banked
 15202   00277E  EE20 F003          	lfsr	2,3
 15203   002782  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15204   002784  26D9               	addwf	fsr2l,f,c
 15205   002786  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15206   002788  22DA               	addwfc	fsr2h,f,c
 15207   00278A  0100               	movlb	0	; () banked
 15208   00278C  51B4               	movf	_nn& (0+255),w,b
 15209   00278E  18DE               	xorwf	postinc2,w,c
 15210   002790  A4D8               	btfss	status,2,c
 15211   002792  D5A4               	goto	u26460
 15212                           
 15213                           ; BSR set to: 0
 15214                           ;../../VLCBlib_PIC/event_teach_large.c: 479:             doNenrd(m->bytes[2]);
 15215   002794  0101               	movlb	1	; () banked
 15216   002796  EE20 F004          	lfsr	2,4
 15217   00279A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15218   00279C  26D9               	addwf	fsr2l,f,c
 15219   00279E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15220   0027A0  22DA               	addwfc	fsr2h,f,c
 15221   0027A2  50DF               	movf	indf2,w,c
 15222   0027A4  ECA7  F058         	call	_doNenrd
 15223   0027A8  D599               	goto	u26460
 15224   0027AA                     l25031:
 15225                           
 15226                           ; BSR set to: 2
 15227                           ;../../VLCBlib_PIC/event_teach_large.c: 482:             if (teachCheckLen(m, 5, 0) == P
      +                          ROCESSED) return PROCESSED;
 15228   0027AA  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15229   0027AE  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15230   0027B2  0E05               	movlw	5
 15231   0027B4  0101               	movlb	1	; () banked
 15232   0027B6  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15233   0027B8  0E00               	movlw	0
 15234   0027BA  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15235   0027BC  ECDF  F05A         	call	_teachCheckLen	;wreg free
 15236   0027C0  06E8               	decf	wreg,f,c
 15237   0027C2  B4D8               	btfsc	status,2,c
 15238   0027C4  D58B               	goto	u26460
 15239                           
 15240                           ;../../VLCBlib_PIC/event_teach_large.c: 483:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15241   0027C6  0101               	movlb	1	; () banked
 15242   0027C8  EE20 F002          	lfsr	2,2
 15243   0027CC  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15244   0027CE  26D9               	addwf	fsr2l,f,c
 15245   0027D0  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15246   0027D2  22DA               	addwfc	fsr2h,f,c
 15247   0027D4  50DE               	movf	postinc2,w,c
 15248   0027D6  0100               	movlb	0	; () banked
 15249   0027D8  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15250   0027DA  A4D8               	btfss	status,2,c
 15251   0027DC  D57F               	goto	u26460
 15252                           
 15253                           ; BSR set to: 0
 15254   0027DE  0101               	movlb	1	; () banked
 15255   0027E0  EE20 F003          	lfsr	2,3
 15256   0027E4  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15257   0027E6  26D9               	addwf	fsr2l,f,c
 15258   0027E8  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15259   0027EA  22DA               	addwfc	fsr2h,f,c
 15260   0027EC  0100               	movlb	0	; () banked
 15261   0027EE  51B4               	movf	_nn& (0+255),w,b
 15262   0027F0  18DE               	xorwf	postinc2,w,c
 15263   0027F2  A4D8               	btfss	status,2,c
 15264   0027F4  D573               	goto	u26460
 15265                           
 15266                           ; BSR set to: 0
 15267                           ;../../VLCBlib_PIC/event_teach_large.c: 485:             doReval(m->bytes[2], m->bytes[3
      +                          ]);
 15268   0027F6  0101               	movlb	1	; () banked
 15269   0027F8  EE20 F005          	lfsr	2,5
 15270   0027FC  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15271   0027FE  26D9               	addwf	fsr2l,f,c
 15272   002800  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15273   002802  22DA               	addwfc	fsr2h,f,c
 15274   002804  50DF               	movf	indf2,w,c
 15275   002806  6FCB               	movwf	doReval@evNum& (0+255),b
 15276   002808  EE20 F004          	lfsr	2,4
 15277   00280C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15278   00280E  26D9               	addwf	fsr2l,f,c
 15279   002810  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15280   002812  22DA               	addwfc	fsr2h,f,c
 15281   002814  50DF               	movf	indf2,w,c
 15282   002816  EC03  F045         	call	_doReval
 15283   00281A  D560               	goto	u26460
 15284   00281C                     l25051:
 15285                           
 15286                           ; BSR set to: 2
 15287                           ;../../VLCBlib_PIC/event_teach_large.c: 488:             if (teachCheckLen(m, 8, 1) == P
      +                          ROCESSED) return PROCESSED;
 15288   00281C  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 15289   002820  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 15290   002824  0E08               	movlw	8
 15291   002826  0101               	movlb	1	; () banked
 15292   002828  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 15293   00282A  0E01               	movlw	1
 15294   00282C  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 15295   00282E  ECDF  F05A         	call	_teachCheckLen	;wreg free
 15296   002832  06E8               	decf	wreg,f,c
 15297   002834  B4D8               	btfsc	status,2,c
 15298   002836  D552               	goto	u26460
 15299                           
 15300                           ;../../VLCBlib_PIC/event_teach_large.c: 489:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15301   002838  0101               	movlb	1	; () banked
 15302   00283A  EE20 F002          	lfsr	2,2
 15303   00283E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15304   002840  26D9               	addwf	fsr2l,f,c
 15305   002842  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15306   002844  22DA               	addwfc	fsr2h,f,c
 15307   002846  50DE               	movf	postinc2,w,c
 15308   002848  0100               	movlb	0	; () banked
 15309   00284A  19B5               	xorwf	(_nn+1)& (0+255),w,b
 15310   00284C  A4D8               	btfss	status,2,c
 15311   00284E  D546               	goto	u26460
 15312                           
 15313                           ; BSR set to: 0
 15314   002850  0101               	movlb	1	; () banked
 15315   002852  EE20 F003          	lfsr	2,3
 15316   002856  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15317   002858  26D9               	addwf	fsr2l,f,c
 15318   00285A  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15319   00285C  22DA               	addwfc	fsr2h,f,c
 15320   00285E  0100               	movlb	0	; () banked
 15321   002860  51B4               	movf	_nn& (0+255),w,b
 15322   002862  18DE               	xorwf	postinc2,w,c
 15323   002864  A4D8               	btfss	status,2,c
 15324   002866  D53A               	goto	u26460
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;../../VLCBlib_PIC/event_teach_large.c: 491:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6
      +                          ]);
 15328   002868  0101               	movlb	1	; () banked
 15329   00286A  EE20 F003          	lfsr	2,3
 15330   00286E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15331   002870  26D9               	addwf	fsr2l,f,c
 15332   002872  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15333   002874  22DA               	addwfc	fsr2h,f,c
 15334   002876  50DF               	movf	indf2,w,c
 15335   002878  0102               	movlb	2	; () banked
 15336   00287A  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15337   00287C  0101               	movlb	1	; () banked
 15338   00287E  EE20 F002          	lfsr	2,2
 15339   002882  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15340   002884  26D9               	addwf	fsr2l,f,c
 15341   002886  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15342   002888  22DA               	addwfc	fsr2h,f,c
 15343   00288A  50DF               	movf	indf2,w,c
 15344   00288C  0102               	movlb	2	; () banked
 15345   00288E  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 15346   002890  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15347   002892  0101               	movlb	1	; () banked
 15348   002894  6FF2               	movwf	doEvlrn@nodeNumber& (0+255),b
 15349   002896  C2CD  F1F3         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 15350   00289A  EE20 F005          	lfsr	2,5
 15351   00289E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15352   0028A0  26D9               	addwf	fsr2l,f,c
 15353   0028A2  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15354   0028A4  22DA               	addwfc	fsr2h,f,c
 15355   0028A6  50DF               	movf	indf2,w,c
 15356   0028A8  0102               	movlb	2	; () banked
 15357   0028AA  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 15358   0028AC  0101               	movlb	1	; () banked
 15359   0028AE  EE20 F004          	lfsr	2,4
 15360   0028B2  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15361   0028B4  26D9               	addwf	fsr2l,f,c
 15362   0028B6  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15363   0028B8  22DA               	addwfc	fsr2h,f,c
 15364   0028BA  50DF               	movf	indf2,w,c
 15365   0028BC  0102               	movlb	2	; () banked
 15366   0028BE  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 15367   0028C0  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 15368   0028C2  0101               	movlb	1	; () banked
 15369   0028C4  6FF4               	movwf	doEvlrn@eventNumber& (0+255),b
 15370   0028C6  C2D0  F1F5         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 15371   0028CA  EE20 F007          	lfsr	2,7
 15372   0028CE  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15373   0028D0  26D9               	addwf	fsr2l,f,c
 15374   0028D2  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15375   0028D4  22DA               	addwfc	fsr2h,f,c
 15376   0028D6  50DF               	movf	indf2,w,c
 15377   0028D8  6FF6               	movwf	doEvlrn@evNum& (0+255),b
 15378   0028DA  EE20 F008          	lfsr	2,8
 15379   0028DE  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15380   0028E0  26D9               	addwf	fsr2l,f,c
 15381   0028E2  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15382   0028E4  22DA               	addwfc	fsr2h,f,c
 15383   0028E6  50DF               	movf	indf2,w,c
 15384   0028E8  6FF7               	movwf	doEvlrn@evVal& (0+255),b
 15385   0028EA  EC5D  F04A         	call	_doEvlrn	;wreg free
 15386   0028EE  D4F6               	goto	u26460
 15387   0028F0                     l25073:
 15388   0028F0  0101               	movlb	1	; () banked
 15389   0028F2  EE20 F001          	lfsr	2,1
 15390   0028F6  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15391   0028F8  26D9               	addwf	fsr2l,f,c
 15392   0028FA  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15393   0028FC  22DA               	addwfc	fsr2h,f,c
 15394   0028FE  50DF               	movf	indf2,w,c
 15395   002900  0102               	movlb	2	; () banked
 15396   002902  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15397   002904  6BCD               	clrf	(??_teachProcessMessage+1)& (0+255),b
 15398                           
 15399                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15400                           ; Switch size 1, requested type "simple"
 15401                           ; Number of cases is 1, Range of values is 0 to 0
 15402                           ; switch strategies available:
 15403                           ; Name         Instructions Cycles
 15404                           ; simple_byte            4     3 (average)
 15405                           ;	Chosen strategy is simple_byte
 15406   002906  51CD               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 15407   002908  0A00               	xorlw	0	; case 0
 15408   00290A  A4D8               	btfss	status,2,c
 15409   00290C  D545               	goto	l24855
 15410                           
 15411                           ; BSR set to: 2
 15412                           ; Switch size 1, requested type "simple"
 15413                           ; Number of cases is 13, Range of values is 83 to 245
 15414                           ; switch strategies available:
 15415                           ; Name         Instructions Cycles
 15416                           ; simple_byte           40    21 (average)
 15417                           ;	Chosen strategy is simple_byte
 15418   00290E  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15419   002910  0A53               	xorlw	83	; case 83
 15420   002912  B4D8               	btfsc	status,2,c
 15421   002914  D4D5               	goto	l24807
 15422   002916  0A07               	xorlw	7	; case 84
 15423   002918  B4D8               	btfsc	status,2,c
 15424   00291A  D62F               	goto	l24909
 15425   00291C  0A01               	xorlw	1	; case 85
 15426   00291E  B4D8               	btfsc	status,2,c
 15427   002920  D653               	goto	l24929
 15428   002922  0A03               	xorlw	3	; case 86
 15429   002924  B4D8               	btfsc	status,2,c
 15430   002926  D6BE               	goto	l24971
 15431   002928  0A01               	xorlw	1	; case 87
 15432   00292A  B4D8               	btfsc	status,2,c
 15433   00292C  D692               	goto	l24951
 15434   00292E  0A0F               	xorlw	15	; case 88
 15435   002930  B4D8               	btfsc	status,2,c
 15436   002932  D6E1               	goto	l24991
 15437   002934  0A2A               	xorlw	42	; case 114
 15438   002936  B4D8               	btfsc	status,2,c
 15439   002938  D707               	goto	l25011
 15440   00293A  0A04               	xorlw	4	; case 118
 15441   00293C  B4D8               	btfsc	status,2,c
 15442   00293E  D4EE               	goto	l24825
 15443   002940  0AE3               	xorlw	227	; case 149
 15444   002942  B4D8               	btfsc	status,2,c
 15445   002944  D58A               	goto	l24877
 15446   002946  0A09               	xorlw	9	; case 156
 15447   002948  B4D8               	btfsc	status,2,c
 15448   00294A  D72F               	goto	l25031
 15449   00294C  0A2E               	xorlw	46	; case 178
 15450   00294E  B4D8               	btfsc	status,2,c
 15451   002950  D5C8               	goto	l24893
 15452   002952  0A60               	xorlw	96	; case 210
 15453   002954  B4D8               	btfsc	status,2,c
 15454   002956  D522               	goto	l24859
 15455   002958  0A27               	xorlw	39	; case 245
 15456   00295A  B4D8               	btfsc	status,2,c
 15457   00295C  D75F               	goto	l25051
 15458   00295E  D51C               	goto	l24855
 15459   002960                     __end_of_teachProcessMessage:
 15460                           	callstack 0
 15461                           
 15462 ;; *************** function _teachCheckLen *****************
 15463 ;; Defined at:
 15464 ;;		line 506 in file "../../VLCBlib_PIC/event_teach_large.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  m               2   17[BANK1 ] PTR struct Message
 15467 ;;		 -> poll@m(9), 
 15468 ;;  needed          1   19[BANK1 ] unsigned char 
 15469 ;;  learn           1   20[BANK1 ] unsigned char 
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;		None
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1    wreg      enum E12799
 15474 ;; Registers used:
 15475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15476 ;; Tracked objects:
 15477 ;;		On entry : 0/0
 15478 ;;		On exit  : 0/0
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15481 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15485 ;;Total ram usage:        5 bytes
 15486 ;; Hardware stack levels used: 1
 15487 ;; Hardware stack levels required when called: 18
 15488 ;; This function calls:
 15489 ;;		_checkLen
 15490 ;;		_sendMessage5
 15491 ;; This function is called by:
 15492 ;;		_teachProcessMessage
 15493 ;; This function uses a non-reentrant model
 15494 ;;
 15495                           
 15496                           	psect	text28
 15497   00B5BE                     __ptext28:
 15498                           	callstack 0
 15499   00B5BE                     _teachCheckLen:
 15500                           	callstack 10
 15501                           
 15502                           ;../../VLCBlib_PIC/event_teach_large.c: 507:     if (learn) {
 15503                           
 15504                           ;incstack = 0
 15505   00B5BE  0101               	movlb	1	; () banked
 15506   00B5C0  51D2               	movf	teachCheckLen@learn& (0+255),w,b
 15507   00B5C2  B4D8               	btfsc	status,2,c
 15508   00B5C4  D021               	goto	l22835
 15509                           
 15510                           ; BSR set to: 1
 15511                           ;../../VLCBlib_PIC/event_teach_large.c: 509:         if (m->len < needed) {
 15512   00B5C6  C1CF  FFD9         	movff	teachCheckLen@m,fsr2l
 15513   00B5CA  C1D0  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15514   00B5CE  51D1               	movf	teachCheckLen@needed& (0+255),w,b
 15515   00B5D0  5CDE               	subwf	postinc2,w,c
 15516   00B5D2  B0D8               	btfsc	status,0,c
 15517   00B5D4  D017               	goto	l22831
 15518                           
 15519                           ; BSR set to: 1
 15520                           ;../../VLCBlib_PIC/event_teach_large.c: 511:             if (mode_flags & 1) {
 15521   00B5D6  A165               	btfss	_mode_flags& (0+255),0,b
 15522   00B5D8  D013               	goto	l22827
 15523                           
 15524                           ; BSR set to: 1
 15525                           ;../../VLCBlib_PIC/event_teach_large.c: 514:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15526   00B5DA  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15527   00B5DE  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15528   00B5E2  EE20 F001          	lfsr	2,1
 15529   00B5E6  51CF               	movf	teachCheckLen@m& (0+255),w,b
 15530   00B5E8  26D9               	addwf	fsr2l,f,c
 15531   00B5EA  51D0               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15532   00B5EC  22DA               	addwfc	fsr2h,f,c
 15533   00B5EE  50DF               	movf	indf2,w,c
 15534   00B5F0  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15535   00B5F2  0E04               	movlw	4
 15536   00B5F4  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15537   00B5F6  0E01               	movlw	1
 15538   00B5F8  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15539   00B5FA  0EAF               	movlw	175
 15540   00B5FC  EC25  F061         	call	_sendMessage5
 15541   00B600                     l22827:
 15542                           
 15543                           ;../../VLCBlib_PIC/event_teach_large.c: 517:             return PROCESSED;
 15544   00B600  0E01               	movlw	1
 15545   00B602  0012               	return	
 15546   00B604                     l22831:
 15547                           
 15548                           ; BSR set to: 1
 15549                           ;../../VLCBlib_PIC/event_teach_large.c: 519:         return NOT_PROCESSED;
 15550   00B604  0E00               	movlw	0
 15551   00B606  0012               	return	
 15552   00B608                     l22835:
 15553                           
 15554                           ; BSR set to: 1
 15555                           ;../../VLCBlib_PIC/event_teach_large.c: 521:     return checkLen(m, needed, SERVICE_ID_O
      +                          LD_TEACH);
 15556   00B608  C1CF  F1CB         	movff	teachCheckLen@m,checkLen@m
 15557   00B60C  C1D0  F1CC         	movff	teachCheckLen@m+1,checkLen@m+1
 15558   00B610  C1D1  F1CD         	movff	teachCheckLen@needed,checkLen@needed
 15559   00B614  0E04               	movlw	4
 15560   00B616  6FCE               	movwf	checkLen@service& (0+255),b
 15561   00B618  EC62  F055         	call	_checkLen	;wreg free
 15562   00B61C  0012               	return		;funcret
 15563   00B61E                     __end_of_teachCheckLen:
 15564                           	callstack 0
 15565                           
 15566 ;; *************** function _doRqevn *****************
 15567 ;; Defined at:
 15568 ;;		line 651 in file "../../VLCBlib_PIC/event_teach_large.c"
 15569 ;; Parameters:    Size  Location     Type
 15570 ;;		None
 15571 ;; Auto vars:     Size  Location     Type
 15572 ;;  i               1   10[BANK1 ] unsigned char 
 15573 ;;  count           1    9[BANK1 ] unsigned char 
 15574 ;; Return value:  Size  Location     Type
 15575 ;;                  1    wreg      void 
 15576 ;; Registers used:
 15577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15586 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15587 ;;Total ram usage:        2 bytes
 15588 ;; Hardware stack levels used: 1
 15589 ;; Hardware stack levels required when called: 17
 15590 ;; This function calls:
 15591 ;;		_sendMessage3
 15592 ;;		_validStart
 15593 ;; This function is called by:
 15594 ;;		_teachProcessMessage
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           	psect	text29
 15599   00C08A                     __ptext29:
 15600                           	callstack 0
 15601   00C08A                     _doRqevn:
 15602                           	callstack 11
 15603                           
 15604                           ;../../VLCBlib_PIC/event_teach_large.c: 653:     uint8_t count = 0;
 15605                           
 15606                           ;incstack = 0
 15607   00C08A  0E00               	movlw	0
 15608   00C08C  0101               	movlb	1	; () banked
 15609   00C08E  6FC7               	movwf	doRqevn@count& (0+255),b
 15610                           
 15611                           ;../../VLCBlib_PIC/event_teach_large.c: 654:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 655:     for (i=0; i<255; i++) {
 15612   00C090  0E00               	movlw	0
 15613   00C092  6FC8               	movwf	doRqevn@i& (0+255),b
 15614   00C094                     l22941:
 15615                           
 15616                           ; BSR set to: 1
 15617                           ;../../VLCBlib_PIC/event_teach_large.c: 656:         if (validStart(i)) {
 15618   00C094  51C8               	movf	doRqevn@i& (0+255),w,b
 15619   00C096  EC78  F05D         	call	_validStart
 15620   00C09A  0900               	iorlw	0
 15621   00C09C  B4D8               	btfsc	status,2,c
 15622   00C09E  D002               	goto	l2856
 15623                           
 15624                           ;../../VLCBlib_PIC/event_teach_large.c: 657:             count++;
 15625   00C0A0  0101               	movlb	1	; () banked
 15626   00C0A2  2BC7               	incf	doRqevn@count& (0+255),f,b
 15627   00C0A4                     l2856:
 15628                           
 15629                           ;../../VLCBlib_PIC/event_teach_large.c: 659:     }
 15630   00C0A4  0101               	movlb	1	; () banked
 15631   00C0A6  2BC8               	incf	doRqevn@i& (0+255),f,b
 15632                           
 15633                           ; BSR set to: 1
 15634   00C0A8  29C8               	incf	doRqevn@i& (0+255),w,b
 15635   00C0AA  A4D8               	btfss	status,2,c
 15636   00C0AC  D7F3               	goto	l22941
 15637                           
 15638                           ; BSR set to: 1
 15639                           ;../../VLCBlib_PIC/event_teach_large.c: 660:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15640   00C0AE  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15641   00C0B2  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15642   00C0B6  C1C7  F0A9         	movff	doRqevn@count,sendMessage3@data3
 15643   00C0BA  0E74               	movlw	116
 15644   00C0BC  EC83  F061         	call	_sendMessage3
 15645   00C0C0  0012               	return		;funcret
 15646   00C0C2                     __end_of_doRqevn:
 15647                           	callstack 0
 15648                           
 15649 ;; *************** function _doReval *****************
 15650 ;; Defined at:
 15651 ;;		line 721 in file "../../VLCBlib_PIC/event_teach_large.c"
 15652 ;; Parameters:    Size  Location     Type
 15653 ;;  enNum           1    wreg     unsigned char 
 15654 ;;  evNum           1   13[BANK1 ] unsigned char 
 15655 ;; Auto vars:     Size  Location     Type
 15656 ;;  enNum           1   16[BANK1 ] unsigned char 
 15657 ;;  evVal           2   17[BANK1 ] int 
 15658 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15659 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15660 ;; Return value:  Size  Location     Type
 15661 ;;                  1    wreg      void 
 15662 ;; Registers used:
 15663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15664 ;; Tracked objects:
 15665 ;;		On entry : 0/0
 15666 ;;		On exit  : 0/0
 15667 ;;		Unchanged: 0/0
 15668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15669 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15670 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15672 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15673 ;;Total ram usage:        7 bytes
 15674 ;; Hardware stack levels used: 1
 15675 ;; Hardware stack levels required when called: 17
 15676 ;; This function calls:
 15677 ;;		_evtIdxToTableIndex
 15678 ;;		_findServiceIndex
 15679 ;;		_getEv
 15680 ;;		_numEv
 15681 ;;		_sendMessage3
 15682 ;;		_sendMessage5
 15683 ;;		_startTimedResponse
 15684 ;;		_validStart
 15685 ;; This function is called by:
 15686 ;;		_teachProcessMessage
 15687 ;; This function uses a non-reentrant model
 15688 ;;
 15689                           
 15690                           	psect	text30
 15691   008A06                     __ptext30:
 15692                           	callstack 0
 15693   008A06                     _doReval:
 15694                           	callstack 11
 15695                           
 15696                           ;incstack = 0
 15697                           ;doReval@enNum stored from wreg
 15698   008A06  0101               	movlb	1	; () banked
 15699   008A08  6FCE               	movwf	doReval@enNum& (0+255),b
 15700                           
 15701                           ;../../VLCBlib_PIC/event_teach_large.c: 724:     uint8_t evIndex;;../../VLCBlib_PIC/even
      +                          t_teach_large.c: 725:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15702   008A0A  0101               	movlb	1	; () banked
 15703   008A0C  51CE               	movf	doReval@enNum& (0+255),w,b
 15704   008A0E  EC4B  F064         	call	_evtIdxToTableIndex
 15705   008A12  0101               	movlb	1	; () banked
 15706   008A14  6FD1               	movwf	doReval@tableIndex& (0+255),b
 15707                           
 15708                           ; BSR set to: 1
 15709                           ;../../VLCBlib_PIC/event_teach_large.c: 727:     if (evNum > 20) {
 15710   008A16  0E14               	movlw	20
 15711   008A18  65CB               	cpfsgt	doReval@evNum& (0+255),b
 15712   008A1A  D00B               	goto	l22969
 15713                           
 15714                           ; BSR set to: 1
 15715                           ;../../VLCBlib_PIC/event_teach_large.c: 728:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15716   008A1C  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15717   008A20  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15718   008A24  0E06               	movlw	6
 15719   008A26  0100               	movlb	0	; () banked
 15720   008A28  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15721   008A2A  0E6F               	movlw	111
 15722   008A2C  EC83  F061         	call	_sendMessage3
 15723   008A30  0012               	return	
 15724   008A32                     l22969:
 15725                           
 15726                           ; BSR set to: 1
 15727                           ;../../VLCBlib_PIC/event_teach_large.c: 732:     evIndex = evNum-1U;
 15728   008A32  05CB               	decf	doReval@evNum& (0+255),w,b
 15729   008A34  6FCD               	movwf	doReval@evIndex& (0+255),b
 15730                           
 15731                           ;../../VLCBlib_PIC/event_teach_large.c: 735:     if (tableIndex < 255) {
 15732   008A36  29D1               	incf	doReval@tableIndex& (0+255),w,b
 15733   008A38  B4D8               	btfsc	status,2,c
 15734   008A3A  D04A               	goto	l22993
 15735                           
 15736                           ; BSR set to: 1
 15737                           ;../../VLCBlib_PIC/event_teach_large.c: 736:         if (validStart(tableIndex)) {
 15738   008A3C  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15739   008A3E  EC78  F05D         	call	_validStart
 15740   008A42  0900               	iorlw	0
 15741   008A44  B4D8               	btfsc	status,2,c
 15742   008A46  D044               	goto	l22993
 15743                           
 15744                           ;../../VLCBlib_PIC/event_teach_large.c: 737:             int evVal;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 738:             if (evNum == 0) {
 15745   008A48  0101               	movlb	1	; () banked
 15746   008A4A  51CB               	movf	doReval@evNum& (0+255),w,b
 15747   008A4C  A4D8               	btfss	status,2,c
 15748   008A4E  D01A               	goto	l22981
 15749                           
 15750                           ; BSR set to: 1
 15751                           ;../../VLCBlib_PIC/event_teach_large.c: 742:                 timedResponseOpcode = OPC_N
      +                          EVAL;
 15752   008A50  0EB5               	movlw	181
 15753   008A52  0100               	movlb	0	; () banked
 15754   008A54  6FB6               	movwf	_timedResponseOpcode& (0+255),b
 15755                           
 15756                           ; BSR set to: 0
 15757                           ;../../VLCBlib_PIC/event_teach_large.c: 743:                 startTimedResponse(tableInd
      +                          ex, findServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15758   008A56  0E04               	movlw	4
 15759   008A58  ECFC  F057         	call	_findServiceIndex
 15760   008A5C  0100               	movlb	0	; () banked
 15761   008A5E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15762   008A60  0E80               	movlw	low _reqevCallback
 15763   008A62  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15764   008A64  0E95               	movlw	high _reqevCallback
 15765   008A66  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15766   008A68  0101               	movlb	1	; () banked
 15767   008A6A  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15768   008A6C  EC53  F05F         	call	_startTimedResponse
 15769                           
 15770                           ;../../VLCBlib_PIC/event_teach_large.c: 745:                 evVal = numEv(tableIndex);
 15771   008A70  0101               	movlb	1	; () banked
 15772   008A72  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15773   008A74  EC4F  F046         	call	_numEv
 15774   008A78  0101               	movlb	1	; () banked
 15775   008A7A  6FCC               	movwf	??_doReval& (0+255),b
 15776   008A7C  51CC               	movf	??_doReval& (0+255),w,b
 15777   008A7E  6FCF               	movwf	doReval@evVal& (0+255),b
 15778   008A80  6BD0               	clrf	(doReval@evVal+1)& (0+255),b
 15779                           
 15780                           ;../../VLCBlib_PIC/event_teach_large.c: 746:             } else {
 15781   008A82  D009               	goto	l22983
 15782   008A84                     l22981:
 15783                           
 15784                           ; BSR set to: 1
 15785                           ;../../VLCBlib_PIC/event_teach_large.c: 747:                 evVal = getEv(tableIndex, e
      +                          vIndex);
 15786   008A84  C1CD  F09D         	movff	doReval@evIndex,getEv@evNum
 15787   008A88  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15788   008A8A  ECFA  F03C         	call	_getEv
 15789   008A8E  C09D  F1CF         	movff	?_getEv,doReval@evVal
 15790   008A92  C09E  F1D0         	movff	?_getEv+1,doReval@evVal+1
 15791   008A96                     l22983:
 15792                           
 15793                           ;../../VLCBlib_PIC/event_teach_large.c: 749:             if (evVal >= 0) {
 15794   008A96  0101               	movlb	1	; () banked
 15795   008A98  BFD0               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15796   008A9A  D00E               	goto	l22989
 15797                           
 15798                           ; BSR set to: 1
 15799                           ;../../VLCBlib_PIC/event_teach_large.c: 750:                 sendMessage5(OPC_NEVAL, nn.
      +                          bytes.hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15800   008A9C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15801   008AA0  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15802   008AA4  C1CE  F1C8         	movff	doReval@enNum,sendMessage5@data3
 15803   008AA8  C1CB  F1C9         	movff	doReval@evNum,sendMessage5@data4
 15804   008AAC  C1CF  F1CA         	movff	doReval@evVal,sendMessage5@data5
 15805   008AB0  0EB5               	movlw	181
 15806   008AB2  EC25  F061         	call	_sendMessage5
 15807   008AB6  0012               	return	
 15808   008AB8                     l22989:
 15809                           
 15810                           ; BSR set to: 1
 15811                           ;../../VLCBlib_PIC/event_teach_large.c: 754:             sendMessage3(OPC_CMDERR, nn.byt
      +                          es.hi, nn.bytes.lo, (uint8_t)(-evVal));
 15812   008AB8  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15813   008ABC  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15814   008AC0  51CF               	movf	doReval@evVal& (0+255),w,b
 15815   008AC2  0800               	sublw	0
 15816   008AC4  0100               	movlb	0	; () banked
 15817   008AC6  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15818   008AC8  0E6F               	movlw	111
 15819   008ACA  EC83  F061         	call	_sendMessage3
 15820   008ACE  0012               	return	
 15821   008AD0                     l22993:
 15822                           
 15823                           ;../../VLCBlib_PIC/event_teach_large.c: 758:     sendMessage3(OPC_CMDERR, nn.bytes.hi, n
      +                          n.bytes.lo, CMDERR_INVALID_EVENT);
 15824   008AD0  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15825   008AD4  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15826   008AD8  0E07               	movlw	7
 15827   008ADA  0100               	movlb	0	; () banked
 15828   008ADC  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15829   008ADE  0E6F               	movlw	111
 15830   008AE0  EC83  F061         	call	_sendMessage3
 15831   008AE4  0012               	return		;funcret
 15832   008AE6                     __end_of_doReval:
 15833                           	callstack 0
 15834                           
 15835 ;; *************** function _doReqev *****************
 15836 ;; Defined at:
 15837 ;;		line 789 in file "../../VLCBlib_PIC/event_teach_large.c"
 15838 ;; Parameters:    Size  Location     Type
 15839 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15840 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15841 ;;  evNum           1   18[BANK1 ] unsigned char 
 15842 ;; Auto vars:     Size  Location     Type
 15843 ;;  evVal           2   19[BANK1 ] short 
 15844 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15845 ;; Return value:  Size  Location     Type
 15846 ;;                  1    wreg      void 
 15847 ;; Registers used:
 15848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15849 ;; Tracked objects:
 15850 ;;		On entry : 0/0
 15851 ;;		On exit  : 0/0
 15852 ;;		Unchanged: 0/0
 15853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15854 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15855 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15857 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15858 ;;Total ram usage:        8 bytes
 15859 ;; Hardware stack levels used: 1
 15860 ;; Hardware stack levels required when called: 17
 15861 ;; This function calls:
 15862 ;;		_findEvent
 15863 ;;		_findServiceIndex
 15864 ;;		_getEv
 15865 ;;		_numEv
 15866 ;;		_sendMessage3
 15867 ;;		_sendMessage5
 15868 ;;		_sendMessage6
 15869 ;;		_startTimedResponse
 15870 ;; This function is called by:
 15871 ;;		_teachProcessMessage
 15872 ;; This function uses a non-reentrant model
 15873 ;;
 15874                           
 15875                           	psect	text31
 15876   007C9E                     __ptext31:
 15877                           	callstack 0
 15878   007C9E                     _doReqev:
 15879                           	callstack 11
 15880                           
 15881                           ;../../VLCBlib_PIC/event_teach_large.c: 790:     int16_t evVal;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 792:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15882                           
 15883                           ;incstack = 0
 15884   007C9E  C1CC  F1BE         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15885   007CA2  C1CD  F1BF         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15886   007CA6  C1CE  F1C0         	movff	doReqev@eventNumber,findEvent@eventNumber
 15887   007CAA  C1CF  F1C1         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15888   007CAE  ECF8  F052         	call	_findEvent	;wreg free
 15889   007CB2  0101               	movlb	1	; () banked
 15890   007CB4  6FD3               	movwf	doReqev@tableIndex& (0+255),b
 15891                           
 15892                           ; BSR set to: 1
 15893                           ;../../VLCBlib_PIC/event_teach_large.c: 793:     if (tableIndex == 0xff) {
 15894   007CB6  29D3               	incf	doReqev@tableIndex& (0+255),w,b
 15895   007CB8  A4D8               	btfss	status,2,c
 15896   007CBA  D019               	goto	l22881
 15897                           
 15898                           ; BSR set to: 1
 15899                           ;../../VLCBlib_PIC/event_teach_large.c: 794:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INVALID_EVENT);
 15900   007CBC  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15901   007CC0  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15902   007CC4  0E07               	movlw	7
 15903   007CC6  0100               	movlb	0	; () banked
 15904   007CC8  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15905   007CCA  0E6F               	movlw	111
 15906   007CCC  EC83  F061         	call	_sendMessage3
 15907                           
 15908                           ;../../VLCBlib_PIC/event_teach_large.c: 796:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15909   007CD0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15910   007CD4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15911   007CD8  0EB2               	movlw	178
 15912   007CDA  0101               	movlb	1	; () banked
 15913   007CDC  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15914   007CDE  0E04               	movlw	4
 15915   007CE0  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15916   007CE2  0E07               	movlw	7
 15917   007CE4  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15918   007CE6  0EAF               	movlw	175
 15919   007CE8  EC25  F061         	call	_sendMessage5
 15920   007CEC  0012               	return	
 15921   007CEE                     l22881:
 15922                           
 15923                           ; BSR set to: 1
 15924                           ;../../VLCBlib_PIC/event_teach_large.c: 800:     if (evNum > 20) {
 15925   007CEE  0E14               	movlw	20
 15926   007CF0  65D0               	cpfsgt	doReqev@evNum& (0+255),b
 15927   007CF2  D019               	goto	l22887
 15928                           
 15929                           ; BSR set to: 1
 15930                           ;../../VLCBlib_PIC/event_teach_large.c: 801:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15931   007CF4  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 15932   007CF8  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 15933   007CFC  0E06               	movlw	6
 15934   007CFE  0100               	movlb	0	; () banked
 15935   007D00  6FA9               	movwf	sendMessage3@data3& (0+255),b
 15936   007D02  0E6F               	movlw	111
 15937   007D04  EC83  F061         	call	_sendMessage3
 15938                           
 15939                           ;../../VLCBlib_PIC/event_teach_large.c: 803:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15940   007D08  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15941   007D0C  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15942   007D10  0EB2               	movlw	178
 15943   007D12  0101               	movlb	1	; () banked
 15944   007D14  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15945   007D16  0E04               	movlw	4
 15946   007D18  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15947   007D1A  0E06               	movlw	6
 15948   007D1C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15949   007D1E  0EAF               	movlw	175
 15950   007D20  EC25  F061         	call	_sendMessage5
 15951   007D24  0012               	return	
 15952   007D26                     l22887:
 15953                           
 15954                           ; BSR set to: 1
 15955                           ;../../VLCBlib_PIC/event_teach_large.c: 807:     if (evNum == 0) {
 15956   007D26  51D0               	movf	doReqev@evNum& (0+255),w,b
 15957   007D28  A4D8               	btfss	status,2,c
 15958   007D2A  D023               	goto	l22899
 15959                           
 15960                           ; BSR set to: 1
 15961                           ;../../VLCBlib_PIC/event_teach_large.c: 809:         sendMessage6(OPC_EVANS, nodeNumber>
      +                          >8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15962   007D2C  51CD               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15963   007D2E  6FC6               	movwf	sendMessage6@data1& (0+255),b
 15964   007D30  C1CC  F1C7         	movff	doReqev@nodeNumber,sendMessage6@data2
 15965   007D34  51CF               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15966   007D36  6FC8               	movwf	sendMessage6@data3& (0+255),b
 15967   007D38  C1CE  F1C9         	movff	doReqev@eventNumber,sendMessage6@data4
 15968   007D3C  0E00               	movlw	0
 15969   007D3E  6FCA               	movwf	sendMessage6@data5& (0+255),b
 15970   007D40  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 15971   007D42  EC4F  F046         	call	_numEv
 15972   007D46  0101               	movlb	1	; () banked
 15973   007D48  6FCB               	movwf	sendMessage6@data6& (0+255),b
 15974   007D4A  0ED3               	movlw	211
 15975   007D4C  ECDD  F060         	call	_sendMessage6
 15976                           
 15977                           ;../../VLCBlib_PIC/event_teach_large.c: 812:         timedResponseOpcode = OPC_EVANS;
 15978   007D50  0ED3               	movlw	211
 15979   007D52  0100               	movlb	0	; () banked
 15980   007D54  6FB6               	movwf	_timedResponseOpcode& (0+255),b
 15981                           
 15982                           ; BSR set to: 0
 15983                           ;../../VLCBlib_PIC/event_teach_large.c: 813:         startTimedResponse(tableIndex, find
      +                          ServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15984   007D56  0E04               	movlw	4
 15985   007D58  ECFC  F057         	call	_findServiceIndex
 15986   007D5C  0100               	movlb	0	; () banked
 15987   007D5E  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15988   007D60  0E80               	movlw	low _reqevCallback
 15989   007D62  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15990   007D64  0E95               	movlw	high _reqevCallback
 15991   007D66  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15992   007D68  0101               	movlb	1	; () banked
 15993   007D6A  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 15994   007D6C  EC53  F05F         	call	_startTimedResponse
 15995   007D70  0012               	return	
 15996   007D72                     l22899:
 15997                           
 15998                           ; BSR set to: 1
 15999                           ;../../VLCBlib_PIC/event_teach_large.c: 820:         evVal = getEv(tableIndex, evNum-1);
 16000   007D72  05D0               	decf	doReqev@evNum& (0+255),w,b
 16001   007D74  0100               	movlb	0	; () banked
 16002   007D76  6F9D               	movwf	getEv@evNum& (0+255),b
 16003   007D78  0101               	movlb	1	; () banked
 16004   007D7A  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 16005   007D7C  ECFA  F03C         	call	_getEv
 16006   007D80  C09D  F1D1         	movff	?_getEv,doReqev@evVal
 16007   007D84  C09E  F1D2         	movff	?_getEv+1,doReqev@evVal+1
 16008                           
 16009                           ;../../VLCBlib_PIC/event_teach_large.c: 822:     if (evVal < 0) {
 16010   007D88  0101               	movlb	1	; () banked
 16011   007D8A  AFD2               	btfss	(doReqev@evVal+1)& (0+255),7,b
 16012   007D8C  D01B               	goto	l22907
 16013                           
 16014                           ; BSR set to: 1
 16015                           ;../../VLCBlib_PIC/event_teach_large.c: 824:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, (uint8_t)(-evVal));
 16016   007D8E  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16017   007D92  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16018   007D96  51D1               	movf	doReqev@evVal& (0+255),w,b
 16019   007D98  0800               	sublw	0
 16020   007D9A  0100               	movlb	0	; () banked
 16021   007D9C  6FA9               	movwf	sendMessage3@data3& (0+255),b
 16022   007D9E  0E6F               	movlw	111
 16023   007DA0  EC83  F061         	call	_sendMessage3
 16024                           
 16025                           ;../../VLCBlib_PIC/event_teach_large.c: 826:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 16026   007DA4  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16027   007DA8  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16028   007DAC  0EB2               	movlw	178
 16029   007DAE  0101               	movlb	1	; () banked
 16030   007DB0  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16031   007DB2  0E04               	movlw	4
 16032   007DB4  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16033   007DB6  51D1               	movf	doReqev@evVal& (0+255),w,b
 16034   007DB8  0800               	sublw	0
 16035   007DBA  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16036   007DBC  0EAF               	movlw	175
 16037   007DBE  EC25  F061         	call	_sendMessage5
 16038   007DC2  0012               	return	
 16039   007DC4                     l22907:
 16040                           
 16041                           ; BSR set to: 1
 16042                           ;../../VLCBlib_PIC/event_teach_large.c: 831:     sendMessage6(OPC_EVANS, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 16043   007DC4  51CD               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 16044   007DC6  6FC6               	movwf	sendMessage6@data1& (0+255),b
 16045   007DC8  C1CC  F1C7         	movff	doReqev@nodeNumber,sendMessage6@data2
 16046   007DCC  51CF               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 16047   007DCE  6FC8               	movwf	sendMessage6@data3& (0+255),b
 16048   007DD0  C1CE  F1C9         	movff	doReqev@eventNumber,sendMessage6@data4
 16049   007DD4  C1D0  F1CA         	movff	doReqev@evNum,sendMessage6@data5
 16050   007DD8  C1D1  F1CB         	movff	doReqev@evVal,sendMessage6@data6
 16051   007DDC  0ED3               	movlw	211
 16052   007DDE  ECDD  F060         	call	_sendMessage6
 16053   007DE2  0012               	return		;funcret
 16054   007DE4                     __end_of_doReqev:
 16055                           	callstack 0
 16056                           
 16057 ;; *************** function _doNnevn *****************
 16058 ;; Defined at:
 16059 ;;		line 576 in file "../../VLCBlib_PIC/event_teach_large.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;		None
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;  f               1   13[BANK1 ] struct .
 16064 ;;  i               1   15[BANK1 ] unsigned char 
 16065 ;;  count           1   14[BANK1 ] unsigned char 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      void 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16076 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16077 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16078 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16079 ;;Total ram usage:        7 bytes
 16080 ;; Hardware stack levels used: 1
 16081 ;; Hardware stack levels required when called: 17
 16082 ;; This function calls:
 16083 ;;		_readNVM
 16084 ;;		_sendMessage3
 16085 ;; This function is called by:
 16086 ;;		_teachProcessMessage
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           	psect	text32
 16091   00B296                     __ptext32:
 16092                           	callstack 0
 16093   00B296                     _doNnevn:
 16094                           	callstack 11
 16095                           
 16096                           ;../../VLCBlib_PIC/event_teach_large.c: 578:     uint8_t count = 0;
 16097                           
 16098                           ;incstack = 0
 16099   00B296  0E00               	movlw	0
 16100   00B298  0101               	movlb	1	; () banked
 16101   00B29A  6FCC               	movwf	doNnevn@count& (0+255),b
 16102                           
 16103                           ;../../VLCBlib_PIC/event_teach_large.c: 579:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 580:     for (i=0; i<255; i++) {
 16104   00B29C  0E00               	movlw	0
 16105   00B29E  6FCD               	movwf	doNnevn@i& (0+255),b
 16106   00B2A0                     l22925:
 16107                           
 16108                           ; BSR set to: 1
 16109                           ;../../VLCBlib_PIC/event_teach_large.c: 581:         EventTableFlags f;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 582:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*i+0);
 16110   00B2A0  51CD               	movf	doNnevn@i& (0+255),w,b
 16111   00B2A2  6FC7               	movwf	??_doNnevn& (0+255),b
 16112   00B2A4  6BC8               	clrf	(??_doNnevn+1)& (0+255),b
 16113   00B2A6  3BC7               	swapf	??_doNnevn& (0+255),f,b
 16114   00B2A8  3BC8               	swapf	(??_doNnevn+1)& (0+255),f,b
 16115   00B2AA  0EF0               	movlw	240
 16116   00B2AC  17C8               	andwf	(??_doNnevn+1)& (0+255),f,b
 16117   00B2AE  51C7               	movf	??_doNnevn& (0+255),w,b
 16118   00B2B0  0B0F               	andlw	15
 16119   00B2B2  13C8               	iorwf	(??_doNnevn+1)& (0+255),f,b
 16120   00B2B4  0EF0               	movlw	240
 16121   00B2B6  17C7               	andwf	??_doNnevn& (0+255),f,b
 16122   00B2B8  0E80               	movlw	128
 16123   00B2BA  25C7               	addwf	??_doNnevn& (0+255),w,b
 16124   00B2BC  6FC9               	movwf	(??_doNnevn+2)& (0+255),b
 16125   00B2BE  0EEF               	movlw	239
 16126   00B2C0  21C8               	addwfc	(??_doNnevn+1)& (0+255),w,b
 16127   00B2C2  6FCA               	movwf	(??_doNnevn+3)& (0+255),b
 16128   00B2C4  C1C9  F091         	movff	??_doNnevn+2,readNVM@index
 16129   00B2C8  C1CA  F092         	movff	??_doNnevn+3,readNVM@index+1
 16130   00B2CC  0100               	movlb	0	; () banked
 16131   00B2CE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 16132   00B2D0  0E01               	movlw	1
 16133   00B2D2  EC0F  F05B         	call	_readNVM
 16134   00B2D6  0100               	movlb	0	; () banked
 16135   00B2D8  5191               	movf	?_readNVM& (0+255),w,b
 16136   00B2DA  0101               	movlb	1	; () banked
 16137   00B2DC  6FCB               	movwf	doNnevn@f& (0+255),b
 16138                           
 16139                           ; BSR set to: 1
 16140                           ;../../VLCBlib_PIC/event_teach_large.c: 583:         if (f.freeEntry) {
 16141   00B2DE  BFCB               	btfsc	doNnevn@f& (0+255),7,b
 16142                           
 16143                           ; BSR set to: 1
 16144                           ;../../VLCBlib_PIC/event_teach_large.c: 584:             count++;
 16145   00B2E0  2BCC               	incf	doNnevn@count& (0+255),f,b
 16146                           
 16147                           ; BSR set to: 1
 16148                           ;../../VLCBlib_PIC/event_teach_large.c: 586:     }
 16149                           
 16150                           ;../../VLCBlib_PIC/event_teach_large.c: 585:         }
 16151   00B2E2  2BCD               	incf	doNnevn@i& (0+255),f,b
 16152                           
 16153                           ; BSR set to: 1
 16154   00B2E4  29CD               	incf	doNnevn@i& (0+255),w,b
 16155   00B2E6  A4D8               	btfss	status,2,c
 16156   00B2E8  D7DB               	goto	l22925
 16157                           
 16158                           ; BSR set to: 1
 16159                           ;../../VLCBlib_PIC/event_teach_large.c: 587:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 16160   00B2EA  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16161   00B2EE  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16162   00B2F2  C1CC  F0A9         	movff	doNnevn@count,sendMessage3@data3
 16163   00B2F6  0E70               	movlw	112
 16164   00B2F8  EC83  F061         	call	_sendMessage3
 16165   00B2FC  0012               	return		;funcret
 16166   00B2FE                     __end_of_doNnevn:
 16167                           	callstack 0
 16168                           
 16169 ;; *************** function _doNnclr *****************
 16170 ;; Defined at:
 16171 ;;		line 666 in file "../../VLCBlib_PIC/event_teach_large.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;		None
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;		None
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      void 
 16178 ;; Registers used:
 16179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16189 ;;Total ram usage:        0 bytes
 16190 ;; Hardware stack levels used: 1
 16191 ;; Hardware stack levels required when called: 19
 16192 ;; This function calls:
 16193 ;;		_clearAllEvents
 16194 ;;		_sendMessage2
 16195 ;;		_sendMessage5
 16196 ;; This function is called by:
 16197 ;;		_teachProcessMessage
 16198 ;; This function uses a non-reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text33
 16202   00C18A                     __ptext33:
 16203                           	callstack 0
 16204   00C18A                     _doNnclr:
 16205                           	callstack 9
 16206                           
 16207                           ;../../VLCBlib_PIC/event_teach_large.c: 667:     clearAllEvents();
 16208                           
 16209                           ;incstack = 0
 16210   00C18A  ECD2  F05C         	call	_clearAllEvents	;wreg free
 16211                           
 16212                           ;../../VLCBlib_PIC/event_teach_large.c: 668:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16213   00C18E  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 16214   00C192  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 16215   00C196  0E59               	movlw	89
 16216   00C198  ECF5  F060         	call	_sendMessage2
 16217                           
 16218                           ;../../VLCBlib_PIC/event_teach_large.c: 670:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16219   00C19C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16220   00C1A0  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16221   00C1A4  0E55               	movlw	85
 16222   00C1A6  0101               	movlb	1	; () banked
 16223   00C1A8  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16224   00C1AA  0E04               	movlw	4
 16225   00C1AC  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16226   00C1AE  0E00               	movlw	0
 16227   00C1B0  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16228   00C1B2  0EAF               	movlw	175
 16229   00C1B4  EC25  F061         	call	_sendMessage5
 16230   00C1B8  0012               	return		;funcret
 16231   00C1BA                     __end_of_doNnclr:
 16232                           	callstack 0
 16233                           
 16234 ;; *************** function _doNerd *****************
 16235 ;; Defined at:
 16236 ;;		line 595 in file "../../VLCBlib_PIC/event_teach_large.c"
 16237 ;; Parameters:    Size  Location     Type
 16238 ;;		None
 16239 ;; Auto vars:     Size  Location     Type
 16240 ;;		None
 16241 ;; Return value:  Size  Location     Type
 16242 ;;                  1    wreg      void 
 16243 ;; Registers used:
 16244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16245 ;; Tracked objects:
 16246 ;;		On entry : 0/0
 16247 ;;		On exit  : 0/0
 16248 ;;		Unchanged: 0/0
 16249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16254 ;;Total ram usage:        0 bytes
 16255 ;; Hardware stack levels used: 1
 16256 ;; Hardware stack levels required when called: 13
 16257 ;; This function calls:
 16258 ;;		_findServiceIndex
 16259 ;;		_startTimedResponse
 16260 ;; This function is called by:
 16261 ;;		_teachProcessMessage
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           	psect	text34
 16266   00C758                     __ptext34:
 16267                           	callstack 0
 16268   00C758                     _doNerd:
 16269                           	callstack 15
 16270                           
 16271                           ;../../VLCBlib_PIC/event_teach_large.c: 596:     startTimedResponse(2, findServiceIndex(
      +                          SERVICE_ID_OLD_TEACH), nerdCallback);
 16272                           
 16273                           ;incstack = 0
 16274   00C758  0E04               	movlw	4
 16275   00C75A  ECFC  F057         	call	_findServiceIndex
 16276   00C75E  0100               	movlb	0	; () banked
 16277   00C760  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 16278   00C762  0E66               	movlw	low _nerdCallback
 16279   00C764  6F92               	movwf	startTimedResponse@callback& (0+255),b
 16280   00C766  0EB3               	movlw	high _nerdCallback
 16281   00C768  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 16282   00C76A  0E02               	movlw	2
 16283   00C76C  EC53  F05F         	call	_startTimedResponse
 16284   00C770  0012               	return		;funcret
 16285   00C772                     __end_of_doNerd:
 16286                           	callstack 0
 16287                           
 16288 ;; *************** function _doNenrd *****************
 16289 ;; Defined at:
 16290 ;;		line 627 in file "../../VLCBlib_PIC/event_teach_large.c"
 16291 ;; Parameters:    Size  Location     Type
 16292 ;;  index           1    wreg     unsigned char 
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;  index           1   13[BANK1 ] unsigned char 
 16295 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 16296 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 16297 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  1    wreg      void 
 16300 ;; Registers used:
 16301 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16311 ;;Total ram usage:        6 bytes
 16312 ;; Hardware stack levels used: 1
 16313 ;; Hardware stack levels required when called: 17
 16314 ;; This function calls:
 16315 ;;		_evtIdxToTableIndex
 16316 ;;		_getEN
 16317 ;;		_getNN
 16318 ;;		_sendMessage3
 16319 ;;		_sendMessage5
 16320 ;;		_validStart
 16321 ;; This function is called by:
 16322 ;;		_teachProcessMessage
 16323 ;; This function uses a non-reentrant model
 16324 ;;
 16325                           
 16326                           	psect	text35
 16327   00B14E                     __ptext35:
 16328                           	callstack 0
 16329   00B14E                     _doNenrd:
 16330                           	callstack 11
 16331                           
 16332                           ;incstack = 0
 16333                           ;doNenrd@index stored from wreg
 16334   00B14E  0101               	movlb	1	; () banked
 16335   00B150  6FCB               	movwf	doNenrd@index& (0+255),b
 16336                           
 16337                           ;../../VLCBlib_PIC/event_teach_large.c: 628:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 629:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 631:     tableIndex = evtIdxToTableIndex(index);
 16338   00B152  0101               	movlb	1	; () banked
 16339   00B154  51CB               	movf	doNenrd@index& (0+255),w,b
 16340   00B156  EC4B  F064         	call	_evtIdxToTableIndex
 16341   00B15A  0101               	movlb	1	; () banked
 16342   00B15C  6FD0               	movwf	doNenrd@tableIndex& (0+255),b
 16343                           
 16344                           ; BSR set to: 1
 16345                           ;../../VLCBlib_PIC/event_teach_large.c: 633:     if ( ! validStart(tableIndex)) {
 16346   00B15E  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 16347   00B160  EC78  F05D         	call	_validStart
 16348   00B164  0900               	iorlw	0
 16349   00B166  A4D8               	btfss	status,2,c
 16350   00B168  D00B               	goto	l22957
 16351                           
 16352                           ;../../VLCBlib_PIC/event_teach_large.c: 634:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EN_IDX);
 16353   00B16A  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16354   00B16E  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16355   00B172  0E08               	movlw	8
 16356   00B174  0100               	movlb	0	; () banked
 16357   00B176  6FA9               	movwf	sendMessage3@data3& (0+255),b
 16358   00B178  0E6F               	movlw	111
 16359   00B17A  EC83  F061         	call	_sendMessage3
 16360   00B17E  0012               	return	
 16361   00B180                     l22957:
 16362                           
 16363                           ;../../VLCBlib_PIC/event_teach_large.c: 640:     nodeNumber = getNN(tableIndex);
 16364   00B180  0101               	movlb	1	; () banked
 16365   00B182  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 16366   00B184  EC85  F04B         	call	_getNN
 16367   00B188  C097  F1CC         	movff	?_getNN,doNenrd@nodeNumber
 16368   00B18C  C098  F1CD         	movff	?_getNN+1,doNenrd@nodeNumber+1
 16369                           
 16370                           ;../../VLCBlib_PIC/event_teach_large.c: 641:     eventNumber = getEN(tableIndex);
 16371   00B190  0101               	movlb	1	; () banked
 16372   00B192  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 16373   00B194  ECD8  F056         	call	_getEN
 16374   00B198  C097  F1CE         	movff	?_getEN,doNenrd@eventNumber
 16375   00B19C  C098  F1CF         	movff	?_getEN+1,doNenrd@eventNumber+1
 16376                           
 16377                           ;../../VLCBlib_PIC/event_teach_large.c: 642:     sendMessage5(OPC_ENRSP, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 16378   00B1A0  0101               	movlb	1	; () banked
 16379   00B1A2  51CD               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 16380   00B1A4  6FC6               	movwf	sendMessage5@data1& (0+255),b
 16381   00B1A6  C1CC  F1C7         	movff	doNenrd@nodeNumber,sendMessage5@data2
 16382   00B1AA  51CF               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 16383   00B1AC  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16384   00B1AE  C1CE  F1C9         	movff	doNenrd@eventNumber,sendMessage5@data4
 16385   00B1B2  C1CB  F1CA         	movff	doNenrd@index,sendMessage5@data5
 16386   00B1B6  0EF2               	movlw	242
 16387   00B1B8  EC25  F061         	call	_sendMessage5
 16388   00B1BC  0012               	return		;funcret
 16389   00B1BE                     __end_of_doNenrd:
 16390                           	callstack 0
 16391                           
 16392 ;; *************** function _evtIdxToTableIndex *****************
 16393 ;; Defined at:
 16394 ;;		line 1276 in file "../../VLCBlib_PIC/event_teach_large.c"
 16395 ;; Parameters:    Size  Location     Type
 16396 ;;  evtIdx          1    wreg     unsigned char 
 16397 ;; Auto vars:     Size  Location     Type
 16398 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 16399 ;; Return value:  Size  Location     Type
 16400 ;;                  1    wreg      unsigned char 
 16401 ;; Registers used:
 16402 ;;		wreg, status,2, status,0
 16403 ;; Tracked objects:
 16404 ;;		On entry : 0/0
 16405 ;;		On exit  : 0/0
 16406 ;;		Unchanged: 0/0
 16407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16409 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16411 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16412 ;;Total ram usage:        1 bytes
 16413 ;; Hardware stack levels used: 1
 16414 ;; Hardware stack levels required when called: 12
 16415 ;; This function calls:
 16416 ;;		Nothing
 16417 ;; This function is called by:
 16418 ;;		_doNenrd
 16419 ;;		_doReval
 16420 ;; This function uses a non-reentrant model
 16421 ;;
 16422                           
 16423                           	psect	text36
 16424   00C896                     __ptext36:
 16425                           	callstack 0
 16426   00C896                     _evtIdxToTableIndex:
 16427                           	callstack 15
 16428                           
 16429                           ;incstack = 0
 16430                           ;evtIdxToTableIndex@evtIdx stored from wreg
 16431   00C896  0100               	movlb	0	; () banked
 16432   00C898  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 16433                           
 16434                           ;../../VLCBlib_PIC/event_teach_large.c: 1277:     return evtIdx - 1;
 16435   00C89A  0100               	movlb	0	; () banked
 16436   00C89C  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 16437                           
 16438                           ; BSR set to: 0
 16439   00C89E  0012               	return		;funcret
 16440   00C8A0                     __end_of_evtIdxToTableIndex:
 16441                           	callstack 0
 16442                           
 16443 ;; *************** function _doEvuln *****************
 16444 ;; Defined at:
 16445 ;;		line 766 in file "../../VLCBlib_PIC/event_teach_large.c"
 16446 ;; Parameters:    Size  Location     Type
 16447 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 16448 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;  result          1   24[BANK1 ] unsigned char 
 16451 ;; Return value:  Size  Location     Type
 16452 ;;                  1    wreg      void 
 16453 ;; Registers used:
 16454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/0
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16460 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16461 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16463 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16464 ;;Total ram usage:        5 bytes
 16465 ;; Hardware stack levels used: 1
 16466 ;; Hardware stack levels required when called: 20
 16467 ;; This function calls:
 16468 ;;		_removeEvent
 16469 ;;		_sendMessage2
 16470 ;;		_sendMessage3
 16471 ;;		_sendMessage5
 16472 ;; This function is called by:
 16473 ;;		_teachProcessMessage
 16474 ;; This function uses a non-reentrant model
 16475 ;;
 16476                           
 16477                           	psect	text37
 16478   00AD36                     __ptext37:
 16479                           	callstack 0
 16480   00AD36                     _doEvuln:
 16481                           	callstack 8
 16482                           
 16483                           ;../../VLCBlib_PIC/event_teach_large.c: 767:     uint8_t result;;../../VLCBlib_PIC/event
      +                          _teach_large.c: 768:     result = removeEvent(nodeNumber, eventNumber);
 16484                           
 16485                           ; BSR set to: 0
 16486                           ;incstack = 0
 16487   00AD36  C1D2  F1CD         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16488   00AD3A  C1D3  F1CE         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16489   00AD3E  C1D4  F1CF         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16490   00AD42  C1D5  F1D0         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16491   00AD46  ECDD  F061         	call	_removeEvent	;wreg free
 16492   00AD4A  0101               	movlb	1	; () banked
 16493   00AD4C  6FD6               	movwf	doEvuln@result& (0+255),b
 16494                           
 16495                           ; BSR set to: 1
 16496                           ;../../VLCBlib_PIC/event_teach_large.c: 769:     if (result) {
 16497   00AD4E  51D6               	movf	doEvuln@result& (0+255),w,b
 16498   00AD50  B4D8               	btfsc	status,2,c
 16499   00AD52  D018               	goto	l22871
 16500                           
 16501                           ; BSR set to: 1
 16502                           ;../../VLCBlib_PIC/event_teach_large.c: 770:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, result);
 16503   00AD54  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16504   00AD58  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16505   00AD5C  C1D6  F0A9         	movff	doEvuln@result,sendMessage3@data3
 16506   00AD60  0E6F               	movlw	111
 16507   00AD62  EC83  F061         	call	_sendMessage3
 16508                           
 16509                           ;../../VLCBlib_PIC/event_teach_large.c: 772:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16510   00AD66  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16511   00AD6A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16512   00AD6E  0E95               	movlw	149
 16513   00AD70  0101               	movlb	1	; () banked
 16514   00AD72  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16515   00AD74  0E04               	movlw	4
 16516   00AD76  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16517   00AD78  C1D6  F1CA         	movff	doEvuln@result,sendMessage5@data5
 16518   00AD7C  0EAF               	movlw	175
 16519   00AD7E  EC25  F061         	call	_sendMessage5
 16520   00AD82  0012               	return	
 16521   00AD84                     l22871:
 16522                           
 16523                           ; BSR set to: 1
 16524                           ;../../VLCBlib_PIC/event_teach_large.c: 777:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16525   00AD84  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 16526   00AD88  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 16527   00AD8C  0E59               	movlw	89
 16528   00AD8E  ECF5  F060         	call	_sendMessage2
 16529                           
 16530                           ;../../VLCBlib_PIC/event_teach_large.c: 779:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16531   00AD92  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16532   00AD96  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16533   00AD9A  0E95               	movlw	149
 16534   00AD9C  0101               	movlb	1	; () banked
 16535   00AD9E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16536   00ADA0  0E04               	movlw	4
 16537   00ADA2  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16538   00ADA4  0E00               	movlw	0
 16539   00ADA6  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16540   00ADA8  0EAF               	movlw	175
 16541   00ADAA  EC25  F061         	call	_sendMessage5
 16542   00ADAE  0012               	return		;funcret
 16543   00ADB0                     __end_of_doEvuln:
 16544                           	callstack 0
 16545                           
 16546 ;; *************** function _removeEvent *****************
 16547 ;; Defined at:
 16548 ;;		line 872 in file "../../VLCBlib_PIC/event_teach_large.c"
 16549 ;; Parameters:    Size  Location     Type
 16550 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16551 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16552 ;; Auto vars:     Size  Location     Type
 16553 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16554 ;; Return value:  Size  Location     Type
 16555 ;;                  1    wreg      unsigned char 
 16556 ;; Registers used:
 16557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16558 ;; Tracked objects:
 16559 ;;		On entry : 0/0
 16560 ;;		On exit  : 0/0
 16561 ;;		Unchanged: 0/0
 16562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16563 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16564 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16566 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16567 ;;Total ram usage:        5 bytes
 16568 ;; Hardware stack levels used: 1
 16569 ;; Hardware stack levels required when called: 19
 16570 ;; This function calls:
 16571 ;;		_findEvent
 16572 ;;		_removeTableEntry
 16573 ;; This function is called by:
 16574 ;;		_doEvuln
 16575 ;; This function uses a non-reentrant model
 16576 ;;
 16577                           
 16578                           	psect	text38
 16579   00C3BA                     __ptext38:
 16580                           	callstack 0
 16581   00C3BA                     _removeEvent:
 16582                           	callstack 8
 16583                           
 16584                           ;../../VLCBlib_PIC/event_teach_large.c: 874:     uint8_t tableIndex = findEvent(nodeNumb
      +                          er, eventNumber);
 16585                           
 16586                           ;incstack = 0
 16587   00C3BA  C1CD  F1BE         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16588   00C3BE  C1CE  F1BF         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16589   00C3C2  C1CF  F1C0         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16590   00C3C6  C1D0  F1C1         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16591   00C3CA  ECF8  F052         	call	_findEvent	;wreg free
 16592   00C3CE  0101               	movlb	1	; () banked
 16593   00C3D0  6FD1               	movwf	removeEvent@tableIndex& (0+255),b
 16594                           
 16595                           ; BSR set to: 1
 16596                           ;../../VLCBlib_PIC/event_teach_large.c: 875:     if (tableIndex == 0xff) return CMDERR_I
      +                          NVALID_EVENT;
 16597   00C3D2  29D1               	incf	removeEvent@tableIndex& (0+255),w,b
 16598   00C3D4  A4D8               	btfss	status,2,c
 16599   00C3D6  D002               	goto	l21531
 16600                           
 16601                           ; BSR set to: 1
 16602   00C3D8  0E07               	movlw	7
 16603   00C3DA  0012               	return	
 16604   00C3DC                     l21531:
 16605                           
 16606                           ; BSR set to: 1
 16607                           ;../../VLCBlib_PIC/event_teach_large.c: 877:     return removeTableEntry(tableIndex);
 16608   00C3DC  51D1               	movf	removeEvent@tableIndex& (0+255),w,b
 16609   00C3DE  ECA5  F03D         	call	_removeTableEntry
 16610   00C3E2  0012               	return		;funcret
 16611   00C3E4                     __end_of_removeEvent:
 16612                           	callstack 0
 16613                           
 16614 ;; *************** function _doEvlrn *****************
 16615 ;; Defined at:
 16616 ;;		line 683 in file "../../VLCBlib_PIC/event_teach_large.c"
 16617 ;; Parameters:    Size  Location     Type
 16618 ;;  nodeNumber      2   52[BANK1 ] unsigned short 
 16619 ;;  eventNumber     2   54[BANK1 ] unsigned short 
 16620 ;;  evNum           1   56[BANK1 ] unsigned char 
 16621 ;;  evVal           1   57[BANK1 ] unsigned char 
 16622 ;; Auto vars:     Size  Location     Type
 16623 ;;  error           1   58[BANK1 ] unsigned char 
 16624 ;; Return value:  Size  Location     Type
 16625 ;;                  1    wreg      void 
 16626 ;; Registers used:
 16627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16628 ;; Tracked objects:
 16629 ;;		On entry : 0/0
 16630 ;;		On exit  : 0/0
 16631 ;;		Unchanged: 0/0
 16632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16633 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16634 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16636 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16637 ;;Total ram usage:        7 bytes
 16638 ;; Hardware stack levels used: 1
 16639 ;; Hardware stack levels required when called: 23
 16640 ;; This function calls:
 16641 ;;		_APP_addEvent
 16642 ;;		_sendMessage2
 16643 ;;		_sendMessage3
 16644 ;;		_sendMessage5
 16645 ;; This function is called by:
 16646 ;;		_teachProcessMessage
 16647 ;; This function uses a non-reentrant model
 16648 ;;
 16649                           
 16650                           	psect	text39
 16651   0094BA                     __ptext39:
 16652                           	callstack 0
 16653   0094BA                     _doEvlrn:
 16654                           	callstack 5
 16655                           
 16656                           ;../../VLCBlib_PIC/event_teach_large.c: 684:     uint8_t error;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 685:     evNum--;
 16657                           
 16658                           ;incstack = 0
 16659   0094BA  0101               	movlb	1	; () banked
 16660   0094BC  07F6               	decf	doEvlrn@evNum& (0+255),f,b
 16661                           
 16662                           ; BSR set to: 1
 16663                           ;../../VLCBlib_PIC/event_teach_large.c: 686:     if (evNum >= 20) {
 16664   0094BE  0E13               	movlw	19
 16665   0094C0  65F6               	cpfsgt	doEvlrn@evNum& (0+255),b
 16666   0094C2  D019               	goto	l22847
 16667                           
 16668                           ; BSR set to: 1
 16669                           ;../../VLCBlib_PIC/event_teach_large.c: 687:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 16670   0094C4  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16671   0094C8  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16672   0094CC  0E06               	movlw	6
 16673   0094CE  0100               	movlb	0	; () banked
 16674   0094D0  6FA9               	movwf	sendMessage3@data3& (0+255),b
 16675   0094D2  0E6F               	movlw	111
 16676   0094D4  EC83  F061         	call	_sendMessage3
 16677                           
 16678                           ;../../VLCBlib_PIC/event_teach_large.c: 689:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16679   0094D8  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16680   0094DC  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16681   0094E0  0ED2               	movlw	210
 16682   0094E2  0101               	movlb	1	; () banked
 16683   0094E4  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16684   0094E6  0E04               	movlw	4
 16685   0094E8  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16686   0094EA  0E06               	movlw	6
 16687   0094EC  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16688   0094EE  0EAF               	movlw	175
 16689   0094F0  EC25  F061         	call	_sendMessage5
 16690   0094F4  0012               	return	
 16691   0094F6                     l22847:
 16692                           
 16693                           ; BSR set to: 1
 16694                           ;../../VLCBlib_PIC/event_teach_large.c: 696:     error = APP_addEvent(nodeNumber, eventN
      +                          umber, evNum, evVal, FALSE);
 16695   0094F6  C1F2  F1EA         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16696   0094FA  C1F3  F1EB         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16697   0094FE  C1F4  F1EC         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16698   009502  C1F5  F1ED         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16699   009506  C1F6  F1EE         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16700   00950A  C1F7  F1EF         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16701   00950E  0E00               	movlw	0
 16702   009510  6FF0               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16703   009512  ECDF  F058         	call	_APP_addEvent	;wreg free
 16704   009516  0101               	movlb	1	; () banked
 16705   009518  6FF8               	movwf	doEvlrn@error& (0+255),b
 16706                           
 16707                           ; BSR set to: 1
 16708                           ;../../VLCBlib_PIC/event_teach_large.c: 697:     if (error) {
 16709   00951A  51F8               	movf	doEvlrn@error& (0+255),w,b
 16710   00951C  B4D8               	btfsc	status,2,c
 16711   00951E  D018               	goto	l22855
 16712                           
 16713                           ; BSR set to: 1
 16714                           ;../../VLCBlib_PIC/event_teach_large.c: 699:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, error);
 16715   009520  C0B5  F0A7         	movff	_nn+1,sendMessage3@data1
 16716   009524  C0B4  F0A8         	movff	_nn,sendMessage3@data2
 16717   009528  C1F8  F0A9         	movff	doEvlrn@error,sendMessage3@data3
 16718   00952C  0E6F               	movlw	111
 16719   00952E  EC83  F061         	call	_sendMessage3
 16720                           
 16721                           ;../../VLCBlib_PIC/event_teach_large.c: 701:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16722   009532  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16723   009536  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16724   00953A  0ED2               	movlw	210
 16725   00953C  0101               	movlb	1	; () banked
 16726   00953E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16727   009540  0E04               	movlw	4
 16728   009542  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16729   009544  C1F8  F1CA         	movff	doEvlrn@error,sendMessage5@data5
 16730   009548  0EAF               	movlw	175
 16731   00954A  EC25  F061         	call	_sendMessage5
 16732   00954E  0012               	return	
 16733   009550                     l22855:
 16734                           
 16735                           ; BSR set to: 1
 16736                           ;../../VLCBlib_PIC/event_teach_large.c: 706:     teachDiagnostics[0x01].asUint++;
 16737   009550  4BB4               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 16738   009552  2BB5               	incf	(_teachDiagnostics+3)& (0+255),f,b
 16739                           
 16740                           ; BSR set to: 1
 16741                           ;../../VLCBlib_PIC/event_teach_large.c: 708:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16742   009554  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 16743   009558  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 16744   00955C  0E59               	movlw	89
 16745   00955E  ECF5  F060         	call	_sendMessage2
 16746                           
 16747                           ;../../VLCBlib_PIC/event_teach_large.c: 710:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16748   009562  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16749   009566  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16750   00956A  0ED2               	movlw	210
 16751   00956C  0101               	movlb	1	; () banked
 16752   00956E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16753   009570  0E04               	movlw	4
 16754   009572  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16755   009574  0E00               	movlw	0
 16756   009576  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16757   009578  0EAF               	movlw	175
 16758   00957A  EC25  F061         	call	_sendMessage5
 16759   00957E  0012               	return		;funcret
 16760   009580                     __end_of_doEvlrn:
 16761                           	callstack 0
 16762                           
 16763 ;; *************** function _APP_addEvent *****************
 16764 ;; Defined at:
 16765 ;;		line 195 in file "../universalEvents.c"
 16766 ;; Parameters:    Size  Location     Type
 16767 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16768 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16769 ;;  evNum           1   48[BANK1 ] unsigned char 
 16770 ;;  evVal           1   49[BANK1 ] unsigned char 
 16771 ;;  forceOwnNN      1   50[BANK1 ] enum E12767
 16772 ;; Auto vars:     Size  Location     Type
 16773 ;;  tableIndex      1   51[BANK1 ] unsigned char 
 16774 ;; Return value:  Size  Location     Type
 16775 ;;                  1    wreg      unsigned char 
 16776 ;; Registers used:
 16777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16778 ;; Tracked objects:
 16779 ;;		On entry : 0/0
 16780 ;;		On exit  : 0/0
 16781 ;;		Unchanged: 0/0
 16782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16783 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16784 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16786 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16787 ;;Total ram usage:        8 bytes
 16788 ;; Hardware stack levels used: 1
 16789 ;; Hardware stack levels required when called: 22
 16790 ;; This function calls:
 16791 ;;		_addEvent
 16792 ;;		_checkRemoveTableEntry
 16793 ;;		_rebuildHashtable
 16794 ;;		_writeEv
 16795 ;; This function is called by:
 16796 ;;		_doEvlrn
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           	psect	text40
 16801   00B1BE                     __ptext40:
 16802                           	callstack 0
 16803   00B1BE                     _APP_addEvent:
 16804                           	callstack 5
 16805                           
 16806                           ;../universalEvents.c: 197:     if ((evNum == 0) && (evVal != 0))
 16807                           
 16808                           ;incstack = 0
 16809   00B1BE  0101               	movlb	1	; () banked
 16810   00B1C0  51EE               	movf	APP_addEvent@evNum& (0+255),w,b
 16811   00B1C2  A4D8               	btfss	status,2,c
 16812   00B1C4  D021               	goto	l654
 16813                           
 16814                           ; BSR set to: 1
 16815   00B1C6  51EF               	movf	APP_addEvent@evVal& (0+255),w,b
 16816   00B1C8  B4D8               	btfsc	status,2,c
 16817   00B1CA  D01E               	goto	l654
 16818                           
 16819                           ; BSR set to: 1
 16820                           ;../universalEvents.c: 198:     {;../universalEvents.c: 200:         if ((evVal >= 1) &&
      +                           (evVal <= (7+16*4))) {
 16821   00B1CC  51EF               	movf	APP_addEvent@evVal& (0+255),w,b
 16822   00B1CE  B4D8               	btfsc	status,2,c
 16823   00B1D0  D01B               	goto	l654
 16824                           
 16825                           ; BSR set to: 1
 16826   00B1D2  0E48               	movlw	72
 16827   00B1D4  61EF               	cpfslt	APP_addEvent@evVal& (0+255),b
 16828   00B1D6  D018               	goto	l654
 16829                           
 16830                           ; BSR set to: 1
 16831                           ;../universalEvents.c: 201:             uint8_t tableIndex = happening2Event[evVal-1];
 16832   00B1D8  0EFF               	movlw	low (_happening2Event+65535)
 16833   00B1DA  25EF               	addwf	APP_addEvent@evVal& (0+255),w,b
 16834   00B1DC  6ED9               	movwf	fsr2l,c
 16835   00B1DE  6ADA               	clrf	fsr2h,c
 16836   00B1E0  0E02               	movlw	high (_happening2Event+65535)
 16837   00B1E2  22DA               	addwfc	fsr2h,f,c
 16838   00B1E4  50DF               	movf	indf2,w,c
 16839   00B1E6  6FF1               	movwf	APP_addEvent@tableIndex& (0+255),b
 16840                           
 16841                           ; BSR set to: 1
 16842                           ;../universalEvents.c: 202:             if (tableIndex != 0xff) {
 16843   00B1E8  29F1               	incf	APP_addEvent@tableIndex& (0+255),w,b
 16844   00B1EA  B4D8               	btfsc	status,2,c
 16845   00B1EC  D00D               	goto	l654
 16846                           
 16847                           ; BSR set to: 1
 16848                           ;../universalEvents.c: 205:                 writeEv(tableIndex, 0, 0);
 16849   00B1EE  0E00               	movlw	0
 16850   00B1F0  6FCF               	movwf	writeEv@evNum& (0+255),b
 16851   00B1F2  0E00               	movlw	0
 16852   00B1F4  6FD0               	movwf	writeEv@evVal& (0+255),b
 16853   00B1F6  51F1               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16854   00B1F8  EC4F  F01B         	call	_writeEv
 16855                           
 16856                           ;../universalEvents.c: 206:                 checkRemoveTableEntry(tableIndex);
 16857   00B1FC  0101               	movlb	1	; () banked
 16858   00B1FE  51F1               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16859   00B200  ECC9  F05E         	call	_checkRemoveTableEntry
 16860                           
 16861                           ;../universalEvents.c: 208:                 rebuildHashtable();
 16862   00B204  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 16863   00B208                     l654:
 16864                           
 16865                           ;../universalEvents.c: 213:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16866   00B208  C1EA  F1DB         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16867   00B20C  C1EB  F1DC         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16868   00B210  C1EC  F1DD         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16869   00B214  C1ED  F1DE         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16870   00B218  C1EE  F1DF         	movff	APP_addEvent@evNum,addEvent@evNum
 16871   00B21C  C1EF  F1E0         	movff	APP_addEvent@evVal,addEvent@evVal
 16872   00B220  C1F0  F1E1         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16873   00B224  ECDE  F032         	call	_addEvent	;wreg free
 16874   00B228  0012               	return		;funcret
 16875   00B22A                     __end_of_APP_addEvent:
 16876                           	callstack 0
 16877                           
 16878 ;; *************** function _pollTimedResponse *****************
 16879 ;; Defined at:
 16880 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16881 ;; Parameters:    Size  Location     Type
 16882 ;;		None
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;  result          1   43[BANK1 ] enum E12928
 16885 ;; Return value:  Size  Location     Type
 16886 ;;                  1    wreg      void 
 16887 ;; Registers used:
 16888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16889 ;; Tracked objects:
 16890 ;;		On entry : 0/0
 16891 ;;		On exit  : 0/0
 16892 ;;		Unchanged: 0/0
 16893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16895 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16896 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16897 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16898 ;;Total ram usage:        3 bytes
 16899 ;; Hardware stack levels used: 1
 16900 ;; Hardware stack levels required when called: 20
 16901 ;; This function calls:
 16902 ;;		NULL
 16903 ;;		_mnsTRallDiagnosticsCallback
 16904 ;;		_mnsTRrqnpnCallback
 16905 ;;		_mnsTRserviceDiscoveryCallback
 16906 ;;		_nerdCallback
 16907 ;;		_nvTRnvrdCallback
 16908 ;;		_reqevCallback
 16909 ;;		_sodTRCallback
 16910 ;; This function is called by:
 16911 ;;		_poll
 16912 ;; This function uses a non-reentrant model
 16913 ;;
 16914                           
 16915                           	psect	text41
 16916   00AC3E                     __ptext41:
 16917                           	callstack 0
 16918   00AC3E                     _pollTimedResponse:
 16919                           	callstack 9
 16920                           
 16921                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16922                           
 16923                           ;incstack = 0
 16924   00AC3E  0100               	movlb	0	; () banked
 16925   00AC40  29BC               	incf	_timedResponseType& (0+255),w,b
 16926   00AC42  B4D8               	btfsc	status,2,c
 16927   00AC44  0012               	return	
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16931   00AC46  5021               	movf	_timedResponseCallback^0,w,c
 16932   00AC48  1022               	iorwf	(_timedResponseCallback+1)^0,w,c
 16933   00AC4A  A4D8               	btfss	status,2,c
 16934   00AC4C  D002               	goto	l24515
 16935   00AC4E                     u26180:
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16939   00AC4E  69BC               	setf	_timedResponseType& (0+255),b
 16940                           
 16941                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16942   00AC50  0012               	return	
 16943   00AC52                     l24515:
 16944                           
 16945                           ; BSR set to: 0
 16946                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16947   00AC52  D801               	call	u26198
 16948   00AC54  D00E               	goto	u26199
 16949   00AC56                     u26198:
 16950   00AC56  0005               	push	
 16951   00AC58  6EFA               	movwf	pclath,c
 16952   00AC5A  5021               	movf	_timedResponseCallback^0,w,c
 16953   00AC5C  6EFD               	movwf	tosl,c
 16954   00AC5E  5022               	movf	(_timedResponseCallback+1)^0,w,c
 16955   00AC60  6EFE               	movwf	tosh,c
 16956   00AC62  6AFF               	clrf	tosu,c
 16957   00AC64  50FA               	movf	pclath,w,c
 16958   00AC66  C0BE  F1D8         	movff	_timedResponseServiceIndex,reqevCallback@serviceIndex
 16959   00AC6A  C0BB  F1D9         	movff	_timedResponseStep,reqevCallback@step
 16960   00AC6E  51BC               	movf	_timedResponseType& (0+255),w,b
 16961   00AC70  0012               	return		;indir
 16962   00AC72                     u26199:
 16963   00AC72  0101               	movlb	1	; () banked
 16964   00AC74  6FE9               	movwf	pollTimedResponse@result& (0+255),b
 16965                           
 16966                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16967   00AC76  D00F               	goto	l24531
 16968   00AC78                     l24517:
 16969                           
 16970                           ; BSR set to: 1
 16971                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16972   00AC78  0100               	movlb	0	; () banked
 16973   00AC7A  51BD               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 16974   00AC7C  B4D8               	btfsc	status,2,c
 16975   00AC7E  D7E7               	goto	u26180
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16979   00AC80  2BBE               	incf	_timedResponseServiceIndex& (0+255),f,b
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16983   00AC82  0E08               	movlw	8
 16984   00AC84  65BE               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16985   00AC86  D001               	goto	l24525
 16986   00AC88  D7E2               	goto	u26180
 16987   00AC8A                     l24525:
 16988                           
 16989                           ; BSR set to: 0
 16990                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16991   00AC8A  0E00               	movlw	0
 16992   00AC8C  6FBB               	movwf	_timedResponseStep& (0+255),b
 16993   00AC8E  0012               	return	
 16994   00AC90                     l24527:
 16995                           
 16996                           ; BSR set to: 1
 16997                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16998   00AC90  0100               	movlb	0	; () banked
 16999   00AC92  2BBB               	incf	_timedResponseStep& (0+255),f,b
 17000                           
 17001                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 17002   00AC94  0012               	return	
 17003   00AC96                     l24531:
 17004                           
 17005                           ; BSR set to: 1
 17006   00AC96  51E9               	movf	pollTimedResponse@result& (0+255),w,b
 17007   00AC98  6FE7               	movwf	??_pollTimedResponse& (0+255),b
 17008   00AC9A  6BE8               	clrf	(??_pollTimedResponse+1)& (0+255),b
 17009                           
 17010                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17011                           ; Switch size 1, requested type "simple"
 17012                           ; Number of cases is 1, Range of values is 0 to 0
 17013                           ; switch strategies available:
 17014                           ; Name         Instructions Cycles
 17015                           ; simple_byte            4     3 (average)
 17016                           ;	Chosen strategy is simple_byte
 17017   00AC9C  51E8               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 17018   00AC9E  0A00               	xorlw	0	; case 0
 17019   00ACA0  A4D8               	btfss	status,2,c
 17020   00ACA2  0012               	return	
 17021                           
 17022                           ; BSR set to: 1
 17023                           ; Switch size 1, requested type "simple"
 17024                           ; Number of cases is 3, Range of values is 0 to 2
 17025                           ; switch strategies available:
 17026                           ; Name         Instructions Cycles
 17027                           ; simple_byte           10     6 (average)
 17028                           ;	Chosen strategy is simple_byte
 17029   00ACA4  51E7               	movf	??_pollTimedResponse& (0+255),w,b
 17030   00ACA6  0A00               	xorlw	0	; case 0
 17031   00ACA8  B4D8               	btfsc	status,2,c
 17032   00ACAA  D7E6               	goto	l24517
 17033   00ACAC  0A01               	xorlw	1	; case 1
 17034   00ACAE  B4D8               	btfsc	status,2,c
 17035   00ACB0  0012               	return	
 17036   00ACB2  0A03               	xorlw	3	; case 2
 17037   00ACB4  A4D8               	btfss	status,2,c
 17038   00ACB6  0012               	return	
 17039   00ACB8  D7EB               	goto	l24527
 17040   00ACBA                     __end_of_pollTimedResponse:
 17041                           	callstack 0
 17042                           
 17043 ;; *************** function _reqevCallback *****************
 17044 ;; Defined at:
 17045 ;;		line 841 in file "../../VLCBlib_PIC/event_teach_large.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;  tableIndex      1    wreg     unsigned char 
 17048 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17049 ;;  step            1   27[BANK1 ] unsigned char 
 17050 ;; Auto vars:     Size  Location     Type
 17051 ;;  tableIndex      1   40[BANK1 ] unsigned char 
 17052 ;;  nodeNumber      2   38[BANK1 ] struct Word
 17053 ;;  ev              2   36[BANK1 ] short 
 17054 ;;  eventNumber     2   34[BANK1 ] struct Word
 17055 ;;  nEv             1   33[BANK1 ] unsigned char 
 17056 ;; Return value:  Size  Location     Type
 17057 ;;                  1    wreg      enum E12935
 17058 ;; Registers used:
 17059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17060 ;; Tracked objects:
 17061 ;;		On entry : 0/0
 17062 ;;		On exit  : 0/0
 17063 ;;		Unchanged: 0/0
 17064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17065 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17066 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17067 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17068 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17069 ;;Total ram usage:       15 bytes
 17070 ;; Hardware stack levels used: 1
 17071 ;; Hardware stack levels required when called: 17
 17072 ;; This function calls:
 17073 ;;		_getEN
 17074 ;;		_getEv
 17075 ;;		_getNN
 17076 ;;		_numEv
 17077 ;;		_sendMessage5
 17078 ;;		_sendMessage6
 17079 ;;		_tableIndexToEvtIdx
 17080 ;; This function is called by:
 17081 ;;		_doReval
 17082 ;;		_doReqev
 17083 ;;		_pollTimedResponse
 17084 ;; This function uses a non-reentrant model
 17085 ;;
 17086                           
 17087                           	psect	text42
 17088   009580                     __ptext42:
 17089                           	callstack 0
 17090   009580                     _reqevCallback:
 17091                           	callstack 11
 17092                           
 17093                           ;incstack = 0
 17094                           ;reqevCallback@tableIndex stored from wreg
 17095   009580  0101               	movlb	1	; () banked
 17096   009582  6FE6               	movwf	reqevCallback@tableIndex& (0+255),b
 17097                           
 17098                           ;../../VLCBlib_PIC/event_teach_large.c: 842:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 844:     uint8_t nEv = numEv(tableIndex);
 17099   009584  0101               	movlb	1	; () banked
 17100   009586  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17101   009588  EC4F  F046         	call	_numEv
 17102   00958C  0101               	movlb	1	; () banked
 17103   00958E  6FDF               	movwf	reqevCallback@nEv& (0+255),b
 17104                           
 17105                           ; BSR set to: 1
 17106                           ;../../VLCBlib_PIC/event_teach_large.c: 845:     int16_t ev;;../../VLCBlib_PIC/event_tea
      +                          ch_large.c: 847:     if (step+1 > nEv) {
 17107   009590  51D9               	movf	reqevCallback@step& (0+255),w,b
 17108   009592  6FDA               	movwf	??_reqevCallback& (0+255),b
 17109   009594  6BDB               	clrf	(??_reqevCallback+1)& (0+255),b
 17110   009596  0E01               	movlw	1
 17111   009598  27DA               	addwf	??_reqevCallback& (0+255),f,b
 17112   00959A  0E00               	movlw	0
 17113   00959C  23DB               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17114   00959E  51DF               	movf	reqevCallback@nEv& (0+255),w,b
 17115   0095A0  6FDC               	movwf	(??_reqevCallback+2)& (0+255),b
 17116   0095A2  6BDD               	clrf	(??_reqevCallback+3)& (0+255),b
 17117   0095A4  51DA               	movf	??_reqevCallback& (0+255),w,b
 17118   0095A6  5DDC               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17119   0095A8  51DD               	movf	(??_reqevCallback+3)& (0+255),w,b
 17120   0095AA  0A80               	xorlw	128
 17121   0095AC  6FDE               	movwf	(??_reqevCallback+4)& (0+255),b
 17122   0095AE  51DB               	movf	(??_reqevCallback+1)& (0+255),w,b
 17123   0095B0  0A80               	xorlw	128
 17124   0095B2  59DE               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17125   0095B4  B0D8               	btfsc	status,0,c
 17126   0095B6  D002               	goto	l23037
 17127                           
 17128                           ; BSR set to: 1
 17129                           ;../../VLCBlib_PIC/event_teach_large.c: 848:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17130   0095B8  0E00               	movlw	0
 17131   0095BA  0012               	return	
 17132   0095BC                     l23037:
 17133                           
 17134                           ; BSR set to: 1
 17135                           ;../../VLCBlib_PIC/event_teach_large.c: 851:     nodeNumber.word = getNN(tableIndex);
 17136   0095BC  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17137   0095BE  EC85  F04B         	call	_getNN
 17138   0095C2  C097  F1E4         	movff	?_getNN,reqevCallback@nodeNumber
 17139   0095C6  C098  F1E5         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17140                           
 17141                           ;../../VLCBlib_PIC/event_teach_large.c: 852:     eventNumber.word = getEN(tableIndex);
 17142   0095CA  0101               	movlb	1	; () banked
 17143   0095CC  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17144   0095CE  ECD8  F056         	call	_getEN
 17145   0095D2  C097  F1E0         	movff	?_getEN,reqevCallback@eventNumber
 17146   0095D6  C098  F1E1         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17147                           
 17148                           ;../../VLCBlib_PIC/event_teach_large.c: 853:     ev = getEv(tableIndex, step);
 17149   0095DA  C1D9  F09D         	movff	reqevCallback@step,getEv@evNum
 17150   0095DE  0101               	movlb	1	; () banked
 17151   0095E0  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17152   0095E2  ECFA  F03C         	call	_getEv
 17153   0095E6  C09D  F1E2         	movff	?_getEv,reqevCallback@ev
 17154   0095EA  C09E  F1E3         	movff	?_getEv+1,reqevCallback@ev+1
 17155                           
 17156                           ;../../VLCBlib_PIC/event_teach_large.c: 854:     if (ev >= 0) {
 17157   0095EE  0101               	movlb	1	; () banked
 17158   0095F0  BFE3               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17159   0095F2  D027               	goto	l23047
 17160                           
 17161                           ; BSR set to: 1
 17162                           ;../../VLCBlib_PIC/event_teach_large.c: 855:         if (timedResponseOpcode == OPC_EVAN
      +                          S) {
 17163   0095F4  0ED3               	movlw	211
 17164   0095F6  0100               	movlb	0	; () banked
 17165   0095F8  19B6               	xorwf	_timedResponseOpcode& (0+255),w,b
 17166   0095FA  A4D8               	btfss	status,2,c
 17167   0095FC  D011               	goto	l23045
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;../../VLCBlib_PIC/event_teach_large.c: 856:             sendMessage6(OPC_EVANS, nodeNum
      +                          ber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (
      +                          uint8_t)ev);
 17171   0095FE  C1E5  F1C6         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17172   009602  C1E4  F1C7         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17173   009606  C1E1  F1C8         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17174   00960A  C1E0  F1C9         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17175   00960E  0101               	movlb	1	; () banked
 17176   009610  29D9               	incf	reqevCallback@step& (0+255),w,b
 17177   009612  6FCA               	movwf	sendMessage6@data5& (0+255),b
 17178   009614  C1E2  F1CB         	movff	reqevCallback@ev,sendMessage6@data6
 17179   009618  0ED3               	movlw	211
 17180   00961A  ECDD  F060         	call	_sendMessage6
 17181                           
 17182                           ;../../VLCBlib_PIC/event_teach_large.c: 857:         } else {
 17183   00961E  D011               	goto	l23047
 17184   009620                     l23045:
 17185                           
 17186                           ; BSR set to: 0
 17187                           ;../../VLCBlib_PIC/event_teach_large.c: 858:             sendMessage5(OPC_NEVAL, nodeNum
      +                          ber.bytes.hi, nodeNumber.bytes.lo, tableIndexToEvtIdx(tableIndex), step+1, (uint8_t)ev);
 17188   009620  C1E5  F1C6         	movff	reqevCallback@nodeNumber+1,sendMessage5@data1
 17189   009624  C1E4  F1C7         	movff	reqevCallback@nodeNumber,sendMessage5@data2
 17190   009628  0101               	movlb	1	; () banked
 17191   00962A  51E6               	movf	reqevCallback@tableIndex& (0+255),w,b
 17192   00962C  EC50  F064         	call	_tableIndexToEvtIdx
 17193   009630  0101               	movlb	1	; () banked
 17194   009632  6FC8               	movwf	sendMessage5@data3& (0+255),b
 17195   009634  29D9               	incf	reqevCallback@step& (0+255),w,b
 17196   009636  6FC9               	movwf	sendMessage5@data4& (0+255),b
 17197   009638  C1E2  F1CA         	movff	reqevCallback@ev,sendMessage5@data5
 17198   00963C  0EB5               	movlw	181
 17199   00963E  EC25  F061         	call	_sendMessage5
 17200   009642                     l23047:
 17201                           
 17202                           ;../../VLCBlib_PIC/event_teach_large.c: 861:     return TIMED_RESPONSE_RESULT_NEXT;
 17203   009642  0E02               	movlw	2
 17204   009644  0012               	return		;funcret
 17205   009646                     __end_of_reqevCallback:
 17206                           	callstack 0
 17207                           
 17208 ;; *************** function _nerdCallback *****************
 17209 ;; Defined at:
 17210 ;;		line 606 in file "../../VLCBlib_PIC/event_teach_large.c"
 17211 ;; Parameters:    Size  Location     Type
 17212 ;;  type            1    wreg     unsigned char 
 17213 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17214 ;;  step            1   27[BANK1 ] unsigned char 
 17215 ;; Auto vars:     Size  Location     Type
 17216 ;;  type            1    0[COMRAM] unsigned char 
 17217 ;;  eventNumber     2   30[BANK1 ] struct Word
 17218 ;;  nodeNumber      2   28[BANK1 ] struct Word
 17219 ;; Return value:  Size  Location     Type
 17220 ;;                  1    wreg      enum E12935
 17221 ;; Registers used:
 17222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17223 ;; Tracked objects:
 17224 ;;		On entry : 0/0
 17225 ;;		On exit  : 0/0
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17228 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17229 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17231 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17232 ;;Total ram usage:        6 bytes
 17233 ;; Hardware stack levels used: 1
 17234 ;; Hardware stack levels required when called: 17
 17235 ;; This function calls:
 17236 ;;		_getEN
 17237 ;;		_getNN
 17238 ;;		_sendMessage7
 17239 ;;		_tableIndexToEvtIdx
 17240 ;;		_validStart
 17241 ;; This function is called by:
 17242 ;;		_doNerd
 17243 ;;		_pollTimedResponse
 17244 ;; This function uses a non-reentrant model
 17245 ;;
 17246                           
 17247                           	psect	text43
 17248   00B366                     __ptext43:
 17249                           	callstack 0
 17250   00B366                     _nerdCallback:
 17251                           	callstack 11
 17252                           
 17253                           ;../../VLCBlib_PIC/event_teach_large.c: 607:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 609:     if (step >= 255) {
 17254                           
 17255                           ;incstack = 0
 17256   00B366  0101               	movlb	1	; () banked
 17257   00B368  29D9               	incf	nerdCallback@step& (0+255),w,b
 17258   00B36A  A4D8               	btfss	status,2,c
 17259   00B36C  D002               	goto	l23019
 17260                           
 17261                           ; BSR set to: 1
 17262                           ;../../VLCBlib_PIC/event_teach_large.c: 610:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 17263   00B36E  0E00               	movlw	0
 17264   00B370  0012               	return	
 17265   00B372                     l23019:
 17266                           
 17267                           ; BSR set to: 1
 17268                           ;../../VLCBlib_PIC/event_teach_large.c: 613:     if (validStart(step)) {
 17269   00B372  51D9               	movf	nerdCallback@step& (0+255),w,b
 17270   00B374  EC78  F05D         	call	_validStart
 17271   00B378  0900               	iorlw	0
 17272   00B37A  B4D8               	btfsc	status,2,c
 17273   00B37C  D025               	goto	l23025
 17274                           
 17275                           ;../../VLCBlib_PIC/event_teach_large.c: 614:         nodeNumber.word = getNN(step);
 17276   00B37E  0101               	movlb	1	; () banked
 17277   00B380  51D9               	movf	nerdCallback@step& (0+255),w,b
 17278   00B382  EC85  F04B         	call	_getNN
 17279   00B386  C097  F1DA         	movff	?_getNN,nerdCallback@nodeNumber
 17280   00B38A  C098  F1DB         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17281                           
 17282                           ;../../VLCBlib_PIC/event_teach_large.c: 615:         eventNumber.word = getEN(step);
 17283   00B38E  0101               	movlb	1	; () banked
 17284   00B390  51D9               	movf	nerdCallback@step& (0+255),w,b
 17285   00B392  ECD8  F056         	call	_getEN
 17286   00B396  C097  F1DC         	movff	?_getEN,nerdCallback@eventNumber
 17287   00B39A  C098  F1DD         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17288                           
 17289                           ;../../VLCBlib_PIC/event_teach_large.c: 616:         sendMessage7(OPC_ENRSP, nn.bytes.hi
      +                          , nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumb
      +                          er.bytes.lo, tableIndexToEvtIdx(step));
 17290   00B39E  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 17291   00B3A2  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 17292   00B3A6  C1DB  F1C8         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17293   00B3AA  C1DA  F1C9         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17294   00B3AE  C1DD  F1CA         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17295   00B3B2  C1DC  F1CB         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17296   00B3B6  0101               	movlb	1	; () banked
 17297   00B3B8  51D9               	movf	nerdCallback@step& (0+255),w,b
 17298   00B3BA  EC50  F064         	call	_tableIndexToEvtIdx
 17299   00B3BE  0101               	movlb	1	; () banked
 17300   00B3C0  6FCC               	movwf	sendMessage7@data7& (0+255),b
 17301   00B3C2  0EF2               	movlw	242
 17302   00B3C4  EC0D  F061         	call	_sendMessage7
 17303   00B3C8                     l23025:
 17304                           
 17305                           ;../../VLCBlib_PIC/event_teach_large.c: 618:     return TIMED_RESPONSE_RESULT_NEXT;
 17306   00B3C8  0E02               	movlw	2
 17307   00B3CA  0012               	return		;funcret
 17308   00B3CC                     __end_of_nerdCallback:
 17309                           	callstack 0
 17310                           
 17311 ;; *************** function _nvTRnvrdCallback *****************
 17312 ;; Defined at:
 17313 ;;		line 371 in file "../../VLCBlib_PIC/nv.c"
 17314 ;; Parameters:    Size  Location     Type
 17315 ;;  type            1    wreg     unsigned char 
 17316 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17317 ;;  step            1   27[BANK1 ] unsigned char 
 17318 ;; Auto vars:     Size  Location     Type
 17319 ;;  type            1    0[COMRAM] unsigned char 
 17320 ;;  valueOrError    2   28[BANK1 ] short 
 17321 ;; Return value:  Size  Location     Type
 17322 ;;                  1    wreg      enum E12952
 17323 ;; Registers used:
 17324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17325 ;; Tracked objects:
 17326 ;;		On entry : 0/0
 17327 ;;		On exit  : 0/0
 17328 ;;		Unchanged: 0/0
 17329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17330 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17331 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17333 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17334 ;;Total ram usage:        4 bytes
 17335 ;; Hardware stack levels used: 1
 17336 ;; Hardware stack levels required when called: 17
 17337 ;; This function calls:
 17338 ;;		_getNV
 17339 ;;		_sendMessage4
 17340 ;; This function is called by:
 17341 ;;		_nvProcessMessage
 17342 ;;		_pollTimedResponse
 17343 ;; This function uses a non-reentrant model
 17344 ;;
 17345                           
 17346                           	psect	text44
 17347   00BE66                     __ptext44:
 17348                           	callstack 0
 17349   00BE66                     _nvTRnvrdCallback:
 17350                           	callstack 11
 17351                           
 17352                           ;../../VLCBlib_PIC/nv.c: 372:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 373:    
      +                           if (step > (15+7*16)) {
 17353                           
 17354                           ;incstack = 0
 17355   00BE66  0E7F               	movlw	127
 17356   00BE68  0101               	movlb	1	; () banked
 17357   00BE6A  65D9               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 17358   00BE6C  D002               	goto	l22465
 17359   00BE6E                     u23440:
 17360                           
 17361                           ; BSR set to: 1
 17362                           ;../../VLCBlib_PIC/nv.c: 374:         return TIMED_RESPONSE_RESULT_FINISHED;
 17363   00BE6E  0E00               	movlw	0
 17364   00BE70  0012               	return	
 17365   00BE72                     l22465:
 17366                           
 17367                           ; BSR set to: 1
 17368                           ;../../VLCBlib_PIC/nv.c: 376:     valueOrError = getNV(step+1);
 17369   00BE72  29D9               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17370   00BE74  ECB0  F05F         	call	_getNV
 17371   00BE78  C08D  F1DA         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 17372   00BE7C  C08E  F1DB         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 17373                           
 17374                           ;../../VLCBlib_PIC/nv.c: 377:     if (valueOrError < 0) {
 17375   00BE80  0101               	movlb	1	; () banked
 17376   00BE82  BFDB               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 17377   00BE84  D7F4               	goto	u23440
 17378                           
 17379                           ; BSR set to: 1
 17380                           ;../../VLCBlib_PIC/nv.c: 380:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 17381   00BE86  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 17382   00BE8A  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 17383   00BE8E  29D9               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17384   00BE90  6FC8               	movwf	sendMessage4@data3& (0+255),b
 17385   00BE92  C1DA  F1C9         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 17386   00BE96  0E97               	movlw	151
 17387   00BE98  EC3D  F061         	call	_sendMessage4
 17388                           
 17389                           ;../../VLCBlib_PIC/nv.c: 382:     nvDiagnostics[0x01].asUint++;
 17390   00BE9C  0101               	movlb	1	; () banked
 17391   00BE9E  4BA5               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 17392   00BEA0  2BA6               	incf	(_nvDiagnostics+3)& (0+255),f,b
 17393                           
 17394                           ; BSR set to: 1
 17395                           ;../../VLCBlib_PIC/nv.c: 384:     return TIMED_RESPONSE_RESULT_NEXT;
 17396   00BEA2  0E02               	movlw	2
 17397                           
 17398                           ; BSR set to: 1
 17399   00BEA4  0012               	return		;funcret
 17400   00BEA6                     __end_of_nvTRnvrdCallback:
 17401                           	callstack 0
 17402                           
 17403 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 17404 ;; Defined at:
 17405 ;;		line 879 in file "../../VLCBlib_PIC/mns.c"
 17406 ;; Parameters:    Size  Location     Type
 17407 ;;  type            1    wreg     unsigned char 
 17408 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17409 ;;  step            1   27[BANK1 ] unsigned char 
 17410 ;; Auto vars:     Size  Location     Type
 17411 ;;  type            1    0[COMRAM] unsigned char 
 17412 ;; Return value:  Size  Location     Type
 17413 ;;                  1    wreg      enum E12935
 17414 ;; Registers used:
 17415 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17416 ;; Tracked objects:
 17417 ;;		On entry : 0/0
 17418 ;;		On exit  : 0/0
 17419 ;;		Unchanged: 0/0
 17420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17421 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17423 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17424 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17425 ;;Total ram usage:        6 bytes
 17426 ;; Hardware stack levels used: 1
 17427 ;; Hardware stack levels required when called: 17
 17428 ;; This function calls:
 17429 ;;		_sendMessage5
 17430 ;; This function is called by:
 17431 ;;		_mnsProcessMessage
 17432 ;;		_pollTimedResponse
 17433 ;; This function uses a non-reentrant model
 17434 ;;
 17435                           
 17436                           	psect	text45
 17437   00A680                     __ptext45:
 17438                           	callstack 0
 17439   00A680                     _mnsTRserviceDiscoveryCallback:
 17440                           	callstack 11
 17441                           
 17442                           ;../../VLCBlib_PIC/mns.c: 880:     if (step >= 9) {
 17443                           
 17444                           ; BSR set to: 1
 17445                           ;incstack = 0
 17446   00A680  0E08               	movlw	8
 17447   00A682  0101               	movlb	1	; () banked
 17448   00A684  65D9               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 17449   00A686  D002               	goto	l22383
 17450                           
 17451                           ; BSR set to: 1
 17452                           ;../../VLCBlib_PIC/mns.c: 881:         return TIMED_RESPONSE_RESULT_FINISHED;
 17453   00A688  0E00               	movlw	0
 17454   00A68A  0012               	return	
 17455   00A68C                     l22383:
 17456                           
 17457                           ; BSR set to: 1
 17458                           ;../../VLCBlib_PIC/mns.c: 884:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 17459   00A68C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 17460   00A690  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 17461   00A694  29D9               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17462   00A696  6FC8               	movwf	sendMessage5@data3& (0+255),b
 17463   00A698  51D9               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17464   00A69A  0D02               	mullw	2
 17465   00A69C  0E69               	movlw	low _services
 17466   00A69E  24F3               	addwf	243,w,c
 17467   00A6A0  6EF6               	movwf	tblptrl,c
 17468   00A6A2  0EEE               	movlw	high _services
 17469   00A6A4  20F4               	addwfc	244,w,c
 17470   00A6A6  6EF7               	movwf	tblptrh,c
 17471   00A6A8                     	if	1	;There are 3 active tblptr bytes
 17472   00A6A8  6AF8               	clrf	tblptru,c
 17473   00A6AA  0E00               	movlw	low (__mediumconst shr (0+16))
 17474   00A6AC  22F8               	addwfc	tblptru,f,c
 17475   00A6AE                     	endif
 17476   00A6AE  0009               	tblrd		*+
 17477   00A6B0  CFF5 F1DA          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 17478   00A6B4  0009               	tblrd		*+
 17479   00A6B6  CFF5 F1DB          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 17480   00A6BA  C1DA  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 17481   00A6BE  C1DB  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 17482   00A6C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17483   00A6C2  6AF8               	clrf	tblptru,c
 17484   00A6C4                     	endif
 17485   00A6C4                     	if	0	;tblptru may be non-zero
 17486   00A6C4                     	endif
 17487   00A6C4  0008               	tblrd		*
 17488   00A6C6  CFF5 F1C9          	movff	tablat,sendMessage5@data4
 17489   00A6CA  51D9               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17490   00A6CC  0D02               	mullw	2
 17491   00A6CE  0E69               	movlw	low _services
 17492   00A6D0  24F3               	addwf	243,w,c
 17493   00A6D2  6EF6               	movwf	tblptrl,c
 17494   00A6D4  0EEE               	movlw	high _services
 17495   00A6D6  20F4               	addwfc	244,w,c
 17496   00A6D8  6EF7               	movwf	tblptrh,c
 17497   00A6DA                     	if	1	;There are 3 active tblptr bytes
 17498   00A6DA  6AF8               	clrf	tblptru,c
 17499   00A6DC  0E00               	movlw	low (__mediumconst shr (0+16))
 17500   00A6DE  22F8               	addwfc	tblptru,f,c
 17501   00A6E0                     	endif
 17502   00A6E0  0009               	tblrd		*+
 17503   00A6E2  CFF5 F1DC          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 17504   00A6E6  0009               	tblrd		*+
 17505   00A6E8  CFF5 F1DD          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 17506   00A6EC  0E01               	movlw	1
 17507   00A6EE  27DC               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 17508   00A6F0  0E00               	movlw	0
 17509   00A6F2  23DD               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 17510   00A6F4  C1DC  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 17511   00A6F8  C1DD  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 17512   00A6FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17513   00A6FC  6AF8               	clrf	tblptru,c
 17514   00A6FE                     	endif
 17515   00A6FE                     	if	0	;tblptru may be non-zero
 17516   00A6FE                     	endif
 17517   00A6FE  0008               	tblrd		*
 17518   00A700  CFF5 F1CA          	movff	tablat,sendMessage5@data5
 17519   00A704  0EAC               	movlw	172
 17520   00A706  EC25  F061         	call	_sendMessage5
 17521                           
 17522                           ;../../VLCBlib_PIC/mns.c: 886:     return TIMED_RESPONSE_RESULT_NEXT;
 17523   00A70A  0E02               	movlw	2
 17524   00A70C  0012               	return		;funcret
 17525   00A70E                     __end_of_mnsTRserviceDiscoveryCallback:
 17526                           	callstack 0
 17527                           
 17528 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 17529 ;; Defined at:
 17530 ;;		line 898 in file "../../VLCBlib_PIC/mns.c"
 17531 ;; Parameters:    Size  Location     Type
 17532 ;;  type            1    wreg     unsigned char 
 17533 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17534 ;;  step            1   27[BANK1 ] unsigned char 
 17535 ;; Auto vars:     Size  Location     Type
 17536 ;;  type            1    0[COMRAM] unsigned char 
 17537 ;;  d               2   32[BANK1 ] PTR struct DiagnosticVal
 17538 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 17539 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 17540 ;; Return value:  Size  Location     Type
 17541 ;;                  1    wreg      enum E12935
 17542 ;; Registers used:
 17543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17544 ;; Tracked objects:
 17545 ;;		On entry : 0/0
 17546 ;;		On exit  : 0/0
 17547 ;;		Unchanged: 0/0
 17548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17549 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17550 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17551 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17552 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17553 ;;Total ram usage:        8 bytes
 17554 ;; Hardware stack levels used: 1
 17555 ;; Hardware stack levels required when called: 17
 17556 ;; This function calls:
 17557 ;;		NULL
 17558 ;;		_ackGetDiagnostic
 17559 ;;		_canGetDiagnostic
 17560 ;;		_consumer2QGetDiagnostic
 17561 ;;		_mnsGetDiagnostic
 17562 ;;		_nvGetDiagnostic
 17563 ;;		_producerGetDiagnostic
 17564 ;;		_sendMessage6
 17565 ;;		_teachGetDiagnostic
 17566 ;; This function is called by:
 17567 ;;		_mnsProcessMessage
 17568 ;;		_pollTimedResponse
 17569 ;; This function uses a non-reentrant model
 17570 ;;
 17571                           
 17572                           	psect	text46
 17573   008366                     __ptext46:
 17574                           	callstack 0
 17575   008366                     _mnsTRallDiagnosticsCallback:
 17576                           	callstack 11
 17577                           
 17578                           ;../../VLCBlib_PIC/mns.c: 899:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 17579                           
 17580                           ;incstack = 0
 17581   008366  0101               	movlb	1	; () banked
 17582   008368  51D8               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17583   00836A  0D02               	mullw	2
 17584   00836C  0E69               	movlw	low _services
 17585   00836E  24F3               	addwf	243,w,c
 17586   008370  6EF6               	movwf	tblptrl,c
 17587   008372  0EEE               	movlw	high _services
 17588   008374  20F4               	addwfc	244,w,c
 17589   008376  6EF7               	movwf	tblptrh,c
 17590   008378                     	if	1	;There are 3 active tblptr bytes
 17591   008378  6AF8               	clrf	tblptru,c
 17592   00837A  0E00               	movlw	low (__mediumconst shr (0+16))
 17593   00837C  22F8               	addwfc	tblptru,f,c
 17594   00837E                     	endif
 17595   00837E  0009               	tblrd		*+
 17596   008380  CFF5 F1DA          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17597   008384  0009               	tblrd		*+
 17598   008386  CFF5 F1DB          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17599   00838A  0E10               	movlw	16
 17600   00838C  27DA               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17601   00838E  0E00               	movlw	0
 17602   008390  23DB               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17603   008392  C1DA  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17604   008396  C1DB  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17605   00839A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17606   00839A  6AF8               	clrf	tblptru,c
 17607   00839C                     	endif
 17608   00839C                     	if	0	;tblptru may be non-zero
 17609   00839C                     	endif
 17610   00839C  0009               	tblrd		*+
 17611   00839E  50F5               	movf	tablat,w,c
 17612   0083A0  0009               	tblrd		*+
 17613   0083A2  10F5               	iorwf	tablat,w,c
 17614   0083A4  A4D8               	btfss	status,2,c
 17615   0083A6  D011               	goto	l22397
 17616                           
 17617                           ; BSR set to: 1
 17618                           ;../../VLCBlib_PIC/mns.c: 900:         sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, s
      +                          erviceIndex+1, 0, 0, 0);
 17619   0083A8  C0B5  F1C6         	movff	_nn+1,sendMessage6@data1
 17620   0083AC  C0B4  F1C7         	movff	_nn,sendMessage6@data2
 17621   0083B0  29D8               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17622   0083B2  6FC8               	movwf	sendMessage6@data3& (0+255),b
 17623   0083B4  0E00               	movlw	0
 17624   0083B6  6FC9               	movwf	sendMessage6@data4& (0+255),b
 17625   0083B8  0E00               	movlw	0
 17626   0083BA  6FCA               	movwf	sendMessage6@data5& (0+255),b
 17627   0083BC  0E00               	movlw	0
 17628   0083BE  6FCB               	movwf	sendMessage6@data6& (0+255),b
 17629   0083C0  0EC7               	movlw	199
 17630   0083C2  ECDD  F060         	call	_sendMessage6
 17631   0083C6                     l22393:
 17632                           
 17633                           ;../../VLCBlib_PIC/mns.c: 901:         return TIMED_RESPONSE_RESULT_FINISHED;
 17634   0083C6  0E00               	movlw	0
 17635   0083C8  0012               	return	
 17636   0083CA                     l22397:
 17637                           
 17638                           ; BSR set to: 1
 17639                           ;../../VLCBlib_PIC/mns.c: 903:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 17640   0083CA  51D8               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17641   0083CC  0D02               	mullw	2
 17642   0083CE  0E69               	movlw	low _services
 17643   0083D0  24F3               	addwf	243,w,c
 17644   0083D2  6EF6               	movwf	tblptrl,c
 17645   0083D4  0EEE               	movlw	high _services
 17646   0083D6  20F4               	addwfc	244,w,c
 17647   0083D8  6EF7               	movwf	tblptrh,c
 17648   0083DA                     	if	1	;There are 3 active tblptr bytes
 17649   0083DA  6AF8               	clrf	tblptru,c
 17650   0083DC  0E00               	movlw	low (__mediumconst shr (0+16))
 17651   0083DE  22F8               	addwfc	tblptru,f,c
 17652   0083E0                     	endif
 17653   0083E0  0009               	tblrd		*+
 17654   0083E2  CFF5 F1DA          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17655   0083E6  0009               	tblrd		*+
 17656   0083E8  CFF5 F1DB          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17657   0083EC  0E10               	movlw	16
 17658   0083EE  27DA               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17659   0083F0  0E00               	movlw	0
 17660   0083F2  23DB               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17661   0083F4  C1DA  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17662   0083F8  C1DB  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17663   0083FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17664   0083FC  6AF8               	clrf	tblptru,c
 17665   0083FE                     	endif
 17666   0083FE                     	if	0	;tblptru may be non-zero
 17667   0083FE                     	endif
 17668   0083FE  0009               	tblrd		*+
 17669   008400  CFF5 F1DC          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17670   008404  0009               	tblrd		*+
 17671   008406  CFF5 F1DD          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17672   00840A  D801               	call	u23398
 17673   00840C  D00A               	goto	u23399
 17674   00840E                     u23398:
 17675   00840E  0005               	push	
 17676   008410  6EFA               	movwf	pclath,c
 17677   008412  51DC               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17678   008414  6EFD               	movwf	tosl,c
 17679   008416  51DD               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17680   008418  6EFE               	movwf	tosh,c
 17681   00841A  6AFF               	clrf	tosu,c
 17682   00841C  50FA               	movf	pclath,w,c
 17683   00841E  51D9               	movf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17684   008420  0012               	return		;indir
 17685   008422                     u23399:
 17686   008422  C097  F1DE         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17687   008426  C098  F1DF         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17688                           
 17689                           ;../../VLCBlib_PIC/mns.c: 904:     if (d == ((void*)0)) {
 17690   00842A  0101               	movlb	1	; () banked
 17691   00842C  51DE               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17692   00842E  11DF               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17693   008430  B4D8               	btfsc	status,2,c
 17694   008432  D7C9               	goto	l22393
 17695                           
 17696                           ; BSR set to: 1
 17697                           ;../../VLCBlib_PIC/mns.c: 909:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 17698   008434  C0B5  F1C6         	movff	_nn+1,sendMessage6@data1
 17699   008438  C0B4  F1C7         	movff	_nn,sendMessage6@data2
 17700   00843C  29D8               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17701   00843E  6FC8               	movwf	sendMessage6@data3& (0+255),b
 17702   008440  C1D9  F1C9         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 17703   008444  EE20 F001          	lfsr	2,1
 17704   008448  51DE               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17705   00844A  26D9               	addwf	fsr2l,f,c
 17706   00844C  51DF               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17707   00844E  22DA               	addwfc	fsr2h,f,c
 17708   008450  50DF               	movf	indf2,w,c
 17709   008452  6FCA               	movwf	sendMessage6@data5& (0+255),b
 17710   008454  C1DE  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17711   008458  C1DF  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17712   00845C  50DF               	movf	indf2,w,c
 17713   00845E  6FCB               	movwf	sendMessage6@data6& (0+255),b
 17714   008460  0EC7               	movlw	199
 17715   008462  ECDD  F060         	call	_sendMessage6
 17716                           
 17717                           ;../../VLCBlib_PIC/mns.c: 910:     return TIMED_RESPONSE_RESULT_NEXT;
 17718   008466  0E02               	movlw	2
 17719   008468  0012               	return		;funcret
 17720   00846A                     __end_of_mnsTRallDiagnosticsCallback:
 17721                           	callstack 0
 17722                           
 17723 ;; *************** function _mnsTRrqnpnCallback *****************
 17724 ;; Defined at:
 17725 ;;		line 922 in file "../../VLCBlib_PIC/mns.c"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;  type            1    wreg     unsigned char 
 17728 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17729 ;;  step            1   27[BANK1 ] unsigned char 
 17730 ;; Auto vars:     Size  Location     Type
 17731 ;;  type            1    0[COMRAM] unsigned char 
 17732 ;; Return value:  Size  Location     Type
 17733 ;;                  1    wreg      enum E12935
 17734 ;; Registers used:
 17735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17736 ;; Tracked objects:
 17737 ;;		On entry : 0/0
 17738 ;;		On exit  : 0/0
 17739 ;;		Unchanged: 0/0
 17740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17741 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17744 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17745 ;;Total ram usage:        2 bytes
 17746 ;; Hardware stack levels used: 1
 17747 ;; Hardware stack levels required when called: 17
 17748 ;; This function calls:
 17749 ;;		_getParameter
 17750 ;;		_sendMessage4
 17751 ;; This function is called by:
 17752 ;;		_mnsProcessMessage
 17753 ;;		_pollTimedResponse
 17754 ;; This function uses a non-reentrant model
 17755 ;;
 17756                           
 17757                           	psect	text47
 17758   00C38E                     __ptext47:
 17759                           	callstack 0
 17760   00C38E                     _mnsTRrqnpnCallback:
 17761                           	callstack 11
 17762                           
 17763                           ;../../VLCBlib_PIC/mns.c: 923:     if (step >= 20) {
 17764                           
 17765                           ;incstack = 0
 17766   00C38E  0E13               	movlw	19
 17767   00C390  0101               	movlb	1	; () banked
 17768   00C392  65D9               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17769   00C394  D002               	goto	l22417
 17770                           
 17771                           ; BSR set to: 1
 17772                           ;../../VLCBlib_PIC/mns.c: 924:         return TIMED_RESPONSE_RESULT_FINISHED;
 17773   00C396  0E00               	movlw	0
 17774   00C398  0012               	return	
 17775   00C39A                     l22417:
 17776                           
 17777                           ; BSR set to: 1
 17778                           ;../../VLCBlib_PIC/mns.c: 926:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17779   00C39A  C0B5  F1C6         	movff	_nn+1,sendMessage4@data1
 17780   00C39E  C0B4  F1C7         	movff	_nn,sendMessage4@data2
 17781   00C3A2  29D9               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17782   00C3A4  6FC8               	movwf	sendMessage4@data3& (0+255),b
 17783   00C3A6  29D9               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17784   00C3A8  EC1F  F044         	call	_getParameter
 17785   00C3AC  0101               	movlb	1	; () banked
 17786   00C3AE  6FC9               	movwf	sendMessage4@data4& (0+255),b
 17787   00C3B0  0E9B               	movlw	155
 17788   00C3B2  EC3D  F061         	call	_sendMessage4
 17789                           
 17790                           ;../../VLCBlib_PIC/mns.c: 927:     return TIMED_RESPONSE_RESULT_NEXT;
 17791   00C3B6  0E02               	movlw	2
 17792   00C3B8  0012               	return		;funcret
 17793   00C3BA                     __end_of_mnsTRrqnpnCallback:
 17794                           	callstack 0
 17795                           
 17796 ;; *************** function _sodTRCallback *****************
 17797 ;; Defined at:
 17798 ;;		line 403 in file "../universalEvents.c"
 17799 ;; Parameters:    Size  Location     Type
 17800 ;;  type            1    wreg     unsigned char 
 17801 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17802 ;;  step            1   27[BANK1 ] unsigned char 
 17803 ;; Auto vars:     Size  Location     Type
 17804 ;;  type            1    0[COMRAM] unsigned char 
 17805 ;;  io              1   38[BANK1 ] unsigned char 
 17806 ;;  flags           1   37[BANK1 ] unsigned char 
 17807 ;;  event_invert    1   36[BANK1 ] enum E12767
 17808 ;;  value           1   35[BANK1 ] enum E12787
 17809 ;;  disable_off     1   34[BANK1 ] enum E12767
 17810 ;;  happeningInd    1   33[BANK1 ] unsigned char 
 17811 ;;  send_off_ok     1   30[BANK1 ] enum E12767
 17812 ;;  send_on_ok      1   29[BANK1 ] enum E12767
 17813 ;;  disable_SOD_    1   28[BANK1 ] enum E12767
 17814 ;; Return value:  Size  Location     Type
 17815 ;;                  1    wreg      enum E13022
 17816 ;; Registers used:
 17817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17818 ;; Tracked objects:
 17819 ;;		On entry : 0/0
 17820 ;;		On exit  : 0/0
 17821 ;;		Unchanged: 0/0
 17822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17823 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17824 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17826 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17827 ;;Total ram usage:       13 bytes
 17828 ;; Hardware stack levels used: 1
 17829 ;; Hardware stack levels required when called: 19
 17830 ;; This function calls:
 17831 ;;		_APP_GetEventState
 17832 ;;		___awdiv
 17833 ;;		_getNV
 17834 ;;		_sendInvertedProducedEvent
 17835 ;; This function is called by:
 17836 ;;		_doSOD
 17837 ;;		_pollTimedResponse
 17838 ;; This function uses a non-reentrant model
 17839 ;;
 17840                           
 17841                           	psect	text48
 17842   00856E                     __ptext48:
 17843                           	callstack 0
 17844   00856E                     _sodTRCallback:
 17845                           	callstack 9
 17846                           
 17847                           ;../universalEvents.c: 404:     uint8_t io;;../universalEvents.c: 405:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 406:     Boolean disable_off;;../universalEvents.c: 407
      +                          :  Boolean send_on_ok;;../universalEvents.c: 408:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 409:  Boolean event_inverted;;../universalEvents.c: 410:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 411:     uint8_t flags;;../universalEvents.c: 412:     Ev
      +                          entState value;;../universalEvents.c: 415:     io = step/4;
 17848                           
 17849                           ;incstack = 0
 17850   00856E  C1D9  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17851   008572  0100               	movlb	0	; () banked
 17852   008574  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17853   008576  0E00               	movlw	0
 17854   008578  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17855   00857A  0E04               	movlw	4
 17856   00857C  6F99               	movwf	___awdiv@divisor& (0+255),b
 17857   00857E  EC59  F054         	call	___awdiv	;wreg free
 17858   008582  0100               	movlb	0	; () banked
 17859   008584  5197               	movf	?___awdiv& (0+255),w,b
 17860   008586  0101               	movlb	1	; () banked
 17861   008588  6FE4               	movwf	sodTRCallback@io& (0+255),b
 17862                           
 17863                           ; BSR set to: 1
 17864                           ;../universalEvents.c: 416:     if (io >= 16) {
 17865   00858A  0E0F               	movlw	15
 17866   00858C  65E4               	cpfsgt	sodTRCallback@io& (0+255),b
 17867   00858E  D002               	goto	l21913
 17868                           
 17869                           ; BSR set to: 1
 17870                           ;../universalEvents.c: 417:         return TIMED_RESPONSE_RESULT_FINISHED;
 17871   008590  0E00               	movlw	0
 17872   008592  0012               	return	
 17873   008594                     l21913:
 17874                           
 17875                           ; BSR set to: 1
 17876                           ;../universalEvents.c: 419:     happeningIndex = step%4;
 17877   008594  51D9               	movf	sodTRCallback@step& (0+255),w,b
 17878   008596  0B03               	andlw	3
 17879   008598  6FDF               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17880                           
 17881                           ; BSR set to: 1
 17882                           ;../universalEvents.c: 420:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17883   00859A  51E4               	movf	sodTRCallback@io& (0+255),w,b
 17884   00859C  0D07               	mullw	7
 17885   00859E  50F3               	movf	243,w,c
 17886   0085A0  0F11               	addlw	17
 17887   0085A2  ECB0  F05F         	call	_getNV
 17888   0085A6  0100               	movlb	0	; () banked
 17889   0085A8  518D               	movf	?_getNV& (0+255),w,b
 17890   0085AA  0101               	movlb	1	; () banked
 17891   0085AC  6FE3               	movwf	sodTRCallback@flags& (0+255),b
 17892                           
 17893                           ; BSR set to: 1
 17894                           ;../universalEvents.c: 421:     disable_SOD_response = flags & 0x20;
 17895   0085AE  51E3               	movf	sodTRCallback@flags& (0+255),w,b
 17896   0085B0  0B20               	andlw	32
 17897   0085B2  6FDA               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17898                           
 17899                           ; BSR set to: 1
 17900                           ;../universalEvents.c: 423:     event_inverted = flags & 0x40;
 17901   0085B4  51E3               	movf	sodTRCallback@flags& (0+255),w,b
 17902   0085B6  0B40               	andlw	64
 17903   0085B8  6FE2               	movwf	sodTRCallback@event_inverted& (0+255),b
 17904                           
 17905                           ; BSR set to: 1
 17906                           ;../universalEvents.c: 424:     disable_off = flags & 0x08;
 17907   0085BA  51E3               	movf	sodTRCallback@flags& (0+255),w,b
 17908   0085BC  0B08               	andlw	8
 17909   0085BE  6FE0               	movwf	sodTRCallback@disable_off& (0+255),b
 17910                           
 17911                           ; BSR set to: 1
 17912                           ;../universalEvents.c: 425:     send_on_ok = !( disable_off && event_inverted );
 17913   0085C0  0E01               	movlw	1
 17914   0085C2  6FDD               	movwf	_sodTRCallback$1424& (0+255),b
 17915                           
 17916                           ; BSR set to: 1
 17917   0085C4  51E0               	movf	sodTRCallback@disable_off& (0+255),w,b
 17918   0085C6  B4D8               	btfsc	status,2,c
 17919   0085C8  D005               	goto	l21931
 17920                           
 17921                           ; BSR set to: 1
 17922   0085CA  51E2               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17923   0085CC  B4D8               	btfsc	status,2,c
 17924   0085CE  D002               	goto	l21931
 17925                           
 17926                           ; BSR set to: 1
 17927   0085D0  0E00               	movlw	0
 17928   0085D2  6FDD               	movwf	_sodTRCallback$1424& (0+255),b
 17929   0085D4                     l21931:
 17930                           
 17931                           ; BSR set to: 1
 17932   0085D4  C1DD  F1DB         	movff	_sodTRCallback$1424,sodTRCallback@send_on_ok
 17933                           
 17934                           ;../universalEvents.c: 426:     send_off_ok = !( disable_off && !event_inverted);
 17935   0085D8  0E01               	movlw	1
 17936   0085DA  6FDE               	movwf	_sodTRCallback$1425& (0+255),b
 17937   0085DC  51E0               	movf	sodTRCallback@disable_off& (0+255),w,b
 17938   0085DE  B4D8               	btfsc	status,2,c
 17939   0085E0  D005               	goto	l21937
 17940                           
 17941                           ; BSR set to: 1
 17942   0085E2  51E2               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17943   0085E4  A4D8               	btfss	status,2,c
 17944   0085E6  D002               	goto	l21937
 17945                           
 17946                           ; BSR set to: 1
 17947   0085E8  0E00               	movlw	0
 17948   0085EA  6FDE               	movwf	_sodTRCallback$1425& (0+255),b
 17949   0085EC                     l21937:
 17950                           
 17951                           ; BSR set to: 1
 17952   0085EC  C1DE  F1DC         	movff	_sodTRCallback$1425,sodTRCallback@send_off_ok
 17953                           
 17954                           ; BSR set to: 1
 17955                           ;../universalEvents.c: 428:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17956   0085F0  51E4               	movf	sodTRCallback@io& (0+255),w,b
 17957   0085F2  0D04               	mullw	4
 17958   0085F4  50F3               	movf	243,w,c
 17959   0085F6  25DF               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17960   0085F8  0F08               	addlw	8
 17961   0085FA  EC62  F022         	call	_APP_GetEventState
 17962   0085FE  0101               	movlb	1	; () banked
 17963   008600  6FE1               	movwf	sodTRCallback@value& (0+255),b
 17964                           
 17965                           ;../universalEvents.c: 430:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17966   008602  D00C               	goto	l21951
 17967   008604                     l21941:
 17968                           
 17969                           ; BSR set to: 0
 17970                           ;../universalEvents.c: 436:             if (disable_SOD_response) {
 17971   008604  0101               	movlb	1	; () banked
 17972   008606  51DA               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17973   008608  B4D8               	btfsc	status,2,c
 17974   00860A  D01C               	goto	l21953
 17975   00860C                     u22530:
 17976                           
 17977                           ;../universalEvents.c: 437:                 return TIMED_RESPONSE_RESULT_NEXT;
 17978   00860C  0E02               	movlw	2
 17979   00860E  0012               	return	
 17980   008610                     l21947:
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;../universalEvents.c: 448:             send_on_ok = TRUE;
 17984   008610  0E01               	movlw	1
 17985   008612  0101               	movlb	1	; () banked
 17986   008614  6FDB               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17987                           
 17988                           ;../universalEvents.c: 449:             send_off_ok = TRUE;
 17989   008616  0E01               	movlw	1
 17990   008618  6FDC               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17991                           
 17992                           ;../universalEvents.c: 450:             break;
 17993   00861A  D014               	goto	l21953
 17994   00861C                     l21951:
 17995                           
 17996                           ; BSR set to: 1
 17997   00861C  51E4               	movf	sodTRCallback@io& (0+255),w,b
 17998   00861E  0D07               	mullw	7
 17999   008620  50F3               	movf	243,w,c
 18000   008622  0F10               	addlw	16
 18001   008624  ECB0  F05F         	call	_getNV
 18002   008628  0100               	movlb	0	; () banked
 18003   00862A  518D               	movf	?_getNV& (0+255),w,b
 18004                           
 18005                           ; Switch size 1, requested type "simple"
 18006                           ; Number of cases is 4, Range of values is 0 to 4
 18007                           ; switch strategies available:
 18008                           ; Name         Instructions Cycles
 18009                           ; simple_byte           13     7 (average)
 18010                           ;	Chosen strategy is simple_byte
 18011   00862C  0A00               	xorlw	0	; case 0
 18012   00862E  B4D8               	btfsc	status,2,c
 18013   008630  D7E9               	goto	l21941
 18014   008632  0A02               	xorlw	2	; case 2
 18015   008634  B4D8               	btfsc	status,2,c
 18016   008636  D7EC               	goto	l21947
 18017   008638  0A01               	xorlw	1	; case 3
 18018   00863A  B4D8               	btfsc	status,2,c
 18019   00863C  D7E9               	goto	l21947
 18020   00863E  0A07               	xorlw	7	; case 4
 18021   008640  B4D8               	btfsc	status,2,c
 18022   008642  D7E6               	goto	l21947
 18023   008644                     l21953:
 18024                           
 18025                           ;../universalEvents.c: 453:     if (value != EVENT_UNKNOWN) {
 18026   008644  0101               	movlb	1	; () banked
 18027   008646  29E1               	incf	sodTRCallback@value& (0+255),w,b
 18028   008648  B4D8               	btfsc	status,2,c
 18029   00864A  D7E0               	goto	u22530
 18030                           
 18031                           ; BSR set to: 1
 18032                           ;../universalEvents.c: 454:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 18033   00864C  C1E1  F1D0         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 18034   008650  C1E2  F1D1         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 18035   008654  C1DB  F1D2         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 18036   008658  C1DC  F1D3         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 18037   00865C  51E4               	movf	sodTRCallback@io& (0+255),w,b
 18038   00865E  0D04               	mullw	4
 18039   008660  50F3               	movf	243,w,c
 18040   008662  25DF               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 18041   008664  0F08               	addlw	8
 18042   008666  EC36  F05E         	call	_sendInvertedProducedEvent
 18043   00866A  D7D0               	goto	u22530
 18044   00866C                     __end_of_sodTRCallback:
 18045                           	callstack 0
 18046                           
 18047 ;; *************** function _APP_GetEventState *****************
 18048 ;; Defined at:
 18049 ;;		line 428 in file "../main.c"
 18050 ;; Parameters:    Size  Location     Type
 18051 ;;  h               1    wreg     unsigned char 
 18052 ;; Auto vars:     Size  Location     Type
 18053 ;;  h               1   72[BANK0 ] unsigned char 
 18054 ;;  happeningInd    1   73[BANK0 ] unsigned char 
 18055 ;;  disable_off     1   71[BANK0 ] enum E12716
 18056 ;;  flags           1   70[BANK0 ] unsigned char 
 18057 ;; Return value:  Size  Location     Type
 18058 ;;                  1    wreg      enum E12736
 18059 ;; Registers used:
 18060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18067 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18068 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18069 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18070 ;;Total ram usage:       11 bytes
 18071 ;; Hardware stack levels used: 1
 18072 ;; Hardware stack levels required when called: 14
 18073 ;; This function calls:
 18074 ;;		___awdiv
 18075 ;;		_getNV
 18076 ;;		_readNVM
 18077 ;; This function is called by:
 18078 ;;		_sodTRCallback
 18079 ;;		_producerProcessMessage
 18080 ;; This function uses a non-reentrant model
 18081 ;;
 18082                           
 18083                           	psect	text49
 18084   0044C4                     __ptext49:
 18085                           	callstack 0
 18086   0044C4                     _APP_GetEventState:
 18087                           	callstack 14
 18088                           
 18089                           ;incstack = 0
 18090                           ;APP_GetEventState@h stored from wreg
 18091   0044C4  0100               	movlb	0	; () banked
 18092   0044C6  6FA8               	movwf	APP_GetEventState@h& (0+255),b
 18093                           
 18094                           ;../main.c: 429:     uint8_t flags;;../main.c: 430:     uint8_t happeningIndex;;../main.
      +                          c: 431:     Boolean disable_off;;../main.c: 433:     io = (((h)-8)/4);
 18095   0044C8  0EF8               	movlw	248
 18096   0044CA  0100               	movlb	0	; () banked
 18097   0044CC  25A8               	addwf	APP_GetEventState@h& (0+255),w,b
 18098   0044CE  6F97               	movwf	___awdiv@dividend& (0+255),b
 18099   0044D0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18100   0044D2  0EFF               	movlw	255
 18101   0044D4  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 18102   0044D6  0E00               	movlw	0
 18103   0044D8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18104   0044DA  0E04               	movlw	4
 18105   0044DC  6F99               	movwf	___awdiv@divisor& (0+255),b
 18106   0044DE  EC59  F054         	call	___awdiv	;wreg free
 18107   0044E2  0100               	movlb	0	; () banked
 18108   0044E4  5197               	movf	?___awdiv& (0+255),w,b
 18109   0044E6  6FCF               	movwf	_io& (0+255),b
 18110                           
 18111                           ; BSR set to: 0
 18112                           ;../main.c: 434:     if (io >= 16) {
 18113   0044E8  0E0F               	movlw	15
 18114   0044EA  65CF               	cpfsgt	_io& (0+255),b
 18115   0044EC  D002               	goto	l20665
 18116   0044EE                     u20730:
 18117                           
 18118                           ; BSR set to: 0
 18119                           ;../main.c: 435:         return EVENT_UNKNOWN;
 18120   0044EE  0EFF               	movlw	255
 18121   0044F0  0012               	return	
 18122   0044F2                     l20665:
 18123                           
 18124                           ; BSR set to: 0
 18125                           ;../main.c: 437:     happeningIndex = (((h)-8)%4);
 18126   0044F2  51A8               	movf	APP_GetEventState@h& (0+255),w,b
 18127   0044F4  0FF8               	addlw	248
 18128   0044F6  0B03               	andlw	3
 18129   0044F8  6FA9               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;../main.c: 438:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 18133   0044FA  51CF               	movf	_io& (0+255),w,b
 18134   0044FC  0D07               	mullw	7
 18135   0044FE  50F3               	movf	243,w,c
 18136   004500  0F11               	addlw	17
 18137   004502  ECB0  F05F         	call	_getNV
 18138   004506  0100               	movlb	0	; () banked
 18139   004508  518D               	movf	?_getNV& (0+255),w,b
 18140   00450A  6FA6               	movwf	APP_GetEventState@flags& (0+255),b
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;../main.c: 439:     disable_off = flags & 0x08;
 18144   00450C  51A6               	movf	APP_GetEventState@flags& (0+255),w,b
 18145   00450E  0B08               	andlw	8
 18146   004510  6FA7               	movwf	APP_GetEventState@disable_off& (0+255),b
 18147                           
 18148                           ;../main.c: 441:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 18149   004512  D169               	goto	l20743
 18150   004514                     l20671:
 18151                           
 18152                           ; BSR set to: 0
 18153                           ;../main.c: 446:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 18154   004514  0EB4               	movlw	low _outputState
 18155   004516  25CF               	addwf	_io& (0+255),w,b
 18156   004518  6ED9               	movwf	fsr2l,c
 18157   00451A  6ADA               	clrf	fsr2h,c
 18158   00451C  0E02               	movlw	high _outputState
 18159   00451E  22DA               	addwfc	fsr2h,f,c
 18160   004520  50DF               	movf	indf2,w,c
 18161   004522  B4D8               	btfsc	status,2,c
 18162   004524  D002               	goto	u20740
 18163   004526  0E01               	movlw	1
 18164   004528  0012               	return	
 18165   00452A                     u20740:
 18166   00452A  0E00               	movlw	0
 18167   00452C  0012               	return	
 18168   00452E                     l20675:
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;../main.c: 449:                     if (disable_off) {
 18172   00452E  51A7               	movf	APP_GetEventState@disable_off& (0+255),w,b
 18173   004530  B4D8               	btfsc	status,2,c
 18174   004532  D7DD               	goto	u20730
 18175                           
 18176                           ; BSR set to: 0
 18177                           ;../main.c: 450:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 18178   004534  0EB4               	movlw	low _outputState
 18179   004536  25CF               	addwf	_io& (0+255),w,b
 18180   004538  6ED9               	movwf	fsr2l,c
 18181   00453A  6ADA               	clrf	fsr2h,c
 18182   00453C  0E02               	movlw	high _outputState
 18183   00453E  22DA               	addwfc	fsr2h,f,c
 18184   004540  50DF               	movf	indf2,w,c
 18185   004542  A4D8               	btfss	status,2,c
 18186   004544  D002               	goto	u20770
 18187   004546  0E01               	movlw	1
 18188   004548  0012               	return	
 18189   00454A                     u20770:
 18190   00454A  0E00               	movlw	0
 18191   00454C  0012               	return	
 18192   00454E                     l20683:
 18193                           
 18194                           ; BSR set to: 0
 18195   00454E  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18196                           
 18197                           ; Switch size 1, requested type "simple"
 18198                           ; Number of cases is 2, Range of values is 0 to 1
 18199                           ; switch strategies available:
 18200                           ; Name         Instructions Cycles
 18201                           ; simple_byte            7     4 (average)
 18202                           ;	Chosen strategy is simple_byte
 18203   004550  0A00               	xorlw	0	; case 0
 18204   004552  B4D8               	btfsc	status,2,c
 18205   004554  D7DF               	goto	l20671
 18206   004556  0A01               	xorlw	1	; case 1
 18207   004558  B4D8               	btfsc	status,2,c
 18208   00455A  D7E9               	goto	l20675
 18209   00455C  D7C8               	goto	u20730
 18210   00455E                     l20685:
 18211                           
 18212                           ; BSR set to: 0
 18213                           ;../main.c: 461:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 18214   00455E  0EDE               	movlw	222
 18215   004560  25CF               	addwf	_io& (0+255),w,b
 18216   004562  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18217   004564  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18218   004566  0E03               	movlw	3
 18219   004568  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18220   00456A  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18221   00456E  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18222   004572  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18223   004574  0E00               	movlw	0
 18224   004576  EC0F  F05B         	call	_readNVM
 18225   00457A  0E02               	movlw	2
 18226   00457C  0100               	movlb	0	; () banked
 18227   00457E  1991               	xorwf	?_readNVM& (0+255),w,b
 18228   004580  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 18229   004582  B4D8               	btfsc	status,2,c
 18230   004584  D002               	goto	u20790
 18231   004586  0E01               	movlw	1
 18232   004588  0012               	return	
 18233   00458A                     u20790:
 18234   00458A  0E00               	movlw	0
 18235   00458C  0012               	return	
 18236   00458E                     l20691:
 18237                           
 18238                           ; BSR set to: 0
 18239   00458E  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18240                           
 18241                           ; Switch size 1, requested type "simple"
 18242                           ; Number of cases is 1, Range of values is 0 to 0
 18243                           ; switch strategies available:
 18244                           ; Name         Instructions Cycles
 18245                           ; simple_byte            4     3 (average)
 18246                           ;	Chosen strategy is simple_byte
 18247   004590  0A00               	xorlw	0	; case 0
 18248   004592  B4D8               	btfsc	status,2,c
 18249   004594  D7E4               	goto	l20685
 18250   004596  D7AB               	goto	u20730
 18251   004598                     l20693:
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;../main.c: 468:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 18255   004598  51CF               	movf	_io& (0+255),w,b
 18256   00459A  0D07               	mullw	7
 18257   00459C  50F3               	movf	243,w,c
 18258   00459E  0F12               	addlw	18
 18259   0045A0  ECB0  F05F         	call	_getNV
 18260   0045A4  0E30               	movlw	low _currentPos
 18261   0045A6  0100               	movlb	0	; () banked
 18262   0045A8  25CF               	addwf	_io& (0+255),w,b
 18263   0045AA  6ED9               	movwf	fsr2l,c
 18264   0045AC  6ADA               	clrf	fsr2h,c
 18265   0045AE  0E01               	movlw	high _currentPos
 18266   0045B0  22DA               	addwfc	fsr2h,f,c
 18267   0045B2  50DE               	movf	postinc2,w,c
 18268   0045B4  198D               	xorwf	?_getNV& (0+255),w,b
 18269   0045B6  A4D8               	btfss	status,2,c
 18270   0045B8  D002               	goto	u20810
 18271   0045BA  0E01               	movlw	1
 18272   0045BC  0012               	return	
 18273   0045BE                     u20810:
 18274   0045BE  0E00               	movlw	0
 18275   0045C0  0012               	return	
 18276   0045C2                     l20697:
 18277                           
 18278                           ; BSR set to: 0
 18279                           ;../main.c: 470:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 18280   0045C2  51CF               	movf	_io& (0+255),w,b
 18281   0045C4  0D07               	mullw	7
 18282   0045C6  50F3               	movf	243,w,c
 18283   0045C8  0F13               	addlw	19
 18284   0045CA  ECB0  F05F         	call	_getNV
 18285   0045CE  0E30               	movlw	low _currentPos
 18286   0045D0  0100               	movlb	0	; () banked
 18287   0045D2  25CF               	addwf	_io& (0+255),w,b
 18288   0045D4  6ED9               	movwf	fsr2l,c
 18289   0045D6  6ADA               	clrf	fsr2h,c
 18290   0045D8  0E01               	movlw	high _currentPos
 18291   0045DA  22DA               	addwfc	fsr2h,f,c
 18292   0045DC  50DE               	movf	postinc2,w,c
 18293   0045DE  198D               	xorwf	?_getNV& (0+255),w,b
 18294   0045E0  A4D8               	btfss	status,2,c
 18295   0045E2  D002               	goto	u20830
 18296   0045E4  0E01               	movlw	1
 18297   0045E6  0012               	return	
 18298   0045E8                     u20830:
 18299   0045E8  0E00               	movlw	0
 18300   0045EA  0012               	return	
 18301   0045EC                     l20701:
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;../main.c: 473:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 18305   0045EC  51CF               	movf	_io& (0+255),w,b
 18306   0045EE  0D07               	mullw	7
 18307   0045F0  50F3               	movf	243,w,c
 18308   0045F2  0F13               	addlw	19
 18309   0045F4  ECB0  F05F         	call	_getNV
 18310   0045F8  0100               	movlb	0	; () banked
 18311   0045FA  518D               	movf	?_getNV& (0+255),w,b
 18312   0045FC  6F97               	movwf	___awdiv@dividend& (0+255),b
 18313   0045FE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18314   004600  0E00               	movlw	0
 18315   004602  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18316   004604  0E02               	movlw	2
 18317   004606  6F99               	movwf	___awdiv@divisor& (0+255),b
 18318   004608  EC59  F054         	call	___awdiv	;wreg free
 18319   00460C  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 18320   004610  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 18321   004614  0100               	movlb	0	; () banked
 18322   004616  51CF               	movf	_io& (0+255),w,b
 18323   004618  0D07               	mullw	7
 18324   00461A  50F3               	movf	243,w,c
 18325   00461C  0F12               	addlw	18
 18326   00461E  ECB0  F05F         	call	_getNV
 18327   004622  0100               	movlb	0	; () banked
 18328   004624  518D               	movf	?_getNV& (0+255),w,b
 18329   004626  6F97               	movwf	___awdiv@dividend& (0+255),b
 18330   004628  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18331   00462A  0E00               	movlw	0
 18332   00462C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18333   00462E  0E02               	movlw	2
 18334   004630  6F99               	movwf	___awdiv@divisor& (0+255),b
 18335   004632  EC59  F054         	call	___awdiv	;wreg free
 18336   004636  0100               	movlb	0	; () banked
 18337   004638  5197               	movf	?___awdiv& (0+255),w,b
 18338   00463A  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 18339   00463C  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 18340   00463E  5198               	movf	(?___awdiv+1)& (0+255),w,b
 18341   004640  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 18342   004642  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 18343   004644  0E30               	movlw	low _currentPos
 18344   004646  25CF               	addwf	_io& (0+255),w,b
 18345   004648  6ED9               	movwf	fsr2l,c
 18346   00464A  6ADA               	clrf	fsr2h,c
 18347   00464C  0E01               	movlw	high _currentPos
 18348   00464E  22DA               	addwfc	fsr2h,f,c
 18349   004650  50DF               	movf	indf2,w,c
 18350   004652  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 18351   004654  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 18352   004656  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 18353   004658  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 18354   00465A  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 18355   00465C  0A80               	xorlw	128
 18356   00465E  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 18357   004660  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 18358   004662  0A80               	xorlw	128
 18359   004664  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 18360   004666  A0D8               	btfss	status,0,c
 18361   004668  D002               	goto	u20850
 18362   00466A  0E01               	movlw	1
 18363   00466C  0012               	return	
 18364   00466E                     u20850:
 18365   00466E  0E00               	movlw	0
 18366   004670  0012               	return	
 18367   004672                     l20707:
 18368                           
 18369                           ; BSR set to: 0
 18370   004672  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18371                           
 18372                           ; Switch size 1, requested type "simple"
 18373                           ; Number of cases is 3, Range of values is 0 to 2
 18374                           ; switch strategies available:
 18375                           ; Name         Instructions Cycles
 18376                           ; simple_byte           10     6 (average)
 18377                           ;	Chosen strategy is simple_byte
 18378   004674  0A00               	xorlw	0	; case 0
 18379   004676  B4D8               	btfsc	status,2,c
 18380   004678  D78F               	goto	l20693
 18381   00467A  0A01               	xorlw	1	; case 1
 18382   00467C  B4D8               	btfsc	status,2,c
 18383   00467E  D7B6               	goto	l20701
 18384   004680  0A03               	xorlw	3	; case 2
 18385   004682  B4D8               	btfsc	status,2,c
 18386   004684  D79E               	goto	l20697
 18387   004686  D733               	goto	u20730
 18388   004688                     l20709:
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;../main.c: 481:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 18392   004688  0EDE               	movlw	222
 18393   00468A  25CF               	addwf	_io& (0+255),w,b
 18394   00468C  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18395   00468E  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18396   004690  0E03               	movlw	3
 18397   004692  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18398   004694  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18399   004698  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18400   00469C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18401   00469E  0E00               	movlw	0
 18402   0046A0  EC0F  F05B         	call	_readNVM
 18403   0046A4  0100               	movlb	0	; () banked
 18404   0046A6  6791               	tstfsz	?_readNVM& (0+255),b
 18405   0046A8  0E01               	movlw	1
 18406   0046AA  0012               	return	
 18407   0046AC                     l20715:
 18408                           
 18409                           ; BSR set to: 0
 18410   0046AC  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18411                           
 18412                           ; Switch size 1, requested type "simple"
 18413                           ; Number of cases is 1, Range of values is 0 to 0
 18414                           ; switch strategies available:
 18415                           ; Name         Instructions Cycles
 18416                           ; simple_byte            4     3 (average)
 18417                           ;	Chosen strategy is simple_byte
 18418   0046AE  0A00               	xorlw	0	; case 0
 18419   0046B0  B4D8               	btfsc	status,2,c
 18420   0046B2  D7EA               	goto	l20709
 18421   0046B4  D71C               	goto	u20730
 18422   0046B6                     l20717:
 18423                           
 18424                           ; BSR set to: 0
 18425                           ;../main.c: 489:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 18426   0046B6  51CF               	movf	_io& (0+255),w,b
 18427   0046B8  0D07               	mullw	7
 18428   0046BA  50F3               	movf	243,w,c
 18429   0046BC  0F13               	addlw	19
 18430   0046BE  ECB0  F05F         	call	_getNV
 18431   0046C2  0E30               	movlw	low _currentPos
 18432   0046C4  0100               	movlb	0	; () banked
 18433   0046C6  25CF               	addwf	_io& (0+255),w,b
 18434   0046C8  6ED9               	movwf	fsr2l,c
 18435   0046CA  6ADA               	clrf	fsr2h,c
 18436   0046CC  0E01               	movlw	high _currentPos
 18437   0046CE  22DA               	addwfc	fsr2h,f,c
 18438   0046D0  50DF               	movf	indf2,w,c
 18439   0046D2  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18440   0046D4  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18441   0046D6  518D               	movf	?_getNV& (0+255),w,b
 18442   0046D8  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18443   0046DA  E106               	bnz	u20890
 18444   0046DC  518E               	movf	(?_getNV+1)& (0+255),w,b
 18445   0046DE  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18446   0046E0  A4D8               	btfss	status,2,c
 18447   0046E2  D002               	goto	u20890
 18448   0046E4  0E01               	movlw	1
 18449   0046E6  0012               	return	
 18450   0046E8                     u20890:
 18451   0046E8  0E00               	movlw	0
 18452   0046EA  0012               	return	
 18453   0046EC                     l20721:
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;../main.c: 491:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 18457   0046EC  51CF               	movf	_io& (0+255),w,b
 18458   0046EE  0D07               	mullw	7
 18459   0046F0  50F3               	movf	243,w,c
 18460   0046F2  0F14               	addlw	20
 18461   0046F4  ECB0  F05F         	call	_getNV
 18462   0046F8  0E30               	movlw	low _currentPos
 18463   0046FA  0100               	movlb	0	; () banked
 18464   0046FC  25CF               	addwf	_io& (0+255),w,b
 18465   0046FE  6ED9               	movwf	fsr2l,c
 18466   004700  6ADA               	clrf	fsr2h,c
 18467   004702  0E01               	movlw	high _currentPos
 18468   004704  22DA               	addwfc	fsr2h,f,c
 18469   004706  50DF               	movf	indf2,w,c
 18470   004708  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18471   00470A  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18472   00470C  518D               	movf	?_getNV& (0+255),w,b
 18473   00470E  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18474   004710  E106               	bnz	u20910
 18475   004712  518E               	movf	(?_getNV+1)& (0+255),w,b
 18476   004714  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18477   004716  A4D8               	btfss	status,2,c
 18478   004718  D002               	goto	u20910
 18479   00471A  0E01               	movlw	1
 18480   00471C  0012               	return	
 18481   00471E                     u20910:
 18482   00471E  0E00               	movlw	0
 18483   004720  0012               	return	
 18484   004722                     l20725:
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;../main.c: 494:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 18488   004722  51CF               	movf	_io& (0+255),w,b
 18489   004724  0D07               	mullw	7
 18490   004726  50F3               	movf	243,w,c
 18491   004728  0F12               	addlw	18
 18492   00472A  ECB0  F05F         	call	_getNV
 18493   00472E  0100               	movlb	0	; () banked
 18494   004730  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18495   004732  D6DD               	goto	u20730
 18496   004734  518E               	movf	(?_getNV+1)& (0+255),w,b
 18497   004736  E104               	bnz	u20930
 18498   004738  0E03               	movlw	3
 18499   00473A  5D8D               	subwf	?_getNV& (0+255),w,b
 18500   00473C  A0D8               	btfss	status,0,c
 18501   00473E  D6D7               	goto	u20730
 18502   004740                     u20930:
 18503                           
 18504                           ; BSR set to: 0
 18505                           ;../main.c: 495:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 18506   004740  51CF               	movf	_io& (0+255),w,b
 18507   004742  0D07               	mullw	7
 18508   004744  50F3               	movf	243,w,c
 18509   004746  0F15               	addlw	21
 18510   004748  ECB0  F05F         	call	_getNV
 18511   00474C  0E30               	movlw	low _currentPos
 18512   00474E  0100               	movlb	0	; () banked
 18513   004750  25CF               	addwf	_io& (0+255),w,b
 18514   004752  6ED9               	movwf	fsr2l,c
 18515   004754  6ADA               	clrf	fsr2h,c
 18516   004756  0E01               	movlw	high _currentPos
 18517   004758  22DA               	addwfc	fsr2h,f,c
 18518   00475A  50DF               	movf	indf2,w,c
 18519   00475C  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18520   00475E  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18521   004760  518D               	movf	?_getNV& (0+255),w,b
 18522   004762  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18523   004764  E106               	bnz	u20940
 18524   004766  518E               	movf	(?_getNV+1)& (0+255),w,b
 18525   004768  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18526   00476A  A4D8               	btfss	status,2,c
 18527   00476C  D002               	goto	u20940
 18528   00476E  0E01               	movlw	1
 18529   004770  0012               	return	
 18530   004772                     u20940:
 18531   004772  0E00               	movlw	0
 18532   004774  0012               	return	
 18533   004776                     l20731:
 18534                           
 18535                           ; BSR set to: 0
 18536                           ;../main.c: 499:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 18537   004776  51CF               	movf	_io& (0+255),w,b
 18538   004778  0D07               	mullw	7
 18539   00477A  50F3               	movf	243,w,c
 18540   00477C  0F12               	addlw	18
 18541   00477E  ECB0  F05F         	call	_getNV
 18542   004782  0100               	movlb	0	; () banked
 18543   004784  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18544   004786  D6B3               	goto	u20730
 18545   004788  518E               	movf	(?_getNV+1)& (0+255),w,b
 18546   00478A  E104               	bnz	u20960
 18547   00478C  0E04               	movlw	4
 18548   00478E  5D8D               	subwf	?_getNV& (0+255),w,b
 18549   004790  A0D8               	btfss	status,0,c
 18550   004792  D6AD               	goto	u20730
 18551   004794                     u20960:
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;../main.c: 500:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 18555   004794  51CF               	movf	_io& (0+255),w,b
 18556   004796  0D07               	mullw	7
 18557   004798  50F3               	movf	243,w,c
 18558   00479A  0F16               	addlw	22
 18559   00479C  ECB0  F05F         	call	_getNV
 18560   0047A0  0E30               	movlw	low _currentPos
 18561   0047A2  0100               	movlb	0	; () banked
 18562   0047A4  25CF               	addwf	_io& (0+255),w,b
 18563   0047A6  6ED9               	movwf	fsr2l,c
 18564   0047A8  6ADA               	clrf	fsr2h,c
 18565   0047AA  0E01               	movlw	high _currentPos
 18566   0047AC  22DA               	addwfc	fsr2h,f,c
 18567   0047AE  50DF               	movf	indf2,w,c
 18568   0047B0  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18569   0047B2  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18570   0047B4  518D               	movf	?_getNV& (0+255),w,b
 18571   0047B6  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18572   0047B8  E106               	bnz	u20970
 18573   0047BA  518E               	movf	(?_getNV+1)& (0+255),w,b
 18574   0047BC  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18575   0047BE  A4D8               	btfss	status,2,c
 18576   0047C0  D002               	goto	u20970
 18577   0047C2  0E01               	movlw	1
 18578   0047C4  0012               	return	
 18579   0047C6                     u20970:
 18580   0047C6  0E00               	movlw	0
 18581   0047C8  0012               	return	
 18582   0047CA                     l20739:
 18583                           
 18584                           ; BSR set to: 0
 18585   0047CA  51A9               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18586                           
 18587                           ; Switch size 1, requested type "simple"
 18588                           ; Number of cases is 4, Range of values is 0 to 3
 18589                           ; switch strategies available:
 18590                           ; Name         Instructions Cycles
 18591                           ; simple_byte           13     7 (average)
 18592                           ;	Chosen strategy is simple_byte
 18593   0047CC  0A00               	xorlw	0	; case 0
 18594   0047CE  B4D8               	btfsc	status,2,c
 18595   0047D0  D772               	goto	l20717
 18596   0047D2  0A01               	xorlw	1	; case 1
 18597   0047D4  B4D8               	btfsc	status,2,c
 18598   0047D6  D78A               	goto	l20721
 18599   0047D8  0A03               	xorlw	3	; case 2
 18600   0047DA  B4D8               	btfsc	status,2,c
 18601   0047DC  D7A2               	goto	l20725
 18602   0047DE  0A01               	xorlw	1	; case 3
 18603   0047E0  B4D8               	btfsc	status,2,c
 18604   0047E2  D7C9               	goto	l20731
 18605   0047E4  D684               	goto	u20730
 18606   0047E6                     l20743:
 18607                           
 18608                           ; BSR set to: 0
 18609   0047E6  51CF               	movf	_io& (0+255),w,b
 18610   0047E8  0D07               	mullw	7
 18611   0047EA  50F3               	movf	243,w,c
 18612   0047EC  0F10               	addlw	16
 18613   0047EE  ECB0  F05F         	call	_getNV
 18614   0047F2  0100               	movlb	0	; () banked
 18615   0047F4  518D               	movf	?_getNV& (0+255),w,b
 18616                           
 18617                           ; Switch size 1, requested type "simple"
 18618                           ; Number of cases is 5, Range of values is 0 to 4
 18619                           ; switch strategies available:
 18620                           ; Name         Instructions Cycles
 18621                           ; simple_byte           16     9 (average)
 18622                           ;	Chosen strategy is simple_byte
 18623   0047F6  0A00               	xorlw	0	; case 0
 18624   0047F8  B4D8               	btfsc	status,2,c
 18625   0047FA  D6A9               	goto	l20683
 18626   0047FC  0A01               	xorlw	1	; case 1
 18627   0047FE  B4D8               	btfsc	status,2,c
 18628   004800  D6C6               	goto	l20691
 18629   004802  0A03               	xorlw	3	; case 2
 18630   004804  B4D8               	btfsc	status,2,c
 18631   004806  D735               	goto	l20707
 18632   004808  0A01               	xorlw	1	; case 3
 18633   00480A  B4D8               	btfsc	status,2,c
 18634   00480C  D74F               	goto	l20715
 18635   00480E  0A07               	xorlw	7	; case 4
 18636   004810  B4D8               	btfsc	status,2,c
 18637   004812  D7DB               	goto	l20739
 18638   004814  D66C               	goto	u20730
 18639   004816                     __end_of_APP_GetEventState:
 18640                           	callstack 0
 18641                           
 18642 ;; *************** function _numEv *****************
 18643 ;; Defined at:
 18644 ;;		line 1167 in file "../../VLCBlib_PIC/event_teach_large.c"
 18645 ;; Parameters:    Size  Location     Type
 18646 ;;  tableIndex      1    wreg     unsigned char 
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18649 ;;  f               1   66[BANK0 ] struct .
 18650 ;;  num             1   65[BANK0 ] unsigned char 
 18651 ;; Return value:  Size  Location     Type
 18652 ;;                  1    wreg      unsigned char 
 18653 ;; Registers used:
 18654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18655 ;; Tracked objects:
 18656 ;;		On entry : 0/0
 18657 ;;		On exit  : 0/0
 18658 ;;		Unchanged: 0/0
 18659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18661 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18662 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18663 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18664 ;;Total ram usage:        7 bytes
 18665 ;; Hardware stack levels used: 1
 18666 ;; Hardware stack levels required when called: 15
 18667 ;; This function calls:
 18668 ;;		_readNVM
 18669 ;;		_validStart
 18670 ;; This function is called by:
 18671 ;;		_doReval
 18672 ;;		_doReqev
 18673 ;;		_reqevCallback
 18674 ;; This function uses a non-reentrant model
 18675 ;;
 18676                           
 18677                           	psect	text50
 18678   008C9E                     __ptext50:
 18679                           	callstack 0
 18680   008C9E                     _numEv:
 18681                           	callstack 12
 18682                           
 18683                           ; BSR set to: 0
 18684                           ;incstack = 0
 18685                           ;numEv@tableIndex stored from wreg
 18686   008C9E  0100               	movlb	0	; () banked
 18687   008CA0  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18688                           
 18689                           ;../../VLCBlib_PIC/event_teach_large.c: 1168:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1169:     uint8_t num=0;
 18690   008CA2  0E00               	movlw	0
 18691   008CA4  0100               	movlb	0	; () banked
 18692   008CA6  6FA1               	movwf	numEv@num& (0+255),b
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;../../VLCBlib_PIC/event_teach_large.c: 1170:     if ( ! validStart(tableIndex)) {
 18696   008CA8  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18697   008CAA  EC78  F05D         	call	_validStart
 18698   008CAE  0900               	iorlw	0
 18699   008CB0  A4D8               	btfss	status,2,c
 18700   008CB2  D002               	goto	l21501
 18701   008CB4                     u22060:
 18702                           
 18703                           ;../../VLCBlib_PIC/event_teach_large.c: 1172:         return 0;
 18704   008CB4  0E00               	movlw	0
 18705   008CB6  0012               	return	
 18706   008CB8                     l21501:
 18707                           
 18708                           ;../../VLCBlib_PIC/event_teach_large.c: 1174:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 18709   008CB8  0100               	movlb	0	; () banked
 18710   008CBA  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18711   008CBC  6F9D               	movwf	??_numEv& (0+255),b
 18712   008CBE  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18713   008CC0  3B9D               	swapf	??_numEv& (0+255),f,b
 18714   008CC2  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18715   008CC4  0EF0               	movlw	240
 18716   008CC6  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18717   008CC8  519D               	movf	??_numEv& (0+255),w,b
 18718   008CCA  0B0F               	andlw	15
 18719   008CCC  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18720   008CCE  0EF0               	movlw	240
 18721   008CD0  179D               	andwf	??_numEv& (0+255),f,b
 18722   008CD2  0E80               	movlw	128
 18723   008CD4  259D               	addwf	??_numEv& (0+255),w,b
 18724   008CD6  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18725   008CD8  0EEF               	movlw	239
 18726   008CDA  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18727   008CDC  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18728   008CDE  C09F  F091         	movff	??_numEv+2,readNVM@index
 18729   008CE2  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18730   008CE6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18731   008CE8  0E01               	movlw	1
 18732   008CEA  EC0F  F05B         	call	_readNVM
 18733   008CEE  0100               	movlb	0	; () banked
 18734   008CF0  5191               	movf	?_readNVM& (0+255),w,b
 18735   008CF2  6FA2               	movwf	numEv@f& (0+255),b
 18736                           
 18737                           ;../../VLCBlib_PIC/event_teach_large.c: 1175:     while (f.continued) {
 18738   008CF4  D039               	goto	l21515
 18739   008CF6                     l21503:
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;../../VLCBlib_PIC/event_teach_large.c: 1176:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 18743   008CF6  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18744   008CF8  0D10               	mullw	16
 18745   008CFA  CFF3 F09D          	movff	prodl,??_numEv
 18746   008CFE  CFF4 F09E          	movff	prodh,??_numEv+1
 18747   008D02  0E81               	movlw	129
 18748   008D04  259D               	addwf	??_numEv& (0+255),w,b
 18749   008D06  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18750   008D08  0EEF               	movlw	239
 18751   008D0A  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18752   008D0C  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18753   008D0E  C09F  F091         	movff	??_numEv+2,readNVM@index
 18754   008D12  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18755   008D16  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18756   008D18  0E01               	movlw	1
 18757   008D1A  EC0F  F05B         	call	_readNVM
 18758   008D1E  0100               	movlb	0	; () banked
 18759   008D20  5191               	movf	?_readNVM& (0+255),w,b
 18760   008D22  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;../../VLCBlib_PIC/event_teach_large.c: 1177:         if (tableIndex == 0xff) {
 18764   008D24  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18765   008D26  B4D8               	btfsc	status,2,c
 18766   008D28  D7C5               	goto	u22060
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;../../VLCBlib_PIC/event_teach_large.c: 1180:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 18770   008D2A  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18771   008D2C  6F9D               	movwf	??_numEv& (0+255),b
 18772   008D2E  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18773   008D30  3B9D               	swapf	??_numEv& (0+255),f,b
 18774   008D32  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18775   008D34  0EF0               	movlw	240
 18776   008D36  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18777   008D38  519D               	movf	??_numEv& (0+255),w,b
 18778   008D3A  0B0F               	andlw	15
 18779   008D3C  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18780   008D3E  0EF0               	movlw	240
 18781   008D40  179D               	andwf	??_numEv& (0+255),f,b
 18782   008D42  0E80               	movlw	128
 18783   008D44  259D               	addwf	??_numEv& (0+255),w,b
 18784   008D46  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18785   008D48  0EEF               	movlw	239
 18786   008D4A  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18787   008D4C  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18788   008D4E  C09F  F091         	movff	??_numEv+2,readNVM@index
 18789   008D52  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18790   008D56  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18791   008D58  0E01               	movlw	1
 18792   008D5A  EC0F  F05B         	call	_readNVM
 18793   008D5E  0100               	movlb	0	; () banked
 18794   008D60  5191               	movf	?_readNVM& (0+255),w,b
 18795   008D62  6FA2               	movwf	numEv@f& (0+255),b
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;../../VLCBlib_PIC/event_teach_large.c: 1181:         num += 10;
 18799   008D64  0E0A               	movlw	10
 18800   008D66  27A1               	addwf	numEv@num& (0+255),f,b
 18801   008D68                     l21515:
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;../../VLCBlib_PIC/event_teach_large.c: 1175:     while (f.continued) {
 18805   008D68  B9A2               	btfsc	numEv@f& (0+255),4,b
 18806   008D6A  D7C5               	goto	l21503
 18807                           
 18808                           ; BSR set to: 0
 18809                           ;../../VLCBlib_PIC/event_teach_large.c: 1183:     num += f.eVsUsed;
 18810   008D6C  51A2               	movf	numEv@f& (0+255),w,b
 18811   008D6E  0B0F               	andlw	15
 18812   008D70  27A1               	addwf	numEv@num& (0+255),f,b
 18813                           
 18814                           ; BSR set to: 0
 18815                           ;../../VLCBlib_PIC/event_teach_large.c: 1184:     return num;
 18816   008D72  51A1               	movf	numEv@num& (0+255),w,b
 18817   008D74  0012               	return		;funcret
 18818   008D76                     __end_of_numEv:
 18819                           	callstack 0
 18820                           
 18821 ;; *************** function _tableIndexToEvtIdx *****************
 18822 ;; Defined at:
 18823 ;;		line 1286 in file "../../VLCBlib_PIC/event_teach_large.c"
 18824 ;; Parameters:    Size  Location     Type
 18825 ;;  tableIndex      1    wreg     unsigned char 
 18826 ;; Auto vars:     Size  Location     Type
 18827 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18828 ;; Return value:  Size  Location     Type
 18829 ;;                  1    wreg      unsigned char 
 18830 ;; Registers used:
 18831 ;;		wreg, status,2, status,0
 18832 ;; Tracked objects:
 18833 ;;		On entry : 0/0
 18834 ;;		On exit  : 0/0
 18835 ;;		Unchanged: 0/0
 18836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18838 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18840 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18841 ;;Total ram usage:        1 bytes
 18842 ;; Hardware stack levels used: 1
 18843 ;; Hardware stack levels required when called: 12
 18844 ;; This function calls:
 18845 ;;		Nothing
 18846 ;; This function is called by:
 18847 ;;		_nerdCallback
 18848 ;;		_reqevCallback
 18849 ;; This function uses a non-reentrant model
 18850 ;;
 18851                           
 18852                           	psect	text51
 18853   00C8A0                     __ptext51:
 18854                           	callstack 0
 18855   00C8A0                     _tableIndexToEvtIdx:
 18856                           	callstack 15
 18857                           
 18858                           ;incstack = 0
 18859                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18860   00C8A0  0100               	movlb	0	; () banked
 18861   00C8A2  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18862                           
 18863                           ;../../VLCBlib_PIC/event_teach_large.c: 1287:     return tableIndex + 1;
 18864   00C8A4  0100               	movlb	0	; () banked
 18865   00C8A6  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18866                           
 18867                           ; BSR set to: 0
 18868   00C8A8  0012               	return		;funcret
 18869   00C8AA                     __end_of_tableIndexToEvtIdx:
 18870                           	callstack 0
 18871                           
 18872 ;; *************** function _setNV *****************
 18873 ;; Defined at:
 18874 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 18875 ;; Parameters:    Size  Location     Type
 18876 ;;  index           1    wreg     unsigned char 
 18877 ;;  value           1   58[BANK1 ] unsigned char 
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;  index           1   62[BANK1 ] unsigned char 
 18880 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18881 ;; Return value:  Size  Location     Type
 18882 ;;                  1    wreg      unsigned char 
 18883 ;; Registers used:
 18884 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18885 ;; Tracked objects:
 18886 ;;		On entry : 0/0
 18887 ;;		On exit  : 0/0
 18888 ;;		Unchanged: 0/0
 18889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18890 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18891 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18892 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18893 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18894 ;;Total ram usage:        5 bytes
 18895 ;; Hardware stack levels used: 1
 18896 ;; Hardware stack levels required when called: 26
 18897 ;; This function calls:
 18898 ;;		_APP_nvValidate
 18899 ;;		_APP_nvValueChanged
 18900 ;;		_writeNVM
 18901 ;; This function is called by:
 18902 ;;		_nvProcessMessage
 18903 ;; This function uses a non-reentrant model
 18904 ;;
 18905                           
 18906                           	psect	text52
 18907   00ACBA                     __ptext52:
 18908                           	callstack 0
 18909   00ACBA                     _setNV:
 18910                           	callstack 2
 18911                           
 18912                           ; BSR set to: 0
 18913                           ;incstack = 0
 18914                           ;setNV@index stored from wreg
 18915   00ACBA  0101               	movlb	1	; () banked
 18916   00ACBC  6FFC               	movwf	setNV@index& (0+255),b
 18917                           
 18918                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > (15+7*16)) return CMDERR_INV_NV_IDX;
 18919   00ACBE  0E7F               	movlw	127
 18920   00ACC0  0101               	movlb	1	; () banked
 18921   00ACC2  65FC               	cpfsgt	setNV@index& (0+255),b
 18922   00ACC4  D002               	goto	l22429
 18923                           
 18924                           ; BSR set to: 1
 18925   00ACC6  0E0A               	movlw	10
 18926   00ACC8  0012               	return	
 18927   00ACCA                     l22429:
 18928                           
 18929                           ; BSR set to: 1
 18930                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18931   00ACCA  C1F8  F09F         	movff	setNV@value,APP_nvValidate@value
 18932   00ACCE  51FC               	movf	setNV@index& (0+255),w,b
 18933   00ACD0  ECC3  F057         	call	_APP_nvValidate
 18934   00ACD4  0900               	iorlw	0
 18935   00ACD6  A4D8               	btfss	status,2,c
 18936   00ACD8  D002               	goto	l22435
 18937   00ACDA  0E0C               	movlw	12
 18938   00ACDC  0012               	return	
 18939   00ACDE                     l22435:
 18940                           
 18941                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 18942   00ACDE  0E00               	movlw	low _nvCache
 18943   00ACE0  0101               	movlb	1	; () banked
 18944   00ACE2  25FC               	addwf	setNV@index& (0+255),w,b
 18945   00ACE4  6ED9               	movwf	fsr2l,c
 18946   00ACE6  6ADA               	clrf	fsr2h,c
 18947   00ACE8  0E04               	movlw	high _nvCache
 18948   00ACEA  22DA               	addwfc	fsr2h,f,c
 18949   00ACEC  50DF               	movf	indf2,w,c
 18950   00ACEE  6FFB               	movwf	setNV@oldValue& (0+255),b
 18951                           
 18952                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 18953   00ACF0  0E00               	movlw	low _nvCache
 18954   00ACF2  25FC               	addwf	setNV@index& (0+255),w,b
 18955   00ACF4  6ED9               	movwf	fsr2l,c
 18956   00ACF6  6ADA               	clrf	fsr2h,c
 18957   00ACF8  0E04               	movlw	high _nvCache
 18958   00ACFA  22DA               	addwfc	fsr2h,f,c
 18959   00ACFC  C1F8  FFDF         	movff	setNV@value,indf2
 18960                           
 18961                           ; BSR set to: 1
 18962                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18963   00AD00  0E80               	movlw	128
 18964   00AD02  25FC               	addwf	setNV@index& (0+255),w,b
 18965   00AD04  6FF9               	movwf	??_setNV& (0+255),b
 18966   00AD06  6BFA               	clrf	(??_setNV+1)& (0+255),b
 18967   00AD08  0EFF               	movlw	255
 18968   00AD0A  23FA               	addwfc	(??_setNV+1)& (0+255),f,b
 18969   00AD0C  C1F9  F0A4         	movff	??_setNV,writeNVM@index
 18970   00AD10  C1FA  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18971   00AD14  0100               	movlb	0	; () banked
 18972   00AD16  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18973   00AD18  C1F8  F0A7         	movff	setNV@value,writeNVM@value
 18974   00AD1C  0E01               	movlw	1
 18975   00AD1E  EC9F  F05D         	call	_writeNVM
 18976                           
 18977                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 18978   00AD22  C1F8  F1F1         	movff	setNV@value,APP_nvValueChanged@value
 18979   00AD26  C1FB  F1F2         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18980   00AD2A  0101               	movlb	1	; () banked
 18981   00AD2C  51FC               	movf	setNV@index& (0+255),w,b
 18982   00AD2E  ECB0  F014         	call	_APP_nvValueChanged
 18983                           
 18984                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 18985   00AD32  0E00               	movlw	0
 18986   00AD34  0012               	return		;funcret
 18987   00AD36                     __end_of_setNV:
 18988                           	callstack 0
 18989                           
 18990 ;; *************** function _APP_nvValueChanged *****************
 18991 ;; Defined at:
 18992 ;;		line 104 in file "../universalNv.c"
 18993 ;; Parameters:    Size  Location     Type
 18994 ;;  index           1    wreg     unsigned char 
 18995 ;;  value           1   51[BANK1 ] unsigned char 
 18996 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18997 ;; Auto vars:     Size  Location     Type
 18998 ;;  index           1   56[BANK1 ] unsigned char 
 18999 ;;  io              1   57[BANK1 ] unsigned char 
 19000 ;;  nv              1    0        unsigned char 
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  1    wreg      void 
 19003 ;; Registers used:
 19004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19005 ;; Tracked objects:
 19006 ;;		On entry : 0/0
 19007 ;;		On exit  : 0/0
 19008 ;;		Unchanged: 0/0
 19009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19010 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19011 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19012 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19013 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19014 ;;Total ram usage:        7 bytes
 19015 ;; Hardware stack levels used: 1
 19016 ;; Hardware stack levels required when called: 25
 19017 ;; This function calls:
 19018 ;;		___awdiv
 19019 ;;		___awmod
 19020 ;;		_getNV
 19021 ;;		_setBounceState
 19022 ;;		_setMultiState
 19023 ;;		_setServoPosition
 19024 ;;		_setServoState
 19025 ;;		_setTimedResponseDelay
 19026 ;;		_setType
 19027 ;;		_startBounceOutput
 19028 ;;		_startMultiOutput
 19029 ;;		_startServoOutput
 19030 ;; This function is called by:
 19031 ;;		_setNV
 19032 ;; This function uses a non-reentrant model
 19033 ;;
 19034                           
 19035                           	psect	text53
 19036   002960                     __ptext53:
 19037                           	callstack 0
 19038   002960                     _APP_nvValueChanged:
 19039                           	callstack 2
 19040                           
 19041                           ;incstack = 0
 19042                           ;APP_nvValueChanged@index stored from wreg
 19043   002960  0101               	movlb	1	; () banked
 19044   002962  6FF6               	movwf	APP_nvValueChanged@index& (0+255),b
 19045                           
 19046                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 19047   002964  0EF0               	movlw	240
 19048   002966  0101               	movlb	1	; () banked
 19049   002968  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19050   00296A  0100               	movlb	0	; () banked
 19051   00296C  6F8D               	movwf	___awmod@dividend& (0+255),b
 19052   00296E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19053   002970  0EFF               	movlw	255
 19054   002972  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19055   002974  0E00               	movlw	0
 19056   002976  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19057   002978  0E07               	movlw	7
 19058   00297A  6F8F               	movwf	___awmod@divisor& (0+255),b
 19059   00297C  EC6E  F058         	call	___awmod	;wreg free
 19060   002980  0100               	movlb	0	; () banked
 19061   002982  518D               	movf	?___awmod& (0+255),w,b
 19062   002984  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19063   002986  A4D8               	btfss	status,2,c
 19064   002988  D01B               	goto	l20933
 19065                           
 19066                           ; BSR set to: 0
 19067                           ;../universalNv.c: 110:         io = index-16;
 19068   00298A  0101               	movlb	1	; () banked
 19069   00298C  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19070   00298E  0FF0               	addlw	240
 19071   002990  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 19072                           
 19073                           ; BSR set to: 1
 19074                           ;../universalNv.c: 111:         io /= 7;
 19075   002992  C1F7  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 19076   002996  0100               	movlb	0	; () banked
 19077   002998  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19078   00299A  0E00               	movlw	0
 19079   00299C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19080   00299E  0E07               	movlw	7
 19081   0029A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 19082   0029A2  EC59  F054         	call	___awdiv	;wreg free
 19083   0029A6  0100               	movlb	0	; () banked
 19084   0029A8  5197               	movf	?___awdiv& (0+255),w,b
 19085   0029AA  0101               	movlb	1	; () banked
 19086   0029AC  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 19087                           
 19088                           ; BSR set to: 1
 19089                           ;../universalNv.c: 112:         if (oldValue != value) {
 19090   0029AE  51F1               	movf	APP_nvValueChanged@value& (0+255),w,b
 19091   0029B0  19F2               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 19092   0029B2  B4D8               	btfsc	status,2,c
 19093   0029B4  D005               	goto	l20933
 19094                           
 19095                           ; BSR set to: 1
 19096                           ;../universalNv.c: 113:             setType(io, value);
 19097   0029B6  C1F1  F1EE         	movff	APP_nvValueChanged@value,setType@type
 19098   0029BA  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19099   0029BC  EC4B  F05A         	call	_setType
 19100   0029C0                     l20933:
 19101                           
 19102                           ;../universalNv.c: 116:     if (index == 5) {
 19103   0029C0  0E05               	movlw	5
 19104   0029C2  0101               	movlb	1	; () banked
 19105   0029C4  19F6               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 19106   0029C6  A4D8               	btfss	status,2,c
 19107   0029C8  D003               	goto	l20937
 19108                           
 19109                           ; BSR set to: 1
 19110                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 19111   0029CA  51F1               	movf	APP_nvValueChanged@value& (0+255),w,b
 19112   0029CC  EC55  F064         	call	_setTimedResponseDelay
 19113   0029D0                     l20937:
 19114                           
 19115                           ;../universalNv.c: 121:     if (index == 4) {
 19116   0029D0  0E04               	movlw	4
 19117   0029D2  0101               	movlb	1	; () banked
 19118   0029D4  19F6               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 19119   0029D6  B4D8               	btfsc	status,2,c
 19120                           
 19121                           ; BSR set to: 1
 19122                           ;../universalNv.c: 122:         WPUB = value;
 19123   0029D8  C1F1  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 19124                           
 19125                           ; BSR set to: 1
 19126                           ;../universalNv.c: 215:     if (index >= 16) {
 19127   0029DC  0E0F               	movlw	15
 19128   0029DE  65F6               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 19129   0029E0  0012               	return	
 19130                           
 19131                           ; BSR set to: 1
 19132                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 19133   0029E2  0EF0               	movlw	240
 19134   0029E4  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19135   0029E6  0100               	movlb	0	; () banked
 19136   0029E8  6F97               	movwf	___awdiv@dividend& (0+255),b
 19137   0029EA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19138   0029EC  0EFF               	movlw	255
 19139   0029EE  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19140   0029F0  0E00               	movlw	0
 19141   0029F2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19142   0029F4  0E07               	movlw	7
 19143   0029F6  6F99               	movwf	___awdiv@divisor& (0+255),b
 19144   0029F8  EC59  F054         	call	___awdiv	;wreg free
 19145   0029FC  0100               	movlb	0	; () banked
 19146   0029FE  5197               	movf	?___awdiv& (0+255),w,b
 19147   002A00  0101               	movlb	1	; () banked
 19148   002A02  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 19149   002A04  0EF0               	movlw	240
 19150   002A06  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 19151   002A08  0100               	movlb	0	; () banked
 19152   002A0A  6F8D               	movwf	___awmod@dividend& (0+255),b
 19153   002A0C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19154   002A0E  0EFF               	movlw	255
 19155   002A10  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19156   002A12  0E00               	movlw	0
 19157   002A14  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19158   002A16  0E07               	movlw	7
 19159   002A18  6F8F               	movwf	___awmod@divisor& (0+255),b
 19160   002A1A  EC6E  F058         	call	___awmod	;wreg free
 19161                           
 19162                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 19163   002A1E  D1D3               	goto	l21015
 19164   002A20                     l20945:
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 19168   002A20  0101               	movlb	1	; () banked
 19169   002A22  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19170   002A24  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19171   002A26  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19172   002A28  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19173   002A2A  0D07               	mullw	7
 19174   002A2C  0E12               	movlw	18
 19175   002A2E  26F3               	addwf	243,f,c
 19176   002A30  0E00               	movlw	0
 19177   002A32  22F4               	addwfc	244,f,c
 19178   002A34  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19179   002A36  18F3               	xorwf	243,w,c
 19180   002A38  E113               	bnz	l20951
 19181   002A3A  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19182   002A3C  18F4               	xorwf	244,w,c
 19183   002A3E  A4D8               	btfss	status,2,c
 19184   002A40  D00F               	goto	l20951
 19185                           
 19186                           ; BSR set to: 1
 19187                           ;../universalNv.c: 233:                     setServoState(io, 2);
 19188   002A42  0E02               	movlw	2
 19189   002A44  0100               	movlb	0	; () banked
 19190   002A46  6F91               	movwf	setServoState@action& (0+255),b
 19191   002A48  0101               	movlb	1	; () banked
 19192   002A4A  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19193   002A4C  ECA6  F04D         	call	_setServoState
 19194                           
 19195                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 19196   002A50  0E02               	movlw	2
 19197   002A52  0100               	movlb	0	; () banked
 19198   002A54  6F91               	movwf	startServoOutput@action& (0+255),b
 19199   002A56  0101               	movlb	1	; () banked
 19200   002A58  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19201   002A5A  EC23  F04B         	call	_startServoOutput
 19202                           
 19203                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 19204   002A5E  0012               	return	
 19205   002A60                     l20951:
 19206                           
 19207                           ; BSR set to: 1
 19208   002A60  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19209   002A62  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19210   002A64  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19211   002A66  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19212   002A68  0D07               	mullw	7
 19213   002A6A  0E13               	movlw	19
 19214   002A6C  26F3               	addwf	243,f,c
 19215   002A6E  0E00               	movlw	0
 19216   002A70  22F4               	addwfc	244,f,c
 19217   002A72  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19218   002A74  18F3               	xorwf	243,w,c
 19219   002A76  E113               	bnz	l20957
 19220   002A78  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19221   002A7A  18F4               	xorwf	244,w,c
 19222   002A7C  A4D8               	btfss	status,2,c
 19223   002A7E  D00F               	goto	l20957
 19224                           
 19225                           ; BSR set to: 1
 19226                           ;../universalNv.c: 236:                     setServoState(io, 1);
 19227   002A80  0E01               	movlw	1
 19228   002A82  0100               	movlb	0	; () banked
 19229   002A84  6F91               	movwf	setServoState@action& (0+255),b
 19230   002A86  0101               	movlb	1	; () banked
 19231   002A88  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19232   002A8A  ECA6  F04D         	call	_setServoState
 19233                           
 19234                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 19235   002A8E  0E01               	movlw	1
 19236   002A90  0100               	movlb	0	; () banked
 19237   002A92  6F91               	movwf	startServoOutput@action& (0+255),b
 19238   002A94  0101               	movlb	1	; () banked
 19239   002A96  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19240   002A98  EC23  F04B         	call	_startServoOutput
 19241                           
 19242                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 19243   002A9C  0012               	return	
 19244   002A9E                     l20957:
 19245                           
 19246                           ; BSR set to: 1
 19247   002A9E  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19248   002AA0  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19249   002AA2  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19250   002AA4  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19251   002AA6  0D07               	mullw	7
 19252   002AA8  0E11               	movlw	17
 19253   002AAA  26F3               	addwf	243,f,c
 19254   002AAC  0E00               	movlw	0
 19255   002AAE  22F4               	addwfc	244,f,c
 19256   002AB0  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19257   002AB2  18F3               	xorwf	243,w,c
 19258   002AB4  E103               	bnz	u21491
 19259   002AB6  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19260   002AB8  18F4               	xorwf	244,w,c
 19261   002ABA  A4D8               	btfss	status,2,c
 19262   002ABC                     u21491:
 19263   002ABC  0012               	return	
 19264                           
 19265                           ; BSR set to: 1
 19266                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 19267   002ABE  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19268   002AC0  0012               	return	
 19269                           
 19270                           ; BSR set to: 1
 19271   002AC2  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19272   002AC4  0012               	return	
 19273                           
 19274                           ; BSR set to: 1
 19275                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 19276   002AC6  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19277   002AC8  0D07               	mullw	7
 19278   002ACA  50F3               	movf	243,w,c
 19279   002ACC  0F12               	addlw	18
 19280   002ACE  ECB0  F05F         	call	_getNV
 19281   002AD2  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19282   002AD6  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19283   002ADA  0E00               	movlw	0
 19284   002ADC  0100               	movlb	0	; () banked
 19285   002ADE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19286   002AE0  0E02               	movlw	2
 19287   002AE2  6F99               	movwf	___awdiv@divisor& (0+255),b
 19288   002AE4  EC59  F054         	call	___awdiv	;wreg free
 19289   002AE8  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 19290   002AEC  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19291   002AF0  0101               	movlb	1	; () banked
 19292   002AF2  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19293   002AF4  0D07               	mullw	7
 19294   002AF6  50F3               	movf	243,w,c
 19295   002AF8  0F13               	addlw	19
 19296   002AFA  ECB0  F05F         	call	_getNV
 19297   002AFE  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19298   002B02  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19299   002B06  0E00               	movlw	0
 19300   002B08  0100               	movlb	0	; () banked
 19301   002B0A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19302   002B0C  0E02               	movlw	2
 19303   002B0E  6F99               	movwf	___awdiv@divisor& (0+255),b
 19304   002B10  EC59  F054         	call	___awdiv	;wreg free
 19305   002B14  0100               	movlb	0	; () banked
 19306   002B16  5197               	movf	?___awdiv& (0+255),w,b
 19307   002B18  0101               	movlb	1	; () banked
 19308   002B1A  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19309   002B1C  0100               	movlb	0	; () banked
 19310   002B1E  6F9F               	movwf	setServoPosition@pos& (0+255),b
 19311   002B20  0101               	movlb	1	; () banked
 19312   002B22  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19313   002B24  ECE2  F062         	call	_setServoPosition
 19314                           
 19315                           ; BSR set to: 1
 19316                           
 19317                           ;../universalNv.c: 245:                 }
 19318   002B28  0012               	return	
 19319   002B2A                     l20965:
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 19323   002B2A  0101               	movlb	1	; () banked
 19324   002B2C  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19325   002B2E  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19326   002B30  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19327   002B32  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19328   002B34  0D07               	mullw	7
 19329   002B36  0E13               	movlw	19
 19330   002B38  26F3               	addwf	243,f,c
 19331   002B3A  0E00               	movlw	0
 19332   002B3C  22F4               	addwfc	244,f,c
 19333   002B3E  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19334   002B40  18F3               	xorwf	243,w,c
 19335   002B42  E113               	bnz	l20969
 19336   002B44  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19337   002B46  18F4               	xorwf	244,w,c
 19338   002B48  A4D8               	btfss	status,2,c
 19339   002B4A  D00F               	goto	l20969
 19340                           
 19341                           ; BSR set to: 1
 19342                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 19343   002B4C  0E02               	movlw	2
 19344   002B4E  0100               	movlb	0	; () banked
 19345   002B50  6F91               	movwf	setBounceState@action& (0+255),b
 19346   002B52  0101               	movlb	1	; () banked
 19347   002B54  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19348   002B56  ECFC  F04D         	call	_setBounceState
 19349                           
 19350                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 19351   002B5A  0E02               	movlw	2
 19352   002B5C  0100               	movlb	0	; () banked
 19353   002B5E  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19354   002B60  0101               	movlb	1	; () banked
 19355   002B62  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19356   002B64  ECE6  F059         	call	_startBounceOutput
 19357                           
 19358                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 19359   002B68  0012               	return	
 19360   002B6A                     l20969:
 19361                           
 19362                           ; BSR set to: 1
 19363   002B6A  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19364   002B6C  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19365   002B6E  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19366   002B70  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19367   002B72  0D07               	mullw	7
 19368   002B74  0E12               	movlw	18
 19369   002B76  26F3               	addwf	243,f,c
 19370   002B78  0E00               	movlw	0
 19371   002B7A  22F4               	addwfc	244,f,c
 19372   002B7C  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19373   002B7E  18F3               	xorwf	243,w,c
 19374   002B80  E113               	bnz	l20973
 19375   002B82  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19376   002B84  18F4               	xorwf	244,w,c
 19377   002B86  A4D8               	btfss	status,2,c
 19378   002B88  D00F               	goto	l20973
 19379                           
 19380                           ; BSR set to: 1
 19381                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 19382   002B8A  0E01               	movlw	1
 19383   002B8C  0100               	movlb	0	; () banked
 19384   002B8E  6F91               	movwf	setBounceState@action& (0+255),b
 19385   002B90  0101               	movlb	1	; () banked
 19386   002B92  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19387   002B94  ECFC  F04D         	call	_setBounceState
 19388                           
 19389                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 19390   002B98  0E01               	movlw	1
 19391   002B9A  0100               	movlb	0	; () banked
 19392   002B9C  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19393   002B9E  0101               	movlb	1	; () banked
 19394   002BA0  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19395   002BA2  ECE6  F059         	call	_startBounceOutput
 19396                           
 19397                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 19398   002BA6  0012               	return	
 19399   002BA8                     l20973:
 19400                           
 19401                           ; BSR set to: 1
 19402   002BA8  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19403   002BAA  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19404   002BAC  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19405   002BAE  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19406   002BB0  0D07               	mullw	7
 19407   002BB2  0E11               	movlw	17
 19408   002BB4  26F3               	addwf	243,f,c
 19409   002BB6  0E00               	movlw	0
 19410   002BB8  22F4               	addwfc	244,f,c
 19411   002BBA  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19412   002BBC  18F3               	xorwf	243,w,c
 19413   002BBE  E103               	bnz	u21541
 19414   002BC0  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19415   002BC2  18F4               	xorwf	244,w,c
 19416   002BC4  A4D8               	btfss	status,2,c
 19417   002BC6                     u21541:
 19418   002BC6  0012               	return	
 19419                           
 19420                           ; BSR set to: 1
 19421                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 19422   002BC8  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19423   002BCA  0012               	return	
 19424                           
 19425                           ; BSR set to: 1
 19426   002BCC  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19427   002BCE  0012               	return	
 19428                           
 19429                           ; BSR set to: 1
 19430                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 19431   002BD0  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19432   002BD2  0D07               	mullw	7
 19433   002BD4  50F3               	movf	243,w,c
 19434   002BD6  0F12               	addlw	18
 19435   002BD8  ECB0  F05F         	call	_getNV
 19436   002BDC  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19437   002BE0  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19438   002BE4  0E00               	movlw	0
 19439   002BE6  0100               	movlb	0	; () banked
 19440   002BE8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19441   002BEA  0E02               	movlw	2
 19442   002BEC  6F99               	movwf	___awdiv@divisor& (0+255),b
 19443   002BEE  EC59  F054         	call	___awdiv	;wreg free
 19444   002BF2  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 19445   002BF6  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19446   002BFA  0101               	movlb	1	; () banked
 19447   002BFC  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19448   002BFE  0D07               	mullw	7
 19449   002C00  50F3               	movf	243,w,c
 19450   002C02  0F13               	addlw	19
 19451   002C04  ECB0  F05F         	call	_getNV
 19452   002C08  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19453   002C0C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19454   002C10  0E00               	movlw	0
 19455   002C12  0100               	movlb	0	; () banked
 19456   002C14  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19457   002C16  0E02               	movlw	2
 19458   002C18  6F99               	movwf	___awdiv@divisor& (0+255),b
 19459   002C1A  EC59  F054         	call	___awdiv	;wreg free
 19460   002C1E  0100               	movlb	0	; () banked
 19461   002C20  5197               	movf	?___awdiv& (0+255),w,b
 19462   002C22  0101               	movlb	1	; () banked
 19463   002C24  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19464   002C26  6FF5               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19465   002C28  0E30               	movlw	low _currentPos
 19466   002C2A  25F7               	addwf	APP_nvValueChanged@io& (0+255),w,b
 19467   002C2C  6ED9               	movwf	fsr2l,c
 19468   002C2E  6ADA               	clrf	fsr2h,c
 19469   002C30  0E01               	movlw	high _currentPos
 19470   002C32  22DA               	addwfc	fsr2h,f,c
 19471   002C34  C1F5  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19472   002C38  0012               	return	
 19473   002C3A                     l20981:
 19474                           
 19475                           ; BSR set to: 0
 19476                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 19477   002C3A  0101               	movlb	1	; () banked
 19478   002C3C  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19479   002C3E  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19480   002C40  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19481   002C42  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19482   002C44  0D07               	mullw	7
 19483   002C46  0E13               	movlw	19
 19484   002C48  26F3               	addwf	243,f,c
 19485   002C4A  0E00               	movlw	0
 19486   002C4C  22F4               	addwfc	244,f,c
 19487   002C4E  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19488   002C50  18F3               	xorwf	243,w,c
 19489   002C52  E113               	bnz	l20987
 19490   002C54  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19491   002C56  18F4               	xorwf	244,w,c
 19492   002C58  A4D8               	btfss	status,2,c
 19493   002C5A  D00F               	goto	l20987
 19494                           
 19495                           ; BSR set to: 1
 19496                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 19497   002C5C  0E00               	movlw	0
 19498   002C5E  0100               	movlb	0	; () banked
 19499   002C60  6F91               	movwf	setMultiState@action& (0+255),b
 19500   002C62  0101               	movlb	1	; () banked
 19501   002C64  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19502   002C66  ECF6  F047         	call	_setMultiState
 19503                           
 19504                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 19505   002C6A  0E00               	movlw	0
 19506   002C6C  0100               	movlb	0	; () banked
 19507   002C6E  6F91               	movwf	startMultiOutput@action& (0+255),b
 19508   002C70  0101               	movlb	1	; () banked
 19509   002C72  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19510   002C74  ECE9  F050         	call	_startMultiOutput
 19511                           
 19512                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 19513   002C78  0012               	return	
 19514   002C7A                     l20987:
 19515                           
 19516                           ; BSR set to: 1
 19517   002C7A  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19518   002C7C  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19519   002C7E  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19520   002C80  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19521   002C82  0D07               	mullw	7
 19522   002C84  0E14               	movlw	20
 19523   002C86  26F3               	addwf	243,f,c
 19524   002C88  0E00               	movlw	0
 19525   002C8A  22F4               	addwfc	244,f,c
 19526   002C8C  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19527   002C8E  18F3               	xorwf	243,w,c
 19528   002C90  E113               	bnz	l20993
 19529   002C92  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19530   002C94  18F4               	xorwf	244,w,c
 19531   002C96  A4D8               	btfss	status,2,c
 19532   002C98  D00F               	goto	l20993
 19533                           
 19534                           ; BSR set to: 1
 19535                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 19536   002C9A  0E01               	movlw	1
 19537   002C9C  0100               	movlb	0	; () banked
 19538   002C9E  6F91               	movwf	setMultiState@action& (0+255),b
 19539   002CA0  0101               	movlb	1	; () banked
 19540   002CA2  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19541   002CA4  ECF6  F047         	call	_setMultiState
 19542                           
 19543                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 19544   002CA8  0E01               	movlw	1
 19545   002CAA  0100               	movlb	0	; () banked
 19546   002CAC  6F91               	movwf	startMultiOutput@action& (0+255),b
 19547   002CAE  0101               	movlb	1	; () banked
 19548   002CB0  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19549   002CB2  ECE9  F050         	call	_startMultiOutput
 19550                           
 19551                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 19552   002CB6  0012               	return	
 19553   002CB8                     l20993:
 19554                           
 19555                           ; BSR set to: 1
 19556   002CB8  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19557   002CBA  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19558   002CBC  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19559   002CBE  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19560   002CC0  0D07               	mullw	7
 19561   002CC2  0E15               	movlw	21
 19562   002CC4  26F3               	addwf	243,f,c
 19563   002CC6  0E00               	movlw	0
 19564   002CC8  22F4               	addwfc	244,f,c
 19565   002CCA  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19566   002CCC  18F3               	xorwf	243,w,c
 19567   002CCE  E113               	bnz	l20999
 19568   002CD0  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19569   002CD2  18F4               	xorwf	244,w,c
 19570   002CD4  A4D8               	btfss	status,2,c
 19571   002CD6  D00F               	goto	l20999
 19572                           
 19573                           ; BSR set to: 1
 19574                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19575   002CD8  0E02               	movlw	2
 19576   002CDA  0100               	movlb	0	; () banked
 19577   002CDC  6F91               	movwf	setMultiState@action& (0+255),b
 19578   002CDE  0101               	movlb	1	; () banked
 19579   002CE0  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19580   002CE2  ECF6  F047         	call	_setMultiState
 19581                           
 19582                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19583   002CE6  0E02               	movlw	2
 19584   002CE8  0100               	movlb	0	; () banked
 19585   002CEA  6F91               	movwf	startMultiOutput@action& (0+255),b
 19586   002CEC  0101               	movlb	1	; () banked
 19587   002CEE  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19588   002CF0  ECE9  F050         	call	_startMultiOutput
 19589                           
 19590                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19591   002CF4  0012               	return	
 19592   002CF6                     l20999:
 19593                           
 19594                           ; BSR set to: 1
 19595   002CF6  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19596   002CF8  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19597   002CFA  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19598   002CFC  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19599   002CFE  0D07               	mullw	7
 19600   002D00  0E16               	movlw	22
 19601   002D02  26F3               	addwf	243,f,c
 19602   002D04  0E00               	movlw	0
 19603   002D06  22F4               	addwfc	244,f,c
 19604   002D08  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19605   002D0A  18F3               	xorwf	243,w,c
 19606   002D0C  E113               	bnz	l21005
 19607   002D0E  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19608   002D10  18F4               	xorwf	244,w,c
 19609   002D12  A4D8               	btfss	status,2,c
 19610   002D14  D00F               	goto	l21005
 19611                           
 19612                           ; BSR set to: 1
 19613                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19614   002D16  0E03               	movlw	3
 19615   002D18  0100               	movlb	0	; () banked
 19616   002D1A  6F91               	movwf	setMultiState@action& (0+255),b
 19617   002D1C  0101               	movlb	1	; () banked
 19618   002D1E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19619   002D20  ECF6  F047         	call	_setMultiState
 19620                           
 19621                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19622   002D24  0E03               	movlw	3
 19623   002D26  0100               	movlb	0	; () banked
 19624   002D28  6F91               	movwf	startMultiOutput@action& (0+255),b
 19625   002D2A  0101               	movlb	1	; () banked
 19626   002D2C  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19627   002D2E  ECE9  F050         	call	_startMultiOutput
 19628                           
 19629                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19630   002D32  0012               	return	
 19631   002D34                     l21005:
 19632                           
 19633                           ; BSR set to: 1
 19634   002D34  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 19635   002D36  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 19636   002D38  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19637   002D3A  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19638   002D3C  0D07               	mullw	7
 19639   002D3E  0E11               	movlw	17
 19640   002D40  26F3               	addwf	243,f,c
 19641   002D42  0E00               	movlw	0
 19642   002D44  22F4               	addwfc	244,f,c
 19643   002D46  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 19644   002D48  18F3               	xorwf	243,w,c
 19645   002D4A  E154               	bnz	l814
 19646   002D4C  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19647   002D4E  18F4               	xorwf	244,w,c
 19648   002D50  A4D8               	btfss	status,2,c
 19649   002D52  0012               	return	
 19650                           
 19651                           ; BSR set to: 1
 19652                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19653   002D54  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19654   002D56  0012               	return	
 19655                           
 19656                           ; BSR set to: 1
 19657   002D58  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19658   002D5A  0012               	return	
 19659                           
 19660                           ; BSR set to: 1
 19661                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19662   002D5C  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19663   002D5E  0D07               	mullw	7
 19664   002D60  50F3               	movf	243,w,c
 19665   002D62  0F12               	addlw	18
 19666   002D64  ECB0  F05F         	call	_getNV
 19667   002D68  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19668   002D6C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19669   002D70  0E00               	movlw	0
 19670   002D72  0100               	movlb	0	; () banked
 19671   002D74  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19672   002D76  0E02               	movlw	2
 19673   002D78  6F99               	movwf	___awdiv@divisor& (0+255),b
 19674   002D7A  EC59  F054         	call	___awdiv	;wreg free
 19675   002D7E  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 19676   002D82  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19677   002D86  0101               	movlb	1	; () banked
 19678   002D88  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19679   002D8A  0D07               	mullw	7
 19680   002D8C  50F3               	movf	243,w,c
 19681   002D8E  0F13               	addlw	19
 19682   002D90  ECB0  F05F         	call	_getNV
 19683   002D94  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19684   002D98  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19685   002D9C  0E00               	movlw	0
 19686   002D9E  0100               	movlb	0	; () banked
 19687   002DA0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19688   002DA2  0E02               	movlw	2
 19689   002DA4  6F99               	movwf	___awdiv@divisor& (0+255),b
 19690   002DA6  EC59  F054         	call	___awdiv	;wreg free
 19691   002DAA  0100               	movlb	0	; () banked
 19692   002DAC  5197               	movf	?___awdiv& (0+255),w,b
 19693   002DAE  0101               	movlb	1	; () banked
 19694   002DB0  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19695   002DB2  6FF5               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19696   002DB4  0E30               	movlw	low _currentPos
 19697   002DB6  25F7               	addwf	APP_nvValueChanged@io& (0+255),w,b
 19698   002DB8  6ED9               	movwf	fsr2l,c
 19699   002DBA  6ADA               	clrf	fsr2h,c
 19700   002DBC  0E01               	movlw	high _currentPos
 19701   002DBE  22DA               	addwfc	fsr2h,f,c
 19702   002DC0  C1F5  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19703   002DC4  0012               	return	
 19704   002DC6                     l21015:
 19705   002DC6  0101               	movlb	1	; () banked
 19706   002DC8  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 19707   002DCA  0D07               	mullw	7
 19708   002DCC  50F3               	movf	243,w,c
 19709   002DCE  0F10               	addlw	16
 19710   002DD0  ECB0  F05F         	call	_getNV
 19711                           
 19712                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19713                           ; Switch size 1, requested type "simple"
 19714                           ; Number of cases is 1, Range of values is 0 to 0
 19715                           ; switch strategies available:
 19716                           ; Name         Instructions Cycles
 19717                           ; simple_byte            4     3 (average)
 19718                           ;	Chosen strategy is simple_byte
 19719   002DD4  0100               	movlb	0	; () banked
 19720   002DD6  518E               	movf	(?_getNV+1)& (0+255),w,b
 19721   002DD8  0A00               	xorlw	0	; case 0
 19722   002DDA  A4D8               	btfss	status,2,c
 19723   002DDC  0012               	return	
 19724                           
 19725                           ; BSR set to: 0
 19726                           ; Switch size 1, requested type "simple"
 19727                           ; Number of cases is 3, Range of values is 2 to 4
 19728                           ; switch strategies available:
 19729                           ; Name         Instructions Cycles
 19730                           ; simple_byte           10     6 (average)
 19731                           ;	Chosen strategy is simple_byte
 19732   002DDE  518D               	movf	?_getNV& (0+255),w,b
 19733   002DE0  0A02               	xorlw	2	; case 2
 19734   002DE2  B4D8               	btfsc	status,2,c
 19735   002DE4  D61D               	goto	l20945
 19736   002DE6  0A01               	xorlw	1	; case 3
 19737   002DE8  B4D8               	btfsc	status,2,c
 19738   002DEA  D69F               	goto	l20965
 19739   002DEC  0A07               	xorlw	7	; case 4
 19740   002DEE  A4D8               	btfss	status,2,c
 19741   002DF0  0012               	return	
 19742   002DF2  D723               	goto	l20981
 19743   002DF4                     l814:
 19744   002DF4  0012               	return		;funcret
 19745   002DF6                     __end_of_APP_nvValueChanged:
 19746                           	callstack 0
 19747                           
 19748 ;; *************** function _setTimedResponseDelay *****************
 19749 ;; Defined at:
 19750 ;;		line 901 in file "../../VLCBlib_PIC/vlcb.c"
 19751 ;; Parameters:    Size  Location     Type
 19752 ;;  delay           1    wreg     unsigned char 
 19753 ;; Auto vars:     Size  Location     Type
 19754 ;;  delay           1   45[BANK0 ] unsigned char 
 19755 ;; Return value:  Size  Location     Type
 19756 ;;                  1    wreg      void 
 19757 ;; Registers used:
 19758 ;;		wreg
 19759 ;; Tracked objects:
 19760 ;;		On entry : 0/0
 19761 ;;		On exit  : 0/0
 19762 ;;		Unchanged: 0/0
 19763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19765 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19767 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19768 ;;Total ram usage:        1 bytes
 19769 ;; Hardware stack levels used: 1
 19770 ;; Hardware stack levels required when called: 12
 19771 ;; This function calls:
 19772 ;;		Nothing
 19773 ;; This function is called by:
 19774 ;;		_setup
 19775 ;;		_APP_nvValueChanged
 19776 ;; This function uses a non-reentrant model
 19777 ;;
 19778                           
 19779                           	psect	text54
 19780   00C8AA                     __ptext54:
 19781                           	callstack 0
 19782   00C8AA                     _setTimedResponseDelay:
 19783                           	callstack 17
 19784                           
 19785                           ;incstack = 0
 19786                           ;setTimedResponseDelay@delay stored from wreg
 19787   00C8AA  0100               	movlb	0	; () banked
 19788   00C8AC  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19789                           
 19790                           ;../../VLCBlib_PIC/vlcb.c: 902:     timedResponseDelay = delay;
 19791   00C8AE  C08D  F164         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19792   00C8B2  0012               	return		;funcret
 19793   00C8B4                     __end_of_setTimedResponseDelay:
 19794                           	callstack 0
 19795                           
 19796 ;; *************** function _setServoPosition *****************
 19797 ;; Defined at:
 19798 ;;		line 702 in file "../servo.c"
 19799 ;; Parameters:    Size  Location     Type
 19800 ;;  io              1    wreg     unsigned char 
 19801 ;;  pos             1   63[BANK0 ] unsigned char 
 19802 ;; Auto vars:     Size  Location     Type
 19803 ;;  io              1   64[BANK0 ] unsigned char 
 19804 ;; Return value:  Size  Location     Type
 19805 ;;                  1    wreg      void 
 19806 ;; Registers used:
 19807 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19808 ;; Tracked objects:
 19809 ;;		On entry : 0/0
 19810 ;;		On exit  : 0/0
 19811 ;;		Unchanged: 0/0
 19812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19813 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19817 ;;Total ram usage:        2 bytes
 19818 ;; Hardware stack levels used: 1
 19819 ;; Hardware stack levels required when called: 12
 19820 ;; This function calls:
 19821 ;;		Nothing
 19822 ;; This function is called by:
 19823 ;;		_APP_nvValueChanged
 19824 ;;		_setOutputPosition
 19825 ;; This function uses a non-reentrant model
 19826 ;;
 19827                           
 19828                           	psect	text55
 19829   00C5C4                     __ptext55:
 19830                           	callstack 0
 19831   00C5C4                     _setServoPosition:
 19832                           	callstack 15
 19833                           
 19834                           ;incstack = 0
 19835                           ;setServoPosition@io stored from wreg
 19836   00C5C4  0100               	movlb	0	; () banked
 19837   00C5C6  6FA0               	movwf	setServoPosition@io& (0+255),b
 19838                           
 19839                           ;../servo.c: 703:     targetPos[io] = pos;
 19840   00C5C8  0100               	movlb	0	; () banked
 19841   00C5CA  51A0               	movf	setServoPosition@io& (0+255),w,b
 19842   00C5CC  0F01               	addlw	low _targetPos
 19843   00C5CE  6ED9               	movwf	fsr2l,c
 19844   00C5D0  6ADA               	clrf	fsr2h,c
 19845   00C5D2  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19846                           
 19847                           ;../servo.c: 704:     currentPos[io] = pos;
 19848   00C5D6  0E30               	movlw	low _currentPos
 19849   00C5D8  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19850   00C5DA  6ED9               	movwf	fsr2l,c
 19851   00C5DC  6ADA               	clrf	fsr2h,c
 19852   00C5DE  0E01               	movlw	high _currentPos
 19853   00C5E0  22DA               	addwfc	fsr2h,f,c
 19854   00C5E2  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19855                           
 19856                           ; BSR set to: 0
 19857   00C5E6  0012               	return		;funcret
 19858   00C5E8                     __end_of_setServoPosition:
 19859                           	callstack 0
 19860                           
 19861 ;; *************** function _APP_nvValidate *****************
 19862 ;; Defined at:
 19863 ;;		line 299 in file "../universalNv.c"
 19864 ;; Parameters:    Size  Location     Type
 19865 ;;  index           1    wreg     unsigned char 
 19866 ;;  value           1   63[BANK0 ] unsigned char 
 19867 ;; Auto vars:     Size  Location     Type
 19868 ;;  index           1   64[BANK0 ] unsigned char 
 19869 ;;  io              1    0        unsigned char 
 19870 ;; Return value:  Size  Location     Type
 19871 ;;                  1    wreg      enum E12929
 19872 ;; Registers used:
 19873 ;;		wreg, status,2, status,0, cstack
 19874 ;; Tracked objects:
 19875 ;;		On entry : 0/0
 19876 ;;		On exit  : 0/0
 19877 ;;		Unchanged: 0/0
 19878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19879 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19880 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19883 ;;Total ram usage:        2 bytes
 19884 ;; Hardware stack levels used: 1
 19885 ;; Hardware stack levels required when called: 13
 19886 ;; This function calls:
 19887 ;;		___awdiv
 19888 ;;		___awmod
 19889 ;; This function is called by:
 19890 ;;		_setNV
 19891 ;; This function uses a non-reentrant model
 19892 ;;
 19893                           
 19894                           	psect	text56
 19895   00AF86                     __ptext56:
 19896                           	callstack 0
 19897   00AF86                     _APP_nvValidate:
 19898                           	callstack 14
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;incstack = 0
 19902                           ;APP_nvValidate@index stored from wreg
 19903   00AF86  0100               	movlb	0	; () banked
 19904   00AF88  6FA0               	movwf	APP_nvValidate@index& (0+255),b
 19905                           
 19906                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19907   00AF8A  0E0F               	movlw	15
 19908   00AF8C  0100               	movlb	0	; () banked
 19909   00AF8E  65A0               	cpfsgt	APP_nvValidate@index& (0+255),b
 19910   00AF90  D031               	goto	l820
 19911                           
 19912                           ; BSR set to: 0
 19913   00AF92  0EF0               	movlw	240
 19914   00AF94  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19915   00AF96  6F8D               	movwf	___awmod@dividend& (0+255),b
 19916   00AF98  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19917   00AF9A  0EFF               	movlw	255
 19918   00AF9C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19919   00AF9E  0E00               	movlw	0
 19920   00AFA0  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19921   00AFA2  0E07               	movlw	7
 19922   00AFA4  6F8F               	movwf	___awmod@divisor& (0+255),b
 19923   00AFA6  EC6E  F058         	call	___awmod	;wreg free
 19924   00AFAA  0100               	movlb	0	; () banked
 19925   00AFAC  518D               	movf	?___awmod& (0+255),w,b
 19926   00AFAE  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19927   00AFB0  A4D8               	btfss	status,2,c
 19928   00AFB2  D020               	goto	l820
 19929                           
 19930                           ; BSR set to: 0
 19931   00AFB4  0EF0               	movlw	240
 19932   00AFB6  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19933   00AFB8  6F97               	movwf	___awdiv@dividend& (0+255),b
 19934   00AFBA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19935   00AFBC  0EFF               	movlw	255
 19936   00AFBE  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19937   00AFC0  0E00               	movlw	0
 19938   00AFC2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19939   00AFC4  0E07               	movlw	7
 19940   00AFC6  6F99               	movwf	___awdiv@divisor& (0+255),b
 19941   00AFC8  EC59  F054         	call	___awdiv	;wreg free
 19942                           
 19943                           ;../universalNv.c: 308:         switch (value) {
 19944   00AFCC  D002               	goto	l21035
 19945   00AFCE                     l21029:
 19946                           
 19947                           ; BSR set to: 0
 19948                           ;../universalNv.c: 331:                 return INVALID;
 19949   00AFCE  0E00               	movlw	0
 19950   00AFD0  0012               	return	
 19951   00AFD2                     l21035:
 19952   00AFD2  0100               	movlb	0	; () banked
 19953   00AFD4  519F               	movf	APP_nvValidate@value& (0+255),w,b
 19954                           
 19955                           ; Switch size 1, requested type "simple"
 19956                           ; Number of cases is 5, Range of values is 0 to 4
 19957                           ; switch strategies available:
 19958                           ; Name         Instructions Cycles
 19959                           ; simple_byte           16     9 (average)
 19960                           ;	Chosen strategy is simple_byte
 19961   00AFD6  0A00               	xorlw	0	; case 0
 19962   00AFD8  B4D8               	btfsc	status,2,c
 19963   00AFDA  D00C               	goto	l820
 19964   00AFDC  0A01               	xorlw	1	; case 1
 19965   00AFDE  B4D8               	btfsc	status,2,c
 19966   00AFE0  D009               	goto	l820
 19967   00AFE2  0A03               	xorlw	3	; case 2
 19968   00AFE4  B4D8               	btfsc	status,2,c
 19969   00AFE6  D006               	goto	l820
 19970   00AFE8  0A01               	xorlw	1	; case 3
 19971   00AFEA  B4D8               	btfsc	status,2,c
 19972   00AFEC  D003               	goto	l820
 19973   00AFEE  0A07               	xorlw	7	; case 4
 19974   00AFF0  A4D8               	btfss	status,2,c
 19975   00AFF2  D7ED               	goto	l21029
 19976   00AFF4                     l820:
 19977                           
 19978                           ; BSR set to: 0
 19979                           ;../universalNv.c: 334:     return VALID;
 19980                           
 19981                           ; BSR set to: 0
 19982   00AFF4  0E01               	movlw	1
 19983                           
 19984                           ; BSR set to: 0
 19985   00AFF6  0012               	return		;funcret
 19986   00AFF8                     __end_of_APP_nvValidate:
 19987                           	callstack 0
 19988                           
 19989 ;; *************** function _producerEsdData *****************
 19990 ;; Defined at:
 19991 ;;		line 194 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19992 ;; Parameters:    Size  Location     Type
 19993 ;;  index           1    wreg     unsigned char 
 19994 ;; Auto vars:     Size  Location     Type
 19995 ;;  index           1   45[BANK0 ] unsigned char 
 19996 ;; Return value:  Size  Location     Type
 19997 ;;                  1    wreg      unsigned char 
 19998 ;; Registers used:
 19999 ;;		wreg, status,2, status,0
 20000 ;; Tracked objects:
 20001 ;;		On entry : 0/0
 20002 ;;		On exit  : 0/0
 20003 ;;		Unchanged: 0/0
 20004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20008 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20009 ;;Total ram usage:        1 bytes
 20010 ;; Hardware stack levels used: 1
 20011 ;; Hardware stack levels required when called: 12
 20012 ;; This function calls:
 20013 ;;		Nothing
 20014 ;; This function is called by:
 20015 ;;		_mnsProcessMessage
 20016 ;; This function uses a non-reentrant model
 20017 ;;
 20018                           
 20019                           	psect	text57
 20020   00C69C                     __ptext57:
 20021                           	callstack 0
 20022   00C69C                     _producerEsdData:
 20023                           	callstack 16
 20024                           
 20025                           ; BSR set to: 0
 20026                           ;incstack = 0
 20027                           ;producerEsdData@index stored from wreg
 20028   00C69C  0100               	movlb	0	; () banked
 20029   00C69E  6F8D               	movwf	producerEsdData@index& (0+255),b
 20030                           
 20031                           ;../../VLCBlib_PIC/event_producer_happening.c: 195:     switch (index){
 20032   00C6A0  D004               	goto	l23067
 20033   00C6A2                     l23053:
 20034                           
 20035                           ; BSR set to: 0
 20036                           ;../../VLCBlib_PIC/event_producer_happening.c: 197:             return PRODUCER_EV_HAPPE
      +                          NING;
 20037   00C6A2  0E01               	movlw	1
 20038   00C6A4  0012               	return	
 20039   00C6A6                     l23061:
 20040                           
 20041                           ; BSR set to: 0
 20042                           ;../../VLCBlib_PIC/event_producer_happening.c: 201:             return 0;
 20043   00C6A6  0E00               	movlw	0
 20044   00C6A8  0012               	return	
 20045   00C6AA                     l23067:
 20046   00C6AA  0100               	movlb	0	; () banked
 20047   00C6AC  518D               	movf	producerEsdData@index& (0+255),w,b
 20048                           
 20049                           ; Switch size 1, requested type "simple"
 20050                           ; Number of cases is 2, Range of values is 0 to 1
 20051                           ; switch strategies available:
 20052                           ; Name         Instructions Cycles
 20053                           ; simple_byte            7     4 (average)
 20054                           ;	Chosen strategy is simple_byte
 20055   00C6AE  0A00               	xorlw	0	; case 0
 20056   00C6B0  B4D8               	btfsc	status,2,c
 20057   00C6B2  D7F7               	goto	l23053
 20058   00C6B4  0A01               	xorlw	1	; case 1
 20059   00C6B6  B4D8               	btfsc	status,2,c
 20060   00C6B8  D7F4               	goto	l23053
 20061   00C6BA  D7F5               	goto	l23061
 20062   00C6BC                     __end_of_producerEsdData:
 20063                           	callstack 0
 20064                           
 20065 ;; *************** function _canEsdData *****************
 20066 ;; Defined at:
 20067 ;;		line 422 in file "../../VLCBlib_PIC/can18_ecan.c"
 20068 ;; Parameters:    Size  Location     Type
 20069 ;;  id              1    wreg     unsigned char 
 20070 ;; Auto vars:     Size  Location     Type
 20071 ;;  id              1   45[BANK0 ] unsigned char 
 20072 ;; Return value:  Size  Location     Type
 20073 ;;                  1    wreg      unsigned char 
 20074 ;; Registers used:
 20075 ;;		wreg, status,2, status,0
 20076 ;; Tracked objects:
 20077 ;;		On entry : 0/0
 20078 ;;		On exit  : 0/0
 20079 ;;		Unchanged: 0/0
 20080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20082 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20084 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20085 ;;Total ram usage:        1 bytes
 20086 ;; Hardware stack levels used: 1
 20087 ;; Hardware stack levels required when called: 12
 20088 ;; This function calls:
 20089 ;;		Nothing
 20090 ;; This function is called by:
 20091 ;;		_mnsProcessMessage
 20092 ;; This function uses a non-reentrant model
 20093 ;;
 20094                           
 20095                           	psect	text58
 20096   00C772                     __ptext58:
 20097                           	callstack 0
 20098   00C772                     _canEsdData:
 20099                           	callstack 16
 20100                           
 20101                           ; BSR set to: 0
 20102                           ;incstack = 0
 20103                           ;canEsdData@id stored from wreg
 20104   00C772  0100               	movlb	0	; () banked
 20105   00C774  6F8D               	movwf	canEsdData@id& (0+255),b
 20106                           
 20107                           ;../../VLCBlib_PIC/can18_ecan.c: 423:     switch(id) {
 20108   00C776  D004               	goto	l22703
 20109   00C778                     l22693:
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;../../VLCBlib_PIC/can18_ecan.c: 425:             return CAN_HW_PIC_ECAN;
 20113   00C778  0E01               	movlw	1
 20114   00C77A  0012               	return	
 20115   00C77C                     l22697:
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;../../VLCBlib_PIC/can18_ecan.c: 427:             return 0;
 20119   00C77C  0E00               	movlw	0
 20120   00C77E  0012               	return	
 20121   00C780                     l22703:
 20122   00C780  0100               	movlb	0	; () banked
 20123   00C782  518D               	movf	canEsdData@id& (0+255),w,b
 20124                           
 20125                           ; Switch size 1, requested type "simple"
 20126                           ; Number of cases is 1, Range of values is 1 to 1
 20127                           ; switch strategies available:
 20128                           ; Name         Instructions Cycles
 20129                           ; simple_byte            4     3 (average)
 20130                           ;	Chosen strategy is simple_byte
 20131   00C784  0A01               	xorlw	1	; case 1
 20132   00C786  B4D8               	btfsc	status,2,c
 20133   00C788  D7F7               	goto	l22693
 20134   00C78A  D7F8               	goto	l22697
 20135   00C78C                     __end_of_canEsdData:
 20136                           	callstack 0
 20137                           
 20138 ;; *************** function _nvGetESDdata *****************
 20139 ;; Defined at:
 20140 ;;		line 355 in file "../../VLCBlib_PIC/nv.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  id              1    wreg     unsigned char 
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;  id              1   45[BANK0 ] unsigned char 
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  1    wreg      unsigned char 
 20147 ;; Registers used:
 20148 ;;		wreg, status,2, status,0
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/0
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20155 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20157 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20158 ;;Total ram usage:        1 bytes
 20159 ;; Hardware stack levels used: 1
 20160 ;; Hardware stack levels required when called: 12
 20161 ;; This function calls:
 20162 ;;		Nothing
 20163 ;; This function is called by:
 20164 ;;		_mnsProcessMessage
 20165 ;; This function uses a non-reentrant model
 20166 ;;
 20167                           
 20168                           	psect	text59
 20169   00C78C                     __ptext59:
 20170                           	callstack 0
 20171   00C78C                     _nvGetESDdata:
 20172                           	callstack 16
 20173                           
 20174                           ; BSR set to: 0
 20175                           ;incstack = 0
 20176                           ;nvGetESDdata@id stored from wreg
 20177   00C78C  0100               	movlb	0	; () banked
 20178   00C78E  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 20179                           
 20180                           ;../../VLCBlib_PIC/nv.c: 356:     switch (id) {
 20181   00C790  D004               	goto	l22457
 20182   00C792                     l22447:
 20183                           
 20184                           ; BSR set to: 0
 20185   00C792  0E7F               	movlw	127
 20186   00C794  0012               	return	
 20187   00C796                     l22451:
 20188                           
 20189                           ; BSR set to: 0
 20190   00C796  0E00               	movlw	0
 20191   00C798  0012               	return	
 20192   00C79A                     l22457:
 20193   00C79A  0100               	movlb	0	; () banked
 20194   00C79C  518D               	movf	nvGetESDdata@id& (0+255),w,b
 20195                           
 20196                           ; Switch size 1, requested type "simple"
 20197                           ; Number of cases is 1, Range of values is 1 to 1
 20198                           ; switch strategies available:
 20199                           ; Name         Instructions Cycles
 20200                           ; simple_byte            4     3 (average)
 20201                           ;	Chosen strategy is simple_byte
 20202   00C79E  0A01               	xorlw	1	; case 1
 20203   00C7A0  B4D8               	btfsc	status,2,c
 20204   00C7A2  D7F7               	goto	l22447
 20205   00C7A4  D7F8               	goto	l22451
 20206   00C7A6                     __end_of_nvGetESDdata:
 20207                           	callstack 0
 20208                           
 20209 ;; *************** function _bootEsdData *****************
 20210 ;; Defined at:
 20211 ;;		line 257 in file "../../VLCBlib_PIC/boot.c"
 20212 ;; Parameters:    Size  Location     Type
 20213 ;;  id              1    wreg     unsigned char 
 20214 ;; Auto vars:     Size  Location     Type
 20215 ;;  id              1   45[BANK0 ] unsigned char 
 20216 ;; Return value:  Size  Location     Type
 20217 ;;                  1    wreg      unsigned char 
 20218 ;; Registers used:
 20219 ;;		wreg, status,2, status,0
 20220 ;; Tracked objects:
 20221 ;;		On entry : 0/0
 20222 ;;		On exit  : 0/0
 20223 ;;		Unchanged: 0/0
 20224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20226 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20228 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20229 ;;Total ram usage:        1 bytes
 20230 ;; Hardware stack levels used: 1
 20231 ;; Hardware stack levels required when called: 12
 20232 ;; This function calls:
 20233 ;;		Nothing
 20234 ;; This function is called by:
 20235 ;;		_mnsProcessMessage
 20236 ;; This function uses a non-reentrant model
 20237 ;;
 20238                           
 20239                           	psect	text60
 20240   00C5E8                     __ptext60:
 20241                           	callstack 0
 20242   00C5E8                     _bootEsdData:
 20243                           	callstack 16
 20244                           
 20245                           ; BSR set to: 0
 20246                           ;incstack = 0
 20247                           ;bootEsdData@id stored from wreg
 20248   00C5E8  0100               	movlb	0	; () banked
 20249   00C5EA  6F8D               	movwf	bootEsdData@id& (0+255),b
 20250                           
 20251                           ;../../VLCBlib_PIC/boot.c: 258:     switch (id) {
 20252   00C5EC  D006               	goto	l22317
 20253   00C5EE                     l1285:
 20254                           
 20255                           ; BSR set to: 0
 20256                           ;../../VLCBlib_PIC/boot.c: 261:             return bootloaderType;
 20257   00C5EE  51C8               	movf	_bootloaderType& (0+255),w,b
 20258   00C5F0  0012               	return	
 20259   00C5F2                     l1287:
 20260                           
 20261                           ; BSR set to: 0
 20262                           ;../../VLCBlib_PIC/boot.c: 264:             return bootloaderVersion;
 20263   00C5F2  51C7               	movf	_bootloaderVersion& (0+255),w,b
 20264   00C5F4  0012               	return	
 20265   00C5F6                     l22311:
 20266                           
 20267                           ; BSR set to: 0
 20268                           ;../../VLCBlib_PIC/boot.c: 266:             return 0;
 20269   00C5F6  0E00               	movlw	0
 20270   00C5F8  0012               	return	
 20271   00C5FA                     l22317:
 20272   00C5FA  0100               	movlb	0	; () banked
 20273   00C5FC  518D               	movf	bootEsdData@id& (0+255),w,b
 20274                           
 20275                           ; Switch size 1, requested type "simple"
 20276                           ; Number of cases is 2, Range of values is 1 to 2
 20277                           ; switch strategies available:
 20278                           ; Name         Instructions Cycles
 20279                           ; simple_byte            7     4 (average)
 20280                           ;	Chosen strategy is simple_byte
 20281   00C5FE  0A01               	xorlw	1	; case 1
 20282   00C600  B4D8               	btfsc	status,2,c
 20283   00C602  D7F5               	goto	l1285
 20284   00C604  0A03               	xorlw	3	; case 2
 20285   00C606  B4D8               	btfsc	status,2,c
 20286   00C608  D7F4               	goto	l1287
 20287   00C60A  D7F5               	goto	l22311
 20288   00C60C                     __end_of_bootEsdData:
 20289                           	callstack 0
 20290                           
 20291 ;; *************** function _consumer2QEsdData *****************
 20292 ;; Defined at:
 20293 ;;		line 364 in file "../event_consumerDualActionQueue.c"
 20294 ;; Parameters:    Size  Location     Type
 20295 ;;  index           1    wreg     unsigned char 
 20296 ;; Auto vars:     Size  Location     Type
 20297 ;;  index           1   45[BANK0 ] unsigned char 
 20298 ;; Return value:  Size  Location     Type
 20299 ;;                  1    wreg      unsigned char 
 20300 ;; Registers used:
 20301 ;;		wreg, status,2, status,0
 20302 ;; Tracked objects:
 20303 ;;		On entry : 0/0
 20304 ;;		On exit  : 0/0
 20305 ;;		Unchanged: 0/0
 20306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20311 ;;Total ram usage:        1 bytes
 20312 ;; Hardware stack levels used: 1
 20313 ;; Hardware stack levels required when called: 12
 20314 ;; This function calls:
 20315 ;;		Nothing
 20316 ;; This function is called by:
 20317 ;;		_mnsProcessMessage
 20318 ;; This function uses a non-reentrant model
 20319 ;;
 20320                           
 20321                           	psect	text61
 20322   00C6BC                     __ptext61:
 20323                           	callstack 0
 20324   00C6BC                     _consumer2QEsdData:
 20325                           	callstack 16
 20326                           
 20327                           ; BSR set to: 0
 20328                           ;incstack = 0
 20329                           ;consumer2QEsdData@index stored from wreg
 20330   00C6BC  0100               	movlb	0	; () banked
 20331   00C6BE  6F8D               	movwf	consumer2QEsdData@index& (0+255),b
 20332                           
 20333                           ;../event_consumerDualActionQueue.c: 365:     switch (index){
 20334   00C6C0  D004               	goto	l21743
 20335   00C6C2                     l21729:
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;../event_consumerDualActionQueue.c: 367:             return CONSUMER_EV_ACTIONS;
 20339   00C6C2  0E01               	movlw	1
 20340   00C6C4  0012               	return	
 20341   00C6C6                     l21737:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;../event_consumerDualActionQueue.c: 371:             return 0;
 20345   00C6C6  0E00               	movlw	0
 20346   00C6C8  0012               	return	
 20347   00C6CA                     l21743:
 20348   00C6CA  0100               	movlb	0	; () banked
 20349   00C6CC  518D               	movf	consumer2QEsdData@index& (0+255),w,b
 20350                           
 20351                           ; Switch size 1, requested type "simple"
 20352                           ; Number of cases is 2, Range of values is 0 to 1
 20353                           ; switch strategies available:
 20354                           ; Name         Instructions Cycles
 20355                           ; simple_byte            7     4 (average)
 20356                           ;	Chosen strategy is simple_byte
 20357   00C6CE  0A00               	xorlw	0	; case 0
 20358   00C6D0  B4D8               	btfsc	status,2,c
 20359   00C6D2  D7F7               	goto	l21729
 20360   00C6D4  0A01               	xorlw	1	; case 1
 20361   00C6D6  B4D8               	btfsc	status,2,c
 20362   00C6D8  D7F4               	goto	l21729
 20363   00C6DA  D7F5               	goto	l21737
 20364   00C6DC                     __end_of_consumer2QEsdData:
 20365                           	callstack 0
 20366                           
 20367 ;; *************** function _teachGetESDdata *****************
 20368 ;; Defined at:
 20369 ;;		line 530 in file "../../VLCBlib_PIC/event_teach_large.c"
 20370 ;; Parameters:    Size  Location     Type
 20371 ;;  id              1    wreg     unsigned char 
 20372 ;; Auto vars:     Size  Location     Type
 20373 ;;  id              1   45[BANK0 ] unsigned char 
 20374 ;; Return value:  Size  Location     Type
 20375 ;;                  1    wreg      unsigned char 
 20376 ;; Registers used:
 20377 ;;		wreg, status,2, status,0
 20378 ;; Tracked objects:
 20379 ;;		On entry : 0/0
 20380 ;;		On exit  : 0/0
 20381 ;;		Unchanged: 0/0
 20382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20384 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20386 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20387 ;;Total ram usage:        1 bytes
 20388 ;; Hardware stack levels used: 1
 20389 ;; Hardware stack levels required when called: 12
 20390 ;; This function calls:
 20391 ;;		Nothing
 20392 ;; This function is called by:
 20393 ;;		_mnsProcessMessage
 20394 ;; This function uses a non-reentrant model
 20395 ;;
 20396                           
 20397                           	psect	text62
 20398   00C60C                     __ptext62:
 20399                           	callstack 0
 20400   00C60C                     _teachGetESDdata:
 20401                           	callstack 16
 20402                           
 20403                           ; BSR set to: 0
 20404                           ;incstack = 0
 20405                           ;teachGetESDdata@id stored from wreg
 20406   00C60C  0100               	movlb	0	; () banked
 20407   00C60E  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 20408                           
 20409                           ;../../VLCBlib_PIC/event_teach_large.c: 531:     switch (id) {
 20410   00C610  D006               	goto	l23011
 20411   00C612                     l22997:
 20412                           
 20413                           ; BSR set to: 0
 20414   00C612  0EFF               	movlw	255
 20415   00C614  0012               	return	
 20416   00C616                     l23001:
 20417                           
 20418                           ; BSR set to: 0
 20419   00C616  0E14               	movlw	20
 20420   00C618  0012               	return	
 20421   00C61A                     l23005:
 20422                           
 20423                           ; BSR set to: 0
 20424   00C61A  0E00               	movlw	0
 20425   00C61C  0012               	return	
 20426   00C61E                     l23011:
 20427   00C61E  0100               	movlb	0	; () banked
 20428   00C620  518D               	movf	teachGetESDdata@id& (0+255),w,b
 20429                           
 20430                           ; Switch size 1, requested type "simple"
 20431                           ; Number of cases is 2, Range of values is 1 to 2
 20432                           ; switch strategies available:
 20433                           ; Name         Instructions Cycles
 20434                           ; simple_byte            7     4 (average)
 20435                           ;	Chosen strategy is simple_byte
 20436   00C622  0A01               	xorlw	1	; case 1
 20437   00C624  B4D8               	btfsc	status,2,c
 20438   00C626  D7F5               	goto	l22997
 20439   00C628  0A03               	xorlw	3	; case 2
 20440   00C62A  B4D8               	btfsc	status,2,c
 20441   00C62C  D7F4               	goto	l23001
 20442   00C62E  D7F5               	goto	l23005
 20443   00C630                     __end_of_teachGetESDdata:
 20444                           	callstack 0
 20445                           
 20446 ;; *************** function _producerGetDiagnostic *****************
 20447 ;; Defined at:
 20448 ;;		line 180 in file "../../VLCBlib_PIC/event_producer_happening.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;  index           1    wreg     unsigned char 
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;  index           1   57[BANK0 ] unsigned char 
 20453 ;; Return value:  Size  Location     Type
 20454 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20455 ;; Registers used:
 20456 ;;		wreg, status,2, status,0, prodl, prodh
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/0
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20462 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20465 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20466 ;;Total ram usage:        3 bytes
 20467 ;; Hardware stack levels used: 1
 20468 ;; Hardware stack levels required when called: 12
 20469 ;; This function calls:
 20470 ;;		Nothing
 20471 ;; This function is called by:
 20472 ;;		_mnsTRallDiagnosticsCallback
 20473 ;;		_mnsProcessMessage
 20474 ;; This function uses a non-reentrant model
 20475 ;;
 20476                           
 20477                           	psect	text63
 20478   00C40E                     __ptext63:
 20479                           	callstack 0
 20480   00C40E                     _producerGetDiagnostic:
 20481                           	callstack 15
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;incstack = 0
 20485                           ;producerGetDiagnostic@index stored from wreg
 20486   00C40E  0100               	movlb	0	; () banked
 20487   00C410  6F99               	movwf	producerGetDiagnostic@index& (0+255),b
 20488                           
 20489                           ;../../VLCBlib_PIC/event_producer_happening.c: 181:     if (index > 1) {
 20490   00C412  0E01               	movlw	1
 20491   00C414  0100               	movlb	0	; () banked
 20492   00C416  6599               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 20493   00C418  D005               	goto	l21541
 20494                           
 20495                           ; BSR set to: 0
 20496                           ;../../VLCBlib_PIC/event_producer_happening.c: 182:         return ((void*)0);
 20497   00C41A  0E00               	movlw	0
 20498   00C41C  6F97               	movwf	?_producerGetDiagnostic& (0+255),b
 20499   00C41E  0E00               	movlw	0
 20500   00C420  6F98               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20501   00C422  0012               	return	
 20502   00C424                     l21541:
 20503                           
 20504                           ; BSR set to: 0
 20505                           ;../../VLCBlib_PIC/event_producer_happening.c: 184:     return &(producerDiagnostics[ind
      +                          ex]);
 20506   00C424  5199               	movf	producerGetDiagnostic@index& (0+255),w,b
 20507   00C426  0D02               	mullw	2
 20508   00C428  0EAE               	movlw	low _producerDiagnostics
 20509   00C42A  24F3               	addwf	243,w,c
 20510   00C42C  6F97               	movwf	?_producerGetDiagnostic& (0+255),b
 20511   00C42E  0E01               	movlw	high _producerDiagnostics
 20512   00C430  20F4               	addwfc	prodh,w,c
 20513   00C432  6F98               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20514                           
 20515                           ; BSR set to: 0
 20516   00C434  0012               	return		;funcret
 20517   00C436                     __end_of_producerGetDiagnostic:
 20518                           	callstack 0
 20519                           
 20520 ;; *************** function _canGetDiagnostic *****************
 20521 ;; Defined at:
 20522 ;;		line 438 in file "../../VLCBlib_PIC/can18_ecan.c"
 20523 ;; Parameters:    Size  Location     Type
 20524 ;;  index           1    wreg     unsigned char 
 20525 ;; Auto vars:     Size  Location     Type
 20526 ;;  index           1   58[BANK0 ] unsigned char 
 20527 ;; Return value:  Size  Location     Type
 20528 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20529 ;; Registers used:
 20530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20531 ;; Tracked objects:
 20532 ;;		On entry : 0/0
 20533 ;;		On exit  : 0/0
 20534 ;;		Unchanged: 0/0
 20535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20536 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20538 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20539 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20540 ;;Total ram usage:        4 bytes
 20541 ;; Hardware stack levels used: 1
 20542 ;; Hardware stack levels required when called: 14
 20543 ;; This function calls:
 20544 ;;		_getNumRxBuffersInUse
 20545 ;;		_getNumTxBuffersInUse
 20546 ;; This function is called by:
 20547 ;;		_mnsTRallDiagnosticsCallback
 20548 ;;		_mnsProcessMessage
 20549 ;; This function uses a non-reentrant model
 20550 ;;
 20551                           
 20552                           	psect	text64
 20553   00B22A                     __ptext64:
 20554                           	callstack 0
 20555   00B22A                     _canGetDiagnostic:
 20556                           	callstack 13
 20557                           
 20558                           ; BSR set to: 0
 20559                           ;incstack = 0
 20560                           ;canGetDiagnostic@index stored from wreg
 20561   00B22A  0100               	movlb	0	; () banked
 20562   00B22C  6F9A               	movwf	canGetDiagnostic@index& (0+255),b
 20563                           
 20564                           ;../../VLCBlib_PIC/can18_ecan.c: 439:     if (index > 18) {
 20565   00B22E  0E12               	movlw	18
 20566   00B230  0100               	movlb	0	; () banked
 20567   00B232  659A               	cpfsgt	canGetDiagnostic@index& (0+255),b
 20568   00B234  D01C               	goto	l21447
 20569                           
 20570                           ; BSR set to: 0
 20571                           ;../../VLCBlib_PIC/can18_ecan.c: 440:         return ((void*)0);
 20572   00B236  0E00               	movlw	0
 20573   00B238  6F97               	movwf	?_canGetDiagnostic& (0+255),b
 20574   00B23A  0E00               	movlw	0
 20575   00B23C  6F98               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20576   00B23E  0012               	return	
 20577   00B240                     l2506:
 20578                           
 20579                           ; BSR set to: 0
 20580                           ;../../VLCBlib_PIC/can18_ecan.c: 444:             canDiagnostics[0x03].asUint = COMSTAT;
 20581   00B240  CF71 F16C          	movff	3953,_canDiagnostics+6	;volatile
 20582   00B244  0101               	movlb	1	; () banked
 20583   00B246  6B6D               	clrf	(_canDiagnostics+7)& (0+255),b
 20584                           
 20585                           ;../../VLCBlib_PIC/can18_ecan.c: 445:             break;
 20586   00B248  D01C               	goto	l21449
 20587   00B24A                     l21441:
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;../../VLCBlib_PIC/can18_ecan.c: 447:             canDiagnostics[0x04].asUint = getNumTx
      +                          BuffersInUse();
 20591   00B24A  EC29  F064         	call	_getNumTxBuffersInUse	;wreg free
 20592   00B24E  0100               	movlb	0	; () banked
 20593   00B250  6F99               	movwf	??_canGetDiagnostic& (0+255),b
 20594   00B252  5199               	movf	??_canGetDiagnostic& (0+255),w,b
 20595   00B254  0101               	movlb	1	; () banked
 20596   00B256  6F6E               	movwf	(_canDiagnostics+8)& (0+255),b
 20597   00B258  6B6F               	clrf	(_canDiagnostics+9)& (0+255),b
 20598                           
 20599                           ;../../VLCBlib_PIC/can18_ecan.c: 448:             break;
 20600   00B25A  D013               	goto	l21449
 20601   00B25C                     l21443:
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;../../VLCBlib_PIC/can18_ecan.c: 450:             canDiagnostics[0x07].asUint = getNumRx
      +                          BuffersInUse();
 20605   00B25C  ECCF  F05F         	call	_getNumRxBuffersInUse	;wreg free
 20606   00B260  0100               	movlb	0	; () banked
 20607   00B262  6F99               	movwf	??_canGetDiagnostic& (0+255),b
 20608   00B264  5199               	movf	??_canGetDiagnostic& (0+255),w,b
 20609   00B266  0101               	movlb	1	; () banked
 20610   00B268  6F74               	movwf	(_canDiagnostics+14)& (0+255),b
 20611   00B26A  6B75               	clrf	(_canDiagnostics+15)& (0+255),b
 20612                           
 20613                           ;../../VLCBlib_PIC/can18_ecan.c: 451:             break;
 20614   00B26C  D00A               	goto	l21449
 20615   00B26E                     l21447:
 20616                           
 20617                           ; BSR set to: 0
 20618   00B26E  519A               	movf	canGetDiagnostic@index& (0+255),w,b
 20619                           
 20620                           ; Switch size 1, requested type "simple"
 20621                           ; Number of cases is 3, Range of values is 3 to 7
 20622                           ; switch strategies available:
 20623                           ; Name         Instructions Cycles
 20624                           ; simple_byte           10     6 (average)
 20625                           ;	Chosen strategy is simple_byte
 20626   00B270  0A03               	xorlw	3	; case 3
 20627   00B272  B4D8               	btfsc	status,2,c
 20628   00B274  D7E5               	goto	l2506
 20629   00B276  0A07               	xorlw	7	; case 4
 20630   00B278  B4D8               	btfsc	status,2,c
 20631   00B27A  D7E7               	goto	l21441
 20632   00B27C  0A03               	xorlw	3	; case 7
 20633   00B27E  B4D8               	btfsc	status,2,c
 20634   00B280  D7ED               	goto	l21443
 20635   00B282                     l21449:
 20636                           
 20637                           ;../../VLCBlib_PIC/can18_ecan.c: 453:     return &(canDiagnostics[index]);
 20638   00B282  0100               	movlb	0	; () banked
 20639   00B284  519A               	movf	canGetDiagnostic@index& (0+255),w,b
 20640   00B286  0D02               	mullw	2
 20641   00B288  0E66               	movlw	low _canDiagnostics
 20642   00B28A  24F3               	addwf	243,w,c
 20643   00B28C  6F97               	movwf	?_canGetDiagnostic& (0+255),b
 20644   00B28E  0E01               	movlw	high _canDiagnostics
 20645   00B290  20F4               	addwfc	prodh,w,c
 20646   00B292  6F98               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20647                           
 20648                           ; BSR set to: 0
 20649   00B294  0012               	return		;funcret
 20650   00B296                     __end_of_canGetDiagnostic:
 20651                           	callstack 0
 20652                           
 20653 ;; *************** function _nvGetDiagnostic *****************
 20654 ;; Defined at:
 20655 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 20656 ;; Parameters:    Size  Location     Type
 20657 ;;  index           1    wreg     unsigned char 
 20658 ;; Auto vars:     Size  Location     Type
 20659 ;;  index           1   57[BANK0 ] unsigned char 
 20660 ;; Return value:  Size  Location     Type
 20661 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20662 ;; Registers used:
 20663 ;;		wreg, status,2, status,0, prodl, prodh
 20664 ;; Tracked objects:
 20665 ;;		On entry : 0/0
 20666 ;;		On exit  : 0/0
 20667 ;;		Unchanged: 0/0
 20668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20672 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20673 ;;Total ram usage:        3 bytes
 20674 ;; Hardware stack levels used: 1
 20675 ;; Hardware stack levels required when called: 12
 20676 ;; This function calls:
 20677 ;;		Nothing
 20678 ;; This function is called by:
 20679 ;;		_mnsTRallDiagnosticsCallback
 20680 ;;		_mnsProcessMessage
 20681 ;; This function uses a non-reentrant model
 20682 ;;
 20683                           
 20684                           	psect	text65
 20685   00C436                     __ptext65:
 20686                           	callstack 0
 20687   00C436                     _nvGetDiagnostic:
 20688                           	callstack 15
 20689                           
 20690                           ; BSR set to: 0
 20691                           ;incstack = 0
 20692                           ;nvGetDiagnostic@index stored from wreg
 20693   00C436  0100               	movlb	0	; () banked
 20694   00C438  6F99               	movwf	nvGetDiagnostic@index& (0+255),b
 20695                           
 20696                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 20697   00C43A  0E02               	movlw	2
 20698   00C43C  0100               	movlb	0	; () banked
 20699   00C43E  6599               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 20700   00C440  D005               	goto	l21355
 20701                           
 20702                           ; BSR set to: 0
 20703                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 20704   00C442  0E00               	movlw	0
 20705   00C444  6F97               	movwf	?_nvGetDiagnostic& (0+255),b
 20706   00C446  0E00               	movlw	0
 20707   00C448  6F98               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20708   00C44A  0012               	return	
 20709   00C44C                     l21355:
 20710                           
 20711                           ; BSR set to: 0
 20712                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 20713   00C44C  5199               	movf	nvGetDiagnostic@index& (0+255),w,b
 20714   00C44E  0D02               	mullw	2
 20715   00C450  0EA3               	movlw	low _nvDiagnostics
 20716   00C452  24F3               	addwf	243,w,c
 20717   00C454  6F97               	movwf	?_nvGetDiagnostic& (0+255),b
 20718   00C456  0E01               	movlw	high _nvDiagnostics
 20719   00C458  20F4               	addwfc	prodh,w,c
 20720   00C45A  6F98               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20721                           
 20722                           ; BSR set to: 0
 20723   00C45C  0012               	return		;funcret
 20724   00C45E                     __end_of_nvGetDiagnostic:
 20725                           	callstack 0
 20726                           
 20727 ;; *************** function _mnsGetDiagnostic *****************
 20728 ;; Defined at:
 20729 ;;		line 785 in file "../../VLCBlib_PIC/mns.c"
 20730 ;; Parameters:    Size  Location     Type
 20731 ;;  index           1    wreg     unsigned char 
 20732 ;; Auto vars:     Size  Location     Type
 20733 ;;  index           1   57[BANK0 ] unsigned char 
 20734 ;; Return value:  Size  Location     Type
 20735 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20736 ;; Registers used:
 20737 ;;		wreg, status,2, status,0, prodl, prodh
 20738 ;; Tracked objects:
 20739 ;;		On entry : 0/0
 20740 ;;		On exit  : 0/0
 20741 ;;		Unchanged: 0/0
 20742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20743 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20744 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20747 ;;Total ram usage:        3 bytes
 20748 ;; Hardware stack levels used: 1
 20749 ;; Hardware stack levels required when called: 12
 20750 ;; This function calls:
 20751 ;;		Nothing
 20752 ;; This function is called by:
 20753 ;;		_mnsTRallDiagnosticsCallback
 20754 ;;		_mnsProcessMessage
 20755 ;; This function uses a non-reentrant model
 20756 ;;
 20757                           
 20758                           	psect	text66
 20759   00C45E                     __ptext66:
 20760                           	callstack 0
 20761   00C45E                     _mnsGetDiagnostic:
 20762                           	callstack 15
 20763                           
 20764                           ; BSR set to: 0
 20765                           ;incstack = 0
 20766                           ;mnsGetDiagnostic@index stored from wreg
 20767   00C45E  0100               	movlb	0	; () banked
 20768   00C460  6F99               	movwf	mnsGetDiagnostic@index& (0+255),b
 20769                           
 20770                           ;../../VLCBlib_PIC/mns.c: 786:     if (index > 6) {
 20771   00C462  0E06               	movlw	6
 20772   00C464  0100               	movlb	0	; () banked
 20773   00C466  6599               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 20774   00C468  D005               	goto	l21293
 20775                           
 20776                           ; BSR set to: 0
 20777                           ;../../VLCBlib_PIC/mns.c: 787:         return ((void*)0);
 20778   00C46A  0E00               	movlw	0
 20779   00C46C  6F97               	movwf	?_mnsGetDiagnostic& (0+255),b
 20780   00C46E  0E00               	movlw	0
 20781   00C470  6F98               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20782   00C472  0012               	return	
 20783   00C474                     l21293:
 20784                           
 20785                           ; BSR set to: 0
 20786                           ;../../VLCBlib_PIC/mns.c: 789:     return &(mnsDiagnostics[index]);
 20787   00C474  5199               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20788   00C476  0D02               	mullw	2
 20789   00C478  0E8C               	movlw	low _mnsDiagnostics
 20790   00C47A  24F3               	addwf	243,w,c
 20791   00C47C  6F97               	movwf	?_mnsGetDiagnostic& (0+255),b
 20792   00C47E  0E01               	movlw	high _mnsDiagnostics
 20793   00C480  20F4               	addwfc	prodh,w,c
 20794   00C482  6F98               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20795                           
 20796                           ; BSR set to: 0
 20797   00C484  0012               	return		;funcret
 20798   00C486                     __end_of_mnsGetDiagnostic:
 20799                           	callstack 0
 20800                           
 20801 ;; *************** function _ackGetDiagnostic *****************
 20802 ;; Defined at:
 20803 ;;		line 194 in file "../../VLCBlib_PIC/event_acknowledge.c"
 20804 ;; Parameters:    Size  Location     Type
 20805 ;;  index           1    wreg     unsigned char 
 20806 ;; Auto vars:     Size  Location     Type
 20807 ;;  index           1   57[BANK0 ] unsigned char 
 20808 ;; Return value:  Size  Location     Type
 20809 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20810 ;; Registers used:
 20811 ;;		wreg, status,2, status,0, prodl, prodh
 20812 ;; Tracked objects:
 20813 ;;		On entry : 0/0
 20814 ;;		On exit  : 0/0
 20815 ;;		Unchanged: 0/0
 20816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20820 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20821 ;;Total ram usage:        3 bytes
 20822 ;; Hardware stack levels used: 1
 20823 ;; Hardware stack levels required when called: 12
 20824 ;; This function calls:
 20825 ;;		Nothing
 20826 ;; This function is called by:
 20827 ;;		_mnsTRallDiagnosticsCallback
 20828 ;;		_mnsProcessMessage
 20829 ;; This function uses a non-reentrant model
 20830 ;;
 20831                           
 20832                           	psect	text67
 20833   00C486                     __ptext67:
 20834                           	callstack 0
 20835   00C486                     _ackGetDiagnostic:
 20836                           	callstack 15
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;incstack = 0
 20840                           ;ackGetDiagnostic@index stored from wreg
 20841   00C486  0100               	movlb	0	; () banked
 20842   00C488  6F99               	movwf	ackGetDiagnostic@index& (0+255),b
 20843                           
 20844                           ;../../VLCBlib_PIC/event_acknowledge.c: 195:     if (index > 1) {
 20845   00C48A  0E01               	movlw	1
 20846   00C48C  0100               	movlb	0	; () banked
 20847   00C48E  6599               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20848   00C490  D005               	goto	l21173
 20849                           
 20850                           ; BSR set to: 0
 20851                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:         return ((void*)0);
 20852   00C492  0E00               	movlw	0
 20853   00C494  6F97               	movwf	?_ackGetDiagnostic& (0+255),b
 20854   00C496  0E00               	movlw	0
 20855   00C498  6F98               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20856   00C49A  0012               	return	
 20857   00C49C                     l21173:
 20858                           
 20859                           ; BSR set to: 0
 20860                           ;../../VLCBlib_PIC/event_acknowledge.c: 198:     return &(ackDiagnostics[index]);
 20861   00C49C  5199               	movf	ackGetDiagnostic@index& (0+255),w,b
 20862   00C49E  0D02               	mullw	2
 20863   00C4A0  0EB6               	movlw	low _ackDiagnostics
 20864   00C4A2  24F3               	addwf	243,w,c
 20865   00C4A4  6F97               	movwf	?_ackGetDiagnostic& (0+255),b
 20866   00C4A6  0E01               	movlw	high _ackDiagnostics
 20867   00C4A8  20F4               	addwfc	prodh,w,c
 20868   00C4AA  6F98               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20869                           
 20870                           ; BSR set to: 0
 20871   00C4AC  0012               	return		;funcret
 20872   00C4AE                     __end_of_ackGetDiagnostic:
 20873                           	callstack 0
 20874                           
 20875 ;; *************** function _consumer2QGetDiagnostic *****************
 20876 ;; Defined at:
 20877 ;;		line 350 in file "../event_consumerDualActionQueue.c"
 20878 ;; Parameters:    Size  Location     Type
 20879 ;;  index           1    wreg     unsigned char 
 20880 ;; Auto vars:     Size  Location     Type
 20881 ;;  index           1   57[BANK0 ] unsigned char 
 20882 ;; Return value:  Size  Location     Type
 20883 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20884 ;; Registers used:
 20885 ;;		wreg, status,2, status,0, prodl, prodh
 20886 ;; Tracked objects:
 20887 ;;		On entry : 0/0
 20888 ;;		On exit  : 0/0
 20889 ;;		Unchanged: 0/0
 20890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20894 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20895 ;;Total ram usage:        3 bytes
 20896 ;; Hardware stack levels used: 1
 20897 ;; Hardware stack levels required when called: 12
 20898 ;; This function calls:
 20899 ;;		Nothing
 20900 ;; This function is called by:
 20901 ;;		_mnsTRallDiagnosticsCallback
 20902 ;;		_mnsProcessMessage
 20903 ;; This function uses a non-reentrant model
 20904 ;;
 20905                           
 20906                           	psect	text68
 20907   00C4AE                     __ptext68:
 20908                           	callstack 0
 20909   00C4AE                     _consumer2QGetDiagnostic:
 20910                           	callstack 15
 20911                           
 20912                           ; BSR set to: 0
 20913                           ;incstack = 0
 20914                           ;consumer2QGetDiagnostic@index stored from wreg
 20915   00C4AE  0100               	movlb	0	; () banked
 20916   00C4B0  6F99               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20917                           
 20918                           ;../event_consumerDualActionQueue.c: 351:     if (index > 1) {
 20919   00C4B2  0E01               	movlw	1
 20920   00C4B4  0100               	movlb	0	; () banked
 20921   00C4B6  6599               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20922   00C4B8  D005               	goto	l20819
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;../event_consumerDualActionQueue.c: 352:         return ((void*)0);
 20926   00C4BA  0E00               	movlw	0
 20927   00C4BC  6F97               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20928   00C4BE  0E00               	movlw	0
 20929   00C4C0  6F98               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20930   00C4C2  0012               	return	
 20931   00C4C4                     l20819:
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;../event_consumerDualActionQueue.c: 354:     return &(consumer2QDiagnostics[index]);
 20935   00C4C4  5199               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20936   00C4C6  0D02               	mullw	2
 20937   00C4C8  0EBA               	movlw	low _consumer2QDiagnostics
 20938   00C4CA  24F3               	addwf	243,w,c
 20939   00C4CC  6F97               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20940   00C4CE  0E01               	movlw	high _consumer2QDiagnostics
 20941   00C4D0  20F4               	addwfc	prodh,w,c
 20942   00C4D2  6F98               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20943                           
 20944                           ; BSR set to: 0
 20945   00C4D4  0012               	return		;funcret
 20946   00C4D6                     __end_of_consumer2QGetDiagnostic:
 20947                           	callstack 0
 20948                           
 20949 ;; *************** function _teachGetDiagnostic *****************
 20950 ;; Defined at:
 20951 ;;		line 545 in file "../../VLCBlib_PIC/event_teach_large.c"
 20952 ;; Parameters:    Size  Location     Type
 20953 ;;  index           1    wreg     unsigned char 
 20954 ;; Auto vars:     Size  Location     Type
 20955 ;;  index           1   57[BANK0 ] unsigned char 
 20956 ;; Return value:  Size  Location     Type
 20957 ;;                  2   55[BANK0 ] PTR struct DiagnosticVal
 20958 ;; Registers used:
 20959 ;;		wreg, status,2, status,0, prodl, prodh
 20960 ;; Tracked objects:
 20961 ;;		On entry : 0/0
 20962 ;;		On exit  : 0/0
 20963 ;;		Unchanged: 0/0
 20964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20965 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20968 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20969 ;;Total ram usage:        3 bytes
 20970 ;; Hardware stack levels used: 1
 20971 ;; Hardware stack levels required when called: 12
 20972 ;; This function calls:
 20973 ;;		Nothing
 20974 ;; This function is called by:
 20975 ;;		_mnsTRallDiagnosticsCallback
 20976 ;;		_mnsProcessMessage
 20977 ;; This function uses a non-reentrant model
 20978 ;;
 20979                           
 20980                           	psect	text69
 20981   00C4D6                     __ptext69:
 20982                           	callstack 0
 20983   00C4D6                     _teachGetDiagnostic:
 20984                           	callstack 15
 20985                           
 20986                           ; BSR set to: 0
 20987                           ;incstack = 0
 20988                           ;teachGetDiagnostic@index stored from wreg
 20989   00C4D6  0100               	movlb	0	; () banked
 20990   00C4D8  6F99               	movwf	teachGetDiagnostic@index& (0+255),b
 20991                           
 20992                           ;../../VLCBlib_PIC/event_teach_large.c: 546:     if (index > 1) {
 20993   00C4DA  0E01               	movlw	1
 20994   00C4DC  0100               	movlb	0	; () banked
 20995   00C4DE  6599               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20996   00C4E0  D005               	goto	l21481
 20997                           
 20998                           ; BSR set to: 0
 20999                           ;../../VLCBlib_PIC/event_teach_large.c: 547:         return ((void*)0);
 21000   00C4E2  0E00               	movlw	0
 21001   00C4E4  6F97               	movwf	?_teachGetDiagnostic& (0+255),b
 21002   00C4E6  0E00               	movlw	0
 21003   00C4E8  6F98               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 21004   00C4EA  0012               	return	
 21005   00C4EC                     l21481:
 21006                           
 21007                           ; BSR set to: 0
 21008                           ;../../VLCBlib_PIC/event_teach_large.c: 549:     return &(teachDiagnostics[index]);
 21009   00C4EC  5199               	movf	teachGetDiagnostic@index& (0+255),w,b
 21010   00C4EE  0D02               	mullw	2
 21011   00C4F0  0EB2               	movlw	low _teachDiagnostics
 21012   00C4F2  24F3               	addwf	243,w,c
 21013   00C4F4  6F97               	movwf	?_teachGetDiagnostic& (0+255),b
 21014   00C4F6  0E01               	movlw	high _teachDiagnostics
 21015   00C4F8  20F4               	addwfc	prodh,w,c
 21016   00C4FA  6F98               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 21017                           
 21018                           ; BSR set to: 0
 21019   00C4FC  0012               	return		;funcret
 21020   00C4FE                     __end_of_teachGetDiagnostic:
 21021                           	callstack 0
 21022                           
 21023 ;; *************** function _sendMessage6 *****************
 21024 ;; Defined at:
 21025 ;;		line 1195 in file "../../VLCBlib_PIC/vlcb.c"
 21026 ;; Parameters:    Size  Location     Type
 21027 ;;  opc             1    wreg     enum E12392
 21028 ;;  data1           1    8[BANK1 ] unsigned char 
 21029 ;;  data2           1    9[BANK1 ] unsigned char 
 21030 ;;  data3           1   10[BANK1 ] unsigned char 
 21031 ;;  data4           1   11[BANK1 ] unsigned char 
 21032 ;;  data5           1   12[BANK1 ] unsigned char 
 21033 ;;  data6           1   13[BANK1 ] unsigned char 
 21034 ;; Auto vars:     Size  Location     Type
 21035 ;;  opc             1   71[BANK0 ] enum E12392
 21036 ;; Return value:  Size  Location     Type
 21037 ;;                  1    wreg      void 
 21038 ;; Registers used:
 21039 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21040 ;; Tracked objects:
 21041 ;;		On entry : 0/0
 21042 ;;		On exit  : 0/0
 21043 ;;		Unchanged: 0/0
 21044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21045 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21048 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21049 ;;Total ram usage:        7 bytes
 21050 ;; Hardware stack levels used: 1
 21051 ;; Hardware stack levels required when called: 16
 21052 ;; This function calls:
 21053 ;;		_sendMessage
 21054 ;; This function is called by:
 21055 ;;		_mnsProcessMessage
 21056 ;;		_mnsTRallDiagnosticsCallback
 21057 ;;		_doReqev
 21058 ;;		_reqevCallback
 21059 ;; This function uses a non-reentrant model
 21060 ;;
 21061                           
 21062                           	psect	text70
 21063   00C1BA                     __ptext70:
 21064                           	callstack 0
 21065   00C1BA                     _sendMessage6:
 21066                           	callstack 11
 21067                           
 21068                           ; BSR set to: 0
 21069                           ;incstack = 0
 21070                           ;sendMessage6@opc stored from wreg
 21071   00C1BA  0100               	movlb	0	; () banked
 21072   00C1BC  6FA7               	movwf	sendMessage6@opc& (0+255),b
 21073                           
 21074                           ;../../VLCBlib_PIC/vlcb.c: 1196:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 21075   00C1BE  0E07               	movlw	7
 21076   00C1C0  0101               	movlb	1	; () banked
 21077   00C1C2  6FBE               	movwf	sendMessage@len& (0+255),b
 21078   00C1C4  C1C6  F1BF         	movff	sendMessage6@data1,sendMessage@data1
 21079   00C1C8  C1C7  F1C0         	movff	sendMessage6@data2,sendMessage@data2
 21080   00C1CC  C1C8  F1C1         	movff	sendMessage6@data3,sendMessage@data3
 21081   00C1D0  C1C9  F1C2         	movff	sendMessage6@data4,sendMessage@data4
 21082   00C1D4  C1CA  F1C3         	movff	sendMessage6@data5,sendMessage@data5
 21083   00C1D8  C1CB  F1C4         	movff	sendMessage6@data6,sendMessage@data6
 21084   00C1DC  0E00               	movlw	0
 21085   00C1DE  6FC5               	movwf	sendMessage@data7& (0+255),b
 21086   00C1E0  0100               	movlb	0	; () banked
 21087   00C1E2  51A7               	movf	sendMessage6@opc& (0+255),w,b
 21088   00C1E4  ECE0  F055         	call	_sendMessage
 21089   00C1E8  0012               	return		;funcret
 21090   00C1EA                     __end_of_sendMessage6:
 21091                           	callstack 0
 21092                           
 21093 ;; *************** function _sendMessage3 *****************
 21094 ;; Defined at:
 21095 ;;		line 1156 in file "../../VLCBlib_PIC/vlcb.c"
 21096 ;; Parameters:    Size  Location     Type
 21097 ;;  opc             1    wreg     enum E12392
 21098 ;;  data1           1   71[BANK0 ] unsigned char 
 21099 ;;  data2           1   72[BANK0 ] unsigned char 
 21100 ;;  data3           1   73[BANK0 ] unsigned char 
 21101 ;; Auto vars:     Size  Location     Type
 21102 ;;  opc             1    8[BANK1 ] enum E12392
 21103 ;; Return value:  Size  Location     Type
 21104 ;;                  1    wreg      void 
 21105 ;; Registers used:
 21106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21107 ;; Tracked objects:
 21108 ;;		On entry : 0/0
 21109 ;;		On exit  : 0/0
 21110 ;;		Unchanged: 0/0
 21111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21112 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21115 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21116 ;;Total ram usage:        4 bytes
 21117 ;; Hardware stack levels used: 1
 21118 ;; Hardware stack levels required when called: 16
 21119 ;; This function calls:
 21120 ;;		_sendMessage
 21121 ;; This function is called by:
 21122 ;;		_mnsProcessMessage
 21123 ;;		_nvProcessMessage
 21124 ;;		_teachProcessMessage
 21125 ;;		_doNnevn
 21126 ;;		_doNenrd
 21127 ;;		_doRqevn
 21128 ;;		_doEvlrn
 21129 ;;		_doReval
 21130 ;;		_doEvuln
 21131 ;;		_doReqev
 21132 ;;		_producerProcessMessage
 21133 ;; This function uses a non-reentrant model
 21134 ;;
 21135                           
 21136                           	psect	text71
 21137   00C306                     __ptext71:
 21138                           	callstack 0
 21139   00C306                     _sendMessage3:
 21140                           	callstack 12
 21141                           
 21142                           ;incstack = 0
 21143                           ;sendMessage3@opc stored from wreg
 21144   00C306  0101               	movlb	1	; () banked
 21145   00C308  6FC6               	movwf	sendMessage3@opc& (0+255),b
 21146                           
 21147                           ;../../VLCBlib_PIC/vlcb.c: 1157:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 21148   00C30A  0E04               	movlw	4
 21149   00C30C  0101               	movlb	1	; () banked
 21150   00C30E  6FBE               	movwf	sendMessage@len& (0+255),b
 21151   00C310  C0A7  F1BF         	movff	sendMessage3@data1,sendMessage@data1
 21152   00C314  C0A8  F1C0         	movff	sendMessage3@data2,sendMessage@data2
 21153   00C318  C0A9  F1C1         	movff	sendMessage3@data3,sendMessage@data3
 21154   00C31C  0E00               	movlw	0
 21155   00C31E  6FC2               	movwf	sendMessage@data4& (0+255),b
 21156   00C320  0E00               	movlw	0
 21157   00C322  6FC3               	movwf	sendMessage@data5& (0+255),b
 21158   00C324  0E00               	movlw	0
 21159   00C326  6FC4               	movwf	sendMessage@data6& (0+255),b
 21160   00C328  0E00               	movlw	0
 21161   00C32A  6FC5               	movwf	sendMessage@data7& (0+255),b
 21162   00C32C  51C6               	movf	sendMessage3@opc& (0+255),w,b
 21163   00C32E  ECE0  F055         	call	_sendMessage
 21164   00C332  0012               	return		;funcret
 21165   00C334                     __end_of_sendMessage3:
 21166                           	callstack 0
 21167                           
 21168 ;; *************** function _getParameter *****************
 21169 ;; Defined at:
 21170 ;;		line 816 in file "../../VLCBlib_PIC/mns.c"
 21171 ;; Parameters:    Size  Location     Type
 21172 ;;  idx             1    wreg     unsigned char 
 21173 ;; Auto vars:     Size  Location     Type
 21174 ;;  idx             1   50[BANK0 ] unsigned char 
 21175 ;;  i               1    0        unsigned char 
 21176 ;; Return value:  Size  Location     Type
 21177 ;;                  1    wreg      unsigned char 
 21178 ;; Registers used:
 21179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21180 ;; Tracked objects:
 21181 ;;		On entry : 0/0
 21182 ;;		On exit  : 0/0
 21183 ;;		Unchanged: 0/0
 21184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21189 ;;Total ram usage:        1 bytes
 21190 ;; Hardware stack levels used: 1
 21191 ;; Hardware stack levels required when called: 14
 21192 ;; This function calls:
 21193 ;;		_getParameterFlags
 21194 ;;		_have
 21195 ;; This function is called by:
 21196 ;;		_mnsProcessMessage
 21197 ;;		_mnsTRrqnpnCallback
 21198 ;; This function uses a non-reentrant model
 21199 ;;
 21200                           
 21201                           	psect	text72
 21202   00883E                     __ptext72:
 21203                           	callstack 0
 21204   00883E                     _getParameter:
 21205                           	callstack 13
 21206                           
 21207                           ;incstack = 0
 21208                           ;getParameter@idx stored from wreg
 21209   00883E  0100               	movlb	0	; () banked
 21210   008840  6F92               	movwf	getParameter@idx& (0+255),b
 21211                           
 21212                           ;../../VLCBlib_PIC/mns.c: 817:     uint8_t i;;../../VLCBlib_PIC/mns.c: 818:     switch(i
      +                          dx) {
 21213   008842  D033               	goto	l21283
 21214   008844                     l21195:
 21215                           
 21216                           ; BSR set to: 0
 21217                           ;../../VLCBlib_PIC/mns.c: 820:         return 20;
 21218   008844  0E14               	movlw	20
 21219   008846  0012               	return	
 21220   008848                     l21199:
 21221                           
 21222                           ; BSR set to: 0
 21223                           ;../../VLCBlib_PIC/mns.c: 822:         return MANU_MERG;
 21224   008848  0EA5               	movlw	165
 21225   00884A  0012               	return	
 21226   00884C                     l21203:
 21227                           
 21228                           ; BSR set to: 0
 21229                           ;../../VLCBlib_PIC/mns.c: 824:         return 'a';
 21230   00884C  0E61               	movlw	97
 21231   00884E  0012               	return	
 21232   008850                     l21207:
 21233                           
 21234                           ; BSR set to: 0
 21235                           ;../../VLCBlib_PIC/mns.c: 826:         return MTYP_CANMIO;
 21236   008850  0E20               	movlw	32
 21237   008852  0012               	return	
 21238   008854                     l21211:
 21239                           
 21240                           ; BSR set to: 0
 21241                           ;../../VLCBlib_PIC/mns.c: 828:         return 255;
 21242   008854  0EFF               	movlw	255
 21243   008856  0012               	return	
 21244   008858                     l21219:
 21245                           
 21246                           ; BSR set to: 0
 21247                           ;../../VLCBlib_PIC/mns.c: 832:         return (15+7*16);
 21248   008858  0E7F               	movlw	127
 21249   00885A  0012               	return	
 21250   00885C                     l21223:
 21251                           
 21252                           ; BSR set to: 0
 21253                           ;../../VLCBlib_PIC/mns.c: 834:         return 4;
 21254   00885C  0E04               	movlw	4
 21255   00885E  0012               	return	
 21256   008860                     l21227:
 21257                           
 21258                           ; BSR set to: 0
 21259                           ;../../VLCBlib_PIC/mns.c: 836:         return getParameterFlags();
 21260   008860  ECF7  F05B         	call	_getParameterFlags	;wreg free
 21261   008864  0012               	return	
 21262   008866                     l21231:
 21263                           
 21264                           ; BSR set to: 0
 21265                           ;../../VLCBlib_PIC/mns.c: 838:         return P18F26K80;
 21266   008866  0E0F               	movlw	15
 21267   008868  0012               	return	
 21268   00886A                     l21235:
 21269                           
 21270                           ; BSR set to: 0
 21271                           ;../../VLCBlib_PIC/mns.c: 840:         if (have(SERVICE_ID_CAN)) {
 21272   00886A  0E03               	movlw	3
 21273   00886C  EC35  F058         	call	_have
 21274   008870  0900               	iorlw	0
 21275   008872  B4D8               	btfsc	status,2,c
 21276   008874  D002               	goto	l21241
 21277   008876                     u21890:
 21278                           
 21279                           ;../../VLCBlib_PIC/mns.c: 841:             return PB_CAN;
 21280   008876  0E01               	movlw	1
 21281   008878  0012               	return	
 21282   00887A                     l21241:
 21283                           
 21284                           ;../../VLCBlib_PIC/mns.c: 843:         return 0;
 21285   00887A  0E00               	movlw	0
 21286   00887C  0012               	return	
 21287   00887E                     l21249:
 21288                           
 21289                           ; BSR set to: 0
 21290                           ;../../VLCBlib_PIC/mns.c: 847:         return 0x08;
 21291   00887E  0E08               	movlw	8
 21292   008880  0012               	return	
 21293   008882                     l21261:
 21294                           
 21295                           ; BSR set to: 0
 21296                           ;../../VLCBlib_PIC/mns.c: 859:         return *(const uint8_t*)0x3FFFFE;
 21297   008882  0EFE               	movlw	254
 21298   008884  6EF6               	movwf	tblptrl,c
 21299   008886                     	if	1	;There is more than 1 active tblptr byte
 21300   008886  0EFF               	movlw	255
 21301   008888  6EF7               	movwf	tblptrh,c
 21302   00888A                     	endif
 21303   00888A                     	if	1	;There are 3 active tblptr bytes
 21304   00888A  0E3F               	movlw	63
 21305   00888C  6EF8               	movwf	tblptru,c
 21306   00888E                     	endif
 21307   00888E  0008               	tblrd		*
 21308   008890  50F5               	movf	tablat,w,c
 21309   008892  0012               	return	
 21310   008894                     l21265:
 21311                           
 21312                           ; BSR set to: 0
 21313                           ;../../VLCBlib_PIC/mns.c: 861:         return *(const uint8_t*)0x3FFFFF;
 21314   008894  0EFF               	movlw	255
 21315   008896  6EF6               	movwf	tblptrl,c
 21316   008898                     	if	1	;There is more than 1 active tblptr byte
 21317   008898  0EFF               	movlw	255
 21318   00889A  6EF7               	movwf	tblptrh,c
 21319   00889C                     	endif
 21320   00889C                     	if	1	;There are 3 active tblptr bytes
 21321   00889C  0E3F               	movlw	63
 21322   00889E  6EF8               	movwf	tblptru,c
 21323   0088A0                     	endif
 21324   0088A0  0008               	tblrd		*
 21325   0088A2  50F5               	movf	tablat,w,c
 21326   0088A4  0012               	return	
 21327   0088A6                     l21273:
 21328                           
 21329                           ; BSR set to: 0
 21330                           ;../../VLCBlib_PIC/mns.c: 865:         return 12;
 21331   0088A6  0E0C               	movlw	12
 21332   0088A8  0012               	return	
 21333   0088AA                     l21283:
 21334   0088AA  0100               	movlb	0	; () banked
 21335   0088AC  5192               	movf	getParameter@idx& (0+255),w,b
 21336                           
 21337                           ; Switch size 1, requested type "simple"
 21338                           ; Number of cases is 19, Range of values is 0 to 20
 21339                           ; switch strategies available:
 21340                           ; Name         Instructions Cycles
 21341                           ; simple_byte           58    30 (average)
 21342                           ;	Chosen strategy is simple_byte
 21343   0088AE  0A00               	xorlw	0	; case 0
 21344   0088B0  B4D8               	btfsc	status,2,c
 21345   0088B2  D7C8               	goto	l21195
 21346   0088B4  0A01               	xorlw	1	; case 1
 21347   0088B6  B4D8               	btfsc	status,2,c
 21348   0088B8  D7C7               	goto	l21199
 21349   0088BA  0A03               	xorlw	3	; case 2
 21350   0088BC  B4D8               	btfsc	status,2,c
 21351   0088BE  D7C6               	goto	l21203
 21352   0088C0  0A01               	xorlw	1	; case 3
 21353   0088C2  B4D8               	btfsc	status,2,c
 21354   0088C4  D7C5               	goto	l21207
 21355   0088C6  0A07               	xorlw	7	; case 4
 21356   0088C8  B4D8               	btfsc	status,2,c
 21357   0088CA  D7C4               	goto	l21211
 21358   0088CC  0A01               	xorlw	1	; case 5
 21359   0088CE  B4D8               	btfsc	status,2,c
 21360   0088D0  D7B9               	goto	l21195
 21361   0088D2  0A03               	xorlw	3	; case 6
 21362   0088D4  B4D8               	btfsc	status,2,c
 21363   0088D6  D7C0               	goto	l21219
 21364   0088D8  0A01               	xorlw	1	; case 7
 21365   0088DA  B4D8               	btfsc	status,2,c
 21366   0088DC  D7BF               	goto	l21223
 21367   0088DE  0A0F               	xorlw	15	; case 8
 21368   0088E0  B4D8               	btfsc	status,2,c
 21369   0088E2  D7BE               	goto	l21227
 21370   0088E4  0A01               	xorlw	1	; case 9
 21371   0088E6  B4D8               	btfsc	status,2,c
 21372   0088E8  D7BE               	goto	l21231
 21373   0088EA  0A03               	xorlw	3	; case 10
 21374   0088EC  B4D8               	btfsc	status,2,c
 21375   0088EE  D7BD               	goto	l21235
 21376   0088F0  0A01               	xorlw	1	; case 11
 21377   0088F2  B4D8               	btfsc	status,2,c
 21378   0088F4  D7C2               	goto	l21241
 21379   0088F6  0A07               	xorlw	7	; case 12
 21380   0088F8  B4D8               	btfsc	status,2,c
 21381   0088FA  D7C1               	goto	l21249
 21382   0088FC  0A01               	xorlw	1	; case 13
 21383   0088FE  B4D8               	btfsc	status,2,c
 21384   008900  D7BC               	goto	l21241
 21385   008902  0A03               	xorlw	3	; case 14
 21386   008904  B4D8               	btfsc	status,2,c
 21387   008906  D7B9               	goto	l21241
 21388   008908  0A1F               	xorlw	31	; case 17
 21389   00890A  B4D8               	btfsc	status,2,c
 21390   00890C  D7BA               	goto	l21261
 21391   00890E  0A03               	xorlw	3	; case 18
 21392   008910  B4D8               	btfsc	status,2,c
 21393   008912  D7C0               	goto	l21265
 21394   008914  0A01               	xorlw	1	; case 19
 21395   008916  B4D8               	btfsc	status,2,c
 21396   008918  D7AE               	goto	u21890
 21397   00891A  0A07               	xorlw	7	; case 20
 21398   00891C  B4D8               	btfsc	status,2,c
 21399   00891E  D7C3               	goto	l21273
 21400   008920  D7AC               	goto	l21241
 21401   008922                     __end_of_getParameter:
 21402                           	callstack 0
 21403                           
 21404 ;; *************** function _getParameterFlags *****************
 21405 ;; Defined at:
 21406 ;;		line 587 in file "../../VLCBlib_PIC/mns.c"
 21407 ;; Parameters:    Size  Location     Type
 21408 ;;		None
 21409 ;; Auto vars:     Size  Location     Type
 21410 ;;  flags           1   49[BANK0 ] unsigned char 
 21411 ;; Return value:  Size  Location     Type
 21412 ;;                  1    wreg      unsigned char 
 21413 ;; Registers used:
 21414 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21415 ;; Tracked objects:
 21416 ;;		On entry : 0/0
 21417 ;;		On exit  : 0/0
 21418 ;;		Unchanged: 0/0
 21419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21421 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21423 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21424 ;;Total ram usage:        1 bytes
 21425 ;; Hardware stack levels used: 1
 21426 ;; Hardware stack levels required when called: 13
 21427 ;; This function calls:
 21428 ;;		_have
 21429 ;; This function is called by:
 21430 ;;		_mnsProcessMessage
 21431 ;;		_getParameter
 21432 ;; This function uses a non-reentrant model
 21433 ;;
 21434                           
 21435                           	psect	text73
 21436   00B7EE                     __ptext73:
 21437                           	callstack 0
 21438   00B7EE                     _getParameterFlags:
 21439                           	callstack 13
 21440                           
 21441                           ;../../VLCBlib_PIC/mns.c: 588:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 589:     flag
      +                          s = 0;
 21442                           
 21443                           ;incstack = 0
 21444   00B7EE  0E00               	movlw	0
 21445   00B7F0  0100               	movlb	0	; () banked
 21446   00B7F2  6F91               	movwf	getParameterFlags@flags& (0+255),b
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;../../VLCBlib_PIC/mns.c: 590:     if (have(SERVICE_ID_CONSUMER)) {
 21450   00B7F4  0E06               	movlw	6
 21451   00B7F6  EC35  F058         	call	_have
 21452   00B7FA  0900               	iorlw	0
 21453   00B7FC  B4D8               	btfsc	status,2,c
 21454   00B7FE  D002               	goto	l20441
 21455                           
 21456                           ;../../VLCBlib_PIC/mns.c: 591:         flags |= 1;
 21457   00B800  0100               	movlb	0	; () banked
 21458   00B802  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 21459   00B804                     l20441:
 21460                           
 21461                           ;../../VLCBlib_PIC/mns.c: 593:     if (have(SERVICE_ID_PRODUCER)) {
 21462   00B804  0E05               	movlw	5
 21463   00B806  EC35  F058         	call	_have
 21464   00B80A  0900               	iorlw	0
 21465   00B80C  B4D8               	btfsc	status,2,c
 21466   00B80E  D002               	goto	l20445
 21467                           
 21468                           ;../../VLCBlib_PIC/mns.c: 594:         flags |= 2;
 21469   00B810  0100               	movlb	0	; () banked
 21470   00B812  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 21471   00B814                     l20445:
 21472                           
 21473                           ;../../VLCBlib_PIC/mns.c: 596:     if (flags == (2 | 1)) flags |= 16;
 21474   00B814  0E03               	movlw	3
 21475   00B816  0100               	movlb	0	; () banked
 21476   00B818  1991               	xorwf	getParameterFlags@flags& (0+255),w,b
 21477   00B81A  B4D8               	btfsc	status,2,c
 21478                           
 21479                           ; BSR set to: 0
 21480   00B81C  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 21481                           
 21482                           ; BSR set to: 0
 21483                           ;../../VLCBlib_PIC/mns.c: 597:     if (have(SERVICE_ID_BOOT)) {
 21484   00B81E  0E0A               	movlw	10
 21485   00B820  EC35  F058         	call	_have
 21486   00B824  0900               	iorlw	0
 21487   00B826  B4D8               	btfsc	status,2,c
 21488   00B828  D002               	goto	l20453
 21489                           
 21490                           ;../../VLCBlib_PIC/mns.c: 598:         flags |= 8;
 21491   00B82A  0100               	movlb	0	; () banked
 21492   00B82C  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 21493   00B82E                     l20453:
 21494                           
 21495                           ;../../VLCBlib_PIC/mns.c: 600:     if (mode_flags & 1) {
 21496   00B82E  0101               	movlb	1	; () banked
 21497   00B830  A165               	btfss	_mode_flags& (0+255),0,b
 21498   00B832  D002               	goto	l20457
 21499                           
 21500                           ; BSR set to: 1
 21501                           ;../../VLCBlib_PIC/mns.c: 601:         flags |= 32;
 21502   00B834  0100               	movlb	0	; () banked
 21503   00B836  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 21504   00B838                     l20457:
 21505                           
 21506                           ;../../VLCBlib_PIC/mns.c: 603:     if (mode_state == MODE_NORMAL) {
 21507   00B838  0100               	movlb	0	; () banked
 21508   00B83A  05C4               	decf	_mode_state& (0+255),w,b
 21509   00B83C  B4D8               	btfsc	status,2,c
 21510                           
 21511                           ; BSR set to: 0
 21512                           ;../../VLCBlib_PIC/mns.c: 604:         flags |= 4;
 21513   00B83E  8591               	bsf	getParameterFlags@flags& (0+255),2,b
 21514                           
 21515                           ; BSR set to: 0
 21516                           ;../../VLCBlib_PIC/mns.c: 607:     flags |= 64;
 21517                           
 21518                           ;../../VLCBlib_PIC/mns.c: 605:     }
 21519   00B840  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 21520                           
 21521                           ; BSR set to: 0
 21522                           ;../../VLCBlib_PIC/mns.c: 609:     return flags;
 21523   00B842  5191               	movf	getParameterFlags@flags& (0+255),w,b
 21524                           
 21525                           ; BSR set to: 0
 21526   00B844  0012               	return		;funcret
 21527   00B846                     __end_of_getParameterFlags:
 21528                           	callstack 0
 21529                           
 21530 ;; *************** function _mnsPoll *****************
 21531 ;; Defined at:
 21532 ;;		line 628 in file "../../VLCBlib_PIC/mns.c"
 21533 ;; Parameters:    Size  Location     Type
 21534 ;;		None
 21535 ;; Auto vars:     Size  Location     Type
 21536 ;;		None
 21537 ;; Return value:  Size  Location     Type
 21538 ;;                  1    wreg      void 
 21539 ;; Registers used:
 21540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21541 ;; Tracked objects:
 21542 ;;		On entry : 0/0
 21543 ;;		On exit  : 0/0
 21544 ;;		Unchanged: 0/0
 21545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21548 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21549 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21550 ;;Total ram usage:        4 bytes
 21551 ;; Hardware stack levels used: 1
 21552 ;; Hardware stack levels required when called: 18
 21553 ;; This function calls:
 21554 ;;		_sendMessage2
 21555 ;;		_sendMessage5
 21556 ;;		_setLEDsByMode
 21557 ;;		_tickGet
 21558 ;;		_writeNVM
 21559 ;; This function is called by:
 21560 ;;		_poll
 21561 ;; This function uses a non-reentrant model
 21562 ;;
 21563                           
 21564                           	psect	text74
 21565   003268                     __ptext74:
 21566                           	callstack 0
 21567   003268                     _mnsPoll:
 21568                           	callstack 11
 21569                           
 21570                           ;../../VLCBlib_PIC/mns.c: 631:     if (mode_state == MODE_NORMAL) {
 21571                           
 21572                           ; BSR set to: 0
 21573                           ;incstack = 0
 21574   003268  0100               	movlb	0	; () banked
 21575   00326A  05C4               	decf	_mode_state& (0+255),w,b
 21576   00326C  A4D8               	btfss	status,2,c
 21577   00326E  D040               	goto	l24201
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;../../VLCBlib_PIC/mns.c: 632:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 21581   003270  EC23  F05C         	call	_tickGet	;wreg free
 21582   003274  0101               	movlb	1	; () banked
 21583   003276  5150               	movf	_heartbeatTimer& (0+255),w,b
 21584   003278  0100               	movlb	0	; () banked
 21585   00327A  5D8D               	subwf	?_tickGet& (0+255),w,b
 21586   00327C  0101               	movlb	1	; () banked
 21587   00327E  6FCB               	movwf	??_mnsPoll& (0+255),b
 21588   003280  5151               	movf	(_heartbeatTimer+1)& (0+255),w,b
 21589   003282  0100               	movlb	0	; () banked
 21590   003284  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21591   003286  0101               	movlb	1	; () banked
 21592   003288  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21593   00328A  5152               	movf	(_heartbeatTimer+2)& (0+255),w,b
 21594   00328C  0100               	movlb	0	; () banked
 21595   00328E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21596   003290  0101               	movlb	1	; () banked
 21597   003292  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21598   003294  5153               	movf	(_heartbeatTimer+3)& (0+255),w,b
 21599   003296  0100               	movlb	0	; () banked
 21600   003298  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21601   00329A  0101               	movlb	1	; () banked
 21602   00329C  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21603   00329E  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21604   0032A0  E108               	bnz	u25780
 21605   0032A2  0EB5               	movlw	181
 21606   0032A4  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21607   0032A6  0EC4               	movlw	196
 21608   0032A8  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21609   0032AA  0E04               	movlw	4
 21610   0032AC  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21611   0032AE  A0D8               	btfss	status,0,c
 21612   0032B0  D01F               	goto	l24201
 21613   0032B2                     u25780:
 21614                           
 21615                           ; BSR set to: 1
 21616                           ;../../VLCBlib_PIC/mns.c: 633:             if (mode_flags & 4) {
 21617   0032B2  A565               	btfss	_mode_flags& (0+255),2,b
 21618   0032B4  D00F               	goto	l24195
 21619                           
 21620                           ; BSR set to: 1
 21621                           ;../../VLCBlib_PIC/mns.c: 634:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 21622   0032B6  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 21623   0032BA  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 21624   0032BE  C0BF  F1C8         	movff	_heartbeatSequence,sendMessage5@data3
 21625   0032C2  C18E  F1C9         	movff	_mnsDiagnostics+2,sendMessage5@data4
 21626   0032C6  0E00               	movlw	0
 21627   0032C8  6FCA               	movwf	sendMessage5@data5& (0+255),b
 21628   0032CA  0EAB               	movlw	171
 21629   0032CC  EC25  F061         	call	_sendMessage5
 21630   0032D0  0100               	movlb	0	; () banked
 21631   0032D2  2BBF               	incf	_heartbeatSequence& (0+255),f,b
 21632   0032D4                     l24195:
 21633                           
 21634                           ;../../VLCBlib_PIC/mns.c: 636:             heartbeatTimer.val = tickGet();
 21635   0032D4  EC23  F05C         	call	_tickGet	;wreg free
 21636   0032D8  C08D  F150         	movff	?_tickGet,_heartbeatTimer
 21637   0032DC  C08E  F151         	movff	?_tickGet+1,_heartbeatTimer+1
 21638   0032E0  C08F  F152         	movff	?_tickGet+2,_heartbeatTimer+2
 21639   0032E4  C090  F153         	movff	?_tickGet+3,_heartbeatTimer+3
 21640                           
 21641                           ;../../VLCBlib_PIC/mns.c: 637:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 21642   0032E8  0101               	movlb	1	; () banked
 21643   0032EA  518E               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 21644   0032EC  A4D8               	btfss	status,2,c
 21645                           
 21646                           ; BSR set to: 1
 21647                           ;../../VLCBlib_PIC/mns.c: 638:                 mnsDiagnostics[0x01].asBytes.lo--;
 21648   0032EE  078E               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 21649   0032F0                     l24201:
 21650                           
 21651                           ;../../VLCBlib_PIC/mns.c: 645:     if (mode_flags != last_mode_flags) {
 21652   0032F0  0100               	movlb	0	; () banked
 21653   0032F2  51C2               	movf	_last_mode_flags& (0+255),w,b
 21654   0032F4  0101               	movlb	1	; () banked
 21655   0032F6  1965               	xorwf	_mode_flags& (0+255),w,b
 21656   0032F8  B4D8               	btfsc	status,2,c
 21657   0032FA  D00E               	goto	l24207
 21658                           
 21659                           ; BSR set to: 1
 21660                           ;../../VLCBlib_PIC/mns.c: 646:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 21661   0032FC  0EF9               	movlw	249
 21662   0032FE  0100               	movlb	0	; () banked
 21663   003300  6FA4               	movwf	writeNVM@index& (0+255),b
 21664   003302  0E03               	movlw	3
 21665   003304  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21666   003306  0E00               	movlw	0
 21667   003308  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21668   00330A  C165  F0A7         	movff	_mode_flags,writeNVM@value
 21669   00330E  0E00               	movlw	0
 21670   003310  EC9F  F05D         	call	_writeNVM
 21671                           
 21672                           ;../../VLCBlib_PIC/mns.c: 647:         last_mode_flags = mode_flags;
 21673   003314  C165  F0C2         	movff	_mode_flags,_last_mode_flags
 21674   003318                     l24207:
 21675                           
 21676                           ;../../VLCBlib_PIC/mns.c: 649:     if (mode_state != last_mode_state) {
 21677   003318  0100               	movlb	0	; () banked
 21678   00331A  51C3               	movf	_last_mode_state& (0+255),w,b
 21679   00331C  19C4               	xorwf	_mode_state& (0+255),w,b
 21680   00331E  B4D8               	btfsc	status,2,c
 21681   003320  D013               	goto	l24217
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;../../VLCBlib_PIC/mns.c: 651:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 21685   003322  29C4               	incf	_mode_state& (0+255),w,b
 21686   003324  B4D8               	btfsc	status,2,c
 21687   003326  D003               	goto	u25840
 21688                           
 21689                           ; BSR set to: 0
 21690   003328  05C4               	decf	_mode_state& (0+255),w,b
 21691   00332A  A4D8               	btfss	status,2,c
 21692   00332C  D00B               	goto	l24215
 21693   00332E                     u25840:
 21694                           
 21695                           ; BSR set to: 0
 21696                           ;../../VLCBlib_PIC/mns.c: 652:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 21697   00332E  0EFB               	movlw	251
 21698   003330  6FA4               	movwf	writeNVM@index& (0+255),b
 21699   003332  0E03               	movlw	3
 21700   003334  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21701   003336  0E00               	movlw	0
 21702   003338  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21703   00333A  C0C4  F0A7         	movff	_mode_state,writeNVM@value
 21704   00333E  0E00               	movlw	0
 21705   003340  EC9F  F05D         	call	_writeNVM
 21706   003344                     l24215:
 21707                           
 21708                           ;../../VLCBlib_PIC/mns.c: 654:         last_mode_state = mode_state;
 21709   003344  C0C4  F0C3         	movff	_mode_state,_last_mode_state
 21710   003348                     l24217:
 21711                           
 21712                           ;../../VLCBlib_PIC/mns.c: 658:     if ((tickGet() - uptimeTimer.val) > 62500) {
 21713   003348  EC23  F05C         	call	_tickGet	;wreg free
 21714   00334C  0101               	movlb	1	; () banked
 21715   00334E  514C               	movf	_uptimeTimer& (0+255),w,b
 21716   003350  0100               	movlb	0	; () banked
 21717   003352  5D8D               	subwf	?_tickGet& (0+255),w,b
 21718   003354  0101               	movlb	1	; () banked
 21719   003356  6FCB               	movwf	??_mnsPoll& (0+255),b
 21720   003358  514D               	movf	(_uptimeTimer+1)& (0+255),w,b
 21721   00335A  0100               	movlb	0	; () banked
 21722   00335C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21723   00335E  0101               	movlb	1	; () banked
 21724   003360  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21725   003362  514E               	movf	(_uptimeTimer+2)& (0+255),w,b
 21726   003364  0100               	movlb	0	; () banked
 21727   003366  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21728   003368  0101               	movlb	1	; () banked
 21729   00336A  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21730   00336C  514F               	movf	(_uptimeTimer+3)& (0+255),w,b
 21731   00336E  0100               	movlb	0	; () banked
 21732   003370  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21733   003372  0101               	movlb	1	; () banked
 21734   003374  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21735   003376  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21736   003378  11CD               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21737   00337A  E106               	bnz	u25850
 21738   00337C  0E25               	movlw	37
 21739   00337E  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21740   003380  0EF4               	movlw	244
 21741   003382  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21742   003384  A0D8               	btfss	status,0,c
 21743   003386  D17F               	goto	l24309
 21744   003388                     u25850:
 21745                           
 21746                           ; BSR set to: 1
 21747                           ;../../VLCBlib_PIC/mns.c: 659:         uptimeTimer.val = tickGet();
 21748   003388  EC23  F05C         	call	_tickGet	;wreg free
 21749   00338C  C08D  F14C         	movff	?_tickGet,_uptimeTimer
 21750   003390  C08E  F14D         	movff	?_tickGet+1,_uptimeTimer+1
 21751   003394  C08F  F14E         	movff	?_tickGet+2,_uptimeTimer+2
 21752   003398  C090  F14F         	movff	?_tickGet+3,_uptimeTimer+3
 21753                           
 21754                           ;../../VLCBlib_PIC/mns.c: 660:         mnsDiagnostics[0x03].asUint++;
 21755   00339C  0101               	movlb	1	; () banked
 21756   00339E  4B92               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 21757   0033A0  2B93               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 21758                           
 21759                           ; BSR set to: 1
 21760                           ;../../VLCBlib_PIC/mns.c: 661:         if (mnsDiagnostics[0x03].asUint == 0) {
 21761   0033A2  5192               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 21762   0033A4  1193               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 21763   0033A6  A4D8               	btfss	status,2,c
 21764   0033A8  D16E               	goto	l24309
 21765                           
 21766                           ; BSR set to: 1
 21767                           ;../../VLCBlib_PIC/mns.c: 662:             mnsDiagnostics[0x02].asUint++;
 21768   0033AA  4B90               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 21769   0033AC  2B91               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 21770   0033AE  D16B               	goto	l24309
 21771   0033B0                     l1559:
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;../../VLCBlib_PIC/mns.c: 671:             if ((!(PORTAbits.RA2)) == 0) {
 21775   0033B0  A480               	btfss	128,2,c	;volatile
 21776   0033B2  D00B               	goto	l24229
 21777   0033B4                     u25870:
 21778                           
 21779                           ;../../VLCBlib_PIC/mns.c: 673:                 pbTimer.val = tickGet();
 21780   0033B4  EC23  F05C         	call	_tickGet	;wreg free
 21781   0033B8  C08D  F0AA         	movff	?_tickGet,_pbTimer
 21782   0033BC  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 21783   0033C0  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 21784   0033C4  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 21785                           
 21786                           ;../../VLCBlib_PIC/mns.c: 674:             } else {
 21787   0033C8  0012               	return	
 21788   0033CA                     l24229:
 21789                           
 21790                           ; BSR set to: 0
 21791                           ;../../VLCBlib_PIC/mns.c: 676:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21792   0033CA  EC23  F05C         	call	_tickGet	;wreg free
 21793   0033CE  0100               	movlb	0	; () banked
 21794   0033D0  51AA               	movf	_pbTimer& (0+255),w,b
 21795   0033D2  5D8D               	subwf	?_tickGet& (0+255),w,b
 21796   0033D4  0101               	movlb	1	; () banked
 21797   0033D6  6FCB               	movwf	??_mnsPoll& (0+255),b
 21798   0033D8  0100               	movlb	0	; () banked
 21799   0033DA  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 21800   0033DC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21801   0033DE  0101               	movlb	1	; () banked
 21802   0033E0  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21803   0033E2  0100               	movlb	0	; () banked
 21804   0033E4  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 21805   0033E6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21806   0033E8  0101               	movlb	1	; () banked
 21807   0033EA  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21808   0033EC  0100               	movlb	0	; () banked
 21809   0033EE  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 21810   0033F0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21811   0033F2  0101               	movlb	1	; () banked
 21812   0033F4  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21813   0033F6  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21814   0033F8  E108               	bnz	u25880
 21815   0033FA  0E91               	movlw	145
 21816   0033FC  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21817   0033FE  0ED0               	movlw	208
 21818   003400  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21819   003402  0E03               	movlw	3
 21820   003404  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21821   003406  A0D8               	btfss	status,0,c
 21822   003408  0012               	return	
 21823   00340A                     u25880:
 21824                           
 21825                           ; BSR set to: 1
 21826                           ;../../VLCBlib_PIC/mns.c: 678:                     mode_state = 0xFD;
 21827   00340A  0EFD               	movlw	253
 21828   00340C  0100               	movlb	0	; () banked
 21829   00340E  6FC4               	movwf	_mode_state& (0+255),b
 21830                           
 21831                           ; BSR set to: 0
 21832                           ;../../VLCBlib_PIC/mns.c: 679:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21833   003410  69C1               	setf	_setupModePreviousMode& (0+255),b
 21834                           
 21835                           ; BSR set to: 0
 21836                           ;../../VLCBlib_PIC/mns.c: 680:                     setLEDsByMode();
 21837   003412  EC94  F060         	call	_setLEDsByMode	;wreg free
 21838   003416  0012               	return	
 21839   003418                     l1564:
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;../../VLCBlib_PIC/mns.c: 685:             if ((!(PORTAbits.RA2)) == 0) {
 21843   003418  A480               	btfss	128,2,c	;volatile
 21844   00341A  D7CC               	goto	u25870
 21845                           
 21846                           ; BSR set to: 0
 21847                           ;../../VLCBlib_PIC/mns.c: 689:                 mode_state = MODE_SETUP;
 21848   00341C  0E00               	movlw	0
 21849   00341E  6FC4               	movwf	_mode_state& (0+255),b
 21850                           
 21851                           ; BSR set to: 0
 21852                           ;../../VLCBlib_PIC/mns.c: 690:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 21853   003420  69C1               	setf	_setupModePreviousMode& (0+255),b
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;../../VLCBlib_PIC/mns.c: 691:                 pbTimer.val = tickGet();
 21857   003422  EC23  F05C         	call	_tickGet	;wreg free
 21858   003426  C08D  F0AA         	movff	?_tickGet,_pbTimer
 21859   00342A  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 21860   00342E  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 21861   003432  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 21862                           
 21863                           ;../../VLCBlib_PIC/mns.c: 693:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 21864   003436  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 21865   00343A  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 21866   00343E  0E50               	movlw	80
 21867   003440  ECF5  F060         	call	_sendMessage2
 21868                           
 21869                           ;../../VLCBlib_PIC/mns.c: 694:                 setLEDsByMode();
 21870   003444  EC94  F060         	call	_setLEDsByMode	;wreg free
 21871   003448  D7B5               	goto	u25870
 21872   00344A                     l1566:
 21873                           
 21874                           ; BSR set to: 0
 21875                           ;../../VLCBlib_PIC/mns.c: 699:             if ((!(PORTAbits.RA2)) == 0) {
 21876   00344A  A480               	btfss	128,2,c	;volatile
 21877   00344C  D087               	goto	l24273
 21878                           
 21879                           ; BSR set to: 0
 21880                           ;../../VLCBlib_PIC/mns.c: 702:                 if (((tickGet() - pbTimer.val) > (62500/1
      +                          0)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 21881   00344E  EC23  F05C         	call	_tickGet	;wreg free
 21882   003452  0100               	movlb	0	; () banked
 21883   003454  51AA               	movf	_pbTimer& (0+255),w,b
 21884   003456  5D8D               	subwf	?_tickGet& (0+255),w,b
 21885   003458  0101               	movlb	1	; () banked
 21886   00345A  6FCB               	movwf	??_mnsPoll& (0+255),b
 21887   00345C  0100               	movlb	0	; () banked
 21888   00345E  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 21889   003460  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21890   003462  0101               	movlb	1	; () banked
 21891   003464  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21892   003466  0100               	movlb	0	; () banked
 21893   003468  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 21894   00346A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21895   00346C  0101               	movlb	1	; () banked
 21896   00346E  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21897   003470  0100               	movlb	0	; () banked
 21898   003472  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 21899   003474  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21900   003476  0101               	movlb	1	; () banked
 21901   003478  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21902   00347A  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21903   00347C  11CD               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21904   00347E  E106               	bnz	u25910
 21905   003480  0E6B               	movlw	107
 21906   003482  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21907   003484  0E18               	movlw	24
 21908   003486  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21909   003488  A0D8               	btfss	status,0,c
 21910   00348A  D036               	goto	l24265
 21911   00348C                     u25910:
 21912                           
 21913                           ; BSR set to: 1
 21914   00348C  EC23  F05C         	call	_tickGet	;wreg free
 21915   003490  0100               	movlb	0	; () banked
 21916   003492  51AA               	movf	_pbTimer& (0+255),w,b
 21917   003494  5D8D               	subwf	?_tickGet& (0+255),w,b
 21918   003496  0101               	movlb	1	; () banked
 21919   003498  6FCB               	movwf	??_mnsPoll& (0+255),b
 21920   00349A  0100               	movlb	0	; () banked
 21921   00349C  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 21922   00349E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21923   0034A0  0101               	movlb	1	; () banked
 21924   0034A2  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21925   0034A4  0100               	movlb	0	; () banked
 21926   0034A6  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 21927   0034A8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21928   0034AA  0101               	movlb	1	; () banked
 21929   0034AC  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21930   0034AE  0100               	movlb	0	; () banked
 21931   0034B0  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 21932   0034B2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21933   0034B4  0101               	movlb	1	; () banked
 21934   0034B6  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 21935   0034B8  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 21936   0034BA  E11E               	bnz	l24265
 21937   0034BC  0E48               	movlw	72
 21938   0034BE  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 21939   0034C0  0EE8               	movlw	232
 21940   0034C2  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21941   0034C4  0E01               	movlw	1
 21942   0034C6  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21943   0034C8  B0D8               	btfsc	status,0,c
 21944   0034CA  D016               	goto	l24265
 21945                           
 21946                           ; BSR set to: 1
 21947                           ;../../VLCBlib_PIC/mns.c: 704:                     mode_state = setupModePreviousMode;
 21948   0034CC  C0C1  F0C4         	movff	_setupModePreviousMode,_mode_state
 21949                           
 21950                           ; BSR set to: 1
 21951                           ;../../VLCBlib_PIC/mns.c: 705:                     if (mode_state == MODE_NORMAL) {
 21952   0034D0  0100               	movlb	0	; () banked
 21953   0034D2  05C4               	decf	_mode_state& (0+255),w,b
 21954   0034D4  A4D8               	btfss	status,2,c
 21955   0034D6  D00E               	goto	l24263
 21956                           
 21957                           ; BSR set to: 0
 21958                           ;../../VLCBlib_PIC/mns.c: 707:                         nn.word = previousNN.word;
 21959   0034D8  C160  F0B4         	movff	_previousNN,_nn
 21960   0034DC  C161  F0B5         	movff	_previousNN+1,_nn+1
 21961                           
 21962                           ; BSR set to: 0
 21963                           ;../../VLCBlib_PIC/mns.c: 708:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21964   0034E0  C0B5  F0A7         	movff	_nn+1,sendMessage2@data1
 21965   0034E4  C0B4  F0A8         	movff	_nn,sendMessage2@data2
 21966   0034E8  0E52               	movlw	82
 21967   0034EA  ECF5  F060         	call	_sendMessage2
 21968                           
 21969                           ;../../VLCBlib_PIC/mns.c: 710:                         mnsDiagnostics[0x05].asUint++;
 21970   0034EE  0101               	movlb	1	; () banked
 21971   0034F0  4B96               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 21972   0034F2  2B97               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 21973   0034F4                     l24263:
 21974                           
 21975                           ;../../VLCBlib_PIC/mns.c: 713:                     setLEDsByMode();
 21976   0034F4  EC94  F060         	call	_setLEDsByMode	;wreg free
 21977   0034F8                     l24265:
 21978                           
 21979                           ;../../VLCBlib_PIC/mns.c: 715:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21980   0034F8  EC23  F05C         	call	_tickGet	;wreg free
 21981   0034FC  0100               	movlb	0	; () banked
 21982   0034FE  51AA               	movf	_pbTimer& (0+255),w,b
 21983   003500  5D8D               	subwf	?_tickGet& (0+255),w,b
 21984   003502  0101               	movlb	1	; () banked
 21985   003504  6FCB               	movwf	??_mnsPoll& (0+255),b
 21986   003506  0100               	movlb	0	; () banked
 21987   003508  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 21988   00350A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21989   00350C  0101               	movlb	1	; () banked
 21990   00350E  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 21991   003510  0100               	movlb	0	; () banked
 21992   003512  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 21993   003514  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21994   003516  0101               	movlb	1	; () banked
 21995   003518  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 21996   00351A  0100               	movlb	0	; () banked
 21997   00351C  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 21998   00351E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21999   003520  0101               	movlb	1	; () banked
 22000   003522  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 22001   003524  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 22002   003526  E108               	bnz	u25940
 22003   003528  0E91               	movlw	145
 22004   00352A  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 22005   00352C  0ED0               	movlw	208
 22006   00352E  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22007   003530  0E03               	movlw	3
 22008   003532  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 22009   003534  A0D8               	btfss	status,0,c
 22010   003536  D004               	goto	l1570
 22011   003538                     u25940:
 22012                           
 22013                           ; BSR set to: 1
 22014                           ;../../VLCBlib_PIC/mns.c: 716:                     mode_state = MODE_UNINITIALISED;
 22015   003538  0100               	movlb	0	; () banked
 22016   00353A  69C4               	setf	_mode_state& (0+255),b
 22017   00353C                     l24269:
 22018                           
 22019                           ;../../VLCBlib_PIC/mns.c: 717:                     setLEDsByMode();
 22020   00353C  EC94  F060         	call	_setLEDsByMode	;wreg free
 22021   003540                     l1570:
 22022                           
 22023                           ;../../VLCBlib_PIC/mns.c: 719:                 pbTimer.val = tickGet();
 22024   003540  EC23  F05C         	call	_tickGet	;wreg free
 22025   003544  C08D  F0AA         	movff	?_tickGet,_pbTimer
 22026   003548  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 22027   00354C  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 22028   003550  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 22029                           
 22030                           ;../../VLCBlib_PIC/mns.c: 720:                 pbWasPushed = FALSE;
 22031   003554  0E00               	movlw	0
 22032   003556  0100               	movlb	0	; () banked
 22033   003558  6FC0               	movwf	_pbWasPushed& (0+255),b
 22034                           
 22035                           ;../../VLCBlib_PIC/mns.c: 721:             } else {
 22036   00355A  0012               	return	
 22037   00355C                     l24273:
 22038                           
 22039                           ; BSR set to: 0
 22040                           ;../../VLCBlib_PIC/mns.c: 722:                 pbWasPushed = TRUE;
 22041   00355C  0E01               	movlw	1
 22042   00355E  6FC0               	movwf	_pbWasPushed& (0+255),b
 22043   003560  0012               	return	
 22044   003562                     l1572:
 22045                           
 22046                           ; BSR set to: 0
 22047                           ;../../VLCBlib_PIC/mns.c: 727:             if ((!(PORTAbits.RA2)) == 0) {
 22048   003562  A480               	btfss	128,2,c	;volatile
 22049   003564  D7FB               	goto	l24273
 22050                           
 22051                           ; BSR set to: 0
 22052                           ;../../VLCBlib_PIC/mns.c: 729:                 if (pbWasPushed && ((tickGet() - pbTimer.
      +                          val) > (62500/10)) && ((tickGet() - pbTimer.val) < 2*62500)) {
 22053   003566  51C0               	movf	_pbWasPushed& (0+255),w,b
 22054   003568  B4D8               	btfsc	status,2,c
 22055   00356A  D055               	goto	l24289
 22056                           
 22057                           ; BSR set to: 0
 22058   00356C  EC23  F05C         	call	_tickGet	;wreg free
 22059   003570  0100               	movlb	0	; () banked
 22060   003572  51AA               	movf	_pbTimer& (0+255),w,b
 22061   003574  5D8D               	subwf	?_tickGet& (0+255),w,b
 22062   003576  0101               	movlb	1	; () banked
 22063   003578  6FCB               	movwf	??_mnsPoll& (0+255),b
 22064   00357A  0100               	movlb	0	; () banked
 22065   00357C  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 22066   00357E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22067   003580  0101               	movlb	1	; () banked
 22068   003582  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 22069   003584  0100               	movlb	0	; () banked
 22070   003586  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 22071   003588  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22072   00358A  0101               	movlb	1	; () banked
 22073   00358C  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 22074   00358E  0100               	movlb	0	; () banked
 22075   003590  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 22076   003592  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22077   003594  0101               	movlb	1	; () banked
 22078   003596  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 22079   003598  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 22080   00359A  11CD               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 22081   00359C  E106               	bnz	u25970
 22082   00359E  0E6B               	movlw	107
 22083   0035A0  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 22084   0035A2  0E18               	movlw	24
 22085   0035A4  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22086   0035A6  A0D8               	btfss	status,0,c
 22087   0035A8  D036               	goto	l24289
 22088   0035AA                     u25970:
 22089                           
 22090                           ; BSR set to: 1
 22091   0035AA  EC23  F05C         	call	_tickGet	;wreg free
 22092   0035AE  0100               	movlb	0	; () banked
 22093   0035B0  51AA               	movf	_pbTimer& (0+255),w,b
 22094   0035B2  5D8D               	subwf	?_tickGet& (0+255),w,b
 22095   0035B4  0101               	movlb	1	; () banked
 22096   0035B6  6FCB               	movwf	??_mnsPoll& (0+255),b
 22097   0035B8  0100               	movlb	0	; () banked
 22098   0035BA  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 22099   0035BC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22100   0035BE  0101               	movlb	1	; () banked
 22101   0035C0  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 22102   0035C2  0100               	movlb	0	; () banked
 22103   0035C4  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 22104   0035C6  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22105   0035C8  0101               	movlb	1	; () banked
 22106   0035CA  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 22107   0035CC  0100               	movlb	0	; () banked
 22108   0035CE  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 22109   0035D0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22110   0035D2  0101               	movlb	1	; () banked
 22111   0035D4  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 22112   0035D6  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 22113   0035D8  E11E               	bnz	l24289
 22114   0035DA  0E48               	movlw	72
 22115   0035DC  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 22116   0035DE  0EE8               	movlw	232
 22117   0035E0  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22118   0035E2  0E01               	movlw	1
 22119   0035E4  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 22120   0035E6  B0D8               	btfsc	status,0,c
 22121   0035E8  D016               	goto	l24289
 22122                           
 22123                           ; BSR set to: 1
 22124                           ;../../VLCBlib_PIC/mns.c: 731:                     previousNN.word = nn.word;
 22125   0035EA  C0B4  F160         	movff	_nn,_previousNN
 22126   0035EE  C0B5  F161         	movff	_nn+1,_previousNN+1
 22127                           
 22128                           ; BSR set to: 1
 22129                           ;../../VLCBlib_PIC/mns.c: 732:                     nn.bytes.lo = nn.bytes.hi = 0;
 22130   0035F2  0E00               	movlw	0
 22131   0035F4  0100               	movlb	0	; () banked
 22132   0035F6  6FB5               	movwf	(_nn+1)& (0+255),b
 22133   0035F8  C0B5  F0B4         	movff	_nn+1,_nn
 22134                           
 22135                           ;../../VLCBlib_PIC/mns.c: 734:                     mode_state = MODE_SETUP;
 22136   0035FC  0E00               	movlw	0
 22137   0035FE  6FC4               	movwf	_mode_state& (0+255),b
 22138                           
 22139                           ;../../VLCBlib_PIC/mns.c: 735:                     setupModePreviousMode = MODE_NORMAL;
 22140   003600  0E01               	movlw	1
 22141   003602  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;../../VLCBlib_PIC/mns.c: 737:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 22145   003604  C161  F0A7         	movff	_previousNN+1,sendMessage2@data1
 22146   003608  C160  F0A8         	movff	_previousNN,sendMessage2@data2
 22147   00360C  0E50               	movlw	80
 22148   00360E  ECF5  F060         	call	_sendMessage2
 22149                           
 22150                           ;../../VLCBlib_PIC/mns.c: 738:                     setLEDsByMode();
 22151   003612  EC94  F060         	call	_setLEDsByMode	;wreg free
 22152   003616                     l24289:
 22153                           
 22154                           ;../../VLCBlib_PIC/mns.c: 740:                 if (pbWasPushed &&((tickGet() - pbTimer.v
      +                          al) >= 4*62500)) {
 22155   003616  0100               	movlb	0	; () banked
 22156   003618  51C0               	movf	_pbWasPushed& (0+255),w,b
 22157   00361A  B4D8               	btfsc	status,2,c
 22158   00361C  D791               	goto	l1570
 22159                           
 22160                           ; BSR set to: 0
 22161   00361E  EC23  F05C         	call	_tickGet	;wreg free
 22162   003622  0100               	movlb	0	; () banked
 22163   003624  51AA               	movf	_pbTimer& (0+255),w,b
 22164   003626  5D8D               	subwf	?_tickGet& (0+255),w,b
 22165   003628  0101               	movlb	1	; () banked
 22166   00362A  6FCB               	movwf	??_mnsPoll& (0+255),b
 22167   00362C  0100               	movlb	0	; () banked
 22168   00362E  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 22169   003630  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22170   003632  0101               	movlb	1	; () banked
 22171   003634  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 22172   003636  0100               	movlb	0	; () banked
 22173   003638  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 22174   00363A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22175   00363C  0101               	movlb	1	; () banked
 22176   00363E  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 22177   003640  0100               	movlb	0	; () banked
 22178   003642  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 22179   003644  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22180   003646  0101               	movlb	1	; () banked
 22181   003648  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 22182   00364A  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 22183   00364C  E108               	bnz	u26000
 22184   00364E  0E90               	movlw	144
 22185   003650  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 22186   003652  0ED0               	movlw	208
 22187   003654  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 22188   003656  0E03               	movlw	3
 22189   003658  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 22190   00365A  A0D8               	btfss	status,0,c
 22191   00365C  D771               	goto	l1570
 22192   00365E                     u26000:
 22193                           
 22194                           ; BSR set to: 1
 22195                           ;../../VLCBlib_PIC/mns.c: 742:                     previousNN.word = nn.word;
 22196   00365E  C0B4  F160         	movff	_nn,_previousNN
 22197   003662  C0B5  F161         	movff	_nn+1,_previousNN+1
 22198                           
 22199                           ; BSR set to: 1
 22200                           ;../../VLCBlib_PIC/mns.c: 743:                     nn.bytes.lo = nn.bytes.hi = 0;
 22201   003666  0E00               	movlw	0
 22202   003668  0100               	movlb	0	; () banked
 22203   00366A  6FB5               	movwf	(_nn+1)& (0+255),b
 22204   00366C  C0B5  F0B4         	movff	_nn+1,_nn
 22205                           
 22206                           ; BSR set to: 0
 22207                           ;../../VLCBlib_PIC/mns.c: 745:                     mode_state = MODE_UNINITIALISED;
 22208   003670  69C4               	setf	_mode_state& (0+255),b
 22209                           
 22210                           ;../../VLCBlib_PIC/mns.c: 746:                     setupModePreviousMode = MODE_NORMAL;
 22211   003672  0E01               	movlw	1
 22212   003674  6FC1               	movwf	_setupModePreviousMode& (0+255),b
 22213                           
 22214                           ; BSR set to: 0
 22215                           ;../../VLCBlib_PIC/mns.c: 748:                     sendMessage2(OPC_NNREL, previousNN.by
      +                          tes.hi, previousNN.bytes.lo);
 22216   003676  C161  F0A7         	movff	_previousNN+1,sendMessage2@data1
 22217   00367A  C160  F0A8         	movff	_previousNN,sendMessage2@data2
 22218   00367E  0E51               	movlw	81
 22219   003680  ECF5  F060         	call	_sendMessage2
 22220   003684  D75B               	goto	l24269
 22221   003686                     l24309:
 22222                           
 22223                           ; BSR set to: 1
 22224   003686  0100               	movlb	0	; () banked
 22225   003688  51C4               	movf	_mode_state& (0+255),w,b
 22226                           
 22227                           ; Switch size 1, requested type "simple"
 22228                           ; Number of cases is 3, Range of values is 0 to 255
 22229                           ; switch strategies available:
 22230                           ; Name         Instructions Cycles
 22231                           ; simple_byte           10     6 (average)
 22232                           ;	Chosen strategy is simple_byte
 22233   00368A  0A00               	xorlw	0	; case 0
 22234   00368C  B4D8               	btfsc	status,2,c
 22235   00368E  D6DD               	goto	l1566
 22236   003690  0AFD               	xorlw	253	; case 253
 22237   003692  B4D8               	btfsc	status,2,c
 22238   003694  D6C1               	goto	l1564
 22239   003696  0A02               	xorlw	2	; case 255
 22240   003698  B4D8               	btfsc	status,2,c
 22241   00369A  D68A               	goto	l1559
 22242   00369C  D762               	goto	l1572
 22243   00369E                     __end_of_mnsPoll:
 22244                           	callstack 0
 22245                           
 22246 ;; *************** function _setLEDsByMode *****************
 22247 ;; Defined at:
 22248 ;;		line 796 in file "../../VLCBlib_PIC/mns.c"
 22249 ;; Parameters:    Size  Location     Type
 22250 ;;		None
 22251 ;; Auto vars:     Size  Location     Type
 22252 ;;		None
 22253 ;; Return value:  Size  Location     Type
 22254 ;;                  1    wreg      void 
 22255 ;; Registers used:
 22256 ;;		wreg, status,2, status,0, cstack
 22257 ;; Tracked objects:
 22258 ;;		On entry : 0/0
 22259 ;;		On exit  : 0/0
 22260 ;;		Unchanged: 0/0
 22261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22266 ;;Total ram usage:        0 bytes
 22267 ;; Hardware stack levels used: 1
 22268 ;; Hardware stack levels required when called: 13
 22269 ;; This function calls:
 22270 ;;		_showStatus
 22271 ;; This function is called by:
 22272 ;;		_mnsPowerUp
 22273 ;;		_mnsProcessMessage
 22274 ;;		_mnsPoll
 22275 ;; This function uses a non-reentrant model
 22276 ;;
 22277                           
 22278                           	psect	text75
 22279   00C128                     __ptext75:
 22280                           	callstack 0
 22281   00C128                     _setLEDsByMode:
 22282                           	callstack 15
 22283                           
 22284                           ;../../VLCBlib_PIC/mns.c: 797:        switch (mode_state) {
 22285                           
 22286                           ;incstack = 0
 22287   00C128  D00C               	goto	l22355
 22288   00C12A                     l22347:
 22289                           
 22290                           ; BSR set to: 0
 22291                           ;../../VLCBlib_PIC/mns.c: 799:             showStatus(STATUS_UNINITIALISED);
 22292   00C12A  0E01               	movlw	1
 22293   00C12C  EC91  F044         	call	_showStatus
 22294                           
 22295                           ;../../VLCBlib_PIC/mns.c: 800:             break;
 22296   00C130  0012               	return	
 22297   00C132                     l22349:
 22298                           
 22299                           ; BSR set to: 0
 22300                           ;../../VLCBlib_PIC/mns.c: 803:             showStatus(STATUS_SETUP);
 22301   00C132  0E02               	movlw	2
 22302   00C134  EC91  F044         	call	_showStatus
 22303                           
 22304                           ;../../VLCBlib_PIC/mns.c: 804:             break;
 22305   00C138  0012               	return	
 22306   00C13A                     l22351:
 22307                           
 22308                           ; BSR set to: 0
 22309                           ;../../VLCBlib_PIC/mns.c: 806:             showStatus(STATUS_NORMAL);
 22310   00C13A  0E03               	movlw	3
 22311   00C13C  EC91  F044         	call	_showStatus
 22312                           
 22313                           ;../../VLCBlib_PIC/mns.c: 807:             break;
 22314   00C140  0012               	return	
 22315   00C142                     l22355:
 22316   00C142  0100               	movlb	0	; () banked
 22317   00C144  51C4               	movf	_mode_state& (0+255),w,b
 22318                           
 22319                           ; Switch size 1, requested type "simple"
 22320                           ; Number of cases is 3, Range of values is 0 to 255
 22321                           ; switch strategies available:
 22322                           ; Name         Instructions Cycles
 22323                           ; simple_byte           10     6 (average)
 22324                           ;	Chosen strategy is simple_byte
 22325   00C146  0A00               	xorlw	0	; case 0
 22326   00C148  B4D8               	btfsc	status,2,c
 22327   00C14A  D7F3               	goto	l22349
 22328   00C14C  0AFD               	xorlw	253	; case 253
 22329   00C14E  B4D8               	btfsc	status,2,c
 22330   00C150  D7F0               	goto	l22349
 22331   00C152  0A02               	xorlw	2	; case 255
 22332   00C154  B4D8               	btfsc	status,2,c
 22333   00C156  D7E9               	goto	l22347
 22334   00C158  D7F0               	goto	l22351
 22335   00C15A                     __end_of_setLEDsByMode:
 22336                           	callstack 0
 22337                           
 22338 ;; *************** function _sendMessage2 *****************
 22339 ;; Defined at:
 22340 ;;		line 1145 in file "../../VLCBlib_PIC/vlcb.c"
 22341 ;; Parameters:    Size  Location     Type
 22342 ;;  opc             1    wreg     enum E12392
 22343 ;;  data1           1   71[BANK0 ] unsigned char 
 22344 ;;  data2           1   72[BANK0 ] unsigned char 
 22345 ;; Auto vars:     Size  Location     Type
 22346 ;;  opc             1   73[BANK0 ] enum E12392
 22347 ;; Return value:  Size  Location     Type
 22348 ;;                  1    wreg      void 
 22349 ;; Registers used:
 22350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22351 ;; Tracked objects:
 22352 ;;		On entry : 0/0
 22353 ;;		On exit  : 0/0
 22354 ;;		Unchanged: 0/0
 22355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22356 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22359 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22360 ;;Total ram usage:        3 bytes
 22361 ;; Hardware stack levels used: 1
 22362 ;; Hardware stack levels required when called: 16
 22363 ;; This function calls:
 22364 ;;		_sendMessage
 22365 ;; This function is called by:
 22366 ;;		_mnsProcessMessage
 22367 ;;		_mnsPoll
 22368 ;;		_nvProcessMessage
 22369 ;;		_doNnclr
 22370 ;;		_doEvlrn
 22371 ;;		_doEvuln
 22372 ;; This function uses a non-reentrant model
 22373 ;;
 22374                           
 22375                           	psect	text76
 22376   00C1EA                     __ptext76:
 22377                           	callstack 0
 22378   00C1EA                     _sendMessage2:
 22379                           	callstack 11
 22380                           
 22381                           ;incstack = 0
 22382                           ;sendMessage2@opc stored from wreg
 22383   00C1EA  0100               	movlb	0	; () banked
 22384   00C1EC  6FA9               	movwf	sendMessage2@opc& (0+255),b
 22385                           
 22386                           ;../../VLCBlib_PIC/vlcb.c: 1146:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 22387   00C1EE  0E03               	movlw	3
 22388   00C1F0  0101               	movlb	1	; () banked
 22389   00C1F2  6FBE               	movwf	sendMessage@len& (0+255),b
 22390   00C1F4  C0A7  F1BF         	movff	sendMessage2@data1,sendMessage@data1
 22391   00C1F8  C0A8  F1C0         	movff	sendMessage2@data2,sendMessage@data2
 22392   00C1FC  0E00               	movlw	0
 22393   00C1FE  6FC1               	movwf	sendMessage@data3& (0+255),b
 22394   00C200  0E00               	movlw	0
 22395   00C202  6FC2               	movwf	sendMessage@data4& (0+255),b
 22396   00C204  0E00               	movlw	0
 22397   00C206  6FC3               	movwf	sendMessage@data5& (0+255),b
 22398   00C208  0E00               	movlw	0
 22399   00C20A  6FC4               	movwf	sendMessage@data6& (0+255),b
 22400   00C20C  0E00               	movlw	0
 22401   00C20E  6FC5               	movwf	sendMessage@data7& (0+255),b
 22402   00C210  0100               	movlb	0	; () banked
 22403   00C212  51A9               	movf	sendMessage2@opc& (0+255),w,b
 22404   00C214  ECE0  F055         	call	_sendMessage
 22405   00C218  0012               	return		;funcret
 22406   00C21A                     __end_of_sendMessage2:
 22407                           	callstack 0
 22408                           
 22409 ;; *************** function _setNormalActions *****************
 22410 ;; Defined at:
 22411 ;;		line 519 in file "../event_consumerDualActionQueue.c"
 22412 ;; Parameters:    Size  Location     Type
 22413 ;;		None
 22414 ;; Auto vars:     Size  Location     Type
 22415 ;;		None
 22416 ;; Return value:  Size  Location     Type
 22417 ;;                  1    wreg      void 
 22418 ;; Registers used:
 22419 ;;		wreg, status,2
 22420 ;; Tracked objects:
 22421 ;;		On entry : 0/0
 22422 ;;		On exit  : 0/0
 22423 ;;		Unchanged: 0/0
 22424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22429 ;;Total ram usage:        0 bytes
 22430 ;; Hardware stack levels used: 1
 22431 ;; Hardware stack levels required when called: 12
 22432 ;; This function calls:
 22433 ;;		Nothing
 22434 ;; This function is called by:
 22435 ;;		_consumer2QProcessMessage
 22436 ;; This function uses a non-reentrant model
 22437 ;;
 22438                           
 22439                           	psect	text77
 22440   00C8CA                     __ptext77:
 22441                           	callstack 0
 22442   00C8CA                     _setNormalActions:
 22443                           	callstack 16
 22444                           
 22445                           ;../event_consumerDualActionQueue.c: 520:     expedited = FALSE;
 22446                           
 22447                           ;incstack = 0
 22448   00C8CA  0E00               	movlw	0
 22449   00C8CC  6E25               	movwf	_expedited^0,c
 22450   00C8CE  0012               	return		;funcret
 22451   00C8D0                     __end_of_setNormalActions:
 22452                           	callstack 0
 22453                           
 22454 ;; *************** function _setExpeditedActions *****************
 22455 ;; Defined at:
 22456 ;;		line 512 in file "../event_consumerDualActionQueue.c"
 22457 ;; Parameters:    Size  Location     Type
 22458 ;;		None
 22459 ;; Auto vars:     Size  Location     Type
 22460 ;;		None
 22461 ;; Return value:  Size  Location     Type
 22462 ;;                  1    wreg      void 
 22463 ;; Registers used:
 22464 ;;		wreg, status,2
 22465 ;; Tracked objects:
 22466 ;;		On entry : 0/0
 22467 ;;		On exit  : 0/0
 22468 ;;		Unchanged: 0/0
 22469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22474 ;;Total ram usage:        0 bytes
 22475 ;; Hardware stack levels used: 1
 22476 ;; Hardware stack levels required when called: 12
 22477 ;; This function calls:
 22478 ;;		Nothing
 22479 ;; This function is called by:
 22480 ;;		_consumer2QProcessMessage
 22481 ;; This function uses a non-reentrant model
 22482 ;;
 22483                           
 22484                           	psect	text78
 22485   00C8D0                     __ptext78:
 22486                           	callstack 0
 22487   00C8D0                     _setExpeditedActions:
 22488                           	callstack 16
 22489                           
 22490                           ;../event_consumerDualActionQueue.c: 513:     expedited = TRUE;
 22491                           
 22492                           ;incstack = 0
 22493   00C8D0  0E01               	movlw	1
 22494   00C8D2  6E25               	movwf	_expedited^0,c
 22495   00C8D4  0012               	return		;funcret
 22496   00C8D6                     __end_of_setExpeditedActions:
 22497                           	callstack 0
 22498                           
 22499 ;; *************** function _pushTwoAction *****************
 22500 ;; Defined at:
 22501 ;;		line 393 in file "../event_consumerDualActionQueue.c"
 22502 ;; Parameters:    Size  Location     Type
 22503 ;;  a               1    wreg     unsigned char 
 22504 ;; Auto vars:     Size  Location     Type
 22505 ;;  a               1   45[BANK0 ] unsigned char 
 22506 ;; Return value:  Size  Location     Type
 22507 ;;                  1    wreg      enum E12766
 22508 ;; Registers used:
 22509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22510 ;; Tracked objects:
 22511 ;;		On entry : 0/0
 22512 ;;		On exit  : 0/0
 22513 ;;		Unchanged: 0/0
 22514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22518 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22519 ;;Total ram usage:        1 bytes
 22520 ;; Hardware stack levels used: 1
 22521 ;; Hardware stack levels required when called: 12
 22522 ;; This function calls:
 22523 ;;		Nothing
 22524 ;; This function is called by:
 22525 ;;		_consumer2QProcessMessage
 22526 ;; This function uses a non-reentrant model
 22527 ;;
 22528                           
 22529                           	psect	text79
 22530   00B67E                     __ptext79:
 22531                           	callstack 0
 22532   00B67E                     _pushTwoAction:
 22533                           	callstack 16
 22534                           
 22535                           ;incstack = 0
 22536                           ;pushTwoAction@a stored from wreg
 22537   00B67E  0100               	movlb	0	; () banked
 22538   00B680  6F8D               	movwf	pushTwoAction@a& (0+255),b
 22539                           
 22540                           ;../event_consumerDualActionQueue.c: 394:     if (expedited) {
 22541   00B682  5025               	movf	_expedited^0,w,c
 22542   00B684  B4D8               	btfsc	status,2,c
 22543   00B686  D015               	goto	l21709
 22544                           
 22545                           ;../event_consumerDualActionQueue.c: 395:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 22546   00B688  0100               	movlb	0	; () banked
 22547   00B68A  29CA               	incf	_expeditedWriteIndex& (0+255),w,b
 22548   00B68C  0B07               	andlw	7
 22549   00B68E  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 22550   00B690  B4D8               	btfsc	status,2,c
 22551   00B692  0012               	return	
 22552                           
 22553                           ; BSR set to: 0
 22554                           ;../event_consumerDualActionQueue.c: 397:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 22555   00B694  0EC4               	movlw	low _expeditedQueueBuf
 22556   00B696  25CA               	addwf	_expeditedWriteIndex& (0+255),w,b
 22557   00B698  6ED9               	movwf	fsr2l,c
 22558   00B69A  6ADA               	clrf	fsr2h,c
 22559   00B69C  0E02               	movlw	high _expeditedQueueBuf
 22560   00B69E  22DA               	addwfc	fsr2h,f,c
 22561   00B6A0  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22562                           
 22563                           ; BSR set to: 0
 22564   00B6A4  2BCA               	incf	_expeditedWriteIndex& (0+255),f,b
 22565                           
 22566                           ; BSR set to: 0
 22567                           ;../event_consumerDualActionQueue.c: 398:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 22568   00B6A6  0E07               	movlw	7
 22569   00B6A8  65CA               	cpfsgt	_expeditedWriteIndex& (0+255),b
 22570   00B6AA  0012               	return	
 22571                           
 22572                           ; BSR set to: 0
 22573   00B6AC  0E00               	movlw	0
 22574   00B6AE  6FCA               	movwf	_expeditedWriteIndex& (0+255),b
 22575   00B6B0  0012               	return	
 22576   00B6B2                     l21709:
 22577                           
 22578                           ;../event_consumerDualActionQueue.c: 401:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 22579   00B6B2  0100               	movlb	0	; () banked
 22580   00B6B4  29CC               	incf	_normalWriteIndex& (0+255),w,b
 22581   00B6B6  0B3F               	andlw	63
 22582   00B6B8  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 22583   00B6BA  B4D8               	btfsc	status,2,c
 22584   00B6BC  0012               	return	
 22585                           
 22586                           ; BSR set to: 0
 22587                           ;../event_consumerDualActionQueue.c: 403:     normalQueueBuf[normalWriteIndex++] = a;
 22588   00B6BE  0E80               	movlw	low _normalQueueBuf
 22589   00B6C0  25CC               	addwf	_normalWriteIndex& (0+255),w,b
 22590   00B6C2  6ED9               	movwf	fsr2l,c
 22591   00B6C4  6ADA               	clrf	fsr2h,c
 22592   00B6C6  0E04               	movlw	high _normalQueueBuf
 22593   00B6C8  22DA               	addwfc	fsr2h,f,c
 22594   00B6CA  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22595                           
 22596                           ; BSR set to: 0
 22597   00B6CE  2BCC               	incf	_normalWriteIndex& (0+255),f,b
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;../event_consumerDualActionQueue.c: 404:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 22601   00B6D0  0E3F               	movlw	63
 22602   00B6D2  65CC               	cpfsgt	_normalWriteIndex& (0+255),b
 22603   00B6D4  0012               	return	
 22604                           
 22605                           ; BSR set to: 0
 22606   00B6D6  0E00               	movlw	0
 22607   00B6D8  6FCC               	movwf	_normalWriteIndex& (0+255),b
 22608                           
 22609                           ; BSR set to: 0
 22610   00B6DA  0012               	return		;funcret
 22611   00B6DC                     __end_of_pushTwoAction:
 22612                           	callstack 0
 22613                           
 22614 ;; *************** function _canReceiveMessage *****************
 22615 ;; Defined at:
 22616 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 22617 ;; Parameters:    Size  Location     Type
 22618 ;;  m               2    9[BANK1 ] PTR struct Message
 22619 ;;		 -> poll@m(9), 
 22620 ;; Auto vars:     Size  Location     Type
 22621 ;;  p               2   16[BANK1 ] PTR unsigned char 
 22622 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22623 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22624 ;;		 -> NULL(0), 
 22625 ;;  mp              2   13[BANK1 ] PTR struct Message
 22626 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22627 ;;  no              1   15[BANK1 ] unsigned char 
 22628 ;;  messageAvail    1   12[BANK1 ] enum E13077
 22629 ;;  incomingCanI    1    0        unsigned char 
 22630 ;; Return value:  Size  Location     Type
 22631 ;;                  1    wreg      enum E13077
 22632 ;; Registers used:
 22633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22634 ;; Tracked objects:
 22635 ;;		On entry : 0/0
 22636 ;;		On exit  : 0/0
 22637 ;;		Unchanged: 0/0
 22638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22639 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22640 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22641 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22642 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22643 ;;Total ram usage:        9 bytes
 22644 ;; Hardware stack levels used: 1
 22645 ;; Hardware stack levels required when called: 20
 22646 ;; This function calls:
 22647 ;;		_getBufferPointer
 22648 ;;		_getNumRxBuffersInUse
 22649 ;;		_handleSelfEnumeration
 22650 ;;		_memcpy
 22651 ;;		_pop
 22652 ;;		_processEnumeration
 22653 ;; This function is called by:
 22654 ;;		_poll
 22655 ;; This function uses a non-reentrant model
 22656 ;;
 22657                           
 22658                           	psect	text80
 22659   0069B2                     __ptext80:
 22660                           	callstack 0
 22661   0069B2                     _canReceiveMessage:
 22662                           	callstack 9
 22663                           
 22664                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          591:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 592:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 593:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 595:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 598:     PIE5bits.
      +                          FIFOWMIE = 0;
 22665                           
 22666                           ; BSR set to: 0
 22667                           ;incstack = 0
 22668   0069B2  9076               	bcf	118,0,c	;volatile
 22669                           
 22670                           ;../../VLCBlib_PIC/can18_ecan.c: 599:     processEnumeration();
 22671   0069B4  EC4D  F03C         	call	_processEnumeration	;wreg free
 22672                           
 22673                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     no = getNumRxBuffersInUse();
 22674   0069B8  ECCF  F05F         	call	_getNumRxBuffersInUse	;wreg free
 22675   0069BC  0101               	movlb	1	; () banked
 22676   0069BE  6FCD               	movwf	canReceiveMessage@no& (0+255),b
 22677                           
 22678                           ; BSR set to: 1
 22679                           ;../../VLCBlib_PIC/can18_ecan.c: 604:     if (canDiagnostics[0x12].asUint < no) {
 22680   0069C0  51CD               	movf	canReceiveMessage@no& (0+255),w,b
 22681   0069C2  5D8A               	subwf	(_canDiagnostics+36)& (0+255),w,b
 22682   0069C4  0E00               	movlw	0
 22683   0069C6  598B               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 22684   0069C8  B0D8               	btfsc	status,0,c
 22685   0069CA  D003               	goto	l24709
 22686                           
 22687                           ; BSR set to: 1
 22688                           ;../../VLCBlib_PIC/can18_ecan.c: 605:         canDiagnostics[0x12].asUint = no;
 22689   0069CC  C1CD  F18A         	movff	canReceiveMessage@no,_canDiagnostics+36
 22690   0069D0  6B8B               	clrf	(_canDiagnostics+37)& (0+255),b
 22691   0069D2                     l24709:
 22692                           
 22693                           ; BSR set to: 1
 22694                           ;../../VLCBlib_PIC/can18_ecan.c: 608:     mp = pop(&rxQueue);
 22695   0069D2  0E26               	movlw	low _rxQueue
 22696   0069D4  0100               	movlb	0	; () banked
 22697   0069D6  6F8D               	movwf	pop@q& (0+255),b
 22698   0069D8  6B8E               	clrf	(pop@q+1)& (0+255),b
 22699   0069DA  ECFC  F04E         	call	_pop	;wreg free
 22700   0069DE  C08D  F1CB         	movff	?_pop,canReceiveMessage@mp
 22701   0069E2  C08E  F1CC         	movff	?_pop+1,canReceiveMessage@mp+1
 22702                           
 22703                           ;../../VLCBlib_PIC/can18_ecan.c: 609:     if (mp != ((void*)0)) {
 22704   0069E6  0101               	movlb	1	; () banked
 22705   0069E8  51CB               	movf	canReceiveMessage@mp& (0+255),w,b
 22706   0069EA  11CC               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 22707   0069EC  B4D8               	btfsc	status,2,c
 22708   0069EE  D012               	goto	l2535
 22709                           
 22710                           ; BSR set to: 1
 22711                           ;../../VLCBlib_PIC/can18_ecan.c: 610:         memcpy(m, mp, sizeof(Message));
 22712   0069F0  C1C7  F08D         	movff	canReceiveMessage@m,memcpy@d1
 22713   0069F4  C1C8  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 22714   0069F8  C1CB  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 22715   0069FC  C1CC  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 22716   006A00  0E00               	movlw	0
 22717   006A02  0100               	movlb	0	; () banked
 22718   006A04  6F92               	movwf	(memcpy@n+1)& (0+255),b
 22719   006A06  0E09               	movlw	9
 22720   006A08  6F91               	movwf	memcpy@n& (0+255),b
 22721   006A0A  EC10  F05F         	call	_memcpy	;wreg free
 22722                           
 22723                           ;../../VLCBlib_PIC/can18_ecan.c: 611:         PIE5bits.FIFOWMIE = 1;
 22724   006A0E  8076               	bsf	118,0,c	;volatile
 22725                           
 22726                           ;../../VLCBlib_PIC/can18_ecan.c: 612:         return RECEIVED;
 22727   006A10  0E01               	movlw	1
 22728   006A12  0012               	return	
 22729   006A14                     l2535:
 22730                           
 22731                           ; BSR set to: 1
 22732                           ;../../VLCBlib_PIC/can18_ecan.c: 614:         if (COMSTATbits.NOT_FIFOEMPTY) {
 22733   006A14  AE71               	btfss	113,7,c	;volatile
 22734   006A16  D00D               	goto	u26400
 22735                           
 22736                           ; BSR set to: 1
 22737                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             p = getBufferPointer(CANCON & 0x07);
 22738   006A18  506F               	movf	111,w,c	;volatile
 22739   006A1A  0B07               	andlw	7
 22740   006A1C  ECCF  F051         	call	_getBufferPointer
 22741   006A20  C08D  F1CE         	movff	?_getBufferPointer,canReceiveMessage@p
 22742   006A24  C08E  F1CF         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 22743                           
 22744                           ;../../VLCBlib_PIC/can18_ecan.c: 616:             if (p == ((void*)0)) {
 22745   006A28  0101               	movlb	1	; () banked
 22746   006A2A  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22747   006A2C  11CF               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 22748   006A2E  A4D8               	btfss	status,2,c
 22749   006A30  D003               	goto	l2539
 22750   006A32                     u26400:
 22751                           
 22752                           ; BSR set to: 1
 22753                           ;../../VLCBlib_PIC/can18_ecan.c: 618:                 PIE5bits.FIFOWMIE = 1;
 22754   006A32  8076               	bsf	118,0,c	;volatile
 22755   006A34                     l24729:
 22756                           
 22757                           ; BSR set to: 1
 22758                           ;../../VLCBlib_PIC/can18_ecan.c: 619:                 return NOT_RECEIVED;
 22759   006A34  0E00               	movlw	0
 22760   006A36  0012               	return	
 22761   006A38                     l2539:
 22762                           
 22763                           ; BSR set to: 1
 22764                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             PIR5bits.RXBnIF = 0;
 22765   006A38  9277               	bcf	119,1,c	;volatile
 22766                           
 22767                           ; BSR set to: 1
 22768                           ;../../VLCBlib_PIC/can18_ecan.c: 623:             if (p[2] & 0x08) return NOT_RECEIVED;
 22769   006A3A  EE20 F002          	lfsr	2,2
 22770   006A3E  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22771   006A40  26D9               	addwf	fsr2l,f,c
 22772   006A42  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22773   006A44  22DA               	addwfc	fsr2h,f,c
 22774   006A46  B6DF               	btfsc	indf2,3,c
 22775   006A48  D7F5               	goto	l24729
 22776                           
 22777                           ; BSR set to: 1
 22778                           ;../../VLCBlib_PIC/can18_ecan.c: 625:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 22779   006A4A  C1CE  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 22780   006A4E  C1CF  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 22781   006A52  EC30  F041         	call	_handleSelfEnumeration	;wreg free
 22782   006A56  06E8               	decf	wreg,f,c
 22783   006A58  A4D8               	btfss	status,2,c
 22784   006A5A  D08F               	goto	l24767
 22785                           
 22786                           ;../../VLCBlib_PIC/can18_ecan.c: 628:                 canDiagnostics[0x09].asUint++;
 22787   006A5C  0101               	movlb	1	; () banked
 22788   006A5E  4B78               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 22789   006A60  2B79               	incf	(_canDiagnostics+19)& (0+255),f,b
 22790                           
 22791                           ; BSR set to: 1
 22792                           ;../../VLCBlib_PIC/can18_ecan.c: 633:                     m->opc = p[6];
 22793   006A62  EE20 F006          	lfsr	2,6
 22794   006A66  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22795   006A68  26D9               	addwf	fsr2l,f,c
 22796   006A6A  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22797   006A6C  22DA               	addwfc	fsr2h,f,c
 22798   006A6E  EE10 F001          	lfsr	1,1
 22799   006A72  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22800   006A74  26E1               	addwf	fsr1l,f,c
 22801   006A76  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22802   006A78  22E2               	addwfc	fsr1h,f,c
 22803   006A7A  CFDF FFE7          	movff	indf2,indf1
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;../../VLCBlib_PIC/can18_ecan.c: 634:                     m->len = p[5] & 0xF;
 22807   006A7E  EE20 F005          	lfsr	2,5
 22808   006A82  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22809   006A84  26D9               	addwf	fsr2l,f,c
 22810   006A86  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22811   006A88  22DA               	addwfc	fsr2h,f,c
 22812   006A8A  50DF               	movf	indf2,w,c
 22813   006A8C  0B0F               	andlw	15
 22814   006A8E  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22815   006A92  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22816   006A96  6EDF               	movwf	indf2,c
 22817                           
 22818                           ; BSR set to: 1
 22819                           ;../../VLCBlib_PIC/can18_ecan.c: 635:                     if (m->len > 8) {
 22820   006A98  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22821   006A9C  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22822   006AA0  0E08               	movlw	8
 22823   006AA2  64DF               	cpfsgt	indf2,c
 22824   006AA4  D006               	goto	l24751
 22825                           
 22826                           ; BSR set to: 1
 22827                           ;../../VLCBlib_PIC/can18_ecan.c: 636:                         m->len = 8;
 22828   006AA6  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 22829   006AAA  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22830   006AAE  0E08               	movlw	8
 22831   006AB0  6EDF               	movwf	indf2,c
 22832   006AB2                     l24751:
 22833                           
 22834                           ; BSR set to: 1
 22835                           ;../../VLCBlib_PIC/can18_ecan.c: 638:                     m->bytes[0] = p[7];
 22836   006AB2  EE20 F007          	lfsr	2,7
 22837   006AB6  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22838   006AB8  26D9               	addwf	fsr2l,f,c
 22839   006ABA  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22840   006ABC  22DA               	addwfc	fsr2h,f,c
 22841   006ABE  EE10 F002          	lfsr	1,2
 22842   006AC2  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22843   006AC4  26E1               	addwf	fsr1l,f,c
 22844   006AC6  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22845   006AC8  22E2               	addwfc	fsr1h,f,c
 22846   006ACA  CFDF FFE7          	movff	indf2,indf1
 22847                           
 22848                           ; BSR set to: 1
 22849                           ;../../VLCBlib_PIC/can18_ecan.c: 639:                     m->bytes[1] = p[8];
 22850   006ACE  EE20 F008          	lfsr	2,8
 22851   006AD2  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22852   006AD4  26D9               	addwf	fsr2l,f,c
 22853   006AD6  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22854   006AD8  22DA               	addwfc	fsr2h,f,c
 22855   006ADA  EE10 F003          	lfsr	1,3
 22856   006ADE  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22857   006AE0  26E1               	addwf	fsr1l,f,c
 22858   006AE2  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22859   006AE4  22E2               	addwfc	fsr1h,f,c
 22860   006AE6  CFDF FFE7          	movff	indf2,indf1
 22861                           
 22862                           ; BSR set to: 1
 22863                           ;../../VLCBlib_PIC/can18_ecan.c: 640:                     m->bytes[2] = p[9];
 22864   006AEA  EE20 F009          	lfsr	2,9
 22865   006AEE  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22866   006AF0  26D9               	addwf	fsr2l,f,c
 22867   006AF2  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22868   006AF4  22DA               	addwfc	fsr2h,f,c
 22869   006AF6  EE10 F004          	lfsr	1,4
 22870   006AFA  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22871   006AFC  26E1               	addwf	fsr1l,f,c
 22872   006AFE  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22873   006B00  22E2               	addwfc	fsr1h,f,c
 22874   006B02  CFDF FFE7          	movff	indf2,indf1
 22875                           
 22876                           ; BSR set to: 1
 22877                           ;../../VLCBlib_PIC/can18_ecan.c: 641:                     m->bytes[3] = p[10];
 22878   006B06  EE20 F00A          	lfsr	2,10
 22879   006B0A  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22880   006B0C  26D9               	addwf	fsr2l,f,c
 22881   006B0E  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22882   006B10  22DA               	addwfc	fsr2h,f,c
 22883   006B12  EE10 F005          	lfsr	1,5
 22884   006B16  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22885   006B18  26E1               	addwf	fsr1l,f,c
 22886   006B1A  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22887   006B1C  22E2               	addwfc	fsr1h,f,c
 22888   006B1E  CFDF FFE7          	movff	indf2,indf1
 22889                           
 22890                           ; BSR set to: 1
 22891                           ;../../VLCBlib_PIC/can18_ecan.c: 642:                     m->bytes[4] = p[11];
 22892   006B22  EE20 F00B          	lfsr	2,11
 22893   006B26  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22894   006B28  26D9               	addwf	fsr2l,f,c
 22895   006B2A  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22896   006B2C  22DA               	addwfc	fsr2h,f,c
 22897   006B2E  EE10 F006          	lfsr	1,6
 22898   006B32  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22899   006B34  26E1               	addwf	fsr1l,f,c
 22900   006B36  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22901   006B38  22E2               	addwfc	fsr1h,f,c
 22902   006B3A  CFDF FFE7          	movff	indf2,indf1
 22903                           
 22904                           ; BSR set to: 1
 22905                           ;../../VLCBlib_PIC/can18_ecan.c: 643:                     m->bytes[5] = p[12];
 22906   006B3E  EE20 F00C          	lfsr	2,12
 22907   006B42  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22908   006B44  26D9               	addwf	fsr2l,f,c
 22909   006B46  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22910   006B48  22DA               	addwfc	fsr2h,f,c
 22911   006B4A  EE10 F007          	lfsr	1,7
 22912   006B4E  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22913   006B50  26E1               	addwf	fsr1l,f,c
 22914   006B52  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22915   006B54  22E2               	addwfc	fsr1h,f,c
 22916   006B56  CFDF FFE7          	movff	indf2,indf1
 22917                           
 22918                           ; BSR set to: 1
 22919                           ;../../VLCBlib_PIC/can18_ecan.c: 644:                     m->bytes[6] = p[13];
 22920   006B5A  EE20 F00D          	lfsr	2,13
 22921   006B5E  51CE               	movf	canReceiveMessage@p& (0+255),w,b
 22922   006B60  26D9               	addwf	fsr2l,f,c
 22923   006B62  51CF               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22924   006B64  22DA               	addwfc	fsr2h,f,c
 22925   006B66  EE10 F008          	lfsr	1,8
 22926   006B6A  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 22927   006B6C  26E1               	addwf	fsr1l,f,c
 22928   006B6E  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22929   006B70  22E2               	addwfc	fsr1h,f,c
 22930   006B72  CFDF FFE7          	movff	indf2,indf1
 22931                           
 22932                           ; BSR set to: 1
 22933                           ;../../VLCBlib_PIC/can18_ecan.c: 645:                     messageAvailable = RECEIVED;
 22934   006B76  0E01               	movlw	1
 22935   006B78  6FCA               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 22936   006B7A                     l24767:
 22937                           
 22938                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             if (PIR5bits.IRXIF) {
 22939   006B7A  AE77               	btfss	119,7,c	;volatile
 22940   006B7C  D004               	goto	l24773
 22941                           
 22942                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 canDiagnostics[0x01].asUint++;
 22943   006B7E  0101               	movlb	1	; () banked
 22944   006B80  4B68               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 22945   006B82  2B69               	incf	(_canDiagnostics+3)& (0+255),f,b
 22946                           
 22947                           ; BSR set to: 1
 22948                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                 PIR5bits.IRXIF = 0;
 22949   006B84  9E77               	bcf	119,7,c	;volatile
 22950   006B86                     l24773:
 22951                           
 22952                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             p[0] &= 0x7f;
 22953   006B86  C1CE  FFD9         	movff	canReceiveMessage@p,fsr2l
 22954   006B8A  C1CF  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 22955   006B8E  0E7F               	movlw	127
 22956   006B90  16DF               	andwf	indf2,f,c
 22957                           
 22958                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             PIE5bits.FIFOWMIE = 1;
 22959   006B92  8076               	bsf	118,0,c	;volatile
 22960                           
 22961                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             return messageAvailable;
 22962   006B94  0101               	movlb	1	; () banked
 22963   006B96  51CA               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 22964   006B98  0012               	return	
 22965   006B9A                     __end_of_canReceiveMessage:
 22966                           	callstack 0
 22967                           
 22968 ;; *************** function _processEnumeration *****************
 22969 ;; Defined at:
 22970 ;;		line 903 in file "../../VLCBlib_PIC/can18_ecan.c"
 22971 ;; Parameters:    Size  Location     Type
 22972 ;;		None
 22973 ;; Auto vars:     Size  Location     Type
 22974 ;;  i               1    8[BANK1 ] unsigned char 
 22975 ;;  newCanId        1    7[BANK1 ] unsigned char 
 22976 ;;  enumResult      1    6[BANK1 ] unsigned char 
 22977 ;; Return value:  Size  Location     Type
 22978 ;;                  1    wreg      void 
 22979 ;; Registers used:
 22980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22981 ;; Tracked objects:
 22982 ;;		On entry : 0/0
 22983 ;;		On exit  : 0/0
 22984 ;;		Unchanged: 0/0
 22985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22987 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22988 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22989 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22990 ;;Total ram usage:        7 bytes
 22991 ;; Hardware stack levels used: 1
 22992 ;; Hardware stack levels required when called: 19
 22993 ;; This function calls:
 22994 ;;		_setNewCanId
 22995 ;;		_tickGet
 22996 ;;		_updateModuleErrorStatus
 22997 ;; This function is called by:
 22998 ;;		_canReceiveMessage
 22999 ;; This function uses a non-reentrant model
 23000 ;;
 23001                           
 23002                           	psect	text81
 23003   00789A                     __ptext81:
 23004                           	callstack 0
 23005   00789A                     _processEnumeration:
 23006                           	callstack 9
 23007                           
 23008                           ;../../VLCBlib_PIC/can18_ecan.c: 904:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 906:     switch (enumerationState) {
 23009                           
 23010                           ;incstack = 0
 23011   00789A  D09B               	goto	l22769
 23012   00789C                     l22707:
 23013                           
 23014                           ; BSR set to: 1
 23015                           ;../../VLCBlib_PIC/can18_ecan.c: 908:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 23016   00789C  EC23  F05C         	call	_tickGet	;wreg free
 23017   0078A0  5011               	movf	_enumerationStartTime^0,w,c
 23018   0078A2  0100               	movlb	0	; () banked
 23019   0078A4  5D8D               	subwf	?_tickGet& (0+255),w,b
 23020   0078A6  0101               	movlb	1	; () banked
 23021   0078A8  6FC0               	movwf	??_processEnumeration& (0+255),b
 23022   0078AA  5012               	movf	(_enumerationStartTime+1)^0,w,c
 23023   0078AC  0100               	movlb	0	; () banked
 23024   0078AE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23025   0078B0  0101               	movlb	1	; () banked
 23026   0078B2  6FC1               	movwf	(??_processEnumeration+1)& (0+255),b
 23027   0078B4  5013               	movf	(_enumerationStartTime+2)^0,w,c
 23028   0078B6  0100               	movlb	0	; () banked
 23029   0078B8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23030   0078BA  0101               	movlb	1	; () banked
 23031   0078BC  6FC2               	movwf	(??_processEnumeration+2)& (0+255),b
 23032   0078BE  5014               	movf	(_enumerationStartTime+3)^0,w,c
 23033   0078C0  0100               	movlb	0	; () banked
 23034   0078C2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23035   0078C4  0101               	movlb	1	; () banked
 23036   0078C6  6FC3               	movwf	(??_processEnumeration+3)& (0+255),b
 23037   0078C8  51C3               	movf	(??_processEnumeration+3)& (0+255),w,b
 23038   0078CA  11C2               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 23039   0078CC  E106               	bnz	u23760
 23040   0078CE  0ED5               	movlw	213
 23041   0078D0  5DC0               	subwf	??_processEnumeration& (0+255),w,b
 23042   0078D2  0E30               	movlw	48
 23043   0078D4  59C1               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 23044   0078D6  A0D8               	btfss	status,0,c
 23045   0078D8  0012               	return	
 23046   0078DA                     u23760:
 23047                           
 23048                           ; BSR set to: 1
 23049                           ;../../VLCBlib_PIC/can18_ecan.c: 910:                 for (i=1; i< (0x7F/8)+1; i++) {
 23050   0078DA  0E01               	movlw	1
 23051   0078DC  6FC6               	movwf	processEnumeration@i& (0+255),b
 23052   0078DE                     l22715:
 23053                           
 23054                           ; BSR set to: 1
 23055                           ;../../VLCBlib_PIC/can18_ecan.c: 911:                     enumerationResults[i] = 0;
 23056   0078DE  0E34               	movlw	low _enumerationResults
 23057   0078E0  25C6               	addwf	processEnumeration@i& (0+255),w,b
 23058   0078E2  6ED9               	movwf	fsr2l,c
 23059   0078E4  6ADA               	clrf	fsr2h,c
 23060   0078E6  0E02               	movlw	high _enumerationResults
 23061   0078E8  22DA               	addwfc	fsr2h,f,c
 23062   0078EA  6ADF               	clrf	indf2,c
 23063                           
 23064                           ; BSR set to: 1
 23065                           ;../../VLCBlib_PIC/can18_ecan.c: 912:                 }
 23066   0078EC  2BC6               	incf	processEnumeration@i& (0+255),f,b
 23067                           
 23068                           ; BSR set to: 1
 23069   0078EE  0E0F               	movlw	15
 23070   0078F0  65C6               	cpfsgt	processEnumeration@i& (0+255),b
 23071   0078F2  D7F5               	goto	l22715
 23072                           
 23073                           ; BSR set to: 1
 23074                           ;../../VLCBlib_PIC/can18_ecan.c: 913:                 enumerationResults[0] = 1;
 23075   0078F4  0E01               	movlw	1
 23076   0078F6  0102               	movlb	2	; () banked
 23077   0078F8  6F34               	movwf	_enumerationResults& (0+255),b
 23078                           
 23079                           ;../../VLCBlib_PIC/can18_ecan.c: 915:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 23080   0078FA  0E02               	movlw	2
 23081   0078FC  0100               	movlb	0	; () banked
 23082   0078FE  6FB7               	movwf	_enumerationState& (0+255),b
 23083                           
 23084                           ; BSR set to: 0
 23085                           ;../../VLCBlib_PIC/can18_ecan.c: 916:                 enumerationStartTime.val = tickGet
      +                          ();
 23086   007900  EC23  F05C         	call	_tickGet	;wreg free
 23087   007904  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 23088   007908  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 23089   00790C  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 23090   007910  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 23091                           
 23092                           ;../../VLCBlib_PIC/can18_ecan.c: 918:                 canDiagnostics[0x0D].asUint++;
 23093   007914  0101               	movlb	1	; () banked
 23094   007916  4B80               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 23095   007918  2B81               	incf	(_canDiagnostics+27)& (0+255),f,b
 23096                           
 23097                           ; BSR set to: 1
 23098                           ;../../VLCBlib_PIC/can18_ecan.c: 920:                 TXB1CONbits.TXREQ = 1;
 23099   00791A  010F               	movlb	15	; () banked
 23100   00791C  8710               	bsf	16,3,b	;volatile
 23101   00791E  0012               	return	
 23102   007920                     l22729:
 23103                           
 23104                           ; BSR set to: 1
 23105                           ;../../VLCBlib_PIC/can18_ecan.c: 924:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 23106   007920  EC23  F05C         	call	_tickGet	;wreg free
 23107   007924  5011               	movf	_enumerationStartTime^0,w,c
 23108   007926  0100               	movlb	0	; () banked
 23109   007928  5D8D               	subwf	?_tickGet& (0+255),w,b
 23110   00792A  0101               	movlb	1	; () banked
 23111   00792C  6FC0               	movwf	??_processEnumeration& (0+255),b
 23112   00792E  5012               	movf	(_enumerationStartTime+1)^0,w,c
 23113   007930  0100               	movlb	0	; () banked
 23114   007932  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23115   007934  0101               	movlb	1	; () banked
 23116   007936  6FC1               	movwf	(??_processEnumeration+1)& (0+255),b
 23117   007938  5013               	movf	(_enumerationStartTime+2)^0,w,c
 23118   00793A  0100               	movlb	0	; () banked
 23119   00793C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23120   00793E  0101               	movlb	1	; () banked
 23121   007940  6FC2               	movwf	(??_processEnumeration+2)& (0+255),b
 23122   007942  5014               	movf	(_enumerationStartTime+3)^0,w,c
 23123   007944  0100               	movlb	0	; () banked
 23124   007946  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23125   007948  0101               	movlb	1	; () banked
 23126   00794A  6FC3               	movwf	(??_processEnumeration+3)& (0+255),b
 23127   00794C  51C3               	movf	(??_processEnumeration+3)& (0+255),w,b
 23128   00794E  11C2               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 23129   007950  E106               	bnz	u23780
 23130   007952  0E6B               	movlw	107
 23131   007954  5DC0               	subwf	??_processEnumeration& (0+255),w,b
 23132   007956  0E18               	movlw	24
 23133   007958  59C1               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 23134   00795A  A0D8               	btfss	status,0,c
 23135   00795C  0012               	return	
 23136   00795E                     u23780:
 23137                           
 23138                           ; BSR set to: 1
 23139                           ;../../VLCBlib_PIC/can18_ecan.c: 928:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 23140   00795E  0E00               	movlw	0
 23141   007960  6FC6               	movwf	processEnumeration@i& (0+255),b
 23142   007962  D001               	goto	l22735
 23143   007964                     l22733:
 23144                           
 23145                           ; BSR set to: 1
 23146                           ;../../VLCBlib_PIC/can18_ecan.c: 930:                 }
 23147   007964  2BC6               	incf	processEnumeration@i& (0+255),f,b
 23148   007966                     l22735:
 23149                           
 23150                           ; BSR set to: 1
 23151   007966  0E34               	movlw	low _enumerationResults
 23152   007968  25C6               	addwf	processEnumeration@i& (0+255),w,b
 23153   00796A  6ED9               	movwf	fsr2l,c
 23154   00796C  6ADA               	clrf	fsr2h,c
 23155   00796E  0E02               	movlw	high _enumerationResults
 23156   007970  22DA               	addwfc	fsr2h,f,c
 23157   007972  28DE               	incf	postinc2,w,c
 23158   007974  A4D8               	btfss	status,2,c
 23159   007976  D003               	goto	u23800
 23160                           
 23161                           ; BSR set to: 1
 23162   007978  0E0F               	movlw	15
 23163   00797A  65C6               	cpfsgt	processEnumeration@i& (0+255),b
 23164   00797C  D7F3               	goto	l22733
 23165   00797E                     u23800:
 23166                           
 23167                           ; BSR set to: 1
 23168                           ;../../VLCBlib_PIC/can18_ecan.c: 931:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 23169   00797E  0E34               	movlw	low _enumerationResults
 23170   007980  25C6               	addwf	processEnumeration@i& (0+255),w,b
 23171   007982  6ED9               	movwf	fsr2l,c
 23172   007984  6ADA               	clrf	fsr2h,c
 23173   007986  0E02               	movlw	high _enumerationResults
 23174   007988  22DA               	addwfc	fsr2h,f,c
 23175   00798A  50DF               	movf	indf2,w,c
 23176   00798C  6FC4               	movwf	processEnumeration@enumResult& (0+255),b
 23177   00798E  29C4               	incf	processEnumeration@enumResult& (0+255),w,b
 23178   007990  B4D8               	btfsc	status,2,c
 23179   007992  D017               	goto	l22757
 23180                           
 23181                           ; BSR set to: 1
 23182                           ;../../VLCBlib_PIC/can18_ecan.c: 932:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 23183   007994  51C6               	movf	processEnumeration@i& (0+255),w,b
 23184   007996  0D08               	mullw	8
 23185   007998  CFF3 F1C5          	movff	prodl,processEnumeration@newCanId
 23186   00799C  D003               	goto	l22747
 23187   00799E                     l22743:
 23188                           
 23189                           ; BSR set to: 1
 23190                           ;../../VLCBlib_PIC/can18_ecan.c: 933:                         enumResult >>= 1;
 23191   00799E  90D8               	bcf	status,0,c
 23192   0079A0  33C4               	rrcf	processEnumeration@enumResult& (0+255),f,b
 23193                           
 23194                           ; BSR set to: 1
 23195                           ;../../VLCBlib_PIC/can18_ecan.c: 934:                     }
 23196   0079A2  2BC5               	incf	processEnumeration@newCanId& (0+255),f,b
 23197   0079A4                     l22747:
 23198                           
 23199                           ; BSR set to: 1
 23200   0079A4  B1C4               	btfsc	processEnumeration@enumResult& (0+255),0,b
 23201   0079A6  D7FB               	goto	l22743
 23202                           
 23203                           ; BSR set to: 1
 23204                           ;../../VLCBlib_PIC/can18_ecan.c: 935:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 23205   0079A8  51C5               	movf	processEnumeration@newCanId& (0+255),w,b
 23206   0079AA  B4D8               	btfsc	status,2,c
 23207   0079AC  D00A               	goto	l22757
 23208                           
 23209                           ; BSR set to: 1
 23210   0079AE  0E64               	movlw	100
 23211   0079B0  61C5               	cpfslt	processEnumeration@newCanId& (0+255),b
 23212   0079B2  D007               	goto	l22757
 23213                           
 23214                           ; BSR set to: 1
 23215                           ;../../VLCBlib_PIC/can18_ecan.c: 936:                         canId = newCanId;
 23216   0079B4  C1C5  F0B9         	movff	processEnumeration@newCanId,_canId
 23217                           
 23218                           ; BSR set to: 1
 23219                           ;../../VLCBlib_PIC/can18_ecan.c: 937:                         setNewCanId(canId);
 23220   0079B8  0100               	movlb	0	; () banked
 23221   0079BA  51B9               	movf	_canId& (0+255),w,b
 23222   0079BC  EC19  F05A         	call	_setNewCanId
 23223                           
 23224                           ;../../VLCBlib_PIC/can18_ecan.c: 938:                     } else {
 23225   0079C0  D004               	goto	l22765
 23226   0079C2                     l22757:
 23227                           
 23228                           ; BSR set to: 1
 23229                           ;../../VLCBlib_PIC/can18_ecan.c: 940:                         canDiagnostics[0x10].asUin
      +                          t++;
 23230   0079C2  4B86               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 23231   0079C4  2B87               	incf	(_canDiagnostics+33)& (0+255),f,b
 23232                           
 23233                           ; BSR set to: 1
 23234                           ;../../VLCBlib_PIC/can18_ecan.c: 941:                         updateModuleErrorStatus();
 23235   0079C6  EC39  F064         	call	_updateModuleErrorStatus	;wreg free
 23236   0079CA                     l22765:
 23237                           
 23238                           ;../../VLCBlib_PIC/can18_ecan.c: 953:                 enumerationState = NO_ENUMERATION;
 23239   0079CA  0E00               	movlw	0
 23240   0079CC  0100               	movlb	0	; () banked
 23241   0079CE  6FB7               	movwf	_enumerationState& (0+255),b
 23242   0079D0  0012               	return	
 23243   0079D2                     l22769:
 23244   0079D2  0100               	movlb	0	; () banked
 23245   0079D4  51B7               	movf	_enumerationState& (0+255),w,b
 23246   0079D6  0101               	movlb	1	; () banked
 23247   0079D8  6FC0               	movwf	??_processEnumeration& (0+255),b
 23248   0079DA  6BC1               	clrf	(??_processEnumeration+1)& (0+255),b
 23249                           
 23250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23251                           ; Switch size 1, requested type "simple"
 23252                           ; Number of cases is 1, Range of values is 0 to 0
 23253                           ; switch strategies available:
 23254                           ; Name         Instructions Cycles
 23255                           ; simple_byte            4     3 (average)
 23256                           ;	Chosen strategy is simple_byte
 23257   0079DC  51C1               	movf	(??_processEnumeration+1)& (0+255),w,b
 23258   0079DE  0A00               	xorlw	0	; case 0
 23259   0079E0  A4D8               	btfss	status,2,c
 23260   0079E2  0012               	return	
 23261                           
 23262                           ; BSR set to: 1
 23263                           ; Switch size 1, requested type "simple"
 23264                           ; Number of cases is 2, Range of values is 1 to 2
 23265                           ; switch strategies available:
 23266                           ; Name         Instructions Cycles
 23267                           ; simple_byte            7     4 (average)
 23268                           ;	Chosen strategy is simple_byte
 23269   0079E4  51C0               	movf	??_processEnumeration& (0+255),w,b
 23270   0079E6  0A01               	xorlw	1	; case 1
 23271   0079E8  B4D8               	btfsc	status,2,c
 23272   0079EA  D758               	goto	l22707
 23273   0079EC  0A03               	xorlw	3	; case 2
 23274   0079EE  A4D8               	btfss	status,2,c
 23275   0079F0  0012               	return	
 23276   0079F2  D796               	goto	l22729
 23277   0079F4                     __end_of_processEnumeration:
 23278                           	callstack 0
 23279                           
 23280 ;; *************** function _setNewCanId *****************
 23281 ;; Defined at:
 23282 ;;		line 966 in file "../../VLCBlib_PIC/can18_ecan.c"
 23283 ;; Parameters:    Size  Location     Type
 23284 ;;  newCanId        1    wreg     unsigned char 
 23285 ;; Auto vars:     Size  Location     Type
 23286 ;;  newCanId        1    1[BANK1 ] unsigned char 
 23287 ;; Return value:  Size  Location     Type
 23288 ;;                  1    wreg      enum E13097
 23289 ;; Registers used:
 23290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23291 ;; Tracked objects:
 23292 ;;		On entry : 0/0
 23293 ;;		On exit  : 0/0
 23294 ;;		Unchanged: 0/0
 23295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23297 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23299 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23300 ;;Total ram usage:        1 bytes
 23301 ;; Hardware stack levels used: 1
 23302 ;; Hardware stack levels required when called: 18
 23303 ;; This function calls:
 23304 ;;		_writeNVM
 23305 ;; This function is called by:
 23306 ;;		_processEnumeration
 23307 ;; This function uses a non-reentrant model
 23308 ;;
 23309                           
 23310                           	psect	text82
 23311   00B432                     __ptext82:
 23312                           	callstack 0
 23313   00B432                     _setNewCanId:
 23314                           	callstack 9
 23315                           
 23316                           ;incstack = 0
 23317                           ;setNewCanId@newCanId stored from wreg
 23318   00B432  0101               	movlb	1	; () banked
 23319   00B434  6FBF               	movwf	setNewCanId@newCanId& (0+255),b
 23320                           
 23321                           ;../../VLCBlib_PIC/can18_ecan.c: 967:     if ((newCanId >= 1) && (newCanId <= 99)) {
 23322   00B436  0101               	movlb	1	; () banked
 23323   00B438  51BF               	movf	setNewCanId@newCanId& (0+255),w,b
 23324   00B43A  B4D8               	btfsc	status,2,c
 23325   00B43C  0012               	return	
 23326                           
 23327                           ; BSR set to: 1
 23328   00B43E  0E64               	movlw	100
 23329   00B440  61BF               	cpfslt	setNewCanId@newCanId& (0+255),b
 23330   00B442  0012               	return	
 23331                           
 23332                           ; BSR set to: 1
 23333                           ;../../VLCBlib_PIC/can18_ecan.c: 968:         canId = newCanId;
 23334   00B444  C1BF  F0B9         	movff	setNewCanId@newCanId,_canId
 23335                           
 23336                           ; BSR set to: 1
 23337                           ;../../VLCBlib_PIC/can18_ecan.c: 971:         TXB1SIDH &= 0b11110000;
 23338   00B448  0EF0               	movlw	240
 23339   00B44A  010F               	movlb	15	; () banked
 23340   00B44C  1711               	andwf	17,f,b	;volatile
 23341                           
 23342                           ;../../VLCBlib_PIC/can18_ecan.c: 972:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 23343   00B44E  0101               	movlb	1	; () banked
 23344   00B450  39BF               	swapf	setNewCanId@newCanId& (0+255),w,b
 23345   00B452  46E8               	rlncf	wreg,f,c
 23346   00B454  0B1F               	andlw	31
 23347   00B456  0B0F               	andlw	15
 23348   00B458  010F               	movlb	15	; () banked
 23349   00B45A  1311               	iorwf	17,f,b	;volatile
 23350                           
 23351                           ; BSR set to: 15
 23352                           ;../../VLCBlib_PIC/can18_ecan.c: 973:         TXB1SIDL = TXB0SIDL;
 23353   00B45C  CF22 FF12          	movff	3874,3858	;volatile
 23354                           
 23355                           ;../../VLCBlib_PIC/can18_ecan.c: 975:         TXB2SIDH &= 0b11110000;
 23356   00B460  0EF0               	movlw	240
 23357   00B462  1701               	andwf	1,f,b	;volatile
 23358                           
 23359                           ;../../VLCBlib_PIC/can18_ecan.c: 976:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 23360   00B464  0101               	movlb	1	; () banked
 23361   00B466  39BF               	swapf	setNewCanId@newCanId& (0+255),w,b
 23362   00B468  46E8               	rlncf	wreg,f,c
 23363   00B46A  0B1F               	andlw	31
 23364   00B46C  0B0F               	andlw	15
 23365   00B46E  010F               	movlb	15	; () banked
 23366   00B470  1301               	iorwf	1,f,b	;volatile
 23367                           
 23368                           ; BSR set to: 15
 23369                           ;../../VLCBlib_PIC/can18_ecan.c: 977:         TXB2SIDL = TXB0SIDL;
 23370   00B472  CF22 FF02          	movff	3874,3842	;volatile
 23371                           
 23372                           ; BSR set to: 15
 23373                           ;../../VLCBlib_PIC/can18_ecan.c: 979:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 23374   00B476  0EFE               	movlw	254
 23375   00B478  0100               	movlb	0	; () banked
 23376   00B47A  6FA4               	movwf	writeNVM@index& (0+255),b
 23377   00B47C  0E03               	movlw	3
 23378   00B47E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 23379   00B480  0E00               	movlw	0
 23380   00B482  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 23381   00B484  C1BF  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 23382   00B488  0E00               	movlw	0
 23383   00B48A  EC9F  F05D         	call	_writeNVM
 23384                           
 23385                           ;../../VLCBlib_PIC/can18_ecan.c: 981:         canDiagnostics[0x0F].asUint++;
 23386   00B48E  0101               	movlb	1	; () banked
 23387   00B490  4B84               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 23388   00B492  2B85               	incf	(_canDiagnostics+31)& (0+255),f,b
 23389                           
 23390                           ; BSR set to: 1
 23391   00B494  0012               	return		;funcret
 23392   00B496                     __end_of_setNewCanId:
 23393                           	callstack 0
 23394                           
 23395 ;; *************** function _pop *****************
 23396 ;; Defined at:
 23397 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 23398 ;; Parameters:    Size  Location     Type
 23399 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 23400 ;;		 -> txQueue(5), rxQueue(5), 
 23401 ;; Auto vars:     Size  Location     Type
 23402 ;;  ret             2   52[BANK0 ] PTR struct Message
 23403 ;;		 -> txBuffers(72), rxBuffers(288), 
 23404 ;; Return value:  Size  Location     Type
 23405 ;;                  2   45[BANK0 ] PTR struct Message
 23406 ;; Registers used:
 23407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23408 ;; Tracked objects:
 23409 ;;		On entry : 0/0
 23410 ;;		On exit  : 0/0
 23411 ;;		Unchanged: 0/0
 23412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23414 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23416 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23417 ;;Total ram usage:        9 bytes
 23418 ;; Hardware stack levels used: 1
 23419 ;; Hardware stack levels required when called: 12
 23420 ;; This function calls:
 23421 ;;		Nothing
 23422 ;; This function is called by:
 23423 ;;		_canReceiveMessage
 23424 ;; This function uses a non-reentrant model
 23425 ;;
 23426                           
 23427                           	psect	text83
 23428   009DF8                     __ptext83:
 23429                           	callstack 0
 23430   009DF8                     _pop:
 23431                           	callstack 16
 23432                           
 23433                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 23434                           
 23435                           ; BSR set to: 1
 23436                           ;incstack = 0
 23437   009DF8  0100               	movlb	0	; () banked
 23438   009DFA  EE20 F002          	lfsr	2,2
 23439   009DFE  518D               	movf	pop@q& (0+255),w,b
 23440   009E00  26D9               	addwf	fsr2l,f,c
 23441   009E02  518E               	movf	(pop@q+1)& (0+255),w,b
 23442   009E04  22DA               	addwfc	fsr2h,f,c
 23443   009E06  EE10 F003          	lfsr	1,3
 23444   009E0A  518D               	movf	pop@q& (0+255),w,b
 23445   009E0C  26E1               	addwf	fsr1l,f,c
 23446   009E0E  518E               	movf	(pop@q+1)& (0+255),w,b
 23447   009E10  22E2               	addwfc	fsr1h,f,c
 23448   009E12  50DE               	movf	postinc2,w,c
 23449   009E14  18E6               	xorwf	postinc1,w,c
 23450   009E16  A4D8               	btfss	status,2,c
 23451   009E18  D005               	goto	l22597
 23452                           
 23453                           ; BSR set to: 0
 23454                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 23455   009E1A  0E00               	movlw	0
 23456   009E1C  6F8D               	movwf	?_pop& (0+255),b
 23457   009E1E  0E00               	movlw	0
 23458   009E20  6F8E               	movwf	(?_pop+1)& (0+255),b
 23459   009E22  0012               	return	
 23460   009E24                     l22597:
 23461                           
 23462                           ; BSR set to: 0
 23463                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 23464   009E24  EE20 F002          	lfsr	2,2
 23465   009E28  518D               	movf	pop@q& (0+255),w,b
 23466   009E2A  26D9               	addwf	fsr2l,f,c
 23467   009E2C  518E               	movf	(pop@q+1)& (0+255),w,b
 23468   009E2E  22DA               	addwfc	fsr2h,f,c
 23469   009E30  50DF               	movf	indf2,w,c
 23470   009E32  6F8F               	movwf	??_pop& (0+255),b
 23471   009E34  518F               	movf	??_pop& (0+255),w,b
 23472   009E36  0D09               	mullw	9
 23473   009E38  CFF3 F090          	movff	prodl,??_pop+1
 23474   009E3C  CFF4 F091          	movff	prodh,??_pop+2
 23475   009E40  C08D  FFD9         	movff	pop@q,fsr2l
 23476   009E44  C08E  FFDA         	movff	pop@q+1,fsr2h
 23477   009E48  CFDE F092          	movff	postinc2,??_pop+3
 23478   009E4C  CFDD F093          	movff	postdec2,??_pop+4
 23479   009E50  5190               	movf	(??_pop+1)& (0+255),w,b
 23480   009E52  2592               	addwf	(??_pop+3)& (0+255),w,b
 23481   009E54  6F94               	movwf	pop@ret& (0+255),b
 23482   009E56  5191               	movf	(??_pop+2)& (0+255),w,b
 23483   009E58  2193               	addwfc	(??_pop+4)& (0+255),w,b
 23484   009E5A  6F95               	movwf	(pop@ret+1)& (0+255),b
 23485                           
 23486                           ; BSR set to: 0
 23487   009E5C  EE20 F002          	lfsr	2,2
 23488   009E60  518D               	movf	pop@q& (0+255),w,b
 23489   009E62  26D9               	addwf	fsr2l,f,c
 23490   009E64  518E               	movf	(pop@q+1)& (0+255),w,b
 23491   009E66  22DA               	addwfc	fsr2h,f,c
 23492   009E68  2ADF               	incf	indf2,f,c
 23493                           
 23494                           ; BSR set to: 0
 23495                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 23496   009E6A  EE20 F004          	lfsr	2,4
 23497   009E6E  518D               	movf	pop@q& (0+255),w,b
 23498   009E70  26D9               	addwf	fsr2l,f,c
 23499   009E72  518E               	movf	(pop@q+1)& (0+255),w,b
 23500   009E74  22DA               	addwfc	fsr2h,f,c
 23501   009E76  EE10 F002          	lfsr	1,2
 23502   009E7A  518D               	movf	pop@q& (0+255),w,b
 23503   009E7C  26E1               	addwf	fsr1l,f,c
 23504   009E7E  518E               	movf	(pop@q+1)& (0+255),w,b
 23505   009E80  22E2               	addwfc	fsr1h,f,c
 23506   009E82  50DE               	movf	postinc2,w,c
 23507   009E84  5CE6               	subwf	postinc1,w,c
 23508   009E86  A0D8               	btfss	status,0,c
 23509   009E88  D007               	goto	l22605
 23510                           
 23511                           ; BSR set to: 0
 23512   009E8A  EE20 F002          	lfsr	2,2
 23513   009E8E  518D               	movf	pop@q& (0+255),w,b
 23514   009E90  26D9               	addwf	fsr2l,f,c
 23515   009E92  518E               	movf	(pop@q+1)& (0+255),w,b
 23516   009E94  22DA               	addwfc	fsr2h,f,c
 23517   009E96  6ADF               	clrf	indf2,c
 23518   009E98                     l22605:
 23519                           
 23520                           ; BSR set to: 0
 23521                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 23522   009E98  C094  F08D         	movff	pop@ret,?_pop
 23523   009E9C  C095  F08E         	movff	pop@ret+1,?_pop+1
 23524                           
 23525                           ; BSR set to: 0
 23526   009EA0  0012               	return		;funcret
 23527   009EA2                     __end_of_pop:
 23528                           	callstack 0
 23529                           
 23530 ;; *************** function _memcpy *****************
 23531 ;; Defined at:
 23532 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 23533 ;; Parameters:    Size  Location     Type
 23534 ;;  d1              2   45[BANK0 ] PTR void 
 23535 ;;		 -> poll@m(9), 
 23536 ;;  s1              2   47[BANK0 ] PTR const void 
 23537 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23538 ;;  n               2   49[BANK0 ] unsigned int 
 23539 ;; Auto vars:     Size  Location     Type
 23540 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 23541 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 23542 ;;  d               2   52[BANK0 ] PTR unsigned char 
 23543 ;;		 -> poll@m(9), 
 23544 ;;  tmp             1   51[BANK0 ] unsigned char 
 23545 ;; Return value:  Size  Location     Type
 23546 ;;                  2   45[BANK0 ] PTR void 
 23547 ;; Registers used:
 23548 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 23549 ;; Tracked objects:
 23550 ;;		On entry : 0/0
 23551 ;;		On exit  : 0/0
 23552 ;;		Unchanged: 0/0
 23553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23554 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23555 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23557 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23558 ;;Total ram usage:       11 bytes
 23559 ;; Hardware stack levels used: 1
 23560 ;; Hardware stack levels required when called: 12
 23561 ;; This function calls:
 23562 ;;		Nothing
 23563 ;; This function is called by:
 23564 ;;		_canReceiveMessage
 23565 ;; This function uses a non-reentrant model
 23566 ;;
 23567                           
 23568                           	psect	text84
 23569   00BE20                     __ptext84:
 23570                           	callstack 0
 23571   00BE20                     _memcpy:
 23572                           	callstack 16
 23573                           
 23574                           ; BSR set to: 0
 23575                           ;incstack = 0
 23576   00BE20  C08F  F096         	movff	memcpy@s1,memcpy@s
 23577   00BE24  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 23578   00BE28  C08D  F094         	movff	memcpy@d1,memcpy@d
 23579   00BE2C  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 23580   00BE30  D010               	goto	l22785
 23581   00BE32                     l22777:
 23582                           
 23583                           ; BSR set to: 0
 23584   00BE32  C096  FFD9         	movff	memcpy@s,fsr2l
 23585   00BE36  C097  FFDA         	movff	memcpy@s+1,fsr2h
 23586   00BE3A  50DF               	movf	indf2,w,c
 23587   00BE3C  6F93               	movwf	memcpy@tmp& (0+255),b
 23588                           
 23589                           ; BSR set to: 0
 23590   00BE3E  4B96               	infsnz	memcpy@s& (0+255),f,b
 23591   00BE40  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 23592                           
 23593                           ; BSR set to: 0
 23594   00BE42  C094  FFD9         	movff	memcpy@d,fsr2l
 23595   00BE46  C095  FFDA         	movff	memcpy@d+1,fsr2h
 23596   00BE4A  C093  FFDF         	movff	memcpy@tmp,indf2
 23597                           
 23598                           ; BSR set to: 0
 23599   00BE4E  4B94               	infsnz	memcpy@d& (0+255),f,b
 23600   00BE50  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 23601   00BE52                     l22785:
 23602   00BE52  0100               	movlb	0	; () banked
 23603   00BE54  0791               	decf	memcpy@n& (0+255),f,b
 23604   00BE56  A0D8               	btfss	status,0,c
 23605   00BE58  0792               	decf	(memcpy@n+1)& (0+255),f,b
 23606   00BE5A  2991               	incf	memcpy@n& (0+255),w,b
 23607   00BE5C  E1EA               	bnz	l22777
 23608   00BE5E  2992               	incf	(memcpy@n+1)& (0+255),w,b
 23609   00BE60  B4D8               	btfsc	status,2,c
 23610   00BE62  0012               	return	
 23611   00BE64  D7E6               	goto	l22777
 23612   00BE66                     __end_of_memcpy:
 23613                           	callstack 0
 23614                           
 23615 ;; *************** function _handleSelfEnumeration *****************
 23616 ;; Defined at:
 23617 ;;		line 816 in file "../../VLCBlib_PIC/can18_ecan.c"
 23618 ;; Parameters:    Size  Location     Type
 23619 ;;  p               2   55[BANK0 ] PTR unsigned char 
 23620 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23621 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23622 ;;		 -> NULL(0), 
 23623 ;; Auto vars:     Size  Location     Type
 23624 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 23625 ;; Return value:  Size  Location     Type
 23626 ;;                  1    wreg      enum E13077
 23627 ;; Registers used:
 23628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23629 ;; Tracked objects:
 23630 ;;		On entry : 0/0
 23631 ;;		On exit  : 0/0
 23632 ;;		Unchanged: 0/0
 23633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23634 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23636 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23637 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23638 ;;Total ram usage:        7 bytes
 23639 ;; Hardware stack levels used: 1
 23640 ;; Hardware stack levels required when called: 13
 23641 ;; This function calls:
 23642 ;;		_tickGet
 23643 ;; This function is called by:
 23644 ;;		_canReceiveMessage
 23645 ;; This function uses a non-reentrant model
 23646 ;;
 23647                           
 23648                           	psect	text85
 23649   008260                     __ptext85:
 23650                           	callstack 0
 23651   008260                     _handleSelfEnumeration:
 23652                           	callstack 15
 23653                           
 23654                           ;../../VLCBlib_PIC/can18_ecan.c: 817:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 821:     if (p[5] & 0x40 ) {
 23655                           
 23656                           ; BSR set to: 0
 23657                           ;incstack = 0
 23658   008260  0100               	movlb	0	; () banked
 23659   008262  EE20 F005          	lfsr	2,5
 23660   008266  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23661   008268  26D9               	addwf	fsr2l,f,c
 23662   00826A  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23663   00826C  22DA               	addwfc	fsr2h,f,c
 23664   00826E  ACDF               	btfss	indf2,6,c
 23665   008270  D00E               	goto	l22797
 23666                           
 23667                           ; BSR set to: 0
 23668                           ;../../VLCBlib_PIC/can18_ecan.c: 823:         TXB2CONbits.TXREQ = 1;
 23669   008272  010F               	movlb	15	; () banked
 23670   008274  8700               	bsf	0,3,b	;volatile
 23671                           
 23672                           ; BSR set to: 15
 23673                           ;../../VLCBlib_PIC/can18_ecan.c: 824:         enumerationStartTime.val = tickGet();
 23674   008276  EC23  F05C         	call	_tickGet	;wreg free
 23675   00827A  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 23676   00827E  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 23677   008282  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 23678   008286  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 23679                           
 23680                           ;../../VLCBlib_PIC/can18_ecan.c: 825:         return NOT_RECEIVED;
 23681   00828A  0E00               	movlw	0
 23682   00828C  0012               	return	
 23683   00828E                     l22797:
 23684                           
 23685                           ; BSR set to: 0
 23686                           ;../../VLCBlib_PIC/can18_ecan.c: 827:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 23687   00828E  EE20 F002          	lfsr	2,2
 23688   008292  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23689   008294  26D9               	addwf	fsr2l,f,c
 23690   008296  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23691   008298  22DA               	addwfc	fsr2h,f,c
 23692   00829A  50DF               	movf	indf2,w,c
 23693   00829C  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23694   00829E  0E05               	movlw	5
 23695   0082A0  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23696   0082A2                     u23875:
 23697   0082A2  90D8               	bcf	status,0,c
 23698   0082A4  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 23699   0082A6  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 23700   0082A8  D7FC               	goto	u23875
 23701   0082AA  EE20 F001          	lfsr	2,1
 23702   0082AE  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23703   0082B0  26D9               	addwf	fsr2l,f,c
 23704   0082B2  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23705   0082B4  22DA               	addwfc	fsr2h,f,c
 23706   0082B6  50DF               	movf	indf2,w,c
 23707   0082B8  0D08               	mullw	8
 23708   0082BA  50F3               	movf	243,w,c
 23709   0082BC  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 23710   0082BE  0B7F               	andlw	127
 23711   0082C0  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 23712                           
 23713                           ; BSR set to: 0
 23714                           ;../../VLCBlib_PIC/can18_ecan.c: 829:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 23715   0082C2  0E02               	movlw	2
 23716   0082C4  19B7               	xorwf	_enumerationState& (0+255),w,b
 23717   0082C6  B4D8               	btfsc	status,2,c
 23718   0082C8  D00C               	goto	u23890
 23719                           
 23720                           ; BSR set to: 0
 23721   0082CA  EE20 F005          	lfsr	2,5
 23722   0082CE  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23723   0082D0  26D9               	addwf	fsr2l,f,c
 23724   0082D2  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23725   0082D4  22DA               	addwfc	fsr2h,f,c
 23726   0082D6  50DF               	movf	indf2,w,c
 23727   0082D8  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23728   0082DA  0E0F               	movlw	15
 23729   0082DC  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23730   0082DE  A4D8               	btfss	status,2,c
 23731   0082E0  D01B               	goto	l22805
 23732   0082E2                     u23890:
 23733                           
 23734                           ; BSR set to: 0
 23735                           ;../../VLCBlib_PIC/can18_ecan.c: 830:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 23736   0082E2  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 23737   0082E6  0E07               	movlw	7
 23738   0082E8  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23739   0082EA  0E01               	movlw	1
 23740   0082EC  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23741   0082EE  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 23742   0082F0  D002               	goto	u23904
 23743   0082F2                     u23905:
 23744   0082F2  90D8               	bcf	status,0,c
 23745   0082F4  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 23746   0082F6                     u23904:
 23747   0082F6  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 23748   0082F8  D7FC               	goto	u23905
 23749   0082FA  0100               	movlb	0	; () banked
 23750   0082FC  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23751   0082FE  46E8               	rlncf	wreg,f,c
 23752   008300  0B1F               	andlw	31
 23753   008302  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 23754   008304  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 23755   008306  0E34               	movlw	low _enumerationResults
 23756   008308  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 23757   00830A  6ED9               	movwf	fsr2l,c
 23758   00830C  0E02               	movlw	high _enumerationResults
 23759   00830E  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 23760   008310  6EDA               	movwf	fsr2h,c
 23761   008312  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 23762   008314  12DF               	iorwf	indf2,f,c
 23763                           
 23764                           ;../../VLCBlib_PIC/can18_ecan.c: 831:     } else {
 23765   008316  D016               	goto	l22815
 23766   008318                     l22805:
 23767                           
 23768                           ; BSR set to: 0
 23769                           ;../../VLCBlib_PIC/can18_ecan.c: 832:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 23770   008318  51B7               	movf	_enumerationState& (0+255),w,b
 23771   00831A  A4D8               	btfss	status,2,c
 23772   00831C  D013               	goto	l22815
 23773                           
 23774                           ; BSR set to: 0
 23775   00831E  51B9               	movf	_canId& (0+255),w,b
 23776   008320  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23777   008322  A4D8               	btfss	status,2,c
 23778   008324  D00F               	goto	l22815
 23779                           
 23780                           ; BSR set to: 0
 23781                           ;../../VLCBlib_PIC/can18_ecan.c: 835:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 23782   008326  0E01               	movlw	1
 23783   008328  6FB7               	movwf	_enumerationState& (0+255),b
 23784                           
 23785                           ; BSR set to: 0
 23786                           ;../../VLCBlib_PIC/can18_ecan.c: 836:             canDiagnostics[0x0E].asUint++;
 23787   00832A  0101               	movlb	1	; () banked
 23788   00832C  4B82               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 23789   00832E  2B83               	incf	(_canDiagnostics+29)& (0+255),f,b
 23790                           
 23791                           ; BSR set to: 1
 23792                           ;../../VLCBlib_PIC/can18_ecan.c: 837:             enumerationStartTime.val = tickGet();
 23793   008330  EC23  F05C         	call	_tickGet	;wreg free
 23794   008334  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 23795   008338  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 23796   00833C  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 23797   008340  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 23798   008344                     l22815:
 23799                           
 23800                           ;../../VLCBlib_PIC/can18_ecan.c: 841:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 23801   008344  0100               	movlb	0	; () banked
 23802   008346  EE20 F005          	lfsr	2,5
 23803   00834A  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23804   00834C  26D9               	addwf	fsr2l,f,c
 23805   00834E  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23806   008350  22DA               	addwfc	fsr2h,f,c
 23807   008352  50DF               	movf	indf2,w,c
 23808   008354  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23809   008356  0E0F               	movlw	15
 23810   008358  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23811   00835A  B4D8               	btfsc	status,2,c
 23812   00835C  D002               	goto	u23930
 23813   00835E  0E01               	movlw	1
 23814   008360  0012               	return	
 23815   008362                     u23930:
 23816   008362  0E00               	movlw	0
 23817   008364  0012               	return		;funcret
 23818   008366                     __end_of_handleSelfEnumeration:
 23819                           	callstack 0
 23820                           
 23821 ;; *************** function _getNumRxBuffersInUse *****************
 23822 ;; Defined at:
 23823 ;;		line 470 in file "../../VLCBlib_PIC/can18_ecan.c"
 23824 ;; Parameters:    Size  Location     Type
 23825 ;;		None
 23826 ;; Auto vars:     Size  Location     Type
 23827 ;;  ptr             2   51[BANK0 ] PTR unsigned char 
 23828 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23829 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23830 ;;		 -> NULL(0), 
 23831 ;;  i               1   54[BANK0 ] unsigned char 
 23832 ;;  no              1   53[BANK0 ] unsigned char 
 23833 ;; Return value:  Size  Location     Type
 23834 ;;                  1    wreg      unsigned char 
 23835 ;; Registers used:
 23836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23837 ;; Tracked objects:
 23838 ;;		On entry : 0/0
 23839 ;;		On exit  : 0/0
 23840 ;;		Unchanged: 0/0
 23841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23843 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23846 ;;Total ram usage:        4 bytes
 23847 ;; Hardware stack levels used: 1
 23848 ;; Hardware stack levels required when called: 13
 23849 ;; This function calls:
 23850 ;;		_getBufferPointer
 23851 ;;		_quantity
 23852 ;; This function is called by:
 23853 ;;		_canGetDiagnostic
 23854 ;;		_canReceiveMessage
 23855 ;; This function uses a non-reentrant model
 23856 ;;
 23857                           
 23858                           	psect	text86
 23859   00BF9E                     __ptext86:
 23860                           	callstack 0
 23861   00BF9E                     _getNumRxBuffersInUse:
 23862                           	callstack 13
 23863                           
 23864                           ;../../VLCBlib_PIC/can18_ecan.c: 471:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 47
      +                          2:     uint8_t i;;../../VLCBlib_PIC/can18_ecan.c: 473:     uint8_t * ptr;;../../VLCBlib_
      +                          PIC/can18_ecan.c: 475:     no = quantity(&rxQueue);
 23865                           
 23866                           ;incstack = 0
 23867   00BF9E  0E26               	movlw	low _rxQueue
 23868   00BFA0  0100               	movlb	0	; () banked
 23869   00BFA2  6F8D               	movwf	quantity@q& (0+255),b
 23870   00BFA4  6B8E               	clrf	(quantity@q+1)& (0+255),b
 23871   00BFA6  EC72  F05F         	call	_quantity	;wreg free
 23872   00BFAA  0100               	movlb	0	; () banked
 23873   00BFAC  6F95               	movwf	getNumRxBuffersInUse@no& (0+255),b
 23874                           
 23875                           ; BSR set to: 0
 23876                           ;../../VLCBlib_PIC/can18_ecan.c: 476:     for (i=0; i<8; i++) {
 23877   00BFAE  0E00               	movlw	0
 23878   00BFB0  6F96               	movwf	getNumRxBuffersInUse@i& (0+255),b
 23879   00BFB2                     l20473:
 23880                           
 23881                           ; BSR set to: 0
 23882                           ;../../VLCBlib_PIC/can18_ecan.c: 477:         ptr = getBufferPointer(i);
 23883   00BFB2  5196               	movf	getNumRxBuffersInUse@i& (0+255),w,b
 23884   00BFB4  ECCF  F051         	call	_getBufferPointer
 23885   00BFB8  C08D  F093         	movff	?_getBufferPointer,getNumRxBuffersInUse@ptr
 23886   00BFBC  C08E  F094         	movff	?_getBufferPointer+1,getNumRxBuffersInUse@ptr+1
 23887                           
 23888                           ;../../VLCBlib_PIC/can18_ecan.c: 478:         if (ptr[0] & 0x80) {
 23889   00BFC0  C093  FFD9         	movff	getNumRxBuffersInUse@ptr,fsr2l
 23890   00BFC4  C094  FFDA         	movff	getNumRxBuffersInUse@ptr+1,fsr2h
 23891   00BFC8  0100               	movlb	0	; () banked
 23892   00BFCA  BEDF               	btfsc	indf2,7,c
 23893                           
 23894                           ; BSR set to: 0
 23895                           ;../../VLCBlib_PIC/can18_ecan.c: 479:             no++;
 23896   00BFCC  2B95               	incf	getNumRxBuffersInUse@no& (0+255),f,b
 23897                           
 23898                           ; BSR set to: 0
 23899                           ;../../VLCBlib_PIC/can18_ecan.c: 481:     }
 23900                           
 23901                           ;../../VLCBlib_PIC/can18_ecan.c: 480:         }
 23902   00BFCE  2B96               	incf	getNumRxBuffersInUse@i& (0+255),f,b
 23903                           
 23904                           ; BSR set to: 0
 23905   00BFD0  0E07               	movlw	7
 23906   00BFD2  6596               	cpfsgt	getNumRxBuffersInUse@i& (0+255),b
 23907   00BFD4  D7EE               	goto	l20473
 23908                           
 23909                           ; BSR set to: 0
 23910                           ;../../VLCBlib_PIC/can18_ecan.c: 482:     return no;
 23911   00BFD6  5195               	movf	getNumRxBuffersInUse@no& (0+255),w,b
 23912                           
 23913                           ; BSR set to: 0
 23914   00BFD8  0012               	return		;funcret
 23915   00BFDA                     __end_of_getNumRxBuffersInUse:
 23916                           	callstack 0
 23917                           
 23918 ;; *************** function _getBufferPointer *****************
 23919 ;; Defined at:
 23920 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 23921 ;; Parameters:    Size  Location     Type
 23922 ;;  b               1    wreg     unsigned char 
 23923 ;; Auto vars:     Size  Location     Type
 23924 ;;  b               1   47[BANK0 ] unsigned char 
 23925 ;; Return value:  Size  Location     Type
 23926 ;;                  2   45[BANK0 ] PTR unsigned char 
 23927 ;; Registers used:
 23928 ;;		wreg, status,2, status,0
 23929 ;; Tracked objects:
 23930 ;;		On entry : 0/0
 23931 ;;		On exit  : 0/0
 23932 ;;		Unchanged: 0/0
 23933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23937 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23938 ;;Total ram usage:        3 bytes
 23939 ;; Hardware stack levels used: 1
 23940 ;; Hardware stack levels required when called: 12
 23941 ;; This function calls:
 23942 ;;		Nothing
 23943 ;; This function is called by:
 23944 ;;		_getNumRxBuffersInUse
 23945 ;;		_canReceiveMessage
 23946 ;; This function uses a non-reentrant model
 23947 ;;
 23948                           
 23949                           	psect	text87
 23950   00A39E                     __ptext87:
 23951                           	callstack 0
 23952   00A39E                     _getBufferPointer:
 23953                           	callstack 13
 23954                           
 23955                           ; BSR set to: 0
 23956                           ;incstack = 0
 23957                           ;getBufferPointer@b stored from wreg
 23958   00A39E  0100               	movlb	0	; () banked
 23959   00A3A0  6F8F               	movwf	getBufferPointer@b& (0+255),b
 23960                           
 23961                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 23962   00A3A2  D02D               	goto	l20125
 23963   00A3A4                     l20087:
 23964                           
 23965                           ; BSR set to: 0
 23966                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 23967   00A3A4  0E60               	movlw	96
 23968   00A3A6  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23969   00A3A8  0E0F               	movlw	15
 23970   00A3AA  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23971   00A3AC  0012               	return	
 23972   00A3AE                     l20091:
 23973                           
 23974                           ; BSR set to: 0
 23975                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 23976   00A3AE  0E30               	movlw	48
 23977   00A3B0  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23978   00A3B2  0E0F               	movlw	15
 23979   00A3B4  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23980   00A3B6  0012               	return	
 23981   00A3B8                     l20095:
 23982                           
 23983                           ; BSR set to: 0
 23984                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 23985   00A3B8  0E80               	movlw	128
 23986   00A3BA  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23987   00A3BC  0E0E               	movlw	14
 23988   00A3BE  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23989   00A3C0  0012               	return	
 23990   00A3C2                     l20099:
 23991                           
 23992                           ; BSR set to: 0
 23993                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 23994   00A3C2  0E90               	movlw	144
 23995   00A3C4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23996   00A3C6  0E0E               	movlw	14
 23997   00A3C8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23998   00A3CA  0012               	return	
 23999   00A3CC                     l20103:
 24000                           
 24001                           ; BSR set to: 0
 24002                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 24003   00A3CC  0EA0               	movlw	160
 24004   00A3CE  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24005   00A3D0  0E0E               	movlw	14
 24006   00A3D2  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24007   00A3D4  0012               	return	
 24008   00A3D6                     l20107:
 24009                           
 24010                           ; BSR set to: 0
 24011                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 24012   00A3D6  0EB0               	movlw	176
 24013   00A3D8  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24014   00A3DA  0E0E               	movlw	14
 24015   00A3DC  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24016   00A3DE  0012               	return	
 24017   00A3E0                     l20111:
 24018                           
 24019                           ; BSR set to: 0
 24020                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 24021   00A3E0  0EC0               	movlw	192
 24022   00A3E2  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24023   00A3E4  0E0E               	movlw	14
 24024   00A3E6  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24025   00A3E8  0012               	return	
 24026   00A3EA                     l20115:
 24027                           
 24028                           ; BSR set to: 0
 24029                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 24030   00A3EA  0ED0               	movlw	208
 24031   00A3EC  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24032   00A3EE  0E0E               	movlw	14
 24033   00A3F0  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24034   00A3F2  0012               	return	
 24035   00A3F4                     l20119:
 24036                           
 24037                           ; BSR set to: 0
 24038                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 24039   00A3F4  0E00               	movlw	0
 24040   00A3F6  6F8D               	movwf	?_getBufferPointer& (0+255),b
 24041   00A3F8  0E00               	movlw	0
 24042   00A3FA  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 24043   00A3FC  0012               	return	
 24044   00A3FE                     l20125:
 24045   00A3FE  0100               	movlb	0	; () banked
 24046   00A400  518F               	movf	getBufferPointer@b& (0+255),w,b
 24047                           
 24048                           ; Switch size 1, requested type "simple"
 24049                           ; Number of cases is 8, Range of values is 0 to 7
 24050                           ; switch strategies available:
 24051                           ; Name         Instructions Cycles
 24052                           ; simple_byte           25    13 (average)
 24053                           ;	Chosen strategy is simple_byte
 24054   00A402  0A00               	xorlw	0	; case 0
 24055   00A404  B4D8               	btfsc	status,2,c
 24056   00A406  D7CE               	goto	l20087
 24057   00A408  0A01               	xorlw	1	; case 1
 24058   00A40A  B4D8               	btfsc	status,2,c
 24059   00A40C  D7D0               	goto	l20091
 24060   00A40E  0A03               	xorlw	3	; case 2
 24061   00A410  B4D8               	btfsc	status,2,c
 24062   00A412  D7D2               	goto	l20095
 24063   00A414  0A01               	xorlw	1	; case 3
 24064   00A416  B4D8               	btfsc	status,2,c
 24065   00A418  D7D4               	goto	l20099
 24066   00A41A  0A07               	xorlw	7	; case 4
 24067   00A41C  B4D8               	btfsc	status,2,c
 24068   00A41E  D7D6               	goto	l20103
 24069   00A420  0A01               	xorlw	1	; case 5
 24070   00A422  B4D8               	btfsc	status,2,c
 24071   00A424  D7D8               	goto	l20107
 24072   00A426  0A03               	xorlw	3	; case 6
 24073   00A428  B4D8               	btfsc	status,2,c
 24074   00A42A  D7DA               	goto	l20111
 24075   00A42C  0A01               	xorlw	1	; case 7
 24076   00A42E  B4D8               	btfsc	status,2,c
 24077   00A430  D7DC               	goto	l20115
 24078   00A432  D7E0               	goto	l20119
 24079   00A434                     __end_of_getBufferPointer:
 24080                           	callstack 0
 24081                           
 24082 ;; *************** function _sendMessage7 *****************
 24083 ;; Defined at:
 24084 ;;		line 1210 in file "../../VLCBlib_PIC/vlcb.c"
 24085 ;; Parameters:    Size  Location     Type
 24086 ;;  opc             1    wreg     enum E12392
 24087 ;;  data1           1    8[BANK1 ] unsigned char 
 24088 ;;  data2           1    9[BANK1 ] unsigned char 
 24089 ;;  data3           1   10[BANK1 ] unsigned char 
 24090 ;;  data4           1   11[BANK1 ] unsigned char 
 24091 ;;  data5           1   12[BANK1 ] unsigned char 
 24092 ;;  data6           1   13[BANK1 ] unsigned char 
 24093 ;;  data7           1   14[BANK1 ] unsigned char 
 24094 ;; Auto vars:     Size  Location     Type
 24095 ;;  opc             1   71[BANK0 ] enum E12392
 24096 ;; Return value:  Size  Location     Type
 24097 ;;                  1    wreg      void 
 24098 ;; Registers used:
 24099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24100 ;; Tracked objects:
 24101 ;;		On entry : 0/0
 24102 ;;		On exit  : 0/0
 24103 ;;		Unchanged: 0/0
 24104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24105 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24108 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24109 ;;Total ram usage:        8 bytes
 24110 ;; Hardware stack levels used: 1
 24111 ;; Hardware stack levels required when called: 16
 24112 ;; This function calls:
 24113 ;;		_sendMessage
 24114 ;; This function is called by:
 24115 ;;		_ackEventProcessMessage
 24116 ;;		_mnsProcessMessage
 24117 ;;		_nerdCallback
 24118 ;; This function uses a non-reentrant model
 24119 ;;
 24120                           
 24121                           	psect	text88
 24122   00C21A                     __ptext88:
 24123                           	callstack 0
 24124   00C21A                     _sendMessage7:
 24125                           	callstack 11
 24126                           
 24127                           ; BSR set to: 0
 24128                           ;incstack = 0
 24129                           ;sendMessage7@opc stored from wreg
 24130   00C21A  0100               	movlb	0	; () banked
 24131   00C21C  6FA7               	movwf	sendMessage7@opc& (0+255),b
 24132                           
 24133                           ;../../VLCBlib_PIC/vlcb.c: 1211:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 24134   00C21E  0E08               	movlw	8
 24135   00C220  0101               	movlb	1	; () banked
 24136   00C222  6FBE               	movwf	sendMessage@len& (0+255),b
 24137   00C224  C1C6  F1BF         	movff	sendMessage7@data1,sendMessage@data1
 24138   00C228  C1C7  F1C0         	movff	sendMessage7@data2,sendMessage@data2
 24139   00C22C  C1C8  F1C1         	movff	sendMessage7@data3,sendMessage@data3
 24140   00C230  C1C9  F1C2         	movff	sendMessage7@data4,sendMessage@data4
 24141   00C234  C1CA  F1C3         	movff	sendMessage7@data5,sendMessage@data5
 24142   00C238  C1CB  F1C4         	movff	sendMessage7@data6,sendMessage@data6
 24143   00C23C  C1CC  F1C5         	movff	sendMessage7@data7,sendMessage@data7
 24144   00C240  0100               	movlb	0	; () banked
 24145   00C242  51A7               	movf	sendMessage7@opc& (0+255),w,b
 24146   00C244  ECE0  F055         	call	_sendMessage
 24147   00C248  0012               	return		;funcret
 24148   00C24A                     __end_of_sendMessage7:
 24149                           	callstack 0
 24150                           
 24151 ;; *************** function _isConsumedEvent *****************
 24152 ;; Defined at:
 24153 ;;		line 382 in file "../event_consumerDualActionQueue.c"
 24154 ;; Parameters:    Size  Location     Type
 24155 ;;  eventIndex      1    wreg     unsigned char 
 24156 ;; Auto vars:     Size  Location     Type
 24157 ;;  eventIndex      1   70[BANK0 ] unsigned char 
 24158 ;;  ev              1   71[BANK0 ] unsigned char 
 24159 ;; Return value:  Size  Location     Type
 24160 ;;                  1    wreg      unsigned char 
 24161 ;; Registers used:
 24162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24163 ;; Tracked objects:
 24164 ;;		On entry : 0/0
 24165 ;;		On exit  : 0/0
 24166 ;;		Unchanged: 0/0
 24167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24169 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24171 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24172 ;;Total ram usage:        2 bytes
 24173 ;; Hardware stack levels used: 1
 24174 ;; Hardware stack levels required when called: 16
 24175 ;; This function calls:
 24176 ;;		_getEv
 24177 ;; This function is called by:
 24178 ;;		_ackEventProcessMessage
 24179 ;; This function uses a non-reentrant model
 24180 ;;
 24181                           
 24182                           	psect	text89
 24183   00C630                     __ptext89:
 24184                           	callstack 0
 24185   00C630                     _isConsumedEvent:
 24186                           	callstack 12
 24187                           
 24188                           ;incstack = 0
 24189                           ;isConsumedEvent@eventIndex stored from wreg
 24190   00C630  0100               	movlb	0	; () banked
 24191   00C632  6FA6               	movwf	isConsumedEvent@eventIndex& (0+255),b
 24192                           
 24193                           ;../event_consumerDualActionQueue.c: 383:     uint8_t ev;;../event_consumerDualActionQue
      +                          ue.c: 384:     ev = (uint8_t)getEv(eventIndex, 1);
 24194   00C634  0E01               	movlw	1
 24195   00C636  0100               	movlb	0	; () banked
 24196   00C638  6F9D               	movwf	getEv@evNum& (0+255),b
 24197   00C63A  51A6               	movf	isConsumedEvent@eventIndex& (0+255),w,b
 24198   00C63C  ECFA  F03C         	call	_getEv
 24199   00C640  0100               	movlb	0	; () banked
 24200   00C642  519D               	movf	?_getEv& (0+255),w,b
 24201   00C644  6FA7               	movwf	isConsumedEvent@ev& (0+255),b
 24202                           
 24203                           ; BSR set to: 0
 24204                           ;../event_consumerDualActionQueue.c: 385:     return (ev != 0);
 24205   00C646  51A7               	movf	isConsumedEvent@ev& (0+255),w,b
 24206   00C648  B4D8               	btfsc	status,2,c
 24207   00C64A  D002               	goto	u22270
 24208   00C64C  0E01               	movlw	1
 24209   00C64E  0012               	return	
 24210   00C650                     u22270:
 24211   00C650  0E00               	movlw	0
 24212                           
 24213                           ; BSR set to: 0
 24214   00C652  0012               	return		;funcret
 24215   00C654                     __end_of_isConsumedEvent:
 24216                           	callstack 0
 24217                           
 24218 ;; *************** function _findService *****************
 24219 ;; Defined at:
 24220 ;;		line 808 in file "../../VLCBlib_PIC/vlcb.c"
 24221 ;; Parameters:    Size  Location     Type
 24222 ;;  id              1    wreg     unsigned char 
 24223 ;; Auto vars:     Size  Location     Type
 24224 ;;  id              1   49[BANK0 ] unsigned char 
 24225 ;;  i               1   50[BANK0 ] unsigned char 
 24226 ;; Return value:  Size  Location     Type
 24227 ;;                  2   45[BANK0 ] PTR const struct Service
 24228 ;; Registers used:
 24229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 24230 ;; Tracked objects:
 24231 ;;		On entry : 0/0
 24232 ;;		On exit  : 0/0
 24233 ;;		Unchanged: 0/0
 24234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24239 ;;Total ram usage:        6 bytes
 24240 ;; Hardware stack levels used: 1
 24241 ;; Hardware stack levels required when called: 12
 24242 ;; This function calls:
 24243 ;;		Nothing
 24244 ;; This function is called by:
 24245 ;;		_ackEventProcessMessage
 24246 ;; This function uses a non-reentrant model
 24247 ;;
 24248                           
 24249                           	psect	text90
 24250   00A306                     __ptext90:
 24251                           	callstack 0
 24252   00A306                     _findService:
 24253                           	callstack 16
 24254                           
 24255                           ; BSR set to: 0
 24256                           ;incstack = 0
 24257                           ;findService@id stored from wreg
 24258   00A306  0100               	movlb	0	; () banked
 24259   00A308  6F91               	movwf	findService@id& (0+255),b
 24260                           
 24261                           ;../../VLCBlib_PIC/vlcb.c: 809:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 810:     for (i
      +                          =0; i<9; i++) {
 24262   00A30A  0E00               	movlw	0
 24263   00A30C  0100               	movlb	0	; () banked
 24264   00A30E  6F92               	movwf	findService@i& (0+255),b
 24265   00A310                     l22329:
 24266                           
 24267                           ; BSR set to: 0
 24268                           ;../../VLCBlib_PIC/vlcb.c: 811:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 24269   00A310  5192               	movf	findService@i& (0+255),w,b
 24270   00A312  0D02               	mullw	2
 24271   00A314  0E69               	movlw	low _services
 24272   00A316  24F3               	addwf	243,w,c
 24273   00A318  6EF6               	movwf	tblptrl,c
 24274   00A31A  0EEE               	movlw	high _services
 24275   00A31C  20F4               	addwfc	244,w,c
 24276   00A31E  6EF7               	movwf	tblptrh,c
 24277   00A320                     	if	1	;There are 3 active tblptr bytes
 24278   00A320  6AF8               	clrf	tblptru,c
 24279   00A322  0E00               	movlw	low (__mediumconst shr (0+16))
 24280   00A324  22F8               	addwfc	tblptru,f,c
 24281   00A326                     	endif
 24282   00A326  0009               	tblrd		*+
 24283   00A328  50F5               	movf	tablat,w,c
 24284   00A32A  0009               	tblrd		*+
 24285   00A32C  10F5               	iorwf	tablat,w,c
 24286   00A32E  B4D8               	btfsc	status,2,c
 24287   00A330  D02D               	goto	l22337
 24288                           
 24289                           ; BSR set to: 0
 24290   00A332  5192               	movf	findService@i& (0+255),w,b
 24291   00A334  0D02               	mullw	2
 24292   00A336  0E69               	movlw	low _services
 24293   00A338  24F3               	addwf	243,w,c
 24294   00A33A  6EF6               	movwf	tblptrl,c
 24295   00A33C  0EEE               	movlw	high _services
 24296   00A33E  20F4               	addwfc	244,w,c
 24297   00A340  6EF7               	movwf	tblptrh,c
 24298   00A342                     	if	1	;There are 3 active tblptr bytes
 24299   00A342  6AF8               	clrf	tblptru,c
 24300   00A344  0E00               	movlw	low (__mediumconst shr (0+16))
 24301   00A346  22F8               	addwfc	tblptru,f,c
 24302   00A348                     	endif
 24303   00A348  0009               	tblrd		*+
 24304   00A34A  CFF5 F08F          	movff	tablat,??_findService
 24305   00A34E  0009               	tblrd		*+
 24306   00A350  CFF5 F090          	movff	tablat,??_findService+1
 24307   00A354  C08F  FFF6         	movff	??_findService,tblptrl
 24308   00A358  C090  FFF7         	movff	??_findService+1,tblptrh
 24309   00A35C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 24310   00A35C  6AF8               	clrf	tblptru,c
 24311   00A35E                     	endif
 24312   00A35E                     	if	0	;tblptru may be non-zero
 24313   00A35E                     	endif
 24314   00A35E  0008               	tblrd		*
 24315   00A360  50F5               	movf	tablat,w,c
 24316   00A362  1991               	xorwf	findService@id& (0+255),w,b
 24317   00A364  A4D8               	btfss	status,2,c
 24318   00A366  D012               	goto	l22337
 24319                           
 24320                           ; BSR set to: 0
 24321                           ;../../VLCBlib_PIC/vlcb.c: 812:             return services[i];
 24322   00A368  5192               	movf	findService@i& (0+255),w,b
 24323   00A36A  0D02               	mullw	2
 24324   00A36C  0E69               	movlw	low _services
 24325   00A36E  24F3               	addwf	243,w,c
 24326   00A370  6EF6               	movwf	tblptrl,c
 24327   00A372  0EEE               	movlw	high _services
 24328   00A374  20F4               	addwfc	244,w,c
 24329   00A376  6EF7               	movwf	tblptrh,c
 24330   00A378                     	if	1	;There are 3 active tblptr bytes
 24331   00A378  6AF8               	clrf	tblptru,c
 24332   00A37A  0E00               	movlw	low (__mediumconst shr (0+16))
 24333   00A37C  22F8               	addwfc	tblptru,f,c
 24334   00A37E                     	endif
 24335   00A37E  0009               	tblrd		*+
 24336   00A380  CFF5 F08D          	movff	tablat,?_findService
 24337   00A384  000A               	tblrd		*-
 24338   00A386  CFF5 F08E          	movff	tablat,?_findService+1
 24339   00A38A  0012               	return	
 24340   00A38C                     l22337:
 24341                           
 24342                           ; BSR set to: 0
 24343                           ;../../VLCBlib_PIC/vlcb.c: 814:     }
 24344   00A38C  2B92               	incf	findService@i& (0+255),f,b
 24345                           
 24346                           ; BSR set to: 0
 24347   00A38E  0E08               	movlw	8
 24348   00A390  6592               	cpfsgt	findService@i& (0+255),b
 24349   00A392  D7BE               	goto	l22329
 24350                           
 24351                           ; BSR set to: 0
 24352                           ;../../VLCBlib_PIC/vlcb.c: 815:     return ((void*)0);
 24353   00A394  0E00               	movlw	0
 24354   00A396  6F8D               	movwf	?_findService& (0+255),b
 24355   00A398  0E00               	movlw	0
 24356   00A39A  6F8E               	movwf	(?_findService+1)& (0+255),b
 24357                           
 24358                           ; BSR set to: 0
 24359   00A39C  0012               	return		;funcret
 24360   00A39E                     __end_of_findService:
 24361                           	callstack 0
 24362                           
 24363 ;; *************** function _ackEventCheckLen *****************
 24364 ;; Defined at:
 24365 ;;		line 184 in file "../../VLCBlib_PIC/event_acknowledge.c"
 24366 ;; Parameters:    Size  Location     Type
 24367 ;;  m               2   17[BANK1 ] PTR struct Message
 24368 ;;		 -> poll@m(9), 
 24369 ;;  needed          1   19[BANK1 ] unsigned char 
 24370 ;; Auto vars:     Size  Location     Type
 24371 ;;		None
 24372 ;; Return value:  Size  Location     Type
 24373 ;;                  1    wreg      enum E12799
 24374 ;; Registers used:
 24375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24376 ;; Tracked objects:
 24377 ;;		On entry : 0/0
 24378 ;;		On exit  : 0/0
 24379 ;;		Unchanged: 0/0
 24380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24381 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24384 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24385 ;;Total ram usage:        3 bytes
 24386 ;; Hardware stack levels used: 1
 24387 ;; Hardware stack levels required when called: 18
 24388 ;; This function calls:
 24389 ;;		_checkLen
 24390 ;; This function is called by:
 24391 ;;		_ackEventProcessMessage
 24392 ;; This function uses a non-reentrant model
 24393 ;;
 24394                           
 24395                           	psect	text91
 24396   00C7C0                     __ptext91:
 24397                           	callstack 0
 24398   00C7C0                     _ackEventCheckLen:
 24399                           	callstack 10
 24400                           
 24401                           ;../../VLCBlib_PIC/event_acknowledge.c: 185:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 24402                           
 24403                           ; BSR set to: 0
 24404                           ;incstack = 0
 24405   00C7C0  C1CF  F1CB         	movff	ackEventCheckLen@m,checkLen@m
 24406   00C7C4  C1D0  F1CC         	movff	ackEventCheckLen@m+1,checkLen@m+1
 24407   00C7C8  C1D1  F1CD         	movff	ackEventCheckLen@needed,checkLen@needed
 24408   00C7CC  0E09               	movlw	9
 24409   00C7CE  0101               	movlb	1	; () banked
 24410   00C7D0  6FCE               	movwf	checkLen@service& (0+255),b
 24411   00C7D2  EC62  F055         	call	_checkLen	;wreg free
 24412   00C7D6  0012               	return		;funcret
 24413   00C7D8                     __end_of_ackEventCheckLen:
 24414                           	callstack 0
 24415                           
 24416 ;; *************** function _checkLen *****************
 24417 ;; Defined at:
 24418 ;;		line 1096 in file "../../VLCBlib_PIC/vlcb.c"
 24419 ;; Parameters:    Size  Location     Type
 24420 ;;  m               2   13[BANK1 ] PTR struct Message
 24421 ;;		 -> poll@m(9), 
 24422 ;;  needed          1   15[BANK1 ] unsigned char 
 24423 ;;  service         1   16[BANK1 ] unsigned char 
 24424 ;; Auto vars:     Size  Location     Type
 24425 ;;		None
 24426 ;; Return value:  Size  Location     Type
 24427 ;;                  1    wreg      enum E12799
 24428 ;; Registers used:
 24429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24430 ;; Tracked objects:
 24431 ;;		On entry : 0/0
 24432 ;;		On exit  : 0/0
 24433 ;;		Unchanged: 0/0
 24434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24435 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24438 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24439 ;;Total ram usage:        5 bytes
 24440 ;; Hardware stack levels used: 1
 24441 ;; Hardware stack levels required when called: 17
 24442 ;; This function calls:
 24443 ;;		_sendMessage5
 24444 ;; This function is called by:
 24445 ;;		_ackEventCheckLen
 24446 ;;		_teachCheckLen
 24447 ;; This function uses a non-reentrant model
 24448 ;;
 24449                           
 24450                           	psect	text92
 24451   00AAC4                     __ptext92:
 24452                           	callstack 0
 24453   00AAC4                     _checkLen:
 24454                           	callstack 10
 24455                           
 24456                           ;../../VLCBlib_PIC/vlcb.c: 1097:     if (m->len < needed) {
 24457                           
 24458                           ;incstack = 0
 24459   00AAC4  C1CB  FFD9         	movff	checkLen@m,fsr2l
 24460   00AAC8  C1CC  FFDA         	movff	checkLen@m+1,fsr2h
 24461   00AACC  0101               	movlb	1	; () banked
 24462   00AACE  51CD               	movf	checkLen@needed& (0+255),w,b
 24463   00AAD0  5CDE               	subwf	postinc2,w,c
 24464   00AAD2  B0D8               	btfsc	status,0,c
 24465   00AAD4  D034               	goto	l21163
 24466                           
 24467                           ; BSR set to: 1
 24468                           ;../../VLCBlib_PIC/vlcb.c: 1099:         if (m->len > 2) {
 24469   00AAD6  C1CB  FFD9         	movff	checkLen@m,fsr2l
 24470   00AADA  C1CC  FFDA         	movff	checkLen@m+1,fsr2h
 24471   00AADE  0E02               	movlw	2
 24472   00AAE0  64DF               	cpfsgt	indf2,c
 24473   00AAE2  D02B               	goto	l21159
 24474                           
 24475                           ; BSR set to: 1
 24476                           ;../../VLCBlib_PIC/vlcb.c: 1100:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 24477   00AAE4  EE20 F002          	lfsr	2,2
 24478   00AAE8  51CB               	movf	checkLen@m& (0+255),w,b
 24479   00AAEA  26D9               	addwf	fsr2l,f,c
 24480   00AAEC  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 24481   00AAEE  22DA               	addwfc	fsr2h,f,c
 24482   00AAF0  50DE               	movf	postinc2,w,c
 24483   00AAF2  0100               	movlb	0	; () banked
 24484   00AAF4  19B5               	xorwf	(_nn+1)& (0+255),w,b
 24485   00AAF6  A4D8               	btfss	status,2,c
 24486   00AAF8  D020               	goto	l21159
 24487                           
 24488                           ; BSR set to: 0
 24489   00AAFA  0101               	movlb	1	; () banked
 24490   00AAFC  EE20 F003          	lfsr	2,3
 24491   00AB00  51CB               	movf	checkLen@m& (0+255),w,b
 24492   00AB02  26D9               	addwf	fsr2l,f,c
 24493   00AB04  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 24494   00AB06  22DA               	addwfc	fsr2h,f,c
 24495   00AB08  0100               	movlb	0	; () banked
 24496   00AB0A  51B4               	movf	_nn& (0+255),w,b
 24497   00AB0C  18DE               	xorwf	postinc2,w,c
 24498   00AB0E  A4D8               	btfss	status,2,c
 24499   00AB10  D014               	goto	l21159
 24500                           
 24501                           ; BSR set to: 0
 24502                           ;../../VLCBlib_PIC/vlcb.c: 1101:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 24503   00AB12  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 24504   00AB16  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 24505   00AB1A  0101               	movlb	1	; () banked
 24506   00AB1C  EE20 F001          	lfsr	2,1
 24507   00AB20  51CB               	movf	checkLen@m& (0+255),w,b
 24508   00AB22  26D9               	addwf	fsr2l,f,c
 24509   00AB24  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 24510   00AB26  22DA               	addwfc	fsr2h,f,c
 24511   00AB28  50DF               	movf	indf2,w,c
 24512   00AB2A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 24513   00AB2C  C1CE  F1C9         	movff	checkLen@service,sendMessage5@data4
 24514   00AB30  0E01               	movlw	1
 24515   00AB32  6FCA               	movwf	sendMessage5@data5& (0+255),b
 24516   00AB34  0EAF               	movlw	175
 24517   00AB36  EC25  F061         	call	_sendMessage5
 24518   00AB3A                     l21159:
 24519                           
 24520                           ;../../VLCBlib_PIC/vlcb.c: 1105:         return PROCESSED;
 24521   00AB3A  0E01               	movlw	1
 24522   00AB3C  0012               	return	
 24523   00AB3E                     l21163:
 24524                           
 24525                           ; BSR set to: 1
 24526                           ;../../VLCBlib_PIC/vlcb.c: 1107:     return NOT_PROCESSED;
 24527   00AB3E  0E00               	movlw	0
 24528   00AB40  0012               	return		;funcret
 24529   00AB42                     __end_of_checkLen:
 24530                           	callstack 0
 24531                           
 24532 ;; *************** function _sendMessage5 *****************
 24533 ;; Defined at:
 24534 ;;		line 1181 in file "../../VLCBlib_PIC/vlcb.c"
 24535 ;; Parameters:    Size  Location     Type
 24536 ;;  opc             1    wreg     enum E12392
 24537 ;;  data1           1    8[BANK1 ] unsigned char 
 24538 ;;  data2           1    9[BANK1 ] unsigned char 
 24539 ;;  data3           1   10[BANK1 ] unsigned char 
 24540 ;;  data4           1   11[BANK1 ] unsigned char 
 24541 ;;  data5           1   12[BANK1 ] unsigned char 
 24542 ;; Auto vars:     Size  Location     Type
 24543 ;;  opc             1   71[BANK0 ] enum E12392
 24544 ;; Return value:  Size  Location     Type
 24545 ;;                  1    wreg      void 
 24546 ;; Registers used:
 24547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24548 ;; Tracked objects:
 24549 ;;		On entry : 0/0
 24550 ;;		On exit  : 0/0
 24551 ;;		Unchanged: 0/0
 24552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24553 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24556 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24557 ;;Total ram usage:        6 bytes
 24558 ;; Hardware stack levels used: 1
 24559 ;; Hardware stack levels required when called: 16
 24560 ;; This function calls:
 24561 ;;		_sendMessage
 24562 ;; This function is called by:
 24563 ;;		_mnsProcessMessage
 24564 ;;		_mnsPoll
 24565 ;;		_mnsTRserviceDiscoveryCallback
 24566 ;;		_nvProcessMessage
 24567 ;;		_checkLen
 24568 ;;		_canProcessMessage
 24569 ;;		_teachProcessMessage
 24570 ;;		_teachCheckLen
 24571 ;;		_doNenrd
 24572 ;;		_doNnclr
 24573 ;;		_doEvlrn
 24574 ;;		_doReval
 24575 ;;		_doEvuln
 24576 ;;		_doReqev
 24577 ;;		_reqevCallback
 24578 ;; This function uses a non-reentrant model
 24579 ;;
 24580                           
 24581                           	psect	text93
 24582   00C24A                     __ptext93:
 24583                           	callstack 0
 24584   00C24A                     _sendMessage5:
 24585                           	callstack 11
 24586                           
 24587                           ;incstack = 0
 24588                           ;sendMessage5@opc stored from wreg
 24589   00C24A  0100               	movlb	0	; () banked
 24590   00C24C  6FA7               	movwf	sendMessage5@opc& (0+255),b
 24591                           
 24592                           ;../../VLCBlib_PIC/vlcb.c: 1182:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 24593   00C24E  0E06               	movlw	6
 24594   00C250  0101               	movlb	1	; () banked
 24595   00C252  6FBE               	movwf	sendMessage@len& (0+255),b
 24596   00C254  C1C6  F1BF         	movff	sendMessage5@data1,sendMessage@data1
 24597   00C258  C1C7  F1C0         	movff	sendMessage5@data2,sendMessage@data2
 24598   00C25C  C1C8  F1C1         	movff	sendMessage5@data3,sendMessage@data3
 24599   00C260  C1C9  F1C2         	movff	sendMessage5@data4,sendMessage@data4
 24600   00C264  C1CA  F1C3         	movff	sendMessage5@data5,sendMessage@data5
 24601   00C268  0E00               	movlw	0
 24602   00C26A  6FC4               	movwf	sendMessage@data6& (0+255),b
 24603   00C26C  0E00               	movlw	0
 24604   00C26E  6FC5               	movwf	sendMessage@data7& (0+255),b
 24605   00C270  0100               	movlb	0	; () banked
 24606   00C272  51A7               	movf	sendMessage5@opc& (0+255),w,b
 24607   00C274  ECE0  F055         	call	_sendMessage
 24608   00C278  0012               	return		;funcret
 24609   00C27A                     __end_of_sendMessage5:
 24610                           	callstack 0
 24611                           
 24612 ;; *************** function _APP_preProcessMessage *****************
 24613 ;; Defined at:
 24614 ;;		line 414 in file "../main.c"
 24615 ;; Parameters:    Size  Location     Type
 24616 ;;  m               2   45[BANK0 ] PTR struct Message
 24617 ;;		 -> poll@m(9), 
 24618 ;; Auto vars:     Size  Location     Type
 24619 ;;		None
 24620 ;; Return value:  Size  Location     Type
 24621 ;;                  1    wreg      enum E12749
 24622 ;; Registers used:
 24623 ;;		wreg
 24624 ;; Tracked objects:
 24625 ;;		On entry : 0/0
 24626 ;;		On exit  : 0/0
 24627 ;;		Unchanged: 0/0
 24628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24632 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24633 ;;Total ram usage:        2 bytes
 24634 ;; Hardware stack levels used: 1
 24635 ;; Hardware stack levels required when called: 12
 24636 ;; This function calls:
 24637 ;;		Nothing
 24638 ;; This function is called by:
 24639 ;;		_poll
 24640 ;; This function uses a non-reentrant model
 24641 ;;
 24642                           
 24643                           	psect	text94
 24644   00C8E2                     __ptext94:
 24645                           	callstack 0
 24646   00C8E2                     _APP_preProcessMessage:
 24647                           	callstack 17
 24648                           
 24649                           ;../main.c: 415:     return NOT_PROCESSED;
 24650                           
 24651                           ;incstack = 0
 24652   00C8E2  0E00               	movlw	0
 24653   00C8E4  0012               	return		;funcret
 24654   00C8E6                     __end_of_APP_preProcessMessage:
 24655                           	callstack 0
 24656                           
 24657 ;; *************** function _APP_postProcessMessage *****************
 24658 ;; Defined at:
 24659 ;;		line 421 in file "../main.c"
 24660 ;; Parameters:    Size  Location     Type
 24661 ;;  m               2   45[BANK0 ] PTR struct Message
 24662 ;;		 -> poll@m(9), 
 24663 ;; Auto vars:     Size  Location     Type
 24664 ;;		None
 24665 ;; Return value:  Size  Location     Type
 24666 ;;                  1    wreg      enum E12749
 24667 ;; Registers used:
 24668 ;;		wreg
 24669 ;; Tracked objects:
 24670 ;;		On entry : 0/0
 24671 ;;		On exit  : 0/0
 24672 ;;		Unchanged: 0/0
 24673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24678 ;;Total ram usage:        2 bytes
 24679 ;; Hardware stack levels used: 1
 24680 ;; Hardware stack levels required when called: 12
 24681 ;; This function calls:
 24682 ;;		Nothing
 24683 ;; This function is called by:
 24684 ;;		_poll
 24685 ;; This function uses a non-reentrant model
 24686 ;;
 24687                           
 24688                           	psect	text95
 24689   00C8E6                     __ptext95:
 24690                           	callstack 0
 24691   00C8E6                     _APP_postProcessMessage:
 24692                           	callstack 17
 24693                           
 24694                           ;../main.c: 422:     return NOT_PROCESSED;
 24695                           
 24696                           ;incstack = 0
 24697   00C8E6  0E00               	movlw	0
 24698   00C8E8  0012               	return		;funcret
 24699   00C8EA                     __end_of_APP_postProcessMessage:
 24700                           	callstack 0
 24701                           
 24702 ;; *************** function _loop *****************
 24703 ;; Defined at:
 24704 ;;		line 353 in file "../main.c"
 24705 ;; Parameters:    Size  Location     Type
 24706 ;;		None
 24707 ;; Auto vars:     Size  Location     Type
 24708 ;;		None
 24709 ;; Return value:  Size  Location     Type
 24710 ;;                  1    wreg      void 
 24711 ;; Registers used:
 24712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24713 ;; Tracked objects:
 24714 ;;		On entry : 0/0
 24715 ;;		On exit  : 0/0
 24716 ;;		Unchanged: 0/0
 24717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24720 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24721 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24722 ;;Total ram usage:        8 bytes
 24723 ;; Hardware stack levels used: 1
 24724 ;; Hardware stack levels required when called: 22
 24725 ;; This function calls:
 24726 ;;		___lmul
 24727 ;;		_getNV
 24728 ;;		_inputScan
 24729 ;;		_processActions
 24730 ;;		_processOutputs
 24731 ;;		_sendProducedEvent
 24732 ;;		_startServos
 24733 ;;		_tickGet
 24734 ;; This function is called by:
 24735 ;;		_main
 24736 ;; This function uses a non-reentrant model
 24737 ;;
 24738                           
 24739                           	psect	text96
 24740   006D6C                     __ptext96:
 24741                           	callstack 0
 24742   006D6C                     _loop:
 24743                           	callstack 8
 24744                           
 24745                           ;../main.c: 355:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 24746                           
 24747                           ;incstack = 0
 24748   006D6C  0100               	movlb	0	; () banked
 24749   006D6E  51D0               	movf	_started& (0+255),w,b
 24750   006D70  A4D8               	btfss	status,2,c
 24751   006D72  D053               	goto	l25225
 24752                           
 24753                           ; BSR set to: 0
 24754   006D74  EC23  F05C         	call	_tickGet	;wreg free
 24755   006D78  501D               	movf	_startTime^0,w,c
 24756   006D7A  0100               	movlb	0	; () banked
 24757   006D7C  5D8D               	subwf	?_tickGet& (0+255),w,b
 24758   006D7E  0101               	movlb	1	; () banked
 24759   006D80  6FEC               	movwf	??_loop& (0+255),b
 24760   006D82  501E               	movf	(_startTime+1)^0,w,c
 24761   006D84  0100               	movlb	0	; () banked
 24762   006D86  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24763   006D88  0101               	movlb	1	; () banked
 24764   006D8A  6FED               	movwf	(??_loop+1)& (0+255),b
 24765   006D8C  501F               	movf	(_startTime+2)^0,w,c
 24766   006D8E  0100               	movlb	0	; () banked
 24767   006D90  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24768   006D92  0101               	movlb	1	; () banked
 24769   006D94  6FEE               	movwf	(??_loop+2)& (0+255),b
 24770   006D96  5020               	movf	(_startTime+3)^0,w,c
 24771   006D98  0100               	movlb	0	; () banked
 24772   006D9A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24773   006D9C  0101               	movlb	1	; () banked
 24774   006D9E  6FEF               	movwf	(??_loop+3)& (0+255),b
 24775   006DA0  0E01               	movlw	1
 24776   006DA2  ECB0  F05F         	call	_getNV
 24777   006DA6  0100               	movlb	0	; () banked
 24778   006DA8  C08D  F091         	movff	?_getNV,___lmul@multiplier
 24779   006DAC  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 24780   006DB0  0E00               	movlw	0
 24781   006DB2  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 24782   006DB4  0EFF               	movlw	-1
 24783   006DB6  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 24784   006DB8  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 24785   006DBA  0E6A               	movlw	106
 24786   006DBC  6F95               	movwf	___lmul@multiplicand& (0+255),b
 24787   006DBE  0E18               	movlw	24
 24788   006DC0  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24789   006DC2  0E00               	movlw	0
 24790   006DC4  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24791   006DC6  0E00               	movlw	0
 24792   006DC8  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24793   006DCA  EC4F  F05C         	call	___lmul	;wreg free
 24794   006DCE  0E48               	movlw	72
 24795   006DD0  0100               	movlb	0	; () banked
 24796   006DD2  2591               	addwf	?___lmul& (0+255),w,b
 24797   006DD4  0101               	movlb	1	; () banked
 24798   006DD6  6FF0               	movwf	(??_loop+4)& (0+255),b
 24799   006DD8  0EE8               	movlw	232
 24800   006DDA  0100               	movlb	0	; () banked
 24801   006DDC  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 24802   006DDE  0101               	movlb	1	; () banked
 24803   006DE0  6FF1               	movwf	(??_loop+5)& (0+255),b
 24804   006DE2  0E01               	movlw	1
 24805   006DE4  0100               	movlb	0	; () banked
 24806   006DE6  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 24807   006DE8  0101               	movlb	1	; () banked
 24808   006DEA  6FF2               	movwf	(??_loop+6)& (0+255),b
 24809   006DEC  0E00               	movlw	0
 24810   006DEE  0100               	movlb	0	; () banked
 24811   006DF0  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 24812   006DF2  0101               	movlb	1	; () banked
 24813   006DF4  6FF3               	movwf	(??_loop+7)& (0+255),b
 24814   006DF6  51EC               	movf	??_loop& (0+255),w,b
 24815   006DF8  5DF0               	subwf	(??_loop+4)& (0+255),w,b
 24816   006DFA  51ED               	movf	(??_loop+1)& (0+255),w,b
 24817   006DFC  59F1               	subwfb	(??_loop+5)& (0+255),w,b
 24818   006DFE  51EE               	movf	(??_loop+2)& (0+255),w,b
 24819   006E00  59F2               	subwfb	(??_loop+6)& (0+255),w,b
 24820   006E02  51EF               	movf	(??_loop+3)& (0+255),w,b
 24821   006E04  59F3               	subwfb	(??_loop+7)& (0+255),w,b
 24822   006E06  B0D8               	btfsc	status,0,c
 24823   006E08  D008               	goto	l25225
 24824                           
 24825                           ; BSR set to: 1
 24826                           ;../main.c: 356:         started = TRUE;
 24827   006E0A  0E01               	movlw	1
 24828   006E0C  0100               	movlb	0	; () banked
 24829   006E0E  6FD0               	movwf	_started& (0+255),b
 24830                           
 24831                           ; BSR set to: 0
 24832                           ;../main.c: 357:         sendProducedEvent(1, EVENT_ON);
 24833   006E10  0E01               	movlw	1
 24834   006E12  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 24835   006E14  0E01               	movlw	1
 24836   006E16  EC42  F04C         	call	_sendProducedEvent
 24837   006E1A                     l25225:
 24838                           
 24839                           ;../main.c: 361:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 24840   006E1A  EC23  F05C         	call	_tickGet	;wreg free
 24841   006E1E  0101               	movlb	1	; () banked
 24842   006E20  515C               	movf	_lastServoStartTime& (0+255),w,b
 24843   006E22  0100               	movlb	0	; () banked
 24844   006E24  5D8D               	subwf	?_tickGet& (0+255),w,b
 24845   006E26  0101               	movlb	1	; () banked
 24846   006E28  6FEC               	movwf	??_loop& (0+255),b
 24847   006E2A  515D               	movf	(_lastServoStartTime+1)& (0+255),w,b
 24848   006E2C  0100               	movlb	0	; () banked
 24849   006E2E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24850   006E30  0101               	movlb	1	; () banked
 24851   006E32  6FED               	movwf	(??_loop+1)& (0+255),b
 24852   006E34  515E               	movf	(_lastServoStartTime+2)& (0+255),w,b
 24853   006E36  0100               	movlb	0	; () banked
 24854   006E38  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24855   006E3A  0101               	movlb	1	; () banked
 24856   006E3C  6FEE               	movwf	(??_loop+2)& (0+255),b
 24857   006E3E  515F               	movf	(_lastServoStartTime+3)& (0+255),w,b
 24858   006E40  0100               	movlb	0	; () banked
 24859   006E42  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24860   006E44  0101               	movlb	1	; () banked
 24861   006E46  6FEF               	movwf	(??_loop+3)& (0+255),b
 24862   006E48  51EF               	movf	(??_loop+3)& (0+255),w,b
 24863   006E4A  11EE               	iorwf	(??_loop+2)& (0+255),w,b
 24864   006E4C  11ED               	iorwf	(??_loop+1)& (0+255),w,b
 24865   006E4E  E104               	bnz	u26990
 24866   006E50  0E9C               	movlw	156
 24867   006E52  5DEC               	subwf	??_loop& (0+255),w,b
 24868   006E54  A0D8               	btfss	status,0,c
 24869   006E56  D00F               	goto	l25231
 24870   006E58                     u26990:
 24871                           
 24872                           ; BSR set to: 1
 24873                           ;../main.c: 362:         if (startServos()) {
 24874   006E58  ECE6  F04B         	call	_startServos	;wreg free
 24875   006E5C  0900               	iorlw	0
 24876   006E5E  B4D8               	btfsc	status,2,c
 24877   006E60  D00A               	goto	l25231
 24878                           
 24879                           ;../main.c: 363:             lastServoStartTime.val = tickGet();
 24880   006E62  EC23  F05C         	call	_tickGet	;wreg free
 24881   006E66  C08D  F15C         	movff	?_tickGet,_lastServoStartTime
 24882   006E6A  C08E  F15D         	movff	?_tickGet+1,_lastServoStartTime+1
 24883   006E6E  C08F  F15E         	movff	?_tickGet+2,_lastServoStartTime+2
 24884   006E72  C090  F15F         	movff	?_tickGet+3,_lastServoStartTime+3
 24885   006E76                     l25231:
 24886                           
 24887                           ;../main.c: 367:     if (started) {
 24888   006E76  0100               	movlb	0	; () banked
 24889   006E78  51D0               	movf	_started& (0+255),w,b
 24890   006E7A  B4D8               	btfsc	status,2,c
 24891   006E7C  0012               	return	
 24892                           
 24893                           ; BSR set to: 0
 24894                           ;../main.c: 368:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 24895   006E7E  EC23  F05C         	call	_tickGet	;wreg free
 24896   006E82  0101               	movlb	1	; () banked
 24897   006E84  5158               	movf	_lastInputScanTime& (0+255),w,b
 24898   006E86  0100               	movlb	0	; () banked
 24899   006E88  5D8D               	subwf	?_tickGet& (0+255),w,b
 24900   006E8A  0101               	movlb	1	; () banked
 24901   006E8C  6FEC               	movwf	??_loop& (0+255),b
 24902   006E8E  5159               	movf	(_lastInputScanTime+1)& (0+255),w,b
 24903   006E90  0100               	movlb	0	; () banked
 24904   006E92  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24905   006E94  0101               	movlb	1	; () banked
 24906   006E96  6FED               	movwf	(??_loop+1)& (0+255),b
 24907   006E98  515A               	movf	(_lastInputScanTime+2)& (0+255),w,b
 24908   006E9A  0100               	movlb	0	; () banked
 24909   006E9C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24910   006E9E  0101               	movlb	1	; () banked
 24911   006EA0  6FEE               	movwf	(??_loop+2)& (0+255),b
 24912   006EA2  515B               	movf	(_lastInputScanTime+3)& (0+255),w,b
 24913   006EA4  0100               	movlb	0	; () banked
 24914   006EA6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24915   006EA8  0101               	movlb	1	; () banked
 24916   006EAA  6FEF               	movwf	(??_loop+3)& (0+255),b
 24917   006EAC  51EF               	movf	(??_loop+3)& (0+255),w,b
 24918   006EAE  11EE               	iorwf	(??_loop+2)& (0+255),w,b
 24919   006EB0  E106               	bnz	u27020
 24920   006EB2  0E37               	movlw	55
 24921   006EB4  5DEC               	subwf	??_loop& (0+255),w,b
 24922   006EB6  0E01               	movlw	1
 24923   006EB8  59ED               	subwfb	(??_loop+1)& (0+255),w,b
 24924   006EBA  A0D8               	btfss	status,0,c
 24925   006EBC  D00C               	goto	l25239
 24926   006EBE                     u27020:
 24927                           
 24928                           ; BSR set to: 1
 24929                           ;../main.c: 369:             inputScan();
 24930   006EBE  EC99  F028         	call	_inputScan	;wreg free
 24931                           
 24932                           ;../main.c: 370:             lastInputScanTime.val = tickGet();
 24933   006EC2  EC23  F05C         	call	_tickGet	;wreg free
 24934   006EC6  C08D  F158         	movff	?_tickGet,_lastInputScanTime
 24935   006ECA  C08E  F159         	movff	?_tickGet+1,_lastInputScanTime+1
 24936   006ECE  C08F  F15A         	movff	?_tickGet+2,_lastInputScanTime+2
 24937   006ED2  C090  F15B         	movff	?_tickGet+3,_lastInputScanTime+3
 24938   006ED6                     l25239:
 24939                           
 24940                           ;../main.c: 372:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 24941   006ED6  EC23  F05C         	call	_tickGet	;wreg free
 24942   006EDA  0101               	movlb	1	; () banked
 24943   006EDC  5154               	movf	_lastActionPollTime& (0+255),w,b
 24944   006EDE  0100               	movlb	0	; () banked
 24945   006EE0  5D8D               	subwf	?_tickGet& (0+255),w,b
 24946   006EE2  0101               	movlb	1	; () banked
 24947   006EE4  6FEC               	movwf	??_loop& (0+255),b
 24948   006EE6  5155               	movf	(_lastActionPollTime+1)& (0+255),w,b
 24949   006EE8  0100               	movlb	0	; () banked
 24950   006EEA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24951   006EEC  0101               	movlb	1	; () banked
 24952   006EEE  6FED               	movwf	(??_loop+1)& (0+255),b
 24953   006EF0  5156               	movf	(_lastActionPollTime+2)& (0+255),w,b
 24954   006EF2  0100               	movlb	0	; () banked
 24955   006EF4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24956   006EF6  0101               	movlb	1	; () banked
 24957   006EF8  6FEE               	movwf	(??_loop+2)& (0+255),b
 24958   006EFA  5157               	movf	(_lastActionPollTime+3)& (0+255),w,b
 24959   006EFC  0100               	movlb	0	; () banked
 24960   006EFE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24961   006F00  0101               	movlb	1	; () banked
 24962   006F02  6FEF               	movwf	(??_loop+3)& (0+255),b
 24963   006F04  51EF               	movf	(??_loop+3)& (0+255),w,b
 24964   006F06  11EE               	iorwf	(??_loop+2)& (0+255),w,b
 24965   006F08  E106               	bnz	u27030
 24966   006F0A  0E39               	movlw	57
 24967   006F0C  5DEC               	subwf	??_loop& (0+255),w,b
 24968   006F0E  0E18               	movlw	24
 24969   006F10  59ED               	subwfb	(??_loop+1)& (0+255),w,b
 24970   006F12  A0D8               	btfss	status,0,c
 24971   006F14  0012               	return	
 24972   006F16                     u27030:
 24973                           
 24974                           ; BSR set to: 1
 24975                           ;../main.c: 373:             processActions();
 24976   006F16  ECC2  F031         	call	_processActions	;wreg free
 24977                           
 24978                           ;../main.c: 374:             processOutputs();
 24979   006F1A  ECCD  F035         	call	_processOutputs	;wreg free
 24980                           
 24981                           ;../main.c: 375:             lastActionPollTime.val = tickGet();
 24982   006F1E  EC23  F05C         	call	_tickGet	;wreg free
 24983   006F22  C08D  F154         	movff	?_tickGet,_lastActionPollTime
 24984   006F26  C08E  F155         	movff	?_tickGet+1,_lastActionPollTime+1
 24985   006F2A  C08F  F156         	movff	?_tickGet+2,_lastActionPollTime+2
 24986   006F2E  C090  F157         	movff	?_tickGet+3,_lastActionPollTime+3
 24987   006F32  0012               	return		;funcret
 24988   006F34                     __end_of_loop:
 24989                           	callstack 0
 24990                           
 24991 ;; *************** function _startServos *****************
 24992 ;; Defined at:
 24993 ;;		line 186 in file "../servo.c"
 24994 ;; Parameters:    Size  Location     Type
 24995 ;;		None
 24996 ;; Auto vars:     Size  Location     Type
 24997 ;;  type            1   30[BANK1 ] unsigned char 
 24998 ;; Return value:  Size  Location     Type
 24999 ;;                  1    wreg      unsigned char 
 25000 ;; Registers used:
 25001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25002 ;; Tracked objects:
 25003 ;;		On entry : 0/0
 25004 ;;		On exit  : 0/0
 25005 ;;		Unchanged: 0/0
 25006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25008 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25010 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25011 ;;Total ram usage:        1 bytes
 25012 ;; Hardware stack levels used: 1
 25013 ;; Hardware stack levels required when called: 19
 25014 ;; This function calls:
 25015 ;;		_getNV
 25016 ;;		_pollServos
 25017 ;;		_setupTimer1
 25018 ;;		_setupTimer3
 25019 ;; This function is called by:
 25020 ;;		_loop
 25021 ;; This function uses a non-reentrant model
 25022 ;;
 25023                           
 25024                           	psect	text97
 25025   0097CC                     __ptext97:
 25026                           	callstack 0
 25027   0097CC                     _startServos:
 25028                           	callstack 10
 25029                           
 25030                           ;../servo.c: 187:     uint8_t type;;../servo.c: 190:     if (servoActive[0] || servoActi
      +                          ve[1]) return 0;
 25031                           
 25032                           ;incstack = 0
 25033   0097CC  0100               	movlb	0	; () banked
 25034   0097CE  51B2               	movf	_servoActive& (0+255),w,b
 25035   0097D0  A4D8               	btfss	status,2,c
 25036   0097D2  D003               	goto	u24340
 25037                           
 25038                           ; BSR set to: 0
 25039   0097D4  51B3               	movf	(_servoActive+1)& (0+255),w,b
 25040   0097D6  B4D8               	btfsc	status,2,c
 25041   0097D8  D002               	goto	l23195
 25042   0097DA                     u24340:
 25043                           
 25044                           ; BSR set to: 0
 25045   0097DA  0E00               	movlw	0
 25046   0097DC  0012               	return	
 25047   0097DE                     l23195:
 25048                           
 25049                           ; BSR set to: 0
 25050                           ;../servo.c: 191:     servoInBlock++;
 25051   0097DE  2BC9               	incf	_servoInBlock& (0+255),f,b
 25052                           
 25053                           ; BSR set to: 0
 25054                           ;../servo.c: 192:     if (servoInBlock >= 8) {
 25055   0097E0  0E07               	movlw	7
 25056   0097E2  65C9               	cpfsgt	_servoInBlock& (0+255),b
 25057   0097E4  D004               	goto	l23203
 25058                           
 25059                           ; BSR set to: 0
 25060                           ;../servo.c: 193:         servoInBlock = 0;
 25061   0097E6  0E00               	movlw	0
 25062   0097E8  6FC9               	movwf	_servoInBlock& (0+255),b
 25063                           
 25064                           ; BSR set to: 0
 25065                           ;../servo.c: 194:         pollServos();
 25066   0097EA  EC28  F004         	call	_pollServos	;wreg free
 25067   0097EE                     l23203:
 25068                           
 25069                           ;../servo.c: 196:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 25070   0097EE  0100               	movlb	0	; () banked
 25071   0097F0  51C9               	movf	_servoInBlock& (0+255),w,b
 25072   0097F2  0D07               	mullw	7
 25073   0097F4  50F3               	movf	243,w,c
 25074   0097F6  0F10               	addlw	16
 25075   0097F8  ECB0  F05F         	call	_getNV
 25076   0097FC  0100               	movlb	0	; () banked
 25077   0097FE  518D               	movf	?_getNV& (0+255),w,b
 25078   009800  0101               	movlb	1	; () banked
 25079   009802  6FDC               	movwf	startServos@type& (0+255),b
 25080                           
 25081                           ; BSR set to: 1
 25082                           ;../servo.c: 197:     if ((type == 2) || (type == 3) || (type == 4)) {
 25083   009804  0E02               	movlw	2
 25084   009806  19DC               	xorwf	startServos@type& (0+255),w,b
 25085   009808  B4D8               	btfsc	status,2,c
 25086   00980A  D008               	goto	u24380
 25087                           
 25088                           ; BSR set to: 1
 25089   00980C  0E03               	movlw	3
 25090   00980E  19DC               	xorwf	startServos@type& (0+255),w,b
 25091   009810  B4D8               	btfsc	status,2,c
 25092   009812  D004               	goto	u24380
 25093                           
 25094                           ; BSR set to: 1
 25095   009814  0E04               	movlw	4
 25096   009816  19DC               	xorwf	startServos@type& (0+255),w,b
 25097   009818  A4D8               	btfss	status,2,c
 25098   00981A  D00D               	goto	l23215
 25099   00981C                     u24380:
 25100                           
 25101                           ; BSR set to: 1
 25102                           ;../servo.c: 198:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 25103   00981C  0E10               	movlw	low _servoState
 25104   00981E  0100               	movlb	0	; () banked
 25105   009820  25C9               	addwf	_servoInBlock& (0+255),w,b
 25106   009822  6ED9               	movwf	fsr2l,c
 25107   009824  6ADA               	clrf	fsr2h,c
 25108   009826  0E01               	movlw	high _servoState
 25109   009828  22DA               	addwfc	fsr2h,f,c
 25110   00982A  50DF               	movf	indf2,w,c
 25111   00982C  B4D8               	btfsc	status,2,c
 25112   00982E  D003               	goto	l23215
 25113                           
 25114                           ; BSR set to: 0
 25115   009830  51C9               	movf	_servoInBlock& (0+255),w,b
 25116   009832  EC9A  F050         	call	_setupTimer1
 25117   009836                     l23215:
 25118                           
 25119                           ;../servo.c: 200:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 25120   009836  0100               	movlb	0	; () banked
 25121   009838  51C9               	movf	_servoInBlock& (0+255),w,b
 25122   00983A  0D07               	mullw	7
 25123   00983C  50F3               	movf	243,w,c
 25124   00983E  0F48               	addlw	72
 25125   009840  ECB0  F05F         	call	_getNV
 25126   009844  0100               	movlb	0	; () banked
 25127   009846  518D               	movf	?_getNV& (0+255),w,b
 25128   009848  0101               	movlb	1	; () banked
 25129   00984A  6FDC               	movwf	startServos@type& (0+255),b
 25130                           
 25131                           ; BSR set to: 1
 25132                           ;../servo.c: 201:     if ((type == 2) || (type == 3) || (type == 4)) {
 25133   00984C  0E02               	movlw	2
 25134   00984E  19DC               	xorwf	startServos@type& (0+255),w,b
 25135   009850  B4D8               	btfsc	status,2,c
 25136   009852  D008               	goto	u24420
 25137                           
 25138                           ; BSR set to: 1
 25139   009854  0E03               	movlw	3
 25140   009856  19DC               	xorwf	startServos@type& (0+255),w,b
 25141   009858  B4D8               	btfsc	status,2,c
 25142   00985A  D004               	goto	u24420
 25143                           
 25144                           ; BSR set to: 1
 25145   00985C  0E04               	movlw	4
 25146   00985E  19DC               	xorwf	startServos@type& (0+255),w,b
 25147   009860  A4D8               	btfss	status,2,c
 25148   009862  D00E               	goto	l23227
 25149   009864                     u24420:
 25150                           
 25151                           ; BSR set to: 1
 25152                           ;../servo.c: 202:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 25153   009864  0E18               	movlw	low (_servoState+8)
 25154   009866  0100               	movlb	0	; () banked
 25155   009868  25C9               	addwf	_servoInBlock& (0+255),w,b
 25156   00986A  6ED9               	movwf	fsr2l,c
 25157   00986C  6ADA               	clrf	fsr2h,c
 25158   00986E  0E01               	movlw	high (_servoState+8)
 25159   009870  22DA               	addwfc	fsr2h,f,c
 25160   009872  50DF               	movf	indf2,w,c
 25161   009874  B4D8               	btfsc	status,2,c
 25162   009876  D004               	goto	l23227
 25163                           
 25164                           ; BSR set to: 0
 25165   009878  51C9               	movf	_servoInBlock& (0+255),w,b
 25166   00987A  0F08               	addlw	8
 25167   00987C  EC4B  F050         	call	_setupTimer3
 25168   009880                     l23227:
 25169                           
 25170                           ;../servo.c: 204:     return 1;
 25171   009880  0E01               	movlw	1
 25172   009882  0012               	return		;funcret
 25173   009884                     __end_of_startServos:
 25174                           	callstack 0
 25175                           
 25176 ;; *************** function _setupTimer3 *****************
 25177 ;; Defined at:
 25178 ;;		line 224 in file "../servo.c"
 25179 ;; Parameters:    Size  Location     Type
 25180 ;;  io              1    wreg     unsigned char 
 25181 ;; Auto vars:     Size  Location     Type
 25182 ;;  io              1   60[BANK0 ] unsigned char 
 25183 ;;  ticks           2   58[BANK0 ] unsigned short 
 25184 ;; Return value:  Size  Location     Type
 25185 ;;                  1    wreg      void 
 25186 ;; Registers used:
 25187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25188 ;; Tracked objects:
 25189 ;;		On entry : 0/0
 25190 ;;		On exit  : 0/0
 25191 ;;		Unchanged: 0/0
 25192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25194 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25195 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25196 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25197 ;;Total ram usage:        8 bytes
 25198 ;; Hardware stack levels used: 1
 25199 ;; Hardware stack levels required when called: 13
 25200 ;; This function calls:
 25201 ;;		_getNV
 25202 ;;		_setOutputPin
 25203 ;; This function is called by:
 25204 ;;		_startServos
 25205 ;; This function uses a non-reentrant model
 25206 ;;
 25207                           
 25208                           	psect	text98
 25209   00A096                     __ptext98:
 25210                           	callstack 0
 25211   00A096                     _setupTimer3:
 25212                           	callstack 15
 25213                           
 25214                           ;incstack = 0
 25215                           ;setupTimer3@io stored from wreg
 25216   00A096  0100               	movlb	0	; () banked
 25217   00A098  6F9C               	movwf	setupTimer3@io& (0+255),b
 25218                           
 25219                           ;../servo.c: 225:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 25220   00A09A  0100               	movlb	0	; () banked
 25221   00A09C  519C               	movf	setupTimer3@io& (0+255),w,b
 25222   00A09E  0D07               	mullw	7
 25223   00A0A0  50F3               	movf	243,w,c
 25224   00A0A2  0F11               	addlw	17
 25225   00A0A4  ECB0  F05F         	call	_getNV
 25226   00A0A8  0100               	movlb	0	; () banked
 25227   00A0AA  BF8D               	btfsc	?_getNV& (0+255),7,b
 25228   00A0AC  D013               	goto	l22295
 25229                           
 25230                           ; BSR set to: 0
 25231   00A0AE  0E30               	movlw	low _currentPos
 25232   00A0B0  259C               	addwf	setupTimer3@io& (0+255),w,b
 25233   00A0B2  6ED9               	movwf	fsr2l,c
 25234   00A0B4  6ADA               	clrf	fsr2h,c
 25235   00A0B6  0E01               	movlw	high _currentPos
 25236   00A0B8  22DA               	addwfc	fsr2h,f,c
 25237   00A0BA  50DF               	movf	indf2,w,c
 25238   00A0BC  6F95               	movwf	??_setupTimer3& (0+255),b
 25239   00A0BE  5195               	movf	??_setupTimer3& (0+255),w,b
 25240   00A0C0  0D13               	mullw	19
 25241   00A0C2  CFF3 F096          	movff	prodl,??_setupTimer3+1
 25242   00A0C6  CFF4 F097          	movff	prodh,??_setupTimer3+2
 25243   00A0CA  0E10               	movlw	16
 25244   00A0CC  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 25245   00A0CE  6F98               	movwf	_setupTimer3$1936& (0+255),b
 25246   00A0D0  0E0E               	movlw	14
 25247   00A0D2  D012               	goto	L5
 25248   00A0D4                     l22295:
 25249                           
 25250                           ; BSR set to: 0
 25251   00A0D4  0E30               	movlw	low _currentPos
 25252   00A0D6  259C               	addwf	setupTimer3@io& (0+255),w,b
 25253   00A0D8  6ED9               	movwf	fsr2l,c
 25254   00A0DA  6ADA               	clrf	fsr2h,c
 25255   00A0DC  0E01               	movlw	high _currentPos
 25256   00A0DE  22DA               	addwfc	fsr2h,f,c
 25257   00A0E0  50DF               	movf	indf2,w,c
 25258   00A0E2  6F95               	movwf	??_setupTimer3& (0+255),b
 25259   00A0E4  5195               	movf	??_setupTimer3& (0+255),w,b
 25260   00A0E6  0D24               	mullw	36
 25261   00A0E8  CFF3 F096          	movff	prodl,??_setupTimer3+1
 25262   00A0EC  CFF4 F097          	movff	prodh,??_setupTimer3+2
 25263   00A0F0  0E78               	movlw	120
 25264   00A0F2  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 25265   00A0F4  6F98               	movwf	_setupTimer3$1936& (0+255),b
 25266   00A0F6  0E05               	movlw	5
 25267   00A0F8                     L5:
 25268   00A0F8  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 25269   00A0FA  6F99               	movwf	(_setupTimer3$1936+1)& (0+255),b
 25270                           
 25271                           ; BSR set to: 0
 25272   00A0FC  1D98               	comf	_setupTimer3$1936& (0+255),w,b
 25273   00A0FE  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 25274   00A100  1D99               	comf	(_setupTimer3$1936+1)& (0+255),w,b
 25275   00A102  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 25276                           
 25277                           ; BSR set to: 0
 25278                           ;../servo.c: 228:     TMR3H = ticks >> 8;
 25279   00A104  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 25280   00A106  6EB3               	movwf	179,c	;volatile
 25281                           
 25282                           ; BSR set to: 0
 25283                           ;../servo.c: 229:     TMR3L = ticks & 0xFF;
 25284   00A108  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 25285                           
 25286                           ; BSR set to: 0
 25287                           ;../servo.c: 232:     servoActive[1] = 1;
 25288   00A10C  0E01               	movlw	1
 25289   00A10E  6FB3               	movwf	(_servoActive+1)& (0+255),b
 25290                           
 25291                           ; BSR set to: 0
 25292                           ;../servo.c: 233:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25293   00A110  519C               	movf	setupTimer3@io& (0+255),w,b
 25294   00A112  0D07               	mullw	7
 25295   00A114  50F3               	movf	243,w,c
 25296   00A116  0F11               	addlw	17
 25297   00A118  ECB0  F05F         	call	_getNV
 25298   00A11C  0100               	movlb	0	; () banked
 25299   00A11E  BB8D               	btfsc	?_getNV& (0+255),5,b
 25300   00A120  D002               	goto	u23280
 25301   00A122  0E01               	movlw	1
 25302   00A124  D001               	goto	u23290
 25303   00A126                     u23280:
 25304   00A126  0E00               	movlw	0
 25305   00A128                     u23290:
 25306   00A128  6F91               	movwf	setOutputPin@state& (0+255),b
 25307   00A12A  519C               	movf	setupTimer3@io& (0+255),w,b
 25308   00A12C  EC9A  F037         	call	_setOutputPin
 25309                           
 25310                           ;../servo.c: 234:     T3CONbits.TMR3ON = 1;
 25311   00A130  80B1               	bsf	177,0,c	;volatile
 25312   00A132  0012               	return		;funcret
 25313   00A134                     __end_of_setupTimer3:
 25314                           	callstack 0
 25315                           
 25316 ;; *************** function _setupTimer1 *****************
 25317 ;; Defined at:
 25318 ;;		line 212 in file "../servo.c"
 25319 ;; Parameters:    Size  Location     Type
 25320 ;;  io              1    wreg     unsigned char 
 25321 ;; Auto vars:     Size  Location     Type
 25322 ;;  io              1   60[BANK0 ] unsigned char 
 25323 ;;  ticks           2   58[BANK0 ] unsigned short 
 25324 ;; Return value:  Size  Location     Type
 25325 ;;                  1    wreg      void 
 25326 ;; Registers used:
 25327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25328 ;; Tracked objects:
 25329 ;;		On entry : 0/0
 25330 ;;		On exit  : 0/0
 25331 ;;		Unchanged: 0/0
 25332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25334 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25335 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25336 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25337 ;;Total ram usage:        8 bytes
 25338 ;; Hardware stack levels used: 1
 25339 ;; Hardware stack levels required when called: 13
 25340 ;; This function calls:
 25341 ;;		_getNV
 25342 ;;		_setOutputPin
 25343 ;; This function is called by:
 25344 ;;		_startServos
 25345 ;; This function uses a non-reentrant model
 25346 ;;
 25347                           
 25348                           	psect	text99
 25349   00A134                     __ptext99:
 25350                           	callstack 0
 25351   00A134                     _setupTimer1:
 25352                           	callstack 15
 25353                           
 25354                           ;incstack = 0
 25355                           ;setupTimer1@io stored from wreg
 25356   00A134  0100               	movlb	0	; () banked
 25357   00A136  6F9C               	movwf	setupTimer1@io& (0+255),b
 25358                           
 25359                           ;../servo.c: 213:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 25360   00A138  0100               	movlb	0	; () banked
 25361   00A13A  519C               	movf	setupTimer1@io& (0+255),w,b
 25362   00A13C  0D07               	mullw	7
 25363   00A13E  50F3               	movf	243,w,c
 25364   00A140  0F11               	addlw	17
 25365   00A142  ECB0  F05F         	call	_getNV
 25366   00A146  0100               	movlb	0	; () banked
 25367   00A148  BF8D               	btfsc	?_getNV& (0+255),7,b
 25368   00A14A  D013               	goto	l22277
 25369                           
 25370                           ; BSR set to: 0
 25371   00A14C  0E30               	movlw	low _currentPos
 25372   00A14E  259C               	addwf	setupTimer1@io& (0+255),w,b
 25373   00A150  6ED9               	movwf	fsr2l,c
 25374   00A152  6ADA               	clrf	fsr2h,c
 25375   00A154  0E01               	movlw	high _currentPos
 25376   00A156  22DA               	addwfc	fsr2h,f,c
 25377   00A158  50DF               	movf	indf2,w,c
 25378   00A15A  6F95               	movwf	??_setupTimer1& (0+255),b
 25379   00A15C  5195               	movf	??_setupTimer1& (0+255),w,b
 25380   00A15E  0D13               	mullw	19
 25381   00A160  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25382   00A164  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25383   00A168  0E10               	movlw	16
 25384   00A16A  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25385   00A16C  6F98               	movwf	_setupTimer1$1932& (0+255),b
 25386   00A16E  0E0E               	movlw	14
 25387   00A170  D012               	goto	L6
 25388   00A172                     l22277:
 25389                           
 25390                           ; BSR set to: 0
 25391   00A172  0E30               	movlw	low _currentPos
 25392   00A174  259C               	addwf	setupTimer1@io& (0+255),w,b
 25393   00A176  6ED9               	movwf	fsr2l,c
 25394   00A178  6ADA               	clrf	fsr2h,c
 25395   00A17A  0E01               	movlw	high _currentPos
 25396   00A17C  22DA               	addwfc	fsr2h,f,c
 25397   00A17E  50DF               	movf	indf2,w,c
 25398   00A180  6F95               	movwf	??_setupTimer1& (0+255),b
 25399   00A182  5195               	movf	??_setupTimer1& (0+255),w,b
 25400   00A184  0D24               	mullw	36
 25401   00A186  CFF3 F096          	movff	prodl,??_setupTimer1+1
 25402   00A18A  CFF4 F097          	movff	prodh,??_setupTimer1+2
 25403   00A18E  0E78               	movlw	120
 25404   00A190  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 25405   00A192  6F98               	movwf	_setupTimer1$1932& (0+255),b
 25406   00A194  0E05               	movlw	5
 25407   00A196                     L6:
 25408   00A196  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 25409   00A198  6F99               	movwf	(_setupTimer1$1932+1)& (0+255),b
 25410                           
 25411                           ; BSR set to: 0
 25412   00A19A  1D98               	comf	_setupTimer1$1932& (0+255),w,b
 25413   00A19C  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 25414   00A19E  1D99               	comf	(_setupTimer1$1932+1)& (0+255),w,b
 25415   00A1A0  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 25416                           
 25417                           ; BSR set to: 0
 25418                           ;../servo.c: 216:     TMR1H = ticks >> 8;
 25419   00A1A2  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 25420   00A1A4  6ECF               	movwf	207,c	;volatile
 25421                           
 25422                           ; BSR set to: 0
 25423                           ;../servo.c: 217:     TMR1L = ticks & 0xFF;
 25424   00A1A6  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 25425                           
 25426                           ; BSR set to: 0
 25427                           ;../servo.c: 220:     servoActive[0] = 1;
 25428   00A1AA  0E01               	movlw	1
 25429   00A1AC  6FB2               	movwf	_servoActive& (0+255),b
 25430                           
 25431                           ; BSR set to: 0
 25432                           ;../servo.c: 221:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 25433   00A1AE  519C               	movf	setupTimer1@io& (0+255),w,b
 25434   00A1B0  0D07               	mullw	7
 25435   00A1B2  50F3               	movf	243,w,c
 25436   00A1B4  0F11               	addlw	17
 25437   00A1B6  ECB0  F05F         	call	_getNV
 25438   00A1BA  0100               	movlb	0	; () banked
 25439   00A1BC  BB8D               	btfsc	?_getNV& (0+255),5,b
 25440   00A1BE  D002               	goto	u23250
 25441   00A1C0  0E01               	movlw	1
 25442   00A1C2  D001               	goto	u23260
 25443   00A1C4                     u23250:
 25444   00A1C4  0E00               	movlw	0
 25445   00A1C6                     u23260:
 25446   00A1C6  6F91               	movwf	setOutputPin@state& (0+255),b
 25447   00A1C8  519C               	movf	setupTimer1@io& (0+255),w,b
 25448   00A1CA  EC9A  F037         	call	_setOutputPin
 25449                           
 25450                           ;../servo.c: 222:     T1CONbits.TMR1ON = 1;
 25451   00A1CE  80CD               	bsf	205,0,c	;volatile
 25452   00A1D0  0012               	return		;funcret
 25453   00A1D2                     __end_of_setupTimer1:
 25454                           	callstack 0
 25455                           
 25456 ;; *************** function _pollServos *****************
 25457 ;; Defined at:
 25458 ;;		line 296 in file "../servo.c"
 25459 ;; Parameters:    Size  Location     Type
 25460 ;;		None
 25461 ;; Auto vars:     Size  Location     Type
 25462 ;;  io              1   29[BANK1 ] unsigned char 
 25463 ;;  midway          1   28[BANK1 ] unsigned char 
 25464 ;;  beforeMidway    1   27[BANK1 ] enum E12716
 25465 ;;  target          1   26[BANK1 ] unsigned char 
 25466 ;; Return value:  Size  Location     Type
 25467 ;;                  1    wreg      void 
 25468 ;; Registers used:
 25469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25470 ;; Tracked objects:
 25471 ;;		On entry : 0/0
 25472 ;;		On exit  : 0/0
 25473 ;;		Unchanged: 0/0
 25474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25476 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25477 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25478 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25479 ;;Total ram usage:       12 bytes
 25480 ;; Hardware stack levels used: 1
 25481 ;; Hardware stack levels required when called: 18
 25482 ;; This function calls:
 25483 ;;		___awdiv
 25484 ;;		_bounceDown
 25485 ;;		_bounceUp
 25486 ;;		_getNV
 25487 ;;		_initBounce
 25488 ;;		_sendProducedEvent
 25489 ;;		_setOutputPin
 25490 ;;		_tickGet
 25491 ;;		_writeNVM
 25492 ;; This function is called by:
 25493 ;;		_startServos
 25494 ;; This function uses a non-reentrant model
 25495 ;;
 25496                           
 25497                           	psect	text100
 25498   000850                     __ptext100:
 25499                           	callstack 0
 25500   000850                     _pollServos:
 25501                           	callstack 10
 25502                           
 25503                           ;../servo.c: 297:     uint8_t midway;;../servo.c: 298:     Boolean beforeMidway;;../serv
      +                          o.c: 299:     uint8_t io;;../servo.c: 300:     uint8_t target;;../servo.c: 302:     for 
      +                          (io=0; io<16; io++) {
 25504                           
 25505                           ;incstack = 0
 25506   000850  0E00               	movlw	0
 25507   000852  0101               	movlb	1	; () banked
 25508   000854  6FDB               	movwf	pollServos@io& (0+255),b
 25509   000856  EF29  F00B         	goto	l22215
 25510   00085A                     l21983:
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;../servo.c: 305:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 25514   00085A  0101               	movlb	1	; () banked
 25515   00085C  51DB               	movf	pollServos@io& (0+255),w,b
 25516   00085E  0D07               	mullw	7
 25517   000860  50F3               	movf	243,w,c
 25518   000862  0F12               	addlw	18
 25519   000864  ECB0  F05F         	call	_getNV
 25520   000868  0100               	movlb	0	; () banked
 25521   00086A  518D               	movf	?_getNV& (0+255),w,b
 25522   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 25523   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25524   000870  0E00               	movlw	0
 25525   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25526   000874  0E02               	movlw	2
 25527   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 25528   000878  EC59  F054         	call	___awdiv	;wreg free
 25529   00087C  C097  F1D0         	movff	?___awdiv,??_pollServos
 25530   000880  C098  F1D1         	movff	?___awdiv+1,??_pollServos+1
 25531   000884  0101               	movlb	1	; () banked
 25532   000886  51DB               	movf	pollServos@io& (0+255),w,b
 25533   000888  0D07               	mullw	7
 25534   00088A  50F3               	movf	243,w,c
 25535   00088C  0F13               	addlw	19
 25536   00088E  ECB0  F05F         	call	_getNV
 25537   000892  0100               	movlb	0	; () banked
 25538   000894  518D               	movf	?_getNV& (0+255),w,b
 25539   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 25540   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 25541   00089A  0E00               	movlw	0
 25542   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 25543   00089E  0E02               	movlw	2
 25544   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 25545   0008A2  EC59  F054         	call	___awdiv	;wreg free
 25546   0008A6  0100               	movlb	0	; () banked
 25547   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 25548   0008AA  0101               	movlb	1	; () banked
 25549   0008AC  25D0               	addwf	??_pollServos& (0+255),w,b
 25550   0008AE  6FDA               	movwf	pollServos@midway& (0+255),b
 25551                           
 25552                           ; BSR set to: 1
 25553                           ;../servo.c: 307:                 beforeMidway=FALSE;
 25554   0008B0  0E00               	movlw	0
 25555   0008B2  6FD9               	movwf	pollServos@beforeMidway& (0+255),b
 25556                           
 25557                           ;../servo.c: 308:                 switch (servoState[io]) {
 25558   0008B4  D248               	goto	l22075
 25559   0008B6                     l21987:
 25560                           
 25561                           ; BSR set to: 1
 25562                           ;../servo.c: 310:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 25563   0008B6  51DB               	movf	pollServos@io& (0+255),w,b
 25564   0008B8  0D07               	mullw	7
 25565   0008BA  50F3               	movf	243,w,c
 25566   0008BC  0F12               	addlw	18
 25567   0008BE  ECB0  F05F         	call	_getNV
 25568   0008C2  0E30               	movlw	low _currentPos
 25569   0008C4  0101               	movlb	1	; () banked
 25570   0008C6  25DB               	addwf	pollServos@io& (0+255),w,b
 25571   0008C8  6ED9               	movwf	fsr2l,c
 25572   0008CA  6ADA               	clrf	fsr2h,c
 25573   0008CC  0E01               	movlw	high _currentPos
 25574   0008CE  22DA               	addwfc	fsr2h,f,c
 25575   0008D0  50DF               	movf	indf2,w,c
 25576   0008D2  6FD0               	movwf	??_pollServos& (0+255),b
 25577   0008D4  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 25578   0008D6  0100               	movlb	0	; () banked
 25579   0008D8  518D               	movf	?_getNV& (0+255),w,b
 25580   0008DA  0101               	movlb	1	; () banked
 25581   0008DC  19D0               	xorwf	??_pollServos& (0+255),w,b
 25582   0008DE  E118               	bnz	l21991
 25583   0008E0  0100               	movlb	0	; () banked
 25584   0008E2  518E               	movf	(?_getNV+1)& (0+255),w,b
 25585   0008E4  0101               	movlb	1	; () banked
 25586   0008E6  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 25587   0008E8  A4D8               	btfss	status,2,c
 25588   0008EA  D012               	goto	l21991
 25589                           
 25590                           ; BSR set to: 1
 25591                           ;../servo.c: 311:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25592   0008EC  51DB               	movf	pollServos@io& (0+255),w,b
 25593   0008EE  0D07               	mullw	7
 25594   0008F0  50F3               	movf	243,w,c
 25595   0008F2  0F11               	addlw	17
 25596   0008F4  ECB0  F05F         	call	_getNV
 25597   0008F8  0100               	movlb	0	; () banked
 25598   0008FA  518D               	movf	?_getNV& (0+255),w,b
 25599   0008FC  0B40               	andlw	64
 25600   0008FE  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 25601   000900  0101               	movlb	1	; () banked
 25602   000902  51DB               	movf	pollServos@io& (0+255),w,b
 25603   000904  0D04               	mullw	4
 25604   000906  50F3               	movf	243,w,c
 25605   000908  0F08               	addlw	8
 25606   00090A  EC42  F04C         	call	_sendProducedEvent
 25607                           
 25608                           ;../servo.c: 312:                         } else {
 25609   00090E  D011               	goto	l21993
 25610   000910                     l21991:
 25611                           
 25612                           ; BSR set to: 1
 25613                           ;../servo.c: 313:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25614   000910  51DB               	movf	pollServos@io& (0+255),w,b
 25615   000912  0D07               	mullw	7
 25616   000914  50F3               	movf	243,w,c
 25617   000916  0F11               	addlw	17
 25618   000918  ECB0  F05F         	call	_getNV
 25619   00091C  0100               	movlb	0	; () banked
 25620   00091E  518D               	movf	?_getNV& (0+255),w,b
 25621   000920  0B40               	andlw	64
 25622   000922  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 25623   000924  0101               	movlb	1	; () banked
 25624   000926  51DB               	movf	pollServos@io& (0+255),w,b
 25625   000928  0D04               	mullw	4
 25626   00092A  50F3               	movf	243,w,c
 25627   00092C  0F0A               	addlw	10
 25628   00092E  EC42  F04C         	call	_sendProducedEvent
 25629   000932                     l21993:
 25630                           
 25631                           ;../servo.c: 315:                         servoState[io] = SS_MOVING;
 25632   000932  0E10               	movlw	low _servoState
 25633   000934  0101               	movlb	1	; () banked
 25634   000936  25DB               	addwf	pollServos@io& (0+255),w,b
 25635   000938  6ED9               	movwf	fsr2l,c
 25636   00093A  6ADA               	clrf	fsr2h,c
 25637   00093C  0E01               	movlw	high _servoState
 25638   00093E  22DA               	addwfc	fsr2h,f,c
 25639   000940  0E02               	movlw	2
 25640   000942  6EDF               	movwf	indf2,c
 25641   000944                     l21995:
 25642                           
 25643                           ; BSR set to: 1
 25644                           ;../servo.c: 318:                         if (targetPos[io] > currentPos[io]) {
 25645   000944  51DB               	movf	pollServos@io& (0+255),w,b
 25646   000946  0F01               	addlw	low _targetPos
 25647   000948  6ED9               	movwf	fsr2l,c
 25648   00094A  6ADA               	clrf	fsr2h,c
 25649   00094C  0E30               	movlw	low _currentPos
 25650   00094E  25DB               	addwf	pollServos@io& (0+255),w,b
 25651   000950  6EE1               	movwf	fsr1l,c
 25652   000952  6AE2               	clrf	fsr1h,c
 25653   000954  0E01               	movlw	high _currentPos
 25654   000956  22E2               	addwfc	fsr1h,f,c
 25655   000958  50DE               	movf	postinc2,w,c
 25656   00095A  5CE6               	subwf	postinc1,w,c
 25657   00095C  B0D8               	btfsc	status,0,c
 25658   00095E  D0B4               	goto	l22027
 25659                           
 25660                           ; BSR set to: 1
 25661                           ;../servo.c: 319:                             if (currentPos[io] < midway) {
 25662   000960  0E30               	movlw	low _currentPos
 25663   000962  25DB               	addwf	pollServos@io& (0+255),w,b
 25664   000964  6ED9               	movwf	fsr2l,c
 25665   000966  6ADA               	clrf	fsr2h,c
 25666   000968  0E01               	movlw	high _currentPos
 25667   00096A  22DA               	addwfc	fsr2h,f,c
 25668   00096C  51DA               	movf	pollServos@midway& (0+255),w,b
 25669   00096E  5CDE               	subwf	postinc2,w,c
 25670   000970  B0D8               	btfsc	status,0,c
 25671   000972  D002               	goto	l22001
 25672                           
 25673                           ; BSR set to: 1
 25674                           ;../servo.c: 320:                                 beforeMidway = TRUE;
 25675   000974  0E01               	movlw	1
 25676   000976  6FD9               	movwf	pollServos@beforeMidway& (0+255),b
 25677   000978                     l22001:
 25678                           
 25679                           ; BSR set to: 1
 25680                           ;../servo.c: 323:                             if (stepsPerPollSpeed[io]) {
 25681   000978  0E00               	movlw	low _stepsPerPollSpeed
 25682   00097A  25DB               	addwf	pollServos@io& (0+255),w,b
 25683   00097C  6ED9               	movwf	fsr2l,c
 25684   00097E  6ADA               	clrf	fsr2h,c
 25685   000980  0E01               	movlw	high _stepsPerPollSpeed
 25686   000982  22DA               	addwfc	fsr2h,f,c
 25687   000984  50DF               	movf	indf2,w,c
 25688   000986  B4D8               	btfsc	status,2,c
 25689   000988  D035               	goto	l22009
 25690                           
 25691                           ; BSR set to: 1
 25692                           ;../servo.c: 324:                                 if ((uint8_t)(currentPos[io] + stepsPe
      +                          rPollSpeed[io]) < currentPos[io]) {
 25693   00098A  0E30               	movlw	low _currentPos
 25694   00098C  25DB               	addwf	pollServos@io& (0+255),w,b
 25695   00098E  6ED9               	movwf	fsr2l,c
 25696   000990  6ADA               	clrf	fsr2h,c
 25697   000992  0E01               	movlw	high _currentPos
 25698   000994  22DA               	addwfc	fsr2h,f,c
 25699   000996  0E00               	movlw	low _stepsPerPollSpeed
 25700   000998  25DB               	addwf	pollServos@io& (0+255),w,b
 25701   00099A  6EE1               	movwf	fsr1l,c
 25702   00099C  6AE2               	clrf	fsr1h,c
 25703   00099E  0E01               	movlw	high _stepsPerPollSpeed
 25704   0009A0  22E2               	addwfc	fsr1h,f,c
 25705   0009A2  50E7               	movf	indf1,w,c
 25706   0009A4  6FD1               	movwf	(??_pollServos+1)& (0+255),b
 25707   0009A6  0E30               	movlw	low _currentPos
 25708   0009A8  25DB               	addwf	pollServos@io& (0+255),w,b
 25709   0009AA  6EE1               	movwf	fsr1l,c
 25710   0009AC  6AE2               	clrf	fsr1h,c
 25711   0009AE  0E01               	movlw	high _currentPos
 25712   0009B0  22E2               	addwfc	fsr1h,f,c
 25713   0009B2  50E7               	movf	indf1,w,c
 25714   0009B4  25D1               	addwf	(??_pollServos+1)& (0+255),w,b
 25715   0009B6  6FD2               	movwf	(??_pollServos+2)& (0+255),b
 25716   0009B8  50DE               	movf	postinc2,w,c
 25717   0009BA  5DD2               	subwf	(??_pollServos+2)& (0+255),w,b
 25718   0009BC  B0D8               	btfsc	status,0,c
 25719   0009BE  D009               	goto	l22007
 25720                           
 25721                           ; BSR set to: 1
 25722                           ;../servo.c: 326:                                     currentPos[io] =255;
 25723   0009C0  0E30               	movlw	low _currentPos
 25724   0009C2  25DB               	addwf	pollServos@io& (0+255),w,b
 25725   0009C4  6ED9               	movwf	fsr2l,c
 25726   0009C6  6ADA               	clrf	fsr2h,c
 25727   0009C8  0E01               	movlw	high _currentPos
 25728   0009CA  22DA               	addwfc	fsr2h,f,c
 25729   0009CC  0EFF               	movlw	255
 25730   0009CE  6EDF               	movwf	indf2,c
 25731                           
 25732                           ;../servo.c: 327:                                 } else {
 25733   0009D0  D03F               	goto	l22017
 25734   0009D2                     l22007:
 25735                           
 25736                           ; BSR set to: 1
 25737                           ;../servo.c: 328:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25738   0009D2  0E00               	movlw	low _stepsPerPollSpeed
 25739   0009D4  25DB               	addwf	pollServos@io& (0+255),w,b
 25740   0009D6  6ED9               	movwf	fsr2l,c
 25741   0009D8  6ADA               	clrf	fsr2h,c
 25742   0009DA  0E01               	movlw	high _stepsPerPollSpeed
 25743   0009DC  22DA               	addwfc	fsr2h,f,c
 25744   0009DE  50DF               	movf	indf2,w,c
 25745   0009E0  6FD0               	movwf	??_pollServos& (0+255),b
 25746   0009E2  0E30               	movlw	low _currentPos
 25747   0009E4  25DB               	addwf	pollServos@io& (0+255),w,b
 25748   0009E6  6ED9               	movwf	fsr2l,c
 25749   0009E8  6ADA               	clrf	fsr2h,c
 25750   0009EA  0E01               	movlw	high _currentPos
 25751   0009EC  22DA               	addwfc	fsr2h,f,c
 25752   0009EE  51D0               	movf	??_pollServos& (0+255),w,b
 25753   0009F0  26DF               	addwf	indf2,f,c
 25754   0009F2  D02E               	goto	l22017
 25755   0009F4                     l22009:
 25756                           
 25757                           ; BSR set to: 1
 25758                           ;../servo.c: 331:                                 pollCount[io]--;
 25759   0009F4  0E64               	movlw	low _pollCount
 25760   0009F6  25DB               	addwf	pollServos@io& (0+255),w,b
 25761   0009F8  6ED9               	movwf	fsr2l,c
 25762   0009FA  6ADA               	clrf	fsr2h,c
 25763   0009FC  0E02               	movlw	high _pollCount
 25764   0009FE  22DA               	addwfc	fsr2h,f,c
 25765   000A00  06DF               	decf	indf2,f,c
 25766                           
 25767                           ;../servo.c: 332:                                 if (pollCount[io] == 0) {
 25768   000A02  0E64               	movlw	low _pollCount
 25769   000A04  25DB               	addwf	pollServos@io& (0+255),w,b
 25770   000A06  6ED9               	movwf	fsr2l,c
 25771   000A08  6ADA               	clrf	fsr2h,c
 25772   000A0A  0E02               	movlw	high _pollCount
 25773   000A0C  22DA               	addwfc	fsr2h,f,c
 25774   000A0E  50DF               	movf	indf2,w,c
 25775   000A10  A4D8               	btfss	status,2,c
 25776   000A12  D01E               	goto	l22017
 25777                           
 25778                           ; BSR set to: 1
 25779                           ;../servo.c: 333:                                     if (currentPos[io] < 255) currentP
      +                          os[io]++;
 25780   000A14  0E30               	movlw	low _currentPos
 25781   000A16  25DB               	addwf	pollServos@io& (0+255),w,b
 25782   000A18  6ED9               	movwf	fsr2l,c
 25783   000A1A  6ADA               	clrf	fsr2h,c
 25784   000A1C  0E01               	movlw	high _currentPos
 25785   000A1E  22DA               	addwfc	fsr2h,f,c
 25786   000A20  28DE               	incf	postinc2,w,c
 25787   000A22  B4D8               	btfsc	status,2,c
 25788   000A24  D007               	goto	l22015
 25789                           
 25790                           ; BSR set to: 1
 25791   000A26  0E30               	movlw	low _currentPos
 25792   000A28  25DB               	addwf	pollServos@io& (0+255),w,b
 25793   000A2A  6ED9               	movwf	fsr2l,c
 25794   000A2C  6ADA               	clrf	fsr2h,c
 25795   000A2E  0E01               	movlw	high _currentPos
 25796   000A30  22DA               	addwfc	fsr2h,f,c
 25797   000A32  2ADF               	incf	indf2,f,c
 25798   000A34                     l22015:
 25799                           
 25800                           ; BSR set to: 1
 25801                           ;../servo.c: 334:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25802   000A34  0E74               	movlw	low _pollsPerStepSpeed
 25803   000A36  25DB               	addwf	pollServos@io& (0+255),w,b
 25804   000A38  6ED9               	movwf	fsr2l,c
 25805   000A3A  6ADA               	clrf	fsr2h,c
 25806   000A3C  0E02               	movlw	high _pollsPerStepSpeed
 25807   000A3E  22DA               	addwfc	fsr2h,f,c
 25808   000A40  0E64               	movlw	low _pollCount
 25809   000A42  25DB               	addwf	pollServos@io& (0+255),w,b
 25810   000A44  6EE1               	movwf	fsr1l,c
 25811   000A46  6AE2               	clrf	fsr1h,c
 25812   000A48  0E02               	movlw	high _pollCount
 25813   000A4A  22E2               	addwfc	fsr1h,f,c
 25814   000A4C  CFDF FFE7          	movff	indf2,indf1
 25815   000A50                     l22017:
 25816                           
 25817                           ; BSR set to: 1
 25818                           ;../servo.c: 338:                             if (currentPos[io] > targetPos[io]) {
 25819   000A50  0E30               	movlw	low _currentPos
 25820   000A52  25DB               	addwf	pollServos@io& (0+255),w,b
 25821   000A54  6ED9               	movwf	fsr2l,c
 25822   000A56  6ADA               	clrf	fsr2h,c
 25823   000A58  0E01               	movlw	high _currentPos
 25824   000A5A  22DA               	addwfc	fsr2h,f,c
 25825   000A5C  51DB               	movf	pollServos@io& (0+255),w,b
 25826   000A5E  0F01               	addlw	low _targetPos
 25827   000A60  6EE1               	movwf	fsr1l,c
 25828   000A62  6AE2               	clrf	fsr1h,c
 25829   000A64  50DE               	movf	postinc2,w,c
 25830   000A66  5CE6               	subwf	postinc1,w,c
 25831   000A68  B0D8               	btfsc	status,0,c
 25832   000A6A  D00C               	goto	l22021
 25833                           
 25834                           ; BSR set to: 1
 25835                           ;../servo.c: 339:                                 currentPos[io] = targetPos[io];
 25836   000A6C  51DB               	movf	pollServos@io& (0+255),w,b
 25837   000A6E  0F01               	addlw	low _targetPos
 25838   000A70  6ED9               	movwf	fsr2l,c
 25839   000A72  6ADA               	clrf	fsr2h,c
 25840   000A74  0E30               	movlw	low _currentPos
 25841   000A76  25DB               	addwf	pollServos@io& (0+255),w,b
 25842   000A78  6EE1               	movwf	fsr1l,c
 25843   000A7A  6AE2               	clrf	fsr1h,c
 25844   000A7C  0E01               	movlw	high _currentPos
 25845   000A7E  22E2               	addwfc	fsr1h,f,c
 25846   000A80  CFDF FFE7          	movff	indf2,indf1
 25847   000A84                     l22021:
 25848                           
 25849                           ; BSR set to: 1
 25850                           ;../servo.c: 341:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 25851   000A84  0E30               	movlw	low _currentPos
 25852   000A86  25DB               	addwf	pollServos@io& (0+255),w,b
 25853   000A88  6ED9               	movwf	fsr2l,c
 25854   000A8A  6ADA               	clrf	fsr2h,c
 25855   000A8C  0E01               	movlw	high _currentPos
 25856   000A8E  22DA               	addwfc	fsr2h,f,c
 25857   000A90  51DA               	movf	pollServos@midway& (0+255),w,b
 25858   000A92  5CDE               	subwf	postinc2,w,c
 25859   000A94  A0D8               	btfss	status,0,c
 25860   000A96  D0CA               	goto	l22059
 25861                           
 25862                           ; BSR set to: 1
 25863   000A98  51D9               	movf	pollServos@beforeMidway& (0+255),w,b
 25864   000A9A  B4D8               	btfsc	status,2,c
 25865   000A9C  D0C7               	goto	l22059
 25866                           
 25867                           ; BSR set to: 1
 25868                           ;../servo.c: 345:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25869   000A9E  51DB               	movf	pollServos@io& (0+255),w,b
 25870   000AA0  0D07               	mullw	7
 25871   000AA2  50F3               	movf	243,w,c
 25872   000AA4  0F11               	addlw	17
 25873   000AA6  ECB0  F05F         	call	_getNV
 25874   000AAA  0100               	movlb	0	; () banked
 25875   000AAC  BD8D               	btfsc	?_getNV& (0+255),6,b
 25876   000AAE  D002               	goto	u22670
 25877   000AB0  0E01               	movlw	1
 25878   000AB2  D001               	goto	u22680
 25879   000AB4                     u22670:
 25880   000AB4  0E00               	movlw	0
 25881   000AB6                     u22680:
 25882   000AB6  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 25883   000AB8  0101               	movlb	1	; () banked
 25884   000ABA  51DB               	movf	pollServos@io& (0+255),w,b
 25885   000ABC  0D04               	mullw	4
 25886   000ABE  50F3               	movf	243,w,c
 25887   000AC0  0F09               	addlw	9
 25888   000AC2  EC42  F04C         	call	_sendProducedEvent
 25889   000AC6  D0B2               	goto	l22059
 25890   000AC8                     l22027:
 25891                           
 25892                           ; BSR set to: 1
 25893   000AC8  0E30               	movlw	low _currentPos
 25894   000ACA  25DB               	addwf	pollServos@io& (0+255),w,b
 25895   000ACC  6ED9               	movwf	fsr2l,c
 25896   000ACE  6ADA               	clrf	fsr2h,c
 25897   000AD0  0E01               	movlw	high _currentPos
 25898   000AD2  22DA               	addwfc	fsr2h,f,c
 25899   000AD4  51DB               	movf	pollServos@io& (0+255),w,b
 25900   000AD6  0F01               	addlw	low _targetPos
 25901   000AD8  6EE1               	movwf	fsr1l,c
 25902   000ADA  6AE2               	clrf	fsr1h,c
 25903   000ADC  50DE               	movf	postinc2,w,c
 25904   000ADE  5CE6               	subwf	postinc1,w,c
 25905   000AE0  B0D8               	btfsc	status,0,c
 25906   000AE2  D0A4               	goto	l22059
 25907                           
 25908                           ; BSR set to: 1
 25909                           ;../servo.c: 348:                             if (currentPos[io] > midway) {
 25910   000AE4  0E30               	movlw	low _currentPos
 25911   000AE6  25DB               	addwf	pollServos@io& (0+255),w,b
 25912   000AE8  6ED9               	movwf	fsr2l,c
 25913   000AEA  6ADA               	clrf	fsr2h,c
 25914   000AEC  0E01               	movlw	high _currentPos
 25915   000AEE  22DA               	addwfc	fsr2h,f,c
 25916   000AF0  50DE               	movf	postinc2,w,c
 25917   000AF2  5DDA               	subwf	pollServos@midway& (0+255),w,b
 25918   000AF4  B0D8               	btfsc	status,0,c
 25919   000AF6  D002               	goto	l22033
 25920                           
 25921                           ; BSR set to: 1
 25922                           ;../servo.c: 349:                                 beforeMidway = TRUE;
 25923   000AF8  0E01               	movlw	1
 25924   000AFA  6FD9               	movwf	pollServos@beforeMidway& (0+255),b
 25925   000AFC                     l22033:
 25926                           
 25927                           ; BSR set to: 1
 25928                           ;../servo.c: 352:                             if (stepsPerPollSpeed[io]) {
 25929   000AFC  0E00               	movlw	low _stepsPerPollSpeed
 25930   000AFE  25DB               	addwf	pollServos@io& (0+255),w,b
 25931   000B00  6ED9               	movwf	fsr2l,c
 25932   000B02  6ADA               	clrf	fsr2h,c
 25933   000B04  0E01               	movlw	high _stepsPerPollSpeed
 25934   000B06  22DA               	addwfc	fsr2h,f,c
 25935   000B08  50DF               	movf	indf2,w,c
 25936   000B0A  B4D8               	btfsc	status,2,c
 25937   000B0C  D029               	goto	l22041
 25938                           
 25939                           ; BSR set to: 1
 25940                           ;../servo.c: 353:                                 if (stepsPerPollSpeed[io] >= currentPo
      +                          s[io]) {
 25941   000B0E  0E30               	movlw	low _currentPos
 25942   000B10  25DB               	addwf	pollServos@io& (0+255),w,b
 25943   000B12  6ED9               	movwf	fsr2l,c
 25944   000B14  6ADA               	clrf	fsr2h,c
 25945   000B16  0E01               	movlw	high _currentPos
 25946   000B18  22DA               	addwfc	fsr2h,f,c
 25947   000B1A  0E00               	movlw	low _stepsPerPollSpeed
 25948   000B1C  25DB               	addwf	pollServos@io& (0+255),w,b
 25949   000B1E  6EE1               	movwf	fsr1l,c
 25950   000B20  6AE2               	clrf	fsr1h,c
 25951   000B22  0E01               	movlw	high _stepsPerPollSpeed
 25952   000B24  22E2               	addwfc	fsr1h,f,c
 25953   000B26  50DE               	movf	postinc2,w,c
 25954   000B28  5CE6               	subwf	postinc1,w,c
 25955   000B2A  A0D8               	btfss	status,0,c
 25956   000B2C  D008               	goto	l22039
 25957                           
 25958                           ; BSR set to: 1
 25959                           ;../servo.c: 355:                                     currentPos[io] = 0;
 25960   000B2E  0E30               	movlw	low _currentPos
 25961   000B30  25DB               	addwf	pollServos@io& (0+255),w,b
 25962   000B32  6ED9               	movwf	fsr2l,c
 25963   000B34  6ADA               	clrf	fsr2h,c
 25964   000B36  0E01               	movlw	high _currentPos
 25965   000B38  22DA               	addwfc	fsr2h,f,c
 25966   000B3A  6ADF               	clrf	indf2,c
 25967                           
 25968                           ;../servo.c: 356:                                 } else {
 25969   000B3C  D03F               	goto	l22049
 25970   000B3E                     l22039:
 25971                           
 25972                           ; BSR set to: 1
 25973                           ;../servo.c: 357:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25974   000B3E  0E00               	movlw	low _stepsPerPollSpeed
 25975   000B40  25DB               	addwf	pollServos@io& (0+255),w,b
 25976   000B42  6ED9               	movwf	fsr2l,c
 25977   000B44  6ADA               	clrf	fsr2h,c
 25978   000B46  0E01               	movlw	high _stepsPerPollSpeed
 25979   000B48  22DA               	addwfc	fsr2h,f,c
 25980   000B4A  50DF               	movf	indf2,w,c
 25981   000B4C  6FD0               	movwf	??_pollServos& (0+255),b
 25982   000B4E  0E30               	movlw	low _currentPos
 25983   000B50  25DB               	addwf	pollServos@io& (0+255),w,b
 25984   000B52  6ED9               	movwf	fsr2l,c
 25985   000B54  6ADA               	clrf	fsr2h,c
 25986   000B56  0E01               	movlw	high _currentPos
 25987   000B58  22DA               	addwfc	fsr2h,f,c
 25988   000B5A  51D0               	movf	??_pollServos& (0+255),w,b
 25989   000B5C  5EDF               	subwf	indf2,f,c
 25990   000B5E  D02E               	goto	l22049
 25991   000B60                     l22041:
 25992                           
 25993                           ; BSR set to: 1
 25994                           ;../servo.c: 360:                                 pollCount[io]--;
 25995   000B60  0E64               	movlw	low _pollCount
 25996   000B62  25DB               	addwf	pollServos@io& (0+255),w,b
 25997   000B64  6ED9               	movwf	fsr2l,c
 25998   000B66  6ADA               	clrf	fsr2h,c
 25999   000B68  0E02               	movlw	high _pollCount
 26000   000B6A  22DA               	addwfc	fsr2h,f,c
 26001   000B6C  06DF               	decf	indf2,f,c
 26002                           
 26003                           ;../servo.c: 361:                                 if (pollCount[io] == 0) {
 26004   000B6E  0E64               	movlw	low _pollCount
 26005   000B70  25DB               	addwf	pollServos@io& (0+255),w,b
 26006   000B72  6ED9               	movwf	fsr2l,c
 26007   000B74  6ADA               	clrf	fsr2h,c
 26008   000B76  0E02               	movlw	high _pollCount
 26009   000B78  22DA               	addwfc	fsr2h,f,c
 26010   000B7A  50DF               	movf	indf2,w,c
 26011   000B7C  A4D8               	btfss	status,2,c
 26012   000B7E  D01E               	goto	l22049
 26013                           
 26014                           ; BSR set to: 1
 26015                           ;../servo.c: 362:                                     if (currentPos[io] > 0) currentPos
      +                          [io]--;
 26016   000B80  0E30               	movlw	low _currentPos
 26017   000B82  25DB               	addwf	pollServos@io& (0+255),w,b
 26018   000B84  6ED9               	movwf	fsr2l,c
 26019   000B86  6ADA               	clrf	fsr2h,c
 26020   000B88  0E01               	movlw	high _currentPos
 26021   000B8A  22DA               	addwfc	fsr2h,f,c
 26022   000B8C  50DF               	movf	indf2,w,c
 26023   000B8E  B4D8               	btfsc	status,2,c
 26024   000B90  D007               	goto	l22047
 26025                           
 26026                           ; BSR set to: 1
 26027   000B92  0E30               	movlw	low _currentPos
 26028   000B94  25DB               	addwf	pollServos@io& (0+255),w,b
 26029   000B96  6ED9               	movwf	fsr2l,c
 26030   000B98  6ADA               	clrf	fsr2h,c
 26031   000B9A  0E01               	movlw	high _currentPos
 26032   000B9C  22DA               	addwfc	fsr2h,f,c
 26033   000B9E  06DF               	decf	indf2,f,c
 26034   000BA0                     l22047:
 26035                           
 26036                           ; BSR set to: 1
 26037                           ;../servo.c: 363:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26038   000BA0  0E74               	movlw	low _pollsPerStepSpeed
 26039   000BA2  25DB               	addwf	pollServos@io& (0+255),w,b
 26040   000BA4  6ED9               	movwf	fsr2l,c
 26041   000BA6  6ADA               	clrf	fsr2h,c
 26042   000BA8  0E02               	movlw	high _pollsPerStepSpeed
 26043   000BAA  22DA               	addwfc	fsr2h,f,c
 26044   000BAC  0E64               	movlw	low _pollCount
 26045   000BAE  25DB               	addwf	pollServos@io& (0+255),w,b
 26046   000BB0  6EE1               	movwf	fsr1l,c
 26047   000BB2  6AE2               	clrf	fsr1h,c
 26048   000BB4  0E02               	movlw	high _pollCount
 26049   000BB6  22E2               	addwfc	fsr1h,f,c
 26050   000BB8  CFDF FFE7          	movff	indf2,indf1
 26051   000BBC                     l22049:
 26052                           
 26053                           ; BSR set to: 1
 26054                           ;../servo.c: 367:                             if (currentPos[io] < targetPos[io]) {
 26055   000BBC  51DB               	movf	pollServos@io& (0+255),w,b
 26056   000BBE  0F01               	addlw	low _targetPos
 26057   000BC0  6ED9               	movwf	fsr2l,c
 26058   000BC2  6ADA               	clrf	fsr2h,c
 26059   000BC4  0E30               	movlw	low _currentPos
 26060   000BC6  25DB               	addwf	pollServos@io& (0+255),w,b
 26061   000BC8  6EE1               	movwf	fsr1l,c
 26062   000BCA  6AE2               	clrf	fsr1h,c
 26063   000BCC  0E01               	movlw	high _currentPos
 26064   000BCE  22E2               	addwfc	fsr1h,f,c
 26065   000BD0  50DE               	movf	postinc2,w,c
 26066   000BD2  5CE6               	subwf	postinc1,w,c
 26067   000BD4  B0D8               	btfsc	status,0,c
 26068   000BD6  D00C               	goto	l22053
 26069                           
 26070                           ; BSR set to: 1
 26071                           ;../servo.c: 368:                                 currentPos[io] = targetPos[io];
 26072   000BD8  51DB               	movf	pollServos@io& (0+255),w,b
 26073   000BDA  0F01               	addlw	low _targetPos
 26074   000BDC  6ED9               	movwf	fsr2l,c
 26075   000BDE  6ADA               	clrf	fsr2h,c
 26076   000BE0  0E30               	movlw	low _currentPos
 26077   000BE2  25DB               	addwf	pollServos@io& (0+255),w,b
 26078   000BE4  6EE1               	movwf	fsr1l,c
 26079   000BE6  6AE2               	clrf	fsr1h,c
 26080   000BE8  0E01               	movlw	high _currentPos
 26081   000BEA  22E2               	addwfc	fsr1h,f,c
 26082   000BEC  CFDF FFE7          	movff	indf2,indf1
 26083   000BF0                     l22053:
 26084                           
 26085                           ; BSR set to: 1
 26086                           ;../servo.c: 370:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 26087   000BF0  0E30               	movlw	low _currentPos
 26088   000BF2  25DB               	addwf	pollServos@io& (0+255),w,b
 26089   000BF4  6ED9               	movwf	fsr2l,c
 26090   000BF6  6ADA               	clrf	fsr2h,c
 26091   000BF8  0E01               	movlw	high _currentPos
 26092   000BFA  22DA               	addwfc	fsr2h,f,c
 26093   000BFC  50DE               	movf	postinc2,w,c
 26094   000BFE  5DDA               	subwf	pollServos@midway& (0+255),w,b
 26095   000C00  A0D8               	btfss	status,0,c
 26096   000C02  D014               	goto	l22059
 26097                           
 26098                           ; BSR set to: 1
 26099   000C04  51D9               	movf	pollServos@beforeMidway& (0+255),w,b
 26100   000C06  B4D8               	btfsc	status,2,c
 26101   000C08  D011               	goto	l22059
 26102                           
 26103                           ; BSR set to: 1
 26104                           ;../servo.c: 372:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 26105   000C0A  51DB               	movf	pollServos@io& (0+255),w,b
 26106   000C0C  0D07               	mullw	7
 26107   000C0E  50F3               	movf	243,w,c
 26108   000C10  0F11               	addlw	17
 26109   000C12  ECB0  F05F         	call	_getNV
 26110   000C16  0100               	movlb	0	; () banked
 26111   000C18  518D               	movf	?_getNV& (0+255),w,b
 26112   000C1A  0B40               	andlw	64
 26113   000C1C  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26114   000C1E  0101               	movlb	1	; () banked
 26115   000C20  51DB               	movf	pollServos@io& (0+255),w,b
 26116   000C22  0D04               	mullw	4
 26117   000C24  50F3               	movf	243,w,c
 26118   000C26  0F09               	addlw	9
 26119   000C28  EC42  F04C         	call	_sendProducedEvent
 26120   000C2C                     l22059:
 26121                           
 26122                           ;../servo.c: 375:                         if (targetPos[io] == currentPos[io]) {
 26123   000C2C  0E30               	movlw	low _currentPos
 26124   000C2E  0101               	movlb	1	; () banked
 26125   000C30  25DB               	addwf	pollServos@io& (0+255),w,b
 26126   000C32  6ED9               	movwf	fsr2l,c
 26127   000C34  6ADA               	clrf	fsr2h,c
 26128   000C36  0E01               	movlw	high _currentPos
 26129   000C38  22DA               	addwfc	fsr2h,f,c
 26130   000C3A  51DB               	movf	pollServos@io& (0+255),w,b
 26131   000C3C  0F01               	addlw	low _targetPos
 26132   000C3E  6EE1               	movwf	fsr1l,c
 26133   000C40  6AE2               	clrf	fsr1h,c
 26134   000C42  50DE               	movf	postinc2,w,c
 26135   000C44  18E6               	xorwf	postinc1,w,c
 26136   000C46  A4D8               	btfss	status,2,c
 26137   000C48  EFAE  F00B         	goto	l22231
 26138                           
 26139                           ; BSR set to: 1
 26140                           ;../servo.c: 376:                             servoState[io] = SS_STOPPED;
 26141   000C4C  0E10               	movlw	low _servoState
 26142   000C4E  25DB               	addwf	pollServos@io& (0+255),w,b
 26143   000C50  6ED9               	movwf	fsr2l,c
 26144   000C52  6ADA               	clrf	fsr2h,c
 26145   000C54  0E01               	movlw	high _servoState
 26146   000C56  22DA               	addwfc	fsr2h,f,c
 26147   000C58  0E01               	movlw	1
 26148   000C5A  6EDF               	movwf	indf2,c
 26149                           
 26150                           ; BSR set to: 1
 26151                           ;../servo.c: 377:                             ticksWhenStopped[io].val = tickGet();
 26152   000C5C  EC23  F05C         	call	_tickGet	;wreg free
 26153   000C60  0101               	movlb	1	; () banked
 26154   000C62  51DB               	movf	pollServos@io& (0+255),w,b
 26155   000C64  0D04               	mullw	4
 26156   000C66  0E88               	movlw	low _ticksWhenStopped
 26157   000C68  24F3               	addwf	243,w,c
 26158   000C6A  6ED9               	movwf	fsr2l,c
 26159   000C6C  0E03               	movlw	high _ticksWhenStopped
 26160   000C6E  20F4               	addwfc	prodh,w,c
 26161   000C70  6EDA               	movwf	fsr2h,c
 26162   000C72  0100               	movlb	0	; () banked
 26163   000C74  C08D  FFDE         	movff	?_tickGet,postinc2
 26164   000C78  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26165   000C7C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26166   000C80  C090  FFDE         	movff	?_tickGet+3,postinc2
 26167                           
 26168                           ; BSR set to: 0
 26169                           ;../servo.c: 379:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 26170   000C84  0101               	movlb	1	; () banked
 26171   000C86  51DB               	movf	pollServos@io& (0+255),w,b
 26172   000C88  0D07               	mullw	7
 26173   000C8A  50F3               	movf	243,w,c
 26174   000C8C  0F12               	addlw	18
 26175   000C8E  ECB0  F05F         	call	_getNV
 26176   000C92  0E30               	movlw	low _currentPos
 26177   000C94  0101               	movlb	1	; () banked
 26178   000C96  25DB               	addwf	pollServos@io& (0+255),w,b
 26179   000C98  6ED9               	movwf	fsr2l,c
 26180   000C9A  6ADA               	clrf	fsr2h,c
 26181   000C9C  0E01               	movlw	high _currentPos
 26182   000C9E  22DA               	addwfc	fsr2h,f,c
 26183   000CA0  50DF               	movf	indf2,w,c
 26184   000CA2  6FD0               	movwf	??_pollServos& (0+255),b
 26185   000CA4  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26186   000CA6  0100               	movlb	0	; () banked
 26187   000CA8  518D               	movf	?_getNV& (0+255),w,b
 26188   000CAA  0101               	movlb	1	; () banked
 26189   000CAC  19D0               	xorwf	??_pollServos& (0+255),w,b
 26190   000CAE  E11B               	bnz	l22069
 26191   000CB0  0100               	movlb	0	; () banked
 26192   000CB2  518E               	movf	(?_getNV+1)& (0+255),w,b
 26193   000CB4  0101               	movlb	1	; () banked
 26194   000CB6  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26195   000CB8  A4D8               	btfss	status,2,c
 26196   000CBA  D015               	goto	l22069
 26197                           
 26198                           ; BSR set to: 1
 26199                           ;../servo.c: 380:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26200   000CBC  51DB               	movf	pollServos@io& (0+255),w,b
 26201   000CBE  0D07               	mullw	7
 26202   000CC0  50F3               	movf	243,w,c
 26203   000CC2  0F11               	addlw	17
 26204   000CC4  ECB0  F05F         	call	_getNV
 26205   000CC8  0100               	movlb	0	; () banked
 26206   000CCA  BD8D               	btfsc	?_getNV& (0+255),6,b
 26207   000CCC  D002               	goto	u22800
 26208   000CCE  0E01               	movlw	1
 26209   000CD0  D001               	goto	u22810
 26210   000CD2                     u22800:
 26211   000CD2  0E00               	movlw	0
 26212   000CD4                     u22810:
 26213   000CD4  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26214   000CD6  0101               	movlb	1	; () banked
 26215   000CD8  51DB               	movf	pollServos@io& (0+255),w,b
 26216   000CDA  0D04               	mullw	4
 26217   000CDC  50F3               	movf	243,w,c
 26218   000CDE  0F08               	addlw	8
 26219   000CE0  EC42  F04C         	call	_sendProducedEvent
 26220                           
 26221                           ;../servo.c: 381:                             } else {
 26222   000CE4  D014               	goto	l22071
 26223   000CE6                     l22069:
 26224                           
 26225                           ; BSR set to: 1
 26226                           ;../servo.c: 382:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26227   000CE6  51DB               	movf	pollServos@io& (0+255),w,b
 26228   000CE8  0D07               	mullw	7
 26229   000CEA  50F3               	movf	243,w,c
 26230   000CEC  0F11               	addlw	17
 26231   000CEE  ECB0  F05F         	call	_getNV
 26232   000CF2  0100               	movlb	0	; () banked
 26233   000CF4  BD8D               	btfsc	?_getNV& (0+255),6,b
 26234   000CF6  D002               	goto	u22820
 26235   000CF8  0E01               	movlw	1
 26236   000CFA  D001               	goto	u22830
 26237   000CFC                     u22820:
 26238   000CFC  0E00               	movlw	0
 26239   000CFE                     u22830:
 26240   000CFE  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26241   000D00  0101               	movlb	1	; () banked
 26242   000D02  51DB               	movf	pollServos@io& (0+255),w,b
 26243   000D04  0D04               	mullw	4
 26244   000D06  50F3               	movf	243,w,c
 26245   000D08  0F0A               	addlw	10
 26246   000D0A  EC42  F04C         	call	_sendProducedEvent
 26247   000D0E                     l22071:
 26248                           
 26249                           ;../servo.c: 384:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26250   000D0E  0EDE               	movlw	222
 26251   000D10  0101               	movlb	1	; () banked
 26252   000D12  25DB               	addwf	pollServos@io& (0+255),w,b
 26253   000D14  6FD0               	movwf	??_pollServos& (0+255),b
 26254   000D16  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26255   000D18  0E03               	movlw	3
 26256   000D1A  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 26257   000D1C  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 26258   000D20  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26259   000D24  0100               	movlb	0	; () banked
 26260   000D26  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26261   000D28  0E30               	movlw	low _currentPos
 26262   000D2A  0101               	movlb	1	; () banked
 26263   000D2C  25DB               	addwf	pollServos@io& (0+255),w,b
 26264   000D2E  6ED9               	movwf	fsr2l,c
 26265   000D30  6ADA               	clrf	fsr2h,c
 26266   000D32  0E01               	movlw	high _currentPos
 26267   000D34  22DA               	addwfc	fsr2h,f,c
 26268   000D36  50DF               	movf	indf2,w,c
 26269   000D38  0100               	movlb	0	; () banked
 26270   000D3A  6FA7               	movwf	writeNVM@value& (0+255),b
 26271   000D3C  0E00               	movlw	0
 26272   000D3E  EC9F  F05D         	call	_writeNVM
 26273   000D42  EFAE  F00B         	goto	l22231
 26274   000D46                     l22075:
 26275                           
 26276                           ; BSR set to: 1
 26277   000D46  0E10               	movlw	low _servoState
 26278   000D48  25DB               	addwf	pollServos@io& (0+255),w,b
 26279   000D4A  6ED9               	movwf	fsr2l,c
 26280   000D4C  6ADA               	clrf	fsr2h,c
 26281   000D4E  0E01               	movlw	high _servoState
 26282   000D50  22DA               	addwfc	fsr2h,f,c
 26283   000D52  50DF               	movf	indf2,w,c
 26284   000D54  6FD0               	movwf	??_pollServos& (0+255),b
 26285   000D56  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26286                           
 26287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26288                           ; Switch size 1, requested type "simple"
 26289                           ; Number of cases is 1, Range of values is 0 to 0
 26290                           ; switch strategies available:
 26291                           ; Name         Instructions Cycles
 26292                           ; simple_byte            4     3 (average)
 26293                           ;	Chosen strategy is simple_byte
 26294   000D58  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 26295   000D5A  0A00               	xorlw	0	; case 0
 26296   000D5C  A4D8               	btfss	status,2,c
 26297   000D5E  EFAE  F00B         	goto	l22231
 26298                           
 26299                           ; BSR set to: 1
 26300                           ; Switch size 1, requested type "simple"
 26301                           ; Number of cases is 4, Range of values is 0 to 3
 26302                           ; switch strategies available:
 26303                           ; Name         Instructions Cycles
 26304                           ; simple_byte           13     7 (average)
 26305                           ;	Chosen strategy is simple_byte
 26306   000D62  51D0               	movf	??_pollServos& (0+255),w,b
 26307   000D64  0A00               	xorlw	0	; case 0
 26308   000D66  B4D8               	btfsc	status,2,c
 26309   000D68  EFAE  F00B         	goto	l22231
 26310   000D6C  0A01               	xorlw	1	; case 1
 26311   000D6E  B4D8               	btfsc	status,2,c
 26312   000D70  EFAE  F00B         	goto	l22231
 26313   000D74  0A03               	xorlw	3	; case 2
 26314   000D76  B4D8               	btfsc	status,2,c
 26315   000D78  D5E5               	goto	l21995
 26316   000D7A  0A01               	xorlw	1	; case 3
 26317   000D7C  B4D8               	btfsc	status,2,c
 26318   000D7E  D59B               	goto	l21987
 26319   000D80  EFAE  F00B         	goto	l22231
 26320   000D84                     l22077:
 26321                           
 26322                           ; BSR set to: 1
 26323                           ;../servo.c: 395:                         initBounce(io);
 26324   000D84  51DB               	movf	pollServos@io& (0+255),w,b
 26325   000D86  ECF2  F061         	call	_initBounce
 26326                           
 26327                           ;../servo.c: 396:                         servoState[io] = SS_MOVING;
 26328   000D8A  0E10               	movlw	low _servoState
 26329   000D8C  0101               	movlb	1	; () banked
 26330   000D8E  25DB               	addwf	pollServos@io& (0+255),w,b
 26331   000D90  6ED9               	movwf	fsr2l,c
 26332   000D92  6ADA               	clrf	fsr2h,c
 26333   000D94  0E01               	movlw	high _servoState
 26334   000D96  22DA               	addwfc	fsr2h,f,c
 26335   000D98  0E02               	movlw	2
 26336   000D9A  6EDF               	movwf	indf2,c
 26337                           
 26338                           ; BSR set to: 1
 26339                           ;../servo.c: 397:                         loopCount[io] = 0;
 26340   000D9C  0E54               	movlw	low _loopCount
 26341   000D9E  25DB               	addwf	pollServos@io& (0+255),w,b
 26342   000DA0  6ED9               	movwf	fsr2l,c
 26343   000DA2  6ADA               	clrf	fsr2h,c
 26344   000DA4  0E02               	movlw	high _loopCount
 26345   000DA6  22DA               	addwfc	fsr2h,f,c
 26346   000DA8  6ADF               	clrf	indf2,c
 26347   000DAA                     l22083:
 26348                           
 26349                           ; BSR set to: 1
 26350                           ;../servo.c: 401:                         loopCount[io]++;
 26351   000DAA  0E54               	movlw	low _loopCount
 26352   000DAC  25DB               	addwf	pollServos@io& (0+255),w,b
 26353   000DAE  6ED9               	movwf	fsr2l,c
 26354   000DB0  6ADA               	clrf	fsr2h,c
 26355   000DB2  0E02               	movlw	high _loopCount
 26356   000DB4  22DA               	addwfc	fsr2h,f,c
 26357   000DB6  2ADF               	incf	indf2,f,c
 26358                           
 26359                           ; BSR set to: 1
 26360                           ;../servo.c: 402:                         if (loopCount[io] >= 255) {
 26361   000DB8  0E54               	movlw	low _loopCount
 26362   000DBA  25DB               	addwf	pollServos@io& (0+255),w,b
 26363   000DBC  6ED9               	movwf	fsr2l,c
 26364   000DBE  6ADA               	clrf	fsr2h,c
 26365   000DC0  0E02               	movlw	high _loopCount
 26366   000DC2  22DA               	addwfc	fsr2h,f,c
 26367   000DC4  28DE               	incf	postinc2,w,c
 26368   000DC6  A4D8               	btfss	status,2,c
 26369   000DC8  D059               	goto	l22097
 26370                           
 26371                           ; BSR set to: 1
 26372                           ;../servo.c: 403:                             servoState[io] = SS_STOPPED;
 26373   000DCA  0E10               	movlw	low _servoState
 26374   000DCC  25DB               	addwf	pollServos@io& (0+255),w,b
 26375   000DCE  6ED9               	movwf	fsr2l,c
 26376   000DD0  6ADA               	clrf	fsr2h,c
 26377   000DD2  0E01               	movlw	high _servoState
 26378   000DD4  22DA               	addwfc	fsr2h,f,c
 26379   000DD6  0E01               	movlw	1
 26380   000DD8  6EDF               	movwf	indf2,c
 26381                           
 26382                           ; BSR set to: 1
 26383                           ;../servo.c: 404:                             ticksWhenStopped[io].val = tickGet();
 26384   000DDA  EC23  F05C         	call	_tickGet	;wreg free
 26385   000DDE  0101               	movlb	1	; () banked
 26386   000DE0  51DB               	movf	pollServos@io& (0+255),w,b
 26387   000DE2  0D04               	mullw	4
 26388   000DE4  0E88               	movlw	low _ticksWhenStopped
 26389   000DE6  24F3               	addwf	243,w,c
 26390   000DE8  6ED9               	movwf	fsr2l,c
 26391   000DEA  0E03               	movlw	high _ticksWhenStopped
 26392   000DEC  20F4               	addwfc	prodh,w,c
 26393   000DEE  6EDA               	movwf	fsr2h,c
 26394   000DF0  0100               	movlb	0	; () banked
 26395   000DF2  C08D  FFDE         	movff	?_tickGet,postinc2
 26396   000DF6  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26397   000DFA  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26398   000DFE  C090  FFDE         	movff	?_tickGet+3,postinc2
 26399                           
 26400                           ; BSR set to: 0
 26401                           ;../servo.c: 405:                             currentPos[io] = targetPos[io];
 26402   000E02  0101               	movlb	1	; () banked
 26403   000E04  51DB               	movf	pollServos@io& (0+255),w,b
 26404   000E06  0F01               	addlw	low _targetPos
 26405   000E08  6ED9               	movwf	fsr2l,c
 26406   000E0A  6ADA               	clrf	fsr2h,c
 26407   000E0C  0E30               	movlw	low _currentPos
 26408   000E0E  25DB               	addwf	pollServos@io& (0+255),w,b
 26409   000E10  6EE1               	movwf	fsr1l,c
 26410   000E12  6AE2               	clrf	fsr1h,c
 26411   000E14  0E01               	movlw	high _currentPos
 26412   000E16  22E2               	addwfc	fsr1h,f,c
 26413   000E18  CFDF FFE7          	movff	indf2,indf1
 26414                           
 26415                           ; BSR set to: 1
 26416                           ;../servo.c: 406:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 26417   000E1C  51DB               	movf	pollServos@io& (0+255),w,b
 26418   000E1E  0D07               	mullw	7
 26419   000E20  50F3               	movf	243,w,c
 26420   000E22  0F11               	addlw	17
 26421   000E24  ECB0  F05F         	call	_getNV
 26422   000E28  0100               	movlb	0	; () banked
 26423   000E2A  BD8D               	btfsc	?_getNV& (0+255),6,b
 26424   000E2C  D002               	goto	u22850
 26425   000E2E  0E01               	movlw	1
 26426   000E30  D001               	goto	u22860
 26427   000E32                     u22850:
 26428   000E32  0E00               	movlw	0
 26429   000E34                     u22860:
 26430   000E34  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26431   000E36  0101               	movlb	1	; () banked
 26432   000E38  51DB               	movf	pollServos@io& (0+255),w,b
 26433   000E3A  0D04               	mullw	4
 26434   000E3C  50F3               	movf	243,w,c
 26435   000E3E  0F08               	addlw	8
 26436   000E40  EC42  F04C         	call	_sendProducedEvent
 26437                           
 26438                           ;../servo.c: 407:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26439   000E44  0EDE               	movlw	222
 26440   000E46  0101               	movlb	1	; () banked
 26441   000E48  25DB               	addwf	pollServos@io& (0+255),w,b
 26442   000E4A  6FD0               	movwf	??_pollServos& (0+255),b
 26443   000E4C  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26444   000E4E  0E03               	movlw	3
 26445   000E50  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 26446   000E52  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 26447   000E56  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26448   000E5A  0100               	movlb	0	; () banked
 26449   000E5C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26450   000E5E  0E30               	movlw	low _currentPos
 26451   000E60  0101               	movlb	1	; () banked
 26452   000E62  25DB               	addwf	pollServos@io& (0+255),w,b
 26453   000E64  6ED9               	movwf	fsr2l,c
 26454   000E66  6ADA               	clrf	fsr2h,c
 26455   000E68  0E01               	movlw	high _currentPos
 26456   000E6A  22DA               	addwfc	fsr2h,f,c
 26457   000E6C  50DF               	movf	indf2,w,c
 26458   000E6E  0100               	movlb	0	; () banked
 26459   000E70  6FA7               	movwf	writeNVM@value& (0+255),b
 26460   000E72  0E00               	movlw	0
 26461   000E74  EC9F  F05D         	call	_writeNVM
 26462                           
 26463                           ;../servo.c: 408:                             break;
 26464   000E78  EFAE  F00B         	goto	l22231
 26465   000E7C                     l22097:
 26466                           
 26467                           ; BSR set to: 1
 26468                           ;../servo.c: 411:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 26469   000E7C  51DB               	movf	pollServos@io& (0+255),w,b
 26470   000E7E  0D07               	mullw	7
 26471   000E80  50F3               	movf	243,w,c
 26472   000E82  0F12               	addlw	18
 26473   000E84  ECB0  F05F         	call	_getNV
 26474   000E88  0100               	movlb	0	; () banked
 26475   000E8A  518D               	movf	?_getNV& (0+255),w,b
 26476   000E8C  0101               	movlb	1	; () banked
 26477   000E8E  6FD8               	movwf	pollServos@target& (0+255),b
 26478                           
 26479                           ; BSR set to: 1
 26480                           ;../servo.c: 415:                         if (targetPos[io] == target) {
 26481   000E90  51DB               	movf	pollServos@io& (0+255),w,b
 26482   000E92  0F01               	addlw	low _targetPos
 26483   000E94  6ED9               	movwf	fsr2l,c
 26484   000E96  6ADA               	clrf	fsr2h,c
 26485   000E98  51D8               	movf	pollServos@target& (0+255),w,b
 26486   000E9A  18DE               	xorwf	postinc2,w,c
 26487   000E9C  A4D8               	btfss	status,2,c
 26488   000E9E  D060               	goto	l22113
 26489                           
 26490                           ; BSR set to: 1
 26491                           ;../servo.c: 416:                             if (bounceUp(io)) {
 26492   000EA0  51DB               	movf	pollServos@io& (0+255),w,b
 26493   000EA2  ECBB  F02C         	call	_bounceUp
 26494   000EA6  0900               	iorlw	0
 26495   000EA8  B4D8               	btfsc	status,2,c
 26496   000EAA  EFAE  F00B         	goto	l22231
 26497                           
 26498                           ;../servo.c: 417:                                 servoState[io] = SS_STOPPED;
 26499   000EAE  0E10               	movlw	low _servoState
 26500   000EB0  0101               	movlb	1	; () banked
 26501   000EB2  25DB               	addwf	pollServos@io& (0+255),w,b
 26502   000EB4  6ED9               	movwf	fsr2l,c
 26503   000EB6  6ADA               	clrf	fsr2h,c
 26504   000EB8  0E01               	movlw	high _servoState
 26505   000EBA  22DA               	addwfc	fsr2h,f,c
 26506   000EBC  0E01               	movlw	1
 26507   000EBE  6EDF               	movwf	indf2,c
 26508                           
 26509                           ; BSR set to: 1
 26510                           ;../servo.c: 418:                                 ticksWhenStopped[io].val = tickGet();
 26511   000EC0  EC23  F05C         	call	_tickGet	;wreg free
 26512   000EC4  0101               	movlb	1	; () banked
 26513   000EC6  51DB               	movf	pollServos@io& (0+255),w,b
 26514   000EC8  0D04               	mullw	4
 26515   000ECA  0E88               	movlw	low _ticksWhenStopped
 26516   000ECC  24F3               	addwf	243,w,c
 26517   000ECE  6ED9               	movwf	fsr2l,c
 26518   000ED0  0E03               	movlw	high _ticksWhenStopped
 26519   000ED2  20F4               	addwfc	prodh,w,c
 26520   000ED4  6EDA               	movwf	fsr2h,c
 26521   000ED6  0100               	movlb	0	; () banked
 26522   000ED8  C08D  FFDE         	movff	?_tickGet,postinc2
 26523   000EDC  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26524   000EE0  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26525   000EE4  C090  FFDE         	movff	?_tickGet+3,postinc2
 26526                           
 26527                           ; BSR set to: 0
 26528                           ;../servo.c: 419:                                 currentPos[io] = targetPos[io];
 26529   000EE8  0101               	movlb	1	; () banked
 26530   000EEA  51DB               	movf	pollServos@io& (0+255),w,b
 26531   000EEC  0F01               	addlw	low _targetPos
 26532   000EEE  6ED9               	movwf	fsr2l,c
 26533   000EF0  6ADA               	clrf	fsr2h,c
 26534   000EF2  0E30               	movlw	low _currentPos
 26535   000EF4  25DB               	addwf	pollServos@io& (0+255),w,b
 26536   000EF6  6EE1               	movwf	fsr1l,c
 26537   000EF8  6AE2               	clrf	fsr1h,c
 26538   000EFA  0E01               	movlw	high _currentPos
 26539   000EFC  22E2               	addwfc	fsr1h,f,c
 26540   000EFE  CFDF FFE7          	movff	indf2,indf1
 26541                           
 26542                           ; BSR set to: 1
 26543                           ;../servo.c: 420:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26544   000F02  51DB               	movf	pollServos@io& (0+255),w,b
 26545   000F04  0D07               	mullw	7
 26546   000F06  50F3               	movf	243,w,c
 26547   000F08  0F11               	addlw	17
 26548   000F0A  ECB0  F05F         	call	_getNV
 26549   000F0E  0100               	movlb	0	; () banked
 26550   000F10  BD8D               	btfsc	?_getNV& (0+255),6,b
 26551   000F12  D002               	goto	u22890
 26552   000F14  0E01               	movlw	1
 26553   000F16  D001               	goto	u22900
 26554   000F18                     u22890:
 26555   000F18  0E00               	movlw	0
 26556   000F1A                     u22900:
 26557   000F1A  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26558   000F1C  0101               	movlb	1	; () banked
 26559   000F1E  51DB               	movf	pollServos@io& (0+255),w,b
 26560   000F20  0D04               	mullw	4
 26561   000F22  50F3               	movf	243,w,c
 26562   000F24  0F08               	addlw	8
 26563   000F26  EC42  F04C         	call	_sendProducedEvent
 26564                           
 26565                           ;../servo.c: 421:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26566   000F2A  0EDE               	movlw	222
 26567   000F2C  0101               	movlb	1	; () banked
 26568   000F2E  25DB               	addwf	pollServos@io& (0+255),w,b
 26569   000F30  6FD0               	movwf	??_pollServos& (0+255),b
 26570   000F32  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26571   000F34  0E03               	movlw	3
 26572   000F36  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 26573   000F38  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 26574   000F3C  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26575   000F40  0100               	movlb	0	; () banked
 26576   000F42  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26577   000F44  0E30               	movlw	low _currentPos
 26578   000F46  0101               	movlb	1	; () banked
 26579   000F48  25DB               	addwf	pollServos@io& (0+255),w,b
 26580   000F4A  6ED9               	movwf	fsr2l,c
 26581   000F4C  6ADA               	clrf	fsr2h,c
 26582   000F4E  0E01               	movlw	high _currentPos
 26583   000F50  22DA               	addwfc	fsr2h,f,c
 26584   000F52  50DF               	movf	indf2,w,c
 26585   000F54  0100               	movlb	0	; () banked
 26586   000F56  6FA7               	movwf	writeNVM@value& (0+255),b
 26587   000F58  0E00               	movlw	0
 26588   000F5A  EC9F  F05D         	call	_writeNVM
 26589   000F5E  D3FE               	goto	l22231
 26590   000F60                     l22113:
 26591                           
 26592                           ; BSR set to: 1
 26593                           ;../servo.c: 424:                             if (bounceDown(io)) {
 26594   000F60  51DB               	movf	pollServos@io& (0+255),w,b
 26595   000F62  ECFB  F016         	call	_bounceDown
 26596   000F66  0900               	iorlw	0
 26597   000F68  B4D8               	btfsc	status,2,c
 26598   000F6A  D3F8               	goto	l22231
 26599                           
 26600                           ;../servo.c: 425:                                 servoState[io] = SS_STOPPED;
 26601   000F6C  0E10               	movlw	low _servoState
 26602   000F6E  0101               	movlb	1	; () banked
 26603   000F70  25DB               	addwf	pollServos@io& (0+255),w,b
 26604   000F72  6ED9               	movwf	fsr2l,c
 26605   000F74  6ADA               	clrf	fsr2h,c
 26606   000F76  0E01               	movlw	high _servoState
 26607   000F78  22DA               	addwfc	fsr2h,f,c
 26608   000F7A  0E01               	movlw	1
 26609   000F7C  6EDF               	movwf	indf2,c
 26610                           
 26611                           ; BSR set to: 1
 26612                           ;../servo.c: 426:                                 ticksWhenStopped[io].val = tickGet();
 26613   000F7E  EC23  F05C         	call	_tickGet	;wreg free
 26614   000F82  0101               	movlb	1	; () banked
 26615   000F84  51DB               	movf	pollServos@io& (0+255),w,b
 26616   000F86  0D04               	mullw	4
 26617   000F88  0E88               	movlw	low _ticksWhenStopped
 26618   000F8A  24F3               	addwf	243,w,c
 26619   000F8C  6ED9               	movwf	fsr2l,c
 26620   000F8E  0E03               	movlw	high _ticksWhenStopped
 26621   000F90  20F4               	addwfc	prodh,w,c
 26622   000F92  6EDA               	movwf	fsr2h,c
 26623   000F94  0100               	movlb	0	; () banked
 26624   000F96  C08D  FFDE         	movff	?_tickGet,postinc2
 26625   000F9A  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26626   000F9E  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26627   000FA2  C090  FFDE         	movff	?_tickGet+3,postinc2
 26628                           
 26629                           ; BSR set to: 0
 26630                           ;../servo.c: 427:                                 currentPos[io] = targetPos[io];
 26631   000FA6  0101               	movlb	1	; () banked
 26632   000FA8  51DB               	movf	pollServos@io& (0+255),w,b
 26633   000FAA  0F01               	addlw	low _targetPos
 26634   000FAC  6ED9               	movwf	fsr2l,c
 26635   000FAE  6ADA               	clrf	fsr2h,c
 26636   000FB0  0E30               	movlw	low _currentPos
 26637   000FB2  25DB               	addwf	pollServos@io& (0+255),w,b
 26638   000FB4  6EE1               	movwf	fsr1l,c
 26639   000FB6  6AE2               	clrf	fsr1h,c
 26640   000FB8  0E01               	movlw	high _currentPos
 26641   000FBA  22E2               	addwfc	fsr1h,f,c
 26642   000FBC  CFDF FFE7          	movff	indf2,indf1
 26643                           
 26644                           ; BSR set to: 1
 26645                           ;../servo.c: 428:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 26646   000FC0  51DB               	movf	pollServos@io& (0+255),w,b
 26647   000FC2  0D07               	mullw	7
 26648   000FC4  50F3               	movf	243,w,c
 26649   000FC6  0F11               	addlw	17
 26650   000FC8  ECB0  F05F         	call	_getNV
 26651   000FCC  0100               	movlb	0	; () banked
 26652   000FCE  518D               	movf	?_getNV& (0+255),w,b
 26653   000FD0  0B40               	andlw	64
 26654   000FD2  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26655   000FD4  0101               	movlb	1	; () banked
 26656   000FD6  51DB               	movf	pollServos@io& (0+255),w,b
 26657   000FD8  0D04               	mullw	4
 26658   000FDA  50F3               	movf	243,w,c
 26659   000FDC  0F08               	addlw	8
 26660   000FDE  EC42  F04C         	call	_sendProducedEvent
 26661                           
 26662                           ;../servo.c: 429:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26663   000FE2  0EDE               	movlw	222
 26664   000FE4  0101               	movlb	1	; () banked
 26665   000FE6  25DB               	addwf	pollServos@io& (0+255),w,b
 26666   000FE8  6FD0               	movwf	??_pollServos& (0+255),b
 26667   000FEA  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26668   000FEC  0E03               	movlw	3
 26669   000FEE  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 26670   000FF0  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 26671   000FF4  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26672   000FF8  0100               	movlb	0	; () banked
 26673   000FFA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26674   000FFC  0E30               	movlw	low _currentPos
 26675   000FFE  0101               	movlb	1	; () banked
 26676   001000  25DB               	addwf	pollServos@io& (0+255),w,b
 26677   001002  6ED9               	movwf	fsr2l,c
 26678   001004  6ADA               	clrf	fsr2h,c
 26679   001006  0E01               	movlw	high _currentPos
 26680   001008  22DA               	addwfc	fsr2h,f,c
 26681   00100A  50DF               	movf	indf2,w,c
 26682   00100C  0100               	movlb	0	; () banked
 26683   00100E  6FA7               	movwf	writeNVM@value& (0+255),b
 26684   001010  0E00               	movlw	0
 26685   001012  EC9F  F05D         	call	_writeNVM
 26686   001016  D3A2               	goto	l22231
 26687   001018                     l22127:
 26688                           
 26689                           ; BSR set to: 0
 26690   001018  0E10               	movlw	low _servoState
 26691   00101A  0101               	movlb	1	; () banked
 26692   00101C  25DB               	addwf	pollServos@io& (0+255),w,b
 26693   00101E  6ED9               	movwf	fsr2l,c
 26694   001020  6ADA               	clrf	fsr2h,c
 26695   001022  0E01               	movlw	high _servoState
 26696   001024  22DA               	addwfc	fsr2h,f,c
 26697   001026  50DF               	movf	indf2,w,c
 26698   001028  6FD0               	movwf	??_pollServos& (0+255),b
 26699   00102A  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26700                           
 26701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26702                           ; Switch size 1, requested type "simple"
 26703                           ; Number of cases is 1, Range of values is 0 to 0
 26704                           ; switch strategies available:
 26705                           ; Name         Instructions Cycles
 26706                           ; simple_byte            4     3 (average)
 26707                           ;	Chosen strategy is simple_byte
 26708   00102C  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 26709   00102E  0A00               	xorlw	0	; case 0
 26710   001030  A4D8               	btfss	status,2,c
 26711   001032  D394               	goto	l22231
 26712                           
 26713                           ; BSR set to: 1
 26714                           ; Switch size 1, requested type "simple"
 26715                           ; Number of cases is 4, Range of values is 0 to 3
 26716                           ; switch strategies available:
 26717                           ; Name         Instructions Cycles
 26718                           ; simple_byte           13     7 (average)
 26719                           ;	Chosen strategy is simple_byte
 26720   001034  51D0               	movf	??_pollServos& (0+255),w,b
 26721   001036  0A00               	xorlw	0	; case 0
 26722   001038  B4D8               	btfsc	status,2,c
 26723   00103A  D390               	goto	l22231
 26724   00103C  0A01               	xorlw	1	; case 1
 26725   00103E  B4D8               	btfsc	status,2,c
 26726   001040  D38D               	goto	l22231
 26727   001042  0A03               	xorlw	3	; case 2
 26728   001044  B4D8               	btfsc	status,2,c
 26729   001046  D6B1               	goto	l22083
 26730   001048  0A01               	xorlw	1	; case 3
 26731   00104A  B4D8               	btfsc	status,2,c
 26732   00104C  D69B               	goto	l22077
 26733   00104E  D386               	goto	l22231
 26734   001050                     l22129:
 26735                           
 26736                           ; BSR set to: 1
 26737                           ;../servo.c: 441:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 26738   001050  51DB               	movf	pollServos@io& (0+255),w,b
 26739   001052  0D07               	mullw	7
 26740   001054  50F3               	movf	243,w,c
 26741   001056  0F13               	addlw	19
 26742   001058  ECB0  F05F         	call	_getNV
 26743   00105C  0E30               	movlw	low _currentPos
 26744   00105E  0101               	movlb	1	; () banked
 26745   001060  25DB               	addwf	pollServos@io& (0+255),w,b
 26746   001062  6ED9               	movwf	fsr2l,c
 26747   001064  6ADA               	clrf	fsr2h,c
 26748   001066  0E01               	movlw	high _currentPos
 26749   001068  22DA               	addwfc	fsr2h,f,c
 26750   00106A  50DF               	movf	indf2,w,c
 26751   00106C  6FD0               	movwf	??_pollServos& (0+255),b
 26752   00106E  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26753   001070  0100               	movlb	0	; () banked
 26754   001072  518D               	movf	?_getNV& (0+255),w,b
 26755   001074  0101               	movlb	1	; () banked
 26756   001076  19D0               	xorwf	??_pollServos& (0+255),w,b
 26757   001078  E117               	bnz	l22133
 26758   00107A  0100               	movlb	0	; () banked
 26759   00107C  518E               	movf	(?_getNV+1)& (0+255),w,b
 26760   00107E  0101               	movlb	1	; () banked
 26761   001080  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26762   001082  A4D8               	btfss	status,2,c
 26763   001084  D011               	goto	l22133
 26764                           
 26765                           ; BSR set to: 1
 26766                           ;../servo.c: 442:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26767   001086  51DB               	movf	pollServos@io& (0+255),w,b
 26768   001088  0D07               	mullw	7
 26769   00108A  50F3               	movf	243,w,c
 26770   00108C  0F11               	addlw	17
 26771   00108E  ECB0  F05F         	call	_getNV
 26772   001092  0100               	movlb	0	; () banked
 26773   001094  518D               	movf	?_getNV& (0+255),w,b
 26774   001096  0B40               	andlw	64
 26775   001098  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26776   00109A  0101               	movlb	1	; () banked
 26777   00109C  51DB               	movf	pollServos@io& (0+255),w,b
 26778   00109E  0D04               	mullw	4
 26779   0010A0  50F3               	movf	243,w,c
 26780   0010A2  0F08               	addlw	8
 26781   0010A4  EC42  F04C         	call	_sendProducedEvent
 26782   0010A8                     l22133:
 26783                           
 26784                           ;../servo.c: 444:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 26785   0010A8  0101               	movlb	1	; () banked
 26786   0010AA  51DB               	movf	pollServos@io& (0+255),w,b
 26787   0010AC  0D07               	mullw	7
 26788   0010AE  50F3               	movf	243,w,c
 26789   0010B0  0F14               	addlw	20
 26790   0010B2  ECB0  F05F         	call	_getNV
 26791   0010B6  0E30               	movlw	low _currentPos
 26792   0010B8  0101               	movlb	1	; () banked
 26793   0010BA  25DB               	addwf	pollServos@io& (0+255),w,b
 26794   0010BC  6ED9               	movwf	fsr2l,c
 26795   0010BE  6ADA               	clrf	fsr2h,c
 26796   0010C0  0E01               	movlw	high _currentPos
 26797   0010C2  22DA               	addwfc	fsr2h,f,c
 26798   0010C4  50DF               	movf	indf2,w,c
 26799   0010C6  6FD0               	movwf	??_pollServos& (0+255),b
 26800   0010C8  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26801   0010CA  0100               	movlb	0	; () banked
 26802   0010CC  518D               	movf	?_getNV& (0+255),w,b
 26803   0010CE  0101               	movlb	1	; () banked
 26804   0010D0  19D0               	xorwf	??_pollServos& (0+255),w,b
 26805   0010D2  E117               	bnz	l22137
 26806   0010D4  0100               	movlb	0	; () banked
 26807   0010D6  518E               	movf	(?_getNV+1)& (0+255),w,b
 26808   0010D8  0101               	movlb	1	; () banked
 26809   0010DA  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26810   0010DC  A4D8               	btfss	status,2,c
 26811   0010DE  D011               	goto	l22137
 26812                           
 26813                           ; BSR set to: 1
 26814                           ;../servo.c: 445:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26815   0010E0  51DB               	movf	pollServos@io& (0+255),w,b
 26816   0010E2  0D07               	mullw	7
 26817   0010E4  50F3               	movf	243,w,c
 26818   0010E6  0F11               	addlw	17
 26819   0010E8  ECB0  F05F         	call	_getNV
 26820   0010EC  0100               	movlb	0	; () banked
 26821   0010EE  518D               	movf	?_getNV& (0+255),w,b
 26822   0010F0  0B40               	andlw	64
 26823   0010F2  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26824   0010F4  0101               	movlb	1	; () banked
 26825   0010F6  51DB               	movf	pollServos@io& (0+255),w,b
 26826   0010F8  0D04               	mullw	4
 26827   0010FA  50F3               	movf	243,w,c
 26828   0010FC  0F09               	addlw	9
 26829   0010FE  EC42  F04C         	call	_sendProducedEvent
 26830   001102                     l22137:
 26831                           
 26832                           ;../servo.c: 447:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 26833   001102  0101               	movlb	1	; () banked
 26834   001104  51DB               	movf	pollServos@io& (0+255),w,b
 26835   001106  0D07               	mullw	7
 26836   001108  50F3               	movf	243,w,c
 26837   00110A  0F15               	addlw	21
 26838   00110C  ECB0  F05F         	call	_getNV
 26839   001110  0E30               	movlw	low _currentPos
 26840   001112  0101               	movlb	1	; () banked
 26841   001114  25DB               	addwf	pollServos@io& (0+255),w,b
 26842   001116  6ED9               	movwf	fsr2l,c
 26843   001118  6ADA               	clrf	fsr2h,c
 26844   00111A  0E01               	movlw	high _currentPos
 26845   00111C  22DA               	addwfc	fsr2h,f,c
 26846   00111E  50DF               	movf	indf2,w,c
 26847   001120  6FD0               	movwf	??_pollServos& (0+255),b
 26848   001122  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26849   001124  0100               	movlb	0	; () banked
 26850   001126  518D               	movf	?_getNV& (0+255),w,b
 26851   001128  0101               	movlb	1	; () banked
 26852   00112A  19D0               	xorwf	??_pollServos& (0+255),w,b
 26853   00112C  E117               	bnz	l22141
 26854   00112E  0100               	movlb	0	; () banked
 26855   001130  518E               	movf	(?_getNV+1)& (0+255),w,b
 26856   001132  0101               	movlb	1	; () banked
 26857   001134  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26858   001136  A4D8               	btfss	status,2,c
 26859   001138  D011               	goto	l22141
 26860                           
 26861                           ; BSR set to: 1
 26862                           ;../servo.c: 448:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26863   00113A  51DB               	movf	pollServos@io& (0+255),w,b
 26864   00113C  0D07               	mullw	7
 26865   00113E  50F3               	movf	243,w,c
 26866   001140  0F11               	addlw	17
 26867   001142  ECB0  F05F         	call	_getNV
 26868   001146  0100               	movlb	0	; () banked
 26869   001148  518D               	movf	?_getNV& (0+255),w,b
 26870   00114A  0B40               	andlw	64
 26871   00114C  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26872   00114E  0101               	movlb	1	; () banked
 26873   001150  51DB               	movf	pollServos@io& (0+255),w,b
 26874   001152  0D04               	mullw	4
 26875   001154  50F3               	movf	243,w,c
 26876   001156  0F0A               	addlw	10
 26877   001158  EC42  F04C         	call	_sendProducedEvent
 26878   00115C                     l22141:
 26879                           
 26880                           ;../servo.c: 450:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 26881   00115C  0101               	movlb	1	; () banked
 26882   00115E  51DB               	movf	pollServos@io& (0+255),w,b
 26883   001160  0D07               	mullw	7
 26884   001162  50F3               	movf	243,w,c
 26885   001164  0F16               	addlw	22
 26886   001166  ECB0  F05F         	call	_getNV
 26887   00116A  0E30               	movlw	low _currentPos
 26888   00116C  0101               	movlb	1	; () banked
 26889   00116E  25DB               	addwf	pollServos@io& (0+255),w,b
 26890   001170  6ED9               	movwf	fsr2l,c
 26891   001172  6ADA               	clrf	fsr2h,c
 26892   001174  0E01               	movlw	high _currentPos
 26893   001176  22DA               	addwfc	fsr2h,f,c
 26894   001178  50DF               	movf	indf2,w,c
 26895   00117A  6FD0               	movwf	??_pollServos& (0+255),b
 26896   00117C  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26897   00117E  0100               	movlb	0	; () banked
 26898   001180  518D               	movf	?_getNV& (0+255),w,b
 26899   001182  0101               	movlb	1	; () banked
 26900   001184  19D0               	xorwf	??_pollServos& (0+255),w,b
 26901   001186  E117               	bnz	l22145
 26902   001188  0100               	movlb	0	; () banked
 26903   00118A  518E               	movf	(?_getNV+1)& (0+255),w,b
 26904   00118C  0101               	movlb	1	; () banked
 26905   00118E  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 26906   001190  A4D8               	btfss	status,2,c
 26907   001192  D011               	goto	l22145
 26908                           
 26909                           ; BSR set to: 1
 26910                           ;../servo.c: 451:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26911   001194  51DB               	movf	pollServos@io& (0+255),w,b
 26912   001196  0D07               	mullw	7
 26913   001198  50F3               	movf	243,w,c
 26914   00119A  0F11               	addlw	17
 26915   00119C  ECB0  F05F         	call	_getNV
 26916   0011A0  0100               	movlb	0	; () banked
 26917   0011A2  518D               	movf	?_getNV& (0+255),w,b
 26918   0011A4  0B40               	andlw	64
 26919   0011A6  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 26920   0011A8  0101               	movlb	1	; () banked
 26921   0011AA  51DB               	movf	pollServos@io& (0+255),w,b
 26922   0011AC  0D04               	mullw	4
 26923   0011AE  50F3               	movf	243,w,c
 26924   0011B0  0F0B               	addlw	11
 26925   0011B2  EC42  F04C         	call	_sendProducedEvent
 26926   0011B6                     l22145:
 26927                           
 26928                           ;../servo.c: 453:                         servoState[io] = SS_MOVING;
 26929   0011B6  0E10               	movlw	low _servoState
 26930   0011B8  0101               	movlb	1	; () banked
 26931   0011BA  25DB               	addwf	pollServos@io& (0+255),w,b
 26932   0011BC  6ED9               	movwf	fsr2l,c
 26933   0011BE  6ADA               	clrf	fsr2h,c
 26934   0011C0  0E01               	movlw	high _servoState
 26935   0011C2  22DA               	addwfc	fsr2h,f,c
 26936   0011C4  0E02               	movlw	2
 26937   0011C6  6EDF               	movwf	indf2,c
 26938   0011C8                     l22147:
 26939                           
 26940                           ; BSR set to: 1
 26941                           ;../servo.c: 456:                         if (targetPos[io] > currentPos[io]) {
 26942   0011C8  51DB               	movf	pollServos@io& (0+255),w,b
 26943   0011CA  0F01               	addlw	low _targetPos
 26944   0011CC  6ED9               	movwf	fsr2l,c
 26945   0011CE  6ADA               	clrf	fsr2h,c
 26946   0011D0  0E30               	movlw	low _currentPos
 26947   0011D2  25DB               	addwf	pollServos@io& (0+255),w,b
 26948   0011D4  6EE1               	movwf	fsr1l,c
 26949   0011D6  6AE2               	clrf	fsr1h,c
 26950   0011D8  0E01               	movlw	high _currentPos
 26951   0011DA  22E2               	addwfc	fsr1h,f,c
 26952   0011DC  50DE               	movf	postinc2,w,c
 26953   0011DE  5CE6               	subwf	postinc1,w,c
 26954   0011E0  B0D8               	btfsc	status,0,c
 26955   0011E2  D08B               	goto	l22167
 26956                           
 26957                           ; BSR set to: 1
 26958                           ;../servo.c: 457:                             if (stepsPerPollSpeed[io]) {
 26959   0011E4  0E00               	movlw	low _stepsPerPollSpeed
 26960   0011E6  25DB               	addwf	pollServos@io& (0+255),w,b
 26961   0011E8  6ED9               	movwf	fsr2l,c
 26962   0011EA  6ADA               	clrf	fsr2h,c
 26963   0011EC  0E01               	movlw	high _stepsPerPollSpeed
 26964   0011EE  22DA               	addwfc	fsr2h,f,c
 26965   0011F0  50DF               	movf	indf2,w,c
 26966   0011F2  B4D8               	btfsc	status,2,c
 26967   0011F4  D042               	goto	l22157
 26968                           
 26969                           ; BSR set to: 1
 26970                           ;../servo.c: 458:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 26971   0011F6  0E30               	movlw	low _currentPos
 26972   0011F8  25DB               	addwf	pollServos@io& (0+255),w,b
 26973   0011FA  6ED9               	movwf	fsr2l,c
 26974   0011FC  6ADA               	clrf	fsr2h,c
 26975   0011FE  0E01               	movlw	high _currentPos
 26976   001200  22DA               	addwfc	fsr2h,f,c
 26977   001202  50DF               	movf	indf2,w,c
 26978   001204  6FD0               	movwf	??_pollServos& (0+255),b
 26979   001206  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 26980   001208  0E30               	movlw	low _currentPos
 26981   00120A  25DB               	addwf	pollServos@io& (0+255),w,b
 26982   00120C  6ED9               	movwf	fsr2l,c
 26983   00120E  6ADA               	clrf	fsr2h,c
 26984   001210  0E01               	movlw	high _currentPos
 26985   001212  22DA               	addwfc	fsr2h,f,c
 26986   001214  50DF               	movf	indf2,w,c
 26987   001216  6FD2               	movwf	(??_pollServos+2)& (0+255),b
 26988   001218  6BD3               	clrf	(??_pollServos+3)& (0+255),b
 26989   00121A  0E00               	movlw	low _stepsPerPollSpeed
 26990   00121C  25DB               	addwf	pollServos@io& (0+255),w,b
 26991   00121E  6ED9               	movwf	fsr2l,c
 26992   001220  6ADA               	clrf	fsr2h,c
 26993   001222  0E01               	movlw	high _stepsPerPollSpeed
 26994   001224  22DA               	addwfc	fsr2h,f,c
 26995   001226  50DF               	movf	indf2,w,c
 26996   001228  6FD4               	movwf	(??_pollServos+4)& (0+255),b
 26997   00122A  51D4               	movf	(??_pollServos+4)& (0+255),w,b
 26998   00122C  27D2               	addwf	(??_pollServos+2)& (0+255),f,b
 26999   00122E  0E00               	movlw	0
 27000   001230  23D3               	addwfc	(??_pollServos+3)& (0+255),f,b
 27001   001232  51D0               	movf	??_pollServos& (0+255),w,b
 27002   001234  5DD2               	subwf	(??_pollServos+2)& (0+255),w,b
 27003   001236  51D3               	movf	(??_pollServos+3)& (0+255),w,b
 27004   001238  0A80               	xorlw	128
 27005   00123A  6FD5               	movwf	(??_pollServos+5)& (0+255),b
 27006   00123C  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27007   00123E  0A80               	xorlw	128
 27008   001240  59D5               	subwfb	(??_pollServos+5)& (0+255),w,b
 27009   001242  B0D8               	btfsc	status,0,c
 27010   001244  D009               	goto	l22155
 27011                           
 27012                           ; BSR set to: 1
 27013                           ;../servo.c: 460:                                     currentPos[io] =255;
 27014   001246  0E30               	movlw	low _currentPos
 27015   001248  25DB               	addwf	pollServos@io& (0+255),w,b
 27016   00124A  6ED9               	movwf	fsr2l,c
 27017   00124C  6ADA               	clrf	fsr2h,c
 27018   00124E  0E01               	movlw	high _currentPos
 27019   001250  22DA               	addwfc	fsr2h,f,c
 27020   001252  0EFF               	movlw	255
 27021   001254  6EDF               	movwf	indf2,c
 27022                           
 27023                           ;../servo.c: 461:                                 } else {
 27024   001256  D036               	goto	l22163
 27025   001258                     l22155:
 27026                           
 27027                           ; BSR set to: 1
 27028                           ;../servo.c: 462:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 27029   001258  0E00               	movlw	low _stepsPerPollSpeed
 27030   00125A  25DB               	addwf	pollServos@io& (0+255),w,b
 27031   00125C  6ED9               	movwf	fsr2l,c
 27032   00125E  6ADA               	clrf	fsr2h,c
 27033   001260  0E01               	movlw	high _stepsPerPollSpeed
 27034   001262  22DA               	addwfc	fsr2h,f,c
 27035   001264  50DF               	movf	indf2,w,c
 27036   001266  6FD0               	movwf	??_pollServos& (0+255),b
 27037   001268  0E30               	movlw	low _currentPos
 27038   00126A  25DB               	addwf	pollServos@io& (0+255),w,b
 27039   00126C  6ED9               	movwf	fsr2l,c
 27040   00126E  6ADA               	clrf	fsr2h,c
 27041   001270  0E01               	movlw	high _currentPos
 27042   001272  22DA               	addwfc	fsr2h,f,c
 27043   001274  51D0               	movf	??_pollServos& (0+255),w,b
 27044   001276  26DF               	addwf	indf2,f,c
 27045   001278  D025               	goto	l22163
 27046   00127A                     l22157:
 27047                           
 27048                           ; BSR set to: 1
 27049                           ;../servo.c: 465:                                 pollCount[io]--;
 27050   00127A  0E64               	movlw	low _pollCount
 27051   00127C  25DB               	addwf	pollServos@io& (0+255),w,b
 27052   00127E  6ED9               	movwf	fsr2l,c
 27053   001280  6ADA               	clrf	fsr2h,c
 27054   001282  0E02               	movlw	high _pollCount
 27055   001284  22DA               	addwfc	fsr2h,f,c
 27056   001286  06DF               	decf	indf2,f,c
 27057                           
 27058                           ;../servo.c: 466:                                 if (pollCount[io] == 0) {
 27059   001288  0E64               	movlw	low _pollCount
 27060   00128A  25DB               	addwf	pollServos@io& (0+255),w,b
 27061   00128C  6ED9               	movwf	fsr2l,c
 27062   00128E  6ADA               	clrf	fsr2h,c
 27063   001290  0E02               	movlw	high _pollCount
 27064   001292  22DA               	addwfc	fsr2h,f,c
 27065   001294  50DF               	movf	indf2,w,c
 27066   001296  A4D8               	btfss	status,2,c
 27067   001298  D015               	goto	l22163
 27068                           
 27069                           ; BSR set to: 1
 27070                           ;../servo.c: 467:                                     currentPos[io]++;
 27071   00129A  0E30               	movlw	low _currentPos
 27072   00129C  25DB               	addwf	pollServos@io& (0+255),w,b
 27073   00129E  6ED9               	movwf	fsr2l,c
 27074   0012A0  6ADA               	clrf	fsr2h,c
 27075   0012A2  0E01               	movlw	high _currentPos
 27076   0012A4  22DA               	addwfc	fsr2h,f,c
 27077   0012A6  2ADF               	incf	indf2,f,c
 27078                           
 27079                           ; BSR set to: 1
 27080                           ;../servo.c: 468:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 27081   0012A8  0E74               	movlw	low _pollsPerStepSpeed
 27082   0012AA  25DB               	addwf	pollServos@io& (0+255),w,b
 27083   0012AC  6ED9               	movwf	fsr2l,c
 27084   0012AE  6ADA               	clrf	fsr2h,c
 27085   0012B0  0E02               	movlw	high _pollsPerStepSpeed
 27086   0012B2  22DA               	addwfc	fsr2h,f,c
 27087   0012B4  0E64               	movlw	low _pollCount
 27088   0012B6  25DB               	addwf	pollServos@io& (0+255),w,b
 27089   0012B8  6EE1               	movwf	fsr1l,c
 27090   0012BA  6AE2               	clrf	fsr1h,c
 27091   0012BC  0E02               	movlw	high _pollCount
 27092   0012BE  22E2               	addwfc	fsr1h,f,c
 27093   0012C0  CFDF FFE7          	movff	indf2,indf1
 27094   0012C4                     l22163:
 27095                           
 27096                           ; BSR set to: 1
 27097                           ;../servo.c: 471:                             if (currentPos[io] > targetPos[io]) {
 27098   0012C4  0E30               	movlw	low _currentPos
 27099   0012C6  25DB               	addwf	pollServos@io& (0+255),w,b
 27100   0012C8  6ED9               	movwf	fsr2l,c
 27101   0012CA  6ADA               	clrf	fsr2h,c
 27102   0012CC  0E01               	movlw	high _currentPos
 27103   0012CE  22DA               	addwfc	fsr2h,f,c
 27104   0012D0  51DB               	movf	pollServos@io& (0+255),w,b
 27105   0012D2  0F01               	addlw	low _targetPos
 27106   0012D4  6EE1               	movwf	fsr1l,c
 27107   0012D6  6AE2               	clrf	fsr1h,c
 27108   0012D8  50DE               	movf	postinc2,w,c
 27109   0012DA  5CE6               	subwf	postinc1,w,c
 27110   0012DC  B0D8               	btfsc	status,0,c
 27111   0012DE  D098               	goto	l1104
 27112   0012E0                     u23000:
 27113                           
 27114                           ; BSR set to: 1
 27115                           ;../servo.c: 472:                                 currentPos[io] = targetPos[io];
 27116   0012E0  51DB               	movf	pollServos@io& (0+255),w,b
 27117   0012E2  0F01               	addlw	low _targetPos
 27118   0012E4  6ED9               	movwf	fsr2l,c
 27119   0012E6  6ADA               	clrf	fsr2h,c
 27120   0012E8  0E30               	movlw	low _currentPos
 27121   0012EA  25DB               	addwf	pollServos@io& (0+255),w,b
 27122   0012EC  6EE1               	movwf	fsr1l,c
 27123   0012EE  6AE2               	clrf	fsr1h,c
 27124   0012F0  0E01               	movlw	high _currentPos
 27125   0012F2  22E2               	addwfc	fsr1h,f,c
 27126   0012F4  CFDF FFE7          	movff	indf2,indf1
 27127   0012F8  D08B               	goto	l1104
 27128   0012FA                     l22167:
 27129                           
 27130                           ; BSR set to: 1
 27131   0012FA  0E30               	movlw	low _currentPos
 27132   0012FC  25DB               	addwf	pollServos@io& (0+255),w,b
 27133   0012FE  6ED9               	movwf	fsr2l,c
 27134   001300  6ADA               	clrf	fsr2h,c
 27135   001302  0E01               	movlw	high _currentPos
 27136   001304  22DA               	addwfc	fsr2h,f,c
 27137   001306  51DB               	movf	pollServos@io& (0+255),w,b
 27138   001308  0F01               	addlw	low _targetPos
 27139   00130A  6EE1               	movwf	fsr1l,c
 27140   00130C  6AE2               	clrf	fsr1h,c
 27141   00130E  50DE               	movf	postinc2,w,c
 27142   001310  5CE6               	subwf	postinc1,w,c
 27143   001312  B0D8               	btfsc	status,0,c
 27144   001314  D07D               	goto	l1104
 27145                           
 27146                           ; BSR set to: 1
 27147                           ;../servo.c: 476:                             if (stepsPerPollSpeed[io]) {
 27148   001316  0E00               	movlw	low _stepsPerPollSpeed
 27149   001318  25DB               	addwf	pollServos@io& (0+255),w,b
 27150   00131A  6ED9               	movwf	fsr2l,c
 27151   00131C  6ADA               	clrf	fsr2h,c
 27152   00131E  0E01               	movlw	high _stepsPerPollSpeed
 27153   001320  22DA               	addwfc	fsr2h,f,c
 27154   001322  50DF               	movf	indf2,w,c
 27155   001324  B4D8               	btfsc	status,2,c
 27156   001326  D041               	goto	l22177
 27157                           
 27158                           ; BSR set to: 1
 27159                           ;../servo.c: 477:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 27160   001328  0E30               	movlw	low _currentPos
 27161   00132A  25DB               	addwf	pollServos@io& (0+255),w,b
 27162   00132C  6ED9               	movwf	fsr2l,c
 27163   00132E  6ADA               	clrf	fsr2h,c
 27164   001330  0E01               	movlw	high _currentPos
 27165   001332  22DA               	addwfc	fsr2h,f,c
 27166   001334  50DF               	movf	indf2,w,c
 27167   001336  6FD0               	movwf	??_pollServos& (0+255),b
 27168   001338  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27169   00133A  0E00               	movlw	low _stepsPerPollSpeed
 27170   00133C  25DB               	addwf	pollServos@io& (0+255),w,b
 27171   00133E  6ED9               	movwf	fsr2l,c
 27172   001340  6ADA               	clrf	fsr2h,c
 27173   001342  0E01               	movlw	high _stepsPerPollSpeed
 27174   001344  22DA               	addwfc	fsr2h,f,c
 27175   001346  50DF               	movf	indf2,w,c
 27176   001348  6FD2               	movwf	(??_pollServos+2)& (0+255),b
 27177   00134A  51D2               	movf	(??_pollServos+2)& (0+255),w,b
 27178   00134C  5FD0               	subwf	??_pollServos& (0+255),f,b
 27179   00134E  0E00               	movlw	0
 27180   001350  5BD1               	subwfb	(??_pollServos+1)& (0+255),f,b
 27181   001352  0E30               	movlw	low _currentPos
 27182   001354  25DB               	addwf	pollServos@io& (0+255),w,b
 27183   001356  6ED9               	movwf	fsr2l,c
 27184   001358  6ADA               	clrf	fsr2h,c
 27185   00135A  0E01               	movlw	high _currentPos
 27186   00135C  22DA               	addwfc	fsr2h,f,c
 27187   00135E  50DF               	movf	indf2,w,c
 27188   001360  6FD3               	movwf	(??_pollServos+3)& (0+255),b
 27189   001362  6BD4               	clrf	(??_pollServos+4)& (0+255),b
 27190   001364  51D0               	movf	??_pollServos& (0+255),w,b
 27191   001366  5DD3               	subwf	(??_pollServos+3)& (0+255),w,b
 27192   001368  51D4               	movf	(??_pollServos+4)& (0+255),w,b
 27193   00136A  0A80               	xorlw	128
 27194   00136C  6FD5               	movwf	(??_pollServos+5)& (0+255),b
 27195   00136E  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27196   001370  0A80               	xorlw	128
 27197   001372  59D5               	subwfb	(??_pollServos+5)& (0+255),w,b
 27198   001374  B0D8               	btfsc	status,0,c
 27199   001376  D008               	goto	l22175
 27200                           
 27201                           ; BSR set to: 1
 27202                           ;../servo.c: 479:                                     currentPos[io] = 0;
 27203   001378  0E30               	movlw	low _currentPos
 27204   00137A  25DB               	addwf	pollServos@io& (0+255),w,b
 27205   00137C  6ED9               	movwf	fsr2l,c
 27206   00137E  6ADA               	clrf	fsr2h,c
 27207   001380  0E01               	movlw	high _currentPos
 27208   001382  22DA               	addwfc	fsr2h,f,c
 27209   001384  6ADF               	clrf	indf2,c
 27210                           
 27211                           ;../servo.c: 480:                                 } else {
 27212   001386  D036               	goto	l22183
 27213   001388                     l22175:
 27214                           
 27215                           ; BSR set to: 1
 27216                           ;../servo.c: 481:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 27217   001388  0E00               	movlw	low _stepsPerPollSpeed
 27218   00138A  25DB               	addwf	pollServos@io& (0+255),w,b
 27219   00138C  6ED9               	movwf	fsr2l,c
 27220   00138E  6ADA               	clrf	fsr2h,c
 27221   001390  0E01               	movlw	high _stepsPerPollSpeed
 27222   001392  22DA               	addwfc	fsr2h,f,c
 27223   001394  50DF               	movf	indf2,w,c
 27224   001396  6FD0               	movwf	??_pollServos& (0+255),b
 27225   001398  0E30               	movlw	low _currentPos
 27226   00139A  25DB               	addwf	pollServos@io& (0+255),w,b
 27227   00139C  6ED9               	movwf	fsr2l,c
 27228   00139E  6ADA               	clrf	fsr2h,c
 27229   0013A0  0E01               	movlw	high _currentPos
 27230   0013A2  22DA               	addwfc	fsr2h,f,c
 27231   0013A4  51D0               	movf	??_pollServos& (0+255),w,b
 27232   0013A6  5EDF               	subwf	indf2,f,c
 27233   0013A8  D025               	goto	l22183
 27234   0013AA                     l22177:
 27235                           
 27236                           ; BSR set to: 1
 27237                           ;../servo.c: 484:                                 pollCount[io]--;
 27238   0013AA  0E64               	movlw	low _pollCount
 27239   0013AC  25DB               	addwf	pollServos@io& (0+255),w,b
 27240   0013AE  6ED9               	movwf	fsr2l,c
 27241   0013B0  6ADA               	clrf	fsr2h,c
 27242   0013B2  0E02               	movlw	high _pollCount
 27243   0013B4  22DA               	addwfc	fsr2h,f,c
 27244   0013B6  06DF               	decf	indf2,f,c
 27245                           
 27246                           ;../servo.c: 485:                                 if (pollCount[io] == 0) {
 27247   0013B8  0E64               	movlw	low _pollCount
 27248   0013BA  25DB               	addwf	pollServos@io& (0+255),w,b
 27249   0013BC  6ED9               	movwf	fsr2l,c
 27250   0013BE  6ADA               	clrf	fsr2h,c
 27251   0013C0  0E02               	movlw	high _pollCount
 27252   0013C2  22DA               	addwfc	fsr2h,f,c
 27253   0013C4  50DF               	movf	indf2,w,c
 27254   0013C6  A4D8               	btfss	status,2,c
 27255   0013C8  D015               	goto	l22183
 27256                           
 27257                           ; BSR set to: 1
 27258                           ;../servo.c: 486:                                     currentPos[io]--;
 27259   0013CA  0E30               	movlw	low _currentPos
 27260   0013CC  25DB               	addwf	pollServos@io& (0+255),w,b
 27261   0013CE  6ED9               	movwf	fsr2l,c
 27262   0013D0  6ADA               	clrf	fsr2h,c
 27263   0013D2  0E01               	movlw	high _currentPos
 27264   0013D4  22DA               	addwfc	fsr2h,f,c
 27265   0013D6  06DF               	decf	indf2,f,c
 27266                           
 27267                           ; BSR set to: 1
 27268                           ;../servo.c: 487:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 27269   0013D8  0E74               	movlw	low _pollsPerStepSpeed
 27270   0013DA  25DB               	addwf	pollServos@io& (0+255),w,b
 27271   0013DC  6ED9               	movwf	fsr2l,c
 27272   0013DE  6ADA               	clrf	fsr2h,c
 27273   0013E0  0E02               	movlw	high _pollsPerStepSpeed
 27274   0013E2  22DA               	addwfc	fsr2h,f,c
 27275   0013E4  0E64               	movlw	low _pollCount
 27276   0013E6  25DB               	addwf	pollServos@io& (0+255),w,b
 27277   0013E8  6EE1               	movwf	fsr1l,c
 27278   0013EA  6AE2               	clrf	fsr1h,c
 27279   0013EC  0E02               	movlw	high _pollCount
 27280   0013EE  22E2               	addwfc	fsr1h,f,c
 27281   0013F0  CFDF FFE7          	movff	indf2,indf1
 27282   0013F4                     l22183:
 27283                           
 27284                           ; BSR set to: 1
 27285                           ;../servo.c: 490:                             if (currentPos[io] < targetPos[io]) {
 27286   0013F4  51DB               	movf	pollServos@io& (0+255),w,b
 27287   0013F6  0F01               	addlw	low _targetPos
 27288   0013F8  6ED9               	movwf	fsr2l,c
 27289   0013FA  6ADA               	clrf	fsr2h,c
 27290   0013FC  0E30               	movlw	low _currentPos
 27291   0013FE  25DB               	addwf	pollServos@io& (0+255),w,b
 27292   001400  6EE1               	movwf	fsr1l,c
 27293   001402  6AE2               	clrf	fsr1h,c
 27294   001404  0E01               	movlw	high _currentPos
 27295   001406  22E2               	addwfc	fsr1h,f,c
 27296   001408  50DE               	movf	postinc2,w,c
 27297   00140A  5CE6               	subwf	postinc1,w,c
 27298   00140C  A0D8               	btfss	status,0,c
 27299   00140E  D768               	goto	u23000
 27300   001410                     l1104:
 27301                           
 27302                           ; BSR set to: 1
 27303                           ;../servo.c: 494:                         if (targetPos[io] == currentPos[io]) {
 27304   001410  0E30               	movlw	low _currentPos
 27305   001412  25DB               	addwf	pollServos@io& (0+255),w,b
 27306   001414  6ED9               	movwf	fsr2l,c
 27307   001416  6ADA               	clrf	fsr2h,c
 27308   001418  0E01               	movlw	high _currentPos
 27309   00141A  22DA               	addwfc	fsr2h,f,c
 27310   00141C  51DB               	movf	pollServos@io& (0+255),w,b
 27311   00141E  0F01               	addlw	low _targetPos
 27312   001420  6EE1               	movwf	fsr1l,c
 27313   001422  6AE2               	clrf	fsr1h,c
 27314   001424  50DE               	movf	postinc2,w,c
 27315   001426  18E6               	xorwf	postinc1,w,c
 27316   001428  A4D8               	btfss	status,2,c
 27317   00142A  D198               	goto	l22231
 27318                           
 27319                           ; BSR set to: 1
 27320                           ;../servo.c: 495:                             servoState[io] = SS_STOPPED;
 27321   00142C  0E10               	movlw	low _servoState
 27322   00142E  25DB               	addwf	pollServos@io& (0+255),w,b
 27323   001430  6ED9               	movwf	fsr2l,c
 27324   001432  6ADA               	clrf	fsr2h,c
 27325   001434  0E01               	movlw	high _servoState
 27326   001436  22DA               	addwfc	fsr2h,f,c
 27327   001438  0E01               	movlw	1
 27328   00143A  6EDF               	movwf	indf2,c
 27329                           
 27330                           ; BSR set to: 1
 27331                           ;../servo.c: 496:                             ticksWhenStopped[io].val = tickGet();
 27332   00143C  EC23  F05C         	call	_tickGet	;wreg free
 27333   001440  0101               	movlb	1	; () banked
 27334   001442  51DB               	movf	pollServos@io& (0+255),w,b
 27335   001444  0D04               	mullw	4
 27336   001446  0E88               	movlw	low _ticksWhenStopped
 27337   001448  24F3               	addwf	243,w,c
 27338   00144A  6ED9               	movwf	fsr2l,c
 27339   00144C  0E03               	movlw	high _ticksWhenStopped
 27340   00144E  20F4               	addwfc	prodh,w,c
 27341   001450  6EDA               	movwf	fsr2h,c
 27342   001452  0100               	movlb	0	; () banked
 27343   001454  C08D  FFDE         	movff	?_tickGet,postinc2
 27344   001458  C08E  FFDE         	movff	?_tickGet+1,postinc2
 27345   00145C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 27346   001460  C090  FFDE         	movff	?_tickGet+3,postinc2
 27347                           
 27348                           ; BSR set to: 0
 27349                           ;../servo.c: 498:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 27350   001464  0101               	movlb	1	; () banked
 27351   001466  51DB               	movf	pollServos@io& (0+255),w,b
 27352   001468  0D07               	mullw	7
 27353   00146A  50F3               	movf	243,w,c
 27354   00146C  0F13               	addlw	19
 27355   00146E  ECB0  F05F         	call	_getNV
 27356   001472  0E30               	movlw	low _currentPos
 27357   001474  0101               	movlb	1	; () banked
 27358   001476  25DB               	addwf	pollServos@io& (0+255),w,b
 27359   001478  6ED9               	movwf	fsr2l,c
 27360   00147A  6ADA               	clrf	fsr2h,c
 27361   00147C  0E01               	movlw	high _currentPos
 27362   00147E  22DA               	addwfc	fsr2h,f,c
 27363   001480  50DF               	movf	indf2,w,c
 27364   001482  6FD0               	movwf	??_pollServos& (0+255),b
 27365   001484  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27366   001486  0100               	movlb	0	; () banked
 27367   001488  518D               	movf	?_getNV& (0+255),w,b
 27368   00148A  0101               	movlb	1	; () banked
 27369   00148C  19D0               	xorwf	??_pollServos& (0+255),w,b
 27370   00148E  E11A               	bnz	l22195
 27371   001490  0100               	movlb	0	; () banked
 27372   001492  518E               	movf	(?_getNV+1)& (0+255),w,b
 27373   001494  0101               	movlb	1	; () banked
 27374   001496  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 27375   001498  A4D8               	btfss	status,2,c
 27376   00149A  D014               	goto	l22195
 27377                           
 27378                           ; BSR set to: 1
 27379                           ;../servo.c: 499:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27380   00149C  51DB               	movf	pollServos@io& (0+255),w,b
 27381   00149E  0D07               	mullw	7
 27382   0014A0  50F3               	movf	243,w,c
 27383   0014A2  0F11               	addlw	17
 27384   0014A4  ECB0  F05F         	call	_getNV
 27385   0014A8  0100               	movlb	0	; () banked
 27386   0014AA  BD8D               	btfsc	?_getNV& (0+255),6,b
 27387   0014AC  D002               	goto	u23080
 27388   0014AE  0E01               	movlw	1
 27389   0014B0  D001               	goto	u23090
 27390   0014B2                     u23080:
 27391   0014B2  0E00               	movlw	0
 27392   0014B4                     u23090:
 27393   0014B4  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 27394   0014B6  0101               	movlb	1	; () banked
 27395   0014B8  51DB               	movf	pollServos@io& (0+255),w,b
 27396   0014BA  0D04               	mullw	4
 27397   0014BC  50F3               	movf	243,w,c
 27398   0014BE  0F08               	addlw	8
 27399   0014C0  EC42  F04C         	call	_sendProducedEvent
 27400   0014C4                     l22195:
 27401                           
 27402                           ;../servo.c: 501:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 27403   0014C4  0101               	movlb	1	; () banked
 27404   0014C6  51DB               	movf	pollServos@io& (0+255),w,b
 27405   0014C8  0D07               	mullw	7
 27406   0014CA  50F3               	movf	243,w,c
 27407   0014CC  0F14               	addlw	20
 27408   0014CE  ECB0  F05F         	call	_getNV
 27409   0014D2  0E30               	movlw	low _currentPos
 27410   0014D4  0101               	movlb	1	; () banked
 27411   0014D6  25DB               	addwf	pollServos@io& (0+255),w,b
 27412   0014D8  6ED9               	movwf	fsr2l,c
 27413   0014DA  6ADA               	clrf	fsr2h,c
 27414   0014DC  0E01               	movlw	high _currentPos
 27415   0014DE  22DA               	addwfc	fsr2h,f,c
 27416   0014E0  50DF               	movf	indf2,w,c
 27417   0014E2  6FD0               	movwf	??_pollServos& (0+255),b
 27418   0014E4  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27419   0014E6  0100               	movlb	0	; () banked
 27420   0014E8  518D               	movf	?_getNV& (0+255),w,b
 27421   0014EA  0101               	movlb	1	; () banked
 27422   0014EC  19D0               	xorwf	??_pollServos& (0+255),w,b
 27423   0014EE  E11A               	bnz	l22199
 27424   0014F0  0100               	movlb	0	; () banked
 27425   0014F2  518E               	movf	(?_getNV+1)& (0+255),w,b
 27426   0014F4  0101               	movlb	1	; () banked
 27427   0014F6  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 27428   0014F8  A4D8               	btfss	status,2,c
 27429   0014FA  D014               	goto	l22199
 27430                           
 27431                           ; BSR set to: 1
 27432                           ;../servo.c: 502:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27433   0014FC  51DB               	movf	pollServos@io& (0+255),w,b
 27434   0014FE  0D07               	mullw	7
 27435   001500  50F3               	movf	243,w,c
 27436   001502  0F11               	addlw	17
 27437   001504  ECB0  F05F         	call	_getNV
 27438   001508  0100               	movlb	0	; () banked
 27439   00150A  BD8D               	btfsc	?_getNV& (0+255),6,b
 27440   00150C  D002               	goto	u23110
 27441   00150E  0E01               	movlw	1
 27442   001510  D001               	goto	u23120
 27443   001512                     u23110:
 27444   001512  0E00               	movlw	0
 27445   001514                     u23120:
 27446   001514  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 27447   001516  0101               	movlb	1	; () banked
 27448   001518  51DB               	movf	pollServos@io& (0+255),w,b
 27449   00151A  0D04               	mullw	4
 27450   00151C  50F3               	movf	243,w,c
 27451   00151E  0F09               	addlw	9
 27452   001520  EC42  F04C         	call	_sendProducedEvent
 27453   001524                     l22199:
 27454                           
 27455                           ;../servo.c: 504:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 27456   001524  0101               	movlb	1	; () banked
 27457   001526  51DB               	movf	pollServos@io& (0+255),w,b
 27458   001528  0D07               	mullw	7
 27459   00152A  50F3               	movf	243,w,c
 27460   00152C  0F15               	addlw	21
 27461   00152E  ECB0  F05F         	call	_getNV
 27462   001532  0E30               	movlw	low _currentPos
 27463   001534  0101               	movlb	1	; () banked
 27464   001536  25DB               	addwf	pollServos@io& (0+255),w,b
 27465   001538  6ED9               	movwf	fsr2l,c
 27466   00153A  6ADA               	clrf	fsr2h,c
 27467   00153C  0E01               	movlw	high _currentPos
 27468   00153E  22DA               	addwfc	fsr2h,f,c
 27469   001540  50DF               	movf	indf2,w,c
 27470   001542  6FD0               	movwf	??_pollServos& (0+255),b
 27471   001544  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27472   001546  0100               	movlb	0	; () banked
 27473   001548  518D               	movf	?_getNV& (0+255),w,b
 27474   00154A  0101               	movlb	1	; () banked
 27475   00154C  19D0               	xorwf	??_pollServos& (0+255),w,b
 27476   00154E  E11A               	bnz	l22203
 27477   001550  0100               	movlb	0	; () banked
 27478   001552  518E               	movf	(?_getNV+1)& (0+255),w,b
 27479   001554  0101               	movlb	1	; () banked
 27480   001556  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 27481   001558  A4D8               	btfss	status,2,c
 27482   00155A  D014               	goto	l22203
 27483                           
 27484                           ; BSR set to: 1
 27485                           ;../servo.c: 505:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27486   00155C  51DB               	movf	pollServos@io& (0+255),w,b
 27487   00155E  0D07               	mullw	7
 27488   001560  50F3               	movf	243,w,c
 27489   001562  0F11               	addlw	17
 27490   001564  ECB0  F05F         	call	_getNV
 27491   001568  0100               	movlb	0	; () banked
 27492   00156A  BD8D               	btfsc	?_getNV& (0+255),6,b
 27493   00156C  D002               	goto	u23140
 27494   00156E  0E01               	movlw	1
 27495   001570  D001               	goto	u23150
 27496   001572                     u23140:
 27497   001572  0E00               	movlw	0
 27498   001574                     u23150:
 27499   001574  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 27500   001576  0101               	movlb	1	; () banked
 27501   001578  51DB               	movf	pollServos@io& (0+255),w,b
 27502   00157A  0D04               	mullw	4
 27503   00157C  50F3               	movf	243,w,c
 27504   00157E  0F0A               	addlw	10
 27505   001580  EC42  F04C         	call	_sendProducedEvent
 27506   001584                     l22203:
 27507                           
 27508                           ;../servo.c: 507:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 27509   001584  0101               	movlb	1	; () banked
 27510   001586  51DB               	movf	pollServos@io& (0+255),w,b
 27511   001588  0D07               	mullw	7
 27512   00158A  50F3               	movf	243,w,c
 27513   00158C  0F16               	addlw	22
 27514   00158E  ECB0  F05F         	call	_getNV
 27515   001592  0E30               	movlw	low _currentPos
 27516   001594  0101               	movlb	1	; () banked
 27517   001596  25DB               	addwf	pollServos@io& (0+255),w,b
 27518   001598  6ED9               	movwf	fsr2l,c
 27519   00159A  6ADA               	clrf	fsr2h,c
 27520   00159C  0E01               	movlw	high _currentPos
 27521   00159E  22DA               	addwfc	fsr2h,f,c
 27522   0015A0  50DF               	movf	indf2,w,c
 27523   0015A2  6FD0               	movwf	??_pollServos& (0+255),b
 27524   0015A4  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27525   0015A6  0100               	movlb	0	; () banked
 27526   0015A8  518D               	movf	?_getNV& (0+255),w,b
 27527   0015AA  0101               	movlb	1	; () banked
 27528   0015AC  19D0               	xorwf	??_pollServos& (0+255),w,b
 27529   0015AE  E11A               	bnz	l22207
 27530   0015B0  0100               	movlb	0	; () banked
 27531   0015B2  518E               	movf	(?_getNV+1)& (0+255),w,b
 27532   0015B4  0101               	movlb	1	; () banked
 27533   0015B6  19D1               	xorwf	(??_pollServos+1)& (0+255),w,b
 27534   0015B8  A4D8               	btfss	status,2,c
 27535   0015BA  D014               	goto	l22207
 27536                           
 27537                           ; BSR set to: 1
 27538                           ;../servo.c: 508:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 27539   0015BC  51DB               	movf	pollServos@io& (0+255),w,b
 27540   0015BE  0D07               	mullw	7
 27541   0015C0  50F3               	movf	243,w,c
 27542   0015C2  0F11               	addlw	17
 27543   0015C4  ECB0  F05F         	call	_getNV
 27544   0015C8  0100               	movlb	0	; () banked
 27545   0015CA  BD8D               	btfsc	?_getNV& (0+255),6,b
 27546   0015CC  D002               	goto	u23170
 27547   0015CE  0E01               	movlw	1
 27548   0015D0  D001               	goto	u23180
 27549   0015D2                     u23170:
 27550   0015D2  0E00               	movlw	0
 27551   0015D4                     u23180:
 27552   0015D4  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 27553   0015D6  0101               	movlb	1	; () banked
 27554   0015D8  51DB               	movf	pollServos@io& (0+255),w,b
 27555   0015DA  0D04               	mullw	4
 27556   0015DC  50F3               	movf	243,w,c
 27557   0015DE  0F0B               	addlw	11
 27558   0015E0  EC42  F04C         	call	_sendProducedEvent
 27559   0015E4                     l22207:
 27560                           
 27561                           ;../servo.c: 510:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 27562   0015E4  0EDE               	movlw	222
 27563   0015E6  0101               	movlb	1	; () banked
 27564   0015E8  25DB               	addwf	pollServos@io& (0+255),w,b
 27565   0015EA  6FD0               	movwf	??_pollServos& (0+255),b
 27566   0015EC  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27567   0015EE  0E03               	movlw	3
 27568   0015F0  23D1               	addwfc	(??_pollServos+1)& (0+255),f,b
 27569   0015F2  C1D0  F0A4         	movff	??_pollServos,writeNVM@index
 27570   0015F6  C1D1  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 27571   0015FA  0100               	movlb	0	; () banked
 27572   0015FC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 27573   0015FE  0E30               	movlw	low _currentPos
 27574   001600  0101               	movlb	1	; () banked
 27575   001602  25DB               	addwf	pollServos@io& (0+255),w,b
 27576   001604  6ED9               	movwf	fsr2l,c
 27577   001606  6ADA               	clrf	fsr2h,c
 27578   001608  0E01               	movlw	high _currentPos
 27579   00160A  22DA               	addwfc	fsr2h,f,c
 27580   00160C  50DF               	movf	indf2,w,c
 27581   00160E  0100               	movlb	0	; () banked
 27582   001610  6FA7               	movwf	writeNVM@value& (0+255),b
 27583   001612  0E00               	movlw	0
 27584   001614  EC9F  F05D         	call	_writeNVM
 27585   001618  D0A1               	goto	l22231
 27586   00161A                     l22211:
 27587                           
 27588                           ; BSR set to: 0
 27589   00161A  0E10               	movlw	low _servoState
 27590   00161C  0101               	movlb	1	; () banked
 27591   00161E  25DB               	addwf	pollServos@io& (0+255),w,b
 27592   001620  6ED9               	movwf	fsr2l,c
 27593   001622  6ADA               	clrf	fsr2h,c
 27594   001624  0E01               	movlw	high _servoState
 27595   001626  22DA               	addwfc	fsr2h,f,c
 27596   001628  50DF               	movf	indf2,w,c
 27597   00162A  6FD0               	movwf	??_pollServos& (0+255),b
 27598   00162C  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27599                           
 27600                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27601                           ; Switch size 1, requested type "simple"
 27602                           ; Number of cases is 1, Range of values is 0 to 0
 27603                           ; switch strategies available:
 27604                           ; Name         Instructions Cycles
 27605                           ; simple_byte            4     3 (average)
 27606                           ;	Chosen strategy is simple_byte
 27607   00162E  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27608   001630  0A00               	xorlw	0	; case 0
 27609   001632  A4D8               	btfss	status,2,c
 27610   001634  D093               	goto	l22231
 27611                           
 27612                           ; BSR set to: 1
 27613                           ; Switch size 1, requested type "simple"
 27614                           ; Number of cases is 4, Range of values is 0 to 3
 27615                           ; switch strategies available:
 27616                           ; Name         Instructions Cycles
 27617                           ; simple_byte           13     7 (average)
 27618                           ;	Chosen strategy is simple_byte
 27619   001636  51D0               	movf	??_pollServos& (0+255),w,b
 27620   001638  0A00               	xorlw	0	; case 0
 27621   00163A  B4D8               	btfsc	status,2,c
 27622   00163C  D08F               	goto	l22231
 27623   00163E  0A01               	xorlw	1	; case 1
 27624   001640  B4D8               	btfsc	status,2,c
 27625   001642  D08C               	goto	l22231
 27626   001644  0A03               	xorlw	3	; case 2
 27627   001646  B4D8               	btfsc	status,2,c
 27628   001648  D5BF               	goto	l22147
 27629   00164A  0A01               	xorlw	1	; case 3
 27630   00164C  B4D8               	btfsc	status,2,c
 27631   00164E  D500               	goto	l22129
 27632   001650  D085               	goto	l22231
 27633   001652                     l22215:
 27634                           
 27635                           ; BSR set to: 1
 27636   001652  51DB               	movf	pollServos@io& (0+255),w,b
 27637   001654  0D07               	mullw	7
 27638   001656  50F3               	movf	243,w,c
 27639   001658  0F10               	addlw	16
 27640   00165A  ECB0  F05F         	call	_getNV
 27641                           
 27642                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27643                           ; Switch size 1, requested type "simple"
 27644                           ; Number of cases is 1, Range of values is 0 to 0
 27645                           ; switch strategies available:
 27646                           ; Name         Instructions Cycles
 27647                           ; simple_byte            4     3 (average)
 27648                           ;	Chosen strategy is simple_byte
 27649   00165E  0100               	movlb	0	; () banked
 27650   001660  518E               	movf	(?_getNV+1)& (0+255),w,b
 27651   001662  0A00               	xorlw	0	; case 0
 27652   001664  A4D8               	btfss	status,2,c
 27653   001666  D07A               	goto	l22231
 27654                           
 27655                           ; BSR set to: 0
 27656                           ; Switch size 1, requested type "simple"
 27657                           ; Number of cases is 3, Range of values is 2 to 4
 27658                           ; switch strategies available:
 27659                           ; Name         Instructions Cycles
 27660                           ; simple_byte           10     6 (average)
 27661                           ;	Chosen strategy is simple_byte
 27662   001668  518D               	movf	?_getNV& (0+255),w,b
 27663   00166A  0A02               	xorlw	2	; case 2
 27664   00166C  B4D8               	btfsc	status,2,c
 27665   00166E  EF2D  F004         	goto	l21983
 27666   001672  0A01               	xorlw	1	; case 3
 27667   001674  B4D8               	btfsc	status,2,c
 27668   001676  D4D0               	goto	l22127
 27669   001678  0A07               	xorlw	7	; case 4
 27670   00167A  B4D8               	btfsc	status,2,c
 27671   00167C  D7CE               	goto	l22211
 27672                           
 27673                           ; BSR set to: 1
 27674                           ;../servo.c: 519:         switch (getNV((16 + 7*(io) + 0))) {
 27675   00167E  D06E               	goto	l22231
 27676   001680                     l22217:
 27677                           
 27678                           ; BSR set to: 1
 27679                           ;../servo.c: 530:                         if (getNV((16 + 7*(io) + 1)) & 0x02) {
 27680   001680  51DB               	movf	pollServos@io& (0+255),w,b
 27681   001682  0D07               	mullw	7
 27682   001684  50F3               	movf	243,w,c
 27683   001686  0F11               	addlw	17
 27684   001688  ECB0  F05F         	call	_getNV
 27685   00168C  0100               	movlb	0	; () banked
 27686   00168E  A38D               	btfss	?_getNV& (0+255),1,b
 27687   001690  D07B               	goto	l22233
 27688                           
 27689                           ; BSR set to: 0
 27690                           ;../servo.c: 531:                             if ((tickGet() - ticksWhenStopped[io].val)
      +                           > 62500) {
 27691   001692  0101               	movlb	1	; () banked
 27692   001694  51DB               	movf	pollServos@io& (0+255),w,b
 27693   001696  0D04               	mullw	4
 27694   001698  0E88               	movlw	low _ticksWhenStopped
 27695   00169A  24F3               	addwf	243,w,c
 27696   00169C  6ED9               	movwf	fsr2l,c
 27697   00169E  0E03               	movlw	high _ticksWhenStopped
 27698   0016A0  20F4               	addwfc	prodh,w,c
 27699   0016A2  6EDA               	movwf	fsr2h,c
 27700   0016A4  CFDE F1D0          	movff	postinc2,??_pollServos
 27701   0016A8  CFDE F1D1          	movff	postinc2,??_pollServos+1
 27702   0016AC  CFDE F1D2          	movff	postinc2,??_pollServos+2
 27703   0016B0  CFDE F1D3          	movff	postinc2,??_pollServos+3
 27704   0016B4  EC23  F05C         	call	_tickGet	;wreg free
 27705   0016B8  0101               	movlb	1	; () banked
 27706   0016BA  51D0               	movf	??_pollServos& (0+255),w,b
 27707   0016BC  0100               	movlb	0	; () banked
 27708   0016BE  5D8D               	subwf	?_tickGet& (0+255),w,b
 27709   0016C0  0101               	movlb	1	; () banked
 27710   0016C2  6FD4               	movwf	(??_pollServos+4)& (0+255),b
 27711   0016C4  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27712   0016C6  0100               	movlb	0	; () banked
 27713   0016C8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 27714   0016CA  0101               	movlb	1	; () banked
 27715   0016CC  6FD5               	movwf	(??_pollServos+5)& (0+255),b
 27716   0016CE  51D2               	movf	(??_pollServos+2)& (0+255),w,b
 27717   0016D0  0100               	movlb	0	; () banked
 27718   0016D2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 27719   0016D4  0101               	movlb	1	; () banked
 27720   0016D6  6FD6               	movwf	(??_pollServos+6)& (0+255),b
 27721   0016D8  51D3               	movf	(??_pollServos+3)& (0+255),w,b
 27722   0016DA  0100               	movlb	0	; () banked
 27723   0016DC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 27724   0016DE  0101               	movlb	1	; () banked
 27725   0016E0  6FD7               	movwf	(??_pollServos+7)& (0+255),b
 27726   0016E2  51D7               	movf	(??_pollServos+7)& (0+255),w,b
 27727   0016E4  11D6               	iorwf	(??_pollServos+6)& (0+255),w,b
 27728   0016E6  E106               	bnz	u23200
 27729   0016E8  0E25               	movlw	37
 27730   0016EA  5DD4               	subwf	(??_pollServos+4)& (0+255),w,b
 27731   0016EC  0EF4               	movlw	244
 27732   0016EE  59D5               	subwfb	(??_pollServos+5)& (0+255),w,b
 27733   0016F0  A0D8               	btfss	status,0,c
 27734   0016F2  D04A               	goto	l22233
 27735   0016F4                     u23200:
 27736                           
 27737                           ; BSR set to: 1
 27738                           ;../servo.c: 532:                                 servoState[io] = SS_OFF;
 27739   0016F4  0E10               	movlw	low _servoState
 27740   0016F6  25DB               	addwf	pollServos@io& (0+255),w,b
 27741   0016F8  6ED9               	movwf	fsr2l,c
 27742   0016FA  6ADA               	clrf	fsr2h,c
 27743   0016FC  0E01               	movlw	high _servoState
 27744   0016FE  22DA               	addwfc	fsr2h,f,c
 27745   001700  6ADF               	clrf	indf2,c
 27746   001702  D042               	goto	l22233
 27747   001704                     l22223:
 27748                           
 27749                           ; BSR set to: 1
 27750                           ;../servo.c: 539:                         setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 
      +                          0x20));
 27751   001704  51DB               	movf	pollServos@io& (0+255),w,b
 27752   001706  0D07               	mullw	7
 27753   001708  50F3               	movf	243,w,c
 27754   00170A  0F11               	addlw	17
 27755   00170C  ECB0  F05F         	call	_getNV
 27756   001710  0100               	movlb	0	; () banked
 27757   001712  BB8D               	btfsc	?_getNV& (0+255),5,b
 27758   001714  D002               	goto	u23210
 27759   001716  0E01               	movlw	1
 27760   001718  D001               	goto	u23220
 27761   00171A                     u23210:
 27762   00171A  0E00               	movlw	0
 27763   00171C                     u23220:
 27764   00171C  6F91               	movwf	setOutputPin@state& (0+255),b
 27765   00171E  0101               	movlb	1	; () banked
 27766   001720  51DB               	movf	pollServos@io& (0+255),w,b
 27767   001722  EC9A  F037         	call	_setOutputPin
 27768                           
 27769                           ;../servo.c: 541:                         break;
 27770   001726  D030               	goto	l22233
 27771   001728                     l22227:
 27772                           
 27773                           ; BSR set to: 0
 27774   001728  0E10               	movlw	low _servoState
 27775   00172A  0101               	movlb	1	; () banked
 27776   00172C  25DB               	addwf	pollServos@io& (0+255),w,b
 27777   00172E  6ED9               	movwf	fsr2l,c
 27778   001730  6ADA               	clrf	fsr2h,c
 27779   001732  0E01               	movlw	high _servoState
 27780   001734  22DA               	addwfc	fsr2h,f,c
 27781   001736  50DF               	movf	indf2,w,c
 27782   001738  6FD0               	movwf	??_pollServos& (0+255),b
 27783   00173A  6BD1               	clrf	(??_pollServos+1)& (0+255),b
 27784                           
 27785                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27786                           ; Switch size 1, requested type "simple"
 27787                           ; Number of cases is 1, Range of values is 0 to 0
 27788                           ; switch strategies available:
 27789                           ; Name         Instructions Cycles
 27790                           ; simple_byte            4     3 (average)
 27791                           ;	Chosen strategy is simple_byte
 27792   00173C  51D1               	movf	(??_pollServos+1)& (0+255),w,b
 27793   00173E  0A00               	xorlw	0	; case 0
 27794   001740  A4D8               	btfss	status,2,c
 27795   001742  D022               	goto	l22233
 27796                           
 27797                           ; BSR set to: 1
 27798                           ; Switch size 1, requested type "simple"
 27799                           ; Number of cases is 4, Range of values is 0 to 3
 27800                           ; switch strategies available:
 27801                           ; Name         Instructions Cycles
 27802                           ; simple_byte           13     7 (average)
 27803                           ;	Chosen strategy is simple_byte
 27804   001744  51D0               	movf	??_pollServos& (0+255),w,b
 27805   001746  0A00               	xorlw	0	; case 0
 27806   001748  B4D8               	btfsc	status,2,c
 27807   00174A  D7DC               	goto	l22223
 27808   00174C  0A01               	xorlw	1	; case 1
 27809   00174E  B4D8               	btfsc	status,2,c
 27810   001750  D797               	goto	l22217
 27811   001752  0A03               	xorlw	3	; case 2
 27812   001754  B4D8               	btfsc	status,2,c
 27813   001756  D018               	goto	l22233
 27814   001758  0A01               	xorlw	1	; case 3
 27815                           
 27816                           ; BSR set to: 1
 27817                           ;../servo.c: 543:                 break;
 27818   00175A  D016               	goto	l22233
 27819   00175C                     l22231:
 27820   00175C  0101               	movlb	1	; () banked
 27821   00175E  51DB               	movf	pollServos@io& (0+255),w,b
 27822   001760  0D07               	mullw	7
 27823   001762  50F3               	movf	243,w,c
 27824   001764  0F10               	addlw	16
 27825   001766  ECB0  F05F         	call	_getNV
 27826                           
 27827                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27828                           ; Switch size 1, requested type "simple"
 27829                           ; Number of cases is 1, Range of values is 0 to 0
 27830                           ; switch strategies available:
 27831                           ; Name         Instructions Cycles
 27832                           ; simple_byte            4     3 (average)
 27833                           ;	Chosen strategy is simple_byte
 27834   00176A  0100               	movlb	0	; () banked
 27835   00176C  518E               	movf	(?_getNV+1)& (0+255),w,b
 27836   00176E  0A00               	xorlw	0	; case 0
 27837   001770  A4D8               	btfss	status,2,c
 27838   001772  D00A               	goto	l22233
 27839                           
 27840                           ; BSR set to: 0
 27841                           ; Switch size 1, requested type "simple"
 27842                           ; Number of cases is 3, Range of values is 2 to 4
 27843                           ; switch strategies available:
 27844                           ; Name         Instructions Cycles
 27845                           ; simple_byte           10     6 (average)
 27846                           ;	Chosen strategy is simple_byte
 27847   001774  518D               	movf	?_getNV& (0+255),w,b
 27848   001776  0A02               	xorlw	2	; case 2
 27849   001778  B4D8               	btfsc	status,2,c
 27850   00177A  D7D6               	goto	l22227
 27851   00177C  0A01               	xorlw	1	; case 3
 27852   00177E  B4D8               	btfsc	status,2,c
 27853   001780  D7D3               	goto	l22227
 27854   001782  0A07               	xorlw	7	; case 4
 27855   001784  B4D8               	btfsc	status,2,c
 27856   001786  D7D0               	goto	l22227
 27857   001788                     l22233:
 27858                           
 27859                           ;../servo.c: 545:     }
 27860   001788  0101               	movlb	1	; () banked
 27861   00178A  2BDB               	incf	pollServos@io& (0+255),f,b
 27862                           
 27863                           ; BSR set to: 1
 27864   00178C  0E0F               	movlw	15
 27865   00178E  65DB               	cpfsgt	pollServos@io& (0+255),b
 27866   001790  D760               	goto	l22215
 27867   001792  0012               	return	
 27868   001794                     __end_of_pollServos:
 27869                           	callstack 0
 27870                           
 27871 ;; *************** function _initBounce *****************
 27872 ;; Defined at:
 27873 ;;		line 89 in file "../bounce.c"
 27874 ;; Parameters:    Size  Location     Type
 27875 ;;  io              1    wreg     unsigned char 
 27876 ;; Auto vars:     Size  Location     Type
 27877 ;;  io              1   45[BANK0 ] unsigned char 
 27878 ;; Return value:  Size  Location     Type
 27879 ;;                  1    wreg      void 
 27880 ;; Registers used:
 27881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27882 ;; Tracked objects:
 27883 ;;		On entry : 0/0
 27884 ;;		On exit  : 0/0
 27885 ;;		Unchanged: 0/0
 27886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27888 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27890 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27891 ;;Total ram usage:        1 bytes
 27892 ;; Hardware stack levels used: 1
 27893 ;; Hardware stack levels required when called: 12
 27894 ;; This function calls:
 27895 ;;		Nothing
 27896 ;; This function is called by:
 27897 ;;		_pollServos
 27898 ;; This function uses a non-reentrant model
 27899 ;;
 27900                           
 27901                           	psect	text101
 27902   00C3E4                     __ptext101:
 27903                           	callstack 0
 27904   00C3E4                     _initBounce:
 27905                           	callstack 15
 27906                           
 27907                           ; BSR set to: 1
 27908                           ;incstack = 0
 27909                           ;initBounce@io stored from wreg
 27910   00C3E4  0100               	movlb	0	; () banked
 27911   00C3E6  6F8D               	movwf	initBounce@io& (0+255),b
 27912                           
 27913                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 27914   00C3E8  0E44               	movlw	low _bounceState
 27915   00C3EA  0100               	movlb	0	; () banked
 27916   00C3EC  258D               	addwf	initBounce@io& (0+255),w,b
 27917   00C3EE  6ED9               	movwf	fsr2l,c
 27918   00C3F0  6ADA               	clrf	fsr2h,c
 27919   00C3F2  0E02               	movlw	high _bounceState
 27920   00C3F4  22DA               	addwfc	fsr2h,f,c
 27921   00C3F6  6ADF               	clrf	indf2,c
 27922                           
 27923                           ; BSR set to: 0
 27924                           ;../bounce.c: 91:     speed[io] = 0;
 27925   00C3F8  518D               	movf	initBounce@io& (0+255),w,b
 27926   00C3FA  0D02               	mullw	2
 27927   00C3FC  0E00               	movlw	low _speed
 27928   00C3FE  24F3               	addwf	243,w,c
 27929   00C400  6ED9               	movwf	fsr2l,c
 27930   00C402  0E02               	movlw	high _speed
 27931   00C404  20F4               	addwfc	prodh,w,c
 27932   00C406  6EDA               	movwf	fsr2h,c
 27933   00C408  6ADE               	clrf	postinc2,c
 27934   00C40A  6ADD               	clrf	postdec2,c
 27935                           
 27936                           ; BSR set to: 0
 27937   00C40C  0012               	return		;funcret
 27938   00C40E                     __end_of_initBounce:
 27939                           	callstack 0
 27940                           
 27941 ;; *************** function _bounceUp *****************
 27942 ;; Defined at:
 27943 ;;		line 161 in file "../bounce.c"
 27944 ;; Parameters:    Size  Location     Type
 27945 ;;  io              1    wreg     unsigned char 
 27946 ;; Auto vars:     Size  Location     Type
 27947 ;;  io              1   71[BANK0 ] unsigned char 
 27948 ;;  midway          1   70[BANK0 ] unsigned char 
 27949 ;;  reversed        1   69[BANK0 ] enum E12716
 27950 ;; Return value:  Size  Location     Type
 27951 ;;                  1    wreg      enum E12716
 27952 ;; Registers used:
 27953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27954 ;; Tracked objects:
 27955 ;;		On entry : 0/0
 27956 ;;		On exit  : 0/0
 27957 ;;		Unchanged: 0/0
 27958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27960 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27961 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27962 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27963 ;;Total ram usage:        9 bytes
 27964 ;; Hardware stack levels used: 1
 27965 ;; Hardware stack levels required when called: 13
 27966 ;; This function calls:
 27967 ;;		___awdiv
 27968 ;;		_getNV
 27969 ;; This function is called by:
 27970 ;;		_pollServos
 27971 ;; This function uses a non-reentrant model
 27972 ;;
 27973                           
 27974                           	psect	text102
 27975   005976                     __ptext102:
 27976                           	callstack 0
 27977   005976                     _bounceUp:
 27978                           	callstack 14
 27979                           
 27980                           ; BSR set to: 0
 27981                           ;incstack = 0
 27982                           ;bounceUp@io stored from wreg
 27983   005976  0100               	movlb	0	; () banked
 27984   005978  6FA7               	movwf	bounceUp@io& (0+255),b
 27985                           
 27986                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 27987   00597A  0100               	movlb	0	; () banked
 27988   00597C  51A7               	movf	bounceUp@io& (0+255),w,b
 27989   00597E  0D07               	mullw	7
 27990   005980  50F3               	movf	243,w,c
 27991   005982  0F12               	addlw	18
 27992   005984  ECB0  F05F         	call	_getNV
 27993   005988  C08D  F09F         	movff	?_getNV,??_bounceUp
 27994   00598C  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 27995   005990  0100               	movlb	0	; () banked
 27996   005992  51A7               	movf	bounceUp@io& (0+255),w,b
 27997   005994  0D07               	mullw	7
 27998   005996  50F3               	movf	243,w,c
 27999   005998  0F13               	addlw	19
 28000   00599A  ECB0  F05F         	call	_getNV
 28001   00599E  0100               	movlb	0	; () banked
 28002   0059A0  518D               	movf	?_getNV& (0+255),w,b
 28003   0059A2  5D9F               	subwf	??_bounceUp& (0+255),w,b
 28004   0059A4  B0D8               	btfsc	status,0,c
 28005   0059A6  D002               	goto	u21660
 28006   0059A8  0E01               	movlw	1
 28007   0059AA  D001               	goto	u21670
 28008   0059AC                     u21660:
 28009   0059AC  0E00               	movlw	0
 28010   0059AE                     u21670:
 28011   0059AE  6FA5               	movwf	bounceUp@reversed& (0+255),b
 28012                           
 28013                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 28014   0059B0  D116               	goto	l21097
 28015   0059B2                     l21047:
 28016                           
 28017                           ; BSR set to: 0
 28018                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 28019   0059B2  51A7               	movf	bounceUp@io& (0+255),w,b
 28020   0059B4  0D07               	mullw	7
 28021   0059B6  50F3               	movf	243,w,c
 28022   0059B8  0F12               	addlw	18
 28023   0059BA  ECB0  F05F         	call	_getNV
 28024   0059BE  0100               	movlb	0	; () banked
 28025   0059C0  518D               	movf	?_getNV& (0+255),w,b
 28026   0059C2  6F97               	movwf	___awdiv@dividend& (0+255),b
 28027   0059C4  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28028   0059C6  0E00               	movlw	0
 28029   0059C8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28030   0059CA  0E02               	movlw	2
 28031   0059CC  6F99               	movwf	___awdiv@divisor& (0+255),b
 28032   0059CE  EC59  F054         	call	___awdiv	;wreg free
 28033   0059D2  C097  F09F         	movff	?___awdiv,??_bounceUp
 28034   0059D6  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 28035   0059DA  0100               	movlb	0	; () banked
 28036   0059DC  51A7               	movf	bounceUp@io& (0+255),w,b
 28037   0059DE  0D07               	mullw	7
 28038   0059E0  50F3               	movf	243,w,c
 28039   0059E2  0F13               	addlw	19
 28040   0059E4  ECB0  F05F         	call	_getNV
 28041   0059E8  0100               	movlb	0	; () banked
 28042   0059EA  518D               	movf	?_getNV& (0+255),w,b
 28043   0059EC  6F97               	movwf	___awdiv@dividend& (0+255),b
 28044   0059EE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28045   0059F0  0E00               	movlw	0
 28046   0059F2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28047   0059F4  0E02               	movlw	2
 28048   0059F6  6F99               	movwf	___awdiv@divisor& (0+255),b
 28049   0059F8  EC59  F054         	call	___awdiv	;wreg free
 28050   0059FC  0100               	movlb	0	; () banked
 28051   0059FE  5197               	movf	?___awdiv& (0+255),w,b
 28052   005A00  259F               	addwf	??_bounceUp& (0+255),w,b
 28053   005A02  6FA6               	movwf	bounceUp@midway& (0+255),b
 28054                           
 28055                           ; BSR set to: 0
 28056                           ;../bounce.c: 169:         if (reversed) {
 28057   005A04  51A5               	movf	bounceUp@reversed& (0+255),w,b
 28058   005A06  B4D8               	btfsc	status,2,c
 28059   005A08  D028               	goto	l21059
 28060                           
 28061                           ; BSR set to: 0
 28062                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 28063   005A0A  51A7               	movf	bounceUp@io& (0+255),w,b
 28064   005A0C  0D07               	mullw	7
 28065   005A0E  50F3               	movf	243,w,c
 28066   005A10  0F15               	addlw	21
 28067   005A12  ECB0  F05F         	call	_getNV
 28068   005A16  0E30               	movlw	low _currentPos
 28069   005A18  0100               	movlb	0	; () banked
 28070   005A1A  25A7               	addwf	bounceUp@io& (0+255),w,b
 28071   005A1C  6ED9               	movwf	fsr2l,c
 28072   005A1E  6ADA               	clrf	fsr2h,c
 28073   005A20  0E01               	movlw	high _currentPos
 28074   005A22  22DA               	addwfc	fsr2h,f,c
 28075   005A24  518D               	movf	?_getNV& (0+255),w,b
 28076   005A26  5EDF               	subwf	indf2,f,c
 28077                           
 28078                           ; BSR set to: 0
 28079                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 28080   005A28  0E30               	movlw	low _currentPos
 28081   005A2A  25A7               	addwf	bounceUp@io& (0+255),w,b
 28082   005A2C  6ED9               	movwf	fsr2l,c
 28083   005A2E  6ADA               	clrf	fsr2h,c
 28084   005A30  0E01               	movlw	high _currentPos
 28085   005A32  22DA               	addwfc	fsr2h,f,c
 28086   005A34  50DE               	movf	postinc2,w,c
 28087   005A36  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 28088   005A38  A0D8               	btfss	status,0,c
 28089   005A3A  D0E9               	goto	l21099
 28090                           
 28091                           ; BSR set to: 0
 28092                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 28093   005A3C  0E44               	movlw	low _bounceState
 28094   005A3E  25A7               	addwf	bounceUp@io& (0+255),w,b
 28095   005A40  6ED9               	movwf	fsr2l,c
 28096   005A42  6ADA               	clrf	fsr2h,c
 28097   005A44  0E02               	movlw	high _bounceState
 28098   005A46  22DA               	addwfc	fsr2h,f,c
 28099   005A48  0E01               	movlw	1
 28100   005A4A  6EDF               	movwf	indf2,c
 28101                           
 28102                           ; BSR set to: 0
 28103                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 28104   005A4C  51A7               	movf	bounceUp@io& (0+255),w,b
 28105   005A4E  0D07               	mullw	7
 28106   005A50  50F3               	movf	243,w,c
 28107   005A52  0F16               	addlw	22
 28108   005A54  ECB0  F05F         	call	_getNV
 28109   005A58  D027               	goto	L7
 28110   005A5A                     l21059:
 28111                           
 28112                           ; BSR set to: 0
 28113                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 28114   005A5A  51A7               	movf	bounceUp@io& (0+255),w,b
 28115   005A5C  0D07               	mullw	7
 28116   005A5E  50F3               	movf	243,w,c
 28117   005A60  0F15               	addlw	21
 28118   005A62  ECB0  F05F         	call	_getNV
 28119   005A66  0E30               	movlw	low _currentPos
 28120   005A68  0100               	movlb	0	; () banked
 28121   005A6A  25A7               	addwf	bounceUp@io& (0+255),w,b
 28122   005A6C  6ED9               	movwf	fsr2l,c
 28123   005A6E  6ADA               	clrf	fsr2h,c
 28124   005A70  0E01               	movlw	high _currentPos
 28125   005A72  22DA               	addwfc	fsr2h,f,c
 28126   005A74  518D               	movf	?_getNV& (0+255),w,b
 28127   005A76  26DF               	addwf	indf2,f,c
 28128                           
 28129                           ; BSR set to: 0
 28130                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 28131   005A78  0E30               	movlw	low _currentPos
 28132   005A7A  25A7               	addwf	bounceUp@io& (0+255),w,b
 28133   005A7C  6ED9               	movwf	fsr2l,c
 28134   005A7E  6ADA               	clrf	fsr2h,c
 28135   005A80  0E01               	movlw	high _currentPos
 28136   005A82  22DA               	addwfc	fsr2h,f,c
 28137   005A84  51A6               	movf	bounceUp@midway& (0+255),w,b
 28138   005A86  5CDE               	subwf	postinc2,w,c
 28139   005A88  A0D8               	btfss	status,0,c
 28140   005A8A  D0C1               	goto	l21099
 28141                           
 28142                           ; BSR set to: 0
 28143                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 28144   005A8C  0E44               	movlw	low _bounceState
 28145   005A8E  25A7               	addwf	bounceUp@io& (0+255),w,b
 28146   005A90  6ED9               	movwf	fsr2l,c
 28147   005A92  6ADA               	clrf	fsr2h,c
 28148   005A94  0E02               	movlw	high _bounceState
 28149   005A96  22DA               	addwfc	fsr2h,f,c
 28150   005A98  0E01               	movlw	1
 28151   005A9A  6EDF               	movwf	indf2,c
 28152                           
 28153                           ; BSR set to: 0
 28154                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 28155   005A9C  51A7               	movf	bounceUp@io& (0+255),w,b
 28156   005A9E  0D07               	mullw	7
 28157   005AA0  50F3               	movf	243,w,c
 28158   005AA2  0F16               	addlw	22
 28159   005AA4  ECB0  F05F         	call	_getNV
 28160   005AA8                     L7:
 28161   005AA8  0100               	movlb	0	; () banked
 28162   005AAA  518D               	movf	?_getNV& (0+255),w,b
 28163   005AAC  6F9F               	movwf	??_bounceUp& (0+255),b
 28164   005AAE  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28165   005AB0  51A7               	movf	bounceUp@io& (0+255),w,b
 28166   005AB2  0D02               	mullw	2
 28167   005AB4  0E00               	movlw	low _speed
 28168   005AB6  24F3               	addwf	243,w,c
 28169   005AB8  6ED9               	movwf	fsr2l,c
 28170   005ABA  0E02               	movlw	high _speed
 28171   005ABC  20F4               	addwfc	prodh,w,c
 28172   005ABE  6EDA               	movwf	fsr2h,c
 28173   005AC0  C09F  FFDE         	movff	??_bounceUp,postinc2
 28174   005AC4  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 28175   005AC8  D0A2               	goto	l21099
 28176   005ACA                     l21067:
 28177                           
 28178                           ; BSR set to: 0
 28179                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 28180   005ACA  51A7               	movf	bounceUp@io& (0+255),w,b
 28181   005ACC  0D02               	mullw	2
 28182   005ACE  0E00               	movlw	low _speed
 28183   005AD0  24F3               	addwf	243,w,c
 28184   005AD2  6ED9               	movwf	fsr2l,c
 28185   005AD4  0E02               	movlw	high _speed
 28186   005AD6  20F4               	addwfc	prodh,w,c
 28187   005AD8  6EDA               	movwf	fsr2h,c
 28188   005ADA  50DE               	movf	postinc2,w,c
 28189   005ADC  10DE               	iorwf	postinc2,w,c
 28190   005ADE  A4D8               	btfss	status,2,c
 28191   005AE0  D008               	goto	l21071
 28192                           
 28193                           ; BSR set to: 0
 28194   005AE2  0E44               	movlw	low _bounceState
 28195   005AE4  25A7               	addwf	bounceUp@io& (0+255),w,b
 28196   005AE6  6ED9               	movwf	fsr2l,c
 28197   005AE8  6ADA               	clrf	fsr2h,c
 28198   005AEA  0E02               	movlw	high _bounceState
 28199   005AEC  22DA               	addwfc	fsr2h,f,c
 28200   005AEE  0E02               	movlw	2
 28201   005AF0  6EDF               	movwf	indf2,c
 28202   005AF2                     l21071:
 28203                           
 28204                           ; BSR set to: 0
 28205                           ;../bounce.c: 186:         speed[io]--;
 28206   005AF2  51A7               	movf	bounceUp@io& (0+255),w,b
 28207   005AF4  0D02               	mullw	2
 28208   005AF6  0E00               	movlw	low _speed
 28209   005AF8  24F3               	addwf	243,w,c
 28210   005AFA  6ED9               	movwf	fsr2l,c
 28211   005AFC  0E02               	movlw	high _speed
 28212   005AFE  20F4               	addwfc	prodh,w,c
 28213   005B00  6EDA               	movwf	fsr2h,c
 28214   005B02  06DE               	decf	postinc2,f,c
 28215   005B04  0E00               	movlw	0
 28216   005B06  5ADD               	subwfb	postdec2,f,c
 28217                           
 28218                           ;../bounce.c: 187:         break;
 28219   005B08  D082               	goto	l21099
 28220   005B0A                     l21073:
 28221                           
 28222                           ; BSR set to: 0
 28223                           ;../bounce.c: 190:         if (reversed) {
 28224   005B0A  51A5               	movf	bounceUp@reversed& (0+255),w,b
 28225   005B0C  B4D8               	btfsc	status,2,c
 28226   005B0E  D038               	goto	l21085
 28227                           
 28228                           ; BSR set to: 0
 28229                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 28230   005B10  51A7               	movf	bounceUp@io& (0+255),w,b
 28231   005B12  0D07               	mullw	7
 28232   005B14  50F3               	movf	243,w,c
 28233   005B16  0F15               	addlw	21
 28234   005B18  ECB0  F05F         	call	_getNV
 28235   005B1C  0E30               	movlw	low _currentPos
 28236   005B1E  0100               	movlb	0	; () banked
 28237   005B20  25A7               	addwf	bounceUp@io& (0+255),w,b
 28238   005B22  6ED9               	movwf	fsr2l,c
 28239   005B24  6ADA               	clrf	fsr2h,c
 28240   005B26  0E01               	movlw	high _currentPos
 28241   005B28  22DA               	addwfc	fsr2h,f,c
 28242   005B2A  518D               	movf	?_getNV& (0+255),w,b
 28243   005B2C  5EDF               	subwf	indf2,f,c
 28244                           
 28245                           ; BSR set to: 0
 28246                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 28247   005B2E  0E30               	movlw	low _currentPos
 28248   005B30  25A7               	addwf	bounceUp@io& (0+255),w,b
 28249   005B32  6ED9               	movwf	fsr2l,c
 28250   005B34  6ADA               	clrf	fsr2h,c
 28251   005B36  0E01               	movlw	high _currentPos
 28252   005B38  22DA               	addwfc	fsr2h,f,c
 28253   005B3A  50DF               	movf	indf2,w,c
 28254   005B3C  6F9F               	movwf	??_bounceUp& (0+255),b
 28255   005B3E  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28256   005B40  51A7               	movf	bounceUp@io& (0+255),w,b
 28257   005B42  0F01               	addlw	low _targetPos
 28258   005B44  6ED9               	movwf	fsr2l,c
 28259   005B46  6ADA               	clrf	fsr2h,c
 28260   005B48  50DF               	movf	indf2,w,c
 28261   005B4A  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 28262   005B4C  0EFD               	movlw	253
 28263   005B4E  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 28264   005B50  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 28265   005B52  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 28266   005B54  0EFF               	movlw	255
 28267   005B56  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 28268   005B58  519F               	movf	??_bounceUp& (0+255),w,b
 28269   005B5A  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 28270   005B5C  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 28271   005B5E  0A80               	xorlw	128
 28272   005B60  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 28273   005B62  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28274   005B64  0A80               	xorlw	128
 28275   005B66  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 28276   005B68  A0D8               	btfss	status,0,c
 28277   005B6A  D051               	goto	l21099
 28278   005B6C                     u21730:
 28279                           
 28280                           ; BSR set to: 0
 28281                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 28282   005B6C  0E44               	movlw	low _bounceState
 28283   005B6E  25A7               	addwf	bounceUp@io& (0+255),w,b
 28284   005B70  6ED9               	movwf	fsr2l,c
 28285   005B72  6ADA               	clrf	fsr2h,c
 28286   005B74  0E02               	movlw	high _bounceState
 28287   005B76  22DA               	addwfc	fsr2h,f,c
 28288   005B78  0E03               	movlw	3
 28289   005B7A  6EDF               	movwf	indf2,c
 28290                           
 28291                           ; BSR set to: 0
 28292                           ;../bounce.c: 194:                 return TRUE;
 28293   005B7C  0E01               	movlw	1
 28294   005B7E  0012               	return	
 28295   005B80                     l21085:
 28296                           
 28297                           ; BSR set to: 0
 28298                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 28299   005B80  51A7               	movf	bounceUp@io& (0+255),w,b
 28300   005B82  0D07               	mullw	7
 28301   005B84  50F3               	movf	243,w,c
 28302   005B86  0F15               	addlw	21
 28303   005B88  ECB0  F05F         	call	_getNV
 28304   005B8C  0E30               	movlw	low _currentPos
 28305   005B8E  0100               	movlb	0	; () banked
 28306   005B90  25A7               	addwf	bounceUp@io& (0+255),w,b
 28307   005B92  6ED9               	movwf	fsr2l,c
 28308   005B94  6ADA               	clrf	fsr2h,c
 28309   005B96  0E01               	movlw	high _currentPos
 28310   005B98  22DA               	addwfc	fsr2h,f,c
 28311   005B9A  518D               	movf	?_getNV& (0+255),w,b
 28312   005B9C  26DF               	addwf	indf2,f,c
 28313                           
 28314                           ; BSR set to: 0
 28315                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 28316   005B9E  51A7               	movf	bounceUp@io& (0+255),w,b
 28317   005BA0  0F01               	addlw	low _targetPos
 28318   005BA2  6ED9               	movwf	fsr2l,c
 28319   005BA4  6ADA               	clrf	fsr2h,c
 28320   005BA6  50DF               	movf	indf2,w,c
 28321   005BA8  6F9F               	movwf	??_bounceUp& (0+255),b
 28322   005BAA  0EFD               	movlw	253
 28323   005BAC  259F               	addwf	??_bounceUp& (0+255),w,b
 28324   005BAE  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 28325   005BB0  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 28326   005BB2  0EFF               	movlw	255
 28327   005BB4  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 28328   005BB6  0E30               	movlw	low _currentPos
 28329   005BB8  25A7               	addwf	bounceUp@io& (0+255),w,b
 28330   005BBA  6ED9               	movwf	fsr2l,c
 28331   005BBC  6ADA               	clrf	fsr2h,c
 28332   005BBE  0E01               	movlw	high _currentPos
 28333   005BC0  22DA               	addwfc	fsr2h,f,c
 28334   005BC2  50DF               	movf	indf2,w,c
 28335   005BC4  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 28336   005BC6  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 28337   005BC8  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28338   005BCA  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 28339   005BCC  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 28340   005BCE  0A80               	xorlw	128
 28341   005BD0  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 28342   005BD2  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 28343   005BD4  0A80               	xorlw	128
 28344   005BD6  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 28345   005BD8  B0D8               	btfsc	status,0,c
 28346   005BDA  D7C8               	goto	u21730
 28347   005BDC  D018               	goto	l21099
 28348   005BDE                     l21097:
 28349                           
 28350                           ; BSR set to: 0
 28351   005BDE  0E44               	movlw	low _bounceState
 28352   005BE0  25A7               	addwf	bounceUp@io& (0+255),w,b
 28353   005BE2  6ED9               	movwf	fsr2l,c
 28354   005BE4  6ADA               	clrf	fsr2h,c
 28355   005BE6  0E02               	movlw	high _bounceState
 28356   005BE8  22DA               	addwfc	fsr2h,f,c
 28357   005BEA  50DF               	movf	indf2,w,c
 28358   005BEC  6F9F               	movwf	??_bounceUp& (0+255),b
 28359   005BEE  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 28360                           
 28361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 28362                           ; Switch size 1, requested type "simple"
 28363                           ; Number of cases is 1, Range of values is 0 to 0
 28364                           ; switch strategies available:
 28365                           ; Name         Instructions Cycles
 28366                           ; simple_byte            4     3 (average)
 28367                           ;	Chosen strategy is simple_byte
 28368   005BF0  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 28369   005BF2  0A00               	xorlw	0	; case 0
 28370   005BF4  A4D8               	btfss	status,2,c
 28371   005BF6  D00B               	goto	l21099
 28372                           
 28373                           ; BSR set to: 0
 28374                           ; Switch size 1, requested type "simple"
 28375                           ; Number of cases is 4, Range of values is 0 to 3
 28376                           ; switch strategies available:
 28377                           ; Name         Instructions Cycles
 28378                           ; simple_byte           13     7 (average)
 28379                           ;	Chosen strategy is simple_byte
 28380   005BF8  519F               	movf	??_bounceUp& (0+255),w,b
 28381   005BFA  0A00               	xorlw	0	; case 0
 28382   005BFC  B4D8               	btfsc	status,2,c
 28383   005BFE  D6D9               	goto	l21047
 28384   005C00  0A01               	xorlw	1	; case 1
 28385   005C02  B4D8               	btfsc	status,2,c
 28386   005C04  D762               	goto	l21067
 28387   005C06  0A03               	xorlw	3	; case 2
 28388   005C08  B4D8               	btfsc	status,2,c
 28389   005C0A  D77F               	goto	l21073
 28390   005C0C  0A01               	xorlw	1	; case 3
 28391   005C0E                     l21099:
 28392                           
 28393                           ; BSR set to: 0
 28394                           ;../bounce.c: 207:     return FALSE;
 28395   005C0E  0E00               	movlw	0
 28396                           
 28397                           ; BSR set to: 0
 28398   005C10  0012               	return		;funcret
 28399   005C12                     __end_of_bounceUp:
 28400                           	callstack 0
 28401                           
 28402 ;; *************** function _bounceDown *****************
 28403 ;; Defined at:
 28404 ;;		line 103 in file "../bounce.c"
 28405 ;; Parameters:    Size  Location     Type
 28406 ;;  io              1    wreg     unsigned char 
 28407 ;; Auto vars:     Size  Location     Type
 28408 ;;  io              1   73[BANK0 ] unsigned char 
 28409 ;;  tmp             2   71[BANK0 ] int 
 28410 ;;  reversed        1   70[BANK0 ] enum E12716
 28411 ;; Return value:  Size  Location     Type
 28412 ;;                  1    wreg      enum E12716
 28413 ;; Registers used:
 28414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28415 ;; Tracked objects:
 28416 ;;		On entry : 0/0
 28417 ;;		On exit  : 0/0
 28418 ;;		Unchanged: 0/0
 28419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28421 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28422 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28423 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28424 ;;Total ram usage:       11 bytes
 28425 ;; Hardware stack levels used: 1
 28426 ;; Hardware stack levels required when called: 13
 28427 ;; This function calls:
 28428 ;;		___awdiv
 28429 ;;		___wmul
 28430 ;;		_getNV
 28431 ;; This function is called by:
 28432 ;;		_pollServos
 28433 ;; This function uses a non-reentrant model
 28434 ;;
 28435                           
 28436                           	psect	text103
 28437   002DF6                     __ptext103:
 28438                           	callstack 0
 28439   002DF6                     _bounceDown:
 28440                           	callstack 14
 28441                           
 28442                           ; BSR set to: 0
 28443                           ;incstack = 0
 28444                           ;bounceDown@io stored from wreg
 28445   002DF6  0100               	movlb	0	; () banked
 28446   002DF8  6FA9               	movwf	bounceDown@io& (0+255),b
 28447                           
 28448                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 28449   002DFA  0E30               	movlw	low _currentPos
 28450   002DFC  0100               	movlb	0	; () banked
 28451   002DFE  25A9               	addwf	bounceDown@io& (0+255),w,b
 28452   002E00  6ED9               	movwf	fsr2l,c
 28453   002E02  6ADA               	clrf	fsr2h,c
 28454   002E04  0E01               	movlw	high _currentPos
 28455   002E06  22DA               	addwfc	fsr2h,f,c
 28456   002E08  50DF               	movf	indf2,w,c
 28457   002E0A  6F9F               	movwf	??_bounceDown& (0+255),b
 28458   002E0C  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28459   002E0E  51A9               	movf	bounceDown@io& (0+255),w,b
 28460   002E10  0F01               	addlw	low _targetPos
 28461   002E12  6ED9               	movwf	fsr2l,c
 28462   002E14  6ADA               	clrf	fsr2h,c
 28463   002E16  50DF               	movf	indf2,w,c
 28464   002E18  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28465   002E1A  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 28466   002E1C  0E03               	movlw	3
 28467   002E1E  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 28468   002E20  0E00               	movlw	0
 28469   002E22  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 28470   002E24  519F               	movf	??_bounceDown& (0+255),w,b
 28471   002E26  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28472   002E28  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28473   002E2A  0A80               	xorlw	128
 28474   002E2C  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28475   002E2E  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28476   002E30  0A80               	xorlw	128
 28477   002E32  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 28478   002E34  A0D8               	btfss	status,0,c
 28479   002E36  D042               	goto	u21780
 28480                           
 28481                           ; BSR set to: 0
 28482   002E38  51A9               	movf	bounceDown@io& (0+255),w,b
 28483   002E3A  0F01               	addlw	low _targetPos
 28484   002E3C  6ED9               	movwf	fsr2l,c
 28485   002E3E  6ADA               	clrf	fsr2h,c
 28486   002E40  50DF               	movf	indf2,w,c
 28487   002E42  6F9F               	movwf	??_bounceDown& (0+255),b
 28488   002E44  0EFD               	movlw	253
 28489   002E46  259F               	addwf	??_bounceDown& (0+255),w,b
 28490   002E48  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 28491   002E4A  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 28492   002E4C  0EFF               	movlw	255
 28493   002E4E  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 28494   002E50  0E30               	movlw	low _currentPos
 28495   002E52  25A9               	addwf	bounceDown@io& (0+255),w,b
 28496   002E54  6ED9               	movwf	fsr2l,c
 28497   002E56  6ADA               	clrf	fsr2h,c
 28498   002E58  0E01               	movlw	high _currentPos
 28499   002E5A  22DA               	addwfc	fsr2h,f,c
 28500   002E5C  50DF               	movf	indf2,w,c
 28501   002E5E  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28502   002E60  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 28503   002E62  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28504   002E64  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 28505   002E66  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28506   002E68  0A80               	xorlw	128
 28507   002E6A  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 28508   002E6C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28509   002E6E  0A80               	xorlw	128
 28510   002E70  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 28511   002E72  A0D8               	btfss	status,0,c
 28512   002E74  D023               	goto	u21780
 28513                           
 28514                           ; BSR set to: 0
 28515   002E76  51A9               	movf	bounceDown@io& (0+255),w,b
 28516   002E78  0D02               	mullw	2
 28517   002E7A  0E00               	movlw	low _speed
 28518   002E7C  24F3               	addwf	243,w,c
 28519   002E7E  6ED9               	movwf	fsr2l,c
 28520   002E80  0E02               	movlw	high _speed
 28521   002E82  20F4               	addwfc	prodh,w,c
 28522   002E84  6EDA               	movwf	fsr2h,c
 28523   002E86  0E01               	movlw	1
 28524   002E88  BEDB               	btfsc	plusw2,7,c
 28525   002E8A  D007               	goto	u21770
 28526   002E8C  0E01               	movlw	1
 28527   002E8E  50DB               	movf	plusw2,w,c
 28528   002E90  E115               	bnz	l21115
 28529   002E92  0E04               	movlw	4
 28530   002E94  5CDE               	subwf	postinc2,w,c
 28531   002E96  B0D8               	btfsc	status,0,c
 28532   002E98  D011               	goto	u21780
 28533   002E9A                     u21770:
 28534                           
 28535                           ; BSR set to: 0
 28536   002E9A  51A9               	movf	bounceDown@io& (0+255),w,b
 28537   002E9C  0D02               	mullw	2
 28538   002E9E  0E00               	movlw	low _speed
 28539   002EA0  24F3               	addwf	243,w,c
 28540   002EA2  6ED9               	movwf	fsr2l,c
 28541   002EA4  0E02               	movlw	high _speed
 28542   002EA6  20F4               	addwfc	prodh,w,c
 28543   002EA8  6EDA               	movwf	fsr2h,c
 28544   002EAA  0E01               	movlw	1
 28545   002EAC  AEDB               	btfss	plusw2,7,c
 28546   002EAE  D1DA               	goto	l21143
 28547   002EB0  0EFD               	movlw	253
 28548   002EB2  5CDE               	subwf	postinc2,w,c
 28549   002EB4  0EFF               	movlw	255
 28550   002EB6  58DE               	subwfb	postinc2,w,c
 28551   002EB8  B0D8               	btfsc	status,0,c
 28552   002EBA  D1D4               	goto	l21143
 28553   002EBC                     u21780:
 28554   002EBC                     l21115:
 28555                           
 28556                           ; BSR set to: 0
 28557                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 28558   002EBC  51A9               	movf	bounceDown@io& (0+255),w,b
 28559   002EBE  0D07               	mullw	7
 28560   002EC0  50F3               	movf	243,w,c
 28561   002EC2  0F12               	addlw	18
 28562   002EC4  ECB0  F05F         	call	_getNV
 28563   002EC8  C08D  F09F         	movff	?_getNV,??_bounceDown
 28564   002ECC  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 28565   002ED0  0100               	movlb	0	; () banked
 28566   002ED2  51A9               	movf	bounceDown@io& (0+255),w,b
 28567   002ED4  0D07               	mullw	7
 28568   002ED6  50F3               	movf	243,w,c
 28569   002ED8  0F13               	addlw	19
 28570   002EDA  ECB0  F05F         	call	_getNV
 28571   002EDE  0100               	movlb	0	; () banked
 28572   002EE0  518D               	movf	?_getNV& (0+255),w,b
 28573   002EE2  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28574   002EE4  B0D8               	btfsc	status,0,c
 28575   002EE6  D002               	goto	u21790
 28576   002EE8  0E01               	movlw	1
 28577   002EEA  D001               	goto	u21800
 28578   002EEC                     u21790:
 28579   002EEC  0E00               	movlw	0
 28580   002EEE                     u21800:
 28581   002EEE  6FA6               	movwf	bounceDown@reversed& (0+255),b
 28582                           
 28583                           ; BSR set to: 0
 28584                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 28585   002EF0  51A6               	movf	bounceDown@reversed& (0+255),w,b
 28586   002EF2  A4D8               	btfss	status,2,c
 28587   002EF4  D0DD               	goto	l21129
 28588                           
 28589                           ; BSR set to: 0
 28590                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 28591   002EF6  51A9               	movf	bounceDown@io& (0+255),w,b
 28592   002EF8  0D02               	mullw	2
 28593   002EFA  0E00               	movlw	low _speed
 28594   002EFC  24F3               	addwf	243,w,c
 28595   002EFE  6ED9               	movwf	fsr2l,c
 28596   002F00  0E02               	movlw	high _speed
 28597   002F02  20F4               	addwfc	prodh,w,c
 28598   002F04  6EDA               	movwf	fsr2h,c
 28599   002F06  CFDE F097          	movff	postinc2,___awdiv@dividend
 28600   002F0A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28601   002F0E  0E00               	movlw	0
 28602   002F10  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28603   002F12  0E1E               	movlw	30
 28604   002F14  6F99               	movwf	___awdiv@divisor& (0+255),b
 28605   002F16  EC59  F054         	call	___awdiv	;wreg free
 28606   002F1A  C097  F09F         	movff	?___awdiv,??_bounceDown
 28607   002F1E  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 28608   002F22  0100               	movlb	0	; () banked
 28609   002F24  51A9               	movf	bounceDown@io& (0+255),w,b
 28610   002F26  0D07               	mullw	7
 28611   002F28  50F3               	movf	243,w,c
 28612   002F2A  0F13               	addlw	19
 28613   002F2C  ECB0  F05F         	call	_getNV
 28614   002F30  0100               	movlb	0	; () banked
 28615   002F32  518D               	movf	?_getNV& (0+255),w,b
 28616   002F34  259F               	addwf	??_bounceDown& (0+255),w,b
 28617   002F36  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28618   002F38  0E00               	movlw	0
 28619   002F3A  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28620   002F3C  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28621   002F3E  0E30               	movlw	low _currentPos
 28622   002F40  25A9               	addwf	bounceDown@io& (0+255),w,b
 28623   002F42  6ED9               	movwf	fsr2l,c
 28624   002F44  6ADA               	clrf	fsr2h,c
 28625   002F46  0E01               	movlw	high _currentPos
 28626   002F48  22DA               	addwfc	fsr2h,f,c
 28627   002F4A  50DF               	movf	indf2,w,c
 28628   002F4C  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28629   002F4E  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28630   002F50  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28631   002F52  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28632   002F54  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28633   002F56  0A80               	xorlw	128
 28634   002F58  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28635   002F5A  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28636   002F5C  0A80               	xorlw	128
 28637   002F5E  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28638   002F60  B0D8               	btfsc	status,0,c
 28639   002F62  D07C               	goto	l21125
 28640                           
 28641                           ; BSR set to: 0
 28642                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28643   002F64  51A9               	movf	bounceDown@io& (0+255),w,b
 28644   002F66  0D07               	mullw	7
 28645   002F68  50F3               	movf	243,w,c
 28646   002F6A  0F14               	addlw	20
 28647   002F6C  ECB0  F05F         	call	_getNV
 28648   002F70  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28649   002F74  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28650   002F78  0100               	movlb	0	; () banked
 28651   002F7A  51A9               	movf	bounceDown@io& (0+255),w,b
 28652   002F7C  0D02               	mullw	2
 28653   002F7E  0E00               	movlw	low _speed
 28654   002F80  24F3               	addwf	243,w,c
 28655   002F82  6ED9               	movwf	fsr2l,c
 28656   002F84  0E02               	movlw	high _speed
 28657   002F86  20F4               	addwfc	prodh,w,c
 28658   002F88  6EDA               	movwf	fsr2h,c
 28659   002F8A  CFDE F09F          	movff	postinc2,??_bounceDown
 28660   002F8E  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28661   002F92  1F9F               	comf	??_bounceDown& (0+255),f,b
 28662   002F94  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28663   002F96  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28664   002F98  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28665   002F9A  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28666   002F9E  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28667   002FA2  EC93  F062         	call	___wmul	;wreg free
 28668   002FA6  C091  F097         	movff	?___wmul,___awdiv@dividend
 28669   002FAA  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28670   002FAE  0E00               	movlw	0
 28671   002FB0  0100               	movlb	0	; () banked
 28672   002FB2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28673   002FB4  0E64               	movlw	100
 28674   002FB6  6F99               	movwf	___awdiv@divisor& (0+255),b
 28675   002FB8  EC59  F054         	call	___awdiv	;wreg free
 28676   002FBC  0100               	movlb	0	; () banked
 28677   002FBE  51A9               	movf	bounceDown@io& (0+255),w,b
 28678   002FC0  0D02               	mullw	2
 28679   002FC2  0E00               	movlw	low _speed
 28680   002FC4  24F3               	addwf	243,w,c
 28681   002FC6  6ED9               	movwf	fsr2l,c
 28682   002FC8  0E02               	movlw	high _speed
 28683   002FCA  20F4               	addwfc	prodh,w,c
 28684   002FCC  6EDA               	movwf	fsr2h,c
 28685   002FCE  C097  FFDE         	movff	?___awdiv,postinc2
 28686   002FD2  C098  FFDD         	movff	?___awdiv+1,postdec2
 28687                           
 28688                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 28689   002FD6  51A9               	movf	bounceDown@io& (0+255),w,b
 28690   002FD8  0D07               	mullw	7
 28691   002FDA  50F3               	movf	243,w,c
 28692   002FDC  0F13               	addlw	19
 28693   002FDE  ECB0  F05F         	call	_getNV
 28694   002FE2  0100               	movlb	0	; () banked
 28695   002FE4  518D               	movf	?_getNV& (0+255),w,b
 28696   002FE6  6F9F               	movwf	??_bounceDown& (0+255),b
 28697   002FE8  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28698   002FEA  51A9               	movf	bounceDown@io& (0+255),w,b
 28699   002FEC  0D07               	mullw	7
 28700   002FEE  50F3               	movf	243,w,c
 28701   002FF0  0F13               	addlw	19
 28702   002FF2  ECB0  F05F         	call	_getNV
 28703   002FF6  0100               	movlb	0	; () banked
 28704   002FF8  518D               	movf	?_getNV& (0+255),w,b
 28705   002FFA  279F               	addwf	??_bounceDown& (0+255),f,b
 28706   002FFC  0E00               	movlw	0
 28707   002FFE  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28708   003000  0E30               	movlw	low _currentPos
 28709   003002  25A9               	addwf	bounceDown@io& (0+255),w,b
 28710   003004  6ED9               	movwf	fsr2l,c
 28711   003006  6ADA               	clrf	fsr2h,c
 28712   003008  0E01               	movlw	high _currentPos
 28713   00300A  22DA               	addwfc	fsr2h,f,c
 28714   00300C  50DF               	movf	indf2,w,c
 28715   00300E  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28716   003010  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 28717   003012  5F9F               	subwf	??_bounceDown& (0+255),f,b
 28718   003014  0E00               	movlw	0
 28719   003016  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 28720   003018  51A9               	movf	bounceDown@io& (0+255),w,b
 28721   00301A  0D02               	mullw	2
 28722   00301C  0E00               	movlw	low _speed
 28723   00301E  24F3               	addwf	243,w,c
 28724   003020  6ED9               	movwf	fsr2l,c
 28725   003022  0E02               	movlw	high _speed
 28726   003024  20F4               	addwfc	prodh,w,c
 28727   003026  6EDA               	movwf	fsr2h,c
 28728   003028  CFDE F097          	movff	postinc2,___awdiv@dividend
 28729   00302C  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28730   003030  0E00               	movlw	0
 28731   003032  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28732   003034  0E1E               	movlw	30
 28733   003036  6F99               	movwf	___awdiv@divisor& (0+255),b
 28734   003038  EC59  F054         	call	___awdiv	;wreg free
 28735   00303C  0100               	movlb	0	; () banked
 28736   00303E  5197               	movf	?___awdiv& (0+255),w,b
 28737   003040  5D9F               	subwf	??_bounceDown& (0+255),w,b
 28738   003042  6FA7               	movwf	bounceDown@tmp& (0+255),b
 28739   003044  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28740   003046  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 28741   003048  6FA8               	movwf	(bounceDown@tmp+1)& (0+255),b
 28742                           
 28743                           ; BSR set to: 0
 28744                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 28745   00304A  0E30               	movlw	low _currentPos
 28746   00304C  25A9               	addwf	bounceDown@io& (0+255),w,b
 28747   00304E  6ED9               	movwf	fsr2l,c
 28748   003050  6ADA               	clrf	fsr2h,c
 28749   003052  0E01               	movlw	high _currentPos
 28750   003054  22DA               	addwfc	fsr2h,f,c
 28751   003056  C0A7  FFDF         	movff	bounceDown@tmp,indf2
 28752                           
 28753                           ;../bounce.c: 121:             } else {
 28754   00305A  D102               	goto	l21139
 28755   00305C                     l21125:
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;../bounce.c: 124:                 speed[io] += 3;
 28759   00305C  51A9               	movf	bounceDown@io& (0+255),w,b
 28760   00305E  0D02               	mullw	2
 28761   003060  0E00               	movlw	low _speed
 28762   003062  24F3               	addwf	243,w,c
 28763   003064  6ED9               	movwf	fsr2l,c
 28764   003066  0E02               	movlw	high _speed
 28765   003068  20F4               	addwfc	prodh,w,c
 28766   00306A  6EDA               	movwf	fsr2h,c
 28767   00306C  0E03               	movlw	3
 28768   00306E  26DE               	addwf	postinc2,f,c
 28769   003070  0E00               	movlw	0
 28770   003072  22DD               	addwfc	postdec2,f,c
 28771                           
 28772                           ; BSR set to: 0
 28773                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 28774   003074  51A9               	movf	bounceDown@io& (0+255),w,b
 28775   003076  0D02               	mullw	2
 28776   003078  0E00               	movlw	low _speed
 28777   00307A  24F3               	addwf	243,w,c
 28778   00307C  6ED9               	movwf	fsr2l,c
 28779   00307E  0E02               	movlw	high _speed
 28780   003080  20F4               	addwfc	prodh,w,c
 28781   003082  6EDA               	movwf	fsr2h,c
 28782   003084  CFDE F097          	movff	postinc2,___awdiv@dividend
 28783   003088  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28784   00308C  0E00               	movlw	0
 28785   00308E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28786   003090  0E1E               	movlw	30
 28787   003092  6F99               	movwf	___awdiv@divisor& (0+255),b
 28788   003094  EC59  F054         	call	___awdiv	;wreg free
 28789   003098  0E01               	movlw	1
 28790   00309A  0100               	movlb	0	; () banked
 28791   00309C  2797               	addwf	?___awdiv& (0+255),f,b
 28792   00309E  0E30               	movlw	low _currentPos
 28793   0030A0  25A9               	addwf	bounceDown@io& (0+255),w,b
 28794   0030A2  6ED9               	movwf	fsr2l,c
 28795   0030A4  6ADA               	clrf	fsr2h,c
 28796   0030A6  0E01               	movlw	high _currentPos
 28797   0030A8  22DA               	addwfc	fsr2h,f,c
 28798   0030AA  5197               	movf	?___awdiv& (0+255),w,b
 28799   0030AC  5EDF               	subwf	indf2,f,c
 28800   0030AE  D0D8               	goto	l21139
 28801   0030B0                     l21129:
 28802                           
 28803                           ; BSR set to: 0
 28804                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 28805   0030B0  0E30               	movlw	low _currentPos
 28806   0030B2  25A9               	addwf	bounceDown@io& (0+255),w,b
 28807   0030B4  6ED9               	movwf	fsr2l,c
 28808   0030B6  6ADA               	clrf	fsr2h,c
 28809   0030B8  0E01               	movlw	high _currentPos
 28810   0030BA  22DA               	addwfc	fsr2h,f,c
 28811   0030BC  50DF               	movf	indf2,w,c
 28812   0030BE  6F9F               	movwf	??_bounceDown& (0+255),b
 28813   0030C0  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28814   0030C2  51A9               	movf	bounceDown@io& (0+255),w,b
 28815   0030C4  0D07               	mullw	7
 28816   0030C6  50F3               	movf	243,w,c
 28817   0030C8  0F13               	addlw	19
 28818   0030CA  ECB0  F05F         	call	_getNV
 28819   0030CE  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 28820   0030D2  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 28821   0030D6  0100               	movlb	0	; () banked
 28822   0030D8  51A9               	movf	bounceDown@io& (0+255),w,b
 28823   0030DA  0D02               	mullw	2
 28824   0030DC  0E00               	movlw	low _speed
 28825   0030DE  24F3               	addwf	243,w,c
 28826   0030E0  6ED9               	movwf	fsr2l,c
 28827   0030E2  0E02               	movlw	high _speed
 28828   0030E4  20F4               	addwfc	prodh,w,c
 28829   0030E6  6EDA               	movwf	fsr2h,c
 28830   0030E8  CFDE F097          	movff	postinc2,___awdiv@dividend
 28831   0030EC  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28832   0030F0  0E00               	movlw	0
 28833   0030F2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28834   0030F4  0E1E               	movlw	30
 28835   0030F6  6F99               	movwf	___awdiv@divisor& (0+255),b
 28836   0030F8  EC59  F054         	call	___awdiv	;wreg free
 28837   0030FC  0100               	movlb	0	; () banked
 28838   0030FE  5197               	movf	?___awdiv& (0+255),w,b
 28839   003100  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28840   003102  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28841   003104  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28842   003106  A0D8               	btfss	status,0,c
 28843   003108  2998               	incf	(?___awdiv+1)& (0+255),w,b
 28844   00310A  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28845   00310C  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 28846   00310E  519F               	movf	??_bounceDown& (0+255),w,b
 28847   003110  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28848   003112  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28849   003114  0A80               	xorlw	128
 28850   003116  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28851   003118  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28852   00311A  0A80               	xorlw	128
 28853   00311C  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28854   00311E  B0D8               	btfsc	status,0,c
 28855   003120  D076               	goto	l21135
 28856                           
 28857                           ; BSR set to: 0
 28858                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28859   003122  51A9               	movf	bounceDown@io& (0+255),w,b
 28860   003124  0D07               	mullw	7
 28861   003126  50F3               	movf	243,w,c
 28862   003128  0F14               	addlw	20
 28863   00312A  ECB0  F05F         	call	_getNV
 28864   00312E  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28865   003132  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28866   003136  0100               	movlb	0	; () banked
 28867   003138  51A9               	movf	bounceDown@io& (0+255),w,b
 28868   00313A  0D02               	mullw	2
 28869   00313C  0E00               	movlw	low _speed
 28870   00313E  24F3               	addwf	243,w,c
 28871   003140  6ED9               	movwf	fsr2l,c
 28872   003142  0E02               	movlw	high _speed
 28873   003144  20F4               	addwfc	prodh,w,c
 28874   003146  6EDA               	movwf	fsr2h,c
 28875   003148  CFDE F09F          	movff	postinc2,??_bounceDown
 28876   00314C  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28877   003150  1F9F               	comf	??_bounceDown& (0+255),f,b
 28878   003152  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28879   003154  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28880   003156  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28881   003158  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28882   00315C  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28883   003160  EC93  F062         	call	___wmul	;wreg free
 28884   003164  C091  F097         	movff	?___wmul,___awdiv@dividend
 28885   003168  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28886   00316C  0E00               	movlw	0
 28887   00316E  0100               	movlb	0	; () banked
 28888   003170  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28889   003172  0E64               	movlw	100
 28890   003174  6F99               	movwf	___awdiv@divisor& (0+255),b
 28891   003176  EC59  F054         	call	___awdiv	;wreg free
 28892   00317A  0100               	movlb	0	; () banked
 28893   00317C  51A9               	movf	bounceDown@io& (0+255),w,b
 28894   00317E  0D02               	mullw	2
 28895   003180  0E00               	movlw	low _speed
 28896   003182  24F3               	addwf	243,w,c
 28897   003184  6ED9               	movwf	fsr2l,c
 28898   003186  0E02               	movlw	high _speed
 28899   003188  20F4               	addwfc	prodh,w,c
 28900   00318A  6EDA               	movwf	fsr2h,c
 28901   00318C  C097  FFDE         	movff	?___awdiv,postinc2
 28902   003190  C098  FFDD         	movff	?___awdiv+1,postdec2
 28903                           
 28904                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 28905   003194  51A9               	movf	bounceDown@io& (0+255),w,b
 28906   003196  0D07               	mullw	7
 28907   003198  50F3               	movf	243,w,c
 28908   00319A  0F13               	addlw	19
 28909   00319C  ECB0  F05F         	call	_getNV
 28910   0031A0  0100               	movlb	0	; () banked
 28911   0031A2  518D               	movf	?_getNV& (0+255),w,b
 28912   0031A4  6F9F               	movwf	??_bounceDown& (0+255),b
 28913   0031A6  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28914   0031A8  51A9               	movf	bounceDown@io& (0+255),w,b
 28915   0031AA  0D07               	mullw	7
 28916   0031AC  50F3               	movf	243,w,c
 28917   0031AE  0F13               	addlw	19
 28918   0031B0  ECB0  F05F         	call	_getNV
 28919   0031B4  0100               	movlb	0	; () banked
 28920   0031B6  518D               	movf	?_getNV& (0+255),w,b
 28921   0031B8  279F               	addwf	??_bounceDown& (0+255),f,b
 28922   0031BA  0E00               	movlw	0
 28923   0031BC  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28924   0031BE  51A9               	movf	bounceDown@io& (0+255),w,b
 28925   0031C0  0D02               	mullw	2
 28926   0031C2  0E00               	movlw	low _speed
 28927   0031C4  24F3               	addwf	243,w,c
 28928   0031C6  6ED9               	movwf	fsr2l,c
 28929   0031C8  0E02               	movlw	high _speed
 28930   0031CA  20F4               	addwfc	prodh,w,c
 28931   0031CC  6EDA               	movwf	fsr2h,c
 28932   0031CE  CFDE F097          	movff	postinc2,___awdiv@dividend
 28933   0031D2  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28934   0031D6  0E00               	movlw	0
 28935   0031D8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28936   0031DA  0E1E               	movlw	30
 28937   0031DC  6F99               	movwf	___awdiv@divisor& (0+255),b
 28938   0031DE  EC59  F054         	call	___awdiv	;wreg free
 28939   0031E2  0100               	movlb	0	; () banked
 28940   0031E4  5197               	movf	?___awdiv& (0+255),w,b
 28941   0031E6  259F               	addwf	??_bounceDown& (0+255),w,b
 28942   0031E8  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28943   0031EA  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28944   0031EC  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28945   0031EE  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28946   0031F0  0E30               	movlw	low _currentPos
 28947   0031F2  25A9               	addwf	bounceDown@io& (0+255),w,b
 28948   0031F4  6ED9               	movwf	fsr2l,c
 28949   0031F6  6ADA               	clrf	fsr2h,c
 28950   0031F8  0E01               	movlw	high _currentPos
 28951   0031FA  22DA               	addwfc	fsr2h,f,c
 28952   0031FC  50DF               	movf	indf2,w,c
 28953   0031FE  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28954   003200  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28955   003202  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28956   003204  6FA7               	movwf	bounceDown@tmp& (0+255),b
 28957   003206  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28958   003208  A0D8               	btfss	status,0,c
 28959   00320A  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 28960   00320C  D71D               	goto	L8
 28961   00320E                     l21135:
 28962                           
 28963                           ; BSR set to: 0
 28964                           ;../bounce.c: 142:                 speed[io] += 3;
 28965   00320E  51A9               	movf	bounceDown@io& (0+255),w,b
 28966   003210  0D02               	mullw	2
 28967   003212  0E00               	movlw	low _speed
 28968   003214  24F3               	addwf	243,w,c
 28969   003216  6ED9               	movwf	fsr2l,c
 28970   003218  0E02               	movlw	high _speed
 28971   00321A  20F4               	addwfc	prodh,w,c
 28972   00321C  6EDA               	movwf	fsr2h,c
 28973   00321E  0E03               	movlw	3
 28974   003220  26DE               	addwf	postinc2,f,c
 28975   003222  0E00               	movlw	0
 28976   003224  22DD               	addwfc	postdec2,f,c
 28977                           
 28978                           ; BSR set to: 0
 28979                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 28980   003226  51A9               	movf	bounceDown@io& (0+255),w,b
 28981   003228  0D02               	mullw	2
 28982   00322A  0E00               	movlw	low _speed
 28983   00322C  24F3               	addwf	243,w,c
 28984   00322E  6ED9               	movwf	fsr2l,c
 28985   003230  0E02               	movlw	high _speed
 28986   003232  20F4               	addwfc	prodh,w,c
 28987   003234  6EDA               	movwf	fsr2h,c
 28988   003236  CFDE F097          	movff	postinc2,___awdiv@dividend
 28989   00323A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28990   00323E  0E00               	movlw	0
 28991   003240  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28992   003242  0E1E               	movlw	30
 28993   003244  6F99               	movwf	___awdiv@divisor& (0+255),b
 28994   003246  EC59  F054         	call	___awdiv	;wreg free
 28995   00324A  0E01               	movlw	1
 28996   00324C  0100               	movlb	0	; () banked
 28997   00324E  2797               	addwf	?___awdiv& (0+255),f,b
 28998   003250  0E30               	movlw	low _currentPos
 28999   003252  25A9               	addwf	bounceDown@io& (0+255),w,b
 29000   003254  6ED9               	movwf	fsr2l,c
 29001   003256  6ADA               	clrf	fsr2h,c
 29002   003258  0E01               	movlw	high _currentPos
 29003   00325A  22DA               	addwfc	fsr2h,f,c
 29004   00325C  5197               	movf	?___awdiv& (0+255),w,b
 29005   00325E  26DF               	addwf	indf2,f,c
 29006   003260                     l21139:
 29007                           
 29008                           ; BSR set to: 0
 29009                           ;../bounce.c: 147:         return FALSE;
 29010   003260  0E00               	movlw	0
 29011   003262  0012               	return	
 29012   003264                     l21143:
 29013                           
 29014                           ; BSR set to: 0
 29015                           ;../bounce.c: 149:     return TRUE;
 29016   003264  0E01               	movlw	1
 29017                           
 29018                           ; BSR set to: 0
 29019   003266  0012               	return		;funcret
 29020   003268                     __end_of_bounceDown:
 29021                           	callstack 0
 29022                           
 29023 ;; *************** function _processOutputs *****************
 29024 ;; Defined at:
 29025 ;;		line 178 in file "../digitalOut.c"
 29026 ;; Parameters:    Size  Location     Type
 29027 ;;		None
 29028 ;; Auto vars:     Size  Location     Type
 29029 ;;  io              1   19[BANK1 ] unsigned char 
 29030 ;; Return value:  Size  Location     Type
 29031 ;;                  1    wreg      void 
 29032 ;; Registers used:
 29033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29034 ;; Tracked objects:
 29035 ;;		On entry : 0/0
 29036 ;;		On exit  : 0/0
 29037 ;;		Unchanged: 0/0
 29038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29040 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29041 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29042 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29043 ;;Total ram usage:        2 bytes
 29044 ;; Hardware stack levels used: 1
 29045 ;; Hardware stack levels required when called: 18
 29046 ;; This function calls:
 29047 ;;		_getNV
 29048 ;;		_sendProducedEvent
 29049 ;;		_setOutputPin
 29050 ;; This function is called by:
 29051 ;;		_loop
 29052 ;; This function uses a non-reentrant model
 29053 ;;
 29054                           
 29055                           	psect	text104
 29056   006B9A                     __ptext104:
 29057                           	callstack 0
 29058   006B9A                     _processOutputs:
 29059                           	callstack 11
 29060                           
 29061                           ;../digitalOut.c: 179:     uint8_t io;;../digitalOut.c: 180:     for (io=0; io<16; io++)
      +                           {
 29062                           
 29063                           ; BSR set to: 0
 29064                           ;incstack = 0
 29065   006B9A  0E00               	movlw	0
 29066   006B9C  0101               	movlb	1	; () banked
 29067   006B9E  6FD1               	movwf	processOutputs@io& (0+255),b
 29068   006BA0                     l23409:
 29069                           
 29070                           ; BSR set to: 1
 29071                           ;../digitalOut.c: 181:         if (getNV((16 + 7*(io) + 0)) == 1) {
 29072   006BA0  51D1               	movf	processOutputs@io& (0+255),w,b
 29073   006BA2  0D07               	mullw	7
 29074   006BA4  50F3               	movf	243,w,c
 29075   006BA6  0F10               	addlw	16
 29076   006BA8  ECB0  F05F         	call	_getNV
 29077   006BAC  0100               	movlb	0	; () banked
 29078   006BAE  058D               	decf	?_getNV& (0+255),w,b
 29079   006BB0  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29080   006BB2  A4D8               	btfss	status,2,c
 29081   006BB4  D0D5               	goto	l282
 29082                           
 29083                           ; BSR set to: 0
 29084                           ;../digitalOut.c: 183:             if (flashDelays[io] == 1) {
 29085   006BB6  0E20               	movlw	low _flashDelays
 29086   006BB8  0101               	movlb	1	; () banked
 29087   006BBA  25D1               	addwf	processOutputs@io& (0+255),w,b
 29088   006BBC  6ED9               	movwf	fsr2l,c
 29089   006BBE  6ADA               	clrf	fsr2h,c
 29090   006BC0  0E01               	movlw	high _flashDelays
 29091   006BC2  22DA               	addwfc	fsr2h,f,c
 29092   006BC4  04DE               	decf	postinc2,w,c
 29093   006BC6  A4D8               	btfss	status,2,c
 29094   006BC8  D02F               	goto	l23419
 29095                           
 29096                           ; BSR set to: 1
 29097                           ;../digitalOut.c: 184:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 29098   006BCA  51D1               	movf	processOutputs@io& (0+255),w,b
 29099   006BCC  0D07               	mullw	7
 29100   006BCE  50F3               	movf	243,w,c
 29101   006BD0  0F11               	addlw	17
 29102   006BD2  ECB0  F05F         	call	_getNV
 29103   006BD6  0100               	movlb	0	; () banked
 29104   006BD8  518D               	movf	?_getNV& (0+255),w,b
 29105   006BDA  0B20               	andlw	32
 29106   006BDC  6F91               	movwf	setOutputPin@state& (0+255),b
 29107   006BDE  0101               	movlb	1	; () banked
 29108   006BE0  51D1               	movf	processOutputs@io& (0+255),w,b
 29109   006BE2  EC9A  F037         	call	_setOutputPin
 29110                           
 29111                           ;../digitalOut.c: 185:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 29112   006BE6  0101               	movlb	1	; () banked
 29113   006BE8  51D1               	movf	processOutputs@io& (0+255),w,b
 29114   006BEA  0D07               	mullw	7
 29115   006BEC  50F3               	movf	243,w,c
 29116   006BEE  0F13               	addlw	19
 29117   006BF0  ECB0  F05F         	call	_getNV
 29118   006BF4  0E20               	movlw	low _flashDelays
 29119   006BF6  0101               	movlb	1	; () banked
 29120   006BF8  25D1               	addwf	processOutputs@io& (0+255),w,b
 29121   006BFA  6ED9               	movwf	fsr2l,c
 29122   006BFC  6ADA               	clrf	fsr2h,c
 29123   006BFE  0E01               	movlw	high _flashDelays
 29124   006C00  22DA               	addwfc	fsr2h,f,c
 29125   006C02  0100               	movlb	0	; () banked
 29126   006C04  C08D  FFDF         	movff	?_getNV,indf2
 29127                           
 29128                           ; BSR set to: 0
 29129                           ;../digitalOut.c: 186:                 flashDelays[io] = - flashDelays[io];
 29130   006C08  0E20               	movlw	low _flashDelays
 29131   006C0A  0101               	movlb	1	; () banked
 29132   006C0C  25D1               	addwf	processOutputs@io& (0+255),w,b
 29133   006C0E  6ED9               	movwf	fsr2l,c
 29134   006C10  6ADA               	clrf	fsr2h,c
 29135   006C12  0E01               	movlw	high _flashDelays
 29136   006C14  22DA               	addwfc	fsr2h,f,c
 29137   006C16  0E20               	movlw	low _flashDelays
 29138   006C18  25D1               	addwf	processOutputs@io& (0+255),w,b
 29139   006C1A  6EE1               	movwf	fsr1l,c
 29140   006C1C  6AE2               	clrf	fsr1h,c
 29141   006C1E  0E01               	movlw	high _flashDelays
 29142   006C20  22E2               	addwfc	fsr1h,f,c
 29143   006C22  50E7               	movf	indf1,w,c
 29144   006C24  0800               	sublw	0
 29145   006C26  6EDF               	movwf	indf2,c
 29146   006C28                     l23419:
 29147                           
 29148                           ; BSR set to: 1
 29149                           ;../digitalOut.c: 188:             if (flashDelays[io] == -1) {
 29150   006C28  0E20               	movlw	low _flashDelays
 29151   006C2A  25D1               	addwf	processOutputs@io& (0+255),w,b
 29152   006C2C  6ED9               	movwf	fsr2l,c
 29153   006C2E  6ADA               	clrf	fsr2h,c
 29154   006C30  0E01               	movlw	high _flashDelays
 29155   006C32  22DA               	addwfc	fsr2h,f,c
 29156   006C34  28DE               	incf	postinc2,w,c
 29157   006C36  A4D8               	btfss	status,2,c
 29158   006C38  D022               	goto	l23425
 29159                           
 29160                           ; BSR set to: 1
 29161                           ;../digitalOut.c: 189:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 29162   006C3A  51D1               	movf	processOutputs@io& (0+255),w,b
 29163   006C3C  0D07               	mullw	7
 29164   006C3E  50F3               	movf	243,w,c
 29165   006C40  0F11               	addlw	17
 29166   006C42  ECB0  F05F         	call	_getNV
 29167   006C46  0100               	movlb	0	; () banked
 29168   006C48  BB8D               	btfsc	?_getNV& (0+255),5,b
 29169   006C4A  D002               	goto	u24840
 29170   006C4C  0E01               	movlw	1
 29171   006C4E  D001               	goto	u24850
 29172   006C50                     u24840:
 29173   006C50  0E00               	movlw	0
 29174   006C52                     u24850:
 29175   006C52  6F91               	movwf	setOutputPin@state& (0+255),b
 29176   006C54  0101               	movlb	1	; () banked
 29177   006C56  51D1               	movf	processOutputs@io& (0+255),w,b
 29178   006C58  EC9A  F037         	call	_setOutputPin
 29179                           
 29180                           ;../digitalOut.c: 190:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 29181   006C5C  0101               	movlb	1	; () banked
 29182   006C5E  51D1               	movf	processOutputs@io& (0+255),w,b
 29183   006C60  0D07               	mullw	7
 29184   006C62  50F3               	movf	243,w,c
 29185   006C64  0F13               	addlw	19
 29186   006C66  ECB0  F05F         	call	_getNV
 29187   006C6A  0E20               	movlw	low _flashDelays
 29188   006C6C  0101               	movlb	1	; () banked
 29189   006C6E  25D1               	addwf	processOutputs@io& (0+255),w,b
 29190   006C70  6ED9               	movwf	fsr2l,c
 29191   006C72  6ADA               	clrf	fsr2h,c
 29192   006C74  0E01               	movlw	high _flashDelays
 29193   006C76  22DA               	addwfc	fsr2h,f,c
 29194   006C78  0100               	movlb	0	; () banked
 29195   006C7A  C08D  FFDF         	movff	?_getNV,indf2
 29196   006C7E                     l23425:
 29197                           
 29198                           ;../digitalOut.c: 192:             if (flashDelays[io] > 1) {
 29199   006C7E  0E20               	movlw	low _flashDelays
 29200   006C80  0101               	movlb	1	; () banked
 29201   006C82  25D1               	addwf	processOutputs@io& (0+255),w,b
 29202   006C84  6ED9               	movwf	fsr2l,c
 29203   006C86  6ADA               	clrf	fsr2h,c
 29204   006C88  0E01               	movlw	high _flashDelays
 29205   006C8A  22DA               	addwfc	fsr2h,f,c
 29206   006C8C  50DF               	movf	indf2,w,c
 29207   006C8E  0A80               	xorlw	128
 29208   006C90  0F7E               	addlw	-130
 29209   006C92  A0D8               	btfss	status,0,c
 29210   006C94  D008               	goto	l23429
 29211                           
 29212                           ; BSR set to: 1
 29213                           ;../digitalOut.c: 193:                 flashDelays[io]--;
 29214   006C96  0E20               	movlw	low _flashDelays
 29215   006C98  25D1               	addwf	processOutputs@io& (0+255),w,b
 29216   006C9A  6ED9               	movwf	fsr2l,c
 29217   006C9C  6ADA               	clrf	fsr2h,c
 29218   006C9E  0E01               	movlw	high _flashDelays
 29219   006CA0  22DA               	addwfc	fsr2h,f,c
 29220   006CA2  06DF               	decf	indf2,f,c
 29221                           
 29222                           ;../digitalOut.c: 194:             } else if (flashDelays[io] < -1) {
 29223   006CA4  D012               	goto	l280
 29224   006CA6                     l23429:
 29225                           
 29226                           ; BSR set to: 1
 29227   006CA6  0E20               	movlw	low _flashDelays
 29228   006CA8  25D1               	addwf	processOutputs@io& (0+255),w,b
 29229   006CAA  6ED9               	movwf	fsr2l,c
 29230   006CAC  6ADA               	clrf	fsr2h,c
 29231   006CAE  0E01               	movlw	high _flashDelays
 29232   006CB0  22DA               	addwfc	fsr2h,f,c
 29233   006CB2  50DF               	movf	indf2,w,c
 29234   006CB4  0A80               	xorlw	128
 29235   006CB6  0F81               	addlw	129
 29236   006CB8  B0D8               	btfsc	status,0,c
 29237   006CBA  D007               	goto	l280
 29238                           
 29239                           ; BSR set to: 1
 29240                           ;../digitalOut.c: 195:                 flashDelays[io]++;
 29241   006CBC  0E20               	movlw	low _flashDelays
 29242   006CBE  25D1               	addwf	processOutputs@io& (0+255),w,b
 29243   006CC0  6ED9               	movwf	fsr2l,c
 29244   006CC2  6ADA               	clrf	fsr2h,c
 29245   006CC4  0E01               	movlw	high _flashDelays
 29246   006CC6  22DA               	addwfc	fsr2h,f,c
 29247   006CC8  2ADF               	incf	indf2,f,c
 29248   006CCA                     l280:
 29249                           
 29250                           ; BSR set to: 1
 29251                           ;../digitalOut.c: 198:             if (pulseDelays[io] != 0) {
 29252   006CCA  0EA4               	movlw	low _pulseDelays
 29253   006CCC  25D1               	addwf	processOutputs@io& (0+255),w,b
 29254   006CCE  6ED9               	movwf	fsr2l,c
 29255   006CD0  6ADA               	clrf	fsr2h,c
 29256   006CD2  0E02               	movlw	high _pulseDelays
 29257   006CD4  22DA               	addwfc	fsr2h,f,c
 29258   006CD6  50DF               	movf	indf2,w,c
 29259   006CD8  B4D8               	btfsc	status,2,c
 29260   006CDA  D042               	goto	l282
 29261                           
 29262                           ; BSR set to: 1
 29263                           ;../digitalOut.c: 199:                 pulseDelays[io]--;
 29264   006CDC  0EA4               	movlw	low _pulseDelays
 29265   006CDE  25D1               	addwf	processOutputs@io& (0+255),w,b
 29266   006CE0  6ED9               	movwf	fsr2l,c
 29267   006CE2  6ADA               	clrf	fsr2h,c
 29268   006CE4  0E02               	movlw	high _pulseDelays
 29269   006CE6  22DA               	addwfc	fsr2h,f,c
 29270   006CE8  06DF               	decf	indf2,f,c
 29271                           
 29272                           ;../digitalOut.c: 202:                 if (pulseDelays[io] == 1) {
 29273   006CEA  0EA4               	movlw	low _pulseDelays
 29274   006CEC  25D1               	addwf	processOutputs@io& (0+255),w,b
 29275   006CEE  6ED9               	movwf	fsr2l,c
 29276   006CF0  6ADA               	clrf	fsr2h,c
 29277   006CF2  0E02               	movlw	high _pulseDelays
 29278   006CF4  22DA               	addwfc	fsr2h,f,c
 29279   006CF6  04DE               	decf	postinc2,w,c
 29280   006CF8  A4D8               	btfss	status,2,c
 29281   006CFA  D032               	goto	l282
 29282                           
 29283                           ; BSR set to: 1
 29284                           ;../digitalOut.c: 204:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 29285   006CFC  51D1               	movf	processOutputs@io& (0+255),w,b
 29286   006CFE  0D07               	mullw	7
 29287   006D00  50F3               	movf	243,w,c
 29288   006D02  0F11               	addlw	17
 29289   006D04  ECB0  F05F         	call	_getNV
 29290   006D08  0100               	movlb	0	; () banked
 29291   006D0A  AB8D               	btfss	?_getNV& (0+255),5,b
 29292   006D0C  D007               	goto	l23439
 29293                           
 29294                           ; BSR set to: 0
 29295                           ;../digitalOut.c: 205:                         setOutputPin(io, TRUE);
 29296   006D0E  0E01               	movlw	1
 29297   006D10  6F91               	movwf	setOutputPin@state& (0+255),b
 29298   006D12  0101               	movlb	1	; () banked
 29299   006D14  51D1               	movf	processOutputs@io& (0+255),w,b
 29300   006D16  EC9A  F037         	call	_setOutputPin
 29301                           
 29302                           ;../digitalOut.c: 206:                     } else {
 29303   006D1A  D006               	goto	l23441
 29304   006D1C                     l23439:
 29305                           
 29306                           ; BSR set to: 0
 29307                           ;../digitalOut.c: 207:                         setOutputPin(io, FALSE);
 29308   006D1C  0E00               	movlw	0
 29309   006D1E  6F91               	movwf	setOutputPin@state& (0+255),b
 29310   006D20  0101               	movlb	1	; () banked
 29311   006D22  51D1               	movf	processOutputs@io& (0+255),w,b
 29312   006D24  EC9A  F037         	call	_setOutputPin
 29313   006D28                     l23441:
 29314                           
 29315                           ;../digitalOut.c: 210:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 29316   006D28  0101               	movlb	1	; () banked
 29317   006D2A  51D1               	movf	processOutputs@io& (0+255),w,b
 29318   006D2C  0D07               	mullw	7
 29319   006D2E  50F3               	movf	243,w,c
 29320   006D30  0F11               	addlw	17
 29321   006D32  ECB0  F05F         	call	_getNV
 29322   006D36  0100               	movlb	0	; () banked
 29323   006D38  B78D               	btfsc	?_getNV& (0+255),3,b
 29324   006D3A  D012               	goto	l282
 29325                           
 29326                           ; BSR set to: 0
 29327                           ;../digitalOut.c: 212:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 29328   006D3C  0101               	movlb	1	; () banked
 29329   006D3E  51D1               	movf	processOutputs@io& (0+255),w,b
 29330   006D40  0D07               	mullw	7
 29331   006D42  50F3               	movf	243,w,c
 29332   006D44  0F11               	addlw	17
 29333   006D46  ECB0  F05F         	call	_getNV
 29334   006D4A  0100               	movlb	0	; () banked
 29335   006D4C  518D               	movf	?_getNV& (0+255),w,b
 29336   006D4E  0B40               	andlw	64
 29337   006D50  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 29338   006D52  0101               	movlb	1	; () banked
 29339   006D54  51D1               	movf	processOutputs@io& (0+255),w,b
 29340   006D56  0D04               	mullw	4
 29341   006D58  50F3               	movf	243,w,c
 29342   006D5A  0F08               	addlw	8
 29343   006D5C  EC42  F04C         	call	_sendProducedEvent
 29344   006D60                     l282:
 29345                           
 29346                           ;../digitalOut.c: 217:     }
 29347                           
 29348                           ; BSR set to: 0
 29349   006D60  0101               	movlb	1	; () banked
 29350   006D62  2BD1               	incf	processOutputs@io& (0+255),f,b
 29351                           
 29352                           ; BSR set to: 1
 29353   006D64  0E0F               	movlw	15
 29354   006D66  65D1               	cpfsgt	processOutputs@io& (0+255),b
 29355   006D68  D71B               	goto	l23409
 29356   006D6A  0012               	return	
 29357   006D6C                     __end_of_processOutputs:
 29358                           	callstack 0
 29359                           
 29360 ;; *************** function _processActions *****************
 29361 ;; Defined at:
 29362 ;;		line 233 in file "../universalEvents.c"
 29363 ;; Parameters:    Size  Location     Type
 29364 ;;		None
 29365 ;; Auto vars:     Size  Location     Type
 29366 ;;  nextAction      1   43[BANK1 ] unsigned char 
 29367 ;;  nextIo          1   40[BANK1 ] unsigned char 
 29368 ;;  nextType        1   39[BANK1 ] unsigned char 
 29369 ;;  action          1   45[BANK1 ] unsigned char 
 29370 ;;  io              1   44[BANK1 ] unsigned char 
 29371 ;;  ioAction        1   42[BANK1 ] unsigned char 
 29372 ;;  type            1   41[BANK1 ] unsigned char 
 29373 ;;  peekItem        1   38[BANK1 ] unsigned char 
 29374 ;;  simultaneous    1   37[BANK1 ] unsigned char 
 29375 ;; Return value:  Size  Location     Type
 29376 ;;                  1    wreg      void 
 29377 ;; Registers used:
 29378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29379 ;; Tracked objects:
 29380 ;;		On entry : 0/0
 29381 ;;		On exit  : 0/0
 29382 ;;		Unchanged: 0/0
 29383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29385 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29387 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29388 ;;Total ram usage:        9 bytes
 29389 ;; Hardware stack levels used: 1
 29390 ;; Hardware stack levels required when called: 21
 29391 ;; This function calls:
 29392 ;;		___awdiv
 29393 ;;		___awmod
 29394 ;;		_completed
 29395 ;;		_deleteTwoActionQueue
 29396 ;;		_doSOD
 29397 ;;		_doWait
 29398 ;;		_doneTwoAction
 29399 ;;		_finaliseOutput
 29400 ;;		_getNV
 29401 ;;		_getTwoAction
 29402 ;;		_needsStarting
 29403 ;;		_peekTwoActionQueue
 29404 ;;		_setOutputState
 29405 ;;		_startOutput
 29406 ;; This function is called by:
 29407 ;;		_loop
 29408 ;; This function uses a non-reentrant model
 29409 ;;
 29410                           
 29411                           	psect	text105
 29412   006384                     __ptext105:
 29413                           	callstack 0
 29414   006384                     _processActions:
 29415                           	callstack 8
 29416                           
 29417                           ;../universalEvents.c: 242:         action = getTwoAction();
 29418                           
 29419                           ; BSR set to: 1
 29420                           ;incstack = 0
 29421                           ;../universalEvents.c: 234:     uint8_t io;;../universalEvents.c: 235:     uint8_t type;
      +                          ;../universalEvents.c: 236:     uint8_t action;;../universalEvents.c: 237:     uint8_t i
      +                          oAction;;../universalEvents.c: 238:     uint8_t simultaneous;;../universalEvents.c: 239:
      +                               uint8_t peekItem;;../universalEvents.c: 241:     while (1) {
 29422   006384  EC5A  F064         	call	_getTwoAction	;wreg free
 29423   006388  0101               	movlb	1	; () banked
 29424   00638A  6FEB               	movwf	processActions@action& (0+255),b
 29425                           
 29426                           ; BSR set to: 1
 29427                           ;../universalEvents.c: 244:         if (action == 0) {
 29428   00638C  51EB               	movf	processActions@action& (0+255),w,b
 29429   00638E  A4D8               	btfss	status,2,c
 29430   006390  D003               	goto	l23311
 29431   006392                     u24660:
 29432                           
 29433                           ;../universalEvents.c: 245:             doneTwoAction();
 29434   006392  EC6B  F064         	call	_doneTwoAction	;wreg free
 29435   006396  0012               	return	
 29436   006398                     l23311:
 29437                           
 29438                           ; BSR set to: 1
 29439                           ;../universalEvents.c: 249:         if (action == 1) {
 29440   006398  05EB               	decf	processActions@action& (0+255),w,b
 29441   00639A  A4D8               	btfss	status,2,c
 29442   00639C  D003               	goto	l23319
 29443                           
 29444                           ; BSR set to: 1
 29445                           ;../universalEvents.c: 251:             doSOD();
 29446   00639E  ECD3  F063         	call	_doSOD	;wreg free
 29447   0063A2  D7F7               	goto	u24660
 29448   0063A4                     l23319:
 29449                           
 29450                           ; BSR set to: 1
 29451                           ;../universalEvents.c: 255:         if (action == 2) {
 29452   0063A4  0E02               	movlw	2
 29453   0063A6  19EB               	xorwf	processActions@action& (0+255),w,b
 29454   0063A8  A4D8               	btfss	status,2,c
 29455   0063AA  D008               	goto	l23325
 29456                           
 29457                           ; BSR set to: 1
 29458                           ;../universalEvents.c: 256:             doWait(5);
 29459   0063AC  0E00               	movlw	0
 29460   0063AE  0100               	movlb	0	; () banked
 29461   0063B0  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29462   0063B2  0E05               	movlw	5
 29463   0063B4  6F9D               	movwf	doWait@duration& (0+255),b
 29464   0063B6  ECCE  F053         	call	_doWait	;wreg free
 29465   0063BA  0012               	return	
 29466   0063BC                     l23325:
 29467                           
 29468                           ; BSR set to: 1
 29469                           ;../universalEvents.c: 259:         if (action == 3) {
 29470   0063BC  0E03               	movlw	3
 29471   0063BE  19EB               	xorwf	processActions@action& (0+255),w,b
 29472   0063C0  A4D8               	btfss	status,2,c
 29473   0063C2  D008               	goto	l23331
 29474                           
 29475                           ; BSR set to: 1
 29476                           ;../universalEvents.c: 260:             doWait(10);
 29477   0063C4  0E00               	movlw	0
 29478   0063C6  0100               	movlb	0	; () banked
 29479   0063C8  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29480   0063CA  0E0A               	movlw	10
 29481   0063CC  6F9D               	movwf	doWait@duration& (0+255),b
 29482   0063CE  ECCE  F053         	call	_doWait	;wreg free
 29483   0063D2  0012               	return	
 29484   0063D4                     l23331:
 29485                           
 29486                           ; BSR set to: 1
 29487                           ;../universalEvents.c: 263:         if (action == 4) {
 29488   0063D4  0E04               	movlw	4
 29489   0063D6  19EB               	xorwf	processActions@action& (0+255),w,b
 29490   0063D8  A4D8               	btfss	status,2,c
 29491   0063DA  D008               	goto	l23337
 29492                           
 29493                           ; BSR set to: 1
 29494                           ;../universalEvents.c: 264:             doWait(20);
 29495   0063DC  0E00               	movlw	0
 29496   0063DE  0100               	movlb	0	; () banked
 29497   0063E0  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29498   0063E2  0E14               	movlw	20
 29499   0063E4  6F9D               	movwf	doWait@duration& (0+255),b
 29500   0063E6  ECCE  F053         	call	_doWait	;wreg free
 29501   0063EA  0012               	return	
 29502   0063EC                     l23337:
 29503                           
 29504                           ; BSR set to: 1
 29505                           ;../universalEvents.c: 267:         if (action == 5) {
 29506   0063EC  0E05               	movlw	5
 29507   0063EE  19EB               	xorwf	processActions@action& (0+255),w,b
 29508   0063F0  A4D8               	btfss	status,2,c
 29509   0063F2  D008               	goto	l23343
 29510                           
 29511                           ; BSR set to: 1
 29512                           ;../universalEvents.c: 268:             doWait(50);
 29513   0063F4  0E00               	movlw	0
 29514   0063F6  0100               	movlb	0	; () banked
 29515   0063F8  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 29516   0063FA  0E32               	movlw	50
 29517   0063FC  6F9D               	movwf	doWait@duration& (0+255),b
 29518   0063FE  ECCE  F053         	call	_doWait	;wreg free
 29519   006402  0012               	return	
 29520   006404                     l23343:
 29521                           
 29522                           ; BSR set to: 1
 29523                           ;../universalEvents.c: 271:         simultaneous = action & 0x80;
 29524   006404  51EB               	movf	processActions@action& (0+255),w,b
 29525   006406  0B80               	andlw	128
 29526   006408  6FE3               	movwf	processActions@simultaneous& (0+255),b
 29527                           
 29528                           ;../universalEvents.c: 272:         ioAction = action&0x7F;
 29529   00640A  51EB               	movf	processActions@action& (0+255),w,b
 29530   00640C  0B7F               	andlw	127
 29531   00640E  6FE8               	movwf	processActions@ioAction& (0+255),b
 29532                           
 29533                           ;../universalEvents.c: 273:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 29534   006410  0E07               	movlw	7
 29535   006412  65E8               	cpfsgt	processActions@ioAction& (0+255),b
 29536   006414  D0D0               	goto	l23401
 29537                           
 29538                           ; BSR set to: 1
 29539   006416  0E58               	movlw	88
 29540   006418  61E8               	cpfslt	processActions@ioAction& (0+255),b
 29541   00641A  D0CD               	goto	l23401
 29542                           
 29543                           ; BSR set to: 1
 29544                           ;../universalEvents.c: 276:             io = (((ioAction)-8)/5);
 29545   00641C  0EF8               	movlw	248
 29546   00641E  25E8               	addwf	processActions@ioAction& (0+255),w,b
 29547   006420  0100               	movlb	0	; () banked
 29548   006422  6F97               	movwf	___awdiv@dividend& (0+255),b
 29549   006424  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29550   006426  0EFF               	movlw	255
 29551   006428  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29552   00642A  0E00               	movlw	0
 29553   00642C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29554   00642E  0E05               	movlw	5
 29555   006430  6F99               	movwf	___awdiv@divisor& (0+255),b
 29556   006432  EC59  F054         	call	___awdiv	;wreg free
 29557   006436  0100               	movlb	0	; () banked
 29558   006438  5197               	movf	?___awdiv& (0+255),w,b
 29559   00643A  0101               	movlb	1	; () banked
 29560   00643C  6FEA               	movwf	processActions@io& (0+255),b
 29561                           
 29562                           ;../universalEvents.c: 277:             ioAction = (((ioAction)-8)%5);
 29563   00643E  0EF8               	movlw	248
 29564   006440  25E8               	addwf	processActions@ioAction& (0+255),w,b
 29565   006442  0100               	movlb	0	; () banked
 29566   006444  6F8D               	movwf	___awmod@dividend& (0+255),b
 29567   006446  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29568   006448  0EFF               	movlw	255
 29569   00644A  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29570   00644C  0E00               	movlw	0
 29571   00644E  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29572   006450  0E05               	movlw	5
 29573   006452  6F8F               	movwf	___awmod@divisor& (0+255),b
 29574   006454  EC6E  F058         	call	___awmod	;wreg free
 29575   006458  0100               	movlb	0	; () banked
 29576   00645A  518D               	movf	?___awmod& (0+255),w,b
 29577   00645C  0101               	movlb	1	; () banked
 29578   00645E  6FE8               	movwf	processActions@ioAction& (0+255),b
 29579                           
 29580                           ; BSR set to: 1
 29581                           ;../universalEvents.c: 278:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 29582   006460  51EA               	movf	processActions@io& (0+255),w,b
 29583   006462  0D07               	mullw	7
 29584   006464  50F3               	movf	243,w,c
 29585   006466  0F10               	addlw	16
 29586   006468  ECB0  F05F         	call	_getNV
 29587   00646C  0100               	movlb	0	; () banked
 29588   00646E  518D               	movf	?_getNV& (0+255),w,b
 29589   006470  0101               	movlb	1	; () banked
 29590   006472  6FE7               	movwf	processActions@type& (0+255),b
 29591                           
 29592                           ; BSR set to: 1
 29593                           ;../universalEvents.c: 280:             setOutputState(io, ioAction, type);
 29594   006474  C1E8  F093         	movff	processActions@ioAction,setOutputState@act
 29595   006478  C1E7  F094         	movff	processActions@type,setOutputState@type
 29596   00647C  51EA               	movf	processActions@io& (0+255),w,b
 29597   00647E  ECA7  F05C         	call	_setOutputState
 29598                           
 29599                           ;../universalEvents.c: 281:             if (needsStarting(io, ioAction, type)) {
 29600   006482  C1E8  F08D         	movff	processActions@ioAction,needsStarting@act
 29601   006486  C1E7  F08E         	movff	processActions@type,needsStarting@type
 29602   00648A  0101               	movlb	1	; () banked
 29603   00648C  51EA               	movf	processActions@io& (0+255),w,b
 29604   00648E  EC21  F055         	call	_needsStarting
 29605   006492  0900               	iorlw	0
 29606   006494  B4D8               	btfsc	status,2,c
 29607   006496  D008               	goto	l23357
 29608                           
 29609                           ;../universalEvents.c: 282:                 startOutput(io, ioAction, type);
 29610   006498  C1E8  F1E0         	movff	processActions@ioAction,startOutput@act
 29611   00649C  C1E7  F1E1         	movff	processActions@type,startOutput@type
 29612   0064A0  0101               	movlb	1	; () banked
 29613   0064A2  51EA               	movf	processActions@io& (0+255),w,b
 29614   0064A4  EC9D  F05B         	call	_startOutput
 29615   0064A8                     l23357:
 29616                           
 29617                           ;../universalEvents.c: 285:             peekItem = 1;
 29618   0064A8  0E01               	movlw	1
 29619   0064AA  0101               	movlb	1	; () banked
 29620   0064AC  6FE4               	movwf	processActions@peekItem& (0+255),b
 29621                           
 29622                           ;../universalEvents.c: 286:             while (simultaneous) {
 29623   0064AE  D06D               	goto	l23393
 29624   0064B0                     l23359:
 29625                           
 29626                           ; BSR set to: 1
 29627                           ;../universalEvents.c: 287:                 uint8_t nextAction;;../universalEvents.c: 28
      +                          8:                 uint8_t nextIo;;../universalEvents.c: 289:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 291:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 29628   0064B0  51E4               	movf	processActions@peekItem& (0+255),w,b
 29629   0064B2  EC14  F054         	call	_peekTwoActionQueue
 29630   0064B6  0101               	movlb	1	; () banked
 29631   0064B8  6FE9               	movwf	processActions@nextAction& (0+255),b
 29632                           
 29633                           ; BSR set to: 1
 29634                           ;../universalEvents.c: 293:                 if (nextAction == 0) break;
 29635   0064BA  51E9               	movf	processActions@nextAction& (0+255),w,b
 29636   0064BC  B4D8               	btfsc	status,2,c
 29637   0064BE  D068               	goto	u24790
 29638                           
 29639                           ; BSR set to: 1
 29640                           ;../universalEvents.c: 294:                 simultaneous = nextAction & 0x80;
 29641   0064C0  51E9               	movf	processActions@nextAction& (0+255),w,b
 29642   0064C2  0B80               	andlw	128
 29643   0064C4  6FE3               	movwf	processActions@simultaneous& (0+255),b
 29644                           
 29645                           ; BSR set to: 1
 29646                           ;../universalEvents.c: 295:                 nextAction &= 0x7F;
 29647   0064C6  9FE9               	bcf	processActions@nextAction& (0+255),7,b
 29648                           
 29649                           ; BSR set to: 1
 29650                           ;../universalEvents.c: 296:                 nextIo = (((nextAction)-8)/5);
 29651   0064C8  0EF8               	movlw	248
 29652   0064CA  25E9               	addwf	processActions@nextAction& (0+255),w,b
 29653   0064CC  0100               	movlb	0	; () banked
 29654   0064CE  6F97               	movwf	___awdiv@dividend& (0+255),b
 29655   0064D0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 29656   0064D2  0EFF               	movlw	255
 29657   0064D4  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 29658   0064D6  0E00               	movlw	0
 29659   0064D8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 29660   0064DA  0E05               	movlw	5
 29661   0064DC  6F99               	movwf	___awdiv@divisor& (0+255),b
 29662   0064DE  EC59  F054         	call	___awdiv	;wreg free
 29663   0064E2  0100               	movlb	0	; () banked
 29664   0064E4  5197               	movf	?___awdiv& (0+255),w,b
 29665   0064E6  0101               	movlb	1	; () banked
 29666   0064E8  6FE6               	movwf	processActions@nextIo& (0+255),b
 29667                           
 29668                           ; BSR set to: 1
 29669                           ;../universalEvents.c: 297:                 if (nextIo == io) {
 29670   0064EA  51EA               	movf	processActions@io& (0+255),w,b
 29671   0064EC  19E6               	xorwf	processActions@nextIo& (0+255),w,b
 29672   0064EE  B4D8               	btfsc	status,2,c
 29673   0064F0  D04F               	goto	u24790
 29674                           
 29675                           ; BSR set to: 1
 29676                           ;../universalEvents.c: 303:                 nextAction = (((nextAction)-8)%5);
 29677   0064F2  0EF8               	movlw	248
 29678   0064F4  25E9               	addwf	processActions@nextAction& (0+255),w,b
 29679   0064F6  0100               	movlb	0	; () banked
 29680   0064F8  6F8D               	movwf	___awmod@dividend& (0+255),b
 29681   0064FA  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 29682   0064FC  0EFF               	movlw	255
 29683   0064FE  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 29684   006500  0E00               	movlw	0
 29685   006502  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 29686   006504  0E05               	movlw	5
 29687   006506  6F8F               	movwf	___awmod@divisor& (0+255),b
 29688   006508  EC6E  F058         	call	___awmod	;wreg free
 29689   00650C  0100               	movlb	0	; () banked
 29690   00650E  518D               	movf	?___awmod& (0+255),w,b
 29691   006510  0101               	movlb	1	; () banked
 29692   006512  6FE9               	movwf	processActions@nextAction& (0+255),b
 29693                           
 29694                           ; BSR set to: 1
 29695                           ;../universalEvents.c: 304:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 29696   006514  51EA               	movf	processActions@io& (0+255),w,b
 29697   006516  0D07               	mullw	7
 29698   006518  50F3               	movf	243,w,c
 29699   00651A  0F10               	addlw	16
 29700   00651C  ECB0  F05F         	call	_getNV
 29701   006520  0100               	movlb	0	; () banked
 29702   006522  518D               	movf	?_getNV& (0+255),w,b
 29703   006524  0101               	movlb	1	; () banked
 29704   006526  6FE5               	movwf	processActions@nextType& (0+255),b
 29705                           
 29706                           ; BSR set to: 1
 29707                           ;../universalEvents.c: 305:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 29708   006528  C1E9  F093         	movff	processActions@nextAction,setOutputState@act
 29709   00652C  C1E5  F094         	movff	processActions@nextType,setOutputState@type
 29710   006530  51E6               	movf	processActions@nextIo& (0+255),w,b
 29711   006532  ECA7  F05C         	call	_setOutputState
 29712                           
 29713                           ;../universalEvents.c: 306:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 29714   006536  C1E9  F08D         	movff	processActions@nextAction,needsStarting@act
 29715   00653A  C1E5  F08E         	movff	processActions@nextType,needsStarting@type
 29716   00653E  0101               	movlb	1	; () banked
 29717   006540  51E6               	movf	processActions@nextIo& (0+255),w,b
 29718   006542  EC21  F055         	call	_needsStarting
 29719   006546  0900               	iorlw	0
 29720   006548  B4D8               	btfsc	status,2,c
 29721   00654A  D008               	goto	l23385
 29722                           
 29723                           ;../universalEvents.c: 307:                     startOutput(nextIo, nextAction, nextType
      +                          );
 29724   00654C  C1E9  F1E0         	movff	processActions@nextAction,startOutput@act
 29725   006550  C1E5  F1E1         	movff	processActions@nextType,startOutput@type
 29726   006554  0101               	movlb	1	; () banked
 29727   006556  51E6               	movf	processActions@nextIo& (0+255),w,b
 29728   006558  EC9D  F05B         	call	_startOutput
 29729   00655C                     l23385:
 29730                           
 29731                           ;../universalEvents.c: 309:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 29732   00655C  C1E9  F08D         	movff	processActions@nextAction,completed@action
 29733   006560  C1E5  F08E         	movff	processActions@nextType,completed@type
 29734   006564  0101               	movlb	1	; () banked
 29735   006566  51E6               	movf	processActions@nextIo& (0+255),w,b
 29736   006568  EC65  F052         	call	_completed
 29737   00656C  0900               	iorlw	0
 29738   00656E  B4D8               	btfsc	status,2,c
 29739   006570  D00A               	goto	l23391
 29740                           
 29741                           ;../universalEvents.c: 310:                     deleteTwoActionQueue(peekItem);
 29742   006572  0101               	movlb	1	; () banked
 29743   006574  51E4               	movf	processActions@peekItem& (0+255),w,b
 29744   006576  ECA1  F055         	call	_deleteTwoActionQueue
 29745                           
 29746                           ;../universalEvents.c: 311:                     finaliseOutput(io, type);
 29747   00657A  C1E7  F08D         	movff	processActions@type,finaliseOutput@type
 29748   00657E  0101               	movlb	1	; () banked
 29749   006580  51EA               	movf	processActions@io& (0+255),w,b
 29750   006582  EC5E  F064         	call	_finaliseOutput
 29751   006586                     l23391:
 29752                           
 29753                           ;../universalEvents.c: 313:                 peekItem++;
 29754   006586  0101               	movlb	1	; () banked
 29755   006588  2BE4               	incf	processActions@peekItem& (0+255),f,b
 29756   00658A                     l23393:
 29757                           
 29758                           ; BSR set to: 1
 29759                           ;../universalEvents.c: 286:             while (simultaneous) {
 29760   00658A  51E3               	movf	processActions@simultaneous& (0+255),w,b
 29761   00658C  A4D8               	btfss	status,2,c
 29762   00658E  D790               	goto	l23359
 29763   006590                     u24790:
 29764                           
 29765                           ; BSR set to: 1
 29766                           ;../universalEvents.c: 316:             if (completed(io, action, type)) {
 29767   006590  C1EB  F08D         	movff	processActions@action,completed@action
 29768   006594  C1E7  F08E         	movff	processActions@type,completed@type
 29769   006598  51EA               	movf	processActions@io& (0+255),w,b
 29770   00659A  EC65  F052         	call	_completed
 29771   00659E  0900               	iorlw	0
 29772   0065A0  B4D8               	btfsc	status,2,c
 29773   0065A2  0012               	return	
 29774                           
 29775                           ;../universalEvents.c: 317:                 doneTwoAction();
 29776   0065A4  EC6B  F064         	call	_doneTwoAction	;wreg free
 29777                           
 29778                           ;../universalEvents.c: 318:                 finaliseOutput(io, type);
 29779   0065A8  C1E7  F08D         	movff	processActions@type,finaliseOutput@type
 29780   0065AC  0101               	movlb	1	; () banked
 29781   0065AE  51EA               	movf	processActions@io& (0+255),w,b
 29782   0065B0  EC5E  F064         	call	_finaliseOutput
 29783                           
 29784                           ;../universalEvents.c: 319:             } else {
 29785   0065B4  D6E7               	goto	__ptext105
 29786   0065B6                     l23401:
 29787                           
 29788                           ; BSR set to: 1
 29789                           ;../universalEvents.c: 327:             doneTwoAction();
 29790   0065B6  EC6B  F064         	call	_doneTwoAction	;wreg free
 29791   0065BA  D6E4               	goto	__ptext105
 29792   0065BC                     __end_of_processActions:
 29793                           	callstack 0
 29794                           
 29795 ;; *************** function _startOutput *****************
 29796 ;; Defined at:
 29797 ;;		line 72 in file "../outputs.c"
 29798 ;; Parameters:    Size  Location     Type
 29799 ;;  io              1    wreg     unsigned char 
 29800 ;;  act             1   34[BANK1 ] unsigned char 
 29801 ;;  type            1   35[BANK1 ] unsigned char 
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;  io              1   36[BANK1 ] unsigned char 
 29804 ;; Return value:  Size  Location     Type
 29805 ;;                  1    wreg      void 
 29806 ;; Registers used:
 29807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29808 ;; Tracked objects:
 29809 ;;		On entry : 0/0
 29810 ;;		On exit  : 0/0
 29811 ;;		Unchanged: 0/0
 29812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29813 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29814 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29816 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29817 ;;Total ram usage:        3 bytes
 29818 ;; Hardware stack levels used: 1
 29819 ;; Hardware stack levels required when called: 20
 29820 ;; This function calls:
 29821 ;;		_startBounceOutput
 29822 ;;		_startDigitalOutput
 29823 ;;		_startMultiOutput
 29824 ;;		_startServoOutput
 29825 ;; This function is called by:
 29826 ;;		_processActions
 29827 ;; This function uses a non-reentrant model
 29828 ;;
 29829                           
 29830                           	psect	text106
 29831   00B73A                     __ptext106:
 29832                           	callstack 0
 29833   00B73A                     _startOutput:
 29834                           	callstack 8
 29835                           
 29836                           ;incstack = 0
 29837                           ;startOutput@io stored from wreg
 29838   00B73A  0101               	movlb	1	; () banked
 29839   00B73C  6FE2               	movwf	startOutput@io& (0+255),b
 29840                           
 29841                           ;../outputs.c: 73:     switch(type) {
 29842   00B73E  D018               	goto	l21867
 29843   00B740                     l21849:
 29844                           
 29845                           ; BSR set to: 1
 29846                           ;../outputs.c: 78:             startDigitalOutput(io, act);
 29847   00B740  C1E0  F1D8         	movff	startOutput@act,startDigitalOutput@state
 29848   00B744  51E2               	movf	startOutput@io& (0+255),w,b
 29849   00B746  EC60  F02B         	call	_startDigitalOutput
 29850   00B74A  0012               	return	
 29851   00B74C                     l21853:
 29852                           
 29853                           ; BSR set to: 1
 29854                           ;../outputs.c: 82:             startBounceOutput(io, act);
 29855   00B74C  C1E0  F08D         	movff	startOutput@act,startBounceOutput@action
 29856   00B750  51E2               	movf	startOutput@io& (0+255),w,b
 29857   00B752  ECE6  F059         	call	_startBounceOutput
 29858   00B756  0012               	return	
 29859   00B758                     l21857:
 29860                           
 29861                           ; BSR set to: 1
 29862                           ;../outputs.c: 87:             startServoOutput(io, act);
 29863   00B758  C1E0  F091         	movff	startOutput@act,startServoOutput@action
 29864   00B75C  51E2               	movf	startOutput@io& (0+255),w,b
 29865   00B75E  EC23  F04B         	call	_startServoOutput
 29866   00B762  0012               	return	
 29867   00B764                     l21861:
 29868                           
 29869                           ; BSR set to: 1
 29870                           ;../outputs.c: 92:             startMultiOutput(io, act);
 29871   00B764  C1E0  F091         	movff	startOutput@act,startMultiOutput@action
 29872   00B768  51E2               	movf	startOutput@io& (0+255),w,b
 29873   00B76A  ECE9  F050         	call	_startMultiOutput
 29874   00B76E  0012               	return	
 29875   00B770                     l21867:
 29876   00B770  0101               	movlb	1	; () banked
 29877   00B772  51E1               	movf	startOutput@type& (0+255),w,b
 29878                           
 29879                           ; Switch size 1, requested type "simple"
 29880                           ; Number of cases is 5, Range of values is 0 to 4
 29881                           ; switch strategies available:
 29882                           ; Name         Instructions Cycles
 29883                           ; simple_byte           16     9 (average)
 29884                           ;	Chosen strategy is simple_byte
 29885   00B774  0A00               	xorlw	0	; case 0
 29886   00B776  B4D8               	btfsc	status,2,c
 29887   00B778  0012               	return	
 29888   00B77A  0A01               	xorlw	1	; case 1
 29889   00B77C  B4D8               	btfsc	status,2,c
 29890   00B77E  D7E0               	goto	l21849
 29891   00B780  0A03               	xorlw	3	; case 2
 29892   00B782  B4D8               	btfsc	status,2,c
 29893   00B784  D7E9               	goto	l21857
 29894   00B786  0A01               	xorlw	1	; case 3
 29895   00B788  B4D8               	btfsc	status,2,c
 29896   00B78A  D7E0               	goto	l21853
 29897   00B78C  0A07               	xorlw	7	; case 4
 29898   00B78E  A4D8               	btfss	status,2,c
 29899   00B790  0012               	return	
 29900   00B792  D7E8               	goto	l21861
 29901   00B794                     __end_of_startOutput:
 29902                           	callstack 0
 29903                           
 29904 ;; *************** function _startServoOutput *****************
 29905 ;; Defined at:
 29906 ;;		line 557 in file "../servo.c"
 29907 ;; Parameters:    Size  Location     Type
 29908 ;;  io              1    wreg     unsigned char 
 29909 ;;  action          1   49[BANK0 ] unsigned char 
 29910 ;; Auto vars:     Size  Location     Type
 29911 ;;  io              1   51[BANK0 ] unsigned char 
 29912 ;; Return value:  Size  Location     Type
 29913 ;;                  1    wreg      void 
 29914 ;; Registers used:
 29915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29916 ;; Tracked objects:
 29917 ;;		On entry : 0/0
 29918 ;;		On exit  : 0/0
 29919 ;;		Unchanged: 0/0
 29920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29921 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29922 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29923 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29924 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29925 ;;Total ram usage:        3 bytes
 29926 ;; Hardware stack levels used: 1
 29927 ;; Hardware stack levels required when called: 13
 29928 ;; This function calls:
 29929 ;;		_getNV
 29930 ;; This function is called by:
 29931 ;;		_APP_nvValueChanged
 29932 ;;		_startOutput
 29933 ;; This function uses a non-reentrant model
 29934 ;;
 29935                           
 29936                           	psect	text107
 29937   009646                     __ptext107:
 29938                           	callstack 0
 29939   009646                     _startServoOutput:
 29940                           	callstack 13
 29941                           
 29942                           ;incstack = 0
 29943                           ;startServoOutput@io stored from wreg
 29944   009646  0100               	movlb	0	; () banked
 29945   009648  6F93               	movwf	startServoOutput@io& (0+255),b
 29946                           
 29947                           ;../servo.c: 558:     switch (action) {
 29948   00964A  D017               	goto	l20355
 29949   00964C                     l20349:
 29950                           
 29951                           ; BSR set to: 0
 29952                           ;../servo.c: 560:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29953   00964C  5193               	movf	startServoOutput@io& (0+255),w,b
 29954   00964E  0D07               	mullw	7
 29955   009650  50F3               	movf	243,w,c
 29956   009652  0F15               	addlw	21
 29957   009654  ECB0  F05F         	call	_getNV
 29958   009658  D006               	goto	L9
 29959   00965A                     l20351:
 29960                           
 29961                           ; BSR set to: 0
 29962                           ;../servo.c: 563:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29963   00965A  5193               	movf	startServoOutput@io& (0+255),w,b
 29964   00965C  0D07               	mullw	7
 29965   00965E  50F3               	movf	243,w,c
 29966   009660  0F14               	addlw	20
 29967   009662  ECB0  F05F         	call	_getNV
 29968   009666                     L9:
 29969   009666  0E00               	movlw	low _stepsPerPollSpeed
 29970   009668  0100               	movlb	0	; () banked
 29971   00966A  2593               	addwf	startServoOutput@io& (0+255),w,b
 29972   00966C  6ED9               	movwf	fsr2l,c
 29973   00966E  6ADA               	clrf	fsr2h,c
 29974   009670  0E01               	movlw	high _stepsPerPollSpeed
 29975   009672  22DA               	addwfc	fsr2h,f,c
 29976   009674  C08D  FFDF         	movff	?_getNV,indf2
 29977                           
 29978                           ;../servo.c: 564:             break;
 29979   009678  D008               	goto	l20357
 29980   00967A                     l20355:
 29981   00967A  0100               	movlb	0	; () banked
 29982   00967C  5191               	movf	startServoOutput@action& (0+255),w,b
 29983                           
 29984                           ; Switch size 1, requested type "simple"
 29985                           ; Number of cases is 2, Range of values is 1 to 2
 29986                           ; switch strategies available:
 29987                           ; Name         Instructions Cycles
 29988                           ; simple_byte            7     4 (average)
 29989                           ;	Chosen strategy is simple_byte
 29990   00967E  0A01               	xorlw	1	; case 1
 29991   009680  B4D8               	btfsc	status,2,c
 29992   009682  D7EB               	goto	l20351
 29993   009684  0A03               	xorlw	3	; case 2
 29994   009686  B4D8               	btfsc	status,2,c
 29995   009688  D7E1               	goto	l20349
 29996   00968A                     l20357:
 29997                           
 29998                           ; BSR set to: 0
 29999                           ;../servo.c: 566:     if (stepsPerPollSpeed[io] > 234) {
 30000   00968A  0E00               	movlw	low _stepsPerPollSpeed
 30001   00968C  2593               	addwf	startServoOutput@io& (0+255),w,b
 30002   00968E  6ED9               	movwf	fsr2l,c
 30003   009690  6ADA               	clrf	fsr2h,c
 30004   009692  0E01               	movlw	high _stepsPerPollSpeed
 30005   009694  22DA               	addwfc	fsr2h,f,c
 30006   009696  0EEA               	movlw	234
 30007   009698  64DF               	cpfsgt	indf2,c
 30008   00969A  D00E               	goto	l20361
 30009                           
 30010                           ; BSR set to: 0
 30011                           ;../servo.c: 567:         stepsPerPollSpeed[io] -= 234;
 30012   00969C  0E00               	movlw	low _stepsPerPollSpeed
 30013   00969E  2593               	addwf	startServoOutput@io& (0+255),w,b
 30014   0096A0  6ED9               	movwf	fsr2l,c
 30015   0096A2  6ADA               	clrf	fsr2h,c
 30016   0096A4  0E01               	movlw	high _stepsPerPollSpeed
 30017   0096A6  22DA               	addwfc	fsr2h,f,c
 30018   0096A8  0EEA               	movlw	234
 30019   0096AA  5EDF               	subwf	indf2,f,c
 30020                           
 30021                           ;../servo.c: 568:         pollsPerStepSpeed[io] = 0;
 30022   0096AC  0E74               	movlw	low _pollsPerStepSpeed
 30023   0096AE  2593               	addwf	startServoOutput@io& (0+255),w,b
 30024   0096B0  6ED9               	movwf	fsr2l,c
 30025   0096B2  6ADA               	clrf	fsr2h,c
 30026   0096B4  0E02               	movlw	high _pollsPerStepSpeed
 30027   0096B6  D01E               	goto	L10
 30028   0096B8                     l20361:
 30029                           
 30030                           ; BSR set to: 0
 30031                           ;../servo.c: 570:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 30032   0096B8  0E74               	movlw	low _pollsPerStepSpeed
 30033   0096BA  2593               	addwf	startServoOutput@io& (0+255),w,b
 30034   0096BC  6ED9               	movwf	fsr2l,c
 30035   0096BE  6ADA               	clrf	fsr2h,c
 30036   0096C0  0E02               	movlw	high _pollsPerStepSpeed
 30037   0096C2  22DA               	addwfc	fsr2h,f,c
 30038   0096C4  0E00               	movlw	low _stepsPerPollSpeed
 30039   0096C6  2593               	addwf	startServoOutput@io& (0+255),w,b
 30040   0096C8  6EE1               	movwf	fsr1l,c
 30041   0096CA  6AE2               	clrf	fsr1h,c
 30042   0096CC  0E01               	movlw	high _stepsPerPollSpeed
 30043   0096CE  22E2               	addwfc	fsr1h,f,c
 30044   0096D0  50E7               	movf	indf1,w,c
 30045   0096D2  6F92               	movwf	??_startServoOutput& (0+255),b
 30046   0096D4  5192               	movf	??_startServoOutput& (0+255),w,b
 30047   0096D6  08EB               	sublw	235
 30048   0096D8  6EDF               	movwf	indf2,c
 30049                           
 30050                           ; BSR set to: 0
 30051                           ;../servo.c: 571:         pollCount[io] = 1;
 30052   0096DA  0E64               	movlw	low _pollCount
 30053   0096DC  2593               	addwf	startServoOutput@io& (0+255),w,b
 30054   0096DE  6ED9               	movwf	fsr2l,c
 30055   0096E0  6ADA               	clrf	fsr2h,c
 30056   0096E2  0E02               	movlw	high _pollCount
 30057   0096E4  22DA               	addwfc	fsr2h,f,c
 30058   0096E6  0E01               	movlw	1
 30059   0096E8  6EDF               	movwf	indf2,c
 30060                           
 30061                           ; BSR set to: 0
 30062                           ;../servo.c: 572:         stepsPerPollSpeed[io] = 0;
 30063   0096EA  0E00               	movlw	low _stepsPerPollSpeed
 30064   0096EC  2593               	addwf	startServoOutput@io& (0+255),w,b
 30065   0096EE  6ED9               	movwf	fsr2l,c
 30066   0096F0  6ADA               	clrf	fsr2h,c
 30067   0096F2  0E01               	movlw	high _stepsPerPollSpeed
 30068   0096F4                     L10:
 30069   0096F4  22DA               	addwfc	fsr2h,f,c
 30070   0096F6  6ADF               	clrf	indf2,c
 30071                           
 30072                           ; BSR set to: 0
 30073                           ;../servo.c: 574:     servoState[io] = SS_STARTING;
 30074   0096F8  0E10               	movlw	low _servoState
 30075   0096FA  2593               	addwf	startServoOutput@io& (0+255),w,b
 30076   0096FC  6ED9               	movwf	fsr2l,c
 30077   0096FE  6ADA               	clrf	fsr2h,c
 30078   009700  0E01               	movlw	high _servoState
 30079   009702  22DA               	addwfc	fsr2h,f,c
 30080   009704  0E03               	movlw	3
 30081   009706  6EDF               	movwf	indf2,c
 30082                           
 30083                           ; BSR set to: 0
 30084   009708  0012               	return		;funcret
 30085   00970A                     __end_of_startServoOutput:
 30086                           	callstack 0
 30087                           
 30088 ;; *************** function _startMultiOutput *****************
 30089 ;; Defined at:
 30090 ;;		line 603 in file "../servo.c"
 30091 ;; Parameters:    Size  Location     Type
 30092 ;;  io              1    wreg     unsigned char 
 30093 ;;  action          1   49[BANK0 ] unsigned char 
 30094 ;; Auto vars:     Size  Location     Type
 30095 ;;  io              1   51[BANK0 ] unsigned char 
 30096 ;; Return value:  Size  Location     Type
 30097 ;;                  1    wreg      void 
 30098 ;; Registers used:
 30099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 30100 ;; Tracked objects:
 30101 ;;		On entry : 0/0
 30102 ;;		On exit  : 0/0
 30103 ;;		Unchanged: 0/0
 30104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30105 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30107 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30108 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30109 ;;Total ram usage:        3 bytes
 30110 ;; Hardware stack levels used: 1
 30111 ;; Hardware stack levels required when called: 13
 30112 ;; This function calls:
 30113 ;;		_getNV
 30114 ;; This function is called by:
 30115 ;;		_APP_nvValueChanged
 30116 ;;		_startOutput
 30117 ;; This function uses a non-reentrant model
 30118 ;;
 30119                           
 30120                           	psect	text108
 30121   00A1D2                     __ptext108:
 30122                           	callstack 0
 30123   00A1D2                     _startMultiOutput:
 30124                           	callstack 13
 30125                           
 30126                           ; BSR set to: 0
 30127                           ;incstack = 0
 30128                           ;startMultiOutput@io stored from wreg
 30129   00A1D2  0100               	movlb	0	; () banked
 30130   00A1D4  6F93               	movwf	startMultiOutput@io& (0+255),b
 30131                           
 30132                           ;../servo.c: 605:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 30133   00A1D6  0E03               	movlw	3
 30134   00A1D8  ECB0  F05F         	call	_getNV
 30135   00A1DC  0E00               	movlw	low _stepsPerPollSpeed
 30136   00A1DE  0100               	movlb	0	; () banked
 30137   00A1E0  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30138   00A1E2  6ED9               	movwf	fsr2l,c
 30139   00A1E4  6ADA               	clrf	fsr2h,c
 30140   00A1E6  0E01               	movlw	high _stepsPerPollSpeed
 30141   00A1E8  22DA               	addwfc	fsr2h,f,c
 30142   00A1EA  C08D  FFDF         	movff	?_getNV,indf2
 30143                           
 30144                           ; BSR set to: 0
 30145                           ;../servo.c: 606:     if (stepsPerPollSpeed[io] > 234) {
 30146   00A1EE  0E00               	movlw	low _stepsPerPollSpeed
 30147   00A1F0  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30148   00A1F2  6ED9               	movwf	fsr2l,c
 30149   00A1F4  6ADA               	clrf	fsr2h,c
 30150   00A1F6  0E01               	movlw	high _stepsPerPollSpeed
 30151   00A1F8  22DA               	addwfc	fsr2h,f,c
 30152   00A1FA  0EEA               	movlw	234
 30153   00A1FC  64DF               	cpfsgt	indf2,c
 30154   00A1FE  D00E               	goto	l20425
 30155                           
 30156                           ; BSR set to: 0
 30157                           ;../servo.c: 607:         stepsPerPollSpeed[io] -= 234;
 30158   00A200  0E00               	movlw	low _stepsPerPollSpeed
 30159   00A202  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30160   00A204  6ED9               	movwf	fsr2l,c
 30161   00A206  6ADA               	clrf	fsr2h,c
 30162   00A208  0E01               	movlw	high _stepsPerPollSpeed
 30163   00A20A  22DA               	addwfc	fsr2h,f,c
 30164   00A20C  0EEA               	movlw	234
 30165   00A20E  5EDF               	subwf	indf2,f,c
 30166                           
 30167                           ;../servo.c: 608:         pollsPerStepSpeed[io] = 0;
 30168   00A210  0E74               	movlw	low _pollsPerStepSpeed
 30169   00A212  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30170   00A214  6ED9               	movwf	fsr2l,c
 30171   00A216  6ADA               	clrf	fsr2h,c
 30172   00A218  0E02               	movlw	high _pollsPerStepSpeed
 30173   00A21A  D01E               	goto	L11
 30174   00A21C                     l20425:
 30175                           
 30176                           ; BSR set to: 0
 30177                           ;../servo.c: 610:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 30178   00A21C  0E74               	movlw	low _pollsPerStepSpeed
 30179   00A21E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30180   00A220  6ED9               	movwf	fsr2l,c
 30181   00A222  6ADA               	clrf	fsr2h,c
 30182   00A224  0E02               	movlw	high _pollsPerStepSpeed
 30183   00A226  22DA               	addwfc	fsr2h,f,c
 30184   00A228  0E00               	movlw	low _stepsPerPollSpeed
 30185   00A22A  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30186   00A22C  6EE1               	movwf	fsr1l,c
 30187   00A22E  6AE2               	clrf	fsr1h,c
 30188   00A230  0E01               	movlw	high _stepsPerPollSpeed
 30189   00A232  22E2               	addwfc	fsr1h,f,c
 30190   00A234  50E7               	movf	indf1,w,c
 30191   00A236  6F92               	movwf	??_startMultiOutput& (0+255),b
 30192   00A238  5192               	movf	??_startMultiOutput& (0+255),w,b
 30193   00A23A  08EB               	sublw	235
 30194   00A23C  6EDF               	movwf	indf2,c
 30195                           
 30196                           ; BSR set to: 0
 30197                           ;../servo.c: 611:         pollCount[io] = 1;
 30198   00A23E  0E64               	movlw	low _pollCount
 30199   00A240  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30200   00A242  6ED9               	movwf	fsr2l,c
 30201   00A244  6ADA               	clrf	fsr2h,c
 30202   00A246  0E02               	movlw	high _pollCount
 30203   00A248  22DA               	addwfc	fsr2h,f,c
 30204   00A24A  0E01               	movlw	1
 30205   00A24C  6EDF               	movwf	indf2,c
 30206                           
 30207                           ; BSR set to: 0
 30208                           ;../servo.c: 612:         stepsPerPollSpeed[io] = 0;
 30209   00A24E  0E00               	movlw	low _stepsPerPollSpeed
 30210   00A250  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30211   00A252  6ED9               	movwf	fsr2l,c
 30212   00A254  6ADA               	clrf	fsr2h,c
 30213   00A256  0E01               	movlw	high _stepsPerPollSpeed
 30214   00A258                     L11:
 30215   00A258  22DA               	addwfc	fsr2h,f,c
 30216   00A25A  6ADF               	clrf	indf2,c
 30217                           
 30218                           ; BSR set to: 0
 30219                           ;../servo.c: 614:     servoState[io] = SS_STARTING;
 30220   00A25C  0E10               	movlw	low _servoState
 30221   00A25E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 30222   00A260  6ED9               	movwf	fsr2l,c
 30223   00A262  6ADA               	clrf	fsr2h,c
 30224   00A264  0E01               	movlw	high _servoState
 30225   00A266  22DA               	addwfc	fsr2h,f,c
 30226   00A268  0E03               	movlw	3
 30227   00A26A  6EDF               	movwf	indf2,c
 30228                           
 30229                           ; BSR set to: 0
 30230   00A26C  0012               	return		;funcret
 30231   00A26E                     __end_of_startMultiOutput:
 30232                           	callstack 0
 30233                           
 30234 ;; *************** function _startDigitalOutput *****************
 30235 ;; Defined at:
 30236 ;;		line 107 in file "../digitalOut.c"
 30237 ;; Parameters:    Size  Location     Type
 30238 ;;  io              1    wreg     unsigned char 
 30239 ;;  state           1   26[BANK1 ] unsigned char 
 30240 ;; Auto vars:     Size  Location     Type
 30241 ;;  io              1   33[BANK1 ] unsigned char 
 30242 ;;  actionState     1   32[BANK1 ] enum E12766
 30243 ;;  pinState        1   31[BANK1 ] enum E12766
 30244 ;; Return value:  Size  Location     Type
 30245 ;;                  1    wreg      void 
 30246 ;; Registers used:
 30247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30248 ;; Tracked objects:
 30249 ;;		On entry : 0/0
 30250 ;;		On exit  : 0/0
 30251 ;;		Unchanged: 0/0
 30252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30253 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30254 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30255 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30256 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30257 ;;Total ram usage:        8 bytes
 30258 ;; Hardware stack levels used: 1
 30259 ;; Hardware stack levels required when called: 19
 30260 ;; This function calls:
 30261 ;;		_getNV
 30262 ;;		_sendInvertedProducedEvent
 30263 ;;		_setOutputPin
 30264 ;;		_writeNVM
 30265 ;; This function is called by:
 30266 ;;		_startOutput
 30267 ;; This function uses a non-reentrant model
 30268 ;;
 30269                           
 30270                           	psect	text109
 30271   0056C0                     __ptext109:
 30272                           	callstack 0
 30273   0056C0                     _startDigitalOutput:
 30274                           	callstack 8
 30275                           
 30276                           ; BSR set to: 0
 30277                           ;incstack = 0
 30278                           ;startDigitalOutput@io stored from wreg
 30279   0056C0  0101               	movlb	1	; () banked
 30280   0056C2  6FDF               	movwf	startDigitalOutput@io& (0+255),b
 30281                           
 30282                           ;../digitalOut.c: 108:     Boolean pinState;;../digitalOut.c: 109:     Boolean actionSta
      +                          te;;../digitalOut.c: 116:     if (state == 3) {
 30283   0056C4  0E03               	movlw	3
 30284   0056C6  0101               	movlb	1	; () banked
 30285   0056C8  19D8               	xorwf	startDigitalOutput@state& (0+255),w,b
 30286   0056CA  A4D8               	btfss	status,2,c
 30287   0056CC  D058               	goto	l20763
 30288                           
 30289                           ; BSR set to: 1
 30290                           ;../digitalOut.c: 117:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 30291   0056CE  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30292   0056D0  0D07               	mullw	7
 30293   0056D2  50F3               	movf	243,w,c
 30294   0056D4  0F13               	addlw	19
 30295   0056D6  ECB0  F05F         	call	_getNV
 30296   0056DA  0E20               	movlw	low _flashDelays
 30297   0056DC  0101               	movlb	1	; () banked
 30298   0056DE  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30299   0056E0  6ED9               	movwf	fsr2l,c
 30300   0056E2  6ADA               	clrf	fsr2h,c
 30301   0056E4  0E01               	movlw	high _flashDelays
 30302   0056E6  22DA               	addwfc	fsr2h,f,c
 30303   0056E8  0100               	movlb	0	; () banked
 30304   0056EA  C08D  FFDF         	movff	?_getNV,indf2
 30305                           
 30306                           ; BSR set to: 0
 30307                           ;../digitalOut.c: 118:         pulseDelays[io] = 1;
 30308   0056EE  0EA4               	movlw	low _pulseDelays
 30309   0056F0  0101               	movlb	1	; () banked
 30310   0056F2  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30311   0056F4  6ED9               	movwf	fsr2l,c
 30312   0056F6  6ADA               	clrf	fsr2h,c
 30313   0056F8  0E02               	movlw	high _pulseDelays
 30314   0056FA  22DA               	addwfc	fsr2h,f,c
 30315   0056FC  0E01               	movlw	1
 30316   0056FE  6EDF               	movwf	indf2,c
 30317                           
 30318                           ; BSR set to: 1
 30319                           ;../digitalOut.c: 119:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 30320   005700  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30321   005702  0D07               	mullw	7
 30322   005704  50F3               	movf	243,w,c
 30323   005706  0F11               	addlw	17
 30324   005708  0B20               	andlw	32
 30325   00570A  ECB0  F05F         	call	_getNV
 30326   00570E  0100               	movlb	0	; () banked
 30327   005710  518D               	movf	?_getNV& (0+255),w,b
 30328   005712  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30329   005714  A4D8               	btfss	status,2,c
 30330   005716  D002               	goto	u21000
 30331   005718  0E01               	movlw	1
 30332   00571A  D001               	goto	u21010
 30333   00571C                     u21000:
 30334   00571C  0E00               	movlw	0
 30335   00571E                     u21010:
 30336   00571E  6F91               	movwf	setOutputPin@state& (0+255),b
 30337   005720  0101               	movlb	1	; () banked
 30338   005722  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30339   005724  EC9A  F037         	call	_setOutputPin
 30340                           
 30341                           ;../digitalOut.c: 120:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 30342   005728  0EDE               	movlw	222
 30343   00572A  0101               	movlb	1	; () banked
 30344   00572C  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30345   00572E  6FD9               	movwf	??_startDigitalOutput& (0+255),b
 30346   005730  6BDA               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30347   005732  0E03               	movlw	3
 30348   005734  23DA               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30349   005736  C1D9  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30350   00573A  C1DA  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30351   00573E  0100               	movlb	0	; () banked
 30352   005740  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30353   005742  C1D8  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 30354   005746  0E00               	movlw	0
 30355   005748  EC9F  F05D         	call	_writeNVM
 30356                           
 30357                           ;../digitalOut.c: 121:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 30358   00574C  0E01               	movlw	1
 30359   00574E  0101               	movlb	1	; () banked
 30360   005750  6FD0               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30361   005752  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30362   005754  0D07               	mullw	7
 30363   005756  50F3               	movf	243,w,c
 30364   005758  0F11               	addlw	17
 30365   00575A  ECB0  F05F         	call	_getNV
 30366   00575E  0100               	movlb	0	; () banked
 30367   005760  518D               	movf	?_getNV& (0+255),w,b
 30368   005762  0B40               	andlw	64
 30369   005764  0101               	movlb	1	; () banked
 30370   005766  6FD1               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30371   005768  0E01               	movlw	1
 30372   00576A  6FD2               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30373   00576C  0E01               	movlw	1
 30374   00576E  6FD3               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30375   005770  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30376   005772  0D04               	mullw	4
 30377   005774  50F3               	movf	243,w,c
 30378   005776  0F08               	addlw	8
 30379   005778  EC36  F05E         	call	_sendInvertedProducedEvent
 30380   00577C  0012               	return	
 30381   00577E                     l20763:
 30382                           
 30383                           ; BSR set to: 1
 30384                           ;../digitalOut.c: 125:     flashDelays[io] = 0;
 30385   00577E  0E20               	movlw	low _flashDelays
 30386   005780  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30387   005782  6ED9               	movwf	fsr2l,c
 30388   005784  6ADA               	clrf	fsr2h,c
 30389   005786  0E01               	movlw	high _flashDelays
 30390   005788  22DA               	addwfc	fsr2h,f,c
 30391   00578A  6ADF               	clrf	indf2,c
 30392                           
 30393                           ; BSR set to: 1
 30394                           ;../digitalOut.c: 127:     actionState = (state == 1);
 30395   00578C  05D8               	decf	startDigitalOutput@state& (0+255),w,b
 30396   00578E  A4D8               	btfss	status,2,c
 30397   005790  D002               	goto	u21020
 30398   005792  0E01               	movlw	1
 30399   005794  D001               	goto	u21030
 30400   005796                     u21020:
 30401   005796  0E00               	movlw	0
 30402   005798                     u21030:
 30403   005798  6FDE               	movwf	startDigitalOutput@actionState& (0+255),b
 30404                           
 30405                           ; BSR set to: 1
 30406                           ;../digitalOut.c: 130:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30407   00579A  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30408   00579C  0D07               	mullw	7
 30409   00579E  50F3               	movf	243,w,c
 30410   0057A0  0F11               	addlw	17
 30411   0057A2  ECB0  F05F         	call	_getNV
 30412   0057A6  0100               	movlb	0	; () banked
 30413   0057A8  A18D               	btfss	?_getNV& (0+255),0,b
 30414   0057AA  D008               	goto	l260
 30415                           
 30416                           ; BSR set to: 0
 30417                           ;../digitalOut.c: 131:         actionState = !actionState;
 30418   0057AC  0101               	movlb	1	; () banked
 30419   0057AE  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30420   0057B0  A4D8               	btfss	status,2,c
 30421   0057B2  D002               	goto	u21050
 30422   0057B4  0E01               	movlw	1
 30423   0057B6  D001               	goto	u21060
 30424   0057B8                     u21050:
 30425   0057B8  0E00               	movlw	0
 30426   0057BA                     u21060:
 30427   0057BA  6FDE               	movwf	startDigitalOutput@actionState& (0+255),b
 30428   0057BC                     l260:
 30429                           
 30430                           ;../digitalOut.c: 135:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 30431   0057BC  0101               	movlb	1	; () banked
 30432   0057BE  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30433   0057C0  A4D8               	btfss	status,2,c
 30434   0057C2  D015               	goto	l20777
 30435                           
 30436                           ; BSR set to: 1
 30437   0057C4  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30438   0057C6  0D07               	mullw	7
 30439   0057C8  50F3               	movf	243,w,c
 30440   0057CA  0F12               	addlw	18
 30441   0057CC  ECB0  F05F         	call	_getNV
 30442   0057D0  0100               	movlb	0	; () banked
 30443   0057D2  518D               	movf	?_getNV& (0+255),w,b
 30444   0057D4  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30445   0057D6  B4D8               	btfsc	status,2,c
 30446   0057D8  D00A               	goto	l20777
 30447                           
 30448                           ; BSR set to: 0
 30449                           ;../digitalOut.c: 136:         pulseDelays[io] = 1;
 30450   0057DA  0EA4               	movlw	low _pulseDelays
 30451   0057DC  0101               	movlb	1	; () banked
 30452   0057DE  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30453   0057E0  6ED9               	movwf	fsr2l,c
 30454   0057E2  6ADA               	clrf	fsr2h,c
 30455   0057E4  0E02               	movlw	high _pulseDelays
 30456   0057E6  22DA               	addwfc	fsr2h,f,c
 30457   0057E8  0E01               	movlw	1
 30458   0057EA  6EDF               	movwf	indf2,c
 30459   0057EC  0012               	return	
 30460   0057EE                     l20777:
 30461                           
 30462                           ;../digitalOut.c: 142:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 30463   0057EE  0101               	movlb	1	; () banked
 30464   0057F0  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30465   0057F2  B4D8               	btfsc	status,2,c
 30466   0057F4  D038               	goto	l20787
 30467                           
 30468                           ; BSR set to: 1
 30469   0057F6  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30470   0057F8  0D07               	mullw	7
 30471   0057FA  50F3               	movf	243,w,c
 30472   0057FC  0F12               	addlw	18
 30473   0057FE  ECB0  F05F         	call	_getNV
 30474   005802  0100               	movlb	0	; () banked
 30475   005804  518D               	movf	?_getNV& (0+255),w,b
 30476   005806  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 30477   005808  B4D8               	btfsc	status,2,c
 30478   00580A  D02D               	goto	l20787
 30479                           
 30480                           ; BSR set to: 0
 30481   00580C  0EA4               	movlw	low _pulseDelays
 30482   00580E  0101               	movlb	1	; () banked
 30483   005810  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30484   005812  6ED9               	movwf	fsr2l,c
 30485   005814  6ADA               	clrf	fsr2h,c
 30486   005816  0E02               	movlw	high _pulseDelays
 30487   005818  22DA               	addwfc	fsr2h,f,c
 30488   00581A  50DF               	movf	indf2,w,c
 30489   00581C  A4D8               	btfss	status,2,c
 30490   00581E  D023               	goto	l20787
 30491                           
 30492                           ; BSR set to: 1
 30493                           ;../digitalOut.c: 143:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30494   005820  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30495   005822  0D07               	mullw	7
 30496   005824  50F3               	movf	243,w,c
 30497   005826  0F12               	addlw	18
 30498   005828  ECB0  F05F         	call	_getNV
 30499   00582C  0EA4               	movlw	low _pulseDelays
 30500   00582E  0101               	movlb	1	; () banked
 30501   005830  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30502   005832  6ED9               	movwf	fsr2l,c
 30503   005834  6ADA               	clrf	fsr2h,c
 30504   005836  0E02               	movlw	high _pulseDelays
 30505   005838  22DA               	addwfc	fsr2h,f,c
 30506   00583A  0100               	movlb	0	; () banked
 30507   00583C  C08D  FFDF         	movff	?_getNV,indf2
 30508                           
 30509                           ; BSR set to: 0
 30510                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 30511   005840  0EDE               	movlw	222
 30512   005842  0101               	movlb	1	; () banked
 30513   005844  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30514   005846  6FD9               	movwf	??_startDigitalOutput& (0+255),b
 30515   005848  6BDA               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30516   00584A  0E03               	movlw	3
 30517   00584C  23DA               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30518   00584E  C1D9  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30519   005852  C1DA  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30520   005856  0100               	movlb	0	; () banked
 30521   005858  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30522   00585A  0E02               	movlw	2
 30523   00585C  6FA7               	movwf	writeNVM@value& (0+255),b
 30524   00585E  0E00               	movlw	0
 30525   005860  EC9F  F05D         	call	_writeNVM
 30526                           
 30527                           ;../digitalOut.c: 147:     } else {
 30528   005864  D025               	goto	l20797
 30529   005866                     l20787:
 30530                           
 30531                           ;../digitalOut.c: 148:         pulseDelays[io] = 1;
 30532   005866  0EA4               	movlw	low _pulseDelays
 30533   005868  0101               	movlb	1	; () banked
 30534   00586A  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30535   00586C  6ED9               	movwf	fsr2l,c
 30536   00586E  6ADA               	clrf	fsr2h,c
 30537   005870  0E02               	movlw	high _pulseDelays
 30538   005872  22DA               	addwfc	fsr2h,f,c
 30539   005874  0E01               	movlw	1
 30540   005876  6EDF               	movwf	indf2,c
 30541                           
 30542                           ; BSR set to: 1
 30543                           ;../digitalOut.c: 149:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 30544   005878  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30545   00587A  A4D8               	btfss	status,2,c
 30546   00587C  D004               	goto	l20793
 30547                           
 30548                           ; BSR set to: 1
 30549   00587E  0E00               	movlw	0
 30550   005880  6FDC               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30551   005882  0E02               	movlw	2
 30552   005884  D003               	goto	L12
 30553   005886                     l20793:
 30554                           
 30555                           ; BSR set to: 1
 30556   005886  0E00               	movlw	0
 30557   005888  6FDC               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 30558   00588A  0E01               	movlw	1
 30559   00588C                     L12:
 30560   00588C  6FDB               	movwf	_startDigitalOutput$808& (0+255),b
 30561                           
 30562                           ; BSR set to: 1
 30563   00588E  0EDE               	movlw	222
 30564   005890  25DF               	addwf	startDigitalOutput@io& (0+255),w,b
 30565   005892  6FD9               	movwf	??_startDigitalOutput& (0+255),b
 30566   005894  6BDA               	clrf	(??_startDigitalOutput+1)& (0+255),b
 30567   005896  0E03               	movlw	3
 30568   005898  23DA               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 30569   00589A  C1D9  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 30570   00589E  C1DA  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 30571   0058A2  0100               	movlb	0	; () banked
 30572   0058A4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 30573   0058A6  C1DB  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 30574   0058AA  0E00               	movlw	0
 30575   0058AC  EC9F  F05D         	call	_writeNVM
 30576   0058B0                     l20797:
 30577                           
 30578                           ;../digitalOut.c: 152:     pinState = actionState;
 30579   0058B0  C1DE  F1DD         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 30580                           
 30581                           ;../digitalOut.c: 153:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 30582   0058B4  0101               	movlb	1	; () banked
 30583   0058B6  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30584   0058B8  0D07               	mullw	7
 30585   0058BA  50F3               	movf	243,w,c
 30586   0058BC  0F11               	addlw	17
 30587   0058BE  ECB0  F05F         	call	_getNV
 30588   0058C2  0100               	movlb	0	; () banked
 30589   0058C4  AB8D               	btfss	?_getNV& (0+255),5,b
 30590   0058C6  D008               	goto	l20803
 30591                           
 30592                           ; BSR set to: 0
 30593                           ;../digitalOut.c: 154:         pinState = !pinState;
 30594   0058C8  0101               	movlb	1	; () banked
 30595   0058CA  51DD               	movf	startDigitalOutput@pinState& (0+255),w,b
 30596   0058CC  A4D8               	btfss	status,2,c
 30597   0058CE  D002               	goto	u21140
 30598   0058D0  0E01               	movlw	1
 30599   0058D2  D001               	goto	u21150
 30600   0058D4                     u21140:
 30601   0058D4  0E00               	movlw	0
 30602   0058D6                     u21150:
 30603   0058D6  6FDD               	movwf	startDigitalOutput@pinState& (0+255),b
 30604   0058D8                     l20803:
 30605                           
 30606                           ;../digitalOut.c: 156:     setOutputPin(io, pinState);
 30607   0058D8  C1DD  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 30608   0058DC  0101               	movlb	1	; () banked
 30609   0058DE  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30610   0058E0  EC9A  F037         	call	_setOutputPin
 30611                           
 30612                           ;../digitalOut.c: 161:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 30613   0058E4  0101               	movlb	1	; () banked
 30614   0058E6  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30615   0058E8  0D07               	mullw	7
 30616   0058EA  50F3               	movf	243,w,c
 30617   0058EC  0F11               	addlw	17
 30618   0058EE  ECB0  F05F         	call	_getNV
 30619   0058F2  0100               	movlb	0	; () banked
 30620   0058F4  A78D               	btfss	?_getNV& (0+255),3,b
 30621   0058F6  D021               	goto	l20811
 30622                           
 30623                           ; BSR set to: 0
 30624                           ;../digitalOut.c: 162:         if (actionState) {
 30625   0058F8  0101               	movlb	1	; () banked
 30626   0058FA  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30627   0058FC  B4D8               	btfsc	status,2,c
 30628   0058FE  0012               	return	
 30629                           
 30630                           ; BSR set to: 1
 30631                           ;../digitalOut.c: 165:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 30632   005900  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30633   005902  B4D8               	btfsc	status,2,c
 30634   005904  D002               	goto	u21180
 30635   005906  0E01               	movlw	1
 30636   005908  D001               	goto	u21190
 30637   00590A                     u21180:
 30638   00590A  0E00               	movlw	0
 30639   00590C                     u21190:
 30640   00590C  6FD0               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30641   00590E  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30642   005910  0D07               	mullw	7
 30643   005912  50F3               	movf	243,w,c
 30644   005914  0F11               	addlw	17
 30645   005916  ECB0  F05F         	call	_getNV
 30646   00591A  0100               	movlb	0	; () banked
 30647   00591C  518D               	movf	?_getNV& (0+255),w,b
 30648   00591E  0B40               	andlw	64
 30649   005920  0101               	movlb	1	; () banked
 30650   005922  6FD1               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30651   005924  0E01               	movlw	1
 30652   005926  6FD2               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30653   005928  0E01               	movlw	1
 30654   00592A  6FD3               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30655   00592C  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30656   00592E  0D04               	mullw	4
 30657   005930  50F3               	movf	243,w,c
 30658   005932  0F08               	addlw	8
 30659   005934  EC36  F05E         	call	_sendInvertedProducedEvent
 30660   005938  0012               	return	
 30661   00593A                     l20811:
 30662                           
 30663                           ; BSR set to: 0
 30664                           ;../digitalOut.c: 170:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 30665   00593A  0101               	movlb	1	; () banked
 30666   00593C  51DE               	movf	startDigitalOutput@actionState& (0+255),w,b
 30667   00593E  B4D8               	btfsc	status,2,c
 30668   005940  D002               	goto	u21200
 30669   005942  0E01               	movlw	1
 30670   005944  D001               	goto	u21210
 30671   005946                     u21200:
 30672   005946  0E00               	movlw	0
 30673   005948                     u21210:
 30674   005948  6FD0               	movwf	sendInvertedProducedEvent@state& (0+255),b
 30675   00594A  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30676   00594C  0D07               	mullw	7
 30677   00594E  50F3               	movf	243,w,c
 30678   005950  0F11               	addlw	17
 30679   005952  ECB0  F05F         	call	_getNV
 30680   005956  0100               	movlb	0	; () banked
 30681   005958  518D               	movf	?_getNV& (0+255),w,b
 30682   00595A  0B40               	andlw	64
 30683   00595C  0101               	movlb	1	; () banked
 30684   00595E  6FD1               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 30685   005960  0E01               	movlw	1
 30686   005962  6FD2               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 30687   005964  0E01               	movlw	1
 30688   005966  6FD3               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 30689   005968  51DF               	movf	startDigitalOutput@io& (0+255),w,b
 30690   00596A  0D04               	mullw	4
 30691   00596C  50F3               	movf	243,w,c
 30692   00596E  0F08               	addlw	8
 30693   005970  EC36  F05E         	call	_sendInvertedProducedEvent
 30694   005974  0012               	return		;funcret
 30695   005976                     __end_of_startDigitalOutput:
 30696                           	callstack 0
 30697                           
 30698 ;; *************** function _sendInvertedProducedEvent *****************
 30699 ;; Defined at:
 30700 ;;		line 362 in file "../universalEvents.c"
 30701 ;; Parameters:    Size  Location     Type
 30702 ;;  happening       1    wreg     unsigned char 
 30703 ;;  state           1   18[BANK1 ] enum E12787
 30704 ;;  invert          1   19[BANK1 ] enum E12767
 30705 ;;  can_send_on     1   20[BANK1 ] enum E12767
 30706 ;;  can_send_off    1   21[BANK1 ] enum E12767
 30707 ;; Auto vars:     Size  Location     Type
 30708 ;;  happening       1   22[BANK1 ] unsigned char 
 30709 ;;  state_to_sen    1   25[BANK1 ] enum E12787
 30710 ;; Return value:  Size  Location     Type
 30711 ;;                  1    wreg      enum E12766
 30712 ;; Registers used:
 30713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30714 ;; Tracked objects:
 30715 ;;		On entry : 0/0
 30716 ;;		On exit  : 0/0
 30717 ;;		Unchanged: 0/0
 30718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30719 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30720 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30722 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30723 ;;Total ram usage:        8 bytes
 30724 ;; Hardware stack levels used: 1
 30725 ;; Hardware stack levels required when called: 18
 30726 ;; This function calls:
 30727 ;;		_sendProducedEvent
 30728 ;; This function is called by:
 30729 ;;		_startDigitalOutput
 30730 ;;		_sodTRCallback
 30731 ;; This function uses a non-reentrant model
 30732 ;;
 30733                           
 30734                           	psect	text110
 30735   00BC6C                     __ptext110:
 30736                           	callstack 0
 30737   00BC6C                     _sendInvertedProducedEvent:
 30738                           	callstack 9
 30739                           
 30740                           ;incstack = 0
 30741                           ;sendInvertedProducedEvent@happening stored from wreg
 30742   00BC6C  0101               	movlb	1	; () banked
 30743   00BC6E  6FD4               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 30744                           
 30745                           ;../universalEvents.c: 363:  EventState state_to_send = invert?!state:state;
 30746   00BC70  0101               	movlb	1	; () banked
 30747   00BC72  51D1               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 30748   00BC74  A4D8               	btfss	status,2,c
 30749   00BC76  D003               	goto	l20237
 30750                           
 30751                           ; BSR set to: 1
 30752   00BC78  C1D0  F1D5         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1404
 30753   00BC7C  D007               	goto	L13
 30754   00BC7E                     l20237:
 30755                           
 30756                           ; BSR set to: 1
 30757   00BC7E  51D0               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 30758   00BC80  A4D8               	btfss	status,2,c
 30759   00BC82  D002               	goto	u20290
 30760   00BC84  0E01               	movlw	1
 30761   00BC86  D001               	goto	u20300
 30762   00BC88                     u20290:
 30763   00BC88  0E00               	movlw	0
 30764   00BC8A                     u20300:
 30765   00BC8A  6FD5               	movwf	_sendInvertedProducedEvent$1404& (0+255),b
 30766   00BC8C                     L13:
 30767   00BC8C  6BD6               	clrf	(_sendInvertedProducedEvent$1404+1)& (0+255),b
 30768                           
 30769                           ; BSR set to: 1
 30770   00BC8E  C1D5  F1D7         	movff	_sendInvertedProducedEvent$1404,sendInvertedProducedEvent@state_to_send
 30771                           
 30772                           ;../universalEvents.c: 364:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 30773   00BC92  51D7               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30774   00BC94  B4D8               	btfsc	status,2,c
 30775   00BC96  D003               	goto	u20320
 30776                           
 30777                           ; BSR set to: 1
 30778   00BC98  51D2               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 30779   00BC9A  A4D8               	btfss	status,2,c
 30780   00BC9C  D006               	goto	u20340
 30781   00BC9E                     u20320:
 30782                           
 30783                           ; BSR set to: 1
 30784   00BC9E  51D7               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30785   00BCA0  A4D8               	btfss	status,2,c
 30786   00BCA2  0012               	return	
 30787                           
 30788                           ; BSR set to: 1
 30789   00BCA4  51D3               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 30790   00BCA6  B4D8               	btfsc	status,2,c
 30791   00BCA8  0012               	return	
 30792   00BCAA                     u20340:
 30793                           
 30794                           ; BSR set to: 1
 30795                           ;../universalEvents.c: 365:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 30796   00BCAA  C1D7  F0A8         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 30797   00BCAE  51D4               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 30798   00BCB0  EC42  F04C         	call	_sendProducedEvent
 30799   00BCB4  0012               	return		;funcret
 30800   00BCB6                     __end_of_sendInvertedProducedEvent:
 30801                           	callstack 0
 30802                           
 30803 ;; *************** function _startBounceOutput *****************
 30804 ;; Defined at:
 30805 ;;		line 585 in file "../servo.c"
 30806 ;; Parameters:    Size  Location     Type
 30807 ;;  io              1    wreg     unsigned char 
 30808 ;;  action          1   45[BANK0 ] unsigned char 
 30809 ;; Auto vars:     Size  Location     Type
 30810 ;;  io              1   46[BANK0 ] unsigned char 
 30811 ;; Return value:  Size  Location     Type
 30812 ;;                  1    wreg      void 
 30813 ;; Registers used:
 30814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30815 ;; Tracked objects:
 30816 ;;		On entry : 0/0
 30817 ;;		On exit  : 0/0
 30818 ;;		Unchanged: 0/0
 30819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30820 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30824 ;;Total ram usage:        2 bytes
 30825 ;; Hardware stack levels used: 1
 30826 ;; Hardware stack levels required when called: 12
 30827 ;; This function calls:
 30828 ;;		Nothing
 30829 ;; This function is called by:
 30830 ;;		_APP_nvValueChanged
 30831 ;;		_startOutput
 30832 ;; This function uses a non-reentrant model
 30833 ;;
 30834                           
 30835                           	psect	text111
 30836   00B3CC                     __ptext111:
 30837                           	callstack 0
 30838   00B3CC                     _startBounceOutput:
 30839                           	callstack 14
 30840                           
 30841                           ;incstack = 0
 30842                           ;startBounceOutput@io stored from wreg
 30843   00B3CC  0100               	movlb	0	; () banked
 30844   00B3CE  6F8E               	movwf	startBounceOutput@io& (0+255),b
 30845                           
 30846                           ;../servo.c: 586:     switch (action) {
 30847   00B3D0  D018               	goto	l20397
 30848   00B3D2                     l20391:
 30849                           
 30850                           ; BSR set to: 0
 30851                           ;../servo.c: 588:             speed[io] = 0;
 30852   00B3D2  518E               	movf	startBounceOutput@io& (0+255),w,b
 30853   00B3D4  0D02               	mullw	2
 30854   00B3D6  0E00               	movlw	low _speed
 30855   00B3D8  24F3               	addwf	243,w,c
 30856   00B3DA  6ED9               	movwf	fsr2l,c
 30857   00B3DC  0E02               	movlw	high _speed
 30858   00B3DE  20F4               	addwfc	prodh,w,c
 30859   00B3E0  6EDA               	movwf	fsr2h,c
 30860   00B3E2  6ADE               	clrf	postinc2,c
 30861   00B3E4  6ADD               	clrf	postdec2,c
 30862                           
 30863                           ;../servo.c: 589:             break;
 30864   00B3E6  D015               	goto	l20399
 30865   00B3E8                     l20393:
 30866                           
 30867                           ; BSR set to: 0
 30868                           ;../servo.c: 591:             speed[io] = 12;
 30869   00B3E8  518E               	movf	startBounceOutput@io& (0+255),w,b
 30870   00B3EA  0D02               	mullw	2
 30871   00B3EC  0E00               	movlw	low _speed
 30872   00B3EE  24F3               	addwf	243,w,c
 30873   00B3F0  6ED9               	movwf	fsr2l,c
 30874   00B3F2  0E02               	movlw	high _speed
 30875   00B3F4  20F4               	addwfc	prodh,w,c
 30876   00B3F6  6EDA               	movwf	fsr2h,c
 30877   00B3F8  0E0C               	movlw	12
 30878   00B3FA  6EDE               	movwf	postinc2,c
 30879   00B3FC  0E00               	movlw	0
 30880   00B3FE  6EDD               	movwf	postdec2,c
 30881                           
 30882                           ;../servo.c: 592:             break;
 30883   00B400  D008               	goto	l20399
 30884   00B402                     l20397:
 30885   00B402  0100               	movlb	0	; () banked
 30886   00B404  518D               	movf	startBounceOutput@action& (0+255),w,b
 30887                           
 30888                           ; Switch size 1, requested type "simple"
 30889                           ; Number of cases is 2, Range of values is 1 to 2
 30890                           ; switch strategies available:
 30891                           ; Name         Instructions Cycles
 30892                           ; simple_byte            7     4 (average)
 30893                           ;	Chosen strategy is simple_byte
 30894   00B406  0A01               	xorlw	1	; case 1
 30895   00B408  B4D8               	btfsc	status,2,c
 30896   00B40A  D7EE               	goto	l20393
 30897   00B40C  0A03               	xorlw	3	; case 2
 30898   00B40E  B4D8               	btfsc	status,2,c
 30899   00B410  D7E0               	goto	l20391
 30900   00B412                     l20399:
 30901                           
 30902                           ; BSR set to: 0
 30903                           ;../servo.c: 594:     servoState[io] = SS_STARTING;
 30904   00B412  0E10               	movlw	low _servoState
 30905   00B414  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30906   00B416  6ED9               	movwf	fsr2l,c
 30907   00B418  6ADA               	clrf	fsr2h,c
 30908   00B41A  0E01               	movlw	high _servoState
 30909   00B41C  22DA               	addwfc	fsr2h,f,c
 30910   00B41E  0E03               	movlw	3
 30911   00B420  6EDF               	movwf	indf2,c
 30912                           
 30913                           ;../servo.c: 595:     loopCount[io] = 0;
 30914   00B422  0E54               	movlw	low _loopCount
 30915   00B424  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30916   00B426  6ED9               	movwf	fsr2l,c
 30917   00B428  6ADA               	clrf	fsr2h,c
 30918   00B42A  0E02               	movlw	high _loopCount
 30919   00B42C  22DA               	addwfc	fsr2h,f,c
 30920   00B42E  6ADF               	clrf	indf2,c
 30921                           
 30922                           ; BSR set to: 0
 30923   00B430  0012               	return		;funcret
 30924   00B432                     __end_of_startBounceOutput:
 30925                           	callstack 0
 30926                           
 30927 ;; *************** function _setOutputState *****************
 30928 ;; Defined at:
 30929 ;;		line 110 in file "../outputs.c"
 30930 ;; Parameters:    Size  Location     Type
 30931 ;;  io              1    wreg     unsigned char 
 30932 ;;  act             1   51[BANK0 ] unsigned char 
 30933 ;;  type            1   52[BANK0 ] unsigned char 
 30934 ;; Auto vars:     Size  Location     Type
 30935 ;;  io              1   53[BANK0 ] unsigned char 
 30936 ;; Return value:  Size  Location     Type
 30937 ;;                  1    wreg      void 
 30938 ;; Registers used:
 30939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30940 ;; Tracked objects:
 30941 ;;		On entry : 0/0
 30942 ;;		On exit  : 0/0
 30943 ;;		Unchanged: 0/0
 30944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30946 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30948 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30949 ;;Total ram usage:        3 bytes
 30950 ;; Hardware stack levels used: 1
 30951 ;; Hardware stack levels required when called: 14
 30952 ;; This function calls:
 30953 ;;		_setBounceState
 30954 ;;		_setMultiState
 30955 ;;		_setServoState
 30956 ;; This function is called by:
 30957 ;;		_processActions
 30958 ;; This function uses a non-reentrant model
 30959 ;;
 30960                           
 30961                           	psect	text112
 30962   00B94E                     __ptext112:
 30963                           	callstack 0
 30964   00B94E                     _setOutputState:
 30965                           	callstack 14
 30966                           
 30967                           ; BSR set to: 0
 30968                           ;incstack = 0
 30969                           ;setOutputState@io stored from wreg
 30970   00B94E  0100               	movlb	0	; () banked
 30971   00B950  6F95               	movwf	setOutputState@io& (0+255),b
 30972                           
 30973                           ;../outputs.c: 111:     switch(type) {
 30974   00B952  D012               	goto	l21817
 30975   00B954                     l21803:
 30976                           
 30977                           ; BSR set to: 0
 30978                           ;../outputs.c: 124:             setBounceState(io, act);
 30979   00B954  C093  F091         	movff	setOutputState@act,setBounceState@action
 30980   00B958  5195               	movf	setOutputState@io& (0+255),w,b
 30981   00B95A  ECFC  F04D         	call	_setBounceState
 30982   00B95E  0012               	return	
 30983   00B960                     l21807:
 30984                           
 30985                           ; BSR set to: 0
 30986                           ;../outputs.c: 129:             setServoState(io, act);
 30987   00B960  C093  F091         	movff	setOutputState@act,setServoState@action
 30988   00B964  5195               	movf	setOutputState@io& (0+255),w,b
 30989   00B966  ECA6  F04D         	call	_setServoState
 30990   00B96A  0012               	return	
 30991   00B96C                     l21811:
 30992                           
 30993                           ; BSR set to: 0
 30994                           ;../outputs.c: 134:             setMultiState(io, act);
 30995   00B96C  C093  F091         	movff	setOutputState@act,setMultiState@action
 30996   00B970  5195               	movf	setOutputState@io& (0+255),w,b
 30997   00B972  ECF6  F047         	call	_setMultiState
 30998   00B976  0012               	return	
 30999   00B978                     l21817:
 31000   00B978  0100               	movlb	0	; () banked
 31001   00B97A  5194               	movf	setOutputState@type& (0+255),w,b
 31002                           
 31003                           ; Switch size 1, requested type "simple"
 31004                           ; Number of cases is 7, Range of values is 0 to 6
 31005                           ; switch strategies available:
 31006                           ; Name         Instructions Cycles
 31007                           ; simple_byte           22    12 (average)
 31008                           ;	Chosen strategy is simple_byte
 31009   00B97C  0A00               	xorlw	0	; case 0
 31010   00B97E  B4D8               	btfsc	status,2,c
 31011   00B980  0012               	return	
 31012   00B982  0A01               	xorlw	1	; case 1
 31013   00B984  B4D8               	btfsc	status,2,c
 31014   00B986  0012               	return	
 31015   00B988  0A03               	xorlw	3	; case 2
 31016   00B98A  B4D8               	btfsc	status,2,c
 31017   00B98C  D7E9               	goto	l21807
 31018   00B98E  0A01               	xorlw	1	; case 3
 31019   00B990  B4D8               	btfsc	status,2,c
 31020   00B992  D7E0               	goto	l21803
 31021   00B994  0A07               	xorlw	7	; case 4
 31022   00B996  B4D8               	btfsc	status,2,c
 31023   00B998  D7E9               	goto	l21811
 31024   00B99A  0A01               	xorlw	1	; case 5
 31025   00B99C  B4D8               	btfsc	status,2,c
 31026   00B99E  0012               	return	
 31027   00B9A0  0A03               	xorlw	3	; case 6
 31028   00B9A2  0012               	return	
 31029   00B9A4                     __end_of_setOutputState:
 31030                           	callstack 0
 31031                           
 31032 ;; *************** function _setServoState *****************
 31033 ;; Defined at:
 31034 ;;		line 625 in file "../servo.c"
 31035 ;; Parameters:    Size  Location     Type
 31036 ;;  io              1    wreg     unsigned char 
 31037 ;;  action          1   49[BANK0 ] unsigned char 
 31038 ;; Auto vars:     Size  Location     Type
 31039 ;;  io              1   50[BANK0 ] unsigned char 
 31040 ;; Return value:  Size  Location     Type
 31041 ;;                  1    wreg      void 
 31042 ;; Registers used:
 31043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31044 ;; Tracked objects:
 31045 ;;		On entry : 0/0
 31046 ;;		On exit  : 0/0
 31047 ;;		Unchanged: 0/0
 31048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31049 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31050 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31053 ;;Total ram usage:        2 bytes
 31054 ;; Hardware stack levels used: 1
 31055 ;; Hardware stack levels required when called: 13
 31056 ;; This function calls:
 31057 ;;		_getNV
 31058 ;; This function is called by:
 31059 ;;		_APP_nvValueChanged
 31060 ;;		_setOutputState
 31061 ;; This function uses a non-reentrant model
 31062 ;;
 31063                           
 31064                           	psect	text113
 31065   009B4C                     __ptext113:
 31066                           	callstack 0
 31067   009B4C                     _setServoState:
 31068                           	callstack 13
 31069                           
 31070                           ;incstack = 0
 31071                           ;setServoState@io stored from wreg
 31072   009B4C  0100               	movlb	0	; () banked
 31073   009B4E  6F92               	movwf	setServoState@io& (0+255),b
 31074                           
 31075                           ;../servo.c: 626:     switch (action) {
 31076   009B50  D04A               	goto	l20345
 31077   009B52                     l20331:
 31078                           
 31079                           ; BSR set to: 0
 31080                           ;../servo.c: 628:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31081   009B52  5192               	movf	setServoState@io& (0+255),w,b
 31082   009B54  0D07               	mullw	7
 31083   009B56  50F3               	movf	243,w,c
 31084   009B58  0F11               	addlw	17
 31085   009B5A  ECB0  F05F         	call	_getNV
 31086   009B5E  0100               	movlb	0	; () banked
 31087   009B60  A18D               	btfss	?_getNV& (0+255),0,b
 31088   009B62  D00E               	goto	l20335
 31089                           
 31090                           ; BSR set to: 0
 31091                           ;../servo.c: 629:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31092   009B64  5192               	movf	setServoState@io& (0+255),w,b
 31093   009B66  0D07               	mullw	7
 31094   009B68  50F3               	movf	243,w,c
 31095   009B6A  0F13               	addlw	19
 31096   009B6C  ECB0  F05F         	call	_getNV
 31097   009B70  0100               	movlb	0	; () banked
 31098   009B72  5192               	movf	setServoState@io& (0+255),w,b
 31099   009B74  0F01               	addlw	low _targetPos
 31100   009B76  6ED9               	movwf	fsr2l,c
 31101   009B78  6ADA               	clrf	fsr2h,c
 31102   009B7A  C08D  FFDF         	movff	?_getNV,indf2
 31103                           
 31104                           ;../servo.c: 630:             } else {
 31105   009B7E  0012               	return	
 31106   009B80                     l20335:
 31107                           
 31108                           ; BSR set to: 0
 31109                           ;../servo.c: 631:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31110   009B80  5192               	movf	setServoState@io& (0+255),w,b
 31111   009B82  0D07               	mullw	7
 31112   009B84  50F3               	movf	243,w,c
 31113   009B86  0F12               	addlw	18
 31114   009B88  ECB0  F05F         	call	_getNV
 31115   009B8C  0100               	movlb	0	; () banked
 31116   009B8E  5192               	movf	setServoState@io& (0+255),w,b
 31117   009B90  0F01               	addlw	low _targetPos
 31118   009B92  6ED9               	movwf	fsr2l,c
 31119   009B94  6ADA               	clrf	fsr2h,c
 31120   009B96  C08D  FFDF         	movff	?_getNV,indf2
 31121   009B9A  0012               	return	
 31122   009B9C                     l20337:
 31123                           
 31124                           ; BSR set to: 0
 31125                           ;../servo.c: 635:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31126   009B9C  5192               	movf	setServoState@io& (0+255),w,b
 31127   009B9E  0D07               	mullw	7
 31128   009BA0  50F3               	movf	243,w,c
 31129   009BA2  0F11               	addlw	17
 31130   009BA4  ECB0  F05F         	call	_getNV
 31131   009BA8  0100               	movlb	0	; () banked
 31132   009BAA  A18D               	btfss	?_getNV& (0+255),0,b
 31133   009BAC  D00E               	goto	l20341
 31134                           
 31135                           ; BSR set to: 0
 31136                           ;../servo.c: 636:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31137   009BAE  5192               	movf	setServoState@io& (0+255),w,b
 31138   009BB0  0D07               	mullw	7
 31139   009BB2  50F3               	movf	243,w,c
 31140   009BB4  0F12               	addlw	18
 31141   009BB6  ECB0  F05F         	call	_getNV
 31142   009BBA  0100               	movlb	0	; () banked
 31143   009BBC  5192               	movf	setServoState@io& (0+255),w,b
 31144   009BBE  0F01               	addlw	low _targetPos
 31145   009BC0  6ED9               	movwf	fsr2l,c
 31146   009BC2  6ADA               	clrf	fsr2h,c
 31147   009BC4  C08D  FFDF         	movff	?_getNV,indf2
 31148                           
 31149                           ;../servo.c: 637:             } else {
 31150   009BC8  0012               	return	
 31151   009BCA                     l20341:
 31152                           
 31153                           ; BSR set to: 0
 31154                           ;../servo.c: 638:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31155   009BCA  5192               	movf	setServoState@io& (0+255),w,b
 31156   009BCC  0D07               	mullw	7
 31157   009BCE  50F3               	movf	243,w,c
 31158   009BD0  0F13               	addlw	19
 31159   009BD2  ECB0  F05F         	call	_getNV
 31160   009BD6  0100               	movlb	0	; () banked
 31161   009BD8  5192               	movf	setServoState@io& (0+255),w,b
 31162   009BDA  0F01               	addlw	low _targetPos
 31163   009BDC  6ED9               	movwf	fsr2l,c
 31164   009BDE  6ADA               	clrf	fsr2h,c
 31165   009BE0  C08D  FFDF         	movff	?_getNV,indf2
 31166   009BE4  0012               	return	
 31167   009BE6                     l20345:
 31168   009BE6  0100               	movlb	0	; () banked
 31169   009BE8  5191               	movf	setServoState@action& (0+255),w,b
 31170                           
 31171                           ; Switch size 1, requested type "simple"
 31172                           ; Number of cases is 2, Range of values is 1 to 2
 31173                           ; switch strategies available:
 31174                           ; Name         Instructions Cycles
 31175                           ; simple_byte            7     4 (average)
 31176                           ;	Chosen strategy is simple_byte
 31177   009BEA  0A01               	xorlw	1	; case 1
 31178   009BEC  B4D8               	btfsc	status,2,c
 31179   009BEE  D7D6               	goto	l20337
 31180   009BF0  0A03               	xorlw	3	; case 2
 31181   009BF2  A4D8               	btfss	status,2,c
 31182   009BF4  0012               	return	
 31183   009BF6  D7AD               	goto	l20331
 31184   009BF8                     __end_of_setServoState:
 31185                           	callstack 0
 31186                           
 31187 ;; *************** function _setMultiState *****************
 31188 ;; Defined at:
 31189 ;;		line 676 in file "../servo.c"
 31190 ;; Parameters:    Size  Location     Type
 31191 ;;  io              1    wreg     unsigned char 
 31192 ;;  action          1   49[BANK0 ] unsigned char 
 31193 ;; Auto vars:     Size  Location     Type
 31194 ;;  io              1   50[BANK0 ] unsigned char 
 31195 ;; Return value:  Size  Location     Type
 31196 ;;                  1    wreg      void 
 31197 ;; Registers used:
 31198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31199 ;; Tracked objects:
 31200 ;;		On entry : 0/0
 31201 ;;		On exit  : 0/0
 31202 ;;		Unchanged: 0/0
 31203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31204 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31208 ;;Total ram usage:        2 bytes
 31209 ;; Hardware stack levels used: 1
 31210 ;; Hardware stack levels required when called: 13
 31211 ;; This function calls:
 31212 ;;		_getNV
 31213 ;; This function is called by:
 31214 ;;		_APP_nvValueChanged
 31215 ;;		_setOutputState
 31216 ;; This function uses a non-reentrant model
 31217 ;;
 31218                           
 31219                           	psect	text114
 31220   008FEC                     __ptext114:
 31221                           	callstack 0
 31222   008FEC                     _setMultiState:
 31223                           	callstack 13
 31224                           
 31225                           ; BSR set to: 0
 31226                           ;incstack = 0
 31227                           ;setMultiState@io stored from wreg
 31228   008FEC  0100               	movlb	0	; () banked
 31229   008FEE  6F92               	movwf	setMultiState@io& (0+255),b
 31230                           
 31231                           ;../servo.c: 677:     switch (action) {
 31232   008FF0  D056               	goto	l20417
 31233   008FF2                     l20403:
 31234                           
 31235                           ; BSR set to: 0
 31236                           ;../servo.c: 679:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31237   008FF2  5192               	movf	setMultiState@io& (0+255),w,b
 31238   008FF4  0D07               	mullw	7
 31239   008FF6  50F3               	movf	243,w,c
 31240   008FF8  0F13               	addlw	19
 31241   008FFA  ECB0  F05F         	call	_getNV
 31242   008FFE  0100               	movlb	0	; () banked
 31243   009000  5192               	movf	setMultiState@io& (0+255),w,b
 31244   009002  0F01               	addlw	low _targetPos
 31245   009004  6ED9               	movwf	fsr2l,c
 31246   009006  6ADA               	clrf	fsr2h,c
 31247   009008  C08D  FFDF         	movff	?_getNV,indf2
 31248                           
 31249                           ;../servo.c: 680:             break;
 31250   00900C  0012               	return	
 31251   00900E                     l20405:
 31252                           
 31253                           ; BSR set to: 0
 31254                           ;../servo.c: 682:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 31255   00900E  5192               	movf	setMultiState@io& (0+255),w,b
 31256   009010  0D07               	mullw	7
 31257   009012  50F3               	movf	243,w,c
 31258   009014  0F14               	addlw	20
 31259   009016  ECB0  F05F         	call	_getNV
 31260   00901A  0100               	movlb	0	; () banked
 31261   00901C  5192               	movf	setMultiState@io& (0+255),w,b
 31262   00901E  0F01               	addlw	low _targetPos
 31263   009020  6ED9               	movwf	fsr2l,c
 31264   009022  6ADA               	clrf	fsr2h,c
 31265   009024  C08D  FFDF         	movff	?_getNV,indf2
 31266                           
 31267                           ;../servo.c: 683:             break;
 31268   009028  0012               	return	
 31269   00902A                     l20407:
 31270                           
 31271                           ; BSR set to: 0
 31272                           ;../servo.c: 685:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 31273   00902A  5192               	movf	setMultiState@io& (0+255),w,b
 31274   00902C  0D07               	mullw	7
 31275   00902E  50F3               	movf	243,w,c
 31276   009030  0F12               	addlw	18
 31277   009032  ECB0  F05F         	call	_getNV
 31278   009036  0100               	movlb	0	; () banked
 31279   009038  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 31280   00903A  0012               	return	
 31281   00903C  518E               	movf	(?_getNV+1)& (0+255),w,b
 31282   00903E  E104               	bnz	u20450
 31283   009040  0E03               	movlw	3
 31284   009042  5D8D               	subwf	?_getNV& (0+255),w,b
 31285   009044  A0D8               	btfss	status,0,c
 31286   009046  0012               	return	
 31287   009048                     u20450:
 31288                           
 31289                           ; BSR set to: 0
 31290                           ;../servo.c: 686:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 31291   009048  5192               	movf	setMultiState@io& (0+255),w,b
 31292   00904A  0D07               	mullw	7
 31293   00904C  50F3               	movf	243,w,c
 31294   00904E  0F15               	addlw	21
 31295   009050  ECB0  F05F         	call	_getNV
 31296   009054  0100               	movlb	0	; () banked
 31297   009056  5192               	movf	setMultiState@io& (0+255),w,b
 31298   009058  0F01               	addlw	low _targetPos
 31299   00905A  6ED9               	movwf	fsr2l,c
 31300   00905C  6ADA               	clrf	fsr2h,c
 31301   00905E  C08D  FFDF         	movff	?_getNV,indf2
 31302   009062  0012               	return	
 31303   009064                     l20411:
 31304                           
 31305                           ; BSR set to: 0
 31306                           ;../servo.c: 690:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 31307   009064  5192               	movf	setMultiState@io& (0+255),w,b
 31308   009066  0D07               	mullw	7
 31309   009068  50F3               	movf	243,w,c
 31310   00906A  0F12               	addlw	18
 31311   00906C  ECB0  F05F         	call	_getNV
 31312   009070  0100               	movlb	0	; () banked
 31313   009072  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 31314   009074  0012               	return	
 31315   009076  518E               	movf	(?_getNV+1)& (0+255),w,b
 31316   009078  E104               	bnz	u20460
 31317   00907A  0E04               	movlw	4
 31318   00907C  5D8D               	subwf	?_getNV& (0+255),w,b
 31319   00907E  A0D8               	btfss	status,0,c
 31320   009080  0012               	return	
 31321   009082                     u20460:
 31322                           
 31323                           ; BSR set to: 0
 31324                           ;../servo.c: 691:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 31325   009082  5192               	movf	setMultiState@io& (0+255),w,b
 31326   009084  0D07               	mullw	7
 31327   009086  50F3               	movf	243,w,c
 31328   009088  0F16               	addlw	22
 31329   00908A  ECB0  F05F         	call	_getNV
 31330   00908E  0100               	movlb	0	; () banked
 31331   009090  5192               	movf	setMultiState@io& (0+255),w,b
 31332   009092  0F01               	addlw	low _targetPos
 31333   009094  6ED9               	movwf	fsr2l,c
 31334   009096  6ADA               	clrf	fsr2h,c
 31335   009098  C08D  FFDF         	movff	?_getNV,indf2
 31336   00909C  0012               	return	
 31337   00909E                     l20417:
 31338   00909E  0100               	movlb	0	; () banked
 31339   0090A0  5191               	movf	setMultiState@action& (0+255),w,b
 31340                           
 31341                           ; Switch size 1, requested type "simple"
 31342                           ; Number of cases is 4, Range of values is 0 to 3
 31343                           ; switch strategies available:
 31344                           ; Name         Instructions Cycles
 31345                           ; simple_byte           13     7 (average)
 31346                           ;	Chosen strategy is simple_byte
 31347   0090A2  0A00               	xorlw	0	; case 0
 31348   0090A4  B4D8               	btfsc	status,2,c
 31349   0090A6  D7A5               	goto	l20403
 31350   0090A8  0A01               	xorlw	1	; case 1
 31351   0090AA  B4D8               	btfsc	status,2,c
 31352   0090AC  D7B0               	goto	l20405
 31353   0090AE  0A03               	xorlw	3	; case 2
 31354   0090B0  B4D8               	btfsc	status,2,c
 31355   0090B2  D7BB               	goto	l20407
 31356   0090B4  0A01               	xorlw	1	; case 3
 31357   0090B6  A4D8               	btfss	status,2,c
 31358   0090B8  0012               	return	
 31359   0090BA  D7D4               	goto	l20411
 31360   0090BC                     __end_of_setMultiState:
 31361                           	callstack 0
 31362                           
 31363 ;; *************** function _setBounceState *****************
 31364 ;; Defined at:
 31365 ;;		line 652 in file "../servo.c"
 31366 ;; Parameters:    Size  Location     Type
 31367 ;;  io              1    wreg     unsigned char 
 31368 ;;  action          1   49[BANK0 ] unsigned char 
 31369 ;; Auto vars:     Size  Location     Type
 31370 ;;  io              1   50[BANK0 ] unsigned char 
 31371 ;; Return value:  Size  Location     Type
 31372 ;;                  1    wreg      void 
 31373 ;; Registers used:
 31374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31375 ;; Tracked objects:
 31376 ;;		On entry : 0/0
 31377 ;;		On exit  : 0/0
 31378 ;;		Unchanged: 0/0
 31379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31380 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31383 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31384 ;;Total ram usage:        2 bytes
 31385 ;; Hardware stack levels used: 1
 31386 ;; Hardware stack levels required when called: 13
 31387 ;; This function calls:
 31388 ;;		_getNV
 31389 ;; This function is called by:
 31390 ;;		_APP_nvValueChanged
 31391 ;;		_setOutputState
 31392 ;; This function uses a non-reentrant model
 31393 ;;
 31394                           
 31395                           	psect	text115
 31396   009BF8                     __ptext115:
 31397                           	callstack 0
 31398   009BF8                     _setBounceState:
 31399                           	callstack 13
 31400                           
 31401                           ; BSR set to: 0
 31402                           ;incstack = 0
 31403                           ;setBounceState@io stored from wreg
 31404   009BF8  0100               	movlb	0	; () banked
 31405   009BFA  6F92               	movwf	setBounceState@io& (0+255),b
 31406                           
 31407                           ;../servo.c: 653:     switch (action) {
 31408   009BFC  D04A               	goto	l20387
 31409   009BFE                     l20373:
 31410                           
 31411                           ; BSR set to: 0
 31412                           ;../servo.c: 655:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31413   009BFE  5192               	movf	setBounceState@io& (0+255),w,b
 31414   009C00  0D07               	mullw	7
 31415   009C02  50F3               	movf	243,w,c
 31416   009C04  0F11               	addlw	17
 31417   009C06  ECB0  F05F         	call	_getNV
 31418   009C0A  0100               	movlb	0	; () banked
 31419   009C0C  A18D               	btfss	?_getNV& (0+255),0,b
 31420   009C0E  D00E               	goto	l20377
 31421                           
 31422                           ; BSR set to: 0
 31423                           ;../servo.c: 656:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31424   009C10  5192               	movf	setBounceState@io& (0+255),w,b
 31425   009C12  0D07               	mullw	7
 31426   009C14  50F3               	movf	243,w,c
 31427   009C16  0F12               	addlw	18
 31428   009C18  ECB0  F05F         	call	_getNV
 31429   009C1C  0100               	movlb	0	; () banked
 31430   009C1E  5192               	movf	setBounceState@io& (0+255),w,b
 31431   009C20  0F01               	addlw	low _targetPos
 31432   009C22  6ED9               	movwf	fsr2l,c
 31433   009C24  6ADA               	clrf	fsr2h,c
 31434   009C26  C08D  FFDF         	movff	?_getNV,indf2
 31435                           
 31436                           ;../servo.c: 657:             } else {
 31437   009C2A  0012               	return	
 31438   009C2C                     l20377:
 31439                           
 31440                           ; BSR set to: 0
 31441                           ;../servo.c: 658:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31442   009C2C  5192               	movf	setBounceState@io& (0+255),w,b
 31443   009C2E  0D07               	mullw	7
 31444   009C30  50F3               	movf	243,w,c
 31445   009C32  0F13               	addlw	19
 31446   009C34  ECB0  F05F         	call	_getNV
 31447   009C38  0100               	movlb	0	; () banked
 31448   009C3A  5192               	movf	setBounceState@io& (0+255),w,b
 31449   009C3C  0F01               	addlw	low _targetPos
 31450   009C3E  6ED9               	movwf	fsr2l,c
 31451   009C40  6ADA               	clrf	fsr2h,c
 31452   009C42  C08D  FFDF         	movff	?_getNV,indf2
 31453   009C46  0012               	return	
 31454   009C48                     l20379:
 31455                           
 31456                           ; BSR set to: 0
 31457                           ;../servo.c: 662:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 31458   009C48  5192               	movf	setBounceState@io& (0+255),w,b
 31459   009C4A  0D07               	mullw	7
 31460   009C4C  50F3               	movf	243,w,c
 31461   009C4E  0F11               	addlw	17
 31462   009C50  ECB0  F05F         	call	_getNV
 31463   009C54  0100               	movlb	0	; () banked
 31464   009C56  A18D               	btfss	?_getNV& (0+255),0,b
 31465   009C58  D00E               	goto	l20383
 31466                           
 31467                           ; BSR set to: 0
 31468                           ;../servo.c: 663:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 31469   009C5A  5192               	movf	setBounceState@io& (0+255),w,b
 31470   009C5C  0D07               	mullw	7
 31471   009C5E  50F3               	movf	243,w,c
 31472   009C60  0F13               	addlw	19
 31473   009C62  ECB0  F05F         	call	_getNV
 31474   009C66  0100               	movlb	0	; () banked
 31475   009C68  5192               	movf	setBounceState@io& (0+255),w,b
 31476   009C6A  0F01               	addlw	low _targetPos
 31477   009C6C  6ED9               	movwf	fsr2l,c
 31478   009C6E  6ADA               	clrf	fsr2h,c
 31479   009C70  C08D  FFDF         	movff	?_getNV,indf2
 31480                           
 31481                           ;../servo.c: 664:             } else {
 31482   009C74  0012               	return	
 31483   009C76                     l20383:
 31484                           
 31485                           ; BSR set to: 0
 31486                           ;../servo.c: 665:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 31487   009C76  5192               	movf	setBounceState@io& (0+255),w,b
 31488   009C78  0D07               	mullw	7
 31489   009C7A  50F3               	movf	243,w,c
 31490   009C7C  0F12               	addlw	18
 31491   009C7E  ECB0  F05F         	call	_getNV
 31492   009C82  0100               	movlb	0	; () banked
 31493   009C84  5192               	movf	setBounceState@io& (0+255),w,b
 31494   009C86  0F01               	addlw	low _targetPos
 31495   009C88  6ED9               	movwf	fsr2l,c
 31496   009C8A  6ADA               	clrf	fsr2h,c
 31497   009C8C  C08D  FFDF         	movff	?_getNV,indf2
 31498   009C90  0012               	return	
 31499   009C92                     l20387:
 31500   009C92  0100               	movlb	0	; () banked
 31501   009C94  5191               	movf	setBounceState@action& (0+255),w,b
 31502                           
 31503                           ; Switch size 1, requested type "simple"
 31504                           ; Number of cases is 2, Range of values is 1 to 2
 31505                           ; switch strategies available:
 31506                           ; Name         Instructions Cycles
 31507                           ; simple_byte            7     4 (average)
 31508                           ;	Chosen strategy is simple_byte
 31509   009C96  0A01               	xorlw	1	; case 1
 31510   009C98  B4D8               	btfsc	status,2,c
 31511   009C9A  D7D6               	goto	l20379
 31512   009C9C  0A03               	xorlw	3	; case 2
 31513   009C9E  A4D8               	btfss	status,2,c
 31514   009CA0  0012               	return	
 31515   009CA2  D7AD               	goto	l20373
 31516   009CA4                     __end_of_setBounceState:
 31517                           	callstack 0
 31518                           
 31519 ;; *************** function _needsStarting *****************
 31520 ;; Defined at:
 31521 ;;		line 182 in file "../outputs.c"
 31522 ;; Parameters:    Size  Location     Type
 31523 ;;  io              1    wreg     unsigned char 
 31524 ;;  act             1   45[BANK0 ] unsigned char 
 31525 ;;  type            1   46[BANK0 ] unsigned char 
 31526 ;; Auto vars:     Size  Location     Type
 31527 ;;  io              1   49[BANK0 ] unsigned char 
 31528 ;; Return value:  Size  Location     Type
 31529 ;;                  1    wreg      enum E12767
 31530 ;; Registers used:
 31531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31532 ;; Tracked objects:
 31533 ;;		On entry : 0/0
 31534 ;;		On exit  : 0/0
 31535 ;;		Unchanged: 0/0
 31536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31537 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31539 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31540 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31541 ;;Total ram usage:        5 bytes
 31542 ;; Hardware stack levels used: 1
 31543 ;; Hardware stack levels required when called: 12
 31544 ;; This function calls:
 31545 ;;		Nothing
 31546 ;; This function is called by:
 31547 ;;		_processActions
 31548 ;; This function uses a non-reentrant model
 31549 ;;
 31550                           
 31551                           	psect	text116
 31552   00AA42                     __ptext116:
 31553                           	callstack 0
 31554   00AA42                     _needsStarting:
 31555                           	callstack 16
 31556                           
 31557                           ; BSR set to: 0
 31558                           ;incstack = 0
 31559                           ;needsStarting@io stored from wreg
 31560   00AA42  0100               	movlb	0	; () banked
 31561   00AA44  6F91               	movwf	needsStarting@io& (0+255),b
 31562                           
 31563                           ;../outputs.c: 183:     switch(type) {
 31564   00AA46  D02B               	goto	l21841
 31565   00AA48                     l21821:
 31566                           
 31567                           ; BSR set to: 0
 31568                           ;../outputs.c: 186:             return FALSE;
 31569   00AA48  0E00               	movlw	0
 31570   00AA4A  0012               	return	
 31571   00AA4C                     l21825:
 31572                           
 31573                           ; BSR set to: 0
 31574                           ;../outputs.c: 195:             return (pulseDelays[io] == 0);
 31575   00AA4C  0EA4               	movlw	low _pulseDelays
 31576   00AA4E  2591               	addwf	needsStarting@io& (0+255),w,b
 31577   00AA50  6ED9               	movwf	fsr2l,c
 31578   00AA52  6ADA               	clrf	fsr2h,c
 31579   00AA54  0E02               	movlw	high _pulseDelays
 31580   00AA56  22DA               	addwfc	fsr2h,f,c
 31581   00AA58  50DF               	movf	indf2,w,c
 31582   00AA5A  A4D8               	btfss	status,2,c
 31583   00AA5C  D002               	goto	u22380
 31584   00AA5E  0E01               	movlw	1
 31585   00AA60  0012               	return	
 31586   00AA62                     u22380:
 31587   00AA62  0E00               	movlw	0
 31588   00AA64  0012               	return	
 31589   00AA66                     l21829:
 31590                           
 31591                           ; BSR set to: 0
 31592                           ;../outputs.c: 205:             if (targetPos[io] == currentPos[io]) {
 31593   00AA66  0E30               	movlw	low _currentPos
 31594   00AA68  2591               	addwf	needsStarting@io& (0+255),w,b
 31595   00AA6A  6ED9               	movwf	fsr2l,c
 31596   00AA6C  6ADA               	clrf	fsr2h,c
 31597   00AA6E  0E01               	movlw	high _currentPos
 31598   00AA70  22DA               	addwfc	fsr2h,f,c
 31599   00AA72  5191               	movf	needsStarting@io& (0+255),w,b
 31600   00AA74  0F01               	addlw	low _targetPos
 31601   00AA76  6EE1               	movwf	fsr1l,c
 31602   00AA78  6AE2               	clrf	fsr1h,c
 31603   00AA7A  50DE               	movf	postinc2,w,c
 31604   00AA7C  18E6               	xorwf	postinc1,w,c
 31605   00AA7E  B4D8               	btfsc	status,2,c
 31606   00AA80  D7E3               	goto	l21821
 31607                           
 31608                           ; BSR set to: 0
 31609                           ;../outputs.c: 209:             return (servoState[io] != SS_MOVING);
 31610   00AA82  0E10               	movlw	low _servoState
 31611   00AA84  2591               	addwf	needsStarting@io& (0+255),w,b
 31612   00AA86  6ED9               	movwf	fsr2l,c
 31613   00AA88  6ADA               	clrf	fsr2h,c
 31614   00AA8A  0E01               	movlw	high _servoState
 31615   00AA8C  22DA               	addwfc	fsr2h,f,c
 31616   00AA8E  0E02               	movlw	2
 31617   00AA90  18DE               	xorwf	postinc2,w,c
 31618   00AA92  B4D8               	btfsc	status,2,c
 31619   00AA94  D002               	goto	u22410
 31620   00AA96  0E01               	movlw	1
 31621   00AA98  0012               	return	
 31622   00AA9A                     u22410:
 31623   00AA9A  0E00               	movlw	0
 31624   00AA9C  0012               	return	
 31625   00AA9E                     l21841:
 31626   00AA9E  0100               	movlb	0	; () banked
 31627   00AAA0  518E               	movf	needsStarting@type& (0+255),w,b
 31628                           
 31629                           ; Switch size 1, requested type "simple"
 31630                           ; Number of cases is 5, Range of values is 0 to 4
 31631                           ; switch strategies available:
 31632                           ; Name         Instructions Cycles
 31633                           ; simple_byte           16     9 (average)
 31634                           ;	Chosen strategy is simple_byte
 31635   00AAA2  0A00               	xorlw	0	; case 0
 31636   00AAA4  B4D8               	btfsc	status,2,c
 31637   00AAA6  D7D0               	goto	l21821
 31638   00AAA8  0A01               	xorlw	1	; case 1
 31639   00AAAA  B4D8               	btfsc	status,2,c
 31640   00AAAC  D7CF               	goto	l21825
 31641   00AAAE  0A03               	xorlw	3	; case 2
 31642   00AAB0  B4D8               	btfsc	status,2,c
 31643   00AAB2  D7D9               	goto	l21829
 31644   00AAB4  0A01               	xorlw	1	; case 3
 31645   00AAB6  B4D8               	btfsc	status,2,c
 31646   00AAB8  D7D6               	goto	l21829
 31647   00AABA  0A07               	xorlw	7	; case 4
 31648   00AABC  B4D8               	btfsc	status,2,c
 31649   00AABE  D7D3               	goto	l21829
 31650                           
 31651                           ; BSR set to: 0
 31652                           ;../outputs.c: 212:     return TRUE;
 31653   00AAC0  0E01               	movlw	1
 31654                           
 31655                           ; BSR set to: 0
 31656   00AAC2  0012               	return		;funcret
 31657   00AAC4                     __end_of_needsStarting:
 31658                           	callstack 0
 31659                           
 31660 ;; *************** function _getTwoAction *****************
 31661 ;; Defined at:
 31662 ;;		line 414 in file "../event_consumerDualActionQueue.c"
 31663 ;; Parameters:    Size  Location     Type
 31664 ;;		None
 31665 ;; Auto vars:     Size  Location     Type
 31666 ;;		None
 31667 ;; Return value:  Size  Location     Type
 31668 ;;                  1    wreg      unsigned char 
 31669 ;; Registers used:
 31670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31671 ;; Tracked objects:
 31672 ;;		On entry : 0/0
 31673 ;;		On exit  : 0/0
 31674 ;;		Unchanged: 0/0
 31675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31680 ;;Total ram usage:        0 bytes
 31681 ;; Hardware stack levels used: 1
 31682 ;; Hardware stack levels required when called: 13
 31683 ;; This function calls:
 31684 ;;		_peekTwoActionQueue
 31685 ;; This function is called by:
 31686 ;;		_processActions
 31687 ;; This function uses a non-reentrant model
 31688 ;;
 31689                           
 31690                           	psect	text117
 31691   00C8B4                     __ptext117:
 31692                           	callstack 0
 31693   00C8B4                     _getTwoAction:
 31694                           	callstack 15
 31695                           
 31696                           ;../event_consumerDualActionQueue.c: 415:  return peekTwoActionQueue(0);
 31697                           
 31698                           ; BSR set to: 0
 31699                           ;incstack = 0
 31700   00C8B4  0E00               	movlw	0
 31701   00C8B6  EC14  F054         	call	_peekTwoActionQueue
 31702   00C8BA  0012               	return		;funcret
 31703   00C8BC                     __end_of_getTwoAction:
 31704                           	callstack 0
 31705                           
 31706 ;; *************** function _peekTwoActionQueue *****************
 31707 ;; Defined at:
 31708 ;;		line 453 in file "../event_consumerDualActionQueue.c"
 31709 ;; Parameters:    Size  Location     Type
 31710 ;;  index           1    wreg     unsigned char 
 31711 ;; Auto vars:     Size  Location     Type
 31712 ;;  index           1   46[BANK0 ] unsigned char 
 31713 ;;  qty             1   45[BANK0 ] unsigned char 
 31714 ;; Return value:  Size  Location     Type
 31715 ;;                  1    wreg      unsigned char 
 31716 ;; Registers used:
 31717 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31718 ;; Tracked objects:
 31719 ;;		On entry : 0/0
 31720 ;;		On exit  : 0/0
 31721 ;;		Unchanged: 0/0
 31722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31724 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31727 ;;Total ram usage:        2 bytes
 31728 ;; Hardware stack levels used: 1
 31729 ;; Hardware stack levels required when called: 12
 31730 ;; This function calls:
 31731 ;;		Nothing
 31732 ;; This function is called by:
 31733 ;;		_getTwoAction
 31734 ;;		_processActions
 31735 ;; This function uses a non-reentrant model
 31736 ;;
 31737                           
 31738                           	psect	text118
 31739   00A828                     __ptext118:
 31740                           	callstack 0
 31741   00A828                     _peekTwoActionQueue:
 31742                           	callstack 16
 31743                           
 31744                           ;incstack = 0
 31745                           ;peekTwoActionQueue@index stored from wreg
 31746   00A828  0100               	movlb	0	; () banked
 31747   00A82A  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 31748                           
 31749                           ;../event_consumerDualActionQueue.c: 454:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 455:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31750   00A82C  0100               	movlb	0	; () banked
 31751   00A82E  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31752   00A830  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 31753   00A832  0B07               	andlw	7
 31754   00A834  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31755                           
 31756                           ;../event_consumerDualActionQueue.c: 456:     if (index < qty) {
 31757   00A836  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31758   00A838  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31759   00A83A  B0D8               	btfsc	status,0,c
 31760   00A83C  D019               	goto	l20843
 31761                           
 31762                           ; BSR set to: 0
 31763                           ;../event_consumerDualActionQueue.c: 457:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 31764   00A83E  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31765   00A840  19CB               	xorwf	_expeditedReadIndex& (0+255),w,b
 31766   00A842  A4D8               	btfss	status,2,c
 31767   00A844  D002               	goto	l20831
 31768   00A846                     u21240:
 31769                           
 31770                           ; BSR set to: 0
 31771   00A846  0E00               	movlw	0
 31772   00A848  0012               	return	
 31773   00A84A                     l20831:
 31774                           
 31775                           ; BSR set to: 0
 31776                           ;../event_consumerDualActionQueue.c: 458:         index += expeditedReadIndex;
 31777   00A84A  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 31778   00A84C  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31779                           
 31780                           ;../event_consumerDualActionQueue.c: 459:         if (index >= 8) {
 31781   00A84E  0E07               	movlw	7
 31782   00A850  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31783   00A852  D002               	goto	l547
 31784                           
 31785                           ; BSR set to: 0
 31786                           ;../event_consumerDualActionQueue.c: 460:             index -= 8;
 31787   00A854  0E08               	movlw	8
 31788   00A856  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31789   00A858                     l547:
 31790                           
 31791                           ; BSR set to: 0
 31792                           ;../event_consumerDualActionQueue.c: 462:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 31793   00A858  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 31794   00A85A  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31795   00A85C  B4D8               	btfsc	status,2,c
 31796   00A85E  D7F3               	goto	u21240
 31797                           
 31798                           ; BSR set to: 0
 31799                           ;../event_consumerDualActionQueue.c: 463:         return expeditedQueueBuf[index];
 31800   00A860  0EC4               	movlw	low _expeditedQueueBuf
 31801   00A862  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31802   00A864  6ED9               	movwf	fsr2l,c
 31803   00A866  6ADA               	clrf	fsr2h,c
 31804   00A868  0E02               	movlw	high _expeditedQueueBuf
 31805   00A86A  22DA               	addwfc	fsr2h,f,c
 31806   00A86C  50DF               	movf	indf2,w,c
 31807   00A86E  0012               	return	
 31808   00A870                     l20843:
 31809                           
 31810                           ; BSR set to: 0
 31811                           ;../event_consumerDualActionQueue.c: 465:     index -= qty;
 31812   00A870  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31813   00A872  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31814                           
 31815                           ;../event_consumerDualActionQueue.c: 466:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31816   00A874  51CD               	movf	_normalReadIndex& (0+255),w,b
 31817   00A876  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 31818   00A878  0B3F               	andlw	63
 31819   00A87A  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31820                           
 31821                           ;../event_consumerDualActionQueue.c: 467:     if (index < qty) {
 31822   00A87C  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31823   00A87E  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31824   00A880  B0D8               	btfsc	status,0,c
 31825   00A882  D7E1               	goto	u21240
 31826                           
 31827                           ; BSR set to: 0
 31828                           ;../event_consumerDualActionQueue.c: 468:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 31829   00A884  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31830   00A886  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 31831   00A888  B4D8               	btfsc	status,2,c
 31832   00A88A  D7DD               	goto	u21240
 31833                           
 31834                           ; BSR set to: 0
 31835                           ;../event_consumerDualActionQueue.c: 469:         index += normalReadIndex;
 31836   00A88C  51CD               	movf	_normalReadIndex& (0+255),w,b
 31837   00A88E  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31838                           
 31839                           ;../event_consumerDualActionQueue.c: 470:         if (index >= 64) {
 31840   00A890  0E3F               	movlw	63
 31841   00A892  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31842   00A894  D002               	goto	l551
 31843                           
 31844                           ; BSR set to: 0
 31845                           ;../event_consumerDualActionQueue.c: 471:             index -= 64;
 31846   00A896  0E40               	movlw	64
 31847   00A898  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31848   00A89A                     l551:
 31849                           
 31850                           ; BSR set to: 0
 31851                           ;../event_consumerDualActionQueue.c: 473:         if (index == normalWriteIndex) return 
      +                          0;
 31852   00A89A  51CC               	movf	_normalWriteIndex& (0+255),w,b
 31853   00A89C  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31854   00A89E  B4D8               	btfsc	status,2,c
 31855   00A8A0  D7D2               	goto	u21240
 31856                           
 31857                           ; BSR set to: 0
 31858                           ;../event_consumerDualActionQueue.c: 474:         return normalQueueBuf[index];
 31859   00A8A2  0E80               	movlw	low _normalQueueBuf
 31860   00A8A4  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31861   00A8A6  6ED9               	movwf	fsr2l,c
 31862   00A8A8  6ADA               	clrf	fsr2h,c
 31863   00A8AA  0E04               	movlw	high _normalQueueBuf
 31864   00A8AC  22DA               	addwfc	fsr2h,f,c
 31865   00A8AE  50DF               	movf	indf2,w,c
 31866                           
 31867                           ; BSR set to: 0
 31868   00A8B0  0012               	return		;funcret
 31869   00A8B2                     __end_of_peekTwoActionQueue:
 31870                           	callstack 0
 31871                           
 31872 ;; *************** function _finaliseOutput *****************
 31873 ;; Defined at:
 31874 ;;		line 253 in file "../outputs.c"
 31875 ;; Parameters:    Size  Location     Type
 31876 ;;  io              1    wreg     unsigned char 
 31877 ;;  type            1   45[BANK0 ] unsigned char 
 31878 ;; Auto vars:     Size  Location     Type
 31879 ;;  io              1    0[COMRAM] unsigned char 
 31880 ;; Return value:  Size  Location     Type
 31881 ;;                  1    wreg      void 
 31882 ;; Registers used:
 31883 ;;		wreg, status,2, status,0
 31884 ;; Tracked objects:
 31885 ;;		On entry : 0/0
 31886 ;;		On exit  : 0/0
 31887 ;;		Unchanged: 0/0
 31888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31889 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31893 ;;Total ram usage:        1 bytes
 31894 ;; Hardware stack levels used: 1
 31895 ;; Hardware stack levels required when called: 12
 31896 ;; This function calls:
 31897 ;;		Nothing
 31898 ;; This function is called by:
 31899 ;;		_processActions
 31900 ;; This function uses a non-reentrant model
 31901 ;;
 31902                           
 31903                           	psect	text119
 31904   00C8BC                     __ptext119:
 31905                           	callstack 0
 31906   00C8BC                     _finaliseOutput:
 31907                           	callstack 16
 31908                           
 31909                           ;../outputs.c: 254:     switch(type) {
 31910                           
 31911                           ; BSR set to: 0
 31912                           ;incstack = 0
 31913   00C8BC  0100               	movlb	0	; () banked
 31914   00C8BE  518D               	movf	finaliseOutput@type& (0+255),w,b
 31915                           
 31916                           ; Switch size 1, requested type "simple"
 31917                           ; Number of cases is 1, Range of values is 1 to 1
 31918                           ; switch strategies available:
 31919                           ; Name         Instructions Cycles
 31920                           ; simple_byte            4     3 (average)
 31921                           ;	Chosen strategy is simple_byte
 31922   00C8C0  0A01               	xorlw	1	; case 1
 31923   00C8C2  0012               	return	
 31924   00C8C4                     __end_of_finaliseOutput:
 31925                           	callstack 0
 31926                           
 31927 ;; *************** function _doWait *****************
 31928 ;; Defined at:
 31929 ;;		line 337 in file "../universalEvents.c"
 31930 ;; Parameters:    Size  Location     Type
 31931 ;;  duration        2   61[BANK0 ] unsigned short 
 31932 ;; Auto vars:     Size  Location     Type
 31933 ;;		None
 31934 ;; Return value:  Size  Location     Type
 31935 ;;                  1    wreg      void 
 31936 ;; Registers used:
 31937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31938 ;; Tracked objects:
 31939 ;;		On entry : 0/0
 31940 ;;		On exit  : 0/0
 31941 ;;		Unchanged: 0/0
 31942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31945 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31946 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31947 ;;Total ram usage:        6 bytes
 31948 ;; Hardware stack levels used: 1
 31949 ;; Hardware stack levels required when called: 14
 31950 ;; This function calls:
 31951 ;;		___lmul
 31952 ;;		_doneTwoAction
 31953 ;;		_tickGet
 31954 ;; This function is called by:
 31955 ;;		_processActions
 31956 ;; This function uses a non-reentrant model
 31957 ;;
 31958                           
 31959                           	psect	text120
 31960   00A79C                     __ptext120:
 31961                           	callstack 0
 31962   00A79C                     _doWait:
 31963                           	callstack 14
 31964                           
 31965                           ;../universalEvents.c: 339:     if (startWait.val == 0) {
 31966                           
 31967                           ; BSR set to: 0
 31968                           ;incstack = 0
 31969   00A79C  5019               	movf	_startWait^0,w,c
 31970   00A79E  101A               	iorwf	(_startWait+1)^0,w,c
 31971   00A7A0  101B               	iorwf	(_startWait+2)^0,w,c
 31972   00A7A2  101C               	iorwf	(_startWait+3)^0,w,c
 31973   00A7A4  A4D8               	btfss	status,2,c
 31974   00A7A6  D00B               	goto	l21793
 31975                           
 31976                           ;../universalEvents.c: 340:         startWait.val = tickGet();
 31977   00A7A8  EC23  F05C         	call	_tickGet	;wreg free
 31978   00A7AC  C08D  F019         	movff	?_tickGet,_startWait
 31979   00A7B0  C08E  F01A         	movff	?_tickGet+1,_startWait+1
 31980   00A7B4  C08F  F01B         	movff	?_tickGet+2,_startWait+2
 31981   00A7B8  C090  F01C         	movff	?_tickGet+3,_startWait+3
 31982   00A7BC  0012               	return	
 31983   00A7BE                     l21793:
 31984                           
 31985                           ;../universalEvents.c: 344:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 31986   00A7BE  EC23  F05C         	call	_tickGet	;wreg free
 31987   00A7C2  5019               	movf	_startWait^0,w,c
 31988   00A7C4  0100               	movlb	0	; () banked
 31989   00A7C6  5D8D               	subwf	?_tickGet& (0+255),w,b
 31990   00A7C8  6F9F               	movwf	??_doWait& (0+255),b
 31991   00A7CA  501A               	movf	(_startWait+1)^0,w,c
 31992   00A7CC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 31993   00A7CE  6FA0               	movwf	(??_doWait+1)& (0+255),b
 31994   00A7D0  501B               	movf	(_startWait+2)^0,w,c
 31995   00A7D2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 31996   00A7D4  6FA1               	movwf	(??_doWait+2)& (0+255),b
 31997   00A7D6  501C               	movf	(_startWait+3)^0,w,c
 31998   00A7D8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 31999   00A7DA  6FA2               	movwf	(??_doWait+3)& (0+255),b
 32000   00A7DC  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 32001   00A7E0  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 32002   00A7E4  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 32003   00A7E6  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 32004   00A7E8  0E6A               	movlw	106
 32005   00A7EA  6F95               	movwf	___lmul@multiplicand& (0+255),b
 32006   00A7EC  0E18               	movlw	24
 32007   00A7EE  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 32008   00A7F0  0E00               	movlw	0
 32009   00A7F2  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 32010   00A7F4  0E00               	movlw	0
 32011   00A7F6  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 32012   00A7F8  EC4F  F05C         	call	___lmul	;wreg free
 32013   00A7FC  0100               	movlb	0	; () banked
 32014   00A7FE  519F               	movf	??_doWait& (0+255),w,b
 32015   00A800  5D91               	subwf	?___lmul& (0+255),w,b
 32016   00A802  51A0               	movf	(??_doWait+1)& (0+255),w,b
 32017   00A804  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 32018   00A806  51A1               	movf	(??_doWait+2)& (0+255),w,b
 32019   00A808  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 32020   00A80A  51A2               	movf	(??_doWait+3)& (0+255),w,b
 32021   00A80C  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 32022   00A80E  B0D8               	btfsc	status,0,c
 32023   00A810  0012               	return	
 32024                           
 32025                           ; BSR set to: 0
 32026                           ;../universalEvents.c: 345:             doneTwoAction();
 32027   00A812  EC6B  F064         	call	_doneTwoAction	;wreg free
 32028                           
 32029                           ;../universalEvents.c: 346:             startWait.val = 0;
 32030   00A816  0E00               	movlw	0
 32031   00A818  6E19               	movwf	_startWait^0,c
 32032   00A81A  0E00               	movlw	0
 32033   00A81C  6E1A               	movwf	(_startWait+1)^0,c
 32034   00A81E  0E00               	movlw	0
 32035   00A820  6E1B               	movwf	(_startWait+2)^0,c
 32036   00A822  0E00               	movlw	0
 32037   00A824  6E1C               	movwf	(_startWait+3)^0,c
 32038   00A826  0012               	return		;funcret
 32039   00A828                     __end_of_doWait:
 32040                           	callstack 0
 32041                           
 32042 ;; *************** function _doneTwoAction *****************
 32043 ;; Defined at:
 32044 ;;		line 444 in file "../event_consumerDualActionQueue.c"
 32045 ;; Parameters:    Size  Location     Type
 32046 ;;		None
 32047 ;; Auto vars:     Size  Location     Type
 32048 ;;		None
 32049 ;; Return value:  Size  Location     Type
 32050 ;;                  1    wreg      void 
 32051 ;; Registers used:
 32052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32053 ;; Tracked objects:
 32054 ;;		On entry : 0/0
 32055 ;;		On exit  : 0/0
 32056 ;;		Unchanged: 0/0
 32057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32062 ;;Total ram usage:        0 bytes
 32063 ;; Hardware stack levels used: 1
 32064 ;; Hardware stack levels required when called: 13
 32065 ;; This function calls:
 32066 ;;		_popTwoAction
 32067 ;; This function is called by:
 32068 ;;		_processActions
 32069 ;;		_doWait
 32070 ;; This function uses a non-reentrant model
 32071 ;;
 32072                           
 32073                           	psect	text121
 32074   00C8D6                     __ptext121:
 32075                           	callstack 0
 32076   00C8D6                     _doneTwoAction:
 32077                           	callstack 15
 32078                           
 32079                           ;../event_consumerDualActionQueue.c: 445:  popTwoAction();
 32080                           
 32081                           ;incstack = 0
 32082   00C8D6  EC9A  F061         	call	_popTwoAction	;wreg free
 32083   00C8DA  0012               	return		;funcret
 32084   00C8DC                     __end_of_doneTwoAction:
 32085                           	callstack 0
 32086                           
 32087 ;; *************** function _popTwoAction *****************
 32088 ;; Defined at:
 32089 ;;		line 423 in file "../event_consumerDualActionQueue.c"
 32090 ;; Parameters:    Size  Location     Type
 32091 ;;		None
 32092 ;; Auto vars:     Size  Location     Type
 32093 ;;  ret             1    0        unsigned char 
 32094 ;; Return value:  Size  Location     Type
 32095 ;;                  1    wreg      unsigned char 
 32096 ;; Registers used:
 32097 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32098 ;; Tracked objects:
 32099 ;;		On entry : 0/0
 32100 ;;		On exit  : 0/0
 32101 ;;		Unchanged: 0/0
 32102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32107 ;;Total ram usage:        0 bytes
 32108 ;; Hardware stack levels used: 1
 32109 ;; Hardware stack levels required when called: 12
 32110 ;; This function calls:
 32111 ;;		Nothing
 32112 ;; This function is called by:
 32113 ;;		_doneTwoAction
 32114 ;; This function uses a non-reentrant model
 32115 ;;
 32116                           
 32117                           	psect	text122
 32118   00C334                     __ptext122:
 32119                           	callstack 0
 32120   00C334                     _popTwoAction:
 32121                           	callstack 15
 32122                           
 32123                           ;../event_consumerDualActionQueue.c: 424:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 426:  if (expeditedWriteIndex != expeditedReadIndex) {
 32124                           
 32125                           ;incstack = 0
 32126   00C334  0100               	movlb	0	; () banked
 32127   00C336  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32128   00C338  19CA               	xorwf	_expeditedWriteIndex& (0+255),w,b
 32129   00C33A  B4D8               	btfsc	status,2,c
 32130   00C33C  D007               	goto	l20265
 32131                           
 32132                           ; BSR set to: 0
 32133                           
 32134                           ; BSR set to: 0
 32135   00C33E  2BCB               	incf	_expeditedReadIndex& (0+255),f,b
 32136                           
 32137                           ; BSR set to: 0
 32138                           ;../event_consumerDualActionQueue.c: 429:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 32139   00C340  0E07               	movlw	7
 32140   00C342  65CB               	cpfsgt	_expeditedReadIndex& (0+255),b
 32141   00C344  0012               	return	
 32142                           
 32143                           ; BSR set to: 0
 32144   00C346  0E00               	movlw	0
 32145   00C348  6FCB               	movwf	_expeditedReadIndex& (0+255),b
 32146   00C34A  0012               	return	
 32147   00C34C                     l20265:
 32148                           
 32149                           ; BSR set to: 0
 32150                           ;../event_consumerDualActionQueue.c: 433:  if (normalWriteIndex == normalReadIndex) {
 32151   00C34C  51CD               	movf	_normalReadIndex& (0+255),w,b
 32152   00C34E  19CC               	xorwf	_normalWriteIndex& (0+255),w,b
 32153   00C350  B4D8               	btfsc	status,2,c
 32154   00C352  0012               	return	
 32155                           
 32156                           ; BSR set to: 0
 32157                           
 32158                           ; BSR set to: 0
 32159   00C354  2BCD               	incf	_normalReadIndex& (0+255),f,b
 32160                           
 32161                           ; BSR set to: 0
 32162                           ;../event_consumerDualActionQueue.c: 437:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 32163   00C356  0E3F               	movlw	63
 32164   00C358  65CD               	cpfsgt	_normalReadIndex& (0+255),b
 32165   00C35A  0012               	return	
 32166                           
 32167                           ; BSR set to: 0
 32168   00C35C  0E00               	movlw	0
 32169   00C35E  6FCD               	movwf	_normalReadIndex& (0+255),b
 32170                           
 32171                           ; BSR set to: 0
 32172   00C360  0012               	return		;funcret
 32173   00C362                     __end_of_popTwoAction:
 32174                           	callstack 0
 32175                           
 32176 ;; *************** function _doSOD *****************
 32177 ;; Defined at:
 32178 ;;		line 387 in file "../universalEvents.c"
 32179 ;; Parameters:    Size  Location     Type
 32180 ;;		None
 32181 ;; Auto vars:     Size  Location     Type
 32182 ;;		None
 32183 ;; Return value:  Size  Location     Type
 32184 ;;                  1    wreg      void 
 32185 ;; Registers used:
 32186 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32187 ;; Tracked objects:
 32188 ;;		On entry : 0/0
 32189 ;;		On exit  : 0/0
 32190 ;;		Unchanged: 0/0
 32191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32196 ;;Total ram usage:        0 bytes
 32197 ;; Hardware stack levels used: 1
 32198 ;; Hardware stack levels required when called: 13
 32199 ;; This function calls:
 32200 ;;		_findServiceIndex
 32201 ;;		_startTimedResponse
 32202 ;; This function is called by:
 32203 ;;		_processActions
 32204 ;; This function uses a non-reentrant model
 32205 ;;
 32206                           
 32207                           	psect	text123
 32208   00C7A6                     __ptext123:
 32209                           	callstack 0
 32210   00C7A6                     _doSOD:
 32211                           	callstack 15
 32212                           
 32213                           ;../universalEvents.c: 388:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 32214                           
 32215                           ; BSR set to: 0
 32216                           ;incstack = 0
 32217   00C7A6  0E05               	movlw	5
 32218   00C7A8  ECFC  F057         	call	_findServiceIndex
 32219   00C7AC  0100               	movlb	0	; () banked
 32220   00C7AE  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 32221   00C7B0  0E6E               	movlw	low _sodTRCallback
 32222   00C7B2  6F92               	movwf	startTimedResponse@callback& (0+255),b
 32223   00C7B4  0E85               	movlw	high _sodTRCallback
 32224   00C7B6  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 32225   00C7B8  0E01               	movlw	1
 32226   00C7BA  EC53  F05F         	call	_startTimedResponse
 32227   00C7BE  0012               	return		;funcret
 32228   00C7C0                     __end_of_doSOD:
 32229                           	callstack 0
 32230                           
 32231 ;; *************** function _startTimedResponse *****************
 32232 ;; Defined at:
 32233 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 32234 ;; Parameters:    Size  Location     Type
 32235 ;;  type            1    wreg     unsigned char 
 32236 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 32237 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 32238 ;;		 -> reqevCallback(1), nerdCallback(1), nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), 
 32239 ;;		 -> mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), sodTRCallback(1), 
 32240 ;; Auto vars:     Size  Location     Type
 32241 ;;  type            1   52[BANK0 ] unsigned char 
 32242 ;; Return value:  Size  Location     Type
 32243 ;;                  1    wreg      void 
 32244 ;; Registers used:
 32245 ;;		wreg, status,2, status,0
 32246 ;; Tracked objects:
 32247 ;;		On entry : 0/0
 32248 ;;		On exit  : 0/0
 32249 ;;		Unchanged: 0/0
 32250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32251 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32254 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32255 ;;Total ram usage:        4 bytes
 32256 ;; Hardware stack levels used: 1
 32257 ;; Hardware stack levels required when called: 12
 32258 ;; This function calls:
 32259 ;;		Nothing
 32260 ;; This function is called by:
 32261 ;;		_doSOD
 32262 ;;		_mnsProcessMessage
 32263 ;;		_nvProcessMessage
 32264 ;;		_doNerd
 32265 ;;		_doReval
 32266 ;;		_doReqev
 32267 ;; This function uses a non-reentrant model
 32268 ;;
 32269                           
 32270                           	psect	text124
 32271   00BEA6                     __ptext124:
 32272                           	callstack 0
 32273   00BEA6                     _startTimedResponse:
 32274                           	callstack 15
 32275                           
 32276                           ;incstack = 0
 32277                           ;startTimedResponse@type stored from wreg
 32278   00BEA6  0100               	movlb	0	; () banked
 32279   00BEA8  6F94               	movwf	startTimedResponse@type& (0+255),b
 32280                           
 32281                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 32282   00BEAA  C094  F0BC         	movff	startTimedResponse@type,_timedResponseType
 32283                           
 32284                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 32285   00BEAE  0100               	movlb	0	; () banked
 32286   00BEB0  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 32287   00BEB2  A4D8               	btfss	status,2,c
 32288   00BEB4  D004               	goto	l20913
 32289                           
 32290                           ; BSR set to: 0
 32291                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 32292   00BEB6  0E01               	movlw	1
 32293   00BEB8  6FBD               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32294                           
 32295                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 32296   00BEBA  0E00               	movlw	0
 32297   00BEBC  D00B               	goto	L14
 32298   00BEBE                     l20913:
 32299                           
 32300                           ; BSR set to: 0
 32301                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 32302   00BEBE  0E00               	movlw	0
 32303   00BEC0  6FBD               	movwf	_timedResponseAllServicesFlag& (0+255),b
 32304                           
 32305                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 32306   00BEC2  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 32307   00BEC4  B4D8               	btfsc	status,2,c
 32308   00BEC6  D003               	goto	u21410
 32309                           
 32310                           ; BSR set to: 0
 32311   00BEC8  0E09               	movlw	9
 32312   00BECA  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 32313   00BECC  D002               	goto	l20917
 32314   00BECE                     u21410:
 32315                           
 32316                           ; BSR set to: 0
 32317                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 32318   00BECE  69BC               	setf	_timedResponseType& (0+255),b
 32319                           
 32320                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 32321   00BED0  0012               	return	
 32322   00BED2                     l20917:
 32323                           
 32324                           ; BSR set to: 0
 32325                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 32326   00BED2  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 32327   00BED4                     L14:
 32328   00BED4  6FBE               	movwf	_timedResponseServiceIndex& (0+255),b
 32329                           
 32330                           ; BSR set to: 0
 32331                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 32332   00BED6  0E00               	movlw	0
 32333   00BED8  6FBB               	movwf	_timedResponseStep& (0+255),b
 32334                           
 32335                           ; BSR set to: 0
 32336                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 32337   00BEDA  C092  F021         	movff	startTimedResponse@callback,_timedResponseCallback
 32338   00BEDE  C093  F022         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 32339                           
 32340                           ; BSR set to: 0
 32341   00BEE2  0012               	return		;funcret
 32342   00BEE4                     __end_of_startTimedResponse:
 32343                           	callstack 0
 32344                           
 32345 ;; *************** function _findServiceIndex *****************
 32346 ;; Defined at:
 32347 ;;		line 823 in file "../../VLCBlib_PIC/vlcb.c"
 32348 ;; Parameters:    Size  Location     Type
 32349 ;;  serviceType     1    wreg     unsigned char 
 32350 ;; Auto vars:     Size  Location     Type
 32351 ;;  serviceType     1   47[BANK0 ] unsigned char 
 32352 ;;  i               1   48[BANK0 ] unsigned char 
 32353 ;; Return value:  Size  Location     Type
 32354 ;;                  1    wreg      unsigned char 
 32355 ;; Registers used:
 32356 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 32357 ;; Tracked objects:
 32358 ;;		On entry : 0/0
 32359 ;;		On exit  : 0/0
 32360 ;;		Unchanged: 0/0
 32361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32365 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32366 ;;Total ram usage:        4 bytes
 32367 ;; Hardware stack levels used: 1
 32368 ;; Hardware stack levels required when called: 12
 32369 ;; This function calls:
 32370 ;;		Nothing
 32371 ;; This function is called by:
 32372 ;;		_doSOD
 32373 ;;		_mnsProcessMessage
 32374 ;;		_nvProcessMessage
 32375 ;;		_doNerd
 32376 ;;		_doReval
 32377 ;;		_doReqev
 32378 ;; This function uses a non-reentrant model
 32379 ;;
 32380                           
 32381                           	psect	text125
 32382   00AFF8                     __ptext125:
 32383                           	callstack 0
 32384   00AFF8                     _findServiceIndex:
 32385                           	callstack 15
 32386                           
 32387                           ; BSR set to: 0
 32388                           ;incstack = 0
 32389                           ;findServiceIndex@serviceType stored from wreg
 32390   00AFF8  0100               	movlb	0	; () banked
 32391   00AFFA  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 32392                           
 32393                           ;../../VLCBlib_PIC/vlcb.c: 824:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 825:     for (i
      +                          =0; i<9; i++) {
 32394   00AFFC  0E00               	movlw	0
 32395   00AFFE  0100               	movlb	0	; () banked
 32396   00B000  6F90               	movwf	findServiceIndex@i& (0+255),b
 32397   00B002                     l20891:
 32398                           
 32399                           ; BSR set to: 0
 32400                           ;../../VLCBlib_PIC/vlcb.c: 826:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 32401   00B002  5190               	movf	findServiceIndex@i& (0+255),w,b
 32402   00B004  0D02               	mullw	2
 32403   00B006  0E69               	movlw	low _services
 32404   00B008  24F3               	addwf	243,w,c
 32405   00B00A  6EF6               	movwf	tblptrl,c
 32406   00B00C  0EEE               	movlw	high _services
 32407   00B00E  20F4               	addwfc	244,w,c
 32408   00B010  6EF7               	movwf	tblptrh,c
 32409   00B012                     	if	1	;There are 3 active tblptr bytes
 32410   00B012  6AF8               	clrf	tblptru,c
 32411   00B014  0E00               	movlw	low (__mediumconst shr (0+16))
 32412   00B016  22F8               	addwfc	tblptru,f,c
 32413   00B018                     	endif
 32414   00B018  0009               	tblrd		*+
 32415   00B01A  50F5               	movf	tablat,w,c
 32416   00B01C  0009               	tblrd		*+
 32417   00B01E  10F5               	iorwf	tablat,w,c
 32418   00B020  B4D8               	btfsc	status,2,c
 32419   00B022  D01D               	goto	l20899
 32420                           
 32421                           ; BSR set to: 0
 32422   00B024  5190               	movf	findServiceIndex@i& (0+255),w,b
 32423   00B026  0D02               	mullw	2
 32424   00B028  0E69               	movlw	low _services
 32425   00B02A  24F3               	addwf	243,w,c
 32426   00B02C  6EF6               	movwf	tblptrl,c
 32427   00B02E  0EEE               	movlw	high _services
 32428   00B030  20F4               	addwfc	244,w,c
 32429   00B032  6EF7               	movwf	tblptrh,c
 32430   00B034                     	if	1	;There are 3 active tblptr bytes
 32431   00B034  6AF8               	clrf	tblptru,c
 32432   00B036  0E00               	movlw	low (__mediumconst shr (0+16))
 32433   00B038  22F8               	addwfc	tblptru,f,c
 32434   00B03A                     	endif
 32435   00B03A  0009               	tblrd		*+
 32436   00B03C  CFF5 F08D          	movff	tablat,??_findServiceIndex
 32437   00B040  0009               	tblrd		*+
 32438   00B042  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 32439   00B046  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 32440   00B04A  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 32441   00B04E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32442   00B04E  6AF8               	clrf	tblptru,c
 32443   00B050                     	endif
 32444   00B050                     	if	0	;tblptru may be non-zero
 32445   00B050                     	endif
 32446   00B050  0008               	tblrd		*
 32447   00B052  50F5               	movf	tablat,w,c
 32448   00B054  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 32449   00B056  A4D8               	btfss	status,2,c
 32450   00B058  D002               	goto	l20899
 32451                           
 32452                           ; BSR set to: 0
 32453                           ;../../VLCBlib_PIC/vlcb.c: 827:             return i;
 32454   00B05A  5190               	movf	findServiceIndex@i& (0+255),w,b
 32455   00B05C  0012               	return	
 32456   00B05E                     l20899:
 32457                           
 32458                           ; BSR set to: 0
 32459                           ;../../VLCBlib_PIC/vlcb.c: 829:     }
 32460   00B05E  2B90               	incf	findServiceIndex@i& (0+255),f,b
 32461                           
 32462                           ; BSR set to: 0
 32463   00B060  0E08               	movlw	8
 32464   00B062  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 32465   00B064  D7CE               	goto	l20891
 32466                           
 32467                           ; BSR set to: 0
 32468                           ;../../VLCBlib_PIC/vlcb.c: 830:     return 0xFF;
 32469   00B066  0EFF               	movlw	255
 32470                           
 32471                           ; BSR set to: 0
 32472   00B068  0012               	return		;funcret
 32473   00B06A                     __end_of_findServiceIndex:
 32474                           	callstack 0
 32475                           
 32476 ;; *************** function _deleteTwoActionQueue *****************
 32477 ;; Defined at:
 32478 ;;		line 483 in file "../event_consumerDualActionQueue.c"
 32479 ;; Parameters:    Size  Location     Type
 32480 ;;  index           1    wreg     unsigned char 
 32481 ;; Auto vars:     Size  Location     Type
 32482 ;;  index           1   46[BANK0 ] unsigned char 
 32483 ;;  qty             1   45[BANK0 ] unsigned char 
 32484 ;; Return value:  Size  Location     Type
 32485 ;;                  1    wreg      void 
 32486 ;; Registers used:
 32487 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32488 ;; Tracked objects:
 32489 ;;		On entry : 0/0
 32490 ;;		On exit  : 0/0
 32491 ;;		Unchanged: 0/0
 32492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32494 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32496 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32497 ;;Total ram usage:        2 bytes
 32498 ;; Hardware stack levels used: 1
 32499 ;; Hardware stack levels required when called: 12
 32500 ;; This function calls:
 32501 ;;		Nothing
 32502 ;; This function is called by:
 32503 ;;		_processActions
 32504 ;; This function uses a non-reentrant model
 32505 ;;
 32506                           
 32507                           	psect	text126
 32508   00AB42                     __ptext126:
 32509                           	callstack 0
 32510   00AB42                     _deleteTwoActionQueue:
 32511                           	callstack 16
 32512                           
 32513                           ; BSR set to: 0
 32514                           ;incstack = 0
 32515                           ;deleteTwoActionQueue@index stored from wreg
 32516   00AB42  0100               	movlb	0	; () banked
 32517   00AB44  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 32518                           
 32519                           ;../event_consumerDualActionQueue.c: 484:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 485:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 32520   00AB46  0100               	movlb	0	; () banked
 32521   00AB48  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32522   00AB4A  5DCA               	subwf	_expeditedWriteIndex& (0+255),w,b
 32523   00AB4C  0B07               	andlw	7
 32524   00AB4E  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32525                           
 32526                           ;../event_consumerDualActionQueue.c: 486:     if (index < qty) {
 32527   00AB50  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32528   00AB52  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32529   00AB54  B0D8               	btfsc	status,0,c
 32530   00AB56  D013               	goto	l21767
 32531                           
 32532                           ; BSR set to: 0
 32533                           ;../event_consumerDualActionQueue.c: 487:         index += expeditedReadIndex;
 32534   00AB58  51CB               	movf	_expeditedReadIndex& (0+255),w,b
 32535   00AB5A  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32536                           
 32537                           ;../event_consumerDualActionQueue.c: 488:         if (index >= 8) {
 32538   00AB5C  0E07               	movlw	7
 32539   00AB5E  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32540   00AB60  D002               	goto	l556
 32541                           
 32542                           ; BSR set to: 0
 32543                           ;../event_consumerDualActionQueue.c: 489:             index -= 8;
 32544   00AB62  0E08               	movlw	8
 32545   00AB64  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32546   00AB66                     l556:
 32547                           
 32548                           ; BSR set to: 0
 32549                           ;../event_consumerDualActionQueue.c: 491:         if (index == expeditedWriteIndex) retu
      +                          rn;
 32550   00AB66  51CA               	movf	_expeditedWriteIndex& (0+255),w,b
 32551   00AB68  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32552   00AB6A  B4D8               	btfsc	status,2,c
 32553   00AB6C  0012               	return	
 32554                           
 32555                           ; BSR set to: 0
 32556                           ;../event_consumerDualActionQueue.c: 492:         expeditedQueueBuf[index] = 0;
 32557   00AB6E  0EC4               	movlw	low _expeditedQueueBuf
 32558   00AB70  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32559   00AB72  6ED9               	movwf	fsr2l,c
 32560   00AB74  6ADA               	clrf	fsr2h,c
 32561   00AB76  0E02               	movlw	high _expeditedQueueBuf
 32562   00AB78  22DA               	addwfc	fsr2h,f,c
 32563   00AB7A  6ADF               	clrf	indf2,c
 32564   00AB7C  0012               	return	
 32565   00AB7E                     l21767:
 32566                           
 32567                           ; BSR set to: 0
 32568                           ;../event_consumerDualActionQueue.c: 495:     index -= qty;
 32569   00AB7E  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32570   00AB80  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32571                           
 32572                           ;../event_consumerDualActionQueue.c: 496:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 32573   00AB82  51CD               	movf	_normalReadIndex& (0+255),w,b
 32574   00AB84  5DCC               	subwf	_normalWriteIndex& (0+255),w,b
 32575   00AB86  0B3F               	andlw	63
 32576   00AB88  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 32577                           
 32578                           ;../event_consumerDualActionQueue.c: 497:     if (index < qty) {
 32579   00AB8A  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 32580   00AB8C  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 32581   00AB8E  B0D8               	btfsc	status,0,c
 32582   00AB90  0012               	return	
 32583                           
 32584                           ; BSR set to: 0
 32585                           ;../event_consumerDualActionQueue.c: 498:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 32586   00AB92  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32587   00AB94  19CD               	xorwf	_normalReadIndex& (0+255),w,b
 32588   00AB96  B4D8               	btfsc	status,2,c
 32589   00AB98  0012               	return	
 32590                           
 32591                           ; BSR set to: 0
 32592                           ;../event_consumerDualActionQueue.c: 499:         index += normalReadIndex;
 32593   00AB9A  51CD               	movf	_normalReadIndex& (0+255),w,b
 32594   00AB9C  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 32595                           
 32596                           ;../event_consumerDualActionQueue.c: 500:         if (index >= 64) {
 32597   00AB9E  0E3F               	movlw	63
 32598   00ABA0  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 32599   00ABA2  D002               	goto	l561
 32600                           
 32601                           ; BSR set to: 0
 32602                           ;../event_consumerDualActionQueue.c: 501:             index -= 64;
 32603   00ABA4  0E40               	movlw	64
 32604   00ABA6  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 32605   00ABA8                     l561:
 32606                           
 32607                           ; BSR set to: 0
 32608                           ;../event_consumerDualActionQueue.c: 503:         if (index == normalWriteIndex) return;
 32609   00ABA8  51CC               	movf	_normalWriteIndex& (0+255),w,b
 32610   00ABAA  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 32611   00ABAC  B4D8               	btfsc	status,2,c
 32612   00ABAE  0012               	return	
 32613                           
 32614                           ; BSR set to: 0
 32615                           ;../event_consumerDualActionQueue.c: 504:         normalQueueBuf[index] = 0;
 32616   00ABB0  0E80               	movlw	low _normalQueueBuf
 32617   00ABB2  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 32618   00ABB4  6ED9               	movwf	fsr2l,c
 32619   00ABB6  6ADA               	clrf	fsr2h,c
 32620   00ABB8  0E04               	movlw	high _normalQueueBuf
 32621   00ABBA  22DA               	addwfc	fsr2h,f,c
 32622   00ABBC  6ADF               	clrf	indf2,c
 32623                           
 32624                           ; BSR set to: 0
 32625   00ABBE  0012               	return		;funcret
 32626   00ABC0                     __end_of_deleteTwoActionQueue:
 32627                           	callstack 0
 32628                           
 32629 ;; *************** function _completed *****************
 32630 ;; Defined at:
 32631 ;;		line 219 in file "../outputs.c"
 32632 ;; Parameters:    Size  Location     Type
 32633 ;;  io              1    wreg     unsigned char 
 32634 ;;  action          1   45[BANK0 ] unsigned char 
 32635 ;;  type            1   46[BANK0 ] unsigned char 
 32636 ;; Auto vars:     Size  Location     Type
 32637 ;;  io              1   50[BANK0 ] unsigned char 
 32638 ;; Return value:  Size  Location     Type
 32639 ;;                  1    wreg      enum E12767
 32640 ;; Registers used:
 32641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32642 ;; Tracked objects:
 32643 ;;		On entry : 0/0
 32644 ;;		On exit  : 0/0
 32645 ;;		Unchanged: 0/0
 32646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32648 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32649 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32650 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32651 ;;Total ram usage:        6 bytes
 32652 ;; Hardware stack levels used: 1
 32653 ;; Hardware stack levels required when called: 12
 32654 ;; This function calls:
 32655 ;;		Nothing
 32656 ;; This function is called by:
 32657 ;;		_processActions
 32658 ;; This function uses a non-reentrant model
 32659 ;;
 32660                           
 32661                           	psect	text127
 32662   00A4CA                     __ptext127:
 32663                           	callstack 0
 32664   00A4CA                     _completed:
 32665                           	callstack 16
 32666                           
 32667                           ; BSR set to: 0
 32668                           ;incstack = 0
 32669                           ;completed@io stored from wreg
 32670   00A4CA  0100               	movlb	0	; () banked
 32671   00A4CC  6F92               	movwf	completed@io& (0+255),b
 32672                           
 32673                           ;../outputs.c: 220:     switch(type) {
 32674   00A4CE  D035               	goto	l21893
 32675   00A4D0                     l21871:
 32676                           
 32677                           ; BSR set to: 0
 32678                           ;../outputs.c: 223:             return TRUE;
 32679   00A4D0  0E01               	movlw	1
 32680   00A4D2  0012               	return	
 32681   00A4D4                     l21875:
 32682                           
 32683                           ; BSR set to: 0
 32684                           ;../outputs.c: 226:             return pulseDelays[io] == 1;
 32685   00A4D4  0EA4               	movlw	low _pulseDelays
 32686   00A4D6  2592               	addwf	completed@io& (0+255),w,b
 32687   00A4D8  6ED9               	movwf	fsr2l,c
 32688   00A4DA  6ADA               	clrf	fsr2h,c
 32689   00A4DC  0E02               	movlw	high _pulseDelays
 32690   00A4DE  22DA               	addwfc	fsr2h,f,c
 32691   00A4E0  04DE               	decf	postinc2,w,c
 32692   00A4E2  A4D8               	btfss	status,2,c
 32693   00A4E4  D002               	goto	u22430
 32694   00A4E6  0E01               	movlw	1
 32695   00A4E8  0012               	return	
 32696   00A4EA                     u22430:
 32697   00A4EA  0E00               	movlw	0
 32698   00A4EC  0012               	return	
 32699   00A4EE                     l21879:
 32700                           
 32701                           ; BSR set to: 0
 32702                           ;../outputs.c: 235:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 32703   00A4EE  0E00               	movlw	0
 32704   00A4F0  6F91               	movwf	_completed$1545& (0+255),b
 32705                           
 32706                           ; BSR set to: 0
 32707   00A4F2  0E30               	movlw	low _currentPos
 32708   00A4F4  2592               	addwf	completed@io& (0+255),w,b
 32709   00A4F6  6ED9               	movwf	fsr2l,c
 32710   00A4F8  6ADA               	clrf	fsr2h,c
 32711   00A4FA  0E01               	movlw	high _currentPos
 32712   00A4FC  22DA               	addwfc	fsr2h,f,c
 32713   00A4FE  5192               	movf	completed@io& (0+255),w,b
 32714   00A500  0F01               	addlw	low _targetPos
 32715   00A502  6EE1               	movwf	fsr1l,c
 32716   00A504  6AE2               	clrf	fsr1h,c
 32717   00A506  50DE               	movf	postinc2,w,c
 32718   00A508  18E6               	xorwf	postinc1,w,c
 32719   00A50A  A4D8               	btfss	status,2,c
 32720   00A50C  D014               	goto	l917
 32721                           
 32722                           ; BSR set to: 0
 32723   00A50E  0E10               	movlw	low _servoState
 32724   00A510  2592               	addwf	completed@io& (0+255),w,b
 32725   00A512  6ED9               	movwf	fsr2l,c
 32726   00A514  6ADA               	clrf	fsr2h,c
 32727   00A516  0E01               	movlw	high _servoState
 32728   00A518  22DA               	addwfc	fsr2h,f,c
 32729   00A51A  04DE               	decf	postinc2,w,c
 32730   00A51C  B4D8               	btfsc	status,2,c
 32731   00A51E  D009               	goto	u22470
 32732                           
 32733                           ; BSR set to: 0
 32734   00A520  0E10               	movlw	low _servoState
 32735   00A522  2592               	addwf	completed@io& (0+255),w,b
 32736   00A524  6ED9               	movwf	fsr2l,c
 32737   00A526  6ADA               	clrf	fsr2h,c
 32738   00A528  0E01               	movlw	high _servoState
 32739   00A52A  22DA               	addwfc	fsr2h,f,c
 32740   00A52C  50DF               	movf	indf2,w,c
 32741   00A52E  A4D8               	btfss	status,2,c
 32742   00A530  D002               	goto	l917
 32743   00A532                     u22470:
 32744                           
 32745                           ; BSR set to: 0
 32746   00A532  0E01               	movlw	1
 32747   00A534  6F91               	movwf	_completed$1545& (0+255),b
 32748   00A536                     l917:
 32749                           
 32750                           ; BSR set to: 0
 32751   00A536  5191               	movf	_completed$1545& (0+255),w,b
 32752   00A538  0012               	return	
 32753   00A53A                     l21893:
 32754   00A53A  0100               	movlb	0	; () banked
 32755   00A53C  518E               	movf	completed@type& (0+255),w,b
 32756                           
 32757                           ; Switch size 1, requested type "simple"
 32758                           ; Number of cases is 5, Range of values is 0 to 4
 32759                           ; switch strategies available:
 32760                           ; Name         Instructions Cycles
 32761                           ; simple_byte           16     9 (average)
 32762                           ;	Chosen strategy is simple_byte
 32763   00A53E  0A00               	xorlw	0	; case 0
 32764   00A540  B4D8               	btfsc	status,2,c
 32765   00A542  D7C6               	goto	l21871
 32766   00A544  0A01               	xorlw	1	; case 1
 32767   00A546  B4D8               	btfsc	status,2,c
 32768   00A548  D7C5               	goto	l21875
 32769   00A54A  0A03               	xorlw	3	; case 2
 32770   00A54C  B4D8               	btfsc	status,2,c
 32771   00A54E  D7CF               	goto	l21879
 32772   00A550  0A01               	xorlw	1	; case 3
 32773   00A552  B4D8               	btfsc	status,2,c
 32774   00A554  D7CC               	goto	l21879
 32775   00A556  0A07               	xorlw	7	; case 4
 32776   00A558  B4D8               	btfsc	status,2,c
 32777   00A55A  D7C9               	goto	l21879
 32778   00A55C  D7B9               	goto	l21871
 32779   00A55E                     __end_of_completed:
 32780                           	callstack 0
 32781                           
 32782 ;; *************** function _inputScan *****************
 32783 ;; Defined at:
 32784 ;;		line 101 in file "../inputs.c"
 32785 ;; Parameters:    Size  Location     Type
 32786 ;;		None
 32787 ;; Auto vars:     Size  Location     Type
 32788 ;;  change          1   20[BANK1 ] enum E12717
 32789 ;;  input           1   21[BANK1 ] unsigned char 
 32790 ;; Return value:  Size  Location     Type
 32791 ;;                  1    wreg      void 
 32792 ;; Registers used:
 32793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32794 ;; Tracked objects:
 32795 ;;		On entry : 0/0
 32796 ;;		On exit  : 0/0
 32797 ;;		Unchanged: 0/0
 32798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32800 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32801 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32802 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32803 ;;Total ram usage:        4 bytes
 32804 ;; Hardware stack levels used: 1
 32805 ;; Hardware stack levels required when called: 18
 32806 ;; This function calls:
 32807 ;;		_getNV
 32808 ;;		_readInput
 32809 ;;		_sendProducedEvent
 32810 ;;		_writeNVM
 32811 ;; This function is called by:
 32812 ;;		_loop
 32813 ;; This function uses a non-reentrant model
 32814 ;;
 32815                           
 32816                           	psect	text128
 32817   005132                     __ptext128:
 32818                           	callstack 0
 32819   005132                     _inputScan:
 32820                           	callstack 11
 32821                           
 32822                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 32823                           
 32824                           ; BSR set to: 0
 32825                           ;incstack = 0
 32826   005132  0E00               	movlw	0
 32827   005134  0100               	movlb	0	; () banked
 32828   005136  6FCE               	movwf	_io@inputs$F849& (0+255),b
 32829   005138                     l23233:
 32830                           
 32831                           ; BSR set to: 0
 32832   005138  0E0F               	movlw	15
 32833   00513A  65CE               	cpfsgt	_io@inputs$F849& (0+255),b
 32834   00513C  D001               	goto	l23237
 32835   00513E  0012               	return	
 32836   005140                     l23237:
 32837                           
 32838                           ; BSR set to: 0
 32839                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 32840   005140  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32841   005142  0D07               	mullw	7
 32842   005144  50F3               	movf	243,w,c
 32843   005146  0F10               	addlw	16
 32844   005148  ECB0  F05F         	call	_getNV
 32845   00514C  0100               	movlb	0	; () banked
 32846   00514E  518D               	movf	?_getNV& (0+255),w,b
 32847   005150  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 32848   005152  A4D8               	btfss	status,2,c
 32849   005154  D151               	goto	l23299
 32850                           
 32851                           ; BSR set to: 0
 32852                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 32853   005156  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32854   005158  ECAB  F040         	call	_readInput
 32855   00515C  0101               	movlb	1	; () banked
 32856   00515E  6FD3               	movwf	inputScan@input& (0+255),b
 32857                           
 32858                           ; BSR set to: 1
 32859                           ;../inputs.c: 105:             if (input != inputState[io]) {
 32860   005160  0E94               	movlw	low _inputState
 32861   005162  0100               	movlb	0	; () banked
 32862   005164  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32863   005166  6ED9               	movwf	fsr2l,c
 32864   005168  6ADA               	clrf	fsr2h,c
 32865   00516A  0E02               	movlw	high _inputState
 32866   00516C  22DA               	addwfc	fsr2h,f,c
 32867   00516E  0101               	movlb	1	; () banked
 32868   005170  51D3               	movf	inputScan@input& (0+255),w,b
 32869   005172  18DE               	xorwf	postinc2,w,c
 32870   005174  B4D8               	btfsc	status,2,c
 32871   005176  D138               	goto	l23297
 32872                           
 32873                           ; BSR set to: 1
 32874                           ;../inputs.c: 106:                 Boolean change = FALSE;
 32875   005178  0E00               	movlw	0
 32876   00517A  6FD2               	movwf	inputScan@change& (0+255),b
 32877                           
 32878                           ; BSR set to: 1
 32879                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 32880   00517C  0E94               	movlw	low _inputState
 32881   00517E  0100               	movlb	0	; () banked
 32882   005180  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32883   005182  6ED9               	movwf	fsr2l,c
 32884   005184  6ADA               	clrf	fsr2h,c
 32885   005186  0E02               	movlw	high _inputState
 32886   005188  22DA               	addwfc	fsr2h,f,c
 32887   00518A  50DF               	movf	indf2,w,c
 32888   00518C  B4D8               	btfsc	status,2,c
 32889   00518E  D01E               	goto	l23251
 32890                           
 32891                           ; BSR set to: 0
 32892   005190  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32893   005192  0D07               	mullw	7
 32894   005194  50F3               	movf	243,w,c
 32895   005196  0F12               	addlw	18
 32896   005198  ECB0  F05F         	call	_getNV
 32897   00519C  0E84               	movlw	low _delayCount
 32898   00519E  0100               	movlb	0	; () banked
 32899   0051A0  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32900   0051A2  6ED9               	movwf	fsr2l,c
 32901   0051A4  6ADA               	clrf	fsr2h,c
 32902   0051A6  0E02               	movlw	high _delayCount
 32903   0051A8  22DA               	addwfc	fsr2h,f,c
 32904   0051AA  50DF               	movf	indf2,w,c
 32905   0051AC  0101               	movlb	1	; () banked
 32906   0051AE  6FD0               	movwf	??_inputScan& (0+255),b
 32907   0051B0  6BD1               	clrf	(??_inputScan+1)& (0+255),b
 32908   0051B2  0100               	movlb	0	; () banked
 32909   0051B4  518D               	movf	?_getNV& (0+255),w,b
 32910   0051B6  0101               	movlb	1	; () banked
 32911   0051B8  19D0               	xorwf	??_inputScan& (0+255),w,b
 32912   0051BA  E108               	bnz	l23251
 32913   0051BC  0100               	movlb	0	; () banked
 32914   0051BE  518E               	movf	(?_getNV+1)& (0+255),w,b
 32915   0051C0  0101               	movlb	1	; () banked
 32916   0051C2  19D1               	xorwf	(??_inputScan+1)& (0+255),w,b
 32917   0051C4  A4D8               	btfss	status,2,c
 32918   0051C6  D002               	goto	l23251
 32919                           
 32920                           ; BSR set to: 1
 32921                           ;../inputs.c: 109:                     change = TRUE;
 32922   0051C8  0E01               	movlw	1
 32923   0051CA  6FD2               	movwf	inputScan@change& (0+255),b
 32924   0051CC                     l23251:
 32925                           
 32926                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 32927   0051CC  0E94               	movlw	low _inputState
 32928   0051CE  0100               	movlb	0	; () banked
 32929   0051D0  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32930   0051D2  6ED9               	movwf	fsr2l,c
 32931   0051D4  6ADA               	clrf	fsr2h,c
 32932   0051D6  0E02               	movlw	high _inputState
 32933   0051D8  22DA               	addwfc	fsr2h,f,c
 32934   0051DA  50DF               	movf	indf2,w,c
 32935   0051DC  A4D8               	btfss	status,2,c
 32936   0051DE  D01E               	goto	l353
 32937                           
 32938                           ; BSR set to: 0
 32939   0051E0  51CE               	movf	_io@inputs$F849& (0+255),w,b
 32940   0051E2  0D07               	mullw	7
 32941   0051E4  50F3               	movf	243,w,c
 32942   0051E6  0F13               	addlw	19
 32943   0051E8  ECB0  F05F         	call	_getNV
 32944   0051EC  0E84               	movlw	low _delayCount
 32945   0051EE  0100               	movlb	0	; () banked
 32946   0051F0  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32947   0051F2  6ED9               	movwf	fsr2l,c
 32948   0051F4  6ADA               	clrf	fsr2h,c
 32949   0051F6  0E02               	movlw	high _delayCount
 32950   0051F8  22DA               	addwfc	fsr2h,f,c
 32951   0051FA  50DF               	movf	indf2,w,c
 32952   0051FC  0101               	movlb	1	; () banked
 32953   0051FE  6FD0               	movwf	??_inputScan& (0+255),b
 32954   005200  6BD1               	clrf	(??_inputScan+1)& (0+255),b
 32955   005202  0100               	movlb	0	; () banked
 32956   005204  518D               	movf	?_getNV& (0+255),w,b
 32957   005206  0101               	movlb	1	; () banked
 32958   005208  19D0               	xorwf	??_inputScan& (0+255),w,b
 32959   00520A  E108               	bnz	l353
 32960   00520C  0100               	movlb	0	; () banked
 32961   00520E  518E               	movf	(?_getNV+1)& (0+255),w,b
 32962   005210  0101               	movlb	1	; () banked
 32963   005212  19D1               	xorwf	(??_inputScan+1)& (0+255),w,b
 32964   005214  A4D8               	btfss	status,2,c
 32965   005216  D002               	goto	l353
 32966                           
 32967                           ; BSR set to: 1
 32968                           ;../inputs.c: 112:                     change = TRUE;
 32969   005218  0E01               	movlw	1
 32970   00521A  6FD2               	movwf	inputScan@change& (0+255),b
 32971   00521C                     l353:
 32972                           
 32973                           ;../inputs.c: 114:                 if (change) {
 32974   00521C  0101               	movlb	1	; () banked
 32975   00521E  51D2               	movf	inputScan@change& (0+255),w,b
 32976   005220  B4D8               	btfsc	status,2,c
 32977   005222  D0D9               	goto	l23295
 32978                           
 32979                           ; BSR set to: 1
 32980                           ;../inputs.c: 116:                     delayCount[io] = 0;
 32981   005224  0E84               	movlw	low _delayCount
 32982   005226  0100               	movlb	0	; () banked
 32983   005228  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32984   00522A  6ED9               	movwf	fsr2l,c
 32985   00522C  6ADA               	clrf	fsr2h,c
 32986   00522E  0E02               	movlw	high _delayCount
 32987   005230  22DA               	addwfc	fsr2h,f,c
 32988   005232  6ADF               	clrf	indf2,c
 32989                           
 32990                           ;../inputs.c: 117:                     inputState[io] = input;
 32991   005234  0E94               	movlw	low _inputState
 32992   005236  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 32993   005238  6ED9               	movwf	fsr2l,c
 32994   00523A  6ADA               	clrf	fsr2h,c
 32995   00523C  0E02               	movlw	high _inputState
 32996   00523E  22DA               	addwfc	fsr2h,f,c
 32997   005240  C1D3  FFDF         	movff	inputScan@input,indf2
 32998                           
 32999                           ; BSR set to: 0
 33000                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 33001   005244  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33002   005246  0D07               	mullw	7
 33003   005248  50F3               	movf	243,w,c
 33004   00524A  0F11               	addlw	17
 33005   00524C  ECB0  F05F         	call	_getNV
 33006   005250  0100               	movlb	0	; () banked
 33007   005252  B18D               	btfsc	?_getNV& (0+255),0,b
 33008   005254  D008               	goto	l23263
 33009                           
 33010                           ; BSR set to: 0
 33011                           ;../inputs.c: 120:                         input = !input;
 33012   005256  0101               	movlb	1	; () banked
 33013   005258  51D3               	movf	inputScan@input& (0+255),w,b
 33014   00525A  A4D8               	btfss	status,2,c
 33015   00525C  D002               	goto	u24530
 33016   00525E  0E01               	movlw	1
 33017   005260  D001               	goto	u24540
 33018   005262                     u24530:
 33019   005262  0E00               	movlw	0
 33020   005264                     u24540:
 33021   005264  6FD3               	movwf	inputScan@input& (0+255),b
 33022   005266                     l23263:
 33023                           
 33024                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 33025   005266  0100               	movlb	0	; () banked
 33026   005268  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33027   00526A  0D07               	mullw	7
 33028   00526C  50F3               	movf	243,w,c
 33029   00526E  0F11               	addlw	17
 33030   005270  ECB0  F05F         	call	_getNV
 33031   005274  0100               	movlb	0	; () banked
 33032   005276  A98D               	btfss	?_getNV& (0+255),4,b
 33033   005278  D031               	goto	l23271
 33034                           
 33035                           ; BSR set to: 0
 33036                           ;../inputs.c: 124:                         if (input) {
 33037   00527A  0101               	movlb	1	; () banked
 33038   00527C  51D3               	movf	inputScan@input& (0+255),w,b
 33039   00527E  B4D8               	btfsc	status,2,c
 33040   005280  D0BB               	goto	l23299
 33041                           
 33042                           ; BSR set to: 1
 33043                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 33044   005282  0EB4               	movlw	low _outputState
 33045   005284  0100               	movlb	0	; () banked
 33046   005286  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33047   005288  6ED9               	movwf	fsr2l,c
 33048   00528A  6ADA               	clrf	fsr2h,c
 33049   00528C  0E02               	movlw	high _outputState
 33050   00528E  22DA               	addwfc	fsr2h,f,c
 33051   005290  0EB4               	movlw	low _outputState
 33052   005292  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33053   005294  6EE1               	movwf	fsr1l,c
 33054   005296  6AE2               	clrf	fsr1h,c
 33055   005298  0E02               	movlw	high _outputState
 33056   00529A  22E2               	addwfc	fsr1h,f,c
 33057   00529C  50E7               	movf	indf1,w,c
 33058   00529E  A4D8               	btfss	status,2,c
 33059   0052A0  D002               	goto	u24570
 33060   0052A2  0E01               	movlw	1
 33061   0052A4  D001               	goto	u24580
 33062   0052A6                     u24570:
 33063   0052A6  0E00               	movlw	0
 33064   0052A8                     u24580:
 33065   0052A8  6EDF               	movwf	indf2,c
 33066                           
 33067                           ; BSR set to: 0
 33068                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 33069                           
 33070                           ;../inputs.c: 126:                         } else {
 33071   0052AA  0EDE               	movlw	222
 33072   0052AC  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33073   0052AE  0101               	movlb	1	; () banked
 33074   0052B0  6FD0               	movwf	??_inputScan& (0+255),b
 33075   0052B2  6BD1               	clrf	(??_inputScan+1)& (0+255),b
 33076   0052B4  0E03               	movlw	3
 33077   0052B6  23D1               	addwfc	(??_inputScan+1)& (0+255),f,b
 33078   0052B8  C1D0  F0A4         	movff	??_inputScan,writeNVM@index
 33079   0052BC  C1D1  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 33080   0052C0  0100               	movlb	0	; () banked
 33081   0052C2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 33082   0052C4  0EB4               	movlw	low _outputState
 33083   0052C6  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33084   0052C8  6ED9               	movwf	fsr2l,c
 33085   0052CA  6ADA               	clrf	fsr2h,c
 33086   0052CC  0E02               	movlw	high _outputState
 33087   0052CE  22DA               	addwfc	fsr2h,f,c
 33088   0052D0  50DF               	movf	indf2,w,c
 33089   0052D2  6FA7               	movwf	writeNVM@value& (0+255),b
 33090   0052D4  0E00               	movlw	0
 33091   0052D6  EC9F  F05D         	call	_writeNVM
 33092                           
 33093                           ;../inputs.c: 130:                      } else {
 33094   0052DA  D008               	goto	l23273
 33095   0052DC                     l23271:
 33096                           
 33097                           ; BSR set to: 0
 33098                           ;../inputs.c: 131:                         outputState[io] = input;
 33099   0052DC  0EB4               	movlw	low _outputState
 33100   0052DE  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33101   0052E0  6ED9               	movwf	fsr2l,c
 33102   0052E2  6ADA               	clrf	fsr2h,c
 33103   0052E4  0E02               	movlw	high _outputState
 33104   0052E6  22DA               	addwfc	fsr2h,f,c
 33105   0052E8  C1D3  FFDF         	movff	inputScan@input,indf2
 33106   0052EC                     l23273:
 33107                           
 33108                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 33109   0052EC  0100               	movlb	0	; () banked
 33110   0052EE  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33111   0052F0  0D07               	mullw	7
 33112   0052F2  50F3               	movf	243,w,c
 33113   0052F4  0F11               	addlw	17
 33114   0052F6  ECB0  F05F         	call	_getNV
 33115   0052FA  0100               	movlb	0	; () banked
 33116   0052FC  A78D               	btfss	?_getNV& (0+255),3,b
 33117   0052FE  D03F               	goto	l23289
 33118                           
 33119                           ; BSR set to: 0
 33120                           ;../inputs.c: 136:                         if (outputState[io]) {
 33121   005300  0EB4               	movlw	low _outputState
 33122   005302  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33123   005304  6ED9               	movwf	fsr2l,c
 33124   005306  6ADA               	clrf	fsr2h,c
 33125   005308  0E02               	movlw	high _outputState
 33126   00530A  22DA               	addwfc	fsr2h,f,c
 33127   00530C  50DF               	movf	indf2,w,c
 33128   00530E  B4D8               	btfsc	status,2,c
 33129   005310  D01B               	goto	l23283
 33130                           
 33131                           ; BSR set to: 0
 33132                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33133   005312  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33134   005314  0D07               	mullw	7
 33135   005316  50F3               	movf	243,w,c
 33136   005318  0F11               	addlw	17
 33137   00531A  ECB0  F05F         	call	_getNV
 33138   00531E  0100               	movlb	0	; () banked
 33139   005320  AD8D               	btfss	?_getNV& (0+255),6,b
 33140   005322  D009               	goto	l23281
 33141                           
 33142                           ; BSR set to: 0
 33143                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 33144   005324  0E00               	movlw	0
 33145   005326  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33146   005328  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33147   00532A  0D04               	mullw	4
 33148   00532C  50F3               	movf	243,w,c
 33149   00532E  0F08               	addlw	8
 33150   005330  EC42  F04C         	call	_sendProducedEvent
 33151                           
 33152                           ;../inputs.c: 141:                             } else {
 33153   005334  D061               	goto	l23299
 33154   005336                     l23281:
 33155                           
 33156                           ; BSR set to: 0
 33157                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 33158   005336  0E01               	movlw	1
 33159   005338  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33160   00533A  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33161   00533C  0D04               	mullw	4
 33162   00533E  50F3               	movf	243,w,c
 33163   005340  0F08               	addlw	8
 33164   005342  EC42  F04C         	call	_sendProducedEvent
 33165   005346  D058               	goto	l23299
 33166   005348                     l23283:
 33167                           
 33168                           ; BSR set to: 0
 33169                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33170   005348  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33171   00534A  0D07               	mullw	7
 33172   00534C  50F3               	movf	243,w,c
 33173   00534E  0F11               	addlw	17
 33174   005350  ECB0  F05F         	call	_getNV
 33175   005354  0100               	movlb	0	; () banked
 33176   005356  AD8D               	btfss	?_getNV& (0+255),6,b
 33177   005358  D009               	goto	l23287
 33178                           
 33179                           ; BSR set to: 0
 33180                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 33181   00535A  0E00               	movlw	0
 33182   00535C  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33183   00535E  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33184   005360  0D04               	mullw	4
 33185   005362  50F3               	movf	243,w,c
 33186   005364  0F09               	addlw	9
 33187   005366  EC42  F04C         	call	_sendProducedEvent
 33188                           
 33189                           ;../inputs.c: 147:                             } else {
 33190   00536A  D046               	goto	l23299
 33191   00536C                     l23287:
 33192                           
 33193                           ; BSR set to: 0
 33194                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 33195   00536C  0E01               	movlw	1
 33196   00536E  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33197   005370  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33198   005372  0D04               	mullw	4
 33199   005374  50F3               	movf	243,w,c
 33200   005376  0F09               	addlw	9
 33201   005378  EC42  F04C         	call	_sendProducedEvent
 33202   00537C  D03D               	goto	l23299
 33203   00537E                     l23289:
 33204                           
 33205                           ; BSR set to: 0
 33206                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 33207   00537E  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33208   005380  0D07               	mullw	7
 33209   005382  50F3               	movf	243,w,c
 33210   005384  0F11               	addlw	17
 33211   005386  ECB0  F05F         	call	_getNV
 33212   00538A  0100               	movlb	0	; () banked
 33213   00538C  AD8D               	btfss	?_getNV& (0+255),6,b
 33214   00538E  D014               	goto	l23293
 33215                           
 33216                           ; BSR set to: 0
 33217                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 33218   005390  0EB4               	movlw	low _outputState
 33219   005392  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33220   005394  6ED9               	movwf	fsr2l,c
 33221   005396  6ADA               	clrf	fsr2h,c
 33222   005398  0E02               	movlw	high _outputState
 33223   00539A  22DA               	addwfc	fsr2h,f,c
 33224   00539C  50DF               	movf	indf2,w,c
 33225   00539E  A4D8               	btfss	status,2,c
 33226   0053A0  D002               	goto	u24640
 33227   0053A2  0E01               	movlw	1
 33228   0053A4  D001               	goto	u24650
 33229   0053A6                     u24640:
 33230   0053A6  0E00               	movlw	0
 33231   0053A8                     u24650:
 33232   0053A8  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33233   0053AA  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33234   0053AC  0D04               	mullw	4
 33235   0053AE  50F3               	movf	243,w,c
 33236   0053B0  0F08               	addlw	8
 33237   0053B2  EC42  F04C         	call	_sendProducedEvent
 33238                           
 33239                           ;../inputs.c: 155:                         } else {
 33240   0053B6  D020               	goto	l23299
 33241   0053B8                     l23293:
 33242                           
 33243                           ; BSR set to: 0
 33244                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 33245   0053B8  0EB4               	movlw	low _outputState
 33246   0053BA  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33247   0053BC  6ED9               	movwf	fsr2l,c
 33248   0053BE  6ADA               	clrf	fsr2h,c
 33249   0053C0  0E02               	movlw	high _outputState
 33250   0053C2  22DA               	addwfc	fsr2h,f,c
 33251   0053C4  50DF               	movf	indf2,w,c
 33252   0053C6  6FA8               	movwf	sendProducedEvent@onOff& (0+255),b
 33253   0053C8  51CE               	movf	_io@inputs$F849& (0+255),w,b
 33254   0053CA  0D04               	mullw	4
 33255   0053CC  50F3               	movf	243,w,c
 33256   0053CE  0F08               	addlw	8
 33257   0053D0  EC42  F04C         	call	_sendProducedEvent
 33258   0053D4  D011               	goto	l23299
 33259   0053D6                     l23295:
 33260                           
 33261                           ; BSR set to: 1
 33262                           ;../inputs.c: 160:                     delayCount[io]++;
 33263   0053D6  0E84               	movlw	low _delayCount
 33264   0053D8  0100               	movlb	0	; () banked
 33265   0053DA  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33266   0053DC  6ED9               	movwf	fsr2l,c
 33267   0053DE  6ADA               	clrf	fsr2h,c
 33268   0053E0  0E02               	movlw	high _delayCount
 33269   0053E2  22DA               	addwfc	fsr2h,f,c
 33270   0053E4  2ADF               	incf	indf2,f,c
 33271   0053E6  D008               	goto	l23299
 33272   0053E8                     l23297:
 33273                           
 33274                           ; BSR set to: 1
 33275                           ;../inputs.c: 163:                 delayCount[io] = 0;
 33276   0053E8  0E84               	movlw	low _delayCount
 33277   0053EA  0100               	movlb	0	; () banked
 33278   0053EC  25CE               	addwf	_io@inputs$F849& (0+255),w,b
 33279   0053EE  6ED9               	movwf	fsr2l,c
 33280   0053F0  6ADA               	clrf	fsr2h,c
 33281   0053F2  0E02               	movlw	high _delayCount
 33282   0053F4  22DA               	addwfc	fsr2h,f,c
 33283   0053F6  6ADF               	clrf	indf2,c
 33284   0053F8                     l23299:
 33285   0053F8  0100               	movlb	0	; () banked
 33286   0053FA  2BCE               	incf	_io@inputs$F849& (0+255),f,b
 33287   0053FC  D69D               	goto	l23233
 33288   0053FE                     __end_of_inputScan:
 33289                           	callstack 0
 33290                           
 33291 ;; *************** function _sendProducedEvent *****************
 33292 ;; Defined at:
 33293 ;;		line 217 in file "../../VLCBlib_PIC/event_producer_happening.c"
 33294 ;; Parameters:    Size  Location     Type
 33295 ;;  happening       1    wreg     unsigned char 
 33296 ;;  onOff           1   72[BANK0 ] enum E12736
 33297 ;; Auto vars:     Size  Location     Type
 33298 ;;  happening       1   17[BANK1 ] unsigned char 
 33299 ;;  producedEven    2   15[BANK1 ] struct Word
 33300 ;;  producedEven    2   13[BANK1 ] struct Word
 33301 ;;  opc             1   12[BANK1 ] unsigned char 
 33302 ;; Return value:  Size  Location     Type
 33303 ;;                  1    wreg      enum E12716
 33304 ;; Registers used:
 33305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33306 ;; Tracked objects:
 33307 ;;		On entry : 0/0
 33308 ;;		On exit  : 0/0
 33309 ;;		Unchanged: 0/0
 33310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33311 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33312 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33313 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33314 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33315 ;;Total ram usage:        8 bytes
 33316 ;; Hardware stack levels used: 1
 33317 ;; Hardware stack levels required when called: 17
 33318 ;; This function calls:
 33319 ;;		_getEN
 33320 ;;		_getNN
 33321 ;;		_sendMessage4
 33322 ;; This function is called by:
 33323 ;;		_loop
 33324 ;;		_processOutputs
 33325 ;;		_inputScan
 33326 ;;		_sendInvertedProducedEvent
 33327 ;;		_pollServos
 33328 ;;		_alwaysSendInvertedProducedEvent
 33329 ;; This function uses a non-reentrant model
 33330 ;;
 33331                           
 33332                           	psect	text129
 33333   009884                     __ptext129:
 33334                           	callstack 0
 33335   009884                     _sendProducedEvent:
 33336                           	callstack 9
 33337                           
 33338                           ; BSR set to: 0
 33339                           ;incstack = 0
 33340                           ;sendProducedEvent@happening stored from wreg
 33341   009884  0101               	movlb	1	; () banked
 33342   009886  6FCF               	movwf	sendProducedEvent@happening& (0+255),b
 33343                           
 33344                           ;../../VLCBlib_PIC/event_producer_happening.c: 218:     Word producedEventNN;;../../VLCB
      +                          lib_PIC/event_producer_happening.c: 219:     Word producedEventEN;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 220:     uint8_t opc;;../../VLCBlib_PIC/event_producer_happenin
      +                          g.c: 226:     if ((happening < 1) || (happening > (7+16*4))) return FALSE;
 33345   009888  0101               	movlb	1	; () banked
 33346   00988A  51CF               	movf	sendProducedEvent@happening& (0+255),w,b
 33347   00988C  B4D8               	btfsc	status,2,c
 33348   00988E  D003               	goto	u20070
 33349                           
 33350                           ; BSR set to: 1
 33351   009890  0E47               	movlw	71
 33352   009892  65CF               	cpfsgt	sendProducedEvent@happening& (0+255),b
 33353   009894  D002               	goto	l20021
 33354   009896                     u20070:
 33355                           
 33356                           ; BSR set to: 1
 33357   009896  0E00               	movlw	0
 33358   009898  0012               	return	
 33359   00989A                     l20021:
 33360                           
 33361                           ; BSR set to: 1
 33362                           ;../../VLCBlib_PIC/event_producer_happening.c: 227:     if (happening2Event[happening-1]
      +                           == 0xff) return FALSE;
 33363   00989A  0EFF               	movlw	low (_happening2Event+65535)
 33364   00989C  25CF               	addwf	sendProducedEvent@happening& (0+255),w,b
 33365   00989E  6ED9               	movwf	fsr2l,c
 33366   0098A0  6ADA               	clrf	fsr2h,c
 33367   0098A2  0E02               	movlw	high (_happening2Event+65535)
 33368   0098A4  22DA               	addwfc	fsr2h,f,c
 33369   0098A6  28DE               	incf	postinc2,w,c
 33370   0098A8  B4D8               	btfsc	status,2,c
 33371   0098AA  D7F5               	goto	u20070
 33372                           
 33373                           ; BSR set to: 1
 33374                           ;../../VLCBlib_PIC/event_producer_happening.c: 228:     producedEventNN.word = getNN(hap
      +                          pening2Event[happening-1]);
 33375   0098AC  0EFF               	movlw	low (_happening2Event+65535)
 33376   0098AE  25CF               	addwf	sendProducedEvent@happening& (0+255),w,b
 33377   0098B0  6ED9               	movwf	fsr2l,c
 33378   0098B2  6ADA               	clrf	fsr2h,c
 33379   0098B4  0E02               	movlw	high (_happening2Event+65535)
 33380   0098B6  22DA               	addwfc	fsr2h,f,c
 33381   0098B8  50DF               	movf	indf2,w,c
 33382   0098BA  EC85  F04B         	call	_getNN
 33383   0098BE  C097  F1CD         	movff	?_getNN,sendProducedEvent@producedEventNN
 33384   0098C2  C098  F1CE         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 33385                           
 33386                           ;../../VLCBlib_PIC/event_producer_happening.c: 229:     producedEventEN.word = getEN(hap
      +                          pening2Event[happening-1]);
 33387   0098C6  0EFF               	movlw	low (_happening2Event+65535)
 33388   0098C8  0101               	movlb	1	; () banked
 33389   0098CA  25CF               	addwf	sendProducedEvent@happening& (0+255),w,b
 33390   0098CC  6ED9               	movwf	fsr2l,c
 33391   0098CE  6ADA               	clrf	fsr2h,c
 33392   0098D0  0E02               	movlw	high (_happening2Event+65535)
 33393   0098D2  22DA               	addwfc	fsr2h,f,c
 33394   0098D4  50DF               	movf	indf2,w,c
 33395   0098D6  ECD8  F056         	call	_getEN
 33396   0098DA  C097  F1CB         	movff	?_getEN,sendProducedEvent@producedEventEN
 33397   0098DE  C098  F1CC         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 33398                           
 33399                           ;../../VLCBlib_PIC/event_producer_happening.c: 253:                 if (producedEventNN.
      +                          word == 0) {
 33400   0098E2  0101               	movlb	1	; () banked
 33401   0098E4  51CD               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 33402   0098E6  11CE               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 33403   0098E8  A4D8               	btfss	status,2,c
 33404   0098EA  D00E               	goto	l20039
 33405                           
 33406                           ; BSR set to: 1
 33407                           ;../../VLCBlib_PIC/event_producer_happening.c: 255:                     if (onOff == EVE
      +                          NT_ON) {
 33408   0098EC  0100               	movlb	0	; () banked
 33409   0098EE  05A8               	decf	sendProducedEvent@onOff& (0+255),w,b
 33410   0098F0  A4D8               	btfss	status,2,c
 33411   0098F2  D002               	goto	l20035
 33412                           
 33413                           ; BSR set to: 0
 33414                           ;../../VLCBlib_PIC/event_producer_happening.c: 256:                         opc = OPC_AS
      +                          ON;
 33415   0098F4  0E98               	movlw	152
 33416   0098F6  D001               	goto	L15
 33417   0098F8                     l20035:
 33418                           
 33419                           ; BSR set to: 0
 33420                           ;../../VLCBlib_PIC/event_producer_happening.c: 258:                         opc = OPC_AS
      +                          OF;
 33421   0098F8  0E99               	movlw	153
 33422   0098FA                     L15:
 33423   0098FA  0101               	movlb	1	; () banked
 33424   0098FC  6FCA               	movwf	sendProducedEvent@opc& (0+255),b
 33425                           
 33426                           ; BSR set to: 1
 33427                           ;../../VLCBlib_PIC/event_producer_happening.c: 260:                     producedEventNN.
      +                          word = nn.word;
 33428   0098FE  C0B4  F1CD         	movff	_nn,sendProducedEvent@producedEventNN
 33429   009902  C0B5  F1CE         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 33430                           
 33431                           ;../../VLCBlib_PIC/event_producer_happening.c: 261:                 } else {
 33432   009906  D009               	goto	l20045
 33433   009908                     l20039:
 33434                           
 33435                           ; BSR set to: 1
 33436                           ;../../VLCBlib_PIC/event_producer_happening.c: 263:                     if (onOff == EVE
      +                          NT_ON) {
 33437   009908  0100               	movlb	0	; () banked
 33438   00990A  05A8               	decf	sendProducedEvent@onOff& (0+255),w,b
 33439   00990C  A4D8               	btfss	status,2,c
 33440   00990E  D002               	goto	l20043
 33441                           
 33442                           ; BSR set to: 0
 33443                           ;../../VLCBlib_PIC/event_producer_happening.c: 264:                         opc = OPC_AC
      +                          ON;
 33444   009910  0E90               	movlw	144
 33445   009912  D001               	goto	L16
 33446   009914                     l20043:
 33447                           
 33448                           ; BSR set to: 0
 33449                           ;../../VLCBlib_PIC/event_producer_happening.c: 266:                         opc = OPC_AC
      +                          OF;
 33450   009914  0E91               	movlw	145
 33451   009916                     L16:
 33452   009916  0101               	movlb	1	; () banked
 33453   009918  6FCA               	movwf	sendProducedEvent@opc& (0+255),b
 33454   00991A                     l20045:
 33455                           
 33456                           ; BSR set to: 1
 33457                           ;../../VLCBlib_PIC/event_producer_happening.c: 269:                 sendMessage4(opc, pr
      +                          oducedEventNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEven
      +                          tEN.bytes.lo);
 33458   00991A  C1CE  F1C6         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 33459   00991E  C1CD  F1C7         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 33460   009922  C1CC  F1C8         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 33461   009926  C1CB  F1C9         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 33462   00992A  51CA               	movf	sendProducedEvent@opc& (0+255),w,b
 33463   00992C  EC3D  F061         	call	_sendMessage4
 33464                           
 33465                           ;../../VLCBlib_PIC/event_producer_happening.c: 271:                 producerDiagnostics[
      +                          1].asUint++;
 33466   009930  0101               	movlb	1	; () banked
 33467   009932  4BB0               	infsnz	(_producerDiagnostics+2)& (0+255),f,b
 33468   009934  2BB1               	incf	(_producerDiagnostics+3)& (0+255),f,b
 33469                           
 33470                           ; BSR set to: 1
 33471                           ;../../VLCBlib_PIC/event_producer_happening.c: 273:                 return TRUE;
 33472   009936  0E01               	movlw	1
 33473                           
 33474                           ; BSR set to: 1
 33475   009938  0012               	return		;funcret
 33476   00993A                     __end_of_sendProducedEvent:
 33477                           	callstack 0
 33478                           
 33479 ;; *************** function _sendMessage4 *****************
 33480 ;; Defined at:
 33481 ;;		line 1168 in file "../../VLCBlib_PIC/vlcb.c"
 33482 ;; Parameters:    Size  Location     Type
 33483 ;;  opc             1    wreg     enum E12392
 33484 ;;  data1           1    8[BANK1 ] unsigned char 
 33485 ;;  data2           1    9[BANK1 ] unsigned char 
 33486 ;;  data3           1   10[BANK1 ] unsigned char 
 33487 ;;  data4           1   11[BANK1 ] unsigned char 
 33488 ;; Auto vars:     Size  Location     Type
 33489 ;;  opc             1   71[BANK0 ] enum E12392
 33490 ;; Return value:  Size  Location     Type
 33491 ;;                  1    wreg      void 
 33492 ;; Registers used:
 33493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33494 ;; Tracked objects:
 33495 ;;		On entry : 0/0
 33496 ;;		On exit  : 0/0
 33497 ;;		Unchanged: 0/0
 33498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33499 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33502 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33503 ;;Total ram usage:        5 bytes
 33504 ;; Hardware stack levels used: 1
 33505 ;; Hardware stack levels required when called: 16
 33506 ;; This function calls:
 33507 ;;		_sendMessage
 33508 ;; This function is called by:
 33509 ;;		_mnsProcessMessage
 33510 ;;		_mnsTRrqnpnCallback
 33511 ;;		_nvProcessMessage
 33512 ;;		_nvTRnvrdCallback
 33513 ;;		_producerProcessMessage
 33514 ;;		_sendProducedEvent
 33515 ;; This function uses a non-reentrant model
 33516 ;;
 33517                           
 33518                           	psect	text130
 33519   00C27A                     __ptext130:
 33520                           	callstack 0
 33521   00C27A                     _sendMessage4:
 33522                           	callstack 12
 33523                           
 33524                           ; BSR set to: 1
 33525                           ;incstack = 0
 33526                           ;sendMessage4@opc stored from wreg
 33527   00C27A  0100               	movlb	0	; () banked
 33528   00C27C  6FA7               	movwf	sendMessage4@opc& (0+255),b
 33529                           
 33530                           ;../../VLCBlib_PIC/vlcb.c: 1169:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 33531   00C27E  0E05               	movlw	5
 33532   00C280  0101               	movlb	1	; () banked
 33533   00C282  6FBE               	movwf	sendMessage@len& (0+255),b
 33534   00C284  C1C6  F1BF         	movff	sendMessage4@data1,sendMessage@data1
 33535   00C288  C1C7  F1C0         	movff	sendMessage4@data2,sendMessage@data2
 33536   00C28C  C1C8  F1C1         	movff	sendMessage4@data3,sendMessage@data3
 33537   00C290  C1C9  F1C2         	movff	sendMessage4@data4,sendMessage@data4
 33538   00C294  0E00               	movlw	0
 33539   00C296  6FC3               	movwf	sendMessage@data5& (0+255),b
 33540   00C298  0E00               	movlw	0
 33541   00C29A  6FC4               	movwf	sendMessage@data6& (0+255),b
 33542   00C29C  0E00               	movlw	0
 33543   00C29E  6FC5               	movwf	sendMessage@data7& (0+255),b
 33544   00C2A0  0100               	movlb	0	; () banked
 33545   00C2A2  51A7               	movf	sendMessage4@opc& (0+255),w,b
 33546   00C2A4  ECE0  F055         	call	_sendMessage
 33547   00C2A8  0012               	return		;funcret
 33548   00C2AA                     __end_of_sendMessage4:
 33549                           	callstack 0
 33550                           
 33551 ;; *************** function _sendMessage *****************
 33552 ;; Defined at:
 33553 ;;		line 1226 in file "../../VLCBlib_PIC/vlcb.c"
 33554 ;; Parameters:    Size  Location     Type
 33555 ;;  opc             1    wreg     enum E12392
 33556 ;;  len             1    0[BANK1 ] unsigned char 
 33557 ;;  data1           1    1[BANK1 ] unsigned char 
 33558 ;;  data2           1    2[BANK1 ] unsigned char 
 33559 ;;  data3           1    3[BANK1 ] unsigned char 
 33560 ;;  data4           1    4[BANK1 ] unsigned char 
 33561 ;;  data5           1    5[BANK1 ] unsigned char 
 33562 ;;  data6           1    6[BANK1 ] unsigned char 
 33563 ;;  data7           1    7[BANK1 ] unsigned char 
 33564 ;; Auto vars:     Size  Location     Type
 33565 ;;  opc             1   70[BANK0 ] enum E12392
 33566 ;; Return value:  Size  Location     Type
 33567 ;;                  1    wreg      void 
 33568 ;; Registers used:
 33569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 33570 ;; Tracked objects:
 33571 ;;		On entry : 0/0
 33572 ;;		On exit  : 0/0
 33573 ;;		Unchanged: 0/0
 33574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33575 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33576 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33577 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33578 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33579 ;;Total ram usage:       11 bytes
 33580 ;; Hardware stack levels used: 1
 33581 ;; Hardware stack levels required when called: 15
 33582 ;; This function calls:
 33583 ;;		_canSendMessage
 33584 ;; This function is called by:
 33585 ;;		_sendMessage2
 33586 ;;		_sendMessage3
 33587 ;;		_sendMessage4
 33588 ;;		_sendMessage5
 33589 ;;		_sendMessage6
 33590 ;;		_sendMessage7
 33591 ;;		_sendMessage0
 33592 ;;		_sendMessage1
 33593 ;; This function uses a non-reentrant model
 33594 ;;
 33595                           
 33596                           	psect	text131
 33597   00ABC0                     __ptext131:
 33598                           	callstack 0
 33599   00ABC0                     _sendMessage:
 33600                           	callstack 11
 33601                           
 33602                           ;incstack = 0
 33603                           ;sendMessage@opc stored from wreg
 33604   00ABC0  0100               	movlb	0	; () banked
 33605   00ABC2  6FA6               	movwf	sendMessage@opc& (0+255),b
 33606                           
 33607                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.opc = opc;
 33608   00ABC4  C0A6  F19B         	movff	sendMessage@opc,_tmpMessage+1
 33609                           
 33610                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.len = len;
 33611   00ABC8  C1BE  F19A         	movff	sendMessage@len,_tmpMessage
 33612                           
 33613                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[0] = data1;
 33614   00ABCC  C1BF  F19C         	movff	sendMessage@data1,_tmpMessage+2
 33615                           
 33616                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[1] = data2;
 33617   00ABD0  C1C0  F19D         	movff	sendMessage@data2,_tmpMessage+3
 33618                           
 33619                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[2] = data3;
 33620   00ABD4  C1C1  F19E         	movff	sendMessage@data3,_tmpMessage+4
 33621                           
 33622                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[3] = data4;
 33623   00ABD8  C1C2  F19F         	movff	sendMessage@data4,_tmpMessage+5
 33624                           
 33625                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[4] = data5;
 33626   00ABDC  C1C3  F1A0         	movff	sendMessage@data5,_tmpMessage+6
 33627                           
 33628                           ;../../VLCBlib_PIC/vlcb.c: 1234:     tmpMessage.bytes[5] = data6;
 33629   00ABE0  C1C4  F1A1         	movff	sendMessage@data6,_tmpMessage+7
 33630                           
 33631                           ;../../VLCBlib_PIC/vlcb.c: 1235:     tmpMessage.bytes[6] = data7;
 33632   00ABE4  C1C5  F1A2         	movff	sendMessage@data7,_tmpMessage+8
 33633                           
 33634                           ;../../VLCBlib_PIC/vlcb.c: 1236:     if (transport != ((void*)0)) {
 33635   00ABE8  0101               	movlb	1	; () banked
 33636   00ABEA  5162               	movf	_transport& (0+255),w,b
 33637   00ABEC  1163               	iorwf	(_transport+1)& (0+255),w,b
 33638   00ABEE  B4D8               	btfsc	status,2,c
 33639   00ABF0  0012               	return	
 33640                           
 33641                           ; BSR set to: 1
 33642                           ;../../VLCBlib_PIC/vlcb.c: 1237:         if (transport->sendMessage != ((void*)0)) {
 33643   00ABF2  C162  FFF6         	movff	_transport,tblptrl
 33644   00ABF6  C163  FFF7         	movff	_transport+1,tblptrh
 33645   00ABFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33646   00ABFA  6AF8               	clrf	tblptru,c
 33647   00ABFC                     	endif
 33648   00ABFC                     	if	0	;tblptru may be non-zero
 33649   00ABFC                     	endif
 33650   00ABFC  0009               	tblrd		*+
 33651   00ABFE  50F5               	movf	tablat,w,c
 33652   00AC00  0009               	tblrd		*+
 33653   00AC02  10F5               	iorwf	tablat,w,c
 33654   00AC04  B4D8               	btfsc	status,2,c
 33655   00AC06  0012               	return	
 33656                           
 33657                           ; BSR set to: 1
 33658                           ;../../VLCBlib_PIC/vlcb.c: 1238:             transport->sendMessage(&tmpMessage);
 33659   00AC08  0E9A               	movlw	low _tmpMessage
 33660   00AC0A  0100               	movlb	0	; () banked
 33661   00AC0C  6F9A               	movwf	canSendMessage@mp& (0+255),b
 33662   00AC0E  0E01               	movlw	high _tmpMessage
 33663   00AC10  6F9B               	movwf	(canSendMessage@mp+1)& (0+255),b
 33664   00AC12  C162  FFF6         	movff	_transport,tblptrl
 33665   00AC16  C163  FFF7         	movff	_transport+1,tblptrh
 33666   00AC1A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33667   00AC1A  6AF8               	clrf	tblptru,c
 33668   00AC1C                     	endif
 33669   00AC1C                     	if	0	;tblptru may be non-zero
 33670   00AC1C                     	endif
 33671   00AC1C  0009               	tblrd		*+
 33672   00AC1E  CFF5 F0A4          	movff	tablat,??_sendMessage
 33673   00AC22  0009               	tblrd		*+
 33674   00AC24  CFF5 F0A5          	movff	tablat,??_sendMessage+1
 33675   00AC28  D801               	call	u19728
 33676   00AC2A  0012               	return	
 33677   00AC2C                     u19728:
 33678   00AC2C  0005               	push	
 33679   00AC2E  6EFA               	movwf	pclath,c
 33680   00AC30  51A4               	movf	??_sendMessage& (0+255),w,b
 33681   00AC32  6EFD               	movwf	tosl,c
 33682   00AC34  51A5               	movf	(??_sendMessage+1)& (0+255),w,b
 33683   00AC36  6EFE               	movwf	tosh,c
 33684   00AC38  6AFF               	clrf	tosu,c
 33685   00AC3A  50FA               	movf	pclath,w,c
 33686   00AC3C  0012               	return		;indir
 33687   00AC3E                     __end_of_sendMessage:
 33688                           	callstack 0
 33689                           
 33690 ;; *************** function _canSendMessage *****************
 33691 ;; Defined at:
 33692 ;;		line 493 in file "../../VLCBlib_PIC/can18_ecan.c"
 33693 ;; Parameters:    Size  Location     Type
 33694 ;;  mp              2   58[BANK0 ] PTR struct Message
 33695 ;;		 -> tmpMessage(9), 
 33696 ;; Auto vars:     Size  Location     Type
 33697 ;;  m               2   66[BANK0 ] PTR struct Message
 33698 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 33699 ;;  no              1   65[BANK0 ] unsigned char 
 33700 ;; Return value:  Size  Location     Type
 33701 ;;                  1    wreg      enum E13081
 33702 ;; Registers used:
 33703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33704 ;; Tracked objects:
 33705 ;;		On entry : 0/0
 33706 ;;		On exit  : 0/0
 33707 ;;		Unchanged: 0/0
 33708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33709 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33710 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33711 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33712 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33713 ;;Total ram usage:       10 bytes
 33714 ;; Hardware stack levels used: 1
 33715 ;; Hardware stack levels required when called: 14
 33716 ;; This function calls:
 33717 ;;		_getNextWriteMessage
 33718 ;;		_getNumTxBuffersInUse
 33719 ;;		_have
 33720 ;;		_isEvent
 33721 ;;		_push
 33722 ;;		_quantity
 33723 ;;		_updateModuleErrorStatus
 33724 ;; This function is called by:
 33725 ;;		_sendMessage
 33726 ;; This function uses a non-reentrant model
 33727 ;;
 33728                           
 33729                           	psect	text132
 33730   004B50                     __ptext132:
 33731                           	callstack 0
 33732   004B50                     _canSendMessage:
 33733                           	callstack 11
 33734                           
 33735                           ;../../VLCBlib_PIC/can18_ecan.c: 495:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          98:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 502:     PIE5bits.TXBnIE = 0;
 33736                           
 33737                           ;incstack = 0
 33738   004B50  9876               	bcf	118,4,c	;volatile
 33739                           
 33740                           ;../../VLCBlib_PIC/can18_ecan.c: 503:     if (quantity(&txQueue) == 0) {
 33741   004B52  0EA9               	movlw	low _txQueue
 33742   004B54  0100               	movlb	0	; () banked
 33743   004B56  6F8D               	movwf	quantity@q& (0+255),b
 33744   004B58  0E01               	movlw	high _txQueue
 33745   004B5A  6F8E               	movwf	(quantity@q+1)& (0+255),b
 33746   004B5C  EC72  F05F         	call	_quantity	;wreg free
 33747   004B60  0900               	iorlw	0
 33748   004B62  A4D8               	btfss	status,2,c
 33749   004B64  D150               	goto	l19653
 33750                           
 33751                           ;../../VLCBlib_PIC/can18_ecan.c: 505:         if (TXB0CONbits.TXREQ == 0) {
 33752   004B66  010F               	movlb	15	; () banked
 33753   004B68  B720               	btfsc	32,3,b	;volatile
 33754   004B6A  D14D               	goto	l19653
 33755                           
 33756                           ; BSR set to: 15
 33757                           ;../../VLCBlib_PIC/can18_ecan.c: 507:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 33758   004B6C  0100               	movlb	0	; () banked
 33759   004B6E  51B9               	movf	_canId& (0+255),w,b
 33760   004B70  A4D8               	btfss	status,2,c
 33761   004B72  D007               	goto	l19589
 33762                           
 33763                           ; BSR set to: 0
 33764   004B74  51B7               	movf	_enumerationState& (0+255),w,b
 33765   004B76  A4D8               	btfss	status,2,c
 33766   004B78  D004               	goto	l19589
 33767                           
 33768                           ; BSR set to: 0
 33769                           ;../../VLCBlib_PIC/can18_ecan.c: 508:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 33770   004B7A  0E01               	movlw	1
 33771   004B7C  6FB7               	movwf	_enumerationState& (0+255),b
 33772                           
 33773                           ;../../VLCBlib_PIC/can18_ecan.c: 509:                 canId = 1;
 33774   004B7E  0E01               	movlw	1
 33775   004B80  6FB9               	movwf	_canId& (0+255),b
 33776   004B82                     l19589:
 33777                           
 33778                           ; BSR set to: 0
 33779                           ;../../VLCBlib_PIC/can18_ecan.c: 511:             PIE5bits.TXBnIE = 1;
 33780   004B82  8876               	bsf	118,4,c	;volatile
 33781                           
 33782                           ; BSR set to: 0
 33783                           ;../../VLCBlib_PIC/can18_ecan.c: 513:             if (mp->len >8) mp->len = 8;
 33784   004B84  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 33785   004B88  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33786   004B8C  0E08               	movlw	8
 33787   004B8E  64DF               	cpfsgt	indf2,c
 33788   004B90  D006               	goto	l19595
 33789                           
 33790                           ; BSR set to: 0
 33791   004B92  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 33792   004B96  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33793   004B9A  0E08               	movlw	8
 33794   004B9C  6EDF               	movwf	indf2,c
 33795   004B9E                     l19595:
 33796                           
 33797                           ; BSR set to: 0
 33798                           ;../../VLCBlib_PIC/can18_ecan.c: 515:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 33799   004B9E  EE20 F001          	lfsr	2,1
 33800   004BA2  519A               	movf	canSendMessage@mp& (0+255),w,b
 33801   004BA4  26D9               	addwf	fsr2l,f,c
 33802   004BA6  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33803   004BA8  22DA               	addwfc	fsr2h,f,c
 33804   004BAA  50DF               	movf	indf2,w,c
 33805   004BAC  6F9C               	movwf	??_canSendMessage& (0+255),b
 33806   004BAE  6B9D               	clrf	(??_canSendMessage+1)& (0+255),b
 33807   004BB0  0E29               	movlw	low _priorities
 33808   004BB2  259C               	addwf	??_canSendMessage& (0+255),w,b
 33809   004BB4  6EF6               	movwf	tblptrl,c
 33810   004BB6  0EED               	movlw	high _priorities
 33811   004BB8  219D               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 33812   004BBA  6EF7               	movwf	tblptrh,c
 33813   004BBC                     	if	1	;There are 3 active tblptr bytes
 33814   004BBC  6AF8               	clrf	tblptru,c
 33815   004BBE  0E00               	movlw	low (__mediumconst shr (0+16))
 33816   004BC0  22F8               	addwfc	tblptru,f,c
 33817   004BC2                     	endif
 33818   004BC2  0008               	tblrd		*
 33819   004BC4  50F5               	movf	tablat,w,c
 33820   004BC6  6F9E               	movwf	(??_canSendMessage+2)& (0+255),b
 33821   004BC8  6B9F               	clrf	(??_canSendMessage+3)& (0+255),b
 33822   004BCA  0E86               	movlw	low _canPri
 33823   004BCC  259E               	addwf	(??_canSendMessage+2)& (0+255),w,b
 33824   004BCE  6EF6               	movwf	tblptrl,c
 33825   004BD0  0EEE               	movlw	high _canPri
 33826   004BD2  219F               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 33827   004BD4  6EF7               	movwf	tblptrh,c
 33828   004BD6                     	if	1	;There are 3 active tblptr bytes
 33829   004BD6  6AF8               	clrf	tblptru,c
 33830   004BD8  0E00               	movlw	low (__mediumconst shr (0+16))
 33831   004BDA  22F8               	addwfc	tblptru,f,c
 33832   004BDC                     	endif
 33833   004BDC  0008               	tblrd		*
 33834   004BDE  CFF5 F0A0          	movff	tablat,??_canSendMessage+4
 33835   004BE2  39B9               	swapf	_canId& (0+255),w,b
 33836   004BE4  46E8               	rlncf	wreg,f,c
 33837   004BE6  0B1F               	andlw	31
 33838   004BE8  0B0F               	andlw	15
 33839   004BEA  11A0               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 33840   004BEC  010F               	movlb	15	; () banked
 33841   004BEE  6F21               	movwf	33,b	;volatile
 33842                           
 33843                           ; BSR set to: 15
 33844                           ;../../VLCBlib_PIC/can18_ecan.c: 516:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 33845   004BF0  C0B9  F09C         	movff	_canId,??_canSendMessage
 33846   004BF4  0E07               	movlw	7
 33847   004BF6  0100               	movlb	0	; () banked
 33848   004BF8  179C               	andwf	??_canSendMessage& (0+255),f,b
 33849   004BFA  0E05               	movlw	5
 33850   004BFC  6F9D               	movwf	(??_canSendMessage+1)& (0+255),b
 33851   004BFE                     u19385:
 33852   004BFE  90D8               	bcf	status,0,c
 33853   004C00  379C               	rlcf	??_canSendMessage& (0+255),f,b
 33854   004C02  2F9D               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 33855   004C04  D7FC               	goto	u19385
 33856   004C06  519C               	movf	??_canSendMessage& (0+255),w,b
 33857   004C08  010F               	movlb	15	; () banked
 33858   004C0A  6F22               	movwf	34,b	;volatile
 33859                           
 33860                           ; BSR set to: 15
 33861                           ;../../VLCBlib_PIC/can18_ecan.c: 517:             TXB0D0 = mp->opc;
 33862   004C0C  0100               	movlb	0	; () banked
 33863   004C0E  EE20 F001          	lfsr	2,1
 33864   004C12  519A               	movf	canSendMessage@mp& (0+255),w,b
 33865   004C14  26D9               	addwf	fsr2l,f,c
 33866   004C16  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33867   004C18  22DA               	addwfc	fsr2h,f,c
 33868   004C1A  50DF               	movf	indf2,w,c
 33869   004C1C  010F               	movlb	15	; () banked
 33870   004C1E  6F26               	movwf	38,b	;volatile
 33871                           
 33872                           ; BSR set to: 15
 33873                           ;../../VLCBlib_PIC/can18_ecan.c: 518:             TXB0D1 = mp->bytes[0];
 33874   004C20  0100               	movlb	0	; () banked
 33875   004C22  EE20 F002          	lfsr	2,2
 33876   004C26  519A               	movf	canSendMessage@mp& (0+255),w,b
 33877   004C28  26D9               	addwf	fsr2l,f,c
 33878   004C2A  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33879   004C2C  22DA               	addwfc	fsr2h,f,c
 33880   004C2E  50DF               	movf	indf2,w,c
 33881   004C30  010F               	movlb	15	; () banked
 33882   004C32  6F27               	movwf	39,b	;volatile
 33883                           
 33884                           ; BSR set to: 15
 33885                           ;../../VLCBlib_PIC/can18_ecan.c: 519:             TXB0D2 = mp->bytes[1];
 33886   004C34  0100               	movlb	0	; () banked
 33887   004C36  EE20 F003          	lfsr	2,3
 33888   004C3A  519A               	movf	canSendMessage@mp& (0+255),w,b
 33889   004C3C  26D9               	addwf	fsr2l,f,c
 33890   004C3E  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33891   004C40  22DA               	addwfc	fsr2h,f,c
 33892   004C42  50DF               	movf	indf2,w,c
 33893   004C44  010F               	movlb	15	; () banked
 33894   004C46  6F28               	movwf	40,b	;volatile
 33895                           
 33896                           ; BSR set to: 15
 33897                           ;../../VLCBlib_PIC/can18_ecan.c: 520:             TXB0D3 = mp->bytes[2];
 33898   004C48  0100               	movlb	0	; () banked
 33899   004C4A  EE20 F004          	lfsr	2,4
 33900   004C4E  519A               	movf	canSendMessage@mp& (0+255),w,b
 33901   004C50  26D9               	addwf	fsr2l,f,c
 33902   004C52  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33903   004C54  22DA               	addwfc	fsr2h,f,c
 33904   004C56  50DF               	movf	indf2,w,c
 33905   004C58  010F               	movlb	15	; () banked
 33906   004C5A  6F29               	movwf	41,b	;volatile
 33907                           
 33908                           ; BSR set to: 15
 33909                           ;../../VLCBlib_PIC/can18_ecan.c: 521:             TXB0D4 = mp->bytes[3];
 33910   004C5C  0100               	movlb	0	; () banked
 33911   004C5E  EE20 F005          	lfsr	2,5
 33912   004C62  519A               	movf	canSendMessage@mp& (0+255),w,b
 33913   004C64  26D9               	addwf	fsr2l,f,c
 33914   004C66  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33915   004C68  22DA               	addwfc	fsr2h,f,c
 33916   004C6A  50DF               	movf	indf2,w,c
 33917   004C6C  010F               	movlb	15	; () banked
 33918   004C6E  6F2A               	movwf	42,b	;volatile
 33919                           
 33920                           ; BSR set to: 15
 33921                           ;../../VLCBlib_PIC/can18_ecan.c: 522:             TXB0D5 = mp->bytes[4];
 33922   004C70  0100               	movlb	0	; () banked
 33923   004C72  EE20 F006          	lfsr	2,6
 33924   004C76  519A               	movf	canSendMessage@mp& (0+255),w,b
 33925   004C78  26D9               	addwf	fsr2l,f,c
 33926   004C7A  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33927   004C7C  22DA               	addwfc	fsr2h,f,c
 33928   004C7E  50DF               	movf	indf2,w,c
 33929   004C80  010F               	movlb	15	; () banked
 33930   004C82  6F2B               	movwf	43,b	;volatile
 33931                           
 33932                           ; BSR set to: 15
 33933                           ;../../VLCBlib_PIC/can18_ecan.c: 523:             TXB0D6 = mp->bytes[5];
 33934   004C84  0100               	movlb	0	; () banked
 33935   004C86  EE20 F007          	lfsr	2,7
 33936   004C8A  519A               	movf	canSendMessage@mp& (0+255),w,b
 33937   004C8C  26D9               	addwf	fsr2l,f,c
 33938   004C8E  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33939   004C90  22DA               	addwfc	fsr2h,f,c
 33940   004C92  50DF               	movf	indf2,w,c
 33941   004C94  010F               	movlb	15	; () banked
 33942   004C96  6F2C               	movwf	44,b	;volatile
 33943                           
 33944                           ; BSR set to: 15
 33945                           ;../../VLCBlib_PIC/can18_ecan.c: 524:             TXB0D7 = mp->bytes[6];
 33946   004C98  0100               	movlb	0	; () banked
 33947   004C9A  EE20 F008          	lfsr	2,8
 33948   004C9E  519A               	movf	canSendMessage@mp& (0+255),w,b
 33949   004CA0  26D9               	addwf	fsr2l,f,c
 33950   004CA2  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33951   004CA4  22DA               	addwfc	fsr2h,f,c
 33952   004CA6  50DF               	movf	indf2,w,c
 33953   004CA8  010F               	movlb	15	; () banked
 33954   004CAA  6F2D               	movwf	45,b	;volatile
 33955                           
 33956                           ; BSR set to: 15
 33957                           ;../../VLCBlib_PIC/can18_ecan.c: 525:             TXB0DLC = mp->len & 0x0F;
 33958   004CAC  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 33959   004CB0  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33960   004CB4  50DF               	movf	indf2,w,c
 33961   004CB6  0B0F               	andlw	15
 33962   004CB8  6F25               	movwf	37,b	;volatile
 33963                           
 33964                           ; BSR set to: 15
 33965                           ;../../VLCBlib_PIC/can18_ecan.c: 527:             TXB0CONbits.TXREQ = 1;
 33966   004CBA  8720               	bsf	32,3,b	;volatile
 33967                           
 33968                           ; BSR set to: 15
 33969                           ;../../VLCBlib_PIC/can18_ecan.c: 529:             canDiagnostics[0x06].asUint++;
 33970   004CBC  0101               	movlb	1	; () banked
 33971   004CBE  4B72               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 33972   004CC0  2B73               	incf	(_canDiagnostics+13)& (0+255),f,b
 33973                           
 33974                           ; BSR set to: 1
 33975                           ;../../VLCBlib_PIC/can18_ecan.c: 534:             if (isEvent(mp->opc)) {
 33976   004CC2  0100               	movlb	0	; () banked
 33977   004CC4  EE20 F001          	lfsr	2,1
 33978   004CC8  519A               	movf	canSendMessage@mp& (0+255),w,b
 33979   004CCA  26D9               	addwf	fsr2l,f,c
 33980   004CCC  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33981   004CCE  22DA               	addwfc	fsr2h,f,c
 33982   004CD0  50DF               	movf	indf2,w,c
 33983   004CD2  EC7F  F062         	call	_isEvent
 33984   004CD6  0900               	iorlw	0
 33985   004CD8  B4D8               	btfsc	status,2,c
 33986   004CDA  0012               	return	
 33987                           
 33988                           ;../../VLCBlib_PIC/can18_ecan.c: 535:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 33989   004CDC  0E08               	movlw	8
 33990   004CDE  EC35  F058         	call	_have
 33991   004CE2  0900               	iorlw	0
 33992   004CE4  B4D8               	btfsc	status,2,c
 33993   004CE6  0012               	return	
 33994                           
 33995                           ;../../VLCBlib_PIC/can18_ecan.c: 537:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 33996   004CE8  0E26               	movlw	low _rxQueue
 33997   004CEA  0100               	movlb	0	; () banked
 33998   004CEC  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 33999   004CEE  ECBB  F046         	call	_getNextWriteMessage	;wreg free
 34000   004CF2  C08D  F0A2         	movff	?_getNextWriteMessage,canSendMessage@m
 34001   004CF6  C08E  F0A3         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 34002                           
 34003                           ;../../VLCBlib_PIC/can18_ecan.c: 538:                     if (m == ((void*)0)) {
 34004   004CFA  0100               	movlb	0	; () banked
 34005   004CFC  51A2               	movf	canSendMessage@m& (0+255),w,b
 34006   004CFE  11A3               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 34007   004D00  A4D8               	btfss	status,2,c
 34008   004D02  D006               	goto	l19633
 34009                           
 34010                           ; BSR set to: 0
 34011                           ;../../VLCBlib_PIC/can18_ecan.c: 540:                         canDiagnostics[0x08].asUin
      +                          t++;
 34012   004D04  0101               	movlb	1	; () banked
 34013   004D06  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 34014   004D08  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 34015                           
 34016                           ; BSR set to: 1
 34017                           ;../../VLCBlib_PIC/can18_ecan.c: 541:                         updateModuleErrorStatus();
 34018   004D0A  EC39  F064         	call	_updateModuleErrorStatus	;wreg free
 34019                           
 34020                           ;../../VLCBlib_PIC/can18_ecan.c: 543:                     } else {
 34021   004D0E  0012               	return	
 34022   004D10                     l19633:
 34023                           
 34024                           ; BSR set to: 0
 34025                           ;../../VLCBlib_PIC/can18_ecan.c: 545:                         m->opc = mp->opc;
 34026   004D10  EE20 F001          	lfsr	2,1
 34027   004D14  519A               	movf	canSendMessage@mp& (0+255),w,b
 34028   004D16  26D9               	addwf	fsr2l,f,c
 34029   004D18  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34030   004D1A  22DA               	addwfc	fsr2h,f,c
 34031   004D1C  EE10 F001          	lfsr	1,1
 34032   004D20  51A2               	movf	canSendMessage@m& (0+255),w,b
 34033   004D22  26E1               	addwf	fsr1l,f,c
 34034   004D24  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34035   004D26  22E2               	addwfc	fsr1h,f,c
 34036   004D28  CFDF FFE7          	movff	indf2,indf1
 34037                           
 34038                           ; BSR set to: 0
 34039                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                         m->len = mp->len;
 34040   004D2C  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 34041   004D30  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 34042   004D34  C0A2  FFE1         	movff	canSendMessage@m,fsr1l
 34043   004D38  C0A3  FFE2         	movff	canSendMessage@m+1,fsr1h
 34044   004D3C  CFDF FFE7          	movff	indf2,indf1
 34045                           
 34046                           ; BSR set to: 0
 34047                           ;../../VLCBlib_PIC/can18_ecan.c: 547:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 34048   004D40  EE20 F002          	lfsr	2,2
 34049   004D44  519A               	movf	canSendMessage@mp& (0+255),w,b
 34050   004D46  26D9               	addwf	fsr2l,f,c
 34051   004D48  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34052   004D4A  22DA               	addwfc	fsr2h,f,c
 34053   004D4C  EE10 F002          	lfsr	1,2
 34054   004D50  51A2               	movf	canSendMessage@m& (0+255),w,b
 34055   004D52  26E1               	addwf	fsr1l,f,c
 34056   004D54  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34057   004D56  22E2               	addwfc	fsr1h,f,c
 34058   004D58  CFDF FFE7          	movff	indf2,indf1
 34059                           
 34060                           ; BSR set to: 0
 34061                           ;../../VLCBlib_PIC/can18_ecan.c: 548:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 34062   004D5C  EE20 F003          	lfsr	2,3
 34063   004D60  519A               	movf	canSendMessage@mp& (0+255),w,b
 34064   004D62  26D9               	addwf	fsr2l,f,c
 34065   004D64  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34066   004D66  22DA               	addwfc	fsr2h,f,c
 34067   004D68  EE10 F003          	lfsr	1,3
 34068   004D6C  51A2               	movf	canSendMessage@m& (0+255),w,b
 34069   004D6E  26E1               	addwf	fsr1l,f,c
 34070   004D70  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34071   004D72  22E2               	addwfc	fsr1h,f,c
 34072   004D74  CFDF FFE7          	movff	indf2,indf1
 34073                           
 34074                           ; BSR set to: 0
 34075                           ;../../VLCBlib_PIC/can18_ecan.c: 549:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 34076   004D78  EE20 F004          	lfsr	2,4
 34077   004D7C  519A               	movf	canSendMessage@mp& (0+255),w,b
 34078   004D7E  26D9               	addwf	fsr2l,f,c
 34079   004D80  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34080   004D82  22DA               	addwfc	fsr2h,f,c
 34081   004D84  EE10 F004          	lfsr	1,4
 34082   004D88  51A2               	movf	canSendMessage@m& (0+255),w,b
 34083   004D8A  26E1               	addwf	fsr1l,f,c
 34084   004D8C  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34085   004D8E  22E2               	addwfc	fsr1h,f,c
 34086   004D90  CFDF FFE7          	movff	indf2,indf1
 34087                           
 34088                           ; BSR set to: 0
 34089                           ;../../VLCBlib_PIC/can18_ecan.c: 550:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 34090   004D94  EE20 F005          	lfsr	2,5
 34091   004D98  519A               	movf	canSendMessage@mp& (0+255),w,b
 34092   004D9A  26D9               	addwf	fsr2l,f,c
 34093   004D9C  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34094   004D9E  22DA               	addwfc	fsr2h,f,c
 34095   004DA0  EE10 F005          	lfsr	1,5
 34096   004DA4  51A2               	movf	canSendMessage@m& (0+255),w,b
 34097   004DA6  26E1               	addwf	fsr1l,f,c
 34098   004DA8  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34099   004DAA  22E2               	addwfc	fsr1h,f,c
 34100   004DAC  CFDF FFE7          	movff	indf2,indf1
 34101                           
 34102                           ; BSR set to: 0
 34103                           ;../../VLCBlib_PIC/can18_ecan.c: 551:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 34104   004DB0  EE20 F006          	lfsr	2,6
 34105   004DB4  519A               	movf	canSendMessage@mp& (0+255),w,b
 34106   004DB6  26D9               	addwf	fsr2l,f,c
 34107   004DB8  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34108   004DBA  22DA               	addwfc	fsr2h,f,c
 34109   004DBC  EE10 F006          	lfsr	1,6
 34110   004DC0  51A2               	movf	canSendMessage@m& (0+255),w,b
 34111   004DC2  26E1               	addwf	fsr1l,f,c
 34112   004DC4  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34113   004DC6  22E2               	addwfc	fsr1h,f,c
 34114   004DC8  CFDF FFE7          	movff	indf2,indf1
 34115                           
 34116                           ; BSR set to: 0
 34117                           ;../../VLCBlib_PIC/can18_ecan.c: 552:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 34118   004DCC  EE20 F007          	lfsr	2,7
 34119   004DD0  519A               	movf	canSendMessage@mp& (0+255),w,b
 34120   004DD2  26D9               	addwf	fsr2l,f,c
 34121   004DD4  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34122   004DD6  22DA               	addwfc	fsr2h,f,c
 34123   004DD8  EE10 F007          	lfsr	1,7
 34124   004DDC  51A2               	movf	canSendMessage@m& (0+255),w,b
 34125   004DDE  26E1               	addwf	fsr1l,f,c
 34126   004DE0  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34127   004DE2  22E2               	addwfc	fsr1h,f,c
 34128   004DE4  CFDF FFE7          	movff	indf2,indf1
 34129                           
 34130                           ; BSR set to: 0
 34131                           ;../../VLCBlib_PIC/can18_ecan.c: 553:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 34132   004DE8  EE20 F008          	lfsr	2,8
 34133   004DEC  519A               	movf	canSendMessage@mp& (0+255),w,b
 34134   004DEE  26D9               	addwf	fsr2l,f,c
 34135   004DF0  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 34136   004DF2  22DA               	addwfc	fsr2h,f,c
 34137   004DF4  EE10 F008          	lfsr	1,8
 34138   004DF8  51A2               	movf	canSendMessage@m& (0+255),w,b
 34139   004DFA  26E1               	addwf	fsr1l,f,c
 34140   004DFC  51A3               	movf	(canSendMessage@m+1)& (0+255),w,b
 34141   004DFE  22E2               	addwfc	fsr1h,f,c
 34142   004E00  CFDF FFE7          	movff	indf2,indf1
 34143   004E04  0012               	return	
 34144   004E06                     l19653:
 34145                           
 34146                           ;../../VLCBlib_PIC/can18_ecan.c: 562:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 34147   004E06  0EA9               	movlw	low _txQueue
 34148   004E08  0100               	movlb	0	; () banked
 34149   004E0A  6F8D               	movwf	push@q& (0+255),b
 34150   004E0C  0E01               	movlw	high _txQueue
 34151   004E0E  6F8E               	movwf	(push@q+1)& (0+255),b
 34152   004E10  C09A  F08F         	movff	canSendMessage@mp,push@m
 34153   004E14  C09B  F090         	movff	canSendMessage@mp+1,push@m+1
 34154   004E18  ECE1  F01E         	call	_push	;wreg free
 34155   004E1C  0900               	iorlw	0
 34156   004E1E  A4D8               	btfss	status,2,c
 34157   004E20  D007               	goto	l19663
 34158                           
 34159                           ;../../VLCBlib_PIC/can18_ecan.c: 564:         canDiagnostics[0x05].asUint++;
 34160   004E22  0101               	movlb	1	; () banked
 34161   004E24  4B70               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 34162   004E26  2B71               	incf	(_canDiagnostics+11)& (0+255),f,b
 34163                           
 34164                           ; BSR set to: 1
 34165                           ;../../VLCBlib_PIC/can18_ecan.c: 565:         updateModuleErrorStatus();
 34166   004E28  EC39  F064         	call	_updateModuleErrorStatus	;wreg free
 34167                           
 34168                           ;../../VLCBlib_PIC/can18_ecan.c: 567:         PIE5bits.TXBnIE = 1;
 34169   004E2C  8876               	bsf	118,4,c	;volatile
 34170   004E2E  0012               	return	
 34171   004E30                     l19663:
 34172                           
 34173                           ;../../VLCBlib_PIC/can18_ecan.c: 571:     no = getNumTxBuffersInUse();
 34174   004E30  EC29  F064         	call	_getNumTxBuffersInUse	;wreg free
 34175   004E34  0100               	movlb	0	; () banked
 34176   004E36  6FA1               	movwf	canSendMessage@no& (0+255),b
 34177                           
 34178                           ; BSR set to: 0
 34179                           ;../../VLCBlib_PIC/can18_ecan.c: 572:     if (canDiagnostics[0x11].asUint < no) {
 34180   004E38  51A1               	movf	canSendMessage@no& (0+255),w,b
 34181   004E3A  0101               	movlb	1	; () banked
 34182   004E3C  5D88               	subwf	(_canDiagnostics+34)& (0+255),w,b
 34183   004E3E  0E00               	movlw	0
 34184   004E40  5989               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 34185   004E42  B0D8               	btfsc	status,0,c
 34186   004E44  D003               	goto	l2531
 34187                           
 34188                           ; BSR set to: 1
 34189                           ;../../VLCBlib_PIC/can18_ecan.c: 573:         canDiagnostics[0x11].asUint = no;
 34190   004E46  C0A1  F188         	movff	canSendMessage@no,_canDiagnostics+34
 34191   004E4A  6B89               	clrf	(_canDiagnostics+35)& (0+255),b
 34192   004E4C                     l2531:
 34193                           
 34194                           ; BSR set to: 1
 34195                           ;../../VLCBlib_PIC/can18_ecan.c: 576:     PIE5bits.TXBnIE = 1;
 34196   004E4C  8876               	bsf	118,4,c	;volatile
 34197                           
 34198                           ;../../VLCBlib_PIC/can18_ecan.c: 577:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 34199   004E4E  0012               	return		;funcret
 34200   004E50                     __end_of_canSendMessage:
 34201                           	callstack 0
 34202                           
 34203 ;; *************** function _push *****************
 34204 ;; Defined at:
 34205 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 34206 ;; Parameters:    Size  Location     Type
 34207 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 34208 ;;		 -> txQueue(5), 
 34209 ;;  m               2   47[BANK0 ] PTR struct Message
 34210 ;;		 -> tmpMessage(9), 
 34211 ;; Auto vars:     Size  Location     Type
 34212 ;;		None
 34213 ;; Return value:  Size  Location     Type
 34214 ;;                  1    wreg      enum E12934
 34215 ;; Registers used:
 34216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34217 ;; Tracked objects:
 34218 ;;		On entry : 0/0
 34219 ;;		On exit  : 0/0
 34220 ;;		Unchanged: 0/0
 34221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34222 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34224 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34225 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34226 ;;Total ram usage:       13 bytes
 34227 ;; Hardware stack levels used: 1
 34228 ;; Hardware stack levels required when called: 12
 34229 ;; This function calls:
 34230 ;;		Nothing
 34231 ;; This function is called by:
 34232 ;;		_canSendMessage
 34233 ;; This function uses a non-reentrant model
 34234 ;;
 34235                           
 34236                           	psect	text133
 34237   003DC2                     __ptext133:
 34238                           	callstack 0
 34239   003DC2                     _push:
 34240                           	callstack 12
 34241                           
 34242                           ;incstack = 0
 34243   003DC2  0100               	movlb	0	; () banked
 34244   003DC4  EE20 F002          	lfsr	2,2
 34245   003DC8  518D               	movf	push@q& (0+255),w,b
 34246   003DCA  26D9               	addwf	fsr2l,f,c
 34247   003DCC  518E               	movf	(push@q+1)& (0+255),w,b
 34248   003DCE  22DA               	addwfc	fsr2h,f,c
 34249   003DD0  50DF               	movf	indf2,w,c
 34250   003DD2  6F91               	movwf	??_push& (0+255),b
 34251   003DD4  6B92               	clrf	(??_push+1)& (0+255),b
 34252   003DD6  EE20 F004          	lfsr	2,4
 34253   003DDA  518D               	movf	push@q& (0+255),w,b
 34254   003DDC  26D9               	addwf	fsr2l,f,c
 34255   003DDE  518E               	movf	(push@q+1)& (0+255),w,b
 34256   003DE0  22DA               	addwfc	fsr2h,f,c
 34257   003DE2  50DF               	movf	indf2,w,c
 34258   003DE4  6F93               	movwf	(??_push+2)& (0+255),b
 34259   003DE6  0EFF               	movlw	255
 34260   003DE8  2593               	addwf	(??_push+2)& (0+255),w,b
 34261   003DEA  6F94               	movwf	(??_push+3)& (0+255),b
 34262   003DEC  6B95               	clrf	(??_push+4)& (0+255),b
 34263   003DEE  0EFF               	movlw	255
 34264   003DF0  2395               	addwfc	(??_push+4)& (0+255),f,b
 34265   003DF2  EE20 F003          	lfsr	2,3
 34266   003DF6  518D               	movf	push@q& (0+255),w,b
 34267   003DF8  26D9               	addwf	fsr2l,f,c
 34268   003DFA  518E               	movf	(push@q+1)& (0+255),w,b
 34269   003DFC  22DA               	addwfc	fsr2h,f,c
 34270   003DFE  50DF               	movf	indf2,w,c
 34271   003E00  6F96               	movwf	(??_push+5)& (0+255),b
 34272   003E02  6B97               	clrf	(??_push+6)& (0+255),b
 34273   003E04  0E01               	movlw	1
 34274   003E06  2796               	addwf	(??_push+5)& (0+255),f,b
 34275   003E08  0E00               	movlw	0
 34276   003E0A  2397               	addwfc	(??_push+6)& (0+255),f,b
 34277   003E0C  5194               	movf	(??_push+3)& (0+255),w,b
 34278   003E0E  1596               	andwf	(??_push+5)& (0+255),w,b
 34279   003E10  6F98               	movwf	(??_push+7)& (0+255),b
 34280   003E12  5195               	movf	(??_push+4)& (0+255),w,b
 34281   003E14  1597               	andwf	(??_push+6)& (0+255),w,b
 34282   003E16  6F99               	movwf	(??_push+8)& (0+255),b
 34283   003E18  5191               	movf	??_push& (0+255),w,b
 34284   003E1A  1998               	xorwf	(??_push+7)& (0+255),w,b
 34285   003E1C  E106               	bnz	l19455
 34286   003E1E  5192               	movf	(??_push+1)& (0+255),w,b
 34287   003E20  1999               	xorwf	(??_push+8)& (0+255),w,b
 34288   003E22  A4D8               	btfss	status,2,c
 34289   003E24  D002               	goto	l19455
 34290                           
 34291                           ; BSR set to: 0
 34292   003E26  0E00               	movlw	0
 34293   003E28  0012               	return	
 34294   003E2A                     l19455:
 34295                           
 34296                           ; BSR set to: 0
 34297   003E2A  EE20 F001          	lfsr	2,1
 34298   003E2E  518F               	movf	push@m& (0+255),w,b
 34299   003E30  26D9               	addwf	fsr2l,f,c
 34300   003E32  5190               	movf	(push@m+1)& (0+255),w,b
 34301   003E34  22DA               	addwfc	fsr2h,f,c
 34302   003E36  EE10 F003          	lfsr	1,3
 34303   003E3A  518D               	movf	push@q& (0+255),w,b
 34304   003E3C  26E1               	addwf	fsr1l,f,c
 34305   003E3E  518E               	movf	(push@q+1)& (0+255),w,b
 34306   003E40  22E2               	addwfc	fsr1h,f,c
 34307   003E42  50E7               	movf	indf1,w,c
 34308   003E44  6F91               	movwf	??_push& (0+255),b
 34309   003E46  5191               	movf	??_push& (0+255),w,b
 34310   003E48  0D09               	mullw	9
 34311   003E4A  CFF3 F092          	movff	prodl,??_push+1
 34312   003E4E  CFF4 F093          	movff	prodh,??_push+2
 34313   003E52  C08D  FFE1         	movff	push@q,fsr1l
 34314   003E56  C08E  FFE2         	movff	push@q+1,fsr1h
 34315   003E5A  CFE6 F094          	movff	postinc1,??_push+3
 34316   003E5E  CFE5 F095          	movff	postdec1,??_push+4
 34317   003E62  5192               	movf	(??_push+1)& (0+255),w,b
 34318   003E64  2594               	addwf	(??_push+3)& (0+255),w,b
 34319   003E66  6F96               	movwf	(??_push+5)& (0+255),b
 34320   003E68  5193               	movf	(??_push+2)& (0+255),w,b
 34321   003E6A  2195               	addwfc	(??_push+4)& (0+255),w,b
 34322   003E6C  6F97               	movwf	(??_push+6)& (0+255),b
 34323   003E6E  0E01               	movlw	1
 34324   003E70  2596               	addwf	(??_push+5)& (0+255),w,b
 34325   003E72  6EE1               	movwf	fsr1l,c
 34326   003E74  0E00               	movlw	0
 34327   003E76  2197               	addwfc	(??_push+6)& (0+255),w,b
 34328   003E78  6EE2               	movwf	fsr1h,c
 34329   003E7A  CFDF FFE7          	movff	indf2,indf1
 34330   003E7E  EE20 F002          	lfsr	2,2
 34331   003E82  518F               	movf	push@m& (0+255),w,b
 34332   003E84  26D9               	addwf	fsr2l,f,c
 34333   003E86  5190               	movf	(push@m+1)& (0+255),w,b
 34334   003E88  22DA               	addwfc	fsr2h,f,c
 34335   003E8A  EE10 F003          	lfsr	1,3
 34336   003E8E  518D               	movf	push@q& (0+255),w,b
 34337   003E90  26E1               	addwf	fsr1l,f,c
 34338   003E92  518E               	movf	(push@q+1)& (0+255),w,b
 34339   003E94  22E2               	addwfc	fsr1h,f,c
 34340   003E96  50E7               	movf	indf1,w,c
 34341   003E98  6F91               	movwf	??_push& (0+255),b
 34342   003E9A  5191               	movf	??_push& (0+255),w,b
 34343   003E9C  0D09               	mullw	9
 34344   003E9E  CFF3 F092          	movff	prodl,??_push+1
 34345   003EA2  CFF4 F093          	movff	prodh,??_push+2
 34346   003EA6  C08D  FFE1         	movff	push@q,fsr1l
 34347   003EAA  C08E  FFE2         	movff	push@q+1,fsr1h
 34348   003EAE  CFE6 F094          	movff	postinc1,??_push+3
 34349   003EB2  CFE5 F095          	movff	postdec1,??_push+4
 34350   003EB6  5192               	movf	(??_push+1)& (0+255),w,b
 34351   003EB8  2594               	addwf	(??_push+3)& (0+255),w,b
 34352   003EBA  6F96               	movwf	(??_push+5)& (0+255),b
 34353   003EBC  5193               	movf	(??_push+2)& (0+255),w,b
 34354   003EBE  2195               	addwfc	(??_push+4)& (0+255),w,b
 34355   003EC0  6F97               	movwf	(??_push+6)& (0+255),b
 34356   003EC2  0E02               	movlw	2
 34357   003EC4  2596               	addwf	(??_push+5)& (0+255),w,b
 34358   003EC6  6EE1               	movwf	fsr1l,c
 34359   003EC8  0E00               	movlw	0
 34360   003ECA  2197               	addwfc	(??_push+6)& (0+255),w,b
 34361   003ECC  6EE2               	movwf	fsr1h,c
 34362   003ECE  CFDF FFE7          	movff	indf2,indf1
 34363   003ED2  EE20 F003          	lfsr	2,3
 34364   003ED6  518F               	movf	push@m& (0+255),w,b
 34365   003ED8  26D9               	addwf	fsr2l,f,c
 34366   003EDA  5190               	movf	(push@m+1)& (0+255),w,b
 34367   003EDC  22DA               	addwfc	fsr2h,f,c
 34368   003EDE  EE10 F003          	lfsr	1,3
 34369   003EE2  518D               	movf	push@q& (0+255),w,b
 34370   003EE4  26E1               	addwf	fsr1l,f,c
 34371   003EE6  518E               	movf	(push@q+1)& (0+255),w,b
 34372   003EE8  22E2               	addwfc	fsr1h,f,c
 34373   003EEA  50E7               	movf	indf1,w,c
 34374   003EEC  6F91               	movwf	??_push& (0+255),b
 34375   003EEE  5191               	movf	??_push& (0+255),w,b
 34376   003EF0  0D09               	mullw	9
 34377   003EF2  CFF3 F092          	movff	prodl,??_push+1
 34378   003EF6  CFF4 F093          	movff	prodh,??_push+2
 34379   003EFA  C08D  FFE1         	movff	push@q,fsr1l
 34380   003EFE  C08E  FFE2         	movff	push@q+1,fsr1h
 34381   003F02  CFE6 F094          	movff	postinc1,??_push+3
 34382   003F06  CFE5 F095          	movff	postdec1,??_push+4
 34383   003F0A  5192               	movf	(??_push+1)& (0+255),w,b
 34384   003F0C  2594               	addwf	(??_push+3)& (0+255),w,b
 34385   003F0E  6F96               	movwf	(??_push+5)& (0+255),b
 34386   003F10  5193               	movf	(??_push+2)& (0+255),w,b
 34387   003F12  2195               	addwfc	(??_push+4)& (0+255),w,b
 34388   003F14  6F97               	movwf	(??_push+6)& (0+255),b
 34389   003F16  0E03               	movlw	3
 34390   003F18  2596               	addwf	(??_push+5)& (0+255),w,b
 34391   003F1A  6EE1               	movwf	fsr1l,c
 34392   003F1C  0E00               	movlw	0
 34393   003F1E  2197               	addwfc	(??_push+6)& (0+255),w,b
 34394   003F20  6EE2               	movwf	fsr1h,c
 34395   003F22  CFDF FFE7          	movff	indf2,indf1
 34396   003F26  EE20 F004          	lfsr	2,4
 34397   003F2A  518F               	movf	push@m& (0+255),w,b
 34398   003F2C  26D9               	addwf	fsr2l,f,c
 34399   003F2E  5190               	movf	(push@m+1)& (0+255),w,b
 34400   003F30  22DA               	addwfc	fsr2h,f,c
 34401   003F32  EE10 F003          	lfsr	1,3
 34402   003F36  518D               	movf	push@q& (0+255),w,b
 34403   003F38  26E1               	addwf	fsr1l,f,c
 34404   003F3A  518E               	movf	(push@q+1)& (0+255),w,b
 34405   003F3C  22E2               	addwfc	fsr1h,f,c
 34406   003F3E  50E7               	movf	indf1,w,c
 34407   003F40  6F91               	movwf	??_push& (0+255),b
 34408   003F42  5191               	movf	??_push& (0+255),w,b
 34409   003F44  0D09               	mullw	9
 34410   003F46  CFF3 F092          	movff	prodl,??_push+1
 34411   003F4A  CFF4 F093          	movff	prodh,??_push+2
 34412   003F4E  C08D  FFE1         	movff	push@q,fsr1l
 34413   003F52  C08E  FFE2         	movff	push@q+1,fsr1h
 34414   003F56  CFE6 F094          	movff	postinc1,??_push+3
 34415   003F5A  CFE5 F095          	movff	postdec1,??_push+4
 34416   003F5E  5192               	movf	(??_push+1)& (0+255),w,b
 34417   003F60  2594               	addwf	(??_push+3)& (0+255),w,b
 34418   003F62  6F96               	movwf	(??_push+5)& (0+255),b
 34419   003F64  5193               	movf	(??_push+2)& (0+255),w,b
 34420   003F66  2195               	addwfc	(??_push+4)& (0+255),w,b
 34421   003F68  6F97               	movwf	(??_push+6)& (0+255),b
 34422   003F6A  0E04               	movlw	4
 34423   003F6C  2596               	addwf	(??_push+5)& (0+255),w,b
 34424   003F6E  6EE1               	movwf	fsr1l,c
 34425   003F70  0E00               	movlw	0
 34426   003F72  2197               	addwfc	(??_push+6)& (0+255),w,b
 34427   003F74  6EE2               	movwf	fsr1h,c
 34428   003F76  CFDF FFE7          	movff	indf2,indf1
 34429   003F7A  EE20 F005          	lfsr	2,5
 34430   003F7E  518F               	movf	push@m& (0+255),w,b
 34431   003F80  26D9               	addwf	fsr2l,f,c
 34432   003F82  5190               	movf	(push@m+1)& (0+255),w,b
 34433   003F84  22DA               	addwfc	fsr2h,f,c
 34434   003F86  EE10 F003          	lfsr	1,3
 34435   003F8A  518D               	movf	push@q& (0+255),w,b
 34436   003F8C  26E1               	addwf	fsr1l,f,c
 34437   003F8E  518E               	movf	(push@q+1)& (0+255),w,b
 34438   003F90  22E2               	addwfc	fsr1h,f,c
 34439   003F92  50E7               	movf	indf1,w,c
 34440   003F94  6F91               	movwf	??_push& (0+255),b
 34441   003F96  5191               	movf	??_push& (0+255),w,b
 34442   003F98  0D09               	mullw	9
 34443   003F9A  CFF3 F092          	movff	prodl,??_push+1
 34444   003F9E  CFF4 F093          	movff	prodh,??_push+2
 34445   003FA2  C08D  FFE1         	movff	push@q,fsr1l
 34446   003FA6  C08E  FFE2         	movff	push@q+1,fsr1h
 34447   003FAA  CFE6 F094          	movff	postinc1,??_push+3
 34448   003FAE  CFE5 F095          	movff	postdec1,??_push+4
 34449   003FB2  5192               	movf	(??_push+1)& (0+255),w,b
 34450   003FB4  2594               	addwf	(??_push+3)& (0+255),w,b
 34451   003FB6  6F96               	movwf	(??_push+5)& (0+255),b
 34452   003FB8  5193               	movf	(??_push+2)& (0+255),w,b
 34453   003FBA  2195               	addwfc	(??_push+4)& (0+255),w,b
 34454   003FBC  6F97               	movwf	(??_push+6)& (0+255),b
 34455   003FBE  0E05               	movlw	5
 34456   003FC0  2596               	addwf	(??_push+5)& (0+255),w,b
 34457   003FC2  6EE1               	movwf	fsr1l,c
 34458   003FC4  0E00               	movlw	0
 34459   003FC6  2197               	addwfc	(??_push+6)& (0+255),w,b
 34460   003FC8  6EE2               	movwf	fsr1h,c
 34461   003FCA  CFDF FFE7          	movff	indf2,indf1
 34462   003FCE  EE20 F006          	lfsr	2,6
 34463   003FD2  518F               	movf	push@m& (0+255),w,b
 34464   003FD4  26D9               	addwf	fsr2l,f,c
 34465   003FD6  5190               	movf	(push@m+1)& (0+255),w,b
 34466   003FD8  22DA               	addwfc	fsr2h,f,c
 34467   003FDA  EE10 F003          	lfsr	1,3
 34468   003FDE  518D               	movf	push@q& (0+255),w,b
 34469   003FE0  26E1               	addwf	fsr1l,f,c
 34470   003FE2  518E               	movf	(push@q+1)& (0+255),w,b
 34471   003FE4  22E2               	addwfc	fsr1h,f,c
 34472   003FE6  50E7               	movf	indf1,w,c
 34473   003FE8  6F91               	movwf	??_push& (0+255),b
 34474   003FEA  5191               	movf	??_push& (0+255),w,b
 34475   003FEC  0D09               	mullw	9
 34476   003FEE  CFF3 F092          	movff	prodl,??_push+1
 34477   003FF2  CFF4 F093          	movff	prodh,??_push+2
 34478   003FF6  C08D  FFE1         	movff	push@q,fsr1l
 34479   003FFA  C08E  FFE2         	movff	push@q+1,fsr1h
 34480   003FFE  CFE6 F094          	movff	postinc1,??_push+3
 34481   004002  CFE5 F095          	movff	postdec1,??_push+4
 34482   004006  5192               	movf	(??_push+1)& (0+255),w,b
 34483   004008  2594               	addwf	(??_push+3)& (0+255),w,b
 34484   00400A  6F96               	movwf	(??_push+5)& (0+255),b
 34485   00400C  5193               	movf	(??_push+2)& (0+255),w,b
 34486   00400E  2195               	addwfc	(??_push+4)& (0+255),w,b
 34487   004010  6F97               	movwf	(??_push+6)& (0+255),b
 34488   004012  0E06               	movlw	6
 34489   004014  2596               	addwf	(??_push+5)& (0+255),w,b
 34490   004016  6EE1               	movwf	fsr1l,c
 34491   004018  0E00               	movlw	0
 34492   00401A  2197               	addwfc	(??_push+6)& (0+255),w,b
 34493   00401C  6EE2               	movwf	fsr1h,c
 34494   00401E  CFDF FFE7          	movff	indf2,indf1
 34495   004022  EE20 F007          	lfsr	2,7
 34496   004026  518F               	movf	push@m& (0+255),w,b
 34497   004028  26D9               	addwf	fsr2l,f,c
 34498   00402A  5190               	movf	(push@m+1)& (0+255),w,b
 34499   00402C  22DA               	addwfc	fsr2h,f,c
 34500   00402E  EE10 F003          	lfsr	1,3
 34501   004032  518D               	movf	push@q& (0+255),w,b
 34502   004034  26E1               	addwf	fsr1l,f,c
 34503   004036  518E               	movf	(push@q+1)& (0+255),w,b
 34504   004038  22E2               	addwfc	fsr1h,f,c
 34505   00403A  50E7               	movf	indf1,w,c
 34506   00403C  6F91               	movwf	??_push& (0+255),b
 34507   00403E  5191               	movf	??_push& (0+255),w,b
 34508   004040  0D09               	mullw	9
 34509   004042  CFF3 F092          	movff	prodl,??_push+1
 34510   004046  CFF4 F093          	movff	prodh,??_push+2
 34511   00404A  C08D  FFE1         	movff	push@q,fsr1l
 34512   00404E  C08E  FFE2         	movff	push@q+1,fsr1h
 34513   004052  CFE6 F094          	movff	postinc1,??_push+3
 34514   004056  CFE5 F095          	movff	postdec1,??_push+4
 34515   00405A  5192               	movf	(??_push+1)& (0+255),w,b
 34516   00405C  2594               	addwf	(??_push+3)& (0+255),w,b
 34517   00405E  6F96               	movwf	(??_push+5)& (0+255),b
 34518   004060  5193               	movf	(??_push+2)& (0+255),w,b
 34519   004062  2195               	addwfc	(??_push+4)& (0+255),w,b
 34520   004064  6F97               	movwf	(??_push+6)& (0+255),b
 34521   004066  0E07               	movlw	7
 34522   004068  2596               	addwf	(??_push+5)& (0+255),w,b
 34523   00406A  6EE1               	movwf	fsr1l,c
 34524   00406C  0E00               	movlw	0
 34525   00406E  2197               	addwfc	(??_push+6)& (0+255),w,b
 34526   004070  6EE2               	movwf	fsr1h,c
 34527   004072  CFDF FFE7          	movff	indf2,indf1
 34528   004076  EE20 F008          	lfsr	2,8
 34529   00407A  518F               	movf	push@m& (0+255),w,b
 34530   00407C  26D9               	addwf	fsr2l,f,c
 34531   00407E  5190               	movf	(push@m+1)& (0+255),w,b
 34532   004080  22DA               	addwfc	fsr2h,f,c
 34533   004082  EE10 F003          	lfsr	1,3
 34534   004086  518D               	movf	push@q& (0+255),w,b
 34535   004088  26E1               	addwf	fsr1l,f,c
 34536   00408A  518E               	movf	(push@q+1)& (0+255),w,b
 34537   00408C  22E2               	addwfc	fsr1h,f,c
 34538   00408E  50E7               	movf	indf1,w,c
 34539   004090  6F91               	movwf	??_push& (0+255),b
 34540   004092  5191               	movf	??_push& (0+255),w,b
 34541   004094  0D09               	mullw	9
 34542   004096  CFF3 F092          	movff	prodl,??_push+1
 34543   00409A  CFF4 F093          	movff	prodh,??_push+2
 34544   00409E  C08D  FFE1         	movff	push@q,fsr1l
 34545   0040A2  C08E  FFE2         	movff	push@q+1,fsr1h
 34546   0040A6  CFE6 F094          	movff	postinc1,??_push+3
 34547   0040AA  CFE5 F095          	movff	postdec1,??_push+4
 34548   0040AE  5192               	movf	(??_push+1)& (0+255),w,b
 34549   0040B0  2594               	addwf	(??_push+3)& (0+255),w,b
 34550   0040B2  6F96               	movwf	(??_push+5)& (0+255),b
 34551   0040B4  5193               	movf	(??_push+2)& (0+255),w,b
 34552   0040B6  2195               	addwfc	(??_push+4)& (0+255),w,b
 34553   0040B8  6F97               	movwf	(??_push+6)& (0+255),b
 34554   0040BA  0E08               	movlw	8
 34555   0040BC  2596               	addwf	(??_push+5)& (0+255),w,b
 34556   0040BE  6EE1               	movwf	fsr1l,c
 34557   0040C0  0E00               	movlw	0
 34558   0040C2  2197               	addwfc	(??_push+6)& (0+255),w,b
 34559   0040C4  6EE2               	movwf	fsr1h,c
 34560   0040C6  CFDF FFE7          	movff	indf2,indf1
 34561   0040CA  C08F  FFD9         	movff	push@m,fsr2l
 34562   0040CE  C090  FFDA         	movff	push@m+1,fsr2h
 34563   0040D2  EE10 F003          	lfsr	1,3
 34564   0040D6  518D               	movf	push@q& (0+255),w,b
 34565   0040D8  26E1               	addwf	fsr1l,f,c
 34566   0040DA  518E               	movf	(push@q+1)& (0+255),w,b
 34567   0040DC  22E2               	addwfc	fsr1h,f,c
 34568   0040DE  50E7               	movf	indf1,w,c
 34569   0040E0  6F91               	movwf	??_push& (0+255),b
 34570   0040E2  5191               	movf	??_push& (0+255),w,b
 34571   0040E4  0D09               	mullw	9
 34572   0040E6  CFF3 F092          	movff	prodl,??_push+1
 34573   0040EA  CFF4 F093          	movff	prodh,??_push+2
 34574   0040EE  C08D  FFE1         	movff	push@q,fsr1l
 34575   0040F2  C08E  FFE2         	movff	push@q+1,fsr1h
 34576   0040F6  CFE6 F094          	movff	postinc1,??_push+3
 34577   0040FA  CFE5 F095          	movff	postdec1,??_push+4
 34578   0040FE  5192               	movf	(??_push+1)& (0+255),w,b
 34579   004100  2594               	addwf	(??_push+3)& (0+255),w,b
 34580   004102  6EE1               	movwf	fsr1l,c
 34581   004104  5193               	movf	(??_push+2)& (0+255),w,b
 34582   004106  2195               	addwfc	(??_push+4)& (0+255),w,b
 34583   004108  6EE2               	movwf	fsr1h,c
 34584   00410A  CFDF FFE7          	movff	indf2,indf1
 34585                           
 34586                           ; BSR set to: 0
 34587   00410E  EE20 F003          	lfsr	2,3
 34588   004112  518D               	movf	push@q& (0+255),w,b
 34589   004114  26D9               	addwf	fsr2l,f,c
 34590   004116  518E               	movf	(push@q+1)& (0+255),w,b
 34591   004118  22DA               	addwfc	fsr2h,f,c
 34592   00411A  2ADF               	incf	indf2,f,c
 34593                           
 34594                           ; BSR set to: 0
 34595   00411C  EE20 F004          	lfsr	2,4
 34596   004120  518D               	movf	push@q& (0+255),w,b
 34597   004122  26D9               	addwf	fsr2l,f,c
 34598   004124  518E               	movf	(push@q+1)& (0+255),w,b
 34599   004126  22DA               	addwfc	fsr2h,f,c
 34600   004128  EE10 F003          	lfsr	1,3
 34601   00412C  518D               	movf	push@q& (0+255),w,b
 34602   00412E  26E1               	addwf	fsr1l,f,c
 34603   004130  518E               	movf	(push@q+1)& (0+255),w,b
 34604   004132  22E2               	addwfc	fsr1h,f,c
 34605   004134  50DE               	movf	postinc2,w,c
 34606   004136  5CE6               	subwf	postinc1,w,c
 34607   004138  A0D8               	btfss	status,0,c
 34608   00413A  D007               	goto	l19463
 34609                           
 34610                           ; BSR set to: 0
 34611   00413C  EE20 F003          	lfsr	2,3
 34612   004140  518D               	movf	push@q& (0+255),w,b
 34613   004142  26D9               	addwf	fsr2l,f,c
 34614   004144  518E               	movf	(push@q+1)& (0+255),w,b
 34615   004146  22DA               	addwfc	fsr2h,f,c
 34616   004148  6ADF               	clrf	indf2,c
 34617   00414A                     l19463:
 34618                           
 34619                           ; BSR set to: 0
 34620   00414A  0E01               	movlw	1
 34621                           
 34622                           ; BSR set to: 0
 34623   00414C  0012               	return		;funcret
 34624   00414E                     __end_of_push:
 34625                           	callstack 0
 34626                           
 34627 ;; *************** function _isEvent *****************
 34628 ;; Defined at:
 34629 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 34630 ;; Parameters:    Size  Location     Type
 34631 ;;  opc             1    wreg     unsigned char 
 34632 ;; Auto vars:     Size  Location     Type
 34633 ;;  opc             1   46[BANK0 ] unsigned char 
 34634 ;; Return value:  Size  Location     Type
 34635 ;;                  1    wreg      enum E12766
 34636 ;; Registers used:
 34637 ;;		wreg, status,2, status,0
 34638 ;; Tracked objects:
 34639 ;;		On entry : 0/0
 34640 ;;		On exit  : 0/0
 34641 ;;		Unchanged: 0/0
 34642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34644 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34647 ;;Total ram usage:        2 bytes
 34648 ;; Hardware stack levels used: 1
 34649 ;; Hardware stack levels required when called: 12
 34650 ;; This function calls:
 34651 ;;		Nothing
 34652 ;; This function is called by:
 34653 ;;		_canSendMessage
 34654 ;; This function uses a non-reentrant model
 34655 ;;
 34656                           
 34657                           	psect	text134
 34658   00C4FE                     __ptext134:
 34659                           	callstack 0
 34660   00C4FE                     _isEvent:
 34661                           	callstack 12
 34662                           
 34663                           ; BSR set to: 0
 34664                           ;incstack = 0
 34665                           ;isEvent@opc stored from wreg
 34666   00C4FE  0100               	movlb	0	; () banked
 34667   00C500  6F8E               	movwf	isEvent@opc& (0+255),b
 34668                           
 34669                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 34670   00C502  0E00               	movlw	0
 34671   00C504  0100               	movlb	0	; () banked
 34672   00C506  6F8D               	movwf	_isEvent$4896& (0+255),b
 34673                           
 34674                           ; BSR set to: 0
 34675   00C508  518E               	movf	isEvent@opc& (0+255),w,b
 34676   00C50A  0B90               	andlw	144
 34677   00C50C  0A90               	xorlw	144
 34678   00C50E  A4D8               	btfss	status,2,c
 34679   00C510  D008               	goto	l2069
 34680                           
 34681                           ; BSR set to: 0
 34682   00C512  518E               	movf	isEvent@opc& (0+255),w,b
 34683   00C514  0AFF               	xorlw	255
 34684   00C516  0B06               	andlw	6
 34685   00C518  0A06               	xorlw	6
 34686   00C51A  A4D8               	btfss	status,2,c
 34687   00C51C  D002               	goto	l2069
 34688                           
 34689                           ; BSR set to: 0
 34690   00C51E  0E01               	movlw	1
 34691   00C520  6F8D               	movwf	_isEvent$4896& (0+255),b
 34692   00C522                     l2069:
 34693                           
 34694                           ; BSR set to: 0
 34695   00C522  518D               	movf	_isEvent$4896& (0+255),w,b
 34696                           
 34697                           ; BSR set to: 0
 34698   00C524  0012               	return		;funcret
 34699   00C526                     __end_of_isEvent:
 34700                           	callstack 0
 34701                           
 34702 ;; *************** function _have *****************
 34703 ;; Defined at:
 34704 ;;		line 838 in file "../../VLCBlib_PIC/vlcb.c"
 34705 ;; Parameters:    Size  Location     Type
 34706 ;;  id              1    wreg     unsigned char 
 34707 ;; Auto vars:     Size  Location     Type
 34708 ;;  id              1   47[BANK0 ] unsigned char 
 34709 ;;  i               1   48[BANK0 ] unsigned char 
 34710 ;; Return value:  Size  Location     Type
 34711 ;;                  1    wreg      enum E12897
 34712 ;; Registers used:
 34713 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 34714 ;; Tracked objects:
 34715 ;;		On entry : 0/0
 34716 ;;		On exit  : 0/0
 34717 ;;		Unchanged: 0/0
 34718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34720 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34721 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34722 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34723 ;;Total ram usage:        4 bytes
 34724 ;; Hardware stack levels used: 1
 34725 ;; Hardware stack levels required when called: 12
 34726 ;; This function calls:
 34727 ;;		Nothing
 34728 ;; This function is called by:
 34729 ;;		_getParameterFlags
 34730 ;;		_getParameter
 34731 ;;		_canSendMessage
 34732 ;; This function uses a non-reentrant model
 34733 ;;
 34734                           
 34735                           	psect	text135
 34736   00B06A                     __ptext135:
 34737                           	callstack 0
 34738   00B06A                     _have:
 34739                           	callstack 12
 34740                           
 34741                           ; BSR set to: 0
 34742                           ;incstack = 0
 34743                           ;have@id stored from wreg
 34744   00B06A  0100               	movlb	0	; () banked
 34745   00B06C  6F8F               	movwf	have@id& (0+255),b
 34746                           
 34747                           ;../../VLCBlib_PIC/vlcb.c: 839:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 840:     for (i
      +                          =0; i<9; i++) {
 34748   00B06E  0E00               	movlw	0
 34749   00B070  0100               	movlb	0	; () banked
 34750   00B072  6F90               	movwf	have@i& (0+255),b
 34751   00B074                     l19423:
 34752                           
 34753                           ; BSR set to: 0
 34754                           ;../../VLCBlib_PIC/vlcb.c: 841:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 34755   00B074  5190               	movf	have@i& (0+255),w,b
 34756   00B076  0D02               	mullw	2
 34757   00B078  0E69               	movlw	low _services
 34758   00B07A  24F3               	addwf	243,w,c
 34759   00B07C  6EF6               	movwf	tblptrl,c
 34760   00B07E  0EEE               	movlw	high _services
 34761   00B080  20F4               	addwfc	244,w,c
 34762   00B082  6EF7               	movwf	tblptrh,c
 34763   00B084                     	if	1	;There are 3 active tblptr bytes
 34764   00B084  6AF8               	clrf	tblptru,c
 34765   00B086  0E00               	movlw	low (__mediumconst shr (0+16))
 34766   00B088  22F8               	addwfc	tblptru,f,c
 34767   00B08A                     	endif
 34768   00B08A  0009               	tblrd		*+
 34769   00B08C  50F5               	movf	tablat,w,c
 34770   00B08E  0009               	tblrd		*+
 34771   00B090  10F5               	iorwf	tablat,w,c
 34772   00B092  B4D8               	btfsc	status,2,c
 34773   00B094  D01D               	goto	l19431
 34774                           
 34775                           ; BSR set to: 0
 34776   00B096  5190               	movf	have@i& (0+255),w,b
 34777   00B098  0D02               	mullw	2
 34778   00B09A  0E69               	movlw	low _services
 34779   00B09C  24F3               	addwf	243,w,c
 34780   00B09E  6EF6               	movwf	tblptrl,c
 34781   00B0A0  0EEE               	movlw	high _services
 34782   00B0A2  20F4               	addwfc	244,w,c
 34783   00B0A4  6EF7               	movwf	tblptrh,c
 34784   00B0A6                     	if	1	;There are 3 active tblptr bytes
 34785   00B0A6  6AF8               	clrf	tblptru,c
 34786   00B0A8  0E00               	movlw	low (__mediumconst shr (0+16))
 34787   00B0AA  22F8               	addwfc	tblptru,f,c
 34788   00B0AC                     	endif
 34789   00B0AC  0009               	tblrd		*+
 34790   00B0AE  CFF5 F08D          	movff	tablat,??_have
 34791   00B0B2  0009               	tblrd		*+
 34792   00B0B4  CFF5 F08E          	movff	tablat,??_have+1
 34793   00B0B8  C08D  FFF6         	movff	??_have,tblptrl
 34794   00B0BC  C08E  FFF7         	movff	??_have+1,tblptrh
 34795   00B0C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34796   00B0C0  6AF8               	clrf	tblptru,c
 34797   00B0C2                     	endif
 34798   00B0C2                     	if	0	;tblptru may be non-zero
 34799   00B0C2                     	endif
 34800   00B0C2  0008               	tblrd		*
 34801   00B0C4  50F5               	movf	tablat,w,c
 34802   00B0C6  198F               	xorwf	have@id& (0+255),w,b
 34803   00B0C8  A4D8               	btfss	status,2,c
 34804   00B0CA  D002               	goto	l19431
 34805                           
 34806                           ; BSR set to: 0
 34807                           ;../../VLCBlib_PIC/vlcb.c: 842:             return PRESENT;
 34808   00B0CC  0E01               	movlw	1
 34809   00B0CE  0012               	return	
 34810   00B0D0                     l19431:
 34811                           
 34812                           ; BSR set to: 0
 34813                           ;../../VLCBlib_PIC/vlcb.c: 844:     }
 34814   00B0D0  2B90               	incf	have@i& (0+255),f,b
 34815                           
 34816                           ; BSR set to: 0
 34817   00B0D2  0E08               	movlw	8
 34818   00B0D4  6590               	cpfsgt	have@i& (0+255),b
 34819   00B0D6  D7CE               	goto	l19423
 34820                           
 34821                           ; BSR set to: 0
 34822                           ;../../VLCBlib_PIC/vlcb.c: 845:     return NOT_PRESENT;
 34823   00B0D8  0E00               	movlw	0
 34824                           
 34825                           ; BSR set to: 0
 34826   00B0DA  0012               	return		;funcret
 34827   00B0DC                     __end_of_have:
 34828                           	callstack 0
 34829                           
 34830 ;; *************** function _getNumTxBuffersInUse *****************
 34831 ;; Defined at:
 34832 ;;		line 461 in file "../../VLCBlib_PIC/can18_ecan.c"
 34833 ;; Parameters:    Size  Location     Type
 34834 ;;		None
 34835 ;; Auto vars:     Size  Location     Type
 34836 ;;		None
 34837 ;; Return value:  Size  Location     Type
 34838 ;;                  1    wreg      unsigned char 
 34839 ;; Registers used:
 34840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34841 ;; Tracked objects:
 34842 ;;		On entry : 0/0
 34843 ;;		On exit  : 0/0
 34844 ;;		Unchanged: 0/0
 34845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34850 ;;Total ram usage:        0 bytes
 34851 ;; Hardware stack levels used: 1
 34852 ;; Hardware stack levels required when called: 13
 34853 ;; This function calls:
 34854 ;;		_quantity
 34855 ;; This function is called by:
 34856 ;;		_canGetDiagnostic
 34857 ;;		_canSendMessage
 34858 ;; This function uses a non-reentrant model
 34859 ;;
 34860                           
 34861                           	psect	text136
 34862   00C852                     __ptext136:
 34863                           	callstack 0
 34864   00C852                     _getNumTxBuffersInUse:
 34865                           	callstack 11
 34866                           
 34867                           ;../../VLCBlib_PIC/can18_ecan.c: 462:     return quantity(&txQueue);
 34868                           
 34869                           ; BSR set to: 0
 34870                           ;incstack = 0
 34871   00C852  0EA9               	movlw	low _txQueue
 34872   00C854  0100               	movlb	0	; () banked
 34873   00C856  6F8D               	movwf	quantity@q& (0+255),b
 34874   00C858  0E01               	movlw	high _txQueue
 34875   00C85A  6F8E               	movwf	(quantity@q+1)& (0+255),b
 34876   00C85C  EC72  F05F         	call	_quantity	;wreg free
 34877   00C860  0012               	return		;funcret
 34878   00C862                     __end_of_getNumTxBuffersInUse:
 34879                           	callstack 0
 34880                           
 34881 ;; *************** function _quantity *****************
 34882 ;; Defined at:
 34883 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 34884 ;; Parameters:    Size  Location     Type
 34885 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 34886 ;;		 -> txQueue(5), rxQueue(5), 
 34887 ;; Auto vars:     Size  Location     Type
 34888 ;;		None
 34889 ;; Return value:  Size  Location     Type
 34890 ;;                  1    wreg      unsigned char 
 34891 ;; Registers used:
 34892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34893 ;; Tracked objects:
 34894 ;;		On entry : 0/0
 34895 ;;		On exit  : 0/0
 34896 ;;		Unchanged: 0/0
 34897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34900 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34901 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34902 ;;Total ram usage:        6 bytes
 34903 ;; Hardware stack levels used: 1
 34904 ;; Hardware stack levels required when called: 12
 34905 ;; This function calls:
 34906 ;;		Nothing
 34907 ;; This function is called by:
 34908 ;;		_getNumTxBuffersInUse
 34909 ;;		_getNumRxBuffersInUse
 34910 ;;		_canSendMessage
 34911 ;; This function uses a non-reentrant model
 34912 ;;
 34913                           
 34914                           	psect	text137
 34915   00BEE4                     __ptext137:
 34916                           	callstack 0
 34917   00BEE4                     _quantity:
 34918                           	callstack 12
 34919                           
 34920                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 34921                           
 34922                           ;incstack = 0
 34923   00BEE4  0100               	movlb	0	; () banked
 34924   00BEE6  EE20 F002          	lfsr	2,2
 34925   00BEEA  518D               	movf	quantity@q& (0+255),w,b
 34926   00BEEC  26D9               	addwf	fsr2l,f,c
 34927   00BEEE  518E               	movf	(quantity@q+1)& (0+255),w,b
 34928   00BEF0  22DA               	addwfc	fsr2h,f,c
 34929   00BEF2  50DF               	movf	indf2,w,c
 34930   00BEF4  6F8F               	movwf	??_quantity& (0+255),b
 34931   00BEF6  EE20 F003          	lfsr	2,3
 34932   00BEFA  518D               	movf	quantity@q& (0+255),w,b
 34933   00BEFC  26D9               	addwf	fsr2l,f,c
 34934   00BEFE  518E               	movf	(quantity@q+1)& (0+255),w,b
 34935   00BF00  22DA               	addwfc	fsr2h,f,c
 34936   00BF02  50DF               	movf	indf2,w,c
 34937   00BF04  6F90               	movwf	(??_quantity+1)& (0+255),b
 34938   00BF06  518F               	movf	??_quantity& (0+255),w,b
 34939   00BF08  5D90               	subwf	(??_quantity+1)& (0+255),w,b
 34940   00BF0A  6F91               	movwf	(??_quantity+2)& (0+255),b
 34941   00BF0C  EE20 F004          	lfsr	2,4
 34942   00BF10  518D               	movf	quantity@q& (0+255),w,b
 34943   00BF12  26D9               	addwf	fsr2l,f,c
 34944   00BF14  518E               	movf	(quantity@q+1)& (0+255),w,b
 34945   00BF16  22DA               	addwfc	fsr2h,f,c
 34946   00BF18  50DF               	movf	indf2,w,c
 34947   00BF1A  6F92               	movwf	(??_quantity+3)& (0+255),b
 34948   00BF1C  0592               	decf	(??_quantity+3)& (0+255),w,b
 34949   00BF1E  1591               	andwf	(??_quantity+2)& (0+255),w,b
 34950                           
 34951                           ; BSR set to: 0
 34952   00BF20  0012               	return		;funcret
 34953   00BF22                     __end_of_quantity:
 34954                           	callstack 0
 34955                           
 34956 ;; *************** function _getNextWriteMessage *****************
 34957 ;; Defined at:
 34958 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 34959 ;; Parameters:    Size  Location     Type
 34960 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34961 ;;		 -> rxQueue(5), 
 34962 ;; Auto vars:     Size  Location     Type
 34963 ;;  wr              1   56[BANK0 ] unsigned char 
 34964 ;; Return value:  Size  Location     Type
 34965 ;;                  2   45[BANK0 ] PTR struct Message
 34966 ;; Registers used:
 34967 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34968 ;; Tracked objects:
 34969 ;;		On entry : 0/0
 34970 ;;		On exit  : 0/0
 34971 ;;		Unchanged: 0/0
 34972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34975 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34976 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34977 ;;Total ram usage:       12 bytes
 34978 ;; Hardware stack levels used: 1
 34979 ;; Hardware stack levels required when called: 12
 34980 ;; This function calls:
 34981 ;;		Nothing
 34982 ;; This function is called by:
 34983 ;;		_canSendMessage
 34984 ;; This function uses a non-reentrant model
 34985 ;;
 34986                           
 34987                           	psect	text138
 34988   008D76                     __ptext138:
 34989                           	callstack 0
 34990   008D76                     _getNextWriteMessage:
 34991                           	callstack 12
 34992                           
 34993                           ; BSR set to: 0
 34994                           ;incstack = 0
 34995   008D76  0100               	movlb	0	; () banked
 34996   008D78  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34997   008D7A  6ED9               	movwf	fsr2l,c
 34998   008D7C  6ADA               	clrf	fsr2h,c
 34999   008D7E  0E02               	movlw	2
 35000   008D80  26D9               	addwf	fsr2l,f,c
 35001   008D82  50DF               	movf	indf2,w,c
 35002   008D84  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 35003   008D86  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 35004   008D88  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35005   008D8A  6ED9               	movwf	fsr2l,c
 35006   008D8C  6ADA               	clrf	fsr2h,c
 35007   008D8E  0E04               	movlw	4
 35008   008D90  26D9               	addwf	fsr2l,f,c
 35009   008D92  50DF               	movf	indf2,w,c
 35010   008D94  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 35011   008D96  0EFF               	movlw	255
 35012   008D98  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 35013   008D9A  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 35014   008D9C  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 35015   008D9E  0EFF               	movlw	255
 35016   008DA0  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 35017   008DA2  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35018   008DA4  6ED9               	movwf	fsr2l,c
 35019   008DA6  6ADA               	clrf	fsr2h,c
 35020   008DA8  0E03               	movlw	3
 35021   008DAA  26D9               	addwf	fsr2l,f,c
 35022   008DAC  50DF               	movf	indf2,w,c
 35023   008DAE  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 35024   008DB0  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 35025   008DB2  0E01               	movlw	1
 35026   008DB4  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 35027   008DB6  0E00               	movlw	0
 35028   008DB8  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 35029   008DBA  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 35030   008DBC  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 35031   008DBE  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 35032   008DC0  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 35033   008DC2  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 35034   008DC4  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 35035   008DC6  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 35036   008DC8  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 35037   008DCA  E109               	bnz	l19473
 35038   008DCC  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 35039   008DCE  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 35040   008DD0  A4D8               	btfss	status,2,c
 35041   008DD2  D005               	goto	l19473
 35042                           
 35043                           ; BSR set to: 0
 35044   008DD4  0E00               	movlw	0
 35045   008DD6  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 35046   008DD8  0E00               	movlw	0
 35047   008DDA  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 35048   008DDC  0012               	return	
 35049   008DDE                     l19473:
 35050                           
 35051                           ; BSR set to: 0
 35052   008DDE  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35053   008DE0  6ED9               	movwf	fsr2l,c
 35054   008DE2  6ADA               	clrf	fsr2h,c
 35055   008DE4  0E03               	movlw	3
 35056   008DE6  26D9               	addwf	fsr2l,f,c
 35057   008DE8  50DF               	movf	indf2,w,c
 35058   008DEA  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 35059   008DEC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35060   008DEE  6ED9               	movwf	fsr2l,c
 35061   008DF0  6ADA               	clrf	fsr2h,c
 35062   008DF2  0E03               	movlw	3
 35063   008DF4  26D9               	addwf	fsr2l,f,c
 35064   008DF6  2ADF               	incf	indf2,f,c
 35065                           
 35066                           ; BSR set to: 0
 35067   008DF8  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35068   008DFA  6ED9               	movwf	fsr2l,c
 35069   008DFC  6ADA               	clrf	fsr2h,c
 35070   008DFE  0E04               	movlw	4
 35071   008E00  26D9               	addwf	fsr2l,f,c
 35072   008E02  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35073   008E04  6EE1               	movwf	fsr1l,c
 35074   008E06  6AE2               	clrf	fsr1h,c
 35075   008E08  0E03               	movlw	3
 35076   008E0A  26E1               	addwf	fsr1l,f,c
 35077   008E0C  50DE               	movf	postinc2,w,c
 35078   008E0E  5CE6               	subwf	postinc1,w,c
 35079   008E10  A0D8               	btfss	status,0,c
 35080   008E12  D006               	goto	l19479
 35081                           
 35082                           ; BSR set to: 0
 35083   008E14  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35084   008E16  6ED9               	movwf	fsr2l,c
 35085   008E18  6ADA               	clrf	fsr2h,c
 35086   008E1A  0E03               	movlw	3
 35087   008E1C  26D9               	addwf	fsr2l,f,c
 35088   008E1E  6ADF               	clrf	indf2,c
 35089   008E20                     l19479:
 35090                           
 35091                           ; BSR set to: 0
 35092   008E20  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 35093   008E22  0D09               	mullw	9
 35094   008E24  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 35095   008E28  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 35096   008E2C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 35097   008E2E  6ED9               	movwf	fsr2l,c
 35098   008E30  6ADA               	clrf	fsr2h,c
 35099   008E32  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 35100   008E36  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 35101   008E3A  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 35102   008E3C  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 35103   008E3E  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 35104   008E40  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 35105   008E42  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 35106   008E44  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 35107                           
 35108                           ; BSR set to: 0
 35109   008E46  0012               	return		;funcret
 35110   008E48                     __end_of_getNextWriteMessage:
 35111                           	callstack 0
 35112                           
 35113 ;; *************** function _readInput *****************
 35114 ;; Defined at:
 35115 ;;		line 174 in file "../inputs.c"
 35116 ;; Parameters:    Size  Location     Type
 35117 ;;  io              1    wreg     unsigned char 
 35118 ;; Auto vars:     Size  Location     Type
 35119 ;;  io              1   51[BANK0 ] unsigned char 
 35120 ;; Return value:  Size  Location     Type
 35121 ;;                  1    wreg      enum E12717
 35122 ;; Registers used:
 35123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35124 ;; Tracked objects:
 35125 ;;		On entry : 0/0
 35126 ;;		On exit  : 0/0
 35127 ;;		Unchanged: 0/0
 35128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35131 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35132 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35133 ;;Total ram usage:        3 bytes
 35134 ;; Hardware stack levels used: 1
 35135 ;; Hardware stack levels required when called: 13
 35136 ;; This function calls:
 35137 ;;		_getNV
 35138 ;; This function is called by:
 35139 ;;		_initInputScan
 35140 ;;		_inputScan
 35141 ;; This function uses a non-reentrant model
 35142 ;;
 35143                           
 35144                           	psect	text139
 35145   008156                     __ptext139:
 35146                           	callstack 0
 35147   008156                     _readInput:
 35148                           	callstack 15
 35149                           
 35150                           ; BSR set to: 0
 35151                           ;incstack = 0
 35152                           ;readInput@io stored from wreg
 35153   008156  0100               	movlb	0	; () banked
 35154   008158  6F93               	movwf	readInput@io& (0+255),b
 35155                           
 35156                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 35157   00815A  0100               	movlb	0	; () banked
 35158   00815C  5193               	movf	readInput@io& (0+255),w,b
 35159   00815E  0D07               	mullw	7
 35160   008160  50F3               	movf	243,w,c
 35161   008162  0F10               	addlw	16
 35162   008164  ECB0  F05F         	call	_getNV
 35163   008168  0100               	movlb	0	; () banked
 35164   00816A  518D               	movf	?_getNV& (0+255),w,b
 35165   00816C  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 35166   00816E  B4D8               	btfsc	status,2,c
 35167   008170  D05B               	goto	l21687
 35168   008172  D074               	goto	l21689
 35169   008174                     l21673:
 35170                           
 35171                           ; BSR set to: 0
 35172                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 35173   008174  5193               	movf	readInput@io& (0+255),w,b
 35174   008176  0D04               	mullw	4
 35175   008178  0E02               	movlw	2
 35176   00817A  26F3               	addwf	243,f,c
 35177   00817C  0E00               	movlw	0
 35178   00817E  22F4               	addwfc	244,f,c
 35179   008180  0E29               	movlw	low _configs
 35180   008182  24F3               	addwf	243,w,c
 35181   008184  6EF6               	movwf	tblptrl,c
 35182   008186  0EEE               	movlw	high _configs
 35183   008188  20F4               	addwfc	244,w,c
 35184   00818A  6EF7               	movwf	tblptrh,c
 35185   00818C                     	if	1	;There are 3 active tblptr bytes
 35186   00818C  6AF8               	clrf	tblptru,c
 35187   00818E  0E00               	movlw	low (__mediumconst shr (0+16))
 35188   008190  22F8               	addwfc	tblptru,f,c
 35189   008192                     	endif
 35190   008192  0008               	tblrd		*
 35191   008194  CFF5 F091          	movff	tablat,??_readInput
 35192   008198  0E01               	movlw	1
 35193   00819A  6F92               	movwf	(??_readInput+1)& (0+255),b
 35194   00819C  2B91               	incf	??_readInput& (0+255),f,b
 35195   00819E  D002               	goto	u22194
 35196   0081A0                     u22195:
 35197   0081A0  90D8               	bcf	status,0,c
 35198   0081A2  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35199   0081A4                     u22194:
 35200   0081A4  2F91               	decfsz	??_readInput& (0+255),f,b
 35201   0081A6  D7FC               	goto	u22195
 35202   0081A8  0100               	movlb	0	; () banked
 35203   0081AA  5192               	movf	(??_readInput+1)& (0+255),w,b
 35204   0081AC  1480               	andwf	128,w,c	;volatile
 35205   0081AE  0012               	return	
 35206   0081B0                     l21677:
 35207                           
 35208                           ; BSR set to: 0
 35209                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 35210   0081B0  5193               	movf	readInput@io& (0+255),w,b
 35211   0081B2  0D04               	mullw	4
 35212   0081B4  0E02               	movlw	2
 35213   0081B6  26F3               	addwf	243,f,c
 35214   0081B8  0E00               	movlw	0
 35215   0081BA  22F4               	addwfc	244,f,c
 35216   0081BC  0E29               	movlw	low _configs
 35217   0081BE  24F3               	addwf	243,w,c
 35218   0081C0  6EF6               	movwf	tblptrl,c
 35219   0081C2  0EEE               	movlw	high _configs
 35220   0081C4  20F4               	addwfc	244,w,c
 35221   0081C6  6EF7               	movwf	tblptrh,c
 35222   0081C8                     	if	1	;There are 3 active tblptr bytes
 35223   0081C8  6AF8               	clrf	tblptru,c
 35224   0081CA  0E00               	movlw	low (__mediumconst shr (0+16))
 35225   0081CC  22F8               	addwfc	tblptru,f,c
 35226   0081CE                     	endif
 35227   0081CE  0008               	tblrd		*
 35228   0081D0  CFF5 F091          	movff	tablat,??_readInput
 35229   0081D4  0E01               	movlw	1
 35230   0081D6  6F92               	movwf	(??_readInput+1)& (0+255),b
 35231   0081D8  2B91               	incf	??_readInput& (0+255),f,b
 35232   0081DA  D002               	goto	u22204
 35233   0081DC                     u22205:
 35234   0081DC  90D8               	bcf	status,0,c
 35235   0081DE  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35236   0081E0                     u22204:
 35237   0081E0  2F91               	decfsz	??_readInput& (0+255),f,b
 35238   0081E2  D7FC               	goto	u22205
 35239   0081E4  0100               	movlb	0	; () banked
 35240   0081E6  5192               	movf	(??_readInput+1)& (0+255),w,b
 35241   0081E8  1481               	andwf	129,w,c	;volatile
 35242   0081EA  0012               	return	
 35243   0081EC                     l21681:
 35244                           
 35245                           ; BSR set to: 0
 35246                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 35247   0081EC  5193               	movf	readInput@io& (0+255),w,b
 35248   0081EE  0D04               	mullw	4
 35249   0081F0  0E02               	movlw	2
 35250   0081F2  26F3               	addwf	243,f,c
 35251   0081F4  0E00               	movlw	0
 35252   0081F6  22F4               	addwfc	244,f,c
 35253   0081F8  0E29               	movlw	low _configs
 35254   0081FA  24F3               	addwf	243,w,c
 35255   0081FC  6EF6               	movwf	tblptrl,c
 35256   0081FE  0EEE               	movlw	high _configs
 35257   008200  20F4               	addwfc	244,w,c
 35258   008202  6EF7               	movwf	tblptrh,c
 35259   008204                     	if	1	;There are 3 active tblptr bytes
 35260   008204  6AF8               	clrf	tblptru,c
 35261   008206  0E00               	movlw	low (__mediumconst shr (0+16))
 35262   008208  22F8               	addwfc	tblptru,f,c
 35263   00820A                     	endif
 35264   00820A  0008               	tblrd		*
 35265   00820C  CFF5 F091          	movff	tablat,??_readInput
 35266   008210  0E01               	movlw	1
 35267   008212  6F92               	movwf	(??_readInput+1)& (0+255),b
 35268   008214  2B91               	incf	??_readInput& (0+255),f,b
 35269   008216  D002               	goto	u22214
 35270   008218                     u22215:
 35271   008218  90D8               	bcf	status,0,c
 35272   00821A  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 35273   00821C                     u22214:
 35274   00821C  2F91               	decfsz	??_readInput& (0+255),f,b
 35275   00821E  D7FC               	goto	u22215
 35276   008220  0100               	movlb	0	; () banked
 35277   008222  5192               	movf	(??_readInput+1)& (0+255),w,b
 35278   008224  1482               	andwf	130,w,c	;volatile
 35279   008226  0012               	return	
 35280   008228                     l21687:
 35281                           
 35282                           ; BSR set to: 0
 35283   008228  5193               	movf	readInput@io& (0+255),w,b
 35284   00822A  0D04               	mullw	4
 35285   00822C  0E01               	movlw	1
 35286   00822E  26F3               	addwf	243,f,c
 35287   008230  0E00               	movlw	0
 35288   008232  22F4               	addwfc	244,f,c
 35289   008234  0E29               	movlw	low _configs
 35290   008236  24F3               	addwf	243,w,c
 35291   008238  6EF6               	movwf	tblptrl,c
 35292   00823A  0EEE               	movlw	high _configs
 35293   00823C  20F4               	addwfc	244,w,c
 35294   00823E  6EF7               	movwf	tblptrh,c
 35295   008240                     	if	1	;There are 3 active tblptr bytes
 35296   008240  6AF8               	clrf	tblptru,c
 35297   008242  0E00               	movlw	low (__mediumconst shr (0+16))
 35298   008244  22F8               	addwfc	tblptru,f,c
 35299   008246                     	endif
 35300   008246  0008               	tblrd		*
 35301   008248  50F5               	movf	tablat,w,c
 35302                           
 35303                           ; Switch size 1, requested type "simple"
 35304                           ; Number of cases is 3, Range of values is 65 to 67
 35305                           ; switch strategies available:
 35306                           ; Name         Instructions Cycles
 35307                           ; simple_byte           10     6 (average)
 35308                           ;	Chosen strategy is simple_byte
 35309   00824A  0A41               	xorlw	65	; case 65
 35310   00824C  B4D8               	btfsc	status,2,c
 35311   00824E  D792               	goto	l21673
 35312   008250  0A03               	xorlw	3	; case 66
 35313   008252  B4D8               	btfsc	status,2,c
 35314   008254  D7AD               	goto	l21677
 35315   008256  0A01               	xorlw	1	; case 67
 35316   008258  B4D8               	btfsc	status,2,c
 35317   00825A  D7C8               	goto	l21681
 35318   00825C                     l21689:
 35319                           
 35320                           ; BSR set to: 0
 35321                           ;../inputs.c: 191:     return FALSE;
 35322   00825C  0E00               	movlw	0
 35323                           
 35324                           ; BSR set to: 0
 35325   00825E  0012               	return		;funcret
 35326   008260                     __end_of_readInput:
 35327                           	callstack 0
 35328                           
 35329 ;; *************** function _initRomOps *****************
 35330 ;; Defined at:
 35331 ;;		line 156 in file "../../VLCBlib_PIC/nvm.c"
 35332 ;; Parameters:    Size  Location     Type
 35333 ;;		None
 35334 ;; Auto vars:     Size  Location     Type
 35335 ;;		None
 35336 ;; Return value:  Size  Location     Type
 35337 ;;                  1    wreg      void 
 35338 ;; Registers used:
 35339 ;;		wreg, status,2
 35340 ;; Tracked objects:
 35341 ;;		On entry : 0/0
 35342 ;;		On exit  : 0/0
 35343 ;;		Unchanged: 0/0
 35344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35349 ;;Total ram usage:        0 bytes
 35350 ;; Hardware stack levels used: 1
 35351 ;; Hardware stack levels required when called: 12
 35352 ;; This function calls:
 35353 ;;		Nothing
 35354 ;; This function is called by:
 35355 ;;		_main
 35356 ;; This function uses a non-reentrant model
 35357 ;;
 35358                           
 35359                           	psect	text140
 35360   00C806                     __ptext140:
 35361                           	callstack 0
 35362   00C806                     _initRomOps:
 35363                           	callstack 18
 35364                           
 35365                           ;../../VLCBlib_PIC/nvm.c: 157:     flashFlags.asByte = 0;
 35366                           
 35367                           ; BSR set to: 0
 35368                           ;incstack = 0
 35369   00C806  0E00               	movlw	0
 35370   00C808  0100               	movlb	0	; () banked
 35371   00C80A  6FBA               	movwf	_flashFlags& (0+255),b
 35372                           
 35373                           ;../../VLCBlib_PIC/nvm.c: 158:     flashBlock = 0x0800;
 35374   00C80C  0E08               	movlw	8
 35375   00C80E  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 35376   00C810  0E00               	movlw	0
 35377   00C812  6FD1               	movwf	_flashBlock& (0+255),b
 35378                           
 35379                           ;../../VLCBlib_PIC/nvm.c: 160:     TBLPTRU = 0;
 35380   00C814  0E00               	movlw	0
 35381   00C816  6EF8               	movwf	248,c	;volatile
 35382                           
 35383                           ; BSR set to: 0
 35384   00C818  0012               	return		;funcret
 35385   00C81A                     __end_of_initRomOps:
 35386                           	callstack 0
 35387                           
 35388 ;; *************** function _checkPowerOnPb *****************
 35389 ;; Defined at:
 35390 ;;		line 954 in file "../../VLCBlib_PIC/vlcb.c"
 35391 ;; Parameters:    Size  Location     Type
 35392 ;;		None
 35393 ;; Auto vars:     Size  Location     Type
 35394 ;;  i               1   57[BANK1 ] unsigned char 
 35395 ;; Return value:  Size  Location     Type
 35396 ;;                  1    wreg      void 
 35397 ;; Registers used:
 35398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35399 ;; Tracked objects:
 35400 ;;		On entry : 0/0
 35401 ;;		On exit  : 0/0
 35402 ;;		Unchanged: 0/0
 35403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35405 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35407 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35408 ;;Total ram usage:        1 bytes
 35409 ;; Hardware stack levels used: 1
 35410 ;; Hardware stack levels required when called: 27
 35411 ;; This function calls:
 35412 ;;		_APP_testMode
 35413 ;;		_factoryReset
 35414 ;;		_pbDownTimer
 35415 ;;		_pbUpTimer
 35416 ;;		_showStatus
 35417 ;; This function is called by:
 35418 ;;		_main
 35419 ;; This function uses a non-reentrant model
 35420 ;;
 35421                           
 35422                           	psect	text141
 35423   00B6DC                     __ptext141:
 35424                           	callstack 0
 35425   00B6DC                     _checkPowerOnPb:
 35426                           	callstack 3
 35427                           
 35428                           ;../../VLCBlib_PIC/vlcb.c: 955:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 958:     if ((!
      +                          (PORTAbits.RA2))) {
 35429                           
 35430                           ; BSR set to: 0
 35431                           ;incstack = 0
 35432   00B6DC  B480               	btfsc	128,2,c	;volatile
 35433   00B6DE  0012               	return	
 35434                           
 35435                           ;../../VLCBlib_PIC/vlcb.c: 960:         i = pbDownTimer(30);
 35436   00B6E0  0E1E               	movlw	30
 35437   00B6E2  EC4E  F04D         	call	_pbDownTimer
 35438   00B6E6  0101               	movlb	1	; () banked
 35439   00B6E8  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 35440                           
 35441                           ; BSR set to: 1
 35442                           ;../../VLCBlib_PIC/vlcb.c: 961:         if (i == 0) {
 35443   00B6EA  51F7               	movf	checkPowerOnPb@i& (0+255),w,b
 35444   00B6EC  B4D8               	btfsc	status,2,c
 35445   00B6EE  0012               	return	
 35446                           
 35447                           ; BSR set to: 1
 35448                           
 35449                           ; BSR set to: 1
 35450                           ;../../VLCBlib_PIC/vlcb.c: 963:             return;
 35451   00B6F0  0E01               	movlw	1
 35452   00B6F2  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35453   00B6F4  D006               	goto	l25285
 35454                           
 35455                           ; BSR set to: 1
 35456   00B6F6  0E06               	movlw	6
 35457   00B6F8  61F7               	cpfslt	checkPowerOnPb@i& (0+255),b
 35458   00B6FA  D003               	goto	l25285
 35459                           
 35460                           ; BSR set to: 1
 35461                           ;../../VLCBlib_PIC/vlcb.c: 965:             APP_testMode();
 35462   00B6FC  EC76  F064         	call	_APP_testMode	;wreg free
 35463                           
 35464                           ;../../VLCBlib_PIC/vlcb.c: 966:         } else if (i >= 10) {
 35465   00B700  0012               	return	
 35466   00B702                     l25285:
 35467                           
 35468                           ; BSR set to: 1
 35469   00B702  0E09               	movlw	9
 35470   00B704  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35471   00B706  0012               	return	
 35472                           
 35473                           ; BSR set to: 1
 35474                           ;../../VLCBlib_PIC/vlcb.c: 967:             showStatus(STATUS_RESET_WARNING);
 35475   00B708  0E04               	movlw	4
 35476   00B70A  EC91  F044         	call	_showStatus
 35477                           
 35478                           ;../../VLCBlib_PIC/vlcb.c: 969:             i = pbUpTimer(5);
 35479   00B70E  0E05               	movlw	5
 35480   00B710  ECF6  F04C         	call	_pbUpTimer
 35481   00B714  0101               	movlb	1	; () banked
 35482   00B716  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 35483                           
 35484                           ; BSR set to: 1
 35485                           ;../../VLCBlib_PIC/vlcb.c: 970:             if (i == 0) {
 35486   00B718  51F7               	movf	checkPowerOnPb@i& (0+255),w,b
 35487   00B71A  B4D8               	btfsc	status,2,c
 35488   00B71C  0012               	return	
 35489                           
 35490                           ; BSR set to: 1
 35491                           ;../../VLCBlib_PIC/vlcb.c: 974:             i = pbDownTimer(5);
 35492   00B71E  0E05               	movlw	5
 35493   00B720  EC4E  F04D         	call	_pbDownTimer
 35494   00B724  0101               	movlb	1	; () banked
 35495   00B726  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 35496                           
 35497                           ; BSR set to: 1
 35498                           ;../../VLCBlib_PIC/vlcb.c: 975:             if ((i>=2) && (i < 4)) {
 35499   00B728  0E01               	movlw	1
 35500   00B72A  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 35501   00B72C  0012               	return	
 35502                           
 35503                           ; BSR set to: 1
 35504   00B72E  0E04               	movlw	4
 35505   00B730  61F7               	cpfslt	checkPowerOnPb@i& (0+255),b
 35506   00B732  0012               	return	
 35507                           
 35508                           ; BSR set to: 1
 35509                           ;../../VLCBlib_PIC/vlcb.c: 976:                 factoryReset();
 35510   00B734  ECAC  F043         	call	_factoryReset	;wreg free
 35511   00B738  0012               	return		;funcret
 35512   00B73A                     __end_of_checkPowerOnPb:
 35513                           	callstack 0
 35514                           
 35515 ;; *************** function _showStatus *****************
 35516 ;; Defined at:
 35517 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 35518 ;; Parameters:    Size  Location     Type
 35519 ;;  s               1    wreg     enum E12897
 35520 ;; Auto vars:     Size  Location     Type
 35521 ;;  s               1   47[BANK0 ] enum E12897
 35522 ;; Return value:  Size  Location     Type
 35523 ;;                  1    wreg      void 
 35524 ;; Registers used:
 35525 ;;		wreg, status,2, status,0
 35526 ;; Tracked objects:
 35527 ;;		On entry : 0/0
 35528 ;;		On exit  : 0/0
 35529 ;;		Unchanged: 0/0
 35530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35532 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35533 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35534 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35535 ;;Total ram usage:        3 bytes
 35536 ;; Hardware stack levels used: 1
 35537 ;; Hardware stack levels required when called: 12
 35538 ;; This function calls:
 35539 ;;		Nothing
 35540 ;; This function is called by:
 35541 ;;		_setLEDsByMode
 35542 ;;		_checkPowerOnPb
 35543 ;;		_poll
 35544 ;; This function uses a non-reentrant model
 35545 ;;
 35546                           
 35547                           	psect	text142
 35548   008922                     __ptext142:
 35549                           	callstack 0
 35550   008922                     _showStatus:
 35551                           	callstack 15
 35552                           
 35553                           ;incstack = 0
 35554                           ;showStatus@s stored from wreg
 35555   008922  0100               	movlb	0	; () banked
 35556   008924  6F8F               	movwf	showStatus@s& (0+255),b
 35557                           
 35558                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 35559   008926  D03E               	goto	l21329
 35560   008928                     l21299:
 35561                           
 35562                           ; BSR set to: 0
 35563                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 35564   008928  0E00               	movlw	0
 35565   00892A  6FB0               	movwf	_ledState& (0+255),b
 35566                           
 35567                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 35568   00892C  0E00               	movlw	0
 35569   00892E  6FB1               	movwf	(_ledState+1)& (0+255),b
 35570                           
 35571                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 35572   008930  0012               	return	
 35573   008932                     l21301:
 35574                           
 35575                           ; BSR set to: 0
 35576                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 35577   008932  0E01               	movlw	1
 35578   008934  6FB0               	movwf	_ledState& (0+255),b
 35579                           
 35580                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 35581   008936  0E00               	movlw	0
 35582   008938  6FB1               	movwf	(_ledState+1)& (0+255),b
 35583                           
 35584                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 35585   00893A  0012               	return	
 35586   00893C                     l21303:
 35587                           
 35588                           ; BSR set to: 0
 35589                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 35590   00893C  0E00               	movlw	0
 35591   00893E  6FB0               	movwf	_ledState& (0+255),b
 35592                           
 35593                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 35594   008940  0E03               	movlw	3
 35595   008942  6FB1               	movwf	(_ledState+1)& (0+255),b
 35596                           
 35597                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 35598   008944  0012               	return	
 35599   008946                     l1822:
 35600                           
 35601                           ; BSR set to: 0
 35602                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 35603                           
 35604                           ; BSR set to: 0
 35605   008946  0E00               	movlw	0
 35606   008948  6FB0               	movwf	_ledState& (0+255),b
 35607                           
 35608                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 35609   00894A  0E01               	movlw	1
 35610   00894C  6FB1               	movwf	(_ledState+1)& (0+255),b
 35611                           
 35612                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 35613   00894E  0012               	return	
 35614   008950                     l21307:
 35615                           
 35616                           ; BSR set to: 0
 35617                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 35618   008950  0E00               	movlw	0
 35619   008952  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 35620                           
 35621                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 35622   008954  0E19               	movlw	25
 35623   008956  6FAE               	movwf	_flashCounter& (0+255),b
 35624                           
 35625                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 35626   008958  0E02               	movlw	2
 35627   00895A  6FB0               	movwf	_ledState& (0+255),b
 35628                           
 35629                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 35630   00895C  0E02               	movlw	2
 35631   00895E  6FB1               	movwf	(_ledState+1)& (0+255),b
 35632                           
 35633                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 35634   008960  0012               	return	
 35635   008962                     l21309:
 35636                           
 35637                           ; BSR set to: 0
 35638                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35639   008962  29C4               	incf	_mode_state& (0+255),w,b
 35640   008964  A4D8               	btfss	status,2,c
 35641   008966  D003               	goto	l21313
 35642                           
 35643                           ; BSR set to: 0
 35644                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 35645   008968  0E06               	movlw	6
 35646   00896A  6FB1               	movwf	(_ledState+1)& (0+255),b
 35647                           
 35648                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35649   00896C  0012               	return	
 35650   00896E                     l21313:
 35651                           
 35652                           ; BSR set to: 0
 35653   00896E  05C4               	decf	_mode_state& (0+255),w,b
 35654   008970  A4D8               	btfss	status,2,c
 35655   008972  0012               	return	
 35656                           
 35657                           ; BSR set to: 0
 35658                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 35659   008974  0E06               	movlw	6
 35660   008976  6FB0               	movwf	_ledState& (0+255),b
 35661   008978  0012               	return	
 35662   00897A                     l21317:
 35663                           
 35664                           ; BSR set to: 0
 35665                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 35666   00897A  29C4               	incf	_mode_state& (0+255),w,b
 35667   00897C  A4D8               	btfss	status,2,c
 35668   00897E  D003               	goto	l21321
 35669                           
 35670                           ; BSR set to: 0
 35671                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 35672   008980  0E08               	movlw	8
 35673   008982  6FB1               	movwf	(_ledState+1)& (0+255),b
 35674                           
 35675                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 35676   008984  0012               	return	
 35677   008986                     l21321:
 35678                           
 35679                           ; BSR set to: 0
 35680   008986  05C4               	decf	_mode_state& (0+255),w,b
 35681   008988  A4D8               	btfss	status,2,c
 35682   00898A  0012               	return	
 35683                           
 35684                           ; BSR set to: 0
 35685                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 35686   00898C  0E08               	movlw	8
 35687   00898E  6FB0               	movwf	_ledState& (0+255),b
 35688   008990  0012               	return	
 35689   008992                     l21325:
 35690                           
 35691                           ; BSR set to: 0
 35692                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 35693   008992  0E00               	movlw	0
 35694   008994  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 35695                           
 35696                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 35697   008996  0E00               	movlw	0
 35698   008998  6FAE               	movwf	_flashCounter& (0+255),b
 35699                           
 35700                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 35701   00899A  0E02               	movlw	2
 35702   00899C  6FB0               	movwf	_ledState& (0+255),b
 35703                           
 35704                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 35705   00899E  0E02               	movlw	2
 35706   0089A0  6FB1               	movwf	(_ledState+1)& (0+255),b
 35707                           
 35708                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 35709   0089A2  0012               	return	
 35710   0089A4                     l21329:
 35711   0089A4  0100               	movlb	0	; () banked
 35712   0089A6  518F               	movf	showStatus@s& (0+255),w,b
 35713   0089A8  6F8D               	movwf	??_showStatus& (0+255),b
 35714   0089AA  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 35715                           
 35716                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35717                           ; Switch size 1, requested type "simple"
 35718                           ; Number of cases is 1, Range of values is 0 to 0
 35719                           ; switch strategies available:
 35720                           ; Name         Instructions Cycles
 35721                           ; simple_byte            4     3 (average)
 35722                           ;	Chosen strategy is simple_byte
 35723   0089AC  518E               	movf	(??_showStatus+1)& (0+255),w,b
 35724   0089AE  0A00               	xorlw	0	; case 0
 35725   0089B0  A4D8               	btfss	status,2,c
 35726   0089B2  0012               	return	
 35727                           
 35728                           ; BSR set to: 0
 35729                           ; Switch size 1, requested type "simple"
 35730                           ; Number of cases is 13, Range of values is 0 to 12
 35731                           ; switch strategies available:
 35732                           ; Name         Instructions Cycles
 35733                           ; simple_byte           40    21 (average)
 35734                           ;	Chosen strategy is simple_byte
 35735   0089B4  518D               	movf	??_showStatus& (0+255),w,b
 35736   0089B6  0A00               	xorlw	0	; case 0
 35737   0089B8  B4D8               	btfsc	status,2,c
 35738   0089BA  D7B6               	goto	l21299
 35739   0089BC  0A01               	xorlw	1	; case 1
 35740   0089BE  B4D8               	btfsc	status,2,c
 35741   0089C0  D7B8               	goto	l21301
 35742   0089C2  0A03               	xorlw	3	; case 2
 35743   0089C4  B4D8               	btfsc	status,2,c
 35744   0089C6  D7BA               	goto	l21303
 35745   0089C8  0A01               	xorlw	1	; case 3
 35746   0089CA  B4D8               	btfsc	status,2,c
 35747   0089CC  D7BC               	goto	l1822
 35748   0089CE  0A07               	xorlw	7	; case 4
 35749   0089D0  B4D8               	btfsc	status,2,c
 35750   0089D2  D7BE               	goto	l21307
 35751   0089D4  0A01               	xorlw	1	; case 5
 35752   0089D6  B4D8               	btfsc	status,2,c
 35753   0089D8  D7B6               	goto	l1822
 35754   0089DA  0A03               	xorlw	3	; case 6
 35755   0089DC  B4D8               	btfsc	status,2,c
 35756   0089DE  D7B3               	goto	l1822
 35757   0089E0  0A01               	xorlw	1	; case 7
 35758   0089E2  B4D8               	btfsc	status,2,c
 35759   0089E4  D7BE               	goto	l21309
 35760   0089E6  0A0F               	xorlw	15	; case 8
 35761   0089E8  B4D8               	btfsc	status,2,c
 35762   0089EA  D7C7               	goto	l21317
 35763   0089EC  0A01               	xorlw	1	; case 9
 35764   0089EE  B4D8               	btfsc	status,2,c
 35765   0089F0  D7AA               	goto	l1822
 35766   0089F2  0A03               	xorlw	3	; case 10
 35767   0089F4  B4D8               	btfsc	status,2,c
 35768   0089F6  D7A7               	goto	l1822
 35769   0089F8  0A01               	xorlw	1	; case 11
 35770   0089FA  B4D8               	btfsc	status,2,c
 35771   0089FC  D7CA               	goto	l21325
 35772   0089FE  0A07               	xorlw	7	; case 12
 35773   008A00  A4D8               	btfss	status,2,c
 35774   008A02  0012               	return	
 35775   008A04  D7C6               	goto	l21325
 35776   008A06                     __end_of_showStatus:
 35777                           	callstack 0
 35778                           
 35779 ;; *************** function _pbUpTimer *****************
 35780 ;; Defined at:
 35781 ;;		line 931 in file "../../VLCBlib_PIC/vlcb.c"
 35782 ;; Parameters:    Size  Location     Type
 35783 ;;  timeout         1    wreg     unsigned char 
 35784 ;; Auto vars:     Size  Location     Type
 35785 ;;  timeout         1   72[BANK0 ] unsigned char 
 35786 ;; Return value:  Size  Location     Type
 35787 ;;                  1    wreg      unsigned char 
 35788 ;; Registers used:
 35789 ;;		wreg, status,2, status,0, cstack
 35790 ;; Tracked objects:
 35791 ;;		On entry : 0/0
 35792 ;;		On exit  : 0/0
 35793 ;;		Unchanged: 0/0
 35794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35796 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35797 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35798 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35799 ;;Total ram usage:        5 bytes
 35800 ;; Hardware stack levels used: 1
 35801 ;; Hardware stack levels required when called: 14
 35802 ;; This function calls:
 35803 ;;		___lldiv
 35804 ;;		___lmul
 35805 ;;		_leds_poll
 35806 ;;		_tickGet
 35807 ;; This function is called by:
 35808 ;;		_checkPowerOnPb
 35809 ;; This function uses a non-reentrant model
 35810 ;;
 35811                           
 35812                           	psect	text143
 35813   0099EC                     __ptext143:
 35814                           	callstack 0
 35815   0099EC                     _pbUpTimer:
 35816                           	callstack 15
 35817                           
 35818                           ; BSR set to: 0
 35819                           ;incstack = 0
 35820                           ;pbUpTimer@timeout stored from wreg
 35821   0099EC  0100               	movlb	0	; () banked
 35822   0099EE  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 35823                           
 35824                           ;../../VLCBlib_PIC/vlcb.c: 933:     pbTimer.val = tickGet();
 35825   0099F0  EC23  F05C         	call	_tickGet	;wreg free
 35826   0099F4  C08D  F0AA         	movff	?_tickGet,_pbTimer
 35827   0099F8  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 35828   0099FC  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 35829   009A00  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 35830                           
 35831                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35832   009A04  D02D               	goto	l2013
 35833   009A06                     l24551:
 35834                           
 35835                           ;../../VLCBlib_PIC/vlcb.c: 935:         leds_poll();
 35836   009A06  EC8B  F030         	call	_leds_poll	;wreg free
 35837                           
 35838                           ;../../VLCBlib_PIC/vlcb.c: 936:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35839   009A0A  EC23  F05C         	call	_tickGet	;wreg free
 35840   009A0E  0100               	movlb	0	; () banked
 35841   009A10  51AA               	movf	_pbTimer& (0+255),w,b
 35842   009A12  5D8D               	subwf	?_tickGet& (0+255),w,b
 35843   009A14  6FA4               	movwf	??_pbUpTimer& (0+255),b
 35844   009A16  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 35845   009A18  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35846   009A1A  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 35847   009A1C  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 35848   009A1E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35849   009A20  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 35850   009A22  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 35851   009A24  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35852   009A26  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 35853   009A28  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 35854   009A2A  6F91               	movwf	___lmul@multiplier& (0+255),b
 35855   009A2C  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35856   009A2E  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35857   009A30  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35858   009A32  0E24               	movlw	36
 35859   009A34  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35860   009A36  0EF4               	movlw	244
 35861   009A38  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35862   009A3A  0E00               	movlw	0
 35863   009A3C  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35864   009A3E  0E00               	movlw	0
 35865   009A40  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35866   009A42  EC4F  F05C         	call	___lmul	;wreg free
 35867   009A46  0100               	movlb	0	; () banked
 35868   009A48  51A4               	movf	??_pbUpTimer& (0+255),w,b
 35869   009A4A  5D91               	subwf	?___lmul& (0+255),w,b
 35870   009A4C  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 35871   009A4E  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35872   009A50  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 35873   009A52  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35874   009A54  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 35875   009A56  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35876   009A58  B0D8               	btfsc	status,0,c
 35877   009A5A  D002               	goto	l2013
 35878                           
 35879                           ; BSR set to: 0
 35880                           ;../../VLCBlib_PIC/vlcb.c: 937:             return 0;
 35881   009A5C  0E00               	movlw	0
 35882   009A5E  0012               	return	
 35883   009A60                     l2013:
 35884                           
 35885                           ;../../VLCBlib_PIC/vlcb.c: 934:     while (! ((!(PORTAbits.RA2)))) {
 35886   009A60  B480               	btfsc	128,2,c	;volatile
 35887   009A62  D7D1               	goto	l24551
 35888                           
 35889                           ;../../VLCBlib_PIC/vlcb.c: 941:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35890   009A64  EC23  F05C         	call	_tickGet	;wreg free
 35891   009A68  0100               	movlb	0	; () banked
 35892   009A6A  51AA               	movf	_pbTimer& (0+255),w,b
 35893   009A6C  5D8D               	subwf	?_tickGet& (0+255),w,b
 35894   009A6E  6F97               	movwf	___lldiv@dividend& (0+255),b
 35895   009A70  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 35896   009A72  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35897   009A74  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35898   009A76  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 35899   009A78  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35900   009A7A  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35901   009A7C  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 35902   009A7E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35903   009A80  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35904   009A82  0E24               	movlw	36
 35905   009A84  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35906   009A86  0EF4               	movlw	244
 35907   009A88  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35908   009A8A  0E00               	movlw	0
 35909   009A8C  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35910   009A8E  0E00               	movlw	0
 35911   009A90  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35912   009A92  ECDF  F054         	call	___lldiv	;wreg free
 35913   009A96  0100               	movlb	0	; () banked
 35914   009A98  5197               	movf	?___lldiv& (0+255),w,b
 35915                           
 35916                           ; BSR set to: 0
 35917   009A9A  0012               	return		;funcret
 35918   009A9C                     __end_of_pbUpTimer:
 35919                           	callstack 0
 35920                           
 35921 ;; *************** function _pbDownTimer *****************
 35922 ;; Defined at:
 35923 ;;		line 912 in file "../../VLCBlib_PIC/vlcb.c"
 35924 ;; Parameters:    Size  Location     Type
 35925 ;;  timeout         1    wreg     unsigned char 
 35926 ;; Auto vars:     Size  Location     Type
 35927 ;;  timeout         1   72[BANK0 ] unsigned char 
 35928 ;; Return value:  Size  Location     Type
 35929 ;;                  1    wreg      unsigned char 
 35930 ;; Registers used:
 35931 ;;		wreg, status,2, status,0, cstack
 35932 ;; Tracked objects:
 35933 ;;		On entry : 0/0
 35934 ;;		On exit  : 0/0
 35935 ;;		Unchanged: 0/0
 35936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35940 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35941 ;;Total ram usage:        5 bytes
 35942 ;; Hardware stack levels used: 1
 35943 ;; Hardware stack levels required when called: 14
 35944 ;; This function calls:
 35945 ;;		___lldiv
 35946 ;;		___lmul
 35947 ;;		_leds_poll
 35948 ;;		_tickGet
 35949 ;; This function is called by:
 35950 ;;		_checkPowerOnPb
 35951 ;; This function uses a non-reentrant model
 35952 ;;
 35953                           
 35954                           	psect	text144
 35955   009A9C                     __ptext144:
 35956                           	callstack 0
 35957   009A9C                     _pbDownTimer:
 35958                           	callstack 15
 35959                           
 35960                           ; BSR set to: 0
 35961                           ;incstack = 0
 35962                           ;pbDownTimer@timeout stored from wreg
 35963   009A9C  0100               	movlb	0	; () banked
 35964   009A9E  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 35965                           
 35966                           ;../../VLCBlib_PIC/vlcb.c: 914:     pbTimer.val = tickGet();
 35967   009AA0  EC23  F05C         	call	_tickGet	;wreg free
 35968   009AA4  C08D  F0AA         	movff	?_tickGet,_pbTimer
 35969   009AA8  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 35970   009AAC  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 35971   009AB0  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 35972                           
 35973                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 35974   009AB4  D02D               	goto	l2006
 35975   009AB6                     l24539:
 35976                           
 35977                           ;../../VLCBlib_PIC/vlcb.c: 916:         leds_poll();
 35978   009AB6  EC8B  F030         	call	_leds_poll	;wreg free
 35979                           
 35980                           ;../../VLCBlib_PIC/vlcb.c: 917:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35981   009ABA  EC23  F05C         	call	_tickGet	;wreg free
 35982   009ABE  0100               	movlb	0	; () banked
 35983   009AC0  51AA               	movf	_pbTimer& (0+255),w,b
 35984   009AC2  5D8D               	subwf	?_tickGet& (0+255),w,b
 35985   009AC4  6FA4               	movwf	??_pbDownTimer& (0+255),b
 35986   009AC6  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 35987   009AC8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35988   009ACA  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 35989   009ACC  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 35990   009ACE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35991   009AD0  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 35992   009AD2  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 35993   009AD4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35994   009AD6  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 35995   009AD8  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 35996   009ADA  6F91               	movwf	___lmul@multiplier& (0+255),b
 35997   009ADC  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35998   009ADE  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35999   009AE0  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 36000   009AE2  0E24               	movlw	36
 36001   009AE4  6F95               	movwf	___lmul@multiplicand& (0+255),b
 36002   009AE6  0EF4               	movlw	244
 36003   009AE8  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 36004   009AEA  0E00               	movlw	0
 36005   009AEC  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 36006   009AEE  0E00               	movlw	0
 36007   009AF0  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 36008   009AF2  EC4F  F05C         	call	___lmul	;wreg free
 36009   009AF6  0100               	movlb	0	; () banked
 36010   009AF8  51A4               	movf	??_pbDownTimer& (0+255),w,b
 36011   009AFA  5D91               	subwf	?___lmul& (0+255),w,b
 36012   009AFC  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 36013   009AFE  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 36014   009B00  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 36015   009B02  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 36016   009B04  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 36017   009B06  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 36018   009B08  B0D8               	btfsc	status,0,c
 36019   009B0A  D002               	goto	l2006
 36020                           
 36021                           ; BSR set to: 0
 36022                           ;../../VLCBlib_PIC/vlcb.c: 918:             return 0;
 36023   009B0C  0E00               	movlw	0
 36024   009B0E  0012               	return	
 36025   009B10                     l2006:
 36026                           
 36027                           ;../../VLCBlib_PIC/vlcb.c: 915:     while ((!(PORTAbits.RA2))) {
 36028   009B10  A480               	btfss	128,2,c	;volatile
 36029   009B12  D7D1               	goto	l24539
 36030                           
 36031                           ;../../VLCBlib_PIC/vlcb.c: 922:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 36032   009B14  EC23  F05C         	call	_tickGet	;wreg free
 36033   009B18  0100               	movlb	0	; () banked
 36034   009B1A  51AA               	movf	_pbTimer& (0+255),w,b
 36035   009B1C  5D8D               	subwf	?_tickGet& (0+255),w,b
 36036   009B1E  6F97               	movwf	___lldiv@dividend& (0+255),b
 36037   009B20  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 36038   009B22  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 36039   009B24  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 36040   009B26  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 36041   009B28  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 36042   009B2A  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 36043   009B2C  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 36044   009B2E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 36045   009B30  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 36046   009B32  0E24               	movlw	36
 36047   009B34  6F9B               	movwf	___lldiv@divisor& (0+255),b
 36048   009B36  0EF4               	movlw	244
 36049   009B38  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 36050   009B3A  0E00               	movlw	0
 36051   009B3C  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 36052   009B3E  0E00               	movlw	0
 36053   009B40  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 36054   009B42  ECDF  F054         	call	___lldiv	;wreg free
 36055   009B46  0100               	movlb	0	; () banked
 36056   009B48  5197               	movf	?___lldiv& (0+255),w,b
 36057                           
 36058                           ; BSR set to: 0
 36059   009B4A  0012               	return		;funcret
 36060   009B4C                     __end_of_pbDownTimer:
 36061                           	callstack 0
 36062                           
 36063 ;; *************** function _leds_poll *****************
 36064 ;; Defined at:
 36065 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 36066 ;; Parameters:    Size  Location     Type
 36067 ;;		None
 36068 ;; Auto vars:     Size  Location     Type
 36069 ;;		None
 36070 ;; Return value:  Size  Location     Type
 36071 ;;                  1    wreg      void 
 36072 ;; Registers used:
 36073 ;;		wreg, status,2, status,0, cstack
 36074 ;; Tracked objects:
 36075 ;;		On entry : 0/0
 36076 ;;		On exit  : 0/0
 36077 ;;		Unchanged: 0/0
 36078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36081 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36082 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36083 ;;Total ram usage:        4 bytes
 36084 ;; Hardware stack levels used: 1
 36085 ;; Hardware stack levels required when called: 13
 36086 ;; This function calls:
 36087 ;;		___awdiv
 36088 ;;		_tickGet
 36089 ;; This function is called by:
 36090 ;;		_pbDownTimer
 36091 ;;		_pbUpTimer
 36092 ;;		_poll
 36093 ;; This function uses a non-reentrant model
 36094 ;;
 36095                           
 36096                           	psect	text145
 36097   006116                     __ptext145:
 36098                           	callstack 0
 36099   006116                     _leds_poll:
 36100                           	callstack 16
 36101                           
 36102                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 36103                           
 36104                           ; BSR set to: 0
 36105                           ;incstack = 0
 36106   006116  EC23  F05C         	call	_tickGet	;wreg free
 36107   00611A  0101               	movlb	1	; () banked
 36108   00611C  5148               	movf	_ledTimer& (0+255),w,b
 36109   00611E  0100               	movlb	0	; () banked
 36110   006120  5D8D               	subwf	?_tickGet& (0+255),w,b
 36111   006122  6F9F               	movwf	??_leds_poll& (0+255),b
 36112   006124  0101               	movlb	1	; () banked
 36113   006126  5149               	movf	(_ledTimer+1)& (0+255),w,b
 36114   006128  0100               	movlb	0	; () banked
 36115   00612A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 36116   00612C  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 36117   00612E  0101               	movlb	1	; () banked
 36118   006130  514A               	movf	(_ledTimer+2)& (0+255),w,b
 36119   006132  0100               	movlb	0	; () banked
 36120   006134  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 36121   006136  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 36122   006138  0101               	movlb	1	; () banked
 36123   00613A  514B               	movf	(_ledTimer+3)& (0+255),w,b
 36124   00613C  0100               	movlb	0	; () banked
 36125   00613E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 36126   006140  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 36127   006142  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 36128   006144  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 36129   006146  E106               	bnz	u23460
 36130   006148  0E72               	movlw	114
 36131   00614A  5D9F               	subwf	??_leds_poll& (0+255),w,b
 36132   00614C  0E02               	movlw	2
 36133   00614E  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 36134   006150  A0D8               	btfss	status,0,c
 36135   006152  D06B               	goto	l22531
 36136   006154                     u23460:
 36137                           
 36138                           ; BSR set to: 0
 36139                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 36140   006154  2BAE               	incf	_flashCounter& (0+255),f,b
 36141                           
 36142                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 36143   006156  2BAF               	incf	(_flashCounter+1)& (0+255),f,b
 36144                           
 36145                           ; BSR set to: 0
 36146                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 36147   006158  EC23  F05C         	call	_tickGet	;wreg free
 36148   00615C  C08D  F148         	movff	?_tickGet,_ledTimer
 36149   006160  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
 36150   006164  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
 36151   006168  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
 36152   00616C  D05E               	goto	l22531
 36153   00616E                     l1772:
 36154                           
 36155                           ; BSR set to: 0
 36156                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 36157   00616E  8C8A               	bsf	138,6,c	;volatile
 36158   006170                     l22487:
 36159                           
 36160                           ; BSR set to: 0
 36161                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 36162   006170  0E00               	movlw	0
 36163   006172  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 36164                           
 36165                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 36166   006174  D0E0               	goto	l22577
 36167   006176                     l1774:
 36168                           
 36169                           ; BSR set to: 0
 36170                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 36171   006176  9C8A               	bcf	138,6,c	;volatile
 36172   006178  D7FB               	goto	l22487
 36173   00617A                     l22491:
 36174                           
 36175                           ; BSR set to: 0
 36176                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 36177   00617A  C0AF  F097         	movff	_flashCounter+1,___awdiv@dividend
 36178   00617E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36179   006180  0E00               	movlw	0
 36180   006182  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36181   006184  0E19               	movlw	25
 36182   006186  6F99               	movwf	___awdiv@divisor& (0+255),b
 36183   006188  EC59  F054         	call	___awdiv	;wreg free
 36184   00618C  0100               	movlb	0	; () banked
 36185   00618E  3B97               	swapf	?___awdiv& (0+255),f,b
 36186   006190  4797               	rlncf	?___awdiv& (0+255),f,b
 36187   006192  4797               	rlncf	?___awdiv& (0+255),f,b
 36188   006194  508A               	movf	138,w,c	;volatile
 36189   006196  1997               	xorwf	?___awdiv& (0+255),w,b
 36190   006198  0BBF               	andlw	-65
 36191   00619A  1997               	xorwf	?___awdiv& (0+255),w,b
 36192   00619C  6E8A               	movwf	138,c	;volatile
 36193                           
 36194                           ; BSR set to: 0
 36195                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 36196   00619E  0E31               	movlw	49
 36197   0061A0                     L17:
 36198   0061A0  65AF               	cpfsgt	(_flashCounter+1)& (0+255),b
 36199   0061A2  D0C9               	goto	l22577
 36200   0061A4  D7E5               	goto	l22487
 36201   0061A6                     l22497:
 36202                           
 36203                           ; BSR set to: 0
 36204                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 36205   0061A6  C0AF  F097         	movff	_flashCounter+1,___awdiv@dividend
 36206   0061AA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36207   0061AC  0E00               	movlw	0
 36208   0061AE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36209   0061B0  0E32               	movlw	50
 36210   0061B2  6F99               	movwf	___awdiv@divisor& (0+255),b
 36211   0061B4  EC59  F054         	call	___awdiv	;wreg free
 36212   0061B8  0100               	movlb	0	; () banked
 36213   0061BA  3B97               	swapf	?___awdiv& (0+255),f,b
 36214   0061BC  4797               	rlncf	?___awdiv& (0+255),f,b
 36215   0061BE  4797               	rlncf	?___awdiv& (0+255),f,b
 36216   0061C0  508A               	movf	138,w,c	;volatile
 36217   0061C2  1997               	xorwf	?___awdiv& (0+255),w,b
 36218   0061C4  0BBF               	andlw	-65
 36219   0061C6  1997               	xorwf	?___awdiv& (0+255),w,b
 36220   0061C8  6E8A               	movwf	138,c	;volatile
 36221                           
 36222                           ; BSR set to: 0
 36223                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 36224   0061CA  0E63               	movlw	99
 36225   0061CC  D7E9               	goto	L17
 36226   0061CE                     l22503:
 36227                           
 36228                           ; BSR set to: 0
 36229                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 36230   0061CE  C0AF  F097         	movff	_flashCounter+1,___awdiv@dividend
 36231   0061D2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36232   0061D4  0E00               	movlw	0
 36233   0061D6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36234   0061D8  0E64               	movlw	100
 36235   0061DA  6F99               	movwf	___awdiv@divisor& (0+255),b
 36236   0061DC  EC59  F054         	call	___awdiv	;wreg free
 36237   0061E0  0100               	movlb	0	; () banked
 36238   0061E2  3B97               	swapf	?___awdiv& (0+255),f,b
 36239   0061E4  4797               	rlncf	?___awdiv& (0+255),f,b
 36240   0061E6  4797               	rlncf	?___awdiv& (0+255),f,b
 36241   0061E8  508A               	movf	138,w,c	;volatile
 36242   0061EA  1997               	xorwf	?___awdiv& (0+255),w,b
 36243   0061EC  0BBF               	andlw	-65
 36244   0061EE  1997               	xorwf	?___awdiv& (0+255),w,b
 36245   0061F0  6E8A               	movwf	138,c	;volatile
 36246                           
 36247                           ; BSR set to: 0
 36248                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 36249   0061F2  0EC7               	movlw	199
 36250   0061F4  D7D5               	goto	L17
 36251   0061F6                     l1781:
 36252                           
 36253                           ; BSR set to: 0
 36254                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 36255   0061F6  8C8A               	bsf	138,6,c	;volatile
 36256                           
 36257                           ; BSR set to: 0
 36258                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 36259   0061F8  0E18               	movlw	24
 36260   0061FA  65AF               	cpfsgt	(_flashCounter+1)& (0+255),b
 36261   0061FC  D09C               	goto	l22577
 36262                           
 36263                           ; BSR set to: 0
 36264                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 36265   0061FE  0E00               	movlw	0
 36266   006200  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 36267                           
 36268                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 36269   006202  0E00               	movlw	0
 36270   006204  D007               	goto	L18
 36271   006206                     l1783:
 36272                           
 36273                           ; BSR set to: 0
 36274                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 36275   006206  9C8A               	bcf	138,6,c	;volatile
 36276                           
 36277                           ; BSR set to: 0
 36278                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 36279   006208  0E18               	movlw	24
 36280   00620A  65AF               	cpfsgt	(_flashCounter+1)& (0+255),b
 36281   00620C  D094               	goto	l22577
 36282                           
 36283                           ; BSR set to: 0
 36284                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 36285   00620E  0E00               	movlw	0
 36286   006210  6FAF               	movwf	(_flashCounter+1)& (0+255),b
 36287                           
 36288                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 36289   006212  0E01               	movlw	1
 36290   006214                     L18:
 36291   006214  6FB1               	movwf	(_ledState+1)& (0+255),b
 36292   006216  D08F               	goto	l22577
 36293   006218                     l1785:
 36294                           
 36295                           ; BSR set to: 0
 36296                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 36297   006218  8C8A               	bsf	138,6,c	;volatile
 36298                           
 36299                           ; BSR set to: 0
 36300                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 36301   00621A  0E31               	movlw	49
 36302   00621C  D7EE               	goto	L21
 36303   00621E                     l1787:
 36304                           
 36305                           ; BSR set to: 0
 36306                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 36307   00621E  9C8A               	bcf	138,6,c	;volatile
 36308                           
 36309                           ; BSR set to: 0
 36310                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 36311   006220  0E31               	movlw	49
 36312   006222  D7F3               	goto	L22
 36313   006224                     l1789:
 36314                           
 36315                           ; BSR set to: 0
 36316                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 36317   006224  9C8A               	bcf	138,6,c	;volatile
 36318                           
 36319                           ; BSR set to: 0
 36320                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 36321   006226  0E63               	movlw	99
 36322   006228  D7F0               	goto	L22
 36323   00622A                     l22531:
 36324   00622A  0100               	movlb	0	; () banked
 36325   00622C  51B1               	movf	(_ledState+1)& (0+255),w,b
 36326   00622E  6F9F               	movwf	??_leds_poll& (0+255),b
 36327   006230  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 36328                           
 36329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36330                           ; Switch size 1, requested type "simple"
 36331                           ; Number of cases is 1, Range of values is 0 to 0
 36332                           ; switch strategies available:
 36333                           ; Name         Instructions Cycles
 36334                           ; simple_byte            4     3 (average)
 36335                           ;	Chosen strategy is simple_byte
 36336   006232  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 36337   006234  0A00               	xorlw	0	; case 0
 36338   006236  A4D8               	btfss	status,2,c
 36339   006238  D07E               	goto	l22577
 36340                           
 36341                           ; BSR set to: 0
 36342                           ; Switch size 1, requested type "simple"
 36343                           ; Number of cases is 10, Range of values is 0 to 9
 36344                           ; switch strategies available:
 36345                           ; Name         Instructions Cycles
 36346                           ; simple_byte           31    16 (average)
 36347                           ;	Chosen strategy is simple_byte
 36348   00623A  519F               	movf	??_leds_poll& (0+255),w,b
 36349   00623C  0A00               	xorlw	0	; case 0
 36350   00623E  B4D8               	btfsc	status,2,c
 36351   006240  D79A               	goto	l1774
 36352   006242  0A01               	xorlw	1	; case 1
 36353   006244  B4D8               	btfsc	status,2,c
 36354   006246  D793               	goto	l1772
 36355   006248  0A03               	xorlw	3	; case 2
 36356   00624A  B4D8               	btfsc	status,2,c
 36357   00624C  D796               	goto	l22491
 36358   00624E  0A01               	xorlw	1	; case 3
 36359   006250  B4D8               	btfsc	status,2,c
 36360   006252  D7A9               	goto	l22497
 36361   006254  0A07               	xorlw	7	; case 4
 36362   006256  B4D8               	btfsc	status,2,c
 36363   006258  D7BA               	goto	l22503
 36364   00625A  0A01               	xorlw	1	; case 5
 36365   00625C  B4D8               	btfsc	status,2,c
 36366   00625E  D7D3               	goto	l1783
 36367   006260  0A03               	xorlw	3	; case 6
 36368   006262  B4D8               	btfsc	status,2,c
 36369   006264  D7C8               	goto	l1781
 36370   006266  0A01               	xorlw	1	; case 7
 36371   006268  B4D8               	btfsc	status,2,c
 36372   00626A  D7D9               	goto	l1787
 36373   00626C  0A0F               	xorlw	15	; case 8
 36374   00626E  B4D8               	btfsc	status,2,c
 36375   006270  D7D3               	goto	l1785
 36376   006272  0A01               	xorlw	1	; case 9
 36377   006274  B4D8               	btfsc	status,2,c
 36378   006276  D7D6               	goto	l1789
 36379   006278  D05E               	goto	l22577
 36380   00627A                     l1792:
 36381                           
 36382                           ; BSR set to: 0
 36383                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 36384   00627A  8E8A               	bsf	138,7,c	;volatile
 36385   00627C                     l22533:
 36386                           
 36387                           ; BSR set to: 0
 36388                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 36389   00627C  0E00               	movlw	0
 36390   00627E  6FAE               	movwf	_flashCounter& (0+255),b
 36391                           
 36392                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 36393   006280  0012               	return	
 36394   006282                     l1794:
 36395                           
 36396                           ; BSR set to: 0
 36397                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 36398   006282  9E8A               	bcf	138,7,c	;volatile
 36399   006284  D7FB               	goto	l22533
 36400   006286                     l22537:
 36401                           
 36402                           ; BSR set to: 0
 36403                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 36404   006286  C0AE  F097         	movff	_flashCounter,___awdiv@dividend
 36405   00628A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36406   00628C  0E00               	movlw	0
 36407   00628E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36408   006290  0E19               	movlw	25
 36409   006292  6F99               	movwf	___awdiv@divisor& (0+255),b
 36410   006294  EC59  F054         	call	___awdiv	;wreg free
 36411   006298  0100               	movlb	0	; () banked
 36412   00629A  3397               	rrcf	?___awdiv& (0+255),f,b
 36413   00629C  3397               	rrcf	?___awdiv& (0+255),f,b
 36414   00629E  508A               	movf	138,w,c	;volatile
 36415   0062A0  1997               	xorwf	?___awdiv& (0+255),w,b
 36416   0062A2  0B7F               	andlw	-129
 36417   0062A4  1997               	xorwf	?___awdiv& (0+255),w,b
 36418   0062A6  6E8A               	movwf	138,c	;volatile
 36419                           
 36420                           ; BSR set to: 0
 36421                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 36422   0062A8  0E31               	movlw	49
 36423   0062AA                     L20:
 36424   0062AA  65AE               	cpfsgt	_flashCounter& (0+255),b
 36425   0062AC  0012               	return	
 36426   0062AE  D7E6               	goto	l22533
 36427   0062B0                     l22543:
 36428                           
 36429                           ; BSR set to: 0
 36430                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 36431   0062B0  C0AE  F097         	movff	_flashCounter,___awdiv@dividend
 36432   0062B4  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36433   0062B6  0E00               	movlw	0
 36434   0062B8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36435   0062BA  0E32               	movlw	50
 36436   0062BC  6F99               	movwf	___awdiv@divisor& (0+255),b
 36437   0062BE  EC59  F054         	call	___awdiv	;wreg free
 36438   0062C2  0100               	movlb	0	; () banked
 36439   0062C4  3397               	rrcf	?___awdiv& (0+255),f,b
 36440   0062C6  3397               	rrcf	?___awdiv& (0+255),f,b
 36441   0062C8  508A               	movf	138,w,c	;volatile
 36442   0062CA  1997               	xorwf	?___awdiv& (0+255),w,b
 36443   0062CC  0B7F               	andlw	-129
 36444   0062CE  1997               	xorwf	?___awdiv& (0+255),w,b
 36445   0062D0  6E8A               	movwf	138,c	;volatile
 36446                           
 36447                           ; BSR set to: 0
 36448                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 36449   0062D2  0E63               	movlw	99
 36450   0062D4  D7EA               	goto	L20
 36451   0062D6                     l22549:
 36452                           
 36453                           ; BSR set to: 0
 36454                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 36455   0062D6  C0AE  F097         	movff	_flashCounter,___awdiv@dividend
 36456   0062DA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36457   0062DC  0E00               	movlw	0
 36458   0062DE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36459   0062E0  0E64               	movlw	100
 36460   0062E2  6F99               	movwf	___awdiv@divisor& (0+255),b
 36461   0062E4  EC59  F054         	call	___awdiv	;wreg free
 36462   0062E8  0100               	movlb	0	; () banked
 36463   0062EA  3397               	rrcf	?___awdiv& (0+255),f,b
 36464   0062EC  3397               	rrcf	?___awdiv& (0+255),f,b
 36465   0062EE  508A               	movf	138,w,c	;volatile
 36466   0062F0  1997               	xorwf	?___awdiv& (0+255),w,b
 36467   0062F2  0B7F               	andlw	-129
 36468   0062F4  1997               	xorwf	?___awdiv& (0+255),w,b
 36469   0062F6  6E8A               	movwf	138,c	;volatile
 36470                           
 36471                           ; BSR set to: 0
 36472                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 36473   0062F8  0EC7               	movlw	199
 36474   0062FA  D7D7               	goto	L20
 36475   0062FC                     l1801:
 36476                           
 36477                           ; BSR set to: 0
 36478                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 36479   0062FC  8E8A               	bsf	138,7,c	;volatile
 36480                           
 36481                           ; BSR set to: 0
 36482                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 36483   0062FE  0E18               	movlw	24
 36484   006300  D00F               	goto	L24
 36485   006302                     u23580:
 36486                           
 36487                           ; BSR set to: 0
 36488                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 36489   006302  0E00               	movlw	0
 36490   006304  6FAE               	movwf	_flashCounter& (0+255),b
 36491                           
 36492                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 36493   006306  0E00               	movlw	0
 36494   006308  6FB0               	movwf	_ledState& (0+255),b
 36495   00630A  0012               	return	
 36496   00630C                     l1803:
 36497                           
 36498                           ; BSR set to: 0
 36499                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 36500   00630C  9E8A               	bcf	138,7,c	;volatile
 36501                           
 36502                           ; BSR set to: 0
 36503                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 36504   00630E  0E18               	movlw	24
 36505   006310  D00C               	goto	L23
 36506   006312                     u23590:
 36507                           
 36508                           ; BSR set to: 0
 36509                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 36510   006312  0E00               	movlw	0
 36511   006314  6FAE               	movwf	_flashCounter& (0+255),b
 36512                           
 36513                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 36514   006316  0E01               	movlw	1
 36515   006318  6FB0               	movwf	_ledState& (0+255),b
 36516   00631A  0012               	return	
 36517   00631C                     l1805:
 36518                           
 36519                           ; BSR set to: 0
 36520                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 36521   00631C  8E8A               	bsf	138,7,c	;volatile
 36522                           
 36523                           ; BSR set to: 0
 36524                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 36525   00631E  0E31               	movlw	49
 36526   006320                     L24:
 36527   006320  65AE               	cpfsgt	_flashCounter& (0+255),b
 36528   006322  0012               	return	
 36529   006324  D7EE               	goto	u23580
 36530   006326                     l1807:
 36531                           
 36532                           ; BSR set to: 0
 36533                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 36534   006326  9E8A               	bcf	138,7,c	;volatile
 36535                           
 36536                           ; BSR set to: 0
 36537                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 36538   006328  0E31               	movlw	49
 36539   00632A                     L23:
 36540   00632A  65AE               	cpfsgt	_flashCounter& (0+255),b
 36541   00632C  0012               	return	
 36542   00632E  D7F1               	goto	u23590
 36543   006330                     l1809:
 36544                           
 36545                           ; BSR set to: 0
 36546                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 36547   006330  9E8A               	bcf	138,7,c	;volatile
 36548                           
 36549                           ; BSR set to: 0
 36550                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 36551   006332  0E63               	movlw	99
 36552   006334  D7FA               	goto	L23
 36553   006336                     l22577:
 36554                           
 36555                           ; BSR set to: 0
 36556   006336  51B0               	movf	_ledState& (0+255),w,b
 36557   006338  6F9F               	movwf	??_leds_poll& (0+255),b
 36558   00633A  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 36559                           
 36560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 36561                           ; Switch size 1, requested type "simple"
 36562                           ; Number of cases is 1, Range of values is 0 to 0
 36563                           ; switch strategies available:
 36564                           ; Name         Instructions Cycles
 36565                           ; simple_byte            4     3 (average)
 36566                           ;	Chosen strategy is simple_byte
 36567   00633C  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 36568   00633E  0A00               	xorlw	0	; case 0
 36569   006340  A4D8               	btfss	status,2,c
 36570   006342  0012               	return	
 36571                           
 36572                           ; BSR set to: 0
 36573                           ; Switch size 1, requested type "simple"
 36574                           ; Number of cases is 10, Range of values is 0 to 9
 36575                           ; switch strategies available:
 36576                           ; Name         Instructions Cycles
 36577                           ; simple_byte           31    16 (average)
 36578                           ;	Chosen strategy is simple_byte
 36579   006344  519F               	movf	??_leds_poll& (0+255),w,b
 36580   006346  0A00               	xorlw	0	; case 0
 36581   006348  B4D8               	btfsc	status,2,c
 36582   00634A  D79B               	goto	l1794
 36583   00634C  0A01               	xorlw	1	; case 1
 36584   00634E  B4D8               	btfsc	status,2,c
 36585   006350  D794               	goto	l1792
 36586   006352  0A03               	xorlw	3	; case 2
 36587   006354  B4D8               	btfsc	status,2,c
 36588   006356  D797               	goto	l22537
 36589   006358  0A01               	xorlw	1	; case 3
 36590   00635A  B4D8               	btfsc	status,2,c
 36591   00635C  D7A9               	goto	l22543
 36592   00635E  0A07               	xorlw	7	; case 4
 36593   006360  B4D8               	btfsc	status,2,c
 36594   006362  D7B9               	goto	l22549
 36595   006364  0A01               	xorlw	1	; case 5
 36596   006366  B4D8               	btfsc	status,2,c
 36597   006368  D7D1               	goto	l1803
 36598   00636A  0A03               	xorlw	3	; case 6
 36599   00636C  B4D8               	btfsc	status,2,c
 36600   00636E  D7C6               	goto	l1801
 36601   006370  0A01               	xorlw	1	; case 7
 36602   006372  B4D8               	btfsc	status,2,c
 36603   006374  D7D8               	goto	l1807
 36604   006376  0A0F               	xorlw	15	; case 8
 36605   006378  B4D8               	btfsc	status,2,c
 36606   00637A  D7D0               	goto	l1805
 36607   00637C  0A01               	xorlw	1	; case 9
 36608   00637E  A4D8               	btfss	status,2,c
 36609   006380  0012               	return	
 36610   006382  D7D6               	goto	l1809
 36611   006384                     __end_of_leds_poll:
 36612                           	callstack 0
 36613                           
 36614 ;; *************** function _tickGet *****************
 36615 ;; Defined at:
 36616 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 36617 ;; Parameters:    Size  Location     Type
 36618 ;;		None
 36619 ;; Auto vars:     Size  Location     Type
 36620 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 36621 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 36622 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 36623 ;; Return value:  Size  Location     Type
 36624 ;;                  4   45[BANK0 ] unsigned long 
 36625 ;; Registers used:
 36626 ;;		wreg, status,2, status,0
 36627 ;; Tracked objects:
 36628 ;;		On entry : 0/0
 36629 ;;		On exit  : 0/0
 36630 ;;		Unchanged: 0/0
 36631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36633 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36635 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36636 ;;Total ram usage:       10 bytes
 36637 ;; Hardware stack levels used: 1
 36638 ;; Hardware stack levels required when called: 12
 36639 ;; This function calls:
 36640 ;;		Nothing
 36641 ;; This function is called by:
 36642 ;;		_setup
 36643 ;;		_loop
 36644 ;;		_doWait
 36645 ;;		_initServos
 36646 ;;		_pollServos
 36647 ;;		_mnsPowerUp
 36648 ;;		_mnsPoll
 36649 ;;		_leds_powerUp
 36650 ;;		_leds_poll
 36651 ;;		_pbDownTimer
 36652 ;;		_pbUpTimer
 36653 ;;		_poll
 36654 ;;		_canPowerUp
 36655 ;;		_handleSelfEnumeration
 36656 ;;		_processEnumeration
 36657 ;; This function uses a non-reentrant model
 36658 ;;
 36659                           
 36660                           	psect	text146
 36661   00B846                     __ptext146:
 36662                           	callstack 0
 36663   00B846                     _tickGet:
 36664                           	callstack 17
 36665                           
 36666                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 36667                           
 36668                           ; BSR set to: 0
 36669                           ;incstack = 0
 36670   00B846  0E00               	movlw	0
 36671   00B848  0100               	movlb	0	; () banked
 36672   00B84A  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 36673                           
 36674                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 36675   00B84C  0E00               	movlw	0
 36676   00B84E  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 36677                           
 36678                           ; BSR set to: 0
 36679                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 36680   00B850  9AF2               	bcf	242,5,c	;volatile
 36681   00B852                     l20627:
 36682                           
 36683                           ; BSR set to: 0
 36684                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 36685   00B852  0E00               	movlw	0
 36686   00B854  B4F2               	btfsc	242,2,c	;volatile
 36687   00B856  0E01               	movlw	1
 36688   00B858  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 36689                           
 36690                           ; BSR set to: 0
 36691                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 36692   00B85A  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 36693                           
 36694                           ; BSR set to: 0
 36695                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 36696   00B85E  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 36697                           
 36698                           ; BSR set to: 0
 36699                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 36700   00B862  0E00               	movlw	0
 36701   00B864  B4F2               	btfsc	242,2,c	;volatile
 36702   00B866  0E01               	movlw	1
 36703   00B868  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 36704                           
 36705                           ; BSR set to: 0
 36706                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 36707   00B86A  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 36708   00B86C  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 36709   00B86E  A4D8               	btfss	status,2,c
 36710   00B870  D7F0               	goto	l20627
 36711                           
 36712                           ; BSR set to: 0
 36713                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 36714   00B872  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 36715   00B874  B4D8               	btfsc	status,2,c
 36716   00B876  D005               	goto	l20647
 36717                           
 36718                           ; BSR set to: 0
 36719                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 36720   00B878  94F2               	bcf	242,2,c	;volatile
 36721                           
 36722                           ; BSR set to: 0
 36723                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 36724   00B87A  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 36725                           
 36726                           ; BSR set to: 0
 36727                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 36728   00B87C  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 36729   00B87E  B4D8               	btfsc	status,2,c
 36730                           
 36731                           ; BSR set to: 0
 36732                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 36733   00B880  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 36734   00B882                     l20647:
 36735                           
 36736                           ; BSR set to: 0
 36737                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 36738   00B882  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 36739   00B884  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 36740                           
 36741                           ; BSR set to: 0
 36742                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 36743   00B886  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 36744   00B888  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 36745                           
 36746                           ; BSR set to: 0
 36747                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 36748   00B88A  8AF2               	bsf	242,5,c	;volatile
 36749                           
 36750                           ; BSR set to: 0
 36751                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 36752   00B88C  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 36753   00B890  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 36754   00B894  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 36755   00B898  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 36756                           
 36757                           ; BSR set to: 0
 36758   00B89C  0012               	return		;funcret
 36759   00B89E                     __end_of_tickGet:
 36760                           	callstack 0
 36761                           
 36762 ;; *************** function ___lmul *****************
 36763 ;; Defined at:
 36764 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 36765 ;; Parameters:    Size  Location     Type
 36766 ;;  multiplier      4   49[BANK0 ] unsigned long 
 36767 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 36768 ;; Auto vars:     Size  Location     Type
 36769 ;;  product         4   57[BANK0 ] unsigned long 
 36770 ;; Return value:  Size  Location     Type
 36771 ;;                  4   49[BANK0 ] unsigned long 
 36772 ;; Registers used:
 36773 ;;		wreg, status,2, status,0
 36774 ;; Tracked objects:
 36775 ;;		On entry : 0/0
 36776 ;;		On exit  : 0/0
 36777 ;;		Unchanged: 0/0
 36778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36779 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36780 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36782 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36783 ;;Total ram usage:       12 bytes
 36784 ;; Hardware stack levels used: 1
 36785 ;; Hardware stack levels required when called: 12
 36786 ;; This function calls:
 36787 ;;		Nothing
 36788 ;; This function is called by:
 36789 ;;		_loop
 36790 ;;		_doWait
 36791 ;;		_pbDownTimer
 36792 ;;		_pbUpTimer
 36793 ;;		_poll
 36794 ;; This function uses a non-reentrant model
 36795 ;;
 36796                           
 36797                           	psect	text147
 36798   00B89E                     __ptext147:
 36799                           	callstack 0
 36800   00B89E                     ___lmul:
 36801                           	callstack 17
 36802                           
 36803                           ; BSR set to: 0
 36804                           ;incstack = 0
 36805   00B89E  0E00               	movlw	0
 36806   00B8A0  0100               	movlb	0	; () banked
 36807   00B8A2  6F99               	movwf	___lmul@product& (0+255),b
 36808   00B8A4  0E00               	movlw	0
 36809   00B8A6  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 36810   00B8A8  0E00               	movlw	0
 36811   00B8AA  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 36812   00B8AC  0E00               	movlw	0
 36813   00B8AE  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 36814   00B8B0                     l21547:
 36815                           
 36816                           ; BSR set to: 0
 36817   00B8B0  A191               	btfss	___lmul@multiplier& (0+255),0,b
 36818   00B8B2  D008               	goto	l21551
 36819                           
 36820                           ; BSR set to: 0
 36821   00B8B4  5195               	movf	___lmul@multiplicand& (0+255),w,b
 36822   00B8B6  2799               	addwf	___lmul@product& (0+255),f,b
 36823   00B8B8  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 36824   00B8BA  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 36825   00B8BC  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 36826   00B8BE  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 36827   00B8C0  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 36828   00B8C2  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 36829   00B8C4                     l21551:
 36830                           
 36831                           ; BSR set to: 0
 36832   00B8C4  90D8               	bcf	status,0,c
 36833   00B8C6  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 36834   00B8C8  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 36835   00B8CA  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 36836   00B8CC  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 36837                           
 36838                           ; BSR set to: 0
 36839   00B8CE  90D8               	bcf	status,0,c
 36840   00B8D0  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 36841   00B8D2  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 36842   00B8D4  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 36843   00B8D6  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 36844   00B8D8  5191               	movf	___lmul@multiplier& (0+255),w,b
 36845   00B8DA  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 36846   00B8DC  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 36847   00B8DE  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 36848   00B8E0  A4D8               	btfss	status,2,c
 36849   00B8E2  D7E6               	goto	l21547
 36850                           
 36851                           ; BSR set to: 0
 36852   00B8E4  C099  F091         	movff	___lmul@product,?___lmul
 36853   00B8E8  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 36854   00B8EC  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 36855   00B8F0  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 36856                           
 36857                           ; BSR set to: 0
 36858   00B8F4  0012               	return		;funcret
 36859   00B8F6                     __end_of___lmul:
 36860                           	callstack 0
 36861                           
 36862 ;; *************** function ___lldiv *****************
 36863 ;; Defined at:
 36864 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 36865 ;; Parameters:    Size  Location     Type
 36866 ;;  dividend        4   55[BANK0 ] unsigned long 
 36867 ;;  divisor         4   59[BANK0 ] unsigned long 
 36868 ;; Auto vars:     Size  Location     Type
 36869 ;;  quotient        4   63[BANK0 ] unsigned long 
 36870 ;;  counter         1   67[BANK0 ] unsigned char 
 36871 ;; Return value:  Size  Location     Type
 36872 ;;                  4   55[BANK0 ] unsigned long 
 36873 ;; Registers used:
 36874 ;;		wreg, status,2, status,0
 36875 ;; Tracked objects:
 36876 ;;		On entry : 0/0
 36877 ;;		On exit  : 0/0
 36878 ;;		Unchanged: 0/0
 36879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36880 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36881 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36883 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36884 ;;Total ram usage:       13 bytes
 36885 ;; Hardware stack levels used: 1
 36886 ;; Hardware stack levels required when called: 12
 36887 ;; This function calls:
 36888 ;;		Nothing
 36889 ;; This function is called by:
 36890 ;;		_pbDownTimer
 36891 ;;		_pbUpTimer
 36892 ;; This function uses a non-reentrant model
 36893 ;;
 36894                           
 36895                           	psect	text148
 36896   00A9BE                     __ptext148:
 36897                           	callstack 0
 36898   00A9BE                     ___lldiv:
 36899                           	callstack 16
 36900                           
 36901                           ; BSR set to: 0
 36902                           ;incstack = 0
 36903   00A9BE  0E00               	movlw	0
 36904   00A9C0  0100               	movlb	0	; () banked
 36905   00A9C2  6F9F               	movwf	___lldiv@quotient& (0+255),b
 36906   00A9C4  0E00               	movlw	0
 36907   00A9C6  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 36908   00A9C8  0E00               	movlw	0
 36909   00A9CA  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 36910   00A9CC  0E00               	movlw	0
 36911   00A9CE  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 36912                           
 36913                           ; BSR set to: 0
 36914   00A9D0  519B               	movf	___lldiv@divisor& (0+255),w,b
 36915   00A9D2  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 36916   00A9D4  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 36917   00A9D6  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 36918   00A9D8  B4D8               	btfsc	status,2,c
 36919   00A9DA  D02A               	goto	l3151
 36920                           
 36921                           ; BSR set to: 0
 36922   00A9DC  0E01               	movlw	1
 36923   00A9DE  6FA3               	movwf	___lldiv@counter& (0+255),b
 36924   00A9E0  D006               	goto	l15647
 36925   00A9E2                     l15645:
 36926                           
 36927                           ; BSR set to: 0
 36928   00A9E2  90D8               	bcf	status,0,c
 36929   00A9E4  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 36930   00A9E6  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 36931   00A9E8  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 36932   00A9EA  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 36933   00A9EC  2BA3               	incf	___lldiv@counter& (0+255),f,b
 36934   00A9EE                     l15647:
 36935                           
 36936                           ; BSR set to: 0
 36937   00A9EE  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 36938   00A9F0  D7F8               	goto	l15645
 36939   00A9F2                     u15150:
 36940                           
 36941                           ; BSR set to: 0
 36942   00A9F2  90D8               	bcf	status,0,c
 36943   00A9F4  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 36944   00A9F6  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 36945   00A9F8  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 36946   00A9FA  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 36947                           
 36948                           ; BSR set to: 0
 36949   00A9FC  519B               	movf	___lldiv@divisor& (0+255),w,b
 36950   00A9FE  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 36951   00AA00  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36952   00AA02  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 36953   00AA04  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36954   00AA06  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 36955   00AA08  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36956   00AA0A  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 36957   00AA0C  A0D8               	btfss	status,0,c
 36958   00AA0E  D009               	goto	l15657
 36959                           
 36960                           ; BSR set to: 0
 36961   00AA10  519B               	movf	___lldiv@divisor& (0+255),w,b
 36962   00AA12  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 36963   00AA14  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36964   00AA16  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 36965   00AA18  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36966   00AA1A  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 36967   00AA1C  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36968   00AA1E  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 36969                           
 36970                           ; BSR set to: 0
 36971   00AA20  819F               	bsf	___lldiv@quotient& (0+255),0,b
 36972   00AA22                     l15657:
 36973                           
 36974                           ; BSR set to: 0
 36975   00AA22  90D8               	bcf	status,0,c
 36976   00AA24  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 36977   00AA26  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 36978   00AA28  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 36979   00AA2A  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 36980                           
 36981                           ; BSR set to: 0
 36982   00AA2C  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 36983   00AA2E  D7E1               	goto	u15150
 36984   00AA30                     l3151:
 36985                           
 36986                           ; BSR set to: 0
 36987   00AA30  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 36988   00AA34  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 36989   00AA38  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 36990   00AA3C  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 36991                           
 36992                           ; BSR set to: 0
 36993   00AA40  0012               	return		;funcret
 36994   00AA42                     __end_of___lldiv:
 36995                           	callstack 0
 36996                           
 36997 ;; *************** function _factoryReset *****************
 36998 ;; Defined at:
 36999 ;;		line 857 in file "../../VLCBlib_PIC/vlcb.c"
 37000 ;; Parameters:    Size  Location     Type
 37001 ;;		None
 37002 ;; Auto vars:     Size  Location     Type
 37003 ;;  i               1   56[BANK1 ] unsigned char 
 37004 ;; Return value:  Size  Location     Type
 37005 ;;                  1    wreg      void 
 37006 ;; Registers used:
 37007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37008 ;; Tracked objects:
 37009 ;;		On entry : 0/0
 37010 ;;		On exit  : 0/0
 37011 ;;		Unchanged: 0/0
 37012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37014 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37015 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37016 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37017 ;;Total ram usage:        5 bytes
 37018 ;; Hardware stack levels used: 1
 37019 ;; Hardware stack levels required when called: 26
 37020 ;; This function calls:
 37021 ;;		NULL
 37022 ;;		_APP_factoryReset
 37023 ;;		_canFactoryReset
 37024 ;;		_mnsFactoryReset
 37025 ;;		_nvFactoryReset
 37026 ;;		_teachFactoryReset
 37027 ;;		_writeNVM
 37028 ;; This function is called by:
 37029 ;;		_mnsProcessMessage
 37030 ;;		_checkPowerOnPb
 37031 ;;		_main
 37032 ;; This function uses a non-reentrant model
 37033 ;;
 37034                           
 37035                           	psect	text149
 37036   008758                     __ptext149:
 37037                           	callstack 0
 37038   008758                     _factoryReset:
 37039                           	callstack 2
 37040                           
 37041                           ;../../VLCBlib_PIC/vlcb.c: 858:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 860:     for (i
      +                          =0; i<9; i++) {
 37042                           
 37043                           ; BSR set to: 0
 37044                           ;incstack = 0
 37045   008758  0E00               	movlw	0
 37046   00875A  0101               	movlb	1	; () banked
 37047   00875C  6FF6               	movwf	factoryReset@i& (0+255),b
 37048   00875E                     l22363:
 37049                           
 37050                           ; BSR set to: 1
 37051                           ;../../VLCBlib_PIC/vlcb.c: 861:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 37052   00875E  51F6               	movf	factoryReset@i& (0+255),w,b
 37053   008760  0D02               	mullw	2
 37054   008762  0E69               	movlw	low _services
 37055   008764  24F3               	addwf	243,w,c
 37056   008766  6EF6               	movwf	tblptrl,c
 37057   008768  0EEE               	movlw	high _services
 37058   00876A  20F4               	addwfc	244,w,c
 37059   00876C  6EF7               	movwf	tblptrh,c
 37060   00876E                     	if	1	;There are 3 active tblptr bytes
 37061   00876E  6AF8               	clrf	tblptru,c
 37062   008770  0E00               	movlw	low (__mediumconst shr (0+16))
 37063   008772  22F8               	addwfc	tblptru,f,c
 37064   008774                     	endif
 37065   008774  0009               	tblrd		*+
 37066   008776  50F5               	movf	tablat,w,c
 37067   008778  0009               	tblrd		*+
 37068   00877A  10F5               	iorwf	tablat,w,c
 37069   00877C  B4D8               	btfsc	status,2,c
 37070   00877E  D04B               	goto	u23359
 37071                           
 37072                           ; BSR set to: 1
 37073   008780  51F6               	movf	factoryReset@i& (0+255),w,b
 37074   008782  0D02               	mullw	2
 37075   008784  0E69               	movlw	low _services
 37076   008786  24F3               	addwf	243,w,c
 37077   008788  6EF6               	movwf	tblptrl,c
 37078   00878A  0EEE               	movlw	high _services
 37079   00878C  20F4               	addwfc	244,w,c
 37080   00878E  6EF7               	movwf	tblptrh,c
 37081   008790                     	if	1	;There are 3 active tblptr bytes
 37082   008790  6AF8               	clrf	tblptru,c
 37083   008792  0E00               	movlw	low (__mediumconst shr (0+16))
 37084   008794  22F8               	addwfc	tblptru,f,c
 37085   008796                     	endif
 37086   008796  0009               	tblrd		*+
 37087   008798  CFF5 F1F2          	movff	tablat,??_factoryReset
 37088   00879C  0009               	tblrd		*+
 37089   00879E  CFF5 F1F3          	movff	tablat,??_factoryReset+1
 37090   0087A2  0E02               	movlw	2
 37091   0087A4  27F2               	addwf	??_factoryReset& (0+255),f,b
 37092   0087A6  0E00               	movlw	0
 37093   0087A8  23F3               	addwfc	(??_factoryReset+1)& (0+255),f,b
 37094   0087AA  C1F2  FFF6         	movff	??_factoryReset,tblptrl
 37095   0087AE  C1F3  FFF7         	movff	??_factoryReset+1,tblptrh
 37096   0087B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37097   0087B2  6AF8               	clrf	tblptru,c
 37098   0087B4                     	endif
 37099   0087B4                     	if	0	;tblptru may be non-zero
 37100   0087B4                     	endif
 37101   0087B4  0009               	tblrd		*+
 37102   0087B6  50F5               	movf	tablat,w,c
 37103   0087B8  0009               	tblrd		*+
 37104   0087BA  10F5               	iorwf	tablat,w,c
 37105   0087BC  B4D8               	btfsc	status,2,c
 37106   0087BE  D02B               	goto	u23359
 37107                           
 37108                           ; BSR set to: 1
 37109                           ;../../VLCBlib_PIC/vlcb.c: 862:             services[i]->factoryReset();
 37110   0087C0  51F6               	movf	factoryReset@i& (0+255),w,b
 37111   0087C2  0D02               	mullw	2
 37112   0087C4  0E69               	movlw	low _services
 37113   0087C6  24F3               	addwf	243,w,c
 37114   0087C8  6EF6               	movwf	tblptrl,c
 37115   0087CA  0EEE               	movlw	high _services
 37116   0087CC  20F4               	addwfc	244,w,c
 37117   0087CE  6EF7               	movwf	tblptrh,c
 37118   0087D0                     	if	1	;There are 3 active tblptr bytes
 37119   0087D0  6AF8               	clrf	tblptru,c
 37120   0087D2  0E00               	movlw	low (__mediumconst shr (0+16))
 37121   0087D4  22F8               	addwfc	tblptru,f,c
 37122   0087D6                     	endif
 37123   0087D6  0009               	tblrd		*+
 37124   0087D8  CFF5 F1F2          	movff	tablat,??_factoryReset
 37125   0087DC  0009               	tblrd		*+
 37126   0087DE  CFF5 F1F3          	movff	tablat,??_factoryReset+1
 37127   0087E2  0E02               	movlw	2
 37128   0087E4  27F2               	addwf	??_factoryReset& (0+255),f,b
 37129   0087E6  0E00               	movlw	0
 37130   0087E8  23F3               	addwfc	(??_factoryReset+1)& (0+255),f,b
 37131   0087EA  C1F2  FFF6         	movff	??_factoryReset,tblptrl
 37132   0087EE  C1F3  FFF7         	movff	??_factoryReset+1,tblptrh
 37133   0087F2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37134   0087F2  6AF8               	clrf	tblptru,c
 37135   0087F4                     	endif
 37136   0087F4                     	if	0	;tblptru may be non-zero
 37137   0087F4                     	endif
 37138   0087F4  0009               	tblrd		*+
 37139   0087F6  CFF5 F1F4          	movff	tablat,??_factoryReset+2
 37140   0087FA  0009               	tblrd		*+
 37141   0087FC  CFF5 F1F5          	movff	tablat,??_factoryReset+3
 37142   008800  D801               	call	u23358
 37143   008802  D009               	goto	u23359
 37144   008804                     u23358:
 37145   008804  0005               	push	
 37146   008806  6EFA               	movwf	pclath,c
 37147   008808  51F4               	movf	(??_factoryReset+2)& (0+255),w,b
 37148   00880A  6EFD               	movwf	tosl,c
 37149   00880C  51F5               	movf	(??_factoryReset+3)& (0+255),w,b
 37150   00880E  6EFE               	movwf	tosh,c
 37151   008810  6AFF               	clrf	tosu,c
 37152   008812  50FA               	movf	pclath,w,c
 37153   008814  0012               	return		;indir
 37154   008816                     u23359:
 37155                           
 37156                           ;../../VLCBlib_PIC/vlcb.c: 864:     }
 37157   008816  0101               	movlb	1	; () banked
 37158   008818  2BF6               	incf	factoryReset@i& (0+255),f,b
 37159                           
 37160                           ; BSR set to: 1
 37161   00881A  0E08               	movlw	8
 37162   00881C  65F6               	cpfsgt	factoryReset@i& (0+255),b
 37163   00881E  D79F               	goto	l22363
 37164                           
 37165                           ; BSR set to: 1
 37166                           ;../../VLCBlib_PIC/vlcb.c: 866:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 37167   008820  0EFA               	movlw	250
 37168   008822  0100               	movlb	0	; () banked
 37169   008824  6FA4               	movwf	writeNVM@index& (0+255),b
 37170   008826  0E03               	movlw	3
 37171   008828  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37172   00882A  0E00               	movlw	0
 37173   00882C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37174   00882E  0E01               	movlw	1
 37175   008830  6FA7               	movwf	writeNVM@value& (0+255),b
 37176   008832  0E00               	movlw	0
 37177   008834  EC9F  F05D         	call	_writeNVM
 37178                           
 37179                           ;../../VLCBlib_PIC/vlcb.c: 868:     APP_factoryReset();
 37180   008838  EC2A  F063         	call	_APP_factoryReset	;wreg free
 37181   00883C  0012               	return		;funcret
 37182   00883E                     __end_of_factoryReset:
 37183                           	callstack 0
 37184                           
 37185 ;; *************** function _canFactoryReset *****************
 37186 ;; Defined at:
 37187 ;;		line 204 in file "../../VLCBlib_PIC/can18_ecan.c"
 37188 ;; Parameters:    Size  Location     Type
 37189 ;;		None
 37190 ;; Auto vars:     Size  Location     Type
 37191 ;;		None
 37192 ;; Return value:  Size  Location     Type
 37193 ;;                  1    wreg      void 
 37194 ;; Registers used:
 37195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37196 ;; Tracked objects:
 37197 ;;		On entry : 0/0
 37198 ;;		On exit  : 0/0
 37199 ;;		Unchanged: 0/0
 37200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37205 ;;Total ram usage:        0 bytes
 37206 ;; Hardware stack levels used: 1
 37207 ;; Hardware stack levels required when called: 18
 37208 ;; This function calls:
 37209 ;;		_writeNVM
 37210 ;; This function is called by:
 37211 ;;		_factoryReset
 37212 ;; This function uses a non-reentrant model
 37213 ;;
 37214                           
 37215                           	psect	text150
 37216   00C71C                     __ptext150:
 37217                           	callstack 0
 37218   00C71C                     _canFactoryReset:
 37219                           	callstack 9
 37220                           
 37221                           ;../../VLCBlib_PIC/can18_ecan.c: 205:     canId = 0;
 37222                           
 37223                           ;incstack = 0
 37224   00C71C  0E00               	movlw	0
 37225   00C71E  0100               	movlb	0	; () banked
 37226   00C720  6FB9               	movwf	_canId& (0+255),b
 37227                           
 37228                           ; BSR set to: 0
 37229                           ;../../VLCBlib_PIC/can18_ecan.c: 206:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 37230   00C722  0EFE               	movlw	254
 37231   00C724  6FA4               	movwf	writeNVM@index& (0+255),b
 37232   00C726  0E03               	movlw	3
 37233   00C728  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37234   00C72A  0E00               	movlw	0
 37235   00C72C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37236   00C72E  C0B9  F0A7         	movff	_canId,writeNVM@value
 37237   00C732  0E00               	movlw	0
 37238   00C734  EC9F  F05D         	call	_writeNVM
 37239   00C738  0012               	return		;funcret
 37240   00C73A                     __end_of_canFactoryReset:
 37241                           	callstack 0
 37242                           
 37243 ;; *************** function _nvFactoryReset *****************
 37244 ;; Defined at:
 37245 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 37246 ;; Parameters:    Size  Location     Type
 37247 ;;		None
 37248 ;; Auto vars:     Size  Location     Type
 37249 ;;  i               1    3[BANK1 ] unsigned char 
 37250 ;; Return value:  Size  Location     Type
 37251 ;;                  1    wreg      void 
 37252 ;; Registers used:
 37253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37254 ;; Tracked objects:
 37255 ;;		On entry : 0/0
 37256 ;;		On exit  : 0/0
 37257 ;;		Unchanged: 0/0
 37258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37260 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37261 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37262 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37263 ;;Total ram usage:        3 bytes
 37264 ;; Hardware stack levels used: 1
 37265 ;; Hardware stack levels required when called: 18
 37266 ;; This function calls:
 37267 ;;		_APP_nvDefault
 37268 ;;		_writeNVM
 37269 ;; This function is called by:
 37270 ;;		_factoryReset
 37271 ;; This function uses a non-reentrant model
 37272 ;;
 37273                           
 37274                           	psect	text151
 37275   00BFDA                     __ptext151:
 37276                           	callstack 0
 37277   00BFDA                     _nvFactoryReset:
 37278                           	callstack 9
 37279                           
 37280                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= (15+7*16); i++) {
 37281                           
 37282                           ;incstack = 0
 37283   00BFDA  0E01               	movlw	1
 37284   00BFDC  0101               	movlb	1	; () banked
 37285   00BFDE  6FC1               	movwf	nvFactoryReset@i& (0+255),b
 37286   00BFE0                     l21343:
 37287                           
 37288                           ; BSR set to: 1
 37289                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 37290   00BFE0  0E80               	movlw	128
 37291   00BFE2  25C1               	addwf	nvFactoryReset@i& (0+255),w,b
 37292   00BFE4  6FBF               	movwf	??_nvFactoryReset& (0+255),b
 37293   00BFE6  6BC0               	clrf	(??_nvFactoryReset+1)& (0+255),b
 37294   00BFE8  0EFF               	movlw	255
 37295   00BFEA  23C0               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 37296   00BFEC  C1BF  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 37297   00BFF0  C1C0  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 37298   00BFF4  0100               	movlb	0	; () banked
 37299   00BFF6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37300   00BFF8  0101               	movlb	1	; () banked
 37301   00BFFA  51C1               	movf	nvFactoryReset@i& (0+255),w,b
 37302   00BFFC  EC24  F047         	call	_APP_nvDefault
 37303   00C000  0100               	movlb	0	; () banked
 37304   00C002  6FA7               	movwf	writeNVM@value& (0+255),b
 37305   00C004  0E01               	movlw	1
 37306   00C006  EC9F  F05D         	call	_writeNVM
 37307                           
 37308                           ;../../VLCBlib_PIC/nv.c: 130:     }
 37309   00C00A  0101               	movlb	1	; () banked
 37310   00C00C  2BC1               	incf	nvFactoryReset@i& (0+255),f,b
 37311                           
 37312                           ; BSR set to: 1
 37313   00C00E  0E7F               	movlw	127
 37314   00C010  65C1               	cpfsgt	nvFactoryReset@i& (0+255),b
 37315   00C012  D7E6               	goto	l21343
 37316   00C014  0012               	return	
 37317   00C016                     __end_of_nvFactoryReset:
 37318                           	callstack 0
 37319                           
 37320 ;; *************** function _mnsFactoryReset *****************
 37321 ;; Defined at:
 37322 ;;		line 280 in file "../../VLCBlib_PIC/mns.c"
 37323 ;; Parameters:    Size  Location     Type
 37324 ;;		None
 37325 ;; Auto vars:     Size  Location     Type
 37326 ;;		None
 37327 ;; Return value:  Size  Location     Type
 37328 ;;                  1    wreg      void 
 37329 ;; Registers used:
 37330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37331 ;; Tracked objects:
 37332 ;;		On entry : 0/0
 37333 ;;		On exit  : 0/0
 37334 ;;		Unchanged: 0/0
 37335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37340 ;;Total ram usage:        0 bytes
 37341 ;; Hardware stack levels used: 1
 37342 ;; Hardware stack levels required when called: 18
 37343 ;; This function calls:
 37344 ;;		_writeNVM
 37345 ;; This function is called by:
 37346 ;;		_factoryReset
 37347 ;; This function uses a non-reentrant model
 37348 ;;
 37349                           
 37350                           	psect	text152
 37351   00AE2A                     __ptext152:
 37352                           	callstack 0
 37353   00AE2A                     _mnsFactoryReset:
 37354                           	callstack 9
 37355                           
 37356                           ;../../VLCBlib_PIC/mns.c: 281:     nn.bytes.hi = 0;
 37357                           
 37358                           ; BSR set to: 1
 37359                           ;incstack = 0
 37360   00AE2A  0E00               	movlw	0
 37361   00AE2C  0100               	movlb	0	; () banked
 37362   00AE2E  6FB5               	movwf	(_nn+1)& (0+255),b
 37363                           
 37364                           ;../../VLCBlib_PIC/mns.c: 282:     nn.bytes.lo = 0;
 37365   00AE30  0E00               	movlw	0
 37366   00AE32  6FB4               	movwf	_nn& (0+255),b
 37367                           
 37368                           ; BSR set to: 0
 37369                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.hi);
 37370   00AE34  0EFD               	movlw	253
 37371   00AE36  6FA4               	movwf	writeNVM@index& (0+255),b
 37372   00AE38  0E03               	movlw	3
 37373   00AE3A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37374   00AE3C  0E00               	movlw	0
 37375   00AE3E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37376   00AE40  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 37377   00AE44  0E00               	movlw	0
 37378   00AE46  EC9F  F05D         	call	_writeNVM
 37379                           
 37380                           ;../../VLCBlib_PIC/mns.c: 284:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.lo);
 37381   00AE4A  0EFC               	movlw	252
 37382   00AE4C  0100               	movlb	0	; () banked
 37383   00AE4E  6FA4               	movwf	writeNVM@index& (0+255),b
 37384   00AE50  0E03               	movlw	3
 37385   00AE52  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37386   00AE54  0E00               	movlw	0
 37387   00AE56  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37388   00AE58  C0B4  F0A7         	movff	_nn,writeNVM@value
 37389   00AE5C  0E00               	movlw	0
 37390   00AE5E  EC9F  F05D         	call	_writeNVM
 37391                           
 37392                           ;../../VLCBlib_PIC/mns.c: 286:     last_mode_state = mode_state = MODE_UNINITIALISED;
 37393   00AE62  0100               	movlb	0	; () banked
 37394   00AE64  69C4               	setf	_mode_state& (0+255),b
 37395   00AE66  69C3               	setf	_last_mode_state& (0+255),b
 37396                           
 37397                           ; BSR set to: 0
 37398                           ;../../VLCBlib_PIC/mns.c: 287:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 37399   00AE68  0EFB               	movlw	251
 37400   00AE6A  6FA4               	movwf	writeNVM@index& (0+255),b
 37401   00AE6C  0E03               	movlw	3
 37402   00AE6E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37403   00AE70  0E00               	movlw	0
 37404   00AE72  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37405   00AE74  C0C4  F0A7         	movff	_mode_state,writeNVM@value
 37406   00AE78  0E00               	movlw	0
 37407   00AE7A  EC9F  F05D         	call	_writeNVM
 37408                           
 37409                           ;../../VLCBlib_PIC/mns.c: 290:     last_mode_flags = mode_flags = 0;
 37410   00AE7E  0E00               	movlw	0
 37411   00AE80  0101               	movlb	1	; () banked
 37412   00AE82  6F65               	movwf	_mode_flags& (0+255),b
 37413   00AE84  C165  F0C2         	movff	_mode_flags,_last_mode_flags
 37414                           
 37415                           ;../../VLCBlib_PIC/mns.c: 291:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 37416   00AE88  0EF9               	movlw	249
 37417   00AE8A  0100               	movlb	0	; () banked
 37418   00AE8C  6FA4               	movwf	writeNVM@index& (0+255),b
 37419   00AE8E  0E03               	movlw	3
 37420   00AE90  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 37421   00AE92  0E00               	movlw	0
 37422   00AE94  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 37423   00AE96  C165  F0A7         	movff	_mode_flags,writeNVM@value
 37424   00AE9A  0E00               	movlw	0
 37425   00AE9C  EC9F  F05D         	call	_writeNVM
 37426   00AEA0  0012               	return		;funcret
 37427   00AEA2                     __end_of_mnsFactoryReset:
 37428                           	callstack 0
 37429                           
 37430 ;; *************** function _teachFactoryReset *****************
 37431 ;; Defined at:
 37432 ;;		line 354 in file "../../VLCBlib_PIC/event_teach_large.c"
 37433 ;; Parameters:    Size  Location     Type
 37434 ;;		None
 37435 ;; Auto vars:     Size  Location     Type
 37436 ;;		None
 37437 ;; Return value:  Size  Location     Type
 37438 ;;                  1    wreg      void 
 37439 ;; Registers used:
 37440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37441 ;; Tracked objects:
 37442 ;;		On entry : 0/0
 37443 ;;		On exit  : 0/0
 37444 ;;		Unchanged: 0/0
 37445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37450 ;;Total ram usage:        0 bytes
 37451 ;; Hardware stack levels used: 1
 37452 ;; Hardware stack levels required when called: 19
 37453 ;; This function calls:
 37454 ;;		_clearAllEvents
 37455 ;; This function is called by:
 37456 ;;		_factoryReset
 37457 ;; This function uses a non-reentrant model
 37458 ;;
 37459                           
 37460                           	psect	text153
 37461   00C8DC                     __ptext153:
 37462                           	callstack 0
 37463   00C8DC                     _teachFactoryReset:
 37464                           	callstack 8
 37465                           
 37466                           ;../../VLCBlib_PIC/event_teach_large.c: 355:     clearAllEvents();
 37467                           
 37468                           ;incstack = 0
 37469   00C8DC  ECD2  F05C         	call	_clearAllEvents	;wreg free
 37470   00C8E0  0012               	return		;funcret
 37471   00C8E2                     __end_of_teachFactoryReset:
 37472                           	callstack 0
 37473                           
 37474 ;; *************** function _clearAllEvents *****************
 37475 ;; Defined at:
 37476 ;;		line 560 in file "../../VLCBlib_PIC/event_teach_large.c"
 37477 ;; Parameters:    Size  Location     Type
 37478 ;;		None
 37479 ;; Auto vars:     Size  Location     Type
 37480 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 37481 ;; Return value:  Size  Location     Type
 37482 ;;                  1    wreg      void 
 37483 ;; Registers used:
 37484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37485 ;; Tracked objects:
 37486 ;;		On entry : 0/0
 37487 ;;		On exit  : 0/0
 37488 ;;		Unchanged: 0/0
 37489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37491 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37492 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37493 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37494 ;;Total ram usage:        5 bytes
 37495 ;; Hardware stack levels used: 1
 37496 ;; Hardware stack levels required when called: 18
 37497 ;; This function calls:
 37498 ;;		_flushFlashBlock
 37499 ;;		_rebuildHashtable
 37500 ;;		_writeNVM
 37501 ;; This function is called by:
 37502 ;;		_teachFactoryReset
 37503 ;;		_doNnclr
 37504 ;; This function uses a non-reentrant model
 37505 ;;
 37506                           
 37507                           	psect	text154
 37508   00B9A4                     __ptext154:
 37509                           	callstack 0
 37510   00B9A4                     _clearAllEvents:
 37511                           	callstack 9
 37512                           
 37513                           ;../../VLCBlib_PIC/event_teach_large.c: 561:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 562:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 37514                           
 37515                           ;incstack = 0
 37516   00B9A4  0E00               	movlw	0
 37517   00B9A6  0101               	movlb	1	; () banked
 37518   00B9A8  6FCB               	movwf	clearAllEvents@tableIndex& (0+255),b
 37519   00B9AA                     l20491:
 37520                           
 37521                           ; BSR set to: 1
 37522                           ;../../VLCBlib_PIC/event_teach_large.c: 564:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex + 0, 0xff);
 37523   00B9AA  51CB               	movf	clearAllEvents@tableIndex& (0+255),w,b
 37524   00B9AC  6FC7               	movwf	??_clearAllEvents& (0+255),b
 37525   00B9AE  6BC8               	clrf	(??_clearAllEvents+1)& (0+255),b
 37526   00B9B0  3BC7               	swapf	??_clearAllEvents& (0+255),f,b
 37527   00B9B2  3BC8               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 37528   00B9B4  0EF0               	movlw	240
 37529   00B9B6  17C8               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 37530   00B9B8  51C7               	movf	??_clearAllEvents& (0+255),w,b
 37531   00B9BA  0B0F               	andlw	15
 37532   00B9BC  13C8               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 37533   00B9BE  0EF0               	movlw	240
 37534   00B9C0  17C7               	andwf	??_clearAllEvents& (0+255),f,b
 37535   00B9C2  0E80               	movlw	128
 37536   00B9C4  25C7               	addwf	??_clearAllEvents& (0+255),w,b
 37537   00B9C6  6FC9               	movwf	(??_clearAllEvents+2)& (0+255),b
 37538   00B9C8  0EEF               	movlw	239
 37539   00B9CA  21C8               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 37540   00B9CC  6FCA               	movwf	(??_clearAllEvents+3)& (0+255),b
 37541   00B9CE  C1C9  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 37542   00B9D2  C1CA  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 37543   00B9D6  0100               	movlb	0	; () banked
 37544   00B9D8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37545   00B9DA  0EFF               	movlw	255
 37546   00B9DC  6FA7               	movwf	writeNVM@value& (0+255),b
 37547   00B9DE  0E01               	movlw	1
 37548   00B9E0  EC9F  F05D         	call	_writeNVM
 37549                           
 37550                           ;../../VLCBlib_PIC/event_teach_large.c: 565:     }
 37551   00B9E4  0101               	movlb	1	; () banked
 37552   00B9E6  2BCB               	incf	clearAllEvents@tableIndex& (0+255),f,b
 37553                           
 37554                           ; BSR set to: 1
 37555   00B9E8  29CB               	incf	clearAllEvents@tableIndex& (0+255),w,b
 37556   00B9EA  A4D8               	btfss	status,2,c
 37557   00B9EC  D7DE               	goto	l20491
 37558                           
 37559                           ; BSR set to: 1
 37560                           ;../../VLCBlib_PIC/event_teach_large.c: 566:     flushFlashBlock();
 37561   00B9EE  EC9C  F054         	call	_flushFlashBlock	;wreg free
 37562                           
 37563                           ;../../VLCBlib_PIC/event_teach_large.c: 568:     rebuildHashtable();
 37564   00B9F2  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 37565   00B9F6  0012               	return		;funcret
 37566   00B9F8                     __end_of_clearAllEvents:
 37567                           	callstack 0
 37568                           
 37569 ;; *************** function _APP_nvDefault *****************
 37570 ;; Defined at:
 37571 ;;		line 73 in file "../universalNv.c"
 37572 ;; Parameters:    Size  Location     Type
 37573 ;;  index           1    wreg     unsigned char 
 37574 ;; Auto vars:     Size  Location     Type
 37575 ;;  index           1   67[BANK0 ] unsigned char 
 37576 ;; Return value:  Size  Location     Type
 37577 ;;                  1    wreg      unsigned char 
 37578 ;; Registers used:
 37579 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37580 ;; Tracked objects:
 37581 ;;		On entry : 0/0
 37582 ;;		On exit  : 0/0
 37583 ;;		Unchanged: 0/0
 37584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37587 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37588 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37589 ;;Total ram usage:        5 bytes
 37590 ;; Hardware stack levels used: 1
 37591 ;; Hardware stack levels required when called: 13
 37592 ;; This function calls:
 37593 ;;		___awdiv
 37594 ;;		___awmod
 37595 ;;		___wmul
 37596 ;; This function is called by:
 37597 ;;		_nvFactoryReset
 37598 ;; This function uses a non-reentrant model
 37599 ;;
 37600                           
 37601                           	psect	text155
 37602   008E48                     __ptext155:
 37603                           	callstack 0
 37604   008E48                     _APP_nvDefault:
 37605                           	callstack 13
 37606                           
 37607                           ;incstack = 0
 37608                           ;APP_nvDefault@index stored from wreg
 37609   008E48  0100               	movlb	0	; () banked
 37610   008E4A  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 37611                           
 37612                           ;../universalNv.c: 74:     if (index < 16) {
 37613   008E4C  0E10               	movlw	16
 37614   008E4E  0100               	movlb	0	; () banked
 37615   008E50  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 37616   008E52  D02A               	goto	l20319
 37617   008E54  D00C               	goto	l20317
 37618   008E56                     l20283:
 37619                           
 37620                           ; BSR set to: 0
 37621                           ;../universalNv.c: 78:                 return 0;
 37622   008E56  0E00               	movlw	0
 37623   008E58  0012               	return	
 37624   008E5A                     l20291:
 37625                           
 37626                           ; BSR set to: 0
 37627                           ;../universalNv.c: 82:                 return 234;
 37628   008E5A  0EEA               	movlw	234
 37629   008E5C  0012               	return	
 37630   008E5E                     l20295:
 37631                           
 37632                           ; BSR set to: 0
 37633                           ;../universalNv.c: 84:                 return 0x33;
 37634   008E5E  0E33               	movlw	51
 37635   008E60  0012               	return	
 37636   008E62                     l20299:
 37637                           
 37638                           ; BSR set to: 0
 37639                           ;../universalNv.c: 86:                 return 2;
 37640   008E62  0E02               	movlw	2
 37641   008E64  0012               	return	
 37642   008E66                     l20303:
 37643                           
 37644                           ; BSR set to: 0
 37645                           ;../universalNv.c: 90:                 return 0xFF;
 37646   008E66  0EFF               	movlw	255
 37647   008E68  0012               	return	
 37648   008E6A                     l20307:
 37649                           
 37650                           ; BSR set to: 0
 37651                           ;../universalNv.c: 92:                 return 20;
 37652   008E6A  0E14               	movlw	20
 37653   008E6C  0012               	return	
 37654   008E6E                     l20317:
 37655                           
 37656                           ; BSR set to: 0
 37657   008E6E  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 37658                           
 37659                           ; Switch size 1, requested type "simple"
 37660                           ; Number of cases is 9, Range of values is 1 to 9
 37661                           ; switch strategies available:
 37662                           ; Name         Instructions Cycles
 37663                           ; simple_byte           28    15 (average)
 37664                           ;	Chosen strategy is simple_byte
 37665   008E70  0A01               	xorlw	1	; case 1
 37666   008E72  B4D8               	btfsc	status,2,c
 37667   008E74  D7F0               	goto	l20283
 37668   008E76  0A03               	xorlw	3	; case 2
 37669   008E78  B4D8               	btfsc	status,2,c
 37670   008E7A  D7ED               	goto	l20283
 37671   008E7C  0A01               	xorlw	1	; case 3
 37672   008E7E  B4D8               	btfsc	status,2,c
 37673   008E80  D7EC               	goto	l20291
 37674   008E82  0A07               	xorlw	7	; case 4
 37675   008E84  B4D8               	btfsc	status,2,c
 37676   008E86  D7EB               	goto	l20295
 37677   008E88  0A01               	xorlw	1	; case 5
 37678   008E8A  B4D8               	btfsc	status,2,c
 37679   008E8C  D7EA               	goto	l20299
 37680   008E8E  0A03               	xorlw	3	; case 6
 37681   008E90  B4D8               	btfsc	status,2,c
 37682   008E92  D7E9               	goto	l20303
 37683   008E94  0A01               	xorlw	1	; case 7
 37684   008E96  B4D8               	btfsc	status,2,c
 37685   008E98  D7E6               	goto	l20303
 37686   008E9A  0A0F               	xorlw	15	; case 8
 37687   008E9C  B4D8               	btfsc	status,2,c
 37688   008E9E  D7E3               	goto	l20303
 37689   008EA0  0A01               	xorlw	1	; case 9
 37690   008EA2  B4D8               	btfsc	status,2,c
 37691   008EA4  D7E2               	goto	l20307
 37692   008EA6  D7D7               	goto	l20283
 37693   008EA8                     l20319:
 37694                           
 37695                           ; BSR set to: 0
 37696                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 37697   008EA8  0EF0               	movlw	240
 37698   008EAA  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37699   008EAC  6F97               	movwf	___awdiv@dividend& (0+255),b
 37700   008EAE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 37701   008EB0  0EFF               	movlw	255
 37702   008EB2  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 37703   008EB4  0E00               	movlw	0
 37704   008EB6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 37705   008EB8  0E07               	movlw	7
 37706   008EBA  6F99               	movwf	___awdiv@divisor& (0+255),b
 37707   008EBC  EC59  F054         	call	___awdiv	;wreg free
 37708   008EC0  0E00               	movlw	0
 37709   008EC2  0100               	movlb	0	; () banked
 37710   008EC4  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 37711   008EC6  0E00               	movlw	0
 37712   008EC8  6F91               	movwf	___wmul@multiplier& (0+255),b
 37713   008ECA  0E00               	movlw	0
 37714   008ECC  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 37715   008ECE  0E07               	movlw	7
 37716   008ED0  6F93               	movwf	___wmul@multiplicand& (0+255),b
 37717   008ED2  EC93  F062         	call	___wmul	;wreg free
 37718   008ED6  0E8B               	movlw	low _channelDefaultNVs
 37719   008ED8  0100               	movlb	0	; () banked
 37720   008EDA  2591               	addwf	?___wmul& (0+255),w,b
 37721   008EDC  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 37722   008EDE  0EEE               	movlw	high _channelDefaultNVs
 37723   008EE0  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 37724   008EE2  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 37725   008EE4  0EF0               	movlw	240
 37726   008EE6  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37727   008EE8  6F8D               	movwf	___awmod@dividend& (0+255),b
 37728   008EEA  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 37729   008EEC  0EFF               	movlw	255
 37730   008EEE  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 37731   008EF0  0E00               	movlw	0
 37732   008EF2  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 37733   008EF4  0E07               	movlw	7
 37734   008EF6  6F8F               	movwf	___awmod@divisor& (0+255),b
 37735   008EF8  EC6E  F058         	call	___awmod	;wreg free
 37736   008EFC  0100               	movlb	0	; () banked
 37737   008EFE  518D               	movf	?___awmod& (0+255),w,b
 37738   008F00  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 37739   008F02  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 37740   008F04  518E               	movf	(?___awmod+1)& (0+255),w,b
 37741   008F06  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 37742   008F08  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 37743   008F0A  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 37744   008F0E  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 37745   008F12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37746   008F12  6AF8               	clrf	tblptru,c
 37747   008F14                     	endif
 37748   008F14                     	if	0	;tblptru may be non-zero
 37749   008F14                     	endif
 37750   008F14  0008               	tblrd		*
 37751   008F16  50F5               	movf	tablat,w,c
 37752                           
 37753                           ; BSR set to: 0
 37754   008F18  0012               	return		;funcret
 37755   008F1A                     __end_of_APP_nvDefault:
 37756                           	callstack 0
 37757                           
 37758 ;; *************** function ___wmul *****************
 37759 ;; Defined at:
 37760 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 37761 ;; Parameters:    Size  Location     Type
 37762 ;;  multiplier      2   49[BANK0 ] unsigned int 
 37763 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 37764 ;; Auto vars:     Size  Location     Type
 37765 ;;  product         2   53[BANK0 ] unsigned int 
 37766 ;; Return value:  Size  Location     Type
 37767 ;;                  2   49[BANK0 ] unsigned int 
 37768 ;; Registers used:
 37769 ;;		wreg, status,2, status,0, prodl, prodh
 37770 ;; Tracked objects:
 37771 ;;		On entry : 0/0
 37772 ;;		On exit  : 0/0
 37773 ;;		Unchanged: 0/0
 37774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37776 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37778 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37779 ;;Total ram usage:        6 bytes
 37780 ;; Hardware stack levels used: 1
 37781 ;; Hardware stack levels required when called: 12
 37782 ;; This function calls:
 37783 ;;		Nothing
 37784 ;; This function is called by:
 37785 ;;		_APP_nvDefault
 37786 ;;		_bounceDown
 37787 ;; This function uses a non-reentrant model
 37788 ;;
 37789                           
 37790                           	psect	text156
 37791   00C526                     __ptext156:
 37792                           	callstack 0
 37793   00C526                     ___wmul:
 37794                           	callstack 13
 37795                           
 37796                           ; BSR set to: 0
 37797                           ;incstack = 0
 37798   00C526  0100               	movlb	0	; () banked
 37799   00C528  5191               	movf	___wmul@multiplier& (0+255),w,b
 37800   00C52A  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37801   00C52C  CFF3 F095          	movff	prodl,___wmul@product
 37802   00C530  CFF4 F096          	movff	prodh,___wmul@product+1
 37803   00C534  5191               	movf	___wmul@multiplier& (0+255),w,b
 37804   00C536  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 37805   00C538  50F3               	movf	243,w,c
 37806   00C53A  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37807   00C53C  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 37808   00C53E  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37809   00C540  50F3               	movf	243,w,c
 37810   00C542  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37811                           
 37812                           ; BSR set to: 0
 37813   00C544  C095  F091         	movff	___wmul@product,?___wmul
 37814   00C548  C096  F092         	movff	___wmul@product+1,?___wmul+1
 37815                           
 37816                           ; BSR set to: 0
 37817   00C54C  0012               	return		;funcret
 37818   00C54E                     __end_of___wmul:
 37819                           	callstack 0
 37820                           
 37821 ;; *************** function ___awmod *****************
 37822 ;; Defined at:
 37823 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 37824 ;; Parameters:    Size  Location     Type
 37825 ;;  dividend        2   45[BANK0 ] int 
 37826 ;;  divisor         2   47[BANK0 ] int 
 37827 ;; Auto vars:     Size  Location     Type
 37828 ;;  sign            1   50[BANK0 ] unsigned char 
 37829 ;;  counter         1   49[BANK0 ] unsigned char 
 37830 ;; Return value:  Size  Location     Type
 37831 ;;                  2   45[BANK0 ] int 
 37832 ;; Registers used:
 37833 ;;		wreg, status,2, status,0
 37834 ;; Tracked objects:
 37835 ;;		On entry : 0/0
 37836 ;;		On exit  : 0/0
 37837 ;;		Unchanged: 0/0
 37838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37842 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37843 ;;Total ram usage:        6 bytes
 37844 ;; Hardware stack levels used: 1
 37845 ;; Hardware stack levels required when called: 12
 37846 ;; This function calls:
 37847 ;;		Nothing
 37848 ;; This function is called by:
 37849 ;;		_consumer2QProcessMessage
 37850 ;;		_processActions
 37851 ;;		_APP_nvDefault
 37852 ;;		_APP_nvValueChanged
 37853 ;;		_APP_nvValidate
 37854 ;; This function uses a non-reentrant model
 37855 ;;
 37856                           
 37857                           	psect	text157
 37858   00B0DC                     __ptext157:
 37859                           	callstack 0
 37860   00B0DC                     ___awmod:
 37861                           	callstack 14
 37862                           
 37863                           ; BSR set to: 0
 37864                           ;incstack = 0
 37865   00B0DC  0E00               	movlw	0
 37866   00B0DE  0100               	movlb	0	; () banked
 37867   00B0E0  6F92               	movwf	___awmod@sign& (0+255),b
 37868                           
 37869                           ; BSR set to: 0
 37870   00B0E2  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 37871   00B0E4  D006               	goto	l20185
 37872                           
 37873                           ; BSR set to: 0
 37874   00B0E6  6D8D               	negf	___awmod@dividend& (0+255),b
 37875   00B0E8  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37876   00B0EA  B0D8               	btfsc	status,0,c
 37877   00B0EC  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37878                           
 37879                           ; BSR set to: 0
 37880   00B0EE  0E01               	movlw	1
 37881   00B0F0  6F92               	movwf	___awmod@sign& (0+255),b
 37882   00B0F2                     l20185:
 37883                           
 37884                           ; BSR set to: 0
 37885   00B0F2  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37886   00B0F4  D004               	goto	l20189
 37887                           
 37888                           ; BSR set to: 0
 37889   00B0F6  6D8F               	negf	___awmod@divisor& (0+255),b
 37890   00B0F8  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 37891   00B0FA  B0D8               	btfsc	status,0,c
 37892   00B0FC  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 37893   00B0FE                     l20189:
 37894                           
 37895                           ; BSR set to: 0
 37896   00B0FE  518F               	movf	___awmod@divisor& (0+255),w,b
 37897   00B100  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 37898   00B102  B4D8               	btfsc	status,2,c
 37899   00B104  D018               	goto	l20205
 37900                           
 37901                           ; BSR set to: 0
 37902   00B106  0E01               	movlw	1
 37903   00B108  6F91               	movwf	___awmod@counter& (0+255),b
 37904   00B10A  D004               	goto	l20195
 37905   00B10C                     l20193:
 37906                           
 37907                           ; BSR set to: 0
 37908   00B10C  90D8               	bcf	status,0,c
 37909   00B10E  378F               	rlcf	___awmod@divisor& (0+255),f,b
 37910   00B110  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 37911   00B112  2B91               	incf	___awmod@counter& (0+255),f,b
 37912   00B114                     l20195:
 37913                           
 37914                           ; BSR set to: 0
 37915   00B114  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37916   00B116  D7FA               	goto	l20193
 37917   00B118                     u20220:
 37918                           
 37919                           ; BSR set to: 0
 37920   00B118  518F               	movf	___awmod@divisor& (0+255),w,b
 37921   00B11A  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 37922   00B11C  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37923   00B11E  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 37924   00B120  A0D8               	btfss	status,0,c
 37925   00B122  D004               	goto	l20201
 37926                           
 37927                           ; BSR set to: 0
 37928   00B124  518F               	movf	___awmod@divisor& (0+255),w,b
 37929   00B126  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 37930   00B128  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37931   00B12A  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 37932   00B12C                     l20201:
 37933                           
 37934                           ; BSR set to: 0
 37935   00B12C  90D8               	bcf	status,0,c
 37936   00B12E  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 37937   00B130  338F               	rrcf	___awmod@divisor& (0+255),f,b
 37938                           
 37939                           ; BSR set to: 0
 37940   00B132  2F91               	decfsz	___awmod@counter& (0+255),f,b
 37941   00B134  D7F1               	goto	u20220
 37942   00B136                     l20205:
 37943                           
 37944                           ; BSR set to: 0
 37945   00B136  5192               	movf	___awmod@sign& (0+255),w,b
 37946   00B138  B4D8               	btfsc	status,2,c
 37947   00B13A  D004               	goto	l20209
 37948                           
 37949                           ; BSR set to: 0
 37950   00B13C  6D8D               	negf	___awmod@dividend& (0+255),b
 37951   00B13E  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37952   00B140  B0D8               	btfsc	status,0,c
 37953   00B142  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37954   00B144                     l20209:
 37955                           
 37956                           ; BSR set to: 0
 37957   00B144  C08D  F08D         	movff	___awmod@dividend,?___awmod
 37958   00B148  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 37959                           
 37960                           ; BSR set to: 0
 37961   00B14C  0012               	return		;funcret
 37962   00B14E                     __end_of___awmod:
 37963                           	callstack 0
 37964                           
 37965 ;; *************** function ___awdiv *****************
 37966 ;; Defined at:
 37967 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 37968 ;; Parameters:    Size  Location     Type
 37969 ;;  dividend        2   55[BANK0 ] int 
 37970 ;;  divisor         2   57[BANK0 ] int 
 37971 ;; Auto vars:     Size  Location     Type
 37972 ;;  quotient        2   61[BANK0 ] int 
 37973 ;;  sign            1   60[BANK0 ] unsigned char 
 37974 ;;  counter         1   59[BANK0 ] unsigned char 
 37975 ;; Return value:  Size  Location     Type
 37976 ;;                  2   55[BANK0 ] int 
 37977 ;; Registers used:
 37978 ;;		wreg, status,2, status,0
 37979 ;; Tracked objects:
 37980 ;;		On entry : 0/0
 37981 ;;		On exit  : 0/0
 37982 ;;		Unchanged: 0/0
 37983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37984 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37985 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37987 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37988 ;;Total ram usage:        8 bytes
 37989 ;; Hardware stack levels used: 1
 37990 ;; Hardware stack levels required when called: 12
 37991 ;; This function calls:
 37992 ;;		Nothing
 37993 ;; This function is called by:
 37994 ;;		_APP_GetEventState
 37995 ;;		_consumer2QProcessMessage
 37996 ;;		_processActions
 37997 ;;		_sodTRCallback
 37998 ;;		_APP_nvDefault
 37999 ;;		_APP_nvValueChanged
 38000 ;;		_APP_nvValidate
 38001 ;;		_pollServos
 38002 ;;		_bounceDown
 38003 ;;		_bounceUp
 38004 ;;		_leds_poll
 38005 ;; This function uses a non-reentrant model
 38006 ;;
 38007                           
 38008                           	psect	text158
 38009   00A8B2                     __ptext158:
 38010                           	callstack 0
 38011   00A8B2                     ___awdiv:
 38012                           	callstack 15
 38013                           
 38014                           ; BSR set to: 0
 38015                           ;incstack = 0
 38016   00A8B2  0E00               	movlw	0
 38017   00A8B4  0100               	movlb	0	; () banked
 38018   00A8B6  6F9C               	movwf	___awdiv@sign& (0+255),b
 38019                           
 38020                           ; BSR set to: 0
 38021   00A8B8  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38022   00A8BA  D006               	goto	l20141
 38023                           
 38024                           ; BSR set to: 0
 38025   00A8BC  6D99               	negf	___awdiv@divisor& (0+255),b
 38026   00A8BE  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 38027   00A8C0  B0D8               	btfsc	status,0,c
 38028   00A8C2  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 38029                           
 38030                           ; BSR set to: 0
 38031   00A8C4  0E01               	movlw	1
 38032   00A8C6  6F9C               	movwf	___awdiv@sign& (0+255),b
 38033   00A8C8                     l20141:
 38034                           
 38035                           ; BSR set to: 0
 38036   00A8C8  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 38037   00A8CA  D006               	goto	l20147
 38038                           
 38039                           ; BSR set to: 0
 38040   00A8CC  6D97               	negf	___awdiv@dividend& (0+255),b
 38041   00A8CE  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 38042   00A8D0  B0D8               	btfsc	status,0,c
 38043   00A8D2  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 38044                           
 38045                           ; BSR set to: 0
 38046   00A8D4  0E01               	movlw	1
 38047   00A8D6  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 38048   00A8D8                     l20147:
 38049                           
 38050                           ; BSR set to: 0
 38051   00A8D8  0E00               	movlw	0
 38052   00A8DA  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 38053   00A8DC  0E00               	movlw	0
 38054   00A8DE  6F9D               	movwf	___awdiv@quotient& (0+255),b
 38055                           
 38056                           ; BSR set to: 0
 38057   00A8E0  5199               	movf	___awdiv@divisor& (0+255),w,b
 38058   00A8E2  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 38059   00A8E4  B4D8               	btfsc	status,2,c
 38060   00A8E6  D01C               	goto	l20169
 38061                           
 38062                           ; BSR set to: 0
 38063   00A8E8  0E01               	movlw	1
 38064   00A8EA  6F9B               	movwf	___awdiv@counter& (0+255),b
 38065   00A8EC  D004               	goto	l20155
 38066   00A8EE                     l20153:
 38067                           
 38068                           ; BSR set to: 0
 38069   00A8EE  90D8               	bcf	status,0,c
 38070   00A8F0  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 38071   00A8F2  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 38072   00A8F4  2B9B               	incf	___awdiv@counter& (0+255),f,b
 38073   00A8F6                     l20155:
 38074                           
 38075                           ; BSR set to: 0
 38076   00A8F6  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 38077   00A8F8  D7FA               	goto	l20153
 38078   00A8FA                     u20160:
 38079                           
 38080                           ; BSR set to: 0
 38081   00A8FA  90D8               	bcf	status,0,c
 38082   00A8FC  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 38083   00A8FE  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 38084                           
 38085                           ; BSR set to: 0
 38086   00A900  5199               	movf	___awdiv@divisor& (0+255),w,b
 38087   00A902  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 38088   00A904  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38089   00A906  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 38090   00A908  A0D8               	btfss	status,0,c
 38091   00A90A  D005               	goto	l20165
 38092                           
 38093                           ; BSR set to: 0
 38094   00A90C  5199               	movf	___awdiv@divisor& (0+255),w,b
 38095   00A90E  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 38096   00A910  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 38097   00A912  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 38098                           
 38099                           ; BSR set to: 0
 38100   00A914  819D               	bsf	___awdiv@quotient& (0+255),0,b
 38101   00A916                     l20165:
 38102                           
 38103                           ; BSR set to: 0
 38104   00A916  90D8               	bcf	status,0,c
 38105   00A918  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 38106   00A91A  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 38107                           
 38108                           ; BSR set to: 0
 38109   00A91C  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 38110   00A91E  D7ED               	goto	u20160
 38111   00A920                     l20169:
 38112                           
 38113                           ; BSR set to: 0
 38114   00A920  519C               	movf	___awdiv@sign& (0+255),w,b
 38115   00A922  B4D8               	btfsc	status,2,c
 38116   00A924  D004               	goto	l20173
 38117                           
 38118                           ; BSR set to: 0
 38119   00A926  6D9D               	negf	___awdiv@quotient& (0+255),b
 38120   00A928  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 38121   00A92A  B0D8               	btfsc	status,0,c
 38122   00A92C  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 38123   00A92E                     l20173:
 38124                           
 38125                           ; BSR set to: 0
 38126   00A92E  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 38127   00A932  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 38128                           
 38129                           ; BSR set to: 0
 38130   00A936  0012               	return		;funcret
 38131   00A938                     __end_of___awdiv:
 38132                           	callstack 0
 38133                           
 38134 ;; *************** function _APP_factoryReset *****************
 38135 ;; Defined at:
 38136 ;;		line 214 in file "../main.c"
 38137 ;; Parameters:    Size  Location     Type
 38138 ;;		None
 38139 ;; Auto vars:     Size  Location     Type
 38140 ;;  io              1   51[BANK1 ] unsigned char 
 38141 ;; Return value:  Size  Location     Type
 38142 ;;                  1    wreg      void 
 38143 ;; Registers used:
 38144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38145 ;; Tracked objects:
 38146 ;;		On entry : 0/0
 38147 ;;		On exit  : 0/0
 38148 ;;		Unchanged: 0/0
 38149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38151 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38153 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38154 ;;Total ram usage:        1 bytes
 38155 ;; Hardware stack levels used: 1
 38156 ;; Hardware stack levels required when called: 25
 38157 ;; This function calls:
 38158 ;;		_factoryResetGlobalEvents
 38159 ;;		_flushFlashBlock
 38160 ;;		_setType
 38161 ;; This function is called by:
 38162 ;;		_factoryReset
 38163 ;; This function uses a non-reentrant model
 38164 ;;
 38165                           
 38166                           	psect	text159
 38167   00C654                     __ptext159:
 38168                           	callstack 0
 38169   00C654                     _APP_factoryReset:
 38170                           	callstack 2
 38171                           
 38172                           ;../main.c: 215:     uint8_t io;;../main.c: 217:     factoryResetGlobalEvents();
 38173                           
 38174                           ; BSR set to: 0
 38175                           ;incstack = 0
 38176   00C654  EC75  F064         	call	_factoryResetGlobalEvents	;wreg free
 38177                           
 38178                           ;../main.c: 219:     for (io=0; io<16; io++) {
 38179   00C658  0E00               	movlw	0
 38180   00C65A  0101               	movlb	1	; () banked
 38181   00C65C  6FF1               	movwf	APP_factoryReset@io& (0+255),b
 38182   00C65E                     l20609:
 38183                           
 38184                           ; BSR set to: 1
 38185                           
 38186                           ; BSR set to: 1
 38187                           
 38188                           ; BSR set to: 1
 38189   00C65E  0E00               	movlw	0
 38190   00C660  6FEE               	movwf	setType@type& (0+255),b
 38191   00C662  51F1               	movf	APP_factoryReset@io& (0+255),w,b
 38192   00C664  EC4B  F05A         	call	_setType
 38193                           
 38194                           ;../main.c: 221:     }
 38195   00C668  0101               	movlb	1	; () banked
 38196   00C66A  2BF1               	incf	APP_factoryReset@io& (0+255),f,b
 38197                           
 38198                           ; BSR set to: 1
 38199   00C66C  0E0F               	movlw	15
 38200   00C66E  65F1               	cpfsgt	APP_factoryReset@io& (0+255),b
 38201   00C670  D7F6               	goto	l20609
 38202                           
 38203                           ; BSR set to: 1
 38204                           ;../main.c: 222:     flushFlashBlock();
 38205   00C672  EC9C  F054         	call	_flushFlashBlock	;wreg free
 38206   00C676  0012               	return		;funcret
 38207   00C678                     __end_of_APP_factoryReset:
 38208                           	callstack 0
 38209                           
 38210 ;; *************** function _setType *****************
 38211 ;; Defined at:
 38212 ;;		line 528 in file "../main.c"
 38213 ;; Parameters:    Size  Location     Type
 38214 ;;  io              1    wreg     unsigned char 
 38215 ;;  type            1   48[BANK1 ] unsigned char 
 38216 ;; Auto vars:     Size  Location     Type
 38217 ;;  io              1   50[BANK1 ] unsigned char 
 38218 ;;  index           1   49[BANK1 ] unsigned char 
 38219 ;; Return value:  Size  Location     Type
 38220 ;;                  1    wreg      void 
 38221 ;; Registers used:
 38222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38223 ;; Tracked objects:
 38224 ;;		On entry : 0/0
 38225 ;;		On exit  : 0/0
 38226 ;;		Unchanged: 0/0
 38227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38228 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38229 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38231 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38232 ;;Total ram usage:        3 bytes
 38233 ;; Hardware stack levels used: 1
 38234 ;; Hardware stack levels required when called: 24
 38235 ;; This function calls:
 38236 ;;		_configIO
 38237 ;;		_defaultEvents
 38238 ;;		_defaultNVs
 38239 ;;		_saveNV
 38240 ;; This function is called by:
 38241 ;;		_APP_factoryReset
 38242 ;;		_APP_nvValueChanged
 38243 ;; This function uses a non-reentrant model
 38244 ;;
 38245                           
 38246                           	psect	text160
 38247   00B496                     __ptext160:
 38248                           	callstack 0
 38249   00B496                     _setType:
 38250                           	callstack 2
 38251                           
 38252                           ;incstack = 0
 38253                           ;setType@io stored from wreg
 38254   00B496  0101               	movlb	1	; () banked
 38255   00B498  6FF0               	movwf	setType@io& (0+255),b
 38256                           
 38257                           ;../main.c: 529:     uint8_t index;;../main.c: 531:     index = (16 + 7*(io) + 0);
 38258   00B49A  0101               	movlb	1	; () banked
 38259   00B49C  51F0               	movf	setType@io& (0+255),w,b
 38260   00B49E  0D07               	mullw	7
 38261   00B4A0  50F3               	movf	243,w,c
 38262   00B4A2  0F10               	addlw	16
 38263   00B4A4  6FEF               	movwf	setType@index& (0+255),b
 38264                           
 38265                           ; BSR set to: 1
 38266                           ;../main.c: 532:     saveNV((uint8_t)index, type);
 38267   00B4A6  C1EE  F1BF         	movff	setType@type,saveNV@value
 38268   00B4AA  51EF               	movf	setType@index& (0+255),w,b
 38269   00B4AC  EC0B  F060         	call	_saveNV
 38270                           
 38271                           ;../main.c: 535:     defaultNVs(io, type);
 38272   00B4B0  C1EE  F1C3         	movff	setType@type,defaultNVs@type
 38273   00B4B4  0101               	movlb	1	; () banked
 38274   00B4B6  51F0               	movf	setType@io& (0+255),w,b
 38275   00B4B8  EC50  F05D         	call	_defaultNVs
 38276                           
 38277                           ;../main.c: 538:     configIO(io);
 38278   00B4BC  0101               	movlb	1	; () banked
 38279   00B4BE  51F0               	movf	setType@io& (0+255),w,b
 38280   00B4C0  EC28  F027         	call	_configIO
 38281                           
 38282                           ;../main.c: 540:     if ((type == 2) || (type== 3) || (type == 4)) {
 38283   00B4C4  0E02               	movlw	2
 38284   00B4C6  0101               	movlb	1	; () banked
 38285   00B4C8  19EE               	xorwf	setType@type& (0+255),w,b
 38286   00B4CA  B4D8               	btfsc	status,2,c
 38287   00B4CC  D008               	goto	u20270
 38288                           
 38289                           ; BSR set to: 1
 38290   00B4CE  0E03               	movlw	3
 38291   00B4D0  19EE               	xorwf	setType@type& (0+255),w,b
 38292   00B4D2  B4D8               	btfsc	status,2,c
 38293   00B4D4  D004               	goto	u20270
 38294                           
 38295                           ; BSR set to: 1
 38296   00B4D6  0E04               	movlw	4
 38297   00B4D8  19EE               	xorwf	setType@type& (0+255),w,b
 38298   00B4DA  A4D8               	btfss	status,2,c
 38299   00B4DC  D008               	goto	l20229
 38300   00B4DE                     u20270:
 38301                           
 38302                           ; BSR set to: 1
 38303                           ;../main.c: 541:         currentPos[io] = 128;
 38304   00B4DE  0E30               	movlw	low _currentPos
 38305   00B4E0  25F0               	addwf	setType@io& (0+255),w,b
 38306   00B4E2  6ED9               	movwf	fsr2l,c
 38307   00B4E4  6ADA               	clrf	fsr2h,c
 38308   00B4E6  0E01               	movlw	high _currentPos
 38309   00B4E8  22DA               	addwfc	fsr2h,f,c
 38310   00B4EA  0E80               	movlw	128
 38311   00B4EC  6EDF               	movwf	indf2,c
 38312   00B4EE                     l20229:
 38313                           
 38314                           ; BSR set to: 1
 38315                           ;../main.c: 545:     defaultEvents(io, type);
 38316   00B4EE  C1EE  F1EA         	movff	setType@type,defaultEvents@type
 38317   00B4F2  51F0               	movf	setType@io& (0+255),w,b
 38318   00B4F4  EC9C  F03B         	call	_defaultEvents
 38319   00B4F8  0012               	return		;funcret
 38320   00B4FA                     __end_of_setType:
 38321                           	callstack 0
 38322                           
 38323 ;; *************** function _defaultNVs *****************
 38324 ;; Defined at:
 38325 ;;		line 342 in file "../universalNv.c"
 38326 ;; Parameters:    Size  Location     Type
 38327 ;;  io              1    wreg     unsigned char 
 38328 ;;  type            1    5[BANK1 ] unsigned char 
 38329 ;; Auto vars:     Size  Location     Type
 38330 ;;  io              1    8[BANK1 ] unsigned char 
 38331 ;;  i               1    9[BANK1 ] unsigned char 
 38332 ;; Return value:  Size  Location     Type
 38333 ;;                  1    wreg      void 
 38334 ;; Registers used:
 38335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38336 ;; Tracked objects:
 38337 ;;		On entry : 0/0
 38338 ;;		On exit  : 0/0
 38339 ;;		Unchanged: 0/0
 38340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38341 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38342 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38343 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38344 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38345 ;;Total ram usage:        5 bytes
 38346 ;; Hardware stack levels used: 1
 38347 ;; Hardware stack levels required when called: 19
 38348 ;; This function calls:
 38349 ;;		_loadNvCache
 38350 ;;		_saveNV
 38351 ;; This function is called by:
 38352 ;;		_setType
 38353 ;; This function uses a non-reentrant model
 38354 ;;
 38355                           
 38356                           	psect	text161
 38357   00BAA0                     __ptext161:
 38358                           	callstack 0
 38359   00BAA0                     _defaultNVs:
 38360                           	callstack 6
 38361                           
 38362                           ;incstack = 0
 38363                           ;defaultNVs@io stored from wreg
 38364   00BAA0  0101               	movlb	1	; () banked
 38365   00BAA2  6FC6               	movwf	defaultNVs@io& (0+255),b
 38366                           
 38367                           ;../universalNv.c: 343:     uint8_t i;;../universalNv.c: 345:     for (i=1; i<7; i++) {
 38368   00BAA4  0E01               	movlw	1
 38369   00BAA6  0101               	movlb	1	; () banked
 38370   00BAA8  6FC7               	movwf	defaultNVs@i& (0+255),b
 38371   00BAAA                     l20063:
 38372                           
 38373                           ; BSR set to: 1
 38374                           ;../universalNv.c: 346:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 38375   00BAAA  51C3               	movf	defaultNVs@type& (0+255),w,b
 38376   00BAAC  0D07               	mullw	7
 38377   00BAAE  0E8B               	movlw	low _channelDefaultNVs
 38378   00BAB0  24F3               	addwf	243,w,c
 38379   00BAB2  6FC4               	movwf	??_defaultNVs& (0+255),b
 38380   00BAB4  0EEE               	movlw	high _channelDefaultNVs
 38381   00BAB6  20F4               	addwfc	prodh,w,c
 38382   00BAB8  6FC5               	movwf	(??_defaultNVs+1)& (0+255),b
 38383   00BABA  51C7               	movf	defaultNVs@i& (0+255),w,b
 38384   00BABC  27C4               	addwf	??_defaultNVs& (0+255),f,b
 38385   00BABE  0E00               	movlw	0
 38386   00BAC0  23C5               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 38387   00BAC2  C1C4  FFF6         	movff	??_defaultNVs,tblptrl
 38388   00BAC6  C1C5  FFF7         	movff	??_defaultNVs+1,tblptrh
 38389   00BACA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 38390   00BACA  6AF8               	clrf	tblptru,c
 38391   00BACC                     	endif
 38392   00BACC                     	if	0	;tblptru may be non-zero
 38393   00BACC                     	endif
 38394   00BACC  0008               	tblrd		*
 38395   00BACE  CFF5 F1BF          	movff	tablat,saveNV@value
 38396   00BAD2  51C6               	movf	defaultNVs@io& (0+255),w,b
 38397   00BAD4  0D07               	mullw	7
 38398   00BAD6  50F3               	movf	243,w,c
 38399   00BAD8  25C7               	addwf	defaultNVs@i& (0+255),w,b
 38400   00BADA  0F10               	addlw	16
 38401   00BADC  EC0B  F060         	call	_saveNV
 38402                           
 38403                           ;../universalNv.c: 347:     }
 38404   00BAE0  0101               	movlb	1	; () banked
 38405   00BAE2  2BC7               	incf	defaultNVs@i& (0+255),f,b
 38406                           
 38407                           ; BSR set to: 1
 38408   00BAE4  0E06               	movlw	6
 38409   00BAE6  65C7               	cpfsgt	defaultNVs@i& (0+255),b
 38410   00BAE8  D7E0               	goto	l20063
 38411                           
 38412                           ; BSR set to: 1
 38413                           ;../universalNv.c: 348:     loadNvCache();
 38414   00BAEA  EC5B  F05E         	call	_loadNvCache	;wreg free
 38415   00BAEE  0012               	return		;funcret
 38416   00BAF0                     __end_of_defaultNVs:
 38417                           	callstack 0
 38418                           
 38419 ;; *************** function _saveNV *****************
 38420 ;; Defined at:
 38421 ;;		line 199 in file "../../VLCBlib_PIC/nv.c"
 38422 ;; Parameters:    Size  Location     Type
 38423 ;;  index           1    wreg     unsigned char 
 38424 ;;  value           1    1[BANK1 ] unsigned char 
 38425 ;; Auto vars:     Size  Location     Type
 38426 ;;  index           1    4[BANK1 ] unsigned char 
 38427 ;; Return value:  Size  Location     Type
 38428 ;;                  1    wreg      void 
 38429 ;; Registers used:
 38430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38431 ;; Tracked objects:
 38432 ;;		On entry : 0/0
 38433 ;;		On exit  : 0/0
 38434 ;;		Unchanged: 0/0
 38435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38436 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38437 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38438 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38439 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38440 ;;Total ram usage:        4 bytes
 38441 ;; Hardware stack levels used: 1
 38442 ;; Hardware stack levels required when called: 18
 38443 ;; This function calls:
 38444 ;;		_writeNVM
 38445 ;; This function is called by:
 38446 ;;		_setType
 38447 ;;		_defaultNVs
 38448 ;; This function uses a non-reentrant model
 38449 ;;
 38450                           
 38451                           	psect	text162
 38452   00C016                     __ptext162:
 38453                           	callstack 0
 38454   00C016                     _saveNV:
 38455                           	callstack 7
 38456                           
 38457                           ;incstack = 0
 38458                           ;saveNV@index stored from wreg
 38459   00C016  0101               	movlb	1	; () banked
 38460   00C018  6FC2               	movwf	saveNV@index& (0+255),b
 38461                           
 38462                           ;../../VLCBlib_PIC/nv.c: 201:     nvCache[index] = value;
 38463   00C01A  0E00               	movlw	low _nvCache
 38464   00C01C  0101               	movlb	1	; () banked
 38465   00C01E  25C2               	addwf	saveNV@index& (0+255),w,b
 38466   00C020  6ED9               	movwf	fsr2l,c
 38467   00C022  6ADA               	clrf	fsr2h,c
 38468   00C024  0E04               	movlw	high _nvCache
 38469   00C026  22DA               	addwfc	fsr2h,f,c
 38470   00C028  C1BF  FFDF         	movff	saveNV@value,indf2
 38471                           
 38472                           ; BSR set to: 1
 38473                           ;../../VLCBlib_PIC/nv.c: 203:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 38474   00C02C  0E80               	movlw	128
 38475   00C02E  25C2               	addwf	saveNV@index& (0+255),w,b
 38476   00C030  6FC0               	movwf	??_saveNV& (0+255),b
 38477   00C032  6BC1               	clrf	(??_saveNV+1)& (0+255),b
 38478   00C034  0EFF               	movlw	255
 38479   00C036  23C1               	addwfc	(??_saveNV+1)& (0+255),f,b
 38480   00C038  C1C0  F0A4         	movff	??_saveNV,writeNVM@index
 38481   00C03C  C1C1  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 38482   00C040  0100               	movlb	0	; () banked
 38483   00C042  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38484   00C044  C1BF  F0A7         	movff	saveNV@value,writeNVM@value
 38485   00C048  0E01               	movlw	1
 38486   00C04A  EC9F  F05D         	call	_writeNVM
 38487   00C04E  0012               	return		;funcret
 38488   00C050                     __end_of_saveNV:
 38489                           	callstack 0
 38490                           
 38491 ;; *************** function _loadNvCache *****************
 38492 ;; Defined at:
 38493 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 38494 ;; Parameters:    Size  Location     Type
 38495 ;;		None
 38496 ;; Auto vars:     Size  Location     Type
 38497 ;;  temp            2   57[BANK0 ] short 
 38498 ;;  i               1   59[BANK0 ] unsigned char 
 38499 ;; Return value:  Size  Location     Type
 38500 ;;                  1    wreg      void 
 38501 ;; Registers used:
 38502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38503 ;; Tracked objects:
 38504 ;;		On entry : 0/0
 38505 ;;		On exit  : 0/0
 38506 ;;		Unchanged: 0/0
 38507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38509 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38511 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38512 ;;Total ram usage:        5 bytes
 38513 ;; Hardware stack levels used: 1
 38514 ;; Hardware stack levels required when called: 14
 38515 ;; This function calls:
 38516 ;;		_readNVM
 38517 ;; This function is called by:
 38518 ;;		_defaultNVs
 38519 ;;		_nvPowerUp
 38520 ;; This function uses a non-reentrant model
 38521 ;;
 38522                           
 38523                           	psect	text163
 38524   00BCB6                     __ptext163:
 38525                           	callstack 0
 38526   00BCB6                     _loadNvCache:
 38527                           	callstack 14
 38528                           
 38529                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= (15+7*16); i++) {
 38530                           
 38531                           ;incstack = 0
 38532   00BCB6  0E01               	movlw	1
 38533   00BCB8  0100               	movlb	0	; () banked
 38534   00BCBA  6F9B               	movwf	loadNvCache@i& (0+255),b
 38535   00BCBC                     l19935:
 38536                           
 38537                           ; BSR set to: 0
 38538                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 38539   00BCBC  0E80               	movlw	128
 38540   00BCBE  259B               	addwf	loadNvCache@i& (0+255),w,b
 38541   00BCC0  6F97               	movwf	??_loadNvCache& (0+255),b
 38542   00BCC2  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 38543   00BCC4  0EFF               	movlw	255
 38544   00BCC6  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 38545   00BCC8  C097  F091         	movff	??_loadNvCache,readNVM@index
 38546   00BCCC  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 38547   00BCD0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38548   00BCD2  0E01               	movlw	1
 38549   00BCD4  EC0F  F05B         	call	_readNVM
 38550   00BCD8  C091  F099         	movff	?_readNVM,loadNvCache@temp
 38551   00BCDC  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 38552                           
 38553                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 38554   00BCE0  0100               	movlb	0	; () banked
 38555   00BCE2  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 38556   00BCE4  D008               	goto	l19943
 38557                           
 38558                           ; BSR set to: 0
 38559                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 38560   00BCE6  0E00               	movlw	low _nvCache
 38561   00BCE8  259B               	addwf	loadNvCache@i& (0+255),w,b
 38562   00BCEA  6ED9               	movwf	fsr2l,c
 38563   00BCEC  6ADA               	clrf	fsr2h,c
 38564   00BCEE  0E04               	movlw	high _nvCache
 38565   00BCF0  22DA               	addwfc	fsr2h,f,c
 38566   00BCF2  C099  FFDF         	movff	loadNvCache@temp,indf2
 38567   00BCF6                     l19943:
 38568                           
 38569                           ; BSR set to: 0
 38570                           ;../../VLCBlib_PIC/nv.c: 173:     }
 38571   00BCF6  2B9B               	incf	loadNvCache@i& (0+255),f,b
 38572                           
 38573                           ; BSR set to: 0
 38574   00BCF8  0E7F               	movlw	127
 38575   00BCFA  659B               	cpfsgt	loadNvCache@i& (0+255),b
 38576   00BCFC  D7DF               	goto	l19935
 38577   00BCFE  0012               	return	
 38578   00BD00                     __end_of_loadNvCache:
 38579                           	callstack 0
 38580                           
 38581 ;; *************** function _defaultEvents *****************
 38582 ;; Defined at:
 38583 ;;		line 110 in file "../universalEvents.c"
 38584 ;; Parameters:    Size  Location     Type
 38585 ;;  io              1    wreg     unsigned char 
 38586 ;;  type            1   44[BANK1 ] unsigned char 
 38587 ;; Auto vars:     Size  Location     Type
 38588 ;;  io              1   47[BANK1 ] unsigned char 
 38589 ;;  en              2   45[BANK1 ] unsigned short 
 38590 ;;  b               1    0        unsigned char 
 38591 ;; Return value:  Size  Location     Type
 38592 ;;                  1    wreg      void 
 38593 ;; Registers used:
 38594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38595 ;; Tracked objects:
 38596 ;;		On entry : 0/0
 38597 ;;		On exit  : 0/0
 38598 ;;		Unchanged: 0/0
 38599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38600 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38601 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38603 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38604 ;;Total ram usage:        4 bytes
 38605 ;; Hardware stack levels used: 1
 38606 ;; Hardware stack levels required when called: 23
 38607 ;; This function calls:
 38608 ;;		_addEvent
 38609 ;;		_clearEvents
 38610 ;; This function is called by:
 38611 ;;		_setType
 38612 ;; This function uses a non-reentrant model
 38613 ;;
 38614                           
 38615                           	psect	text164
 38616   007738                     __ptext164:
 38617                           	callstack 0
 38618   007738                     _defaultEvents:
 38619                           	callstack 2
 38620                           
 38621                           ; BSR set to: 0
 38622                           ;incstack = 0
 38623                           ;defaultEvents@io stored from wreg
 38624   007738  0101               	movlb	1	; () banked
 38625   00773A  6FED               	movwf	defaultEvents@io& (0+255),b
 38626                           
 38627                           ;../universalEvents.c: 111:     uint16_t en = io+1;
 38628   00773C  0E01               	movlw	1
 38629   00773E  0101               	movlb	1	; () banked
 38630   007740  25ED               	addwf	defaultEvents@io& (0+255),w,b
 38631   007742  6FEB               	movwf	defaultEvents@en& (0+255),b
 38632   007744  6BEC               	clrf	(defaultEvents@en+1)& (0+255),b
 38633   007746  0E00               	movlw	0
 38634   007748  23EC               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 38635                           
 38636                           ; BSR set to: 1
 38637                           ;../universalEvents.c: 112:     uint8_t b;;../universalEvents.c: 120:         clearEvent
      +                          s(io);
 38638   00774A  51ED               	movf	defaultEvents@io& (0+255),w,b
 38639   00774C  EC91  F05F         	call	_clearEvents
 38640                           
 38641                           ;../universalEvents.c: 125:     switch(type) {
 38642   007750  D094               	goto	l20083
 38643   007752                     l20075:
 38644                           
 38645                           ; BSR set to: 1
 38646                           ;../universalEvents.c: 129:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 38647   007752  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38648   007756  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38649   00775A  0E64               	movlw	100
 38650   00775C  25EB               	addwf	defaultEvents@en& (0+255),w,b
 38651   00775E  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 38652   007760  0E00               	movlw	0
 38653   007762  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38654   007764  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38655   007766  0E00               	movlw	0
 38656   007768  6FDF               	movwf	addEvent@evNum& (0+255),b
 38657   00776A  51ED               	movf	defaultEvents@io& (0+255),w,b
 38658   00776C  0D04               	mullw	4
 38659   00776E  50F3               	movf	243,w,c
 38660   007770  0F08               	addlw	8
 38661   007772  6FE0               	movwf	addEvent@evVal& (0+255),b
 38662   007774  0E01               	movlw	1
 38663   007776  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38664   007778  ECDE  F032         	call	_addEvent	;wreg free
 38665   00777C                     l646:
 38666                           
 38667                           ;../universalEvents.c: 134:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38668   00777C  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38669   007780  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38670   007784  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 38671   007788  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38672   00778C  0E01               	movlw	1
 38673   00778E  0101               	movlb	1	; () banked
 38674   007790  6FDF               	movwf	addEvent@evNum& (0+255),b
 38675   007792  51ED               	movf	defaultEvents@io& (0+255),w,b
 38676   007794  0D05               	mullw	5
 38677   007796  50F3               	movf	243,w,c
 38678   007798  0F08               	addlw	8
 38679   00779A  6FE0               	movwf	addEvent@evVal& (0+255),b
 38680   00779C  0E01               	movlw	1
 38681   00779E  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38682   0077A0  ECDE  F032         	call	_addEvent	;wreg free
 38683                           
 38684                           ;../universalEvents.c: 137:             break;
 38685   0077A4  0012               	return	
 38686   0077A6                     l20077:
 38687                           
 38688                           ; BSR set to: 1
 38689                           ;../universalEvents.c: 140:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 38690   0077A6  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38691   0077AA  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38692   0077AE  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 38693   0077B2  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38694   0077B6  0E00               	movlw	0
 38695   0077B8  6FDF               	movwf	addEvent@evNum& (0+255),b
 38696   0077BA  51ED               	movf	defaultEvents@io& (0+255),w,b
 38697   0077BC  0D04               	mullw	4
 38698   0077BE  50F3               	movf	243,w,c
 38699   0077C0  0F08               	addlw	8
 38700   0077C2  6FE0               	movwf	addEvent@evVal& (0+255),b
 38701   0077C4  0E01               	movlw	1
 38702   0077C6  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38703   0077C8  ECDE  F032         	call	_addEvent	;wreg free
 38704                           
 38705                           ;../universalEvents.c: 141:             break;
 38706   0077CC  0012               	return	
 38707   0077CE                     l20079:
 38708                           
 38709                           ; BSR set to: 1
 38710                           ;../universalEvents.c: 145:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 38711   0077CE  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38712   0077D2  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38713   0077D6  0E64               	movlw	100
 38714   0077D8  25EB               	addwf	defaultEvents@en& (0+255),w,b
 38715   0077DA  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 38716   0077DC  0E00               	movlw	0
 38717   0077DE  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38718   0077E0  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38719   0077E2  0E00               	movlw	0
 38720   0077E4  6FDF               	movwf	addEvent@evNum& (0+255),b
 38721   0077E6  51ED               	movf	defaultEvents@io& (0+255),w,b
 38722   0077E8  0D04               	mullw	4
 38723   0077EA  50F3               	movf	243,w,c
 38724   0077EC  0F08               	addlw	8
 38725   0077EE  6FE0               	movwf	addEvent@evVal& (0+255),b
 38726   0077F0  0E01               	movlw	1
 38727   0077F2  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38728   0077F4  ECDE  F032         	call	_addEvent	;wreg free
 38729                           
 38730                           ;../universalEvents.c: 146:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 38731   0077F8  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38732   0077FC  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38733   007800  0E2C               	movlw	44
 38734   007802  0101               	movlb	1	; () banked
 38735   007804  25EB               	addwf	defaultEvents@en& (0+255),w,b
 38736   007806  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 38737   007808  0E01               	movlw	1
 38738   00780A  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38739   00780C  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38740   00780E  0E00               	movlw	0
 38741   007810  6FDF               	movwf	addEvent@evNum& (0+255),b
 38742   007812  51ED               	movf	defaultEvents@io& (0+255),w,b
 38743   007814  0D04               	mullw	4
 38744   007816  50F3               	movf	243,w,c
 38745   007818  0F09               	addlw	9
 38746   00781A  6FE0               	movwf	addEvent@evVal& (0+255),b
 38747   00781C  0E01               	movlw	1
 38748   00781E  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38749   007820  ECDE  F032         	call	_addEvent	;wreg free
 38750                           
 38751                           ;../universalEvents.c: 147:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 38752   007824  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38753   007828  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38754   00782C  0EC8               	movlw	200
 38755   00782E  0101               	movlb	1	; () banked
 38756   007830  25EB               	addwf	defaultEvents@en& (0+255),w,b
 38757   007832  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 38758   007834  0E00               	movlw	0
 38759   007836  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38760   007838  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38761   00783A  0E00               	movlw	0
 38762   00783C  6FDF               	movwf	addEvent@evNum& (0+255),b
 38763   00783E  51ED               	movf	defaultEvents@io& (0+255),w,b
 38764   007840  0D04               	mullw	4
 38765   007842  50F3               	movf	243,w,c
 38766   007844  0F0A               	addlw	10
 38767   007846  6FE0               	movwf	addEvent@evVal& (0+255),b
 38768   007848  0E01               	movlw	1
 38769   00784A  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38770   00784C  ECDE  F032         	call	_addEvent	;wreg free
 38771                           
 38772                           ;../universalEvents.c: 149:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38773   007850  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 38774   007854  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 38775   007858  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 38776   00785C  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38777   007860  0E01               	movlw	1
 38778   007862  0101               	movlb	1	; () banked
 38779   007864  6FDF               	movwf	addEvent@evNum& (0+255),b
 38780   007866  51ED               	movf	defaultEvents@io& (0+255),w,b
 38781   007868  0D05               	mullw	5
 38782   00786A  50F3               	movf	243,w,c
 38783   00786C  0F08               	addlw	8
 38784   00786E  6FE0               	movwf	addEvent@evVal& (0+255),b
 38785   007870  0E01               	movlw	1
 38786   007872  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 38787   007874  ECDE  F032         	call	_addEvent	;wreg free
 38788                           
 38789                           ;../universalEvents.c: 150:             break;
 38790   007878  0012               	return	
 38791   00787A                     l20083:
 38792   00787A  0101               	movlb	1	; () banked
 38793   00787C  51EA               	movf	defaultEvents@type& (0+255),w,b
 38794                           
 38795                           ; Switch size 1, requested type "simple"
 38796                           ; Number of cases is 5, Range of values is 0 to 4
 38797                           ; switch strategies available:
 38798                           ; Name         Instructions Cycles
 38799                           ; simple_byte           16     9 (average)
 38800                           ;	Chosen strategy is simple_byte
 38801   00787E  0A00               	xorlw	0	; case 0
 38802   007880  B4D8               	btfsc	status,2,c
 38803   007882  D791               	goto	l20077
 38804   007884  0A01               	xorlw	1	; case 1
 38805   007886  B4D8               	btfsc	status,2,c
 38806   007888  D779               	goto	l646
 38807   00788A  0A03               	xorlw	3	; case 2
 38808   00788C  B4D8               	btfsc	status,2,c
 38809   00788E  D79F               	goto	l20079
 38810   007890  0A01               	xorlw	1	; case 3
 38811   007892  B4D8               	btfsc	status,2,c
 38812   007894  D75E               	goto	l20075
 38813   007896  0A07               	xorlw	7	; case 4
 38814   007898  0012               	return	
 38815   00789A                     __end_of_defaultEvents:
 38816                           	callstack 0
 38817                           
 38818 ;; *************** function _clearEvents *****************
 38819 ;; Defined at:
 38820 ;;		line 222 in file "../universalEvents.c"
 38821 ;; Parameters:    Size  Location     Type
 38822 ;;  io              1    wreg     unsigned char 
 38823 ;; Auto vars:     Size  Location     Type
 38824 ;;  io              1   39[BANK1 ] unsigned char 
 38825 ;; Return value:  Size  Location     Type
 38826 ;;                  1    wreg      void 
 38827 ;; Registers used:
 38828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38829 ;; Tracked objects:
 38830 ;;		On entry : 0/0
 38831 ;;		On exit  : 0/0
 38832 ;;		Unchanged: 0/0
 38833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38835 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38837 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38838 ;;Total ram usage:        1 bytes
 38839 ;; Hardware stack levels used: 1
 38840 ;; Hardware stack levels required when called: 22
 38841 ;; This function calls:
 38842 ;;		_deleteActionRange
 38843 ;;		_deleteHappeningRange
 38844 ;; This function is called by:
 38845 ;;		_defaultEvents
 38846 ;; This function uses a non-reentrant model
 38847 ;;
 38848                           
 38849                           	psect	text165
 38850   00BF22                     __ptext165:
 38851                           	callstack 0
 38852   00BF22                     _clearEvents:
 38853                           	callstack 2
 38854                           
 38855                           ;incstack = 0
 38856                           ;clearEvents@io stored from wreg
 38857   00BF22  0101               	movlb	1	; () banked
 38858   00BF24  6FE5               	movwf	clearEvents@io& (0+255),b
 38859                           
 38860                           ;../universalEvents.c: 223:     deleteActionRange((uint8_t)(uint8_t)(8 + 5*(io)), 5);
 38861   00BF26  0E05               	movlw	5
 38862   00BF28  0101               	movlb	1	; () banked
 38863   00BF2A  6FDB               	movwf	deleteActionRange@number& (0+255),b
 38864   00BF2C  51E5               	movf	clearEvents@io& (0+255),w,b
 38865   00BF2E  0D05               	mullw	5
 38866   00BF30  50F3               	movf	243,w,c
 38867   00BF32  0F08               	addlw	8
 38868   00BF34  EC9D  F04C         	call	_deleteActionRange
 38869                           
 38870                           ;../universalEvents.c: 224:     deleteActionRange((uint8_t)(uint8_t)((8 + 5*(io)) | 0x80
      +                          ), 5);
 38871   00BF38  0E05               	movlw	5
 38872   00BF3A  0101               	movlb	1	; () banked
 38873   00BF3C  6FDB               	movwf	deleteActionRange@number& (0+255),b
 38874   00BF3E  51E5               	movf	clearEvents@io& (0+255),w,b
 38875   00BF40  0D05               	mullw	5
 38876   00BF42  50F3               	movf	243,w,c
 38877   00BF44  0F08               	addlw	8
 38878   00BF46  0980               	iorlw	128
 38879   00BF48  EC9D  F04C         	call	_deleteActionRange
 38880                           
 38881                           ;../universalEvents.c: 225:     deleteHappeningRange((8 + 4*(io)), 4);
 38882   00BF4C  0E04               	movlw	4
 38883   00BF4E  0101               	movlb	1	; () banked
 38884   00BF50  6FDB               	movwf	deleteHappeningRange@number& (0+255),b
 38885   00BF52  51E5               	movf	clearEvents@io& (0+255),w,b
 38886   00BF54  0D04               	mullw	4
 38887   00BF56  50F3               	movf	243,w,c
 38888   00BF58  0F08               	addlw	8
 38889   00BF5A  ECE1  F045         	call	_deleteHappeningRange
 38890   00BF5E  0012               	return		;funcret
 38891   00BF60                     __end_of_clearEvents:
 38892                           	callstack 0
 38893                           
 38894 ;; *************** function _deleteHappeningRange *****************
 38895 ;; Defined at:
 38896 ;;		line 287 in file "../../VLCBlib_PIC/event_producer_happening.c"
 38897 ;; Parameters:    Size  Location     Type
 38898 ;;  happening       1    wreg     unsigned char 
 38899 ;;  number          1   29[BANK1 ] unsigned char 
 38900 ;; Auto vars:     Size  Location     Type
 38901 ;;  happening       1   35[BANK1 ] unsigned char 
 38902 ;;  h               1   36[BANK1 ] unsigned char 
 38903 ;;  f               1    0        struct .
 38904 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 38905 ;; Return value:  Size  Location     Type
 38906 ;;                  1    wreg      void 
 38907 ;; Registers used:
 38908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38909 ;; Tracked objects:
 38910 ;;		On entry : 0/0
 38911 ;;		On exit  : 0/0
 38912 ;;		Unchanged: 0/0
 38913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38914 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38915 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38916 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38917 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38918 ;;Total ram usage:        9 bytes
 38919 ;; Hardware stack levels used: 1
 38920 ;; Hardware stack levels required when called: 21
 38921 ;; This function calls:
 38922 ;;		_checkRemoveTableEntry
 38923 ;;		_flushFlashBlock
 38924 ;;		_readNVM
 38925 ;;		_rebuildHashtable
 38926 ;;		_validStart
 38927 ;;		_writeEv
 38928 ;; This function is called by:
 38929 ;;		_clearEvents
 38930 ;; This function uses a non-reentrant model
 38931 ;;
 38932                           
 38933                           	psect	text166
 38934   008BC2                     __ptext166:
 38935                           	callstack 0
 38936   008BC2                     _deleteHappeningRange:
 38937                           	callstack 2
 38938                           
 38939                           ;incstack = 0
 38940                           ;deleteHappeningRange@happening stored from wreg
 38941   008BC2  0101               	movlb	1	; () banked
 38942   008BC4  6FE1               	movwf	deleteHappeningRange@happening& (0+255),b
 38943                           
 38944                           ;../../VLCBlib_PIC/event_producer_happening.c: 288:     uint8_t tableIndex;;../../VLCBli
      +                          b_PIC/event_producer_happening.c: 289:     for (tableIndex=0; tableIndex < 255; tableInd
      +                          ex++) {
 38945   008BC6  0E00               	movlw	0
 38946   008BC8  0101               	movlb	1	; () banked
 38947   008BCA  6FE3               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 38948   008BCC                     l19793:
 38949                           
 38950                           ; BSR set to: 1
 38951                           ;../../VLCBlib_PIC/event_producer_happening.c: 290:         if ( validStart(tableIndex))
      +                           {
 38952   008BCC  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38953   008BCE  EC78  F05D         	call	_validStart
 38954   008BD2  0900               	iorlw	0
 38955   008BD4  B4D8               	btfsc	status,2,c
 38956   008BD6  D059               	goto	l19805
 38957   008BD8  0101               	movlb	1	; () banked
 38958   008BDA  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38959   008BDC  6FDC               	movwf	??_deleteHappeningRange& (0+255),b
 38960   008BDE  6BDD               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38961   008BE0  3BDC               	swapf	??_deleteHappeningRange& (0+255),f,b
 38962   008BE2  3BDD               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 38963   008BE4  0EF0               	movlw	240
 38964   008BE6  17DD               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38965   008BE8  51DC               	movf	??_deleteHappeningRange& (0+255),w,b
 38966   008BEA  0B0F               	andlw	15
 38967   008BEC  13DD               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38968   008BEE  0EF0               	movlw	240
 38969   008BF0  17DC               	andwf	??_deleteHappeningRange& (0+255),f,b
 38970   008BF2  0E80               	movlw	128
 38971   008BF4  25DC               	addwf	??_deleteHappeningRange& (0+255),w,b
 38972   008BF6  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38973   008BF8  0EEF               	movlw	239
 38974   008BFA  21DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38975   008BFC  6FDF               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38976   008BFE  C1DE  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38977   008C02  C1DF  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38978   008C06  0100               	movlb	0	; () banked
 38979   008C08  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38980   008C0A  0E01               	movlw	1
 38981   008C0C  EC0F  F05B         	call	_readNVM
 38982                           
 38983                           ;../../VLCBlib_PIC/event_producer_happening.c: 295:             h = (Happening)readNVM(F
      +                          LASH_NVM_TYPE,
 38984   008C10  0101               	movlb	1	; () banked
 38985   008C12  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38986   008C14  0D10               	mullw	16
 38987   008C16  CFF3 F1DC          	movff	prodl,??_deleteHappeningRange
 38988   008C1A  CFF4 F1DD          	movff	prodh,??_deleteHappeningRange+1
 38989   008C1E  0E86               	movlw	134
 38990   008C20  25DC               	addwf	??_deleteHappeningRange& (0+255),w,b
 38991   008C22  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38992   008C24  0EEF               	movlw	239
 38993   008C26  21DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38994   008C28  6FDF               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38995   008C2A  C1DE  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38996   008C2E  C1DF  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38997   008C32  0100               	movlb	0	; () banked
 38998   008C34  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38999   008C36  0E01               	movlw	1
 39000   008C38  EC0F  F05B         	call	_readNVM
 39001   008C3C  0100               	movlb	0	; () banked
 39002   008C3E  5191               	movf	?_readNVM& (0+255),w,b
 39003   008C40  0101               	movlb	1	; () banked
 39004   008C42  6FE2               	movwf	deleteHappeningRange@h& (0+255),b
 39005                           
 39006                           ; BSR set to: 1
 39007                           ;../../VLCBlib_PIC/event_producer_happening.c: 297:             if ((h >= happening) && 
      +                          (h < happening+number)) {
 39008   008C44  51E1               	movf	deleteHappeningRange@happening& (0+255),w,b
 39009   008C46  5DE2               	subwf	deleteHappeningRange@h& (0+255),w,b
 39010   008C48  A0D8               	btfss	status,0,c
 39011   008C4A  D01F               	goto	l19805
 39012                           
 39013                           ; BSR set to: 1
 39014   008C4C  51DB               	movf	deleteHappeningRange@number& (0+255),w,b
 39015   008C4E  C1E1  F1DC         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 39016   008C52  6BDD               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 39017   008C54  27DC               	addwf	??_deleteHappeningRange& (0+255),f,b
 39018   008C56  0E00               	movlw	0
 39019   008C58  23DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 39020   008C5A  51E2               	movf	deleteHappeningRange@h& (0+255),w,b
 39021   008C5C  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 39022   008C5E  6BDF               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 39023   008C60  51DC               	movf	??_deleteHappeningRange& (0+255),w,b
 39024   008C62  5DDE               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 39025   008C64  51DF               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 39026   008C66  0A80               	xorlw	128
 39027   008C68  6FE0               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 39028   008C6A  51DD               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 39029   008C6C  0A80               	xorlw	128
 39030   008C6E  59E0               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 39031   008C70  B0D8               	btfsc	status,0,c
 39032   008C72  D00B               	goto	l19805
 39033                           
 39034                           ; BSR set to: 1
 39035                           ;../../VLCBlib_PIC/event_producer_happening.c: 298:                 writeEv(tableIndex, 
      +                          0, 0);
 39036   008C74  0E00               	movlw	0
 39037   008C76  6FCF               	movwf	writeEv@evNum& (0+255),b
 39038   008C78  0E00               	movlw	0
 39039   008C7A  6FD0               	movwf	writeEv@evVal& (0+255),b
 39040   008C7C  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 39041   008C7E  EC4F  F01B         	call	_writeEv
 39042                           
 39043                           ;../../VLCBlib_PIC/event_producer_happening.c: 299:                 checkRemoveTableEntr
      +                          y(tableIndex);
 39044   008C82  0101               	movlb	1	; () banked
 39045   008C84  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 39046   008C86  ECC9  F05E         	call	_checkRemoveTableEntry
 39047   008C8A                     l19805:
 39048                           
 39049                           ;../../VLCBlib_PIC/event_producer_happening.c: 302:     }
 39050   008C8A  0101               	movlb	1	; () banked
 39051   008C8C  2BE3               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 39052                           
 39053                           ; BSR set to: 1
 39054   008C8E  29E3               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 39055   008C90  A4D8               	btfss	status,2,c
 39056   008C92  D79C               	goto	l19793
 39057                           
 39058                           ; BSR set to: 1
 39059                           ;../../VLCBlib_PIC/event_producer_happening.c: 303:     flushFlashBlock();
 39060   008C94  EC9C  F054         	call	_flushFlashBlock	;wreg free
 39061                           
 39062                           ;../../VLCBlib_PIC/event_producer_happening.c: 304:     rebuildHashtable();
 39063   008C98  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 39064   008C9C  0012               	return		;funcret
 39065   008C9E                     __end_of_deleteHappeningRange:
 39066                           	callstack 0
 39067                           
 39068 ;; *************** function _deleteActionRange *****************
 39069 ;; Defined at:
 39070 ;;		line 529 in file "../event_consumerDualActionQueue.c"
 39071 ;; Parameters:    Size  Location     Type
 39072 ;;  action          1    wreg     unsigned char 
 39073 ;;  number          1   29[BANK1 ] unsigned char 
 39074 ;; Auto vars:     Size  Location     Type
 39075 ;;  action          1   36[BANK1 ] unsigned char 
 39076 ;;  e               1   37[BANK1 ] unsigned char 
 39077 ;;  updated         1   35[BANK1 ] enum E12766
 39078 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 39079 ;; Return value:  Size  Location     Type
 39080 ;;                  1    wreg      void 
 39081 ;; Registers used:
 39082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39083 ;; Tracked objects:
 39084 ;;		On entry : 0/0
 39085 ;;		On exit  : 0/0
 39086 ;;		Unchanged: 0/0
 39087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39088 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39089 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39090 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39091 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39092 ;;Total ram usage:       10 bytes
 39093 ;; Hardware stack levels used: 1
 39094 ;; Hardware stack levels required when called: 21
 39095 ;; This function calls:
 39096 ;;		_checkRemoveTableEntry
 39097 ;;		_flushFlashBlock
 39098 ;;		_getEVs
 39099 ;;		_rebuildHashtable
 39100 ;;		_validStart
 39101 ;;		_writeEv
 39102 ;; This function is called by:
 39103 ;;		_clearEvents
 39104 ;; This function uses a non-reentrant model
 39105 ;;
 39106                           
 39107                           	psect	text167
 39108   00993A                     __ptext167:
 39109                           	callstack 0
 39110   00993A                     _deleteActionRange:
 39111                           	callstack 2
 39112                           
 39113                           ;incstack = 0
 39114                           ;deleteActionRange@action stored from wreg
 39115   00993A  0101               	movlb	1	; () banked
 39116   00993C  6FE2               	movwf	deleteActionRange@action& (0+255),b
 39117                           
 39118                           ;../event_consumerDualActionQueue.c: 530:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 531:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 39119   00993E  0E00               	movlw	0
 39120   009940  0101               	movlb	1	; () banked
 39121   009942  6FE4               	movwf	deleteActionRange@tableIndex& (0+255),b
 39122   009944                     l19749:
 39123                           
 39124                           ; BSR set to: 1
 39125                           ;../event_consumerDualActionQueue.c: 532:         if (validStart(tableIndex)) {
 39126   009944  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39127   009946  EC78  F05D         	call	_validStart
 39128   00994A  0900               	iorlw	0
 39129   00994C  B4D8               	btfsc	status,2,c
 39130   00994E  D044               	goto	l19779
 39131                           
 39132                           ;../event_consumerDualActionQueue.c: 533:             Boolean updated = FALSE;
 39133   009950  0E00               	movlw	0
 39134   009952  0101               	movlb	1	; () banked
 39135   009954  6FE1               	movwf	deleteActionRange@updated& (0+255),b
 39136                           
 39137                           ; BSR set to: 1
 39138                           ;../event_consumerDualActionQueue.c: 534:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 535:             if (getEVs(tableIndex)) {
 39139   009956  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39140   009958  EC35  F042         	call	_getEVs
 39141   00995C  0900               	iorlw	0
 39142   00995E  A4D8               	btfss	status,2,c
 39143   009960  0012               	return	
 39144                           
 39145                           ;../event_consumerDualActionQueue.c: 539:             for (e=1; e<20; e++) {
 39146   009962  0E01               	movlw	1
 39147   009964  0101               	movlb	1	; () banked
 39148   009966  6FE3               	movwf	deleteActionRange@e& (0+255),b
 39149   009968                     l19763:
 39150                           
 39151                           ; BSR set to: 1
 39152                           ;../event_consumerDualActionQueue.c: 540:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 39153   009968  0E20               	movlw	low _evs
 39154   00996A  25E3               	addwf	deleteActionRange@e& (0+255),w,b
 39155   00996C  6ED9               	movwf	fsr2l,c
 39156   00996E  6ADA               	clrf	fsr2h,c
 39157   009970  0E02               	movlw	high _evs
 39158   009972  22DA               	addwfc	fsr2h,f,c
 39159   009974  51E2               	movf	deleteActionRange@action& (0+255),w,b
 39160   009976  5CDE               	subwf	postinc2,w,c
 39161   009978  A0D8               	btfss	status,0,c
 39162   00997A  D024               	goto	l19771
 39163                           
 39164                           ; BSR set to: 1
 39165   00997C  51DB               	movf	deleteActionRange@number& (0+255),w,b
 39166   00997E  C1E2  F1DC         	movff	deleteActionRange@action,??_deleteActionRange
 39167   009982  6BDD               	clrf	(??_deleteActionRange+1)& (0+255),b
 39168   009984  27DC               	addwf	??_deleteActionRange& (0+255),f,b
 39169   009986  0E00               	movlw	0
 39170   009988  23DD               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 39171   00998A  0E20               	movlw	low _evs
 39172   00998C  25E3               	addwf	deleteActionRange@e& (0+255),w,b
 39173   00998E  6ED9               	movwf	fsr2l,c
 39174   009990  6ADA               	clrf	fsr2h,c
 39175   009992  0E02               	movlw	high _evs
 39176   009994  22DA               	addwfc	fsr2h,f,c
 39177   009996  50DF               	movf	indf2,w,c
 39178   009998  6FDE               	movwf	(??_deleteActionRange+2)& (0+255),b
 39179   00999A  6BDF               	clrf	(??_deleteActionRange+3)& (0+255),b
 39180   00999C  51DC               	movf	??_deleteActionRange& (0+255),w,b
 39181   00999E  5DDE               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 39182   0099A0  51DF               	movf	(??_deleteActionRange+3)& (0+255),w,b
 39183   0099A2  0A80               	xorlw	128
 39184   0099A4  6FE0               	movwf	(??_deleteActionRange+4)& (0+255),b
 39185   0099A6  51DD               	movf	(??_deleteActionRange+1)& (0+255),w,b
 39186   0099A8  0A80               	xorlw	128
 39187   0099AA  59E0               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 39188   0099AC  B0D8               	btfsc	status,0,c
 39189   0099AE  D00A               	goto	l19771
 39190                           
 39191                           ; BSR set to: 1
 39192                           ;../event_consumerDualActionQueue.c: 541:                     writeEv(tableIndex, e, 0);
 39193   0099B0  C1E3  F1CF         	movff	deleteActionRange@e,writeEv@evNum
 39194   0099B4  0E00               	movlw	0
 39195   0099B6  6FD0               	movwf	writeEv@evVal& (0+255),b
 39196   0099B8  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39197   0099BA  EC4F  F01B         	call	_writeEv
 39198                           
 39199                           ;../event_consumerDualActionQueue.c: 542:                     updated = TRUE;
 39200   0099BE  0E01               	movlw	1
 39201   0099C0  0101               	movlb	1	; () banked
 39202   0099C2  6FE1               	movwf	deleteActionRange@updated& (0+255),b
 39203   0099C4                     l19771:
 39204                           
 39205                           ; BSR set to: 1
 39206                           ;../event_consumerDualActionQueue.c: 544:             }
 39207   0099C4  2BE3               	incf	deleteActionRange@e& (0+255),f,b
 39208                           
 39209                           ; BSR set to: 1
 39210   0099C6  0E13               	movlw	19
 39211   0099C8  65E3               	cpfsgt	deleteActionRange@e& (0+255),b
 39212   0099CA  D7CE               	goto	l19763
 39213                           
 39214                           ; BSR set to: 1
 39215                           ;../event_consumerDualActionQueue.c: 545:             if (updated) {
 39216   0099CC  51E1               	movf	deleteActionRange@updated& (0+255),w,b
 39217   0099CE  B4D8               	btfsc	status,2,c
 39218   0099D0  D003               	goto	l19779
 39219                           
 39220                           ; BSR set to: 1
 39221                           ;../event_consumerDualActionQueue.c: 546:                 checkRemoveTableEntry(tableInd
      +                          ex);
 39222   0099D2  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 39223   0099D4  ECC9  F05E         	call	_checkRemoveTableEntry
 39224   0099D8                     l19779:
 39225                           
 39226                           ;../event_consumerDualActionQueue.c: 549:     }
 39227   0099D8  0101               	movlb	1	; () banked
 39228   0099DA  2BE4               	incf	deleteActionRange@tableIndex& (0+255),f,b
 39229                           
 39230                           ; BSR set to: 1
 39231   0099DC  29E4               	incf	deleteActionRange@tableIndex& (0+255),w,b
 39232   0099DE  A4D8               	btfss	status,2,c
 39233   0099E0  D7B1               	goto	l19749
 39234                           
 39235                           ; BSR set to: 1
 39236                           ;../event_consumerDualActionQueue.c: 550:     flushFlashBlock();
 39237   0099E2  EC9C  F054         	call	_flushFlashBlock	;wreg free
 39238                           
 39239                           ;../event_consumerDualActionQueue.c: 552:     rebuildHashtable();
 39240   0099E6  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 39241   0099EA  0012               	return		;funcret
 39242   0099EC                     __end_of_deleteActionRange:
 39243                           	callstack 0
 39244                           
 39245 ;; *************** function _addEvent *****************
 39246 ;; Defined at:
 39247 ;;		line 951 in file "../../VLCBlib_PIC/event_teach_large.c"
 39248 ;; Parameters:    Size  Location     Type
 39249 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 39250 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 39251 ;;  evNum           1   33[BANK1 ] unsigned char 
 39252 ;;  evVal           1   34[BANK1 ] unsigned char 
 39253 ;;  forceOwnNN      1   35[BANK1 ] enum E12766
 39254 ;; Auto vars:     Size  Location     Type
 39255 ;;  e               1   42[BANK1 ] unsigned char 
 39256 ;;  f               1   41[BANK1 ] struct .
 39257 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 39258 ;;  error           1   40[BANK1 ] unsigned char 
 39259 ;; Return value:  Size  Location     Type
 39260 ;;                  1    wreg      unsigned char 
 39261 ;; Registers used:
 39262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39263 ;; Tracked objects:
 39264 ;;		On entry : 0/0
 39265 ;;		On exit  : 0/0
 39266 ;;		Unchanged: 0/0
 39267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39268 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39269 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39270 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39271 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39272 ;;Total ram usage:       15 bytes
 39273 ;; Hardware stack levels used: 1
 39274 ;; Hardware stack levels required when called: 21
 39275 ;; This function calls:
 39276 ;;		_findEvent
 39277 ;;		_flushFlashBlock
 39278 ;;		_readNVM
 39279 ;;		_rebuildHashtable
 39280 ;;		_writeEv
 39281 ;;		_writeNVM
 39282 ;; This function is called by:
 39283 ;;		_defaultEvents
 39284 ;;		_APP_addEvent
 39285 ;; This function uses a non-reentrant model
 39286 ;;
 39287                           
 39288                           	psect	text168
 39289   0065BC                     __ptext168:
 39290                           	callstack 0
 39291   0065BC                     _addEvent:
 39292                           	callstack 5
 39293                           
 39294                           ;../../VLCBlib_PIC/event_teach_large.c: 952:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 953:     uint8_t error;;../../VLCBlib_PIC/event_teach_large.c: 955: 
      +                              tableIndex = findEvent(nodeNumber, eventNumber);
 39295                           
 39296                           ;incstack = 0
 39297   0065BC  C1DB  F1BE         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 39298   0065C0  C1DC  F1BF         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 39299   0065C4  C1DD  F1C0         	movff	addEvent@eventNumber,findEvent@eventNumber
 39300   0065C8  C1DE  F1C1         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 39301   0065CC  ECF8  F052         	call	_findEvent	;wreg free
 39302   0065D0  0101               	movlb	1	; () banked
 39303   0065D2  6FE9               	movwf	addEvent@tableIndex& (0+255),b
 39304                           
 39305                           ; BSR set to: 1
 39306                           ;../../VLCBlib_PIC/event_teach_large.c: 956:     if (tableIndex == 0xff) {
 39307   0065D4  29E9               	incf	addEvent@tableIndex& (0+255),w,b
 39308   0065D6  A4D8               	btfss	status,2,c
 39309   0065D8  D0E2               	goto	l19915
 39310                           
 39311                           ; BSR set to: 1
 39312                           ;../../VLCBlib_PIC/event_teach_large.c: 962:         if (evVal == 0) {
 39313   0065DA  51E0               	movf	addEvent@evVal& (0+255),w,b
 39314   0065DC  A4D8               	btfss	status,2,c
 39315   0065DE  D002               	goto	l19873
 39316   0065E0                     u19790:
 39317                           
 39318                           ;../../VLCBlib_PIC/event_teach_large.c: 963:             return 0;
 39319   0065E0  0E00               	movlw	0
 39320   0065E2  0012               	return	
 39321   0065E4                     l19873:
 39322                           
 39323                           ; BSR set to: 1
 39324                           ;../../VLCBlib_PIC/event_teach_large.c: 965:         error = 1;
 39325   0065E4  0E01               	movlw	1
 39326   0065E6  6FE6               	movwf	addEvent@error& (0+255),b
 39327                           
 39328                           ;../../VLCBlib_PIC/event_teach_large.c: 967:         for (tableIndex=0; tableIndex<255; 
      +                          tableIndex++) {
 39329   0065E8  0E00               	movlw	0
 39330   0065EA  6FE9               	movwf	addEvent@tableIndex& (0+255),b
 39331   0065EC                     l19879:
 39332                           
 39333                           ; BSR set to: 1
 39334                           ;../../VLCBlib_PIC/event_teach_large.c: 968:             EventTableFlags f;;../../VLCBli
      +                          b_PIC/event_teach_large.c: 969:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 39335   0065EC  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39336   0065EE  6FE2               	movwf	??_addEvent& (0+255),b
 39337   0065F0  6BE3               	clrf	(??_addEvent+1)& (0+255),b
 39338   0065F2  3BE2               	swapf	??_addEvent& (0+255),f,b
 39339   0065F4  3BE3               	swapf	(??_addEvent+1)& (0+255),f,b
 39340   0065F6  0EF0               	movlw	240
 39341   0065F8  17E3               	andwf	(??_addEvent+1)& (0+255),f,b
 39342   0065FA  51E2               	movf	??_addEvent& (0+255),w,b
 39343   0065FC  0B0F               	andlw	15
 39344   0065FE  13E3               	iorwf	(??_addEvent+1)& (0+255),f,b
 39345   006600  0EF0               	movlw	240
 39346   006602  17E2               	andwf	??_addEvent& (0+255),f,b
 39347   006604  0E80               	movlw	128
 39348   006606  25E2               	addwf	??_addEvent& (0+255),w,b
 39349   006608  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39350   00660A  0EEF               	movlw	239
 39351   00660C  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39352   00660E  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39353   006610  C1E4  F091         	movff	??_addEvent+2,readNVM@index
 39354   006614  C1E5  F092         	movff	??_addEvent+3,readNVM@index+1
 39355   006618  0100               	movlb	0	; () banked
 39356   00661A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39357   00661C  0E01               	movlw	1
 39358   00661E  EC0F  F05B         	call	_readNVM
 39359   006622  0100               	movlb	0	; () banked
 39360   006624  5191               	movf	?_readNVM& (0+255),w,b
 39361   006626  0101               	movlb	1	; () banked
 39362   006628  6FE7               	movwf	addEvent@f& (0+255),b
 39363                           
 39364                           ; BSR set to: 1
 39365                           ;../../VLCBlib_PIC/event_teach_large.c: 970:             if (f.freeEntry) {
 39366   00662A  AFE7               	btfss	addEvent@f& (0+255),7,b
 39367   00662C  D0AF               	goto	l19905
 39368                           
 39369                           ; BSR set to: 1
 39370                           ;../../VLCBlib_PIC/event_teach_large.c: 971:                 uint8_t e;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 973:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+2, nodeNumber&0xFF);
 39371   00662E  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39372   006630  0D10               	mullw	16
 39373   006632  CFF3 F1E2          	movff	prodl,??_addEvent
 39374   006636  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39375   00663A  0E82               	movlw	130
 39376   00663C  25E2               	addwf	??_addEvent& (0+255),w,b
 39377   00663E  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39378   006640  0EEF               	movlw	239
 39379   006642  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39380   006644  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39381   006646  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39382   00664A  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39383   00664E  0100               	movlb	0	; () banked
 39384   006650  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39385   006652  C1DB  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 39386   006656  0E01               	movlw	1
 39387   006658  EC9F  F05D         	call	_writeNVM
 39388                           
 39389                           ;../../VLCBlib_PIC/event_teach_large.c: 974:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+2 +1, nodeNumber>>8);
 39390   00665C  0101               	movlb	1	; () banked
 39391   00665E  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39392   006660  0D10               	mullw	16
 39393   006662  CFF3 F1E2          	movff	prodl,??_addEvent
 39394   006666  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39395   00666A  0E83               	movlw	131
 39396   00666C  25E2               	addwf	??_addEvent& (0+255),w,b
 39397   00666E  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39398   006670  0EEF               	movlw	239
 39399   006672  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39400   006674  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39401   006676  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39402   00667A  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39403   00667E  0100               	movlb	0	; () banked
 39404   006680  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39405   006682  0101               	movlb	1	; () banked
 39406   006684  51DC               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 39407   006686  0100               	movlb	0	; () banked
 39408   006688  6FA7               	movwf	writeNVM@value& (0+255),b
 39409   00668A  0E01               	movlw	1
 39410   00668C  EC9F  F05D         	call	_writeNVM
 39411                           
 39412                           ;../../VLCBlib_PIC/event_teach_large.c: 975:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4, eventNumber&0xFF);
 39413   006690  0101               	movlb	1	; () banked
 39414   006692  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39415   006694  0D10               	mullw	16
 39416   006696  CFF3 F1E2          	movff	prodl,??_addEvent
 39417   00669A  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39418   00669E  0E84               	movlw	132
 39419   0066A0  25E2               	addwf	??_addEvent& (0+255),w,b
 39420   0066A2  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39421   0066A4  0EEF               	movlw	239
 39422   0066A6  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39423   0066A8  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39424   0066AA  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39425   0066AE  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39426   0066B2  0100               	movlb	0	; () banked
 39427   0066B4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39428   0066B6  C1DD  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 39429   0066BA  0E01               	movlw	1
 39430   0066BC  EC9F  F05D         	call	_writeNVM
 39431                           
 39432                           ;../../VLCBlib_PIC/event_teach_large.c: 976:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4 +1, eventNumber>>8);
 39433   0066C0  0101               	movlb	1	; () banked
 39434   0066C2  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39435   0066C4  0D10               	mullw	16
 39436   0066C6  CFF3 F1E2          	movff	prodl,??_addEvent
 39437   0066CA  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39438   0066CE  0E85               	movlw	133
 39439   0066D0  25E2               	addwf	??_addEvent& (0+255),w,b
 39440   0066D2  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39441   0066D4  0EEF               	movlw	239
 39442   0066D6  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39443   0066D8  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39444   0066DA  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39445   0066DE  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39446   0066E2  0100               	movlb	0	; () banked
 39447   0066E4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39448   0066E6  0101               	movlb	1	; () banked
 39449   0066E8  51DE               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 39450   0066EA  0100               	movlb	0	; () banked
 39451   0066EC  6FA7               	movwf	writeNVM@value& (0+255),b
 39452   0066EE  0E01               	movlw	1
 39453   0066F0  EC9F  F05D         	call	_writeNVM
 39454                           
 39455                           ;../../VLCBlib_PIC/event_teach_large.c: 977:                 f.asByte = 0;
 39456   0066F4  0E00               	movlw	0
 39457   0066F6  0101               	movlb	1	; () banked
 39458   0066F8  6FE7               	movwf	addEvent@f& (0+255),b
 39459                           
 39460                           ; BSR set to: 1
 39461                           ;../../VLCBlib_PIC/event_teach_large.c: 978:                 f.forceOwnNN = forceOwnNN;
 39462   0066FA  B1E1               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 39463   0066FC  D002               	bra	u19815
 39464   0066FE  9DE7               	bcf	addEvent@f& (0+255),6,b
 39465   006700  D002               	bra	u19816
 39466   006702                     u19815:
 39467   006702  0101               	movlb	1	; () banked
 39468   006704  8DE7               	bsf	addEvent@f& (0+255),6,b
 39469   006706                     u19816:
 39470                           
 39471                           ; BSR set to: 1
 39472                           ;../../VLCBlib_PIC/event_teach_large.c: 979:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0, f.asByte);
 39473   006706  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39474   006708  6FE2               	movwf	??_addEvent& (0+255),b
 39475   00670A  6BE3               	clrf	(??_addEvent+1)& (0+255),b
 39476   00670C  3BE2               	swapf	??_addEvent& (0+255),f,b
 39477   00670E  3BE3               	swapf	(??_addEvent+1)& (0+255),f,b
 39478   006710  0EF0               	movlw	240
 39479   006712  17E3               	andwf	(??_addEvent+1)& (0+255),f,b
 39480   006714  51E2               	movf	??_addEvent& (0+255),w,b
 39481   006716  0B0F               	andlw	15
 39482   006718  13E3               	iorwf	(??_addEvent+1)& (0+255),f,b
 39483   00671A  0EF0               	movlw	240
 39484   00671C  17E2               	andwf	??_addEvent& (0+255),f,b
 39485   00671E  0E80               	movlw	128
 39486   006720  25E2               	addwf	??_addEvent& (0+255),w,b
 39487   006722  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39488   006724  0EEF               	movlw	239
 39489   006726  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39490   006728  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39491   00672A  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39492   00672E  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39493   006732  0100               	movlb	0	; () banked
 39494   006734  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39495   006736  C1E7  F0A7         	movff	addEvent@f,writeNVM@value
 39496   00673A  0E01               	movlw	1
 39497   00673C  EC9F  F05D         	call	_writeNVM
 39498                           
 39499                           ;../../VLCBlib_PIC/event_teach_large.c: 981:                 for (e = 0; e < 10; e++) {
 39500   006740  0E00               	movlw	0
 39501   006742  0101               	movlb	1	; () banked
 39502   006744  6FE8               	movwf	addEvent@e& (0+255),b
 39503   006746                     l19897:
 39504                           
 39505                           ; BSR set to: 1
 39506                           ;../../VLCBlib_PIC/event_teach_large.c: 982:                     writeNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +e, 0);
 39507   006746  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39508   006748  0D10               	mullw	16
 39509   00674A  CFF3 F1E2          	movff	prodl,??_addEvent
 39510   00674E  CFF4 F1E3          	movff	prodh,??_addEvent+1
 39511   006752  51E8               	movf	addEvent@e& (0+255),w,b
 39512   006754  27E2               	addwf	??_addEvent& (0+255),f,b
 39513   006756  0E00               	movlw	0
 39514   006758  23E3               	addwfc	(??_addEvent+1)& (0+255),f,b
 39515   00675A  0E86               	movlw	134
 39516   00675C  25E2               	addwf	??_addEvent& (0+255),w,b
 39517   00675E  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 39518   006760  0EEF               	movlw	239
 39519   006762  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 39520   006764  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 39521   006766  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 39522   00676A  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 39523   00676E  0100               	movlb	0	; () banked
 39524   006770  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39525   006772  0E00               	movlw	0
 39526   006774  6FA7               	movwf	writeNVM@value& (0+255),b
 39527   006776  0E01               	movlw	1
 39528   006778  EC9F  F05D         	call	_writeNVM
 39529                           
 39530                           ;../../VLCBlib_PIC/event_teach_large.c: 983:                 }
 39531   00677C  0101               	movlb	1	; () banked
 39532   00677E  2BE8               	incf	addEvent@e& (0+255),f,b
 39533                           
 39534                           ; BSR set to: 1
 39535   006780  0E09               	movlw	9
 39536   006782  65E8               	cpfsgt	addEvent@e& (0+255),b
 39537   006784  D7E0               	goto	l19897
 39538                           
 39539                           ; BSR set to: 1
 39540                           ;../../VLCBlib_PIC/event_teach_large.c: 984:                 error = 0;
 39541   006786  0E00               	movlw	0
 39542   006788  6FE6               	movwf	addEvent@error& (0+255),b
 39543                           
 39544                           ;../../VLCBlib_PIC/event_teach_large.c: 985:                 break;
 39545   00678A  D004               	goto	u19830
 39546   00678C                     l19905:
 39547                           
 39548                           ; BSR set to: 1
 39549                           ;../../VLCBlib_PIC/event_teach_large.c: 987:         }
 39550   00678C  2BE9               	incf	addEvent@tableIndex& (0+255),f,b
 39551                           
 39552                           ; BSR set to: 1
 39553   00678E  29E9               	incf	addEvent@tableIndex& (0+255),w,b
 39554   006790  A4D8               	btfss	status,2,c
 39555   006792  D72C               	goto	l19879
 39556   006794                     u19830:
 39557                           
 39558                           ; BSR set to: 1
 39559                           ;../../VLCBlib_PIC/event_teach_large.c: 988:         if (error) {
 39560   006794  51E6               	movf	addEvent@error& (0+255),w,b
 39561   006796  B4D8               	btfsc	status,2,c
 39562   006798  D002               	goto	l19915
 39563                           
 39564                           ; BSR set to: 1
 39565                           ;../../VLCBlib_PIC/event_teach_large.c: 989:             return CMDERR_TOO_MANY_EVENTS;
 39566   00679A  0E04               	movlw	4
 39567   00679C  0012               	return	
 39568   00679E                     l19915:
 39569                           
 39570                           ; BSR set to: 1
 39571                           ;../../VLCBlib_PIC/event_teach_large.c: 993:     if (writeEv(tableIndex, evNum, evVal)) 
      +                          {
 39572   00679E  C1DF  F1CF         	movff	addEvent@evNum,writeEv@evNum
 39573   0067A2  C1E0  F1D0         	movff	addEvent@evVal,writeEv@evVal
 39574   0067A6  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 39575   0067A8  EC4F  F01B         	call	_writeEv
 39576   0067AC  0900               	iorlw	0
 39577   0067AE  B4D8               	btfsc	status,2,c
 39578   0067B0  D002               	goto	l19921
 39579                           
 39580                           ;../../VLCBlib_PIC/event_teach_large.c: 995:         return CMDERR_INV_EV_IDX;
 39581   0067B2  0E06               	movlw	6
 39582   0067B4  0012               	return	
 39583   0067B6                     l19921:
 39584                           
 39585                           ;../../VLCBlib_PIC/event_teach_large.c: 998:     flushFlashBlock();
 39586   0067B6  EC9C  F054         	call	_flushFlashBlock	;wreg free
 39587                           
 39588                           ;../../VLCBlib_PIC/event_teach_large.c: 1000:     rebuildHashtable();
 39589   0067BA  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 39590   0067BE  D710               	goto	u19790
 39591   0067C0                     __end_of_addEvent:
 39592                           	callstack 0
 39593                           
 39594 ;; *************** function _writeEv *****************
 39595 ;; Defined at:
 39596 ;;		line 1052 in file "../../VLCBlib_PIC/event_teach_large.c"
 39597 ;; Parameters:    Size  Location     Type
 39598 ;;  tableIndex      1    wreg     unsigned char 
 39599 ;;  evNum           1   17[BANK1 ] unsigned char 
 39600 ;;  evVal           1   18[BANK1 ] unsigned char 
 39601 ;; Auto vars:     Size  Location     Type
 39602 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 39603 ;;  e               1   25[BANK1 ] unsigned char 
 39604 ;;  nextF           1   24[BANK1 ] struct .
 39605 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 39606 ;;  f               1   26[BANK1 ] struct .
 39607 ;;  startIndex      1   23[BANK1 ] unsigned char 
 39608 ;; Return value:  Size  Location     Type
 39609 ;;                  1    wreg      unsigned char 
 39610 ;; Registers used:
 39611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39612 ;; Tracked objects:
 39613 ;;		On entry : 0/0
 39614 ;;		On exit  : 0/0
 39615 ;;		Unchanged: 0/0
 39616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39617 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39618 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39619 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39620 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39621 ;;Total ram usage:       12 bytes
 39622 ;; Hardware stack levels used: 1
 39623 ;; Hardware stack levels required when called: 20
 39624 ;; This function calls:
 39625 ;;		_checkRemoveTableEntry
 39626 ;;		_readNVM
 39627 ;;		_writeNVM
 39628 ;; This function is called by:
 39629 ;;		_deleteActionRange
 39630 ;;		_APP_addEvent
 39631 ;;		_addEvent
 39632 ;;		_deleteHappeningRange
 39633 ;; This function uses a non-reentrant model
 39634 ;;
 39635                           
 39636                           	psect	text169
 39637   00369E                     __ptext169:
 39638                           	callstack 0
 39639   00369E                     _writeEv:
 39640                           	callstack 6
 39641                           
 39642                           ;incstack = 0
 39643                           ;writeEv@tableIndex stored from wreg
 39644   00369E  0101               	movlb	1	; () banked
 39645   0036A0  6FD9               	movwf	writeEv@tableIndex& (0+255),b
 39646                           
 39647                           ;../../VLCBlib_PIC/event_teach_large.c: 1053:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1054:     uint8_t startIndex = tableIndex;
 39648   0036A2  C1D9  F1D5         	movff	writeEv@tableIndex,writeEv@startIndex
 39649                           
 39650                           ;../../VLCBlib_PIC/event_teach_large.c: 1055:     if (evNum >= 20) {
 39651   0036A6  0E13               	movlw	19
 39652   0036A8  0101               	movlb	1	; () banked
 39653   0036AA  65CF               	cpfsgt	writeEv@evNum& (0+255),b
 39654   0036AC  D14F               	goto	l19557
 39655                           
 39656                           ; BSR set to: 1
 39657                           ;../../VLCBlib_PIC/event_teach_large.c: 1056:         return CMDERR_INV_EV_IDX;
 39658   0036AE  0E06               	movlw	6
 39659   0036B0  0012               	return	
 39660   0036B2                     l19495:
 39661                           
 39662                           ; BSR set to: 1
 39663                           ;../../VLCBlib_PIC/event_teach_large.c: 1059:         uint8_t nextIdx;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1062:         evNum -= 10;
 39664   0036B2  0E0A               	movlw	10
 39665   0036B4  5FCF               	subwf	writeEv@evNum& (0+255),f,b
 39666                           
 39667                           ; BSR set to: 1
 39668                           ;../../VLCBlib_PIC/event_teach_large.c: 1063:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39669   0036B6  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 39670   0036B8  6FD1               	movwf	??_writeEv& (0+255),b
 39671   0036BA  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 39672   0036BC  3BD1               	swapf	??_writeEv& (0+255),f,b
 39673   0036BE  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 39674   0036C0  0EF0               	movlw	240
 39675   0036C2  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 39676   0036C4  51D1               	movf	??_writeEv& (0+255),w,b
 39677   0036C6  0B0F               	andlw	15
 39678   0036C8  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 39679   0036CA  0EF0               	movlw	240
 39680   0036CC  17D1               	andwf	??_writeEv& (0+255),f,b
 39681   0036CE  0E80               	movlw	128
 39682   0036D0  25D1               	addwf	??_writeEv& (0+255),w,b
 39683   0036D2  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39684   0036D4  0EEF               	movlw	239
 39685   0036D6  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39686   0036D8  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39687   0036DA  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 39688   0036DE  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 39689   0036E2  0100               	movlb	0	; () banked
 39690   0036E4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39691   0036E6  0E01               	movlw	1
 39692   0036E8  EC0F  F05B         	call	_readNVM
 39693   0036EC  0100               	movlb	0	; () banked
 39694   0036EE  5191               	movf	?_readNVM& (0+255),w,b
 39695   0036F0  0101               	movlb	1	; () banked
 39696   0036F2  6FD8               	movwf	writeEv@f& (0+255),b
 39697                           
 39698                           ; BSR set to: 1
 39699                           ;../../VLCBlib_PIC/event_teach_large.c: 1065:         if (f.continued) {
 39700   0036F4  A9D8               	btfss	writeEv@f& (0+255),4,b
 39701   0036F6  D01E               	goto	l19509
 39702                           
 39703                           ; BSR set to: 1
 39704                           ;../../VLCBlib_PIC/event_teach_large.c: 1066:             tableIndex = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39705   0036F8  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 39706   0036FA  0D10               	mullw	16
 39707   0036FC  CFF3 F1D1          	movff	prodl,??_writeEv
 39708   003700  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39709   003704  0E81               	movlw	129
 39710   003706  25D1               	addwf	??_writeEv& (0+255),w,b
 39711   003708  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39712   00370A  0EEF               	movlw	239
 39713   00370C  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39714   00370E  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39715   003710  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 39716   003714  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 39717   003718  0100               	movlb	0	; () banked
 39718   00371A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39719   00371C  0E01               	movlw	1
 39720   00371E  EC0F  F05B         	call	_readNVM
 39721   003722  0100               	movlb	0	; () banked
 39722   003724  5191               	movf	?_readNVM& (0+255),w,b
 39723   003726  0101               	movlb	1	; () banked
 39724   003728  6FD9               	movwf	writeEv@tableIndex& (0+255),b
 39725                           
 39726                           ; BSR set to: 1
 39727                           ;../../VLCBlib_PIC/event_teach_large.c: 1067:             if (tableIndex == 0xff) {
 39728   00372A  29D9               	incf	writeEv@tableIndex& (0+255),w,b
 39729   00372C  A4D8               	btfss	status,2,c
 39730   00372E  D10E               	goto	l19557
 39731                           
 39732                           ; BSR set to: 1
 39733                           ;../../VLCBlib_PIC/event_teach_large.c: 1068:                 return CMDERR_INVALID_EVEN
      +                          T;
 39734   003730  0E07               	movlw	7
 39735   003732  0012               	return	
 39736   003734                     l19509:
 39737                           
 39738                           ; BSR set to: 1
 39739                           ;../../VLCBlib_PIC/event_teach_large.c: 1077:             if (evVal == 0) {
 39740   003734  51D0               	movf	writeEv@evVal& (0+255),w,b
 39741   003736  A4D8               	btfss	status,2,c
 39742   003738  D002               	goto	l19515
 39743   00373A                     u19240:
 39744                           
 39745                           ;../../VLCBlib_PIC/event_teach_large.c: 1078:                 return 0;
 39746   00373A  0E00               	movlw	0
 39747   00373C  0012               	return	
 39748   00373E                     l19515:
 39749                           
 39750                           ; BSR set to: 1
 39751                           ;../../VLCBlib_PIC/event_teach_large.c: 1081:             for (nextIdx = tableIndex+1 ; 
      +                          nextIdx < 255; nextIdx++) {
 39752   00373E  29D9               	incf	writeEv@tableIndex& (0+255),w,b
 39753   003740  6FDA               	movwf	writeEv@nextIdx& (0+255),b
 39754   003742  D0FB               	goto	l19549
 39755   003744                     l19519:
 39756                           
 39757                           ; BSR set to: 1
 39758                           ;../../VLCBlib_PIC/event_teach_large.c: 1082:                 EventTableFlags nextF;;../
      +                          ../VLCBlib_PIC/event_teach_large.c: 1083:                 nextF.asByte = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+0);
 39759   003744  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39760   003746  6FD1               	movwf	??_writeEv& (0+255),b
 39761   003748  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 39762   00374A  3BD1               	swapf	??_writeEv& (0+255),f,b
 39763   00374C  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 39764   00374E  0EF0               	movlw	240
 39765   003750  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 39766   003752  51D1               	movf	??_writeEv& (0+255),w,b
 39767   003754  0B0F               	andlw	15
 39768   003756  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 39769   003758  0EF0               	movlw	240
 39770   00375A  17D1               	andwf	??_writeEv& (0+255),f,b
 39771   00375C  0E80               	movlw	128
 39772   00375E  25D1               	addwf	??_writeEv& (0+255),w,b
 39773   003760  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39774   003762  0EEF               	movlw	239
 39775   003764  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39776   003766  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39777   003768  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 39778   00376C  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 39779   003770  0100               	movlb	0	; () banked
 39780   003772  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39781   003774  0E01               	movlw	1
 39782   003776  EC0F  F05B         	call	_readNVM
 39783   00377A  0100               	movlb	0	; () banked
 39784   00377C  5191               	movf	?_readNVM& (0+255),w,b
 39785   00377E  0101               	movlb	1	; () banked
 39786   003780  6FD6               	movwf	writeEv@nextF& (0+255),b
 39787                           
 39788                           ; BSR set to: 1
 39789                           ;../../VLCBlib_PIC/event_teach_large.c: 1084:                 if (nextF.freeEntry) {
 39790   003782  AFD6               	btfss	writeEv@nextF& (0+255),7,b
 39791   003784  D0D9               	goto	l19547
 39792                           
 39793                           ; BSR set to: 1
 39794                           ;../../VLCBlib_PIC/event_teach_large.c: 1085:                     uint8_t e;;../../VLCBl
      +                          ib_PIC/event_teach_large.c: 1087:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*nextIdx+2, 0xff);
 39795   003786  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39796   003788  0D10               	mullw	16
 39797   00378A  CFF3 F1D1          	movff	prodl,??_writeEv
 39798   00378E  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39799   003792  0E82               	movlw	130
 39800   003794  25D1               	addwf	??_writeEv& (0+255),w,b
 39801   003796  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39802   003798  0EEF               	movlw	239
 39803   00379A  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39804   00379C  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39805   00379E  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39806   0037A2  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39807   0037A6  0100               	movlb	0	; () banked
 39808   0037A8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39809   0037AA  0EFF               	movlw	255
 39810   0037AC  6FA7               	movwf	writeNVM@value& (0+255),b
 39811   0037AE  0E01               	movlw	1
 39812   0037B0  EC9F  F05D         	call	_writeNVM
 39813                           
 39814                           ;../../VLCBlib_PIC/event_teach_large.c: 1088:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+2 +1, 0xff);
 39815   0037B4  0101               	movlb	1	; () banked
 39816   0037B6  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39817   0037B8  0D10               	mullw	16
 39818   0037BA  CFF3 F1D1          	movff	prodl,??_writeEv
 39819   0037BE  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39820   0037C2  0E83               	movlw	131
 39821   0037C4  25D1               	addwf	??_writeEv& (0+255),w,b
 39822   0037C6  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39823   0037C8  0EEF               	movlw	239
 39824   0037CA  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39825   0037CC  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39826   0037CE  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39827   0037D2  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39828   0037D6  0100               	movlb	0	; () banked
 39829   0037D8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39830   0037DA  0EFF               	movlw	255
 39831   0037DC  6FA7               	movwf	writeNVM@value& (0+255),b
 39832   0037DE  0E01               	movlw	1
 39833   0037E0  EC9F  F05D         	call	_writeNVM
 39834                           
 39835                           ;../../VLCBlib_PIC/event_teach_large.c: 1089:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4, 0xff);
 39836   0037E4  0101               	movlb	1	; () banked
 39837   0037E6  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39838   0037E8  0D10               	mullw	16
 39839   0037EA  CFF3 F1D1          	movff	prodl,??_writeEv
 39840   0037EE  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39841   0037F2  0E84               	movlw	132
 39842   0037F4  25D1               	addwf	??_writeEv& (0+255),w,b
 39843   0037F6  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39844   0037F8  0EEF               	movlw	239
 39845   0037FA  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39846   0037FC  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39847   0037FE  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39848   003802  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39849   003806  0100               	movlb	0	; () banked
 39850   003808  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39851   00380A  0EFF               	movlw	255
 39852   00380C  6FA7               	movwf	writeNVM@value& (0+255),b
 39853   00380E  0E01               	movlw	1
 39854   003810  EC9F  F05D         	call	_writeNVM
 39855                           
 39856                           ;../../VLCBlib_PIC/event_teach_large.c: 1090:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4 +1, 0xff);
 39857   003814  0101               	movlb	1	; () banked
 39858   003816  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39859   003818  0D10               	mullw	16
 39860   00381A  CFF3 F1D1          	movff	prodl,??_writeEv
 39861   00381E  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39862   003822  0E85               	movlw	133
 39863   003824  25D1               	addwf	??_writeEv& (0+255),w,b
 39864   003826  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39865   003828  0EEF               	movlw	239
 39866   00382A  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39867   00382C  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39868   00382E  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39869   003832  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39870   003836  0100               	movlb	0	; () banked
 39871   003838  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39872   00383A  0EFF               	movlw	255
 39873   00383C  6FA7               	movwf	writeNVM@value& (0+255),b
 39874   00383E  0E01               	movlw	1
 39875   003840  EC9F  F05D         	call	_writeNVM
 39876                           
 39877                           ;../../VLCBlib_PIC/event_teach_large.c: 1091:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+0, 0x20);
 39878   003844  0101               	movlb	1	; () banked
 39879   003846  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39880   003848  6FD1               	movwf	??_writeEv& (0+255),b
 39881   00384A  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 39882   00384C  3BD1               	swapf	??_writeEv& (0+255),f,b
 39883   00384E  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 39884   003850  0EF0               	movlw	240
 39885   003852  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 39886   003854  51D1               	movf	??_writeEv& (0+255),w,b
 39887   003856  0B0F               	andlw	15
 39888   003858  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 39889   00385A  0EF0               	movlw	240
 39890   00385C  17D1               	andwf	??_writeEv& (0+255),f,b
 39891   00385E  0E80               	movlw	128
 39892   003860  25D1               	addwf	??_writeEv& (0+255),w,b
 39893   003862  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39894   003864  0EEF               	movlw	239
 39895   003866  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39896   003868  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39897   00386A  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39898   00386E  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39899   003872  0100               	movlb	0	; () banked
 39900   003874  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39901   003876  0E20               	movlw	32
 39902   003878  6FA7               	movwf	writeNVM@value& (0+255),b
 39903   00387A  0E01               	movlw	1
 39904   00387C  EC9F  F05D         	call	_writeNVM
 39905                           
 39906                           ;../../VLCBlib_PIC/event_teach_large.c: 1092:                     for (e = 0; e < 10; e+
      +                          +) {
 39907   003880  0E00               	movlw	0
 39908   003882  0101               	movlb	1	; () banked
 39909   003884  6FD7               	movwf	writeEv@e& (0+255),b
 39910   003886                     l19533:
 39911                           
 39912                           ; BSR set to: 1
 39913                           ;../../VLCBlib_PIC/event_teach_large.c: 1093:                         writeNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*nextIdx+6 +e, 0);
 39914   003886  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 39915   003888  0D10               	mullw	16
 39916   00388A  CFF3 F1D1          	movff	prodl,??_writeEv
 39917   00388E  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39918   003892  51D7               	movf	writeEv@e& (0+255),w,b
 39919   003894  27D1               	addwf	??_writeEv& (0+255),f,b
 39920   003896  0E00               	movlw	0
 39921   003898  23D2               	addwfc	(??_writeEv+1)& (0+255),f,b
 39922   00389A  0E86               	movlw	134
 39923   00389C  25D1               	addwf	??_writeEv& (0+255),w,b
 39924   00389E  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39925   0038A0  0EEF               	movlw	239
 39926   0038A2  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39927   0038A4  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39928   0038A6  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39929   0038AA  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39930   0038AE  0100               	movlb	0	; () banked
 39931   0038B0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39932   0038B2  0E00               	movlw	0
 39933   0038B4  6FA7               	movwf	writeNVM@value& (0+255),b
 39934   0038B6  0E01               	movlw	1
 39935   0038B8  EC9F  F05D         	call	_writeNVM
 39936                           
 39937                           ;../../VLCBlib_PIC/event_teach_large.c: 1094:                     }
 39938   0038BC  0101               	movlb	1	; () banked
 39939   0038BE  2BD7               	incf	writeEv@e& (0+255),f,b
 39940                           
 39941                           ; BSR set to: 1
 39942   0038C0  0E09               	movlw	9
 39943   0038C2  65D7               	cpfsgt	writeEv@e& (0+255),b
 39944   0038C4  D7E0               	goto	l19533
 39945                           
 39946                           ; BSR set to: 1
 39947                           ;../../VLCBlib_PIC/event_teach_large.c: 1096:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+1, nextIdx);
 39948   0038C6  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 39949   0038C8  0D10               	mullw	16
 39950   0038CA  CFF3 F1D1          	movff	prodl,??_writeEv
 39951   0038CE  CFF4 F1D2          	movff	prodh,??_writeEv+1
 39952   0038D2  0E81               	movlw	129
 39953   0038D4  25D1               	addwf	??_writeEv& (0+255),w,b
 39954   0038D6  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39955   0038D8  0EEF               	movlw	239
 39956   0038DA  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39957   0038DC  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39958   0038DE  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39959   0038E2  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39960   0038E6  0100               	movlb	0	; () banked
 39961   0038E8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39962   0038EA  C1DA  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 39963   0038EE  0E01               	movlw	1
 39964   0038F0  EC9F  F05D         	call	_writeNVM
 39965                           
 39966                           ;../../VLCBlib_PIC/event_teach_large.c: 1098:                     f.continued = 1;
 39967   0038F4  0101               	movlb	1	; () banked
 39968   0038F6  89D8               	bsf	writeEv@f& (0+255),4,b
 39969                           
 39970                           ; BSR set to: 1
 39971                           ;../../VLCBlib_PIC/event_teach_large.c: 1099:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0, f.asByte);
 39972   0038F8  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 39973   0038FA  6FD1               	movwf	??_writeEv& (0+255),b
 39974   0038FC  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 39975   0038FE  3BD1               	swapf	??_writeEv& (0+255),f,b
 39976   003900  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 39977   003902  0EF0               	movlw	240
 39978   003904  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 39979   003906  51D1               	movf	??_writeEv& (0+255),w,b
 39980   003908  0B0F               	andlw	15
 39981   00390A  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 39982   00390C  0EF0               	movlw	240
 39983   00390E  17D1               	andwf	??_writeEv& (0+255),f,b
 39984   003910  0E80               	movlw	128
 39985   003912  25D1               	addwf	??_writeEv& (0+255),w,b
 39986   003914  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 39987   003916  0EEF               	movlw	239
 39988   003918  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 39989   00391A  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 39990   00391C  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 39991   003920  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39992   003924  0100               	movlb	0	; () banked
 39993   003926  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39994   003928  C1D8  F0A7         	movff	writeEv@f,writeNVM@value
 39995   00392C  0E01               	movlw	1
 39996   00392E  EC9F  F05D         	call	_writeNVM
 39997                           
 39998                           ;../../VLCBlib_PIC/event_teach_large.c: 1100:                     tableIndex = nextIdx;
 39999   003932  C1DA  F1D9         	movff	writeEv@nextIdx,writeEv@tableIndex
 40000                           
 40001                           ;../../VLCBlib_PIC/event_teach_large.c: 1101:                     break;
 40002   003936  D004               	goto	u19280
 40003   003938                     l19547:
 40004                           
 40005                           ; BSR set to: 1
 40006                           ;../../VLCBlib_PIC/event_teach_large.c: 1103:             }
 40007   003938  2BDA               	incf	writeEv@nextIdx& (0+255),f,b
 40008   00393A                     l19549:
 40009                           
 40010                           ; BSR set to: 1
 40011   00393A  29DA               	incf	writeEv@nextIdx& (0+255),w,b
 40012   00393C  A4D8               	btfss	status,2,c
 40013   00393E  D702               	goto	l19519
 40014   003940                     u19280:
 40015                           
 40016                           ;../../VLCBlib_PIC/event_teach_large.c: 1104:             if (nextIdx >= 255) {
 40017   003940  0101               	movlb	1	; () banked
 40018   003942  29DA               	incf	writeEv@nextIdx& (0+255),w,b
 40019   003944  A4D8               	btfss	status,2,c
 40020   003946  D002               	goto	l19557
 40021                           
 40022                           ; BSR set to: 1
 40023                           ;../../VLCBlib_PIC/event_teach_large.c: 1106:                 return CMDERR_TOO_MANY_EVE
      +                          NTS;
 40024   003948  0E04               	movlw	4
 40025   00394A  0012               	return	
 40026   00394C                     l19557:
 40027                           
 40028                           ; BSR set to: 1
 40029                           ;../../VLCBlib_PIC/event_teach_large.c: 1058:     while (evNum >= 10) {
 40030   00394C  0E0A               	movlw	10
 40031   00394E  61CF               	cpfslt	writeEv@evNum& (0+255),b
 40032   003950  D6B0               	goto	l19495
 40033                           
 40034                           ; BSR set to: 1
 40035                           ;../../VLCBlib_PIC/event_teach_large.c: 1111:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*t
      +                          ableIndex+6 +evNum, evVal);
 40036   003952  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 40037   003954  0D10               	mullw	16
 40038   003956  CFF3 F1D1          	movff	prodl,??_writeEv
 40039   00395A  CFF4 F1D2          	movff	prodh,??_writeEv+1
 40040   00395E  51CF               	movf	writeEv@evNum& (0+255),w,b
 40041   003960  27D1               	addwf	??_writeEv& (0+255),f,b
 40042   003962  0E00               	movlw	0
 40043   003964  23D2               	addwfc	(??_writeEv+1)& (0+255),f,b
 40044   003966  0E86               	movlw	134
 40045   003968  25D1               	addwf	??_writeEv& (0+255),w,b
 40046   00396A  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 40047   00396C  0EEF               	movlw	239
 40048   00396E  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 40049   003970  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 40050   003972  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 40051   003976  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 40052   00397A  0100               	movlb	0	; () banked
 40053   00397C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40054   00397E  C1D0  F0A7         	movff	writeEv@evVal,writeNVM@value
 40055   003982  0E01               	movlw	1
 40056   003984  EC9F  F05D         	call	_writeNVM
 40057                           
 40058                           ;../../VLCBlib_PIC/event_teach_large.c: 1113:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40059   003988  0101               	movlb	1	; () banked
 40060   00398A  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 40061   00398C  6FD1               	movwf	??_writeEv& (0+255),b
 40062   00398E  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 40063   003990  3BD1               	swapf	??_writeEv& (0+255),f,b
 40064   003992  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 40065   003994  0EF0               	movlw	240
 40066   003996  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 40067   003998  51D1               	movf	??_writeEv& (0+255),w,b
 40068   00399A  0B0F               	andlw	15
 40069   00399C  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 40070   00399E  0EF0               	movlw	240
 40071   0039A0  17D1               	andwf	??_writeEv& (0+255),f,b
 40072   0039A2  0E80               	movlw	128
 40073   0039A4  25D1               	addwf	??_writeEv& (0+255),w,b
 40074   0039A6  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 40075   0039A8  0EEF               	movlw	239
 40076   0039AA  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 40077   0039AC  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 40078   0039AE  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 40079   0039B2  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 40080   0039B6  0100               	movlb	0	; () banked
 40081   0039B8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40082   0039BA  0E01               	movlw	1
 40083   0039BC  EC0F  F05B         	call	_readNVM
 40084   0039C0  0100               	movlb	0	; () banked
 40085   0039C2  5191               	movf	?_readNVM& (0+255),w,b
 40086   0039C4  0101               	movlb	1	; () banked
 40087   0039C6  6FD8               	movwf	writeEv@f& (0+255),b
 40088                           
 40089                           ; BSR set to: 1
 40090                           ;../../VLCBlib_PIC/event_teach_large.c: 1114:     if (f.eVsUsed <= evNum) {
 40091   0039C8  51D8               	movf	writeEv@f& (0+255),w,b
 40092   0039CA  0B0F               	andlw	15
 40093   0039CC  6FD1               	movwf	??_writeEv& (0+255),b
 40094   0039CE  51D1               	movf	??_writeEv& (0+255),w,b
 40095   0039D0  5DCF               	subwf	writeEv@evNum& (0+255),w,b
 40096   0039D2  A0D8               	btfss	status,0,c
 40097   0039D4  D026               	goto	l19569
 40098                           
 40099                           ; BSR set to: 1
 40100                           ;../../VLCBlib_PIC/event_teach_large.c: 1115:         f.eVsUsed = evNum+1U;
 40101   0039D6  C1CF  F1D1         	movff	writeEv@evNum,??_writeEv
 40102   0039DA  0E01               	movlw	1
 40103   0039DC  27D1               	addwf	??_writeEv& (0+255),f,b
 40104   0039DE  51D8               	movf	writeEv@f& (0+255),w,b
 40105   0039E0  19D1               	xorwf	??_writeEv& (0+255),w,b
 40106   0039E2  0BF0               	andlw	-16
 40107   0039E4  19D1               	xorwf	??_writeEv& (0+255),w,b
 40108   0039E6  6FD8               	movwf	writeEv@f& (0+255),b
 40109                           
 40110                           ; BSR set to: 1
 40111                           ;../../VLCBlib_PIC/event_teach_large.c: 1116:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*tableIndex+0, f.asByte);
 40112   0039E8  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 40113   0039EA  6FD1               	movwf	??_writeEv& (0+255),b
 40114   0039EC  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 40115   0039EE  3BD1               	swapf	??_writeEv& (0+255),f,b
 40116   0039F0  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 40117   0039F2  0EF0               	movlw	240
 40118   0039F4  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 40119   0039F6  51D1               	movf	??_writeEv& (0+255),w,b
 40120   0039F8  0B0F               	andlw	15
 40121   0039FA  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 40122   0039FC  0EF0               	movlw	240
 40123   0039FE  17D1               	andwf	??_writeEv& (0+255),f,b
 40124   003A00  0E80               	movlw	128
 40125   003A02  25D1               	addwf	??_writeEv& (0+255),w,b
 40126   003A04  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 40127   003A06  0EEF               	movlw	239
 40128   003A08  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 40129   003A0A  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 40130   003A0C  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 40131   003A10  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 40132   003A14  0100               	movlb	0	; () banked
 40133   003A16  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40134   003A18  C1D8  F0A7         	movff	writeEv@f,writeNVM@value
 40135   003A1C  0E01               	movlw	1
 40136   003A1E  EC9F  F05D         	call	_writeNVM
 40137   003A22                     l19569:
 40138                           
 40139                           ;../../VLCBlib_PIC/event_teach_large.c: 1119:     if (evVal == 0) {
 40140   003A22  0101               	movlb	1	; () banked
 40141   003A24  51D0               	movf	writeEv@evVal& (0+255),w,b
 40142   003A26  A4D8               	btfss	status,2,c
 40143   003A28  D688               	goto	u19240
 40144                           
 40145                           ; BSR set to: 1
 40146                           ;../../VLCBlib_PIC/event_teach_large.c: 1120:         checkRemoveTableEntry(startIndex);
 40147   003A2A  51D5               	movf	writeEv@startIndex& (0+255),w,b
 40148   003A2C  ECC9  F05E         	call	_checkRemoveTableEntry
 40149   003A30  D684               	goto	u19240
 40150   003A32                     __end_of_writeEv:
 40151                           	callstack 0
 40152                           
 40153 ;; *************** function _checkRemoveTableEntry *****************
 40154 ;; Defined at:
 40155 ;;		line 921 in file "../../VLCBlib_PIC/event_teach_large.c"
 40156 ;; Parameters:    Size  Location     Type
 40157 ;;  tableIndex      1    wreg     unsigned char 
 40158 ;; Auto vars:     Size  Location     Type
 40159 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 40160 ;;  e               1   16[BANK1 ] unsigned char 
 40161 ;; Return value:  Size  Location     Type
 40162 ;;                  1    wreg      void 
 40163 ;; Registers used:
 40164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40165 ;; Tracked objects:
 40166 ;;		On entry : 0/0
 40167 ;;		On exit  : 0/0
 40168 ;;		Unchanged: 0/0
 40169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40171 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40173 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40174 ;;Total ram usage:        2 bytes
 40175 ;; Hardware stack levels used: 1
 40176 ;; Hardware stack levels required when called: 19
 40177 ;; This function calls:
 40178 ;;		_getEVs
 40179 ;;		_removeTableEntry
 40180 ;;		_validStart
 40181 ;; This function is called by:
 40182 ;;		_deleteActionRange
 40183 ;;		_APP_addEvent
 40184 ;;		_writeEv
 40185 ;;		_deleteHappeningRange
 40186 ;; This function uses a non-reentrant model
 40187 ;;
 40188                           
 40189                           	psect	text170
 40190   00BD92                     __ptext170:
 40191                           	callstack 0
 40192   00BD92                     _checkRemoveTableEntry:
 40193                           	callstack 6
 40194                           
 40195                           ;incstack = 0
 40196                           ;checkRemoveTableEntry@tableIndex stored from wreg
 40197   00BD92  0101               	movlb	1	; () banked
 40198   00BD94  6FCD               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 40199                           
 40200                           ;../../VLCBlib_PIC/event_teach_large.c: 922:     uint8_t e;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 924:     if ( validStart(tableIndex)) {
 40201   00BD96  0101               	movlb	1	; () banked
 40202   00BD98  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40203   00BD9A  EC78  F05D         	call	_validStart
 40204   00BD9E  0900               	iorlw	0
 40205   00BDA0  B4D8               	btfsc	status,2,c
 40206   00BDA2  0012               	return	
 40207                           
 40208                           ;../../VLCBlib_PIC/event_teach_large.c: 925:         if (getEVs(tableIndex)) {
 40209   00BDA4  0101               	movlb	1	; () banked
 40210   00BDA6  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40211   00BDA8  EC35  F042         	call	_getEVs
 40212   00BDAC  0900               	iorlw	0
 40213   00BDAE  A4D8               	btfss	status,2,c
 40214   00BDB0  0012               	return	
 40215                           
 40216                           ;../../VLCBlib_PIC/event_teach_large.c: 928:         for (e=0; e<20; e++) {
 40217   00BDB2  0E00               	movlw	0
 40218   00BDB4  0101               	movlb	1	; () banked
 40219   00BDB6  6FCE               	movwf	checkRemoveTableEntry@e& (0+255),b
 40220   00BDB8                     l19407:
 40221                           
 40222                           ; BSR set to: 1
 40223                           ;../../VLCBlib_PIC/event_teach_large.c: 929:             if (evs[e] != 0) {
 40224   00BDB8  0E20               	movlw	low _evs
 40225   00BDBA  25CE               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 40226   00BDBC  6ED9               	movwf	fsr2l,c
 40227   00BDBE  6ADA               	clrf	fsr2h,c
 40228   00BDC0  0E02               	movlw	high _evs
 40229   00BDC2  22DA               	addwfc	fsr2h,f,c
 40230   00BDC4  50DF               	movf	indf2,w,c
 40231   00BDC6  A4D8               	btfss	status,2,c
 40232   00BDC8  0012               	return	
 40233                           
 40234                           ; BSR set to: 1
 40235                           ;../../VLCBlib_PIC/event_teach_large.c: 932:         }
 40236   00BDCA  2BCE               	incf	checkRemoveTableEntry@e& (0+255),f,b
 40237                           
 40238                           ; BSR set to: 1
 40239   00BDCC  0E13               	movlw	19
 40240   00BDCE  65CE               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 40241   00BDD0  D7F3               	goto	l19407
 40242                           
 40243                           ; BSR set to: 1
 40244                           ;../../VLCBlib_PIC/event_teach_large.c: 933:         removeTableEntry(tableIndex);
 40245   00BDD2  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 40246   00BDD4  ECA5  F03D         	call	_removeTableEntry
 40247   00BDD8  0012               	return		;funcret
 40248   00BDDA                     __end_of_checkRemoveTableEntry:
 40249                           	callstack 0
 40250                           
 40251 ;; *************** function _removeTableEntry *****************
 40252 ;; Defined at:
 40253 ;;		line 885 in file "../../VLCBlib_PIC/event_teach_large.c"
 40254 ;; Parameters:    Size  Location     Type
 40255 ;;  tableIndex      1    wreg     unsigned char 
 40256 ;; Auto vars:     Size  Location     Type
 40257 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 40258 ;;  f               1   13[BANK1 ] struct .
 40259 ;; Return value:  Size  Location     Type
 40260 ;;                  1    wreg      unsigned char 
 40261 ;; Registers used:
 40262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40263 ;; Tracked objects:
 40264 ;;		On entry : 0/0
 40265 ;;		On exit  : 0/0
 40266 ;;		Unchanged: 0/0
 40267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40269 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40270 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40271 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40272 ;;Total ram usage:        6 bytes
 40273 ;; Hardware stack levels used: 1
 40274 ;; Hardware stack levels required when called: 18
 40275 ;; This function calls:
 40276 ;;		_flushFlashBlock
 40277 ;;		_readNVM
 40278 ;;		_rebuildHashtable
 40279 ;;		_validStart
 40280 ;;		_writeNVM
 40281 ;; This function is called by:
 40282 ;;		_removeEvent
 40283 ;;		_checkRemoveTableEntry
 40284 ;; This function uses a non-reentrant model
 40285 ;;
 40286                           
 40287                           	psect	text171
 40288   007B4A                     __ptext171:
 40289                           	callstack 0
 40290   007B4A                     _removeTableEntry:
 40291                           	callstack 8
 40292                           
 40293                           ;incstack = 0
 40294                           ;removeTableEntry@tableIndex stored from wreg
 40295   007B4A  0101               	movlb	1	; () banked
 40296   007B4C  6FCC               	movwf	removeTableEntry@tableIndex& (0+255),b
 40297                           
 40298                           ;../../VLCBlib_PIC/event_teach_large.c: 886:     EventTableFlags f;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 891:     if (validStart(tableIndex)) {
 40299   007B4E  0101               	movlb	1	; () banked
 40300   007B50  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40301   007B52  EC78  F05D         	call	_validStart
 40302   007B56  0900               	iorlw	0
 40303   007B58  B4D8               	btfsc	status,2,c
 40304   007B5A  D09F               	goto	l19391
 40305                           
 40306                           ;../../VLCBlib_PIC/event_teach_large.c: 892:         f.asByte = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+0);
 40307   007B5C  0101               	movlb	1	; () banked
 40308   007B5E  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40309   007B60  6FC7               	movwf	??_removeTableEntry& (0+255),b
 40310   007B62  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 40311   007B64  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 40312   007B66  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40313   007B68  0EF0               	movlw	240
 40314   007B6A  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40315   007B6C  51C7               	movf	??_removeTableEntry& (0+255),w,b
 40316   007B6E  0B0F               	andlw	15
 40317   007B70  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40318   007B72  0EF0               	movlw	240
 40319   007B74  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 40320   007B76  0E80               	movlw	128
 40321   007B78  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40322   007B7A  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40323   007B7C  0EEF               	movlw	239
 40324   007B7E  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40325   007B80  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40326   007B82  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 40327   007B86  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40328   007B8A  0100               	movlb	0	; () banked
 40329   007B8C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40330   007B8E  0E01               	movlw	1
 40331   007B90  EC0F  F05B         	call	_readNVM
 40332   007B94  0100               	movlb	0	; () banked
 40333   007B96  5191               	movf	?_readNVM& (0+255),w,b
 40334   007B98  0101               	movlb	1	; () banked
 40335   007B9A  6FCB               	movwf	removeTableEntry@f& (0+255),b
 40336                           
 40337                           ;../../VLCBlib_PIC/event_teach_large.c: 894:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex+0, 0xff);
 40338   007B9C  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40339   007B9E  6FC7               	movwf	??_removeTableEntry& (0+255),b
 40340   007BA0  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 40341   007BA2  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 40342   007BA4  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40343   007BA6  0EF0               	movlw	240
 40344   007BA8  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40345   007BAA  51C7               	movf	??_removeTableEntry& (0+255),w,b
 40346   007BAC  0B0F               	andlw	15
 40347   007BAE  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40348   007BB0  0EF0               	movlw	240
 40349   007BB2  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 40350   007BB4  0E80               	movlw	128
 40351   007BB6  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40352   007BB8  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40353   007BBA  0EEF               	movlw	239
 40354   007BBC  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40355   007BBE  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40356   007BC0  C1C9  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 40357   007BC4  C1CA  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 40358   007BC8  0100               	movlb	0	; () banked
 40359   007BCA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40360   007BCC  0EFF               	movlw	255
 40361   007BCE  6FA7               	movwf	writeNVM@value& (0+255),b
 40362   007BD0  0E01               	movlw	1
 40363   007BD2  EC9F  F05D         	call	_writeNVM
 40364                           
 40365                           ;../../VLCBlib_PIC/event_teach_large.c: 896:         while (f.continued) {
 40366   007BD6  D05A               	goto	l19385
 40367   007BD8                     l19373:
 40368                           
 40369                           ; BSR set to: 1
 40370                           ;../../VLCBlib_PIC/event_teach_large.c: 897:             tableIndex = (uint8_t)readNVM(F
      +                          LASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40371   007BD8  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40372   007BDA  0D10               	mullw	16
 40373   007BDC  CFF3 F1C7          	movff	prodl,??_removeTableEntry
 40374   007BE0  CFF4 F1C8          	movff	prodh,??_removeTableEntry+1
 40375   007BE4  0E81               	movlw	129
 40376   007BE6  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40377   007BE8  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40378   007BEA  0EEF               	movlw	239
 40379   007BEC  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40380   007BEE  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40381   007BF0  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 40382   007BF4  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40383   007BF8  0100               	movlb	0	; () banked
 40384   007BFA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40385   007BFC  0E01               	movlw	1
 40386   007BFE  EC0F  F05B         	call	_readNVM
 40387   007C02  0100               	movlb	0	; () banked
 40388   007C04  5191               	movf	?_readNVM& (0+255),w,b
 40389   007C06  0101               	movlb	1	; () banked
 40390   007C08  6FCC               	movwf	removeTableEntry@tableIndex& (0+255),b
 40391                           
 40392                           ; BSR set to: 1
 40393                           ;../../VLCBlib_PIC/event_teach_large.c: 898:             f.asByte = (uint8_t)readNVM(FLA
      +                          SH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40394   007C0A  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40395   007C0C  6FC7               	movwf	??_removeTableEntry& (0+255),b
 40396   007C0E  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 40397   007C10  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 40398   007C12  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40399   007C14  0EF0               	movlw	240
 40400   007C16  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40401   007C18  51C7               	movf	??_removeTableEntry& (0+255),w,b
 40402   007C1A  0B0F               	andlw	15
 40403   007C1C  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40404   007C1E  0EF0               	movlw	240
 40405   007C20  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 40406   007C22  0E80               	movlw	128
 40407   007C24  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40408   007C26  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40409   007C28  0EEF               	movlw	239
 40410   007C2A  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40411   007C2C  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40412   007C2E  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 40413   007C32  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 40414   007C36  0100               	movlb	0	; () banked
 40415   007C38  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40416   007C3A  0E01               	movlw	1
 40417   007C3C  EC0F  F05B         	call	_readNVM
 40418   007C40  0100               	movlb	0	; () banked
 40419   007C42  5191               	movf	?_readNVM& (0+255),w,b
 40420   007C44  0101               	movlb	1	; () banked
 40421   007C46  6FCB               	movwf	removeTableEntry@f& (0+255),b
 40422                           
 40423                           ; BSR set to: 1
 40424                           ;../../VLCBlib_PIC/event_teach_large.c: 900:             if (tableIndex >= 255) return C
      +                          MDERR_INV_EV_IDX;
 40425   007C48  29CC               	incf	removeTableEntry@tableIndex& (0+255),w,b
 40426   007C4A  A4D8               	btfss	status,2,c
 40427   007C4C  D002               	goto	l19383
 40428                           
 40429                           ; BSR set to: 1
 40430   007C4E  0E06               	movlw	6
 40431   007C50  0012               	return	
 40432   007C52                     l19383:
 40433                           
 40434                           ; BSR set to: 1
 40435                           ;../../VLCBlib_PIC/event_teach_large.c: 903:             writeNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+0, 0xff);
 40436   007C52  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 40437   007C54  6FC7               	movwf	??_removeTableEntry& (0+255),b
 40438   007C56  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 40439   007C58  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 40440   007C5A  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 40441   007C5C  0EF0               	movlw	240
 40442   007C5E  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 40443   007C60  51C7               	movf	??_removeTableEntry& (0+255),w,b
 40444   007C62  0B0F               	andlw	15
 40445   007C64  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 40446   007C66  0EF0               	movlw	240
 40447   007C68  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 40448   007C6A  0E80               	movlw	128
 40449   007C6C  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 40450   007C6E  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 40451   007C70  0EEF               	movlw	239
 40452   007C72  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 40453   007C74  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 40454   007C76  C1C9  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 40455   007C7A  C1CA  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 40456   007C7E  0100               	movlb	0	; () banked
 40457   007C80  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40458   007C82  0EFF               	movlw	255
 40459   007C84  6FA7               	movwf	writeNVM@value& (0+255),b
 40460   007C86  0E01               	movlw	1
 40461   007C88  EC9F  F05D         	call	_writeNVM
 40462   007C8C                     l19385:
 40463                           
 40464                           ;../../VLCBlib_PIC/event_teach_large.c: 896:         while (f.continued) {
 40465   007C8C  0101               	movlb	1	; () banked
 40466   007C8E  B9CB               	btfsc	removeTableEntry@f& (0+255),4,b
 40467   007C90  D7A3               	goto	l19373
 40468                           
 40469                           ; BSR set to: 1
 40470                           ;../../VLCBlib_PIC/event_teach_large.c: 906:         flushFlashBlock();
 40471   007C92  EC9C  F054         	call	_flushFlashBlock	;wreg free
 40472                           
 40473                           ;../../VLCBlib_PIC/event_teach_large.c: 909:         rebuildHashtable();
 40474   007C96  EC8A  F03F         	call	_rebuildHashtable	;wreg free
 40475   007C9A                     l19391:
 40476                           
 40477                           ;../../VLCBlib_PIC/event_teach_large.c: 912:     return 0;
 40478   007C9A  0E00               	movlw	0
 40479   007C9C  0012               	return		;funcret
 40480   007C9E                     __end_of_removeTableEntry:
 40481                           	callstack 0
 40482                           
 40483 ;; *************** function _rebuildHashtable *****************
 40484 ;; Defined at:
 40485 ;;		line 1341 in file "../../VLCBlib_PIC/event_teach_large.c"
 40486 ;; Parameters:    Size  Location     Type
 40487 ;;		None
 40488 ;; Auto vars:     Size  Location     Type
 40489 ;;  ev              2    3[BANK1 ] short 
 40490 ;;  a               2    0        int 
 40491 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 40492 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 40493 ;;  happening       1    6[BANK1 ] unsigned char 
 40494 ;;  hash            1    5[BANK1 ] unsigned char 
 40495 ;; Return value:  Size  Location     Type
 40496 ;;                  1    wreg      void 
 40497 ;; Registers used:
 40498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40499 ;; Tracked objects:
 40500 ;;		On entry : 0/0
 40501 ;;		On exit  : 0/0
 40502 ;;		Unchanged: 0/0
 40503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40505 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40506 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40507 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40508 ;;Total ram usage:        9 bytes
 40509 ;; Hardware stack levels used: 1
 40510 ;; Hardware stack levels required when called: 16
 40511 ;; This function calls:
 40512 ;;		_getEN
 40513 ;;		_getEv
 40514 ;;		_getHash
 40515 ;;		_getNN
 40516 ;;		_validStart
 40517 ;; This function is called by:
 40518 ;;		_deleteActionRange
 40519 ;;		_APP_addEvent
 40520 ;;		_mnsProcessMessage
 40521 ;;		_teachPowerUp
 40522 ;;		_clearAllEvents
 40523 ;;		_removeTableEntry
 40524 ;;		_addEvent
 40525 ;;		_deleteHappeningRange
 40526 ;; This function uses a non-reentrant model
 40527 ;;
 40528                           
 40529                           	psect	text172
 40530   007F14                     __ptext172:
 40531                           	callstack 0
 40532   007F14                     _rebuildHashtable:
 40533                           	callstack 12
 40534                           
 40535                           ;../../VLCBlib_PIC/event_teach_large.c: 1343:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1344:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_large.c: 1345: 
      +                              uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_large.c: 1346:     int a;;../../VL
      +                          CBlib_PIC/event_teach_large.c: 1349:     Happening happening;;../../VLCBlib_PIC/event_te
      +                          ach_large.c: 1350:     for (happening=0; happening<=(1+(7+16*4)-1); happening++) {
 40536                           
 40537                           ;incstack = 0
 40538   007F14  0E00               	movlw	0
 40539   007F16  0101               	movlb	1	; () banked
 40540   007F18  6FC4               	movwf	rebuildHashtable@happening& (0+255),b
 40541   007F1A                     l19239:
 40542                           
 40543                           ; BSR set to: 1
 40544                           ;../../VLCBlib_PIC/event_teach_large.c: 1351:         happening2Event[happening] = 0xff;
 40545   007F1A  0E00               	movlw	low _happening2Event
 40546   007F1C  25C4               	addwf	rebuildHashtable@happening& (0+255),w,b
 40547   007F1E  6ED9               	movwf	fsr2l,c
 40548   007F20  6ADA               	clrf	fsr2h,c
 40549   007F22  0E03               	movlw	high _happening2Event
 40550   007F24  22DA               	addwfc	fsr2h,f,c
 40551   007F26  0EFF               	movlw	255
 40552   007F28  6EDF               	movwf	indf2,c
 40553                           
 40554                           ; BSR set to: 1
 40555                           ;../../VLCBlib_PIC/event_teach_large.c: 1352:     }
 40556   007F2A  2BC4               	incf	rebuildHashtable@happening& (0+255),f,b
 40557                           
 40558                           ; BSR set to: 1
 40559   007F2C  0E47               	movlw	71
 40560   007F2E  65C4               	cpfsgt	rebuildHashtable@happening& (0+255),b
 40561   007F30  D7F4               	goto	l19239
 40562                           
 40563                           ; BSR set to: 1
 40564                           ;../../VLCBlib_PIC/event_teach_large.c: 1354:     for (hash=0; hash<32; hash++) {
 40565   007F32  0E00               	movlw	0
 40566   007F34  6FC3               	movwf	rebuildHashtable@hash& (0+255),b
 40567   007F36                     l19251:
 40568                           
 40569                           ; BSR set to: 1
 40570                           ;../../VLCBlib_PIC/event_teach_large.c: 1355:         for (chainIdx=0; chainIdx < 20; ch
      +                          ainIdx++) {
 40571   007F36  0E00               	movlw	0
 40572   007F38  6FC5               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40573   007F3A                     l19257:
 40574                           
 40575                           ; BSR set to: 1
 40576                           ;../../VLCBlib_PIC/event_teach_large.c: 1356:             eventChains[hash][chainIdx] = 
      +                          0xff;
 40577   007F3A  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 40578   007F3C  0D14               	mullw	20
 40579   007F3E  0E48               	movlw	low _eventChains
 40580   007F40  24F3               	addwf	243,w,c
 40581   007F42  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 40582   007F44  0E05               	movlw	high _eventChains
 40583   007F46  20F4               	addwfc	prodh,w,c
 40584   007F48  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40585   007F4A  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40586   007F4C  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 40587   007F4E  6ED9               	movwf	fsr2l,c
 40588   007F50  0E00               	movlw	0
 40589   007F52  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40590   007F54  6EDA               	movwf	fsr2h,c
 40591   007F56  0EFF               	movlw	255
 40592   007F58  6EDF               	movwf	indf2,c
 40593                           
 40594                           ; BSR set to: 1
 40595                           ;../../VLCBlib_PIC/event_teach_large.c: 1357:         }
 40596   007F5A  2BC5               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40597                           
 40598                           ; BSR set to: 1
 40599   007F5C  0E13               	movlw	19
 40600   007F5E  65C5               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40601   007F60  D7EC               	goto	l19257
 40602                           
 40603                           ; BSR set to: 1
 40604                           ;../../VLCBlib_PIC/event_teach_large.c: 1358:     }
 40605   007F62  2BC3               	incf	rebuildHashtable@hash& (0+255),f,b
 40606                           
 40607                           ; BSR set to: 1
 40608   007F64  0E1F               	movlw	31
 40609   007F66  65C3               	cpfsgt	rebuildHashtable@hash& (0+255),b
 40610   007F68  D7E6               	goto	l19251
 40611                           
 40612                           ; BSR set to: 1
 40613                           ;../../VLCBlib_PIC/event_teach_large.c: 1361:     for (tableIndex=0; tableIndex<255; tab
      +                          leIndex++) {
 40614   007F6A  0E00               	movlw	0
 40615   007F6C  6FC6               	movwf	rebuildHashtable@tableIndex& (0+255),b
 40616   007F6E                     l19273:
 40617                           
 40618                           ; BSR set to: 1
 40619                           ;../../VLCBlib_PIC/event_teach_large.c: 1362:         if (validStart(tableIndex)) {
 40620   007F6E  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40621   007F70  EC78  F05D         	call	_validStart
 40622   007F74  0900               	iorlw	0
 40623   007F76  B4D8               	btfsc	status,2,c
 40624   007F78  D059               	goto	u18970
 40625                           
 40626                           ;../../VLCBlib_PIC/event_teach_large.c: 1363:             int16_t ev;;../../VLCBlib_PIC/
      +                          event_teach_large.c: 1378:             ev = getEv(tableIndex, 0);
 40627   007F7A  0E00               	movlw	0
 40628   007F7C  0100               	movlb	0	; () banked
 40629   007F7E  6F9D               	movwf	getEv@evNum& (0+255),b
 40630   007F80  0101               	movlb	1	; () banked
 40631   007F82  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40632   007F84  ECFA  F03C         	call	_getEv
 40633   007F88  C09D  F1C1         	movff	?_getEv,rebuildHashtable@ev
 40634   007F8C  C09E  F1C2         	movff	?_getEv+1,rebuildHashtable@ev+1
 40635                           
 40636                           ;../../VLCBlib_PIC/event_teach_large.c: 1379:             if (ev < 0) continue;
 40637   007F90  0101               	movlb	1	; () banked
 40638   007F92  BFC2               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 40639   007F94  D04B               	goto	u18970
 40640                           
 40641                           ; BSR set to: 1
 40642                           ;../../VLCBlib_PIC/event_teach_large.c: 1380:             happening = (uint8_t) ev;
 40643   007F96  C1C1  F1C4         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 40644                           
 40645                           ; BSR set to: 1
 40646                           ;../../VLCBlib_PIC/event_teach_large.c: 1382:             if ((happening<= (7+16*4)) && 
      +                          (happening >= 1)) {
 40647   007F9A  0E48               	movlw	72
 40648   007F9C  61C4               	cpfslt	rebuildHashtable@happening& (0+255),b
 40649   007F9E  D00B               	goto	l19287
 40650                           
 40651                           ; BSR set to: 1
 40652   007FA0  51C4               	movf	rebuildHashtable@happening& (0+255),w,b
 40653   007FA2  B4D8               	btfsc	status,2,c
 40654   007FA4  D008               	goto	l19287
 40655                           
 40656                           ; BSR set to: 1
 40657                           ;../../VLCBlib_PIC/event_teach_large.c: 1383:                 happening2Event[happening-
      +                          1] = tableIndex;
 40658   007FA6  0EFF               	movlw	low (_happening2Event+65535)
 40659   007FA8  25C4               	addwf	rebuildHashtable@happening& (0+255),w,b
 40660   007FAA  6ED9               	movwf	fsr2l,c
 40661   007FAC  6ADA               	clrf	fsr2h,c
 40662   007FAE  0E02               	movlw	high (_happening2Event+65535)
 40663   007FB0  22DA               	addwfc	fsr2h,f,c
 40664   007FB2  C1C6  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40665   007FB6                     l19287:
 40666                           
 40667                           ; BSR set to: 1
 40668                           ;../../VLCBlib_PIC/event_teach_large.c: 1386:             hash = getHash(getNN(tableInde
      +                          x), getEN(tableIndex));
 40669   007FB6  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40670   007FB8  EC85  F04B         	call	_getNN
 40671   007FBC  C097  F0A3         	movff	?_getNN,getHash@nn
 40672   007FC0  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 40673   007FC4  0101               	movlb	1	; () banked
 40674   007FC6  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 40675   007FC8  ECD8  F056         	call	_getEN
 40676   007FCC  C097  F0A5         	movff	?_getEN,getHash@en
 40677   007FD0  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 40678   007FD4  EC6E  F063         	call	_getHash	;wreg free
 40679   007FD8  0101               	movlb	1	; () banked
 40680   007FDA  6FC3               	movwf	rebuildHashtable@hash& (0+255),b
 40681                           
 40682                           ; BSR set to: 1
 40683                           ;../../VLCBlib_PIC/event_teach_large.c: 1388:             for (chainIdx=0; chainIdx<20; 
      +                          chainIdx++) {
 40684   007FDC  0E00               	movlw	0
 40685   007FDE  6FC5               	movwf	rebuildHashtable@chainIdx& (0+255),b
 40686   007FE0                     l19295:
 40687                           
 40688                           ; BSR set to: 1
 40689                           ;../../VLCBlib_PIC/event_teach_large.c: 1389:                 if (eventChains[hash][chai
      +                          nIdx] == 0xff) {
 40690   007FE0  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 40691   007FE2  0D14               	mullw	20
 40692   007FE4  0E48               	movlw	low _eventChains
 40693   007FE6  24F3               	addwf	243,w,c
 40694   007FE8  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 40695   007FEA  0E05               	movlw	high _eventChains
 40696   007FEC  20F4               	addwfc	prodh,w,c
 40697   007FEE  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40698   007FF0  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40699   007FF2  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 40700   007FF4  6ED9               	movwf	fsr2l,c
 40701   007FF6  0E00               	movlw	0
 40702   007FF8  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40703   007FFA  6EDA               	movwf	fsr2h,c
 40704   007FFC  28DE               	incf	postinc2,w,c
 40705   007FFE  A4D8               	btfss	status,2,c
 40706   008000  D011               	goto	l19299
 40707                           
 40708                           ; BSR set to: 1
 40709                           ;../../VLCBlib_PIC/event_teach_large.c: 1391:                     eventChains[hash][chai
      +                          nIdx] = tableIndex;
 40710   008002  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 40711   008004  0D14               	mullw	20
 40712   008006  0E48               	movlw	low _eventChains
 40713   008008  24F3               	addwf	243,w,c
 40714   00800A  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 40715   00800C  0E05               	movlw	high _eventChains
 40716   00800E  20F4               	addwfc	prodh,w,c
 40717   008010  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 40718   008012  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 40719   008014  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 40720   008016  6ED9               	movwf	fsr2l,c
 40721   008018  0E00               	movlw	0
 40722   00801A  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 40723   00801C  6EDA               	movwf	fsr2h,c
 40724   00801E  C1C6  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 40725                           
 40726                           ;../../VLCBlib_PIC/event_teach_large.c: 1392:                     break;
 40727   008022  D004               	goto	u18970
 40728   008024                     l19299:
 40729                           
 40730                           ; BSR set to: 1
 40731                           ;../../VLCBlib_PIC/event_teach_large.c: 1394:             }
 40732   008024  2BC5               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40733                           
 40734                           ; BSR set to: 1
 40735   008026  0E13               	movlw	19
 40736   008028  65C5               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40737   00802A  D7DA               	goto	l19295
 40738   00802C                     u18970:
 40739   00802C  0101               	movlb	1	; () banked
 40740   00802E  2BC6               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 40741                           
 40742                           ; BSR set to: 1
 40743   008030  29C6               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 40744   008032  B4D8               	btfsc	status,2,c
 40745   008034  0012               	return	
 40746   008036  D79B               	goto	l19273
 40747   008038                     __end_of_rebuildHashtable:
 40748                           	callstack 0
 40749                           
 40750 ;; *************** function _getEv *****************
 40751 ;; Defined at:
 40752 ;;		line 1132 in file "../../VLCBlib_PIC/event_teach_large.c"
 40753 ;; Parameters:    Size  Location     Type
 40754 ;;  tableIndex      1    wreg     unsigned char 
 40755 ;;  evNum           1   61[BANK0 ] unsigned char 
 40756 ;; Auto vars:     Size  Location     Type
 40757 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 40758 ;;  f               1   68[BANK0 ] struct .
 40759 ;; Return value:  Size  Location     Type
 40760 ;;                  2   61[BANK0 ] short 
 40761 ;; Registers used:
 40762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40763 ;; Tracked objects:
 40764 ;;		On entry : 0/0
 40765 ;;		On exit  : 0/0
 40766 ;;		Unchanged: 0/0
 40767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40770 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40771 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40772 ;;Total ram usage:        9 bytes
 40773 ;; Hardware stack levels used: 1
 40774 ;; Hardware stack levels required when called: 15
 40775 ;; This function calls:
 40776 ;;		_readNVM
 40777 ;;		_validStart
 40778 ;; This function is called by:
 40779 ;;		_isConsumedEvent
 40780 ;;		_doReval
 40781 ;;		_doReqev
 40782 ;;		_reqevCallback
 40783 ;;		_rebuildHashtable
 40784 ;;		_producerProcessMessage
 40785 ;; This function uses a non-reentrant model
 40786 ;;
 40787                           
 40788                           	psect	text173
 40789   0079F4                     __ptext173:
 40790                           	callstack 0
 40791   0079F4                     _getEv:
 40792                           	callstack 12
 40793                           
 40794                           ; BSR set to: 1
 40795                           ;incstack = 0
 40796                           ;getEv@tableIndex stored from wreg
 40797   0079F4  0100               	movlb	0	; () banked
 40798   0079F6  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40799                           
 40800                           ;../../VLCBlib_PIC/event_teach_large.c: 1133:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1134:     if ( ! validStart(tableIndex)) {
 40801   0079F8  0100               	movlb	0	; () banked
 40802   0079FA  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40803   0079FC  EC78  F05D         	call	_validStart
 40804   007A00  0900               	iorlw	0
 40805   007A02  A4D8               	btfss	status,2,c
 40806   007A04  D006               	goto	l19081
 40807   007A06                     u18720:
 40808                           
 40809                           ;../../VLCBlib_PIC/event_teach_large.c: 1136:         return -CMDERR_INVALID_EVENT;
 40810   007A06  0EFF               	movlw	255
 40811   007A08  0100               	movlb	0	; () banked
 40812   007A0A  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40813   007A0C  0EF9               	movlw	249
 40814   007A0E  6F9D               	movwf	?_getEv& (0+255),b
 40815   007A10  0012               	return	
 40816   007A12                     l19081:
 40817                           
 40818                           ;../../VLCBlib_PIC/event_teach_large.c: 1138:     if (evNum >= 20) {
 40819   007A12  0E13               	movlw	19
 40820   007A14  0100               	movlb	0	; () banked
 40821   007A16  659D               	cpfsgt	getEv@evNum& (0+255),b
 40822   007A18  D005               	goto	l19087
 40823                           
 40824                           ; BSR set to: 0
 40825                           ;../../VLCBlib_PIC/event_teach_large.c: 1139:         return -CMDERR_INV_EV_IDX;
 40826   007A1A  0EFF               	movlw	255
 40827   007A1C  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40828   007A1E  0EFA               	movlw	250
 40829   007A20  6F9D               	movwf	?_getEv& (0+255),b
 40830   007A22  0012               	return	
 40831   007A24                     l19087:
 40832                           
 40833                           ; BSR set to: 0
 40834                           ;../../VLCBlib_PIC/event_teach_large.c: 1141:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40835   007A24  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40836   007A26  6F9F               	movwf	??_getEv& (0+255),b
 40837   007A28  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40838   007A2A  3B9F               	swapf	??_getEv& (0+255),f,b
 40839   007A2C  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40840   007A2E  0EF0               	movlw	240
 40841   007A30  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40842   007A32  519F               	movf	??_getEv& (0+255),w,b
 40843   007A34  0B0F               	andlw	15
 40844   007A36  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40845   007A38  0EF0               	movlw	240
 40846   007A3A  179F               	andwf	??_getEv& (0+255),f,b
 40847   007A3C  0E80               	movlw	128
 40848   007A3E  259F               	addwf	??_getEv& (0+255),w,b
 40849   007A40  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40850   007A42  0EEF               	movlw	239
 40851   007A44  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40852   007A46  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40853   007A48  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40854   007A4C  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40855   007A50  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40856   007A52  0E01               	movlw	1
 40857   007A54  EC0F  F05B         	call	_readNVM
 40858   007A58  0100               	movlb	0	; () banked
 40859   007A5A  5191               	movf	?_readNVM& (0+255),w,b
 40860   007A5C  6FA4               	movwf	getEv@f& (0+255),b
 40861                           
 40862                           ;../../VLCBlib_PIC/event_teach_large.c: 1142:     while (evNum >= 10) {
 40863   007A5E  D040               	goto	l19105
 40864   007A60                     l2958:
 40865                           
 40866                           ; BSR set to: 0
 40867                           ;../../VLCBlib_PIC/event_teach_large.c: 1144:         if (! f.continued) {
 40868   007A60  B9A4               	btfsc	getEv@f& (0+255),4,b
 40869   007A62  D005               	goto	l19093
 40870   007A64                     u18740:
 40871                           
 40872                           ; BSR set to: 0
 40873                           ;../../VLCBlib_PIC/event_teach_large.c: 1145:             return -CMDERR_NO_EV;
 40874   007A64  0EFF               	movlw	255
 40875   007A66  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40876   007A68  0EFB               	movlw	251
 40877   007A6A  6F9D               	movwf	?_getEv& (0+255),b
 40878   007A6C  0012               	return	
 40879   007A6E                     l19093:
 40880                           
 40881                           ; BSR set to: 0
 40882                           ;../../VLCBlib_PIC/event_teach_large.c: 1147:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40883   007A6E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40884   007A70  0D10               	mullw	16
 40885   007A72  CFF3 F09F          	movff	prodl,??_getEv
 40886   007A76  CFF4 F0A0          	movff	prodh,??_getEv+1
 40887   007A7A  0E81               	movlw	129
 40888   007A7C  259F               	addwf	??_getEv& (0+255),w,b
 40889   007A7E  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40890   007A80  0EEF               	movlw	239
 40891   007A82  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40892   007A84  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40893   007A86  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40894   007A8A  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40895   007A8E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40896   007A90  0E01               	movlw	1
 40897   007A92  EC0F  F05B         	call	_readNVM
 40898   007A96  0100               	movlb	0	; () banked
 40899   007A98  5191               	movf	?_readNVM& (0+255),w,b
 40900   007A9A  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40901                           
 40902                           ; BSR set to: 0
 40903                           ;../../VLCBlib_PIC/event_teach_large.c: 1148:         if (tableIndex == 0xff) {
 40904   007A9C  29A5               	incf	getEv@tableIndex& (0+255),w,b
 40905   007A9E  B4D8               	btfsc	status,2,c
 40906   007AA0  D7B2               	goto	u18720
 40907                           
 40908                           ; BSR set to: 0
 40909                           ;../../VLCBlib_PIC/event_teach_large.c: 1151:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40910   007AA2  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40911   007AA4  6F9F               	movwf	??_getEv& (0+255),b
 40912   007AA6  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40913   007AA8  3B9F               	swapf	??_getEv& (0+255),f,b
 40914   007AAA  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40915   007AAC  0EF0               	movlw	240
 40916   007AAE  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40917   007AB0  519F               	movf	??_getEv& (0+255),w,b
 40918   007AB2  0B0F               	andlw	15
 40919   007AB4  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40920   007AB6  0EF0               	movlw	240
 40921   007AB8  179F               	andwf	??_getEv& (0+255),f,b
 40922   007ABA  0E80               	movlw	128
 40923   007ABC  259F               	addwf	??_getEv& (0+255),w,b
 40924   007ABE  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40925   007AC0  0EEF               	movlw	239
 40926   007AC2  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40927   007AC4  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40928   007AC6  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40929   007ACA  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40930   007ACE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40931   007AD0  0E01               	movlw	1
 40932   007AD2  EC0F  F05B         	call	_readNVM
 40933   007AD6  0100               	movlb	0	; () banked
 40934   007AD8  5191               	movf	?_readNVM& (0+255),w,b
 40935   007ADA  6FA4               	movwf	getEv@f& (0+255),b
 40936                           
 40937                           ; BSR set to: 0
 40938                           ;../../VLCBlib_PIC/event_teach_large.c: 1152:         evNum -= 10;
 40939   007ADC  0E0A               	movlw	10
 40940   007ADE  5F9D               	subwf	getEv@evNum& (0+255),f,b
 40941   007AE0                     l19105:
 40942                           
 40943                           ; BSR set to: 0
 40944                           ;../../VLCBlib_PIC/event_teach_large.c: 1142:     while (evNum >= 10) {
 40945   007AE0  0E0A               	movlw	10
 40946   007AE2  619D               	cpfslt	getEv@evNum& (0+255),b
 40947   007AE4  D7BD               	goto	l2958
 40948                           
 40949                           ; BSR set to: 0
 40950                           ;../../VLCBlib_PIC/event_teach_large.c: 1154:     if (evNum+1 > f.eVsUsed) {
 40951   007AE6  519D               	movf	getEv@evNum& (0+255),w,b
 40952   007AE8  6F9F               	movwf	??_getEv& (0+255),b
 40953   007AEA  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40954   007AEC  0E01               	movlw	1
 40955   007AEE  279F               	addwf	??_getEv& (0+255),f,b
 40956   007AF0  0E00               	movlw	0
 40957   007AF2  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40958   007AF4  51A4               	movf	getEv@f& (0+255),w,b
 40959   007AF6  0B0F               	andlw	15
 40960   007AF8  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40961   007AFA  6BA2               	clrf	(??_getEv+3)& (0+255),b
 40962   007AFC  519F               	movf	??_getEv& (0+255),w,b
 40963   007AFE  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 40964   007B00  51A2               	movf	(??_getEv+3)& (0+255),w,b
 40965   007B02  0A80               	xorlw	128
 40966   007B04  6FA3               	movwf	(??_getEv+4)& (0+255),b
 40967   007B06  51A0               	movf	(??_getEv+1)& (0+255),w,b
 40968   007B08  0A80               	xorlw	128
 40969   007B0A  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 40970   007B0C  A0D8               	btfss	status,0,c
 40971   007B0E  D7AA               	goto	u18740
 40972                           
 40973                           ; BSR set to: 0
 40974                           ;../../VLCBlib_PIC/event_teach_large.c: 1158:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +evNum);
 40975   007B10  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40976   007B12  0D10               	mullw	16
 40977   007B14  CFF3 F09F          	movff	prodl,??_getEv
 40978   007B18  CFF4 F0A0          	movff	prodh,??_getEv+1
 40979   007B1C  519D               	movf	getEv@evNum& (0+255),w,b
 40980   007B1E  279F               	addwf	??_getEv& (0+255),f,b
 40981   007B20  0E00               	movlw	0
 40982   007B22  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40983   007B24  0E86               	movlw	134
 40984   007B26  259F               	addwf	??_getEv& (0+255),w,b
 40985   007B28  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40986   007B2A  0EEF               	movlw	239
 40987   007B2C  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40988   007B2E  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40989   007B30  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40990   007B34  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40991   007B38  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40992   007B3A  0E01               	movlw	1
 40993   007B3C  EC0F  F05B         	call	_readNVM
 40994   007B40  0100               	movlb	0	; () banked
 40995   007B42  5191               	movf	?_readNVM& (0+255),w,b
 40996   007B44  6F9D               	movwf	?_getEv& (0+255),b
 40997   007B46  6B9E               	clrf	(?_getEv+1)& (0+255),b
 40998                           
 40999                           ; BSR set to: 0
 41000   007B48  0012               	return		;funcret
 41001   007B4A                     __end_of_getEv:
 41002                           	callstack 0
 41003                           
 41004 ;; *************** function _getEVs *****************
 41005 ;; Defined at:
 41006 ;;		line 1197 in file "../../VLCBlib_PIC/event_teach_large.c"
 41007 ;; Parameters:    Size  Location     Type
 41008 ;;  tableIndex      1    wreg     unsigned char 
 41009 ;; Auto vars:     Size  Location     Type
 41010 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 41011 ;;  evIdx           1   66[BANK0 ] unsigned char 
 41012 ;;  evNum           1   68[BANK0 ] unsigned char 
 41013 ;;  f               1   65[BANK0 ] struct .
 41014 ;; Return value:  Size  Location     Type
 41015 ;;                  1    wreg      unsigned char 
 41016 ;; Registers used:
 41017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41018 ;; Tracked objects:
 41019 ;;		On entry : 0/0
 41020 ;;		On exit  : 0/0
 41021 ;;		Unchanged: 0/0
 41022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41024 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41025 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41026 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41027 ;;Total ram usage:        8 bytes
 41028 ;; Hardware stack levels used: 1
 41029 ;; Hardware stack levels required when called: 15
 41030 ;; This function calls:
 41031 ;;		_readNVM
 41032 ;;		_validStart
 41033 ;; This function is called by:
 41034 ;;		_consumer2QProcessMessage
 41035 ;;		_deleteActionRange
 41036 ;;		_checkRemoveTableEntry
 41037 ;; This function uses a non-reentrant model
 41038 ;;
 41039                           
 41040                           	psect	text174
 41041   00846A                     __ptext174:
 41042                           	callstack 0
 41043   00846A                     _getEVs:
 41044                           	callstack 9
 41045                           
 41046                           ; BSR set to: 0
 41047                           ;incstack = 0
 41048                           ;getEVs@tableIndex stored from wreg
 41049   00846A  0100               	movlb	0	; () banked
 41050   00846C  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 41051                           
 41052                           ;../../VLCBlib_PIC/event_teach_large.c: 1198:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1199:     uint8_t evNum;;../../VLCBlib_PIC/event_teach_large.c: 1201
      +                          :     if ( ! validStart(tableIndex)) {
 41053   00846E  0100               	movlb	0	; () banked
 41054   008470  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41055   008472  EC78  F05D         	call	_validStart
 41056   008476  0900               	iorlw	0
 41057   008478  A4D8               	btfss	status,2,c
 41058   00847A  D002               	goto	l19313
 41059   00847C                     u18990:
 41060                           
 41061                           ;../../VLCBlib_PIC/event_teach_large.c: 1203:         return CMDERR_INVALID_EVENT;
 41062   00847C  0E07               	movlw	7
 41063   00847E  0012               	return	
 41064   008480                     l19313:
 41065                           
 41066                           ;../../VLCBlib_PIC/event_teach_large.c: 1205:     for (evNum=0; evNum < 20; ) {
 41067   008480  0E00               	movlw	0
 41068   008482  0100               	movlb	0	; () banked
 41069   008484  6FA4               	movwf	getEVs@evNum& (0+255),b
 41070   008486                     l19319:
 41071                           
 41072                           ; BSR set to: 0
 41073                           ;../../VLCBlib_PIC/event_teach_large.c: 1206:         uint8_t evIdx;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1207:         for (evIdx=0; evIdx < 10; evIdx++) {
 41074   008486  0E00               	movlw	0
 41075   008488  6FA2               	movwf	getEVs@evIdx& (0+255),b
 41076   00848A                     l19325:
 41077                           
 41078                           ; BSR set to: 0
 41079                           ;../../VLCBlib_PIC/event_teach_large.c: 1208:             evs[evNum] = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 41080   00848A  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41081   00848C  0D10               	mullw	16
 41082   00848E  CFF3 F09D          	movff	prodl,??_getEVs
 41083   008492  CFF4 F09E          	movff	prodh,??_getEVs+1
 41084   008496  51A2               	movf	getEVs@evIdx& (0+255),w,b
 41085   008498  279D               	addwf	??_getEVs& (0+255),f,b
 41086   00849A  0E00               	movlw	0
 41087   00849C  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 41088   00849E  0E86               	movlw	134
 41089   0084A0  259D               	addwf	??_getEVs& (0+255),w,b
 41090   0084A2  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41091   0084A4  0EEF               	movlw	239
 41092   0084A6  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41093   0084A8  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41094   0084AA  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41095   0084AE  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41096   0084B2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41097   0084B4  0E01               	movlw	1
 41098   0084B6  EC0F  F05B         	call	_readNVM
 41099   0084BA  0E20               	movlw	low _evs
 41100   0084BC  0100               	movlb	0	; () banked
 41101   0084BE  25A4               	addwf	getEVs@evNum& (0+255),w,b
 41102   0084C0  6ED9               	movwf	fsr2l,c
 41103   0084C2  6ADA               	clrf	fsr2h,c
 41104   0084C4  0E02               	movlw	high _evs
 41105   0084C6  22DA               	addwfc	fsr2h,f,c
 41106   0084C8  C091  FFDF         	movff	?_readNVM,indf2
 41107                           
 41108                           ; BSR set to: 0
 41109                           ;../../VLCBlib_PIC/event_teach_large.c: 1209:             evNum++;
 41110   0084CC  2BA4               	incf	getEVs@evNum& (0+255),f,b
 41111                           
 41112                           ; BSR set to: 0
 41113                           ;../../VLCBlib_PIC/event_teach_large.c: 1210:         }
 41114   0084CE  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 41115                           
 41116                           ; BSR set to: 0
 41117   0084D0  0E09               	movlw	9
 41118   0084D2  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 41119   0084D4  D7DA               	goto	l19325
 41120                           
 41121                           ; BSR set to: 0
 41122                           ;../../VLCBlib_PIC/event_teach_large.c: 1211:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 41123   0084D6  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41124   0084D8  6F9D               	movwf	??_getEVs& (0+255),b
 41125   0084DA  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 41126   0084DC  3B9D               	swapf	??_getEVs& (0+255),f,b
 41127   0084DE  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 41128   0084E0  0EF0               	movlw	240
 41129   0084E2  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 41130   0084E4  519D               	movf	??_getEVs& (0+255),w,b
 41131   0084E6  0B0F               	andlw	15
 41132   0084E8  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 41133   0084EA  0EF0               	movlw	240
 41134   0084EC  179D               	andwf	??_getEVs& (0+255),f,b
 41135   0084EE  0E80               	movlw	128
 41136   0084F0  259D               	addwf	??_getEVs& (0+255),w,b
 41137   0084F2  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41138   0084F4  0EEF               	movlw	239
 41139   0084F6  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41140   0084F8  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41141   0084FA  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41142   0084FE  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41143   008502  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41144   008504  0E01               	movlw	1
 41145   008506  EC0F  F05B         	call	_readNVM
 41146   00850A  0100               	movlb	0	; () banked
 41147   00850C  5191               	movf	?_readNVM& (0+255),w,b
 41148   00850E  6FA1               	movwf	getEVs@f& (0+255),b
 41149                           
 41150                           ; BSR set to: 0
 41151                           ;../../VLCBlib_PIC/event_teach_large.c: 1212:         if (! f.continued) {
 41152   008510  B9A1               	btfsc	getEVs@f& (0+255),4,b
 41153   008512  D00F               	goto	l19351
 41154   008514                     u19010:
 41155                           
 41156                           ; BSR set to: 0
 41157                           ;../../VLCBlib_PIC/event_teach_large.c: 1213:             for (; evNum < 20; evNum++) {
 41158   008514  0E13               	movlw	19
 41159   008516  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 41160   008518  D001               	goto	l19341
 41161   00851A  D009               	goto	l19347
 41162   00851C                     l19341:
 41163                           
 41164                           ; BSR set to: 0
 41165                           ;../../VLCBlib_PIC/event_teach_large.c: 1214:                 evs[evNum] = 0;
 41166   00851C  0E20               	movlw	low _evs
 41167   00851E  25A4               	addwf	getEVs@evNum& (0+255),w,b
 41168   008520  6ED9               	movwf	fsr2l,c
 41169   008522  6ADA               	clrf	fsr2h,c
 41170   008524  0E02               	movlw	high _evs
 41171   008526  22DA               	addwfc	fsr2h,f,c
 41172   008528  6ADF               	clrf	indf2,c
 41173                           
 41174                           ; BSR set to: 0
 41175                           ;../../VLCBlib_PIC/event_teach_large.c: 1215:             }
 41176   00852A  2BA4               	incf	getEVs@evNum& (0+255),f,b
 41177   00852C  D7F3               	goto	u19010
 41178   00852E                     l19347:
 41179                           
 41180                           ; BSR set to: 0
 41181                           ;../../VLCBlib_PIC/event_teach_large.c: 1216:             return 0;
 41182   00852E  0E00               	movlw	0
 41183   008530  0012               	return	
 41184   008532                     l19351:
 41185                           
 41186                           ; BSR set to: 0
 41187                           ;../../VLCBlib_PIC/event_teach_large.c: 1218:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 41188   008532  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 41189   008534  0D10               	mullw	16
 41190   008536  CFF3 F09D          	movff	prodl,??_getEVs
 41191   00853A  CFF4 F09E          	movff	prodh,??_getEVs+1
 41192   00853E  0E81               	movlw	129
 41193   008540  259D               	addwf	??_getEVs& (0+255),w,b
 41194   008542  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 41195   008544  0EEF               	movlw	239
 41196   008546  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 41197   008548  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 41198   00854A  C09F  F091         	movff	??_getEVs+2,readNVM@index
 41199   00854E  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 41200   008552  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41201   008554  0E01               	movlw	1
 41202   008556  EC0F  F05B         	call	_readNVM
 41203   00855A  0100               	movlb	0	; () banked
 41204   00855C  5191               	movf	?_readNVM& (0+255),w,b
 41205   00855E  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 41206                           
 41207                           ; BSR set to: 0
 41208                           ;../../VLCBlib_PIC/event_teach_large.c: 1219:         if (tableIndex == 0xff) {
 41209   008560  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 41210   008562  B4D8               	btfsc	status,2,c
 41211   008564  D78B               	goto	u18990
 41212                           
 41213                           ; BSR set to: 0
 41214                           ;../../VLCBlib_PIC/event_teach_large.c: 1222:     }
 41215   008566  0E13               	movlw	19
 41216   008568  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 41217   00856A  D78D               	goto	l19319
 41218   00856C  D7E0               	goto	l19347
 41219   00856E                     __end_of_getEVs:
 41220                           	callstack 0
 41221                           
 41222 ;; *************** function _validStart *****************
 41223 ;; Defined at:
 41224 ;;		line 1296 in file "../../VLCBlib_PIC/event_teach_large.c"
 41225 ;; Parameters:    Size  Location     Type
 41226 ;;  tableIndex      1    wreg     unsigned char 
 41227 ;; Auto vars:     Size  Location     Type
 41228 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 41229 ;;  f               1   60[BANK0 ] struct .
 41230 ;; Return value:  Size  Location     Type
 41231 ;;                  1    wreg      enum E12766
 41232 ;; Registers used:
 41233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41234 ;; Tracked objects:
 41235 ;;		On entry : 0/0
 41236 ;;		On exit  : 0/0
 41237 ;;		Unchanged: 0/0
 41238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41240 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41241 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41242 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41243 ;;Total ram usage:        6 bytes
 41244 ;; Hardware stack levels used: 1
 41245 ;; Hardware stack levels required when called: 14
 41246 ;; This function calls:
 41247 ;;		_readNVM
 41248 ;; This function is called by:
 41249 ;;		_deleteActionRange
 41250 ;;		_nerdCallback
 41251 ;;		_doNenrd
 41252 ;;		_doRqevn
 41253 ;;		_doReval
 41254 ;;		_removeTableEntry
 41255 ;;		_checkRemoveTableEntry
 41256 ;;		_getEv
 41257 ;;		_numEv
 41258 ;;		_getEVs
 41259 ;;		_rebuildHashtable
 41260 ;;		_deleteHappeningRange
 41261 ;; This function uses a non-reentrant model
 41262 ;;
 41263                           
 41264                           	psect	text175
 41265   00BAF0                     __ptext175:
 41266                           	callstack 0
 41267   00BAF0                     _validStart:
 41268                           	callstack 13
 41269                           
 41270                           ;incstack = 0
 41271                           ;validStart@tableIndex stored from wreg
 41272   00BAF0  0100               	movlb	0	; () banked
 41273   00BAF2  6F9B               	movwf	validStart@tableIndex& (0+255),b
 41274                           
 41275                           ;../../VLCBlib_PIC/event_teach_large.c: 1297:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1301:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*ta
      +                          bleIndex+0);
 41276   00BAF4  0100               	movlb	0	; () banked
 41277   00BAF6  519B               	movf	validStart@tableIndex& (0+255),w,b
 41278   00BAF8  6F97               	movwf	??_validStart& (0+255),b
 41279   00BAFA  6B98               	clrf	(??_validStart+1)& (0+255),b
 41280   00BAFC  3B97               	swapf	??_validStart& (0+255),f,b
 41281   00BAFE  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 41282   00BB00  0EF0               	movlw	240
 41283   00BB02  1798               	andwf	(??_validStart+1)& (0+255),f,b
 41284   00BB04  5197               	movf	??_validStart& (0+255),w,b
 41285   00BB06  0B0F               	andlw	15
 41286   00BB08  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 41287   00BB0A  0EF0               	movlw	240
 41288   00BB0C  1797               	andwf	??_validStart& (0+255),f,b
 41289   00BB0E  0E80               	movlw	128
 41290   00BB10  2597               	addwf	??_validStart& (0+255),w,b
 41291   00BB12  6F99               	movwf	(??_validStart+2)& (0+255),b
 41292   00BB14  0EEF               	movlw	239
 41293   00BB16  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 41294   00BB18  6F9A               	movwf	(??_validStart+3)& (0+255),b
 41295   00BB1A  C099  F091         	movff	??_validStart+2,readNVM@index
 41296   00BB1E  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 41297   00BB22  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41298   00BB24  0E01               	movlw	1
 41299   00BB26  EC0F  F05B         	call	_readNVM
 41300   00BB2A  0100               	movlb	0	; () banked
 41301   00BB2C  5191               	movf	?_readNVM& (0+255),w,b
 41302   00BB2E  6F9C               	movwf	validStart@f& (0+255),b
 41303                           
 41304                           ; BSR set to: 0
 41305                           ;../../VLCBlib_PIC/event_teach_large.c: 1302:     if (( !f.freeEntry) && ( ! f.continuat
      +                          ion)) {
 41306   00BB30  AF9C               	btfss	validStart@f& (0+255),7,b
 41307                           
 41308                           ; BSR set to: 0
 41309   00BB32  BB9C               	btfsc	validStart@f& (0+255),5,b
 41310   00BB34  D002               	goto	l19043
 41311                           
 41312                           ; BSR set to: 0
 41313                           ;../../VLCBlib_PIC/event_teach_large.c: 1303:         return TRUE;
 41314   00BB36  0E01               	movlw	1
 41315   00BB38  0012               	return	
 41316   00BB3A                     l19043:
 41317                           
 41318                           ; BSR set to: 0
 41319                           ;../../VLCBlib_PIC/event_teach_large.c: 1305:         return FALSE;
 41320   00BB3A  0E00               	movlw	0
 41321                           
 41322                           ; BSR set to: 0
 41323   00BB3C  0012               	return		;funcret
 41324   00BB3E                     __end_of_validStart:
 41325                           	callstack 0
 41326                           
 41327 ;; *************** function _findEvent *****************
 41328 ;; Defined at:
 41329 ;;		line 1012 in file "../../VLCBlib_PIC/event_teach_large.c"
 41330 ;; Parameters:    Size  Location     Type
 41331 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 41332 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 41333 ;; Auto vars:     Size  Location     Type
 41334 ;;  en              2    8[BANK1 ] unsigned short 
 41335 ;;  nn              2    6[BANK1 ] unsigned short 
 41336 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 41337 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 41338 ;;  hash            1   10[BANK1 ] unsigned char 
 41339 ;; Return value:  Size  Location     Type
 41340 ;;                  1    wreg      unsigned char 
 41341 ;; Registers used:
 41342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41343 ;; Tracked objects:
 41344 ;;		On entry : 0/0
 41345 ;;		On exit  : 0/0
 41346 ;;		Unchanged: 0/0
 41347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41348 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41349 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41350 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41351 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41352 ;;Total ram usage:       13 bytes
 41353 ;; Hardware stack levels used: 1
 41354 ;; Hardware stack levels required when called: 15
 41355 ;; This function calls:
 41356 ;;		_getEN
 41357 ;;		_getHash
 41358 ;;		_getNN
 41359 ;; This function is called by:
 41360 ;;		_consumer2QProcessMessage
 41361 ;;		_ackEventProcessMessage
 41362 ;;		_doReqev
 41363 ;;		_removeEvent
 41364 ;;		_addEvent
 41365 ;;		_producerProcessMessage
 41366 ;; This function uses a non-reentrant model
 41367 ;;
 41368                           
 41369                           	psect	text176
 41370   00A5F0                     __ptext176:
 41371                           	callstack 0
 41372   00A5F0                     _findEvent:
 41373                           	callstack 12
 41374                           
 41375                           ;../../VLCBlib_PIC/event_teach_large.c: 1014:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 41376                           
 41377                           ; BSR set to: 0
 41378                           ;incstack = 0
 41379   00A5F0  C1BE  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 41380   00A5F4  C1BF  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 41381   00A5F8  C1C0  F0A5         	movff	findEvent@eventNumber,getHash@en
 41382   00A5FC  C1C1  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 41383   00A600  EC6E  F063         	call	_getHash	;wreg free
 41384   00A604  0101               	movlb	1	; () banked
 41385   00A606  6FC8               	movwf	findEvent@hash& (0+255),b
 41386                           
 41387                           ; BSR set to: 1
 41388                           ;../../VLCBlib_PIC/event_teach_large.c: 1015:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 1016:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 41389   00A608  0E00               	movlw	0
 41390   00A60A  6FC9               	movwf	findEvent@chainIdx& (0+255),b
 41391   00A60C                     l19717:
 41392                           
 41393                           ; BSR set to: 1
 41394                           ;../../VLCBlib_PIC/event_teach_large.c: 1017:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 41395   00A60C  51C8               	movf	findEvent@hash& (0+255),w,b
 41396   00A60E  0D14               	mullw	20
 41397   00A610  0E48               	movlw	low _eventChains
 41398   00A612  24F3               	addwf	243,w,c
 41399   00A614  6FC2               	movwf	??_findEvent& (0+255),b
 41400   00A616  0E05               	movlw	high _eventChains
 41401   00A618  20F4               	addwfc	prodh,w,c
 41402   00A61A  6FC3               	movwf	(??_findEvent+1)& (0+255),b
 41403   00A61C  51C9               	movf	findEvent@chainIdx& (0+255),w,b
 41404   00A61E  25C2               	addwf	??_findEvent& (0+255),w,b
 41405   00A620  6ED9               	movwf	fsr2l,c
 41406   00A622  0E00               	movlw	0
 41407   00A624  21C3               	addwfc	(??_findEvent+1)& (0+255),w,b
 41408   00A626  6EDA               	movwf	fsr2h,c
 41409   00A628  50DF               	movf	indf2,w,c
 41410   00A62A  6FCA               	movwf	findEvent@tableIndex& (0+255),b
 41411                           
 41412                           ; BSR set to: 1
 41413                           ;../../VLCBlib_PIC/event_teach_large.c: 1018:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1019:         if (tableIndex == 0xff) return 0xff;
 41414   00A62C  29CA               	incf	findEvent@tableIndex& (0+255),w,b
 41415   00A62E  A4D8               	btfss	status,2,c
 41416   00A630  D002               	goto	l19725
 41417   00A632                     u19550:
 41418                           
 41419                           ; BSR set to: 1
 41420   00A632  0EFF               	movlw	255
 41421   00A634  0012               	return	
 41422   00A636                     l19725:
 41423                           
 41424                           ; BSR set to: 1
 41425                           ;../../VLCBlib_PIC/event_teach_large.c: 1020:         nn = getNN(tableIndex);
 41426   00A636  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 41427   00A638  EC85  F04B         	call	_getNN
 41428   00A63C  C097  F1C4         	movff	?_getNN,findEvent@nn
 41429   00A640  C098  F1C5         	movff	?_getNN+1,findEvent@nn+1
 41430                           
 41431                           ;../../VLCBlib_PIC/event_teach_large.c: 1021:         en = getEN(tableIndex);
 41432   00A644  0101               	movlb	1	; () banked
 41433   00A646  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 41434   00A648  ECD8  F056         	call	_getEN
 41435   00A64C  C097  F1C6         	movff	?_getEN,findEvent@en
 41436   00A650  C098  F1C7         	movff	?_getEN+1,findEvent@en+1
 41437                           
 41438                           ;../../VLCBlib_PIC/event_teach_large.c: 1022:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 41439   00A654  0101               	movlb	1	; () banked
 41440   00A656  51BE               	movf	findEvent@nodeNumber& (0+255),w,b
 41441   00A658  19C4               	xorwf	findEvent@nn& (0+255),w,b
 41442   00A65A  E10D               	bnz	l19735
 41443   00A65C  51BF               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 41444   00A65E  19C5               	xorwf	(findEvent@nn+1)& (0+255),w,b
 41445   00A660  A4D8               	btfss	status,2,c
 41446   00A662  D009               	goto	l19735
 41447                           
 41448                           ; BSR set to: 1
 41449   00A664  51C0               	movf	findEvent@eventNumber& (0+255),w,b
 41450   00A666  19C6               	xorwf	findEvent@en& (0+255),w,b
 41451   00A668  E106               	bnz	l19735
 41452   00A66A  51C1               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 41453   00A66C  19C7               	xorwf	(findEvent@en+1)& (0+255),w,b
 41454   00A66E  A4D8               	btfss	status,2,c
 41455   00A670  D002               	goto	l19735
 41456                           
 41457                           ; BSR set to: 1
 41458                           ;../../VLCBlib_PIC/event_teach_large.c: 1023:             return tableIndex;
 41459   00A672  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 41460   00A674  0012               	return	
 41461   00A676                     l19735:
 41462                           
 41463                           ; BSR set to: 1
 41464                           ;../../VLCBlib_PIC/event_teach_large.c: 1025:     }
 41465   00A676  2BC9               	incf	findEvent@chainIdx& (0+255),f,b
 41466                           
 41467                           ; BSR set to: 1
 41468   00A678  0E13               	movlw	19
 41469   00A67A  65C9               	cpfsgt	findEvent@chainIdx& (0+255),b
 41470   00A67C  D7C7               	goto	l19717
 41471   00A67E  D7D9               	goto	u19550
 41472   00A680                     __end_of_findEvent:
 41473                           	callstack 0
 41474                           
 41475 ;; *************** function _getNN *****************
 41476 ;; Defined at:
 41477 ;;		line 1233 in file "../../VLCBlib_PIC/event_teach_large.c"
 41478 ;; Parameters:    Size  Location     Type
 41479 ;;  tableIndex      1    wreg     unsigned char 
 41480 ;; Auto vars:     Size  Location     Type
 41481 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 41482 ;;  lo              2   63[BANK0 ] unsigned short 
 41483 ;;  hi              2   61[BANK0 ] unsigned short 
 41484 ;;  f               1   65[BANK0 ] struct .
 41485 ;; Return value:  Size  Location     Type
 41486 ;;                  2   55[BANK0 ] unsigned short 
 41487 ;; Registers used:
 41488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41489 ;; Tracked objects:
 41490 ;;		On entry : 0/0
 41491 ;;		On exit  : 0/0
 41492 ;;		Unchanged: 0/0
 41493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41494 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41495 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41496 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41497 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41498 ;;Total ram usage:       12 bytes
 41499 ;; Hardware stack levels used: 1
 41500 ;; Hardware stack levels required when called: 14
 41501 ;; This function calls:
 41502 ;;		_readNVM
 41503 ;; This function is called by:
 41504 ;;		_nerdCallback
 41505 ;;		_doNenrd
 41506 ;;		_reqevCallback
 41507 ;;		_findEvent
 41508 ;;		_rebuildHashtable
 41509 ;;		_sendProducedEvent
 41510 ;; This function uses a non-reentrant model
 41511 ;;
 41512                           
 41513                           	psect	text177
 41514   00970A                     __ptext177:
 41515                           	callstack 0
 41516   00970A                     _getNN:
 41517                           	callstack 13
 41518                           
 41519                           ; BSR set to: 1
 41520                           ;incstack = 0
 41521                           ;getNN@tableIndex stored from wreg
 41522   00970A  0100               	movlb	0	; () banked
 41523   00970C  6FA2               	movwf	getNN@tableIndex& (0+255),b
 41524                           
 41525                           ;../../VLCBlib_PIC/event_teach_large.c: 1234:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1235:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1236:     Ev
      +                          entTableFlags f;;../../VLCBlib_PIC/event_teach_large.c: 1238:     f.asByte = (uint8_t)re
      +                          adNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 41526   00970E  0100               	movlb	0	; () banked
 41527   009710  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41528   009712  6F99               	movwf	??_getNN& (0+255),b
 41529   009714  6B9A               	clrf	(??_getNN+1)& (0+255),b
 41530   009716  3B99               	swapf	??_getNN& (0+255),f,b
 41531   009718  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 41532   00971A  0EF0               	movlw	240
 41533   00971C  179A               	andwf	(??_getNN+1)& (0+255),f,b
 41534   00971E  5199               	movf	??_getNN& (0+255),w,b
 41535   009720  0B0F               	andlw	15
 41536   009722  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 41537   009724  0EF0               	movlw	240
 41538   009726  1799               	andwf	??_getNN& (0+255),f,b
 41539   009728  0E80               	movlw	128
 41540   00972A  2599               	addwf	??_getNN& (0+255),w,b
 41541   00972C  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41542   00972E  0EEF               	movlw	239
 41543   009730  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41544   009732  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41545   009734  C09B  F091         	movff	??_getNN+2,readNVM@index
 41546   009738  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41547   00973C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41548   00973E  0E01               	movlw	1
 41549   009740  EC0F  F05B         	call	_readNVM
 41550   009744  0100               	movlb	0	; () banked
 41551   009746  5191               	movf	?_readNVM& (0+255),w,b
 41552   009748  6FA1               	movwf	getNN@f& (0+255),b
 41553                           
 41554                           ; BSR set to: 0
 41555                           ;../../VLCBlib_PIC/event_teach_large.c: 1239:     if (f.forceOwnNN) {
 41556   00974A  ADA1               	btfss	getNN@f& (0+255),6,b
 41557   00974C  D005               	goto	l19191
 41558                           
 41559                           ; BSR set to: 0
 41560                           ;../../VLCBlib_PIC/event_teach_large.c: 1240:         return nn.word;
 41561   00974E  C0B4  F097         	movff	_nn,?_getNN
 41562   009752  C0B5  F098         	movff	_nn+1,?_getNN+1
 41563   009756  0012               	return	
 41564   009758                     l19191:
 41565                           
 41566                           ; BSR set to: 0
 41567                           ;../../VLCBlib_PIC/event_teach_large.c: 1242:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2);
 41568   009758  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41569   00975A  0D10               	mullw	16
 41570   00975C  CFF3 F099          	movff	prodl,??_getNN
 41571   009760  CFF4 F09A          	movff	prodh,??_getNN+1
 41572   009764  0E82               	movlw	130
 41573   009766  2599               	addwf	??_getNN& (0+255),w,b
 41574   009768  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41575   00976A  0EEF               	movlw	239
 41576   00976C  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41577   00976E  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41578   009770  C09B  F091         	movff	??_getNN+2,readNVM@index
 41579   009774  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41580   009778  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41581   00977A  0E01               	movlw	1
 41582   00977C  EC0F  F05B         	call	_readNVM
 41583   009780  0100               	movlb	0	; () banked
 41584   009782  5191               	movf	?_readNVM& (0+255),w,b
 41585   009784  6F9F               	movwf	getNN@lo& (0+255),b
 41586   009786  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 41587                           
 41588                           ;../../VLCBlib_PIC/event_teach_large.c: 1243:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2 +1);
 41589   009788  51A2               	movf	getNN@tableIndex& (0+255),w,b
 41590   00978A  0D10               	mullw	16
 41591   00978C  CFF3 F099          	movff	prodl,??_getNN
 41592   009790  CFF4 F09A          	movff	prodh,??_getNN+1
 41593   009794  0E83               	movlw	131
 41594   009796  2599               	addwf	??_getNN& (0+255),w,b
 41595   009798  6F9B               	movwf	(??_getNN+2)& (0+255),b
 41596   00979A  0EEF               	movlw	239
 41597   00979C  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 41598   00979E  6F9C               	movwf	(??_getNN+3)& (0+255),b
 41599   0097A0  C09B  F091         	movff	??_getNN+2,readNVM@index
 41600   0097A4  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 41601   0097A8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41602   0097AA  0E01               	movlw	1
 41603   0097AC  EC0F  F05B         	call	_readNVM
 41604   0097B0  0100               	movlb	0	; () banked
 41605   0097B2  5191               	movf	?_readNVM& (0+255),w,b
 41606   0097B4  6F9D               	movwf	getNN@hi& (0+255),b
 41607   0097B6  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 41608                           
 41609                           ; BSR set to: 0
 41610                           ;../../VLCBlib_PIC/event_teach_large.c: 1244:     return lo | (hi << 8);
 41611   0097B8  519D               	movf	getNN@hi& (0+255),w,b
 41612   0097BA  6F9A               	movwf	(??_getNN+1)& (0+255),b
 41613   0097BC  6B99               	clrf	??_getNN& (0+255),b
 41614   0097BE  519F               	movf	getNN@lo& (0+255),w,b
 41615   0097C0  1199               	iorwf	??_getNN& (0+255),w,b
 41616   0097C2  6F97               	movwf	?_getNN& (0+255),b
 41617   0097C4  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 41618   0097C6  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 41619   0097C8  6F98               	movwf	(?_getNN+1)& (0+255),b
 41620                           
 41621                           ; BSR set to: 0
 41622   0097CA  0012               	return		;funcret
 41623   0097CC                     __end_of_getNN:
 41624                           	callstack 0
 41625                           
 41626 ;; *************** function _getHash *****************
 41627 ;; Defined at:
 41628 ;;		line 1327 in file "../../VLCBlib_PIC/event_teach_large.c"
 41629 ;; Parameters:    Size  Location     Type
 41630 ;;  nn              2   67[BANK0 ] unsigned short 
 41631 ;;  en              2   69[BANK0 ] unsigned short 
 41632 ;; Auto vars:     Size  Location     Type
 41633 ;;  hash            1   72[BANK0 ] unsigned char 
 41634 ;; Return value:  Size  Location     Type
 41635 ;;                  1    wreg      unsigned char 
 41636 ;; Registers used:
 41637 ;;		wreg, status,2, status,0, prodl, prodh
 41638 ;; Tracked objects:
 41639 ;;		On entry : 0/0
 41640 ;;		On exit  : 0/0
 41641 ;;		Unchanged: 0/0
 41642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41643 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41645 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41646 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41647 ;;Total ram usage:        6 bytes
 41648 ;; Hardware stack levels used: 1
 41649 ;; Hardware stack levels required when called: 12
 41650 ;; This function calls:
 41651 ;;		Nothing
 41652 ;; This function is called by:
 41653 ;;		_findEvent
 41654 ;;		_rebuildHashtable
 41655 ;; This function uses a non-reentrant model
 41656 ;;
 41657                           
 41658                           	psect	text178
 41659   00C6DC                     __ptext178:
 41660                           	callstack 0
 41661   00C6DC                     _getHash:
 41662                           	callstack 15
 41663                           
 41664                           ;../../VLCBlib_PIC/event_teach_large.c: 1328:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1330:     hash = (uint8_t)(nn ^ (nn >> 8U));
 41665                           
 41666                           ; BSR set to: 0
 41667                           ;incstack = 0
 41668   00C6DC  0100               	movlb	0	; () banked
 41669   00C6DE  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 41670   00C6E0  19A3               	xorwf	getHash@nn& (0+255),w,b
 41671   00C6E2  6FA8               	movwf	getHash@hash& (0+255),b
 41672                           
 41673                           ; BSR set to: 0
 41674                           ;../../VLCBlib_PIC/event_teach_large.c: 1331:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 41675   00C6E4  51A6               	movf	(getHash@en+1)& (0+255),w,b
 41676   00C6E6  19A5               	xorwf	getHash@en& (0+255),w,b
 41677   00C6E8  6FA7               	movwf	??_getHash& (0+255),b
 41678   00C6EA  51A8               	movf	getHash@hash& (0+255),w,b
 41679   00C6EC  0D07               	mullw	7
 41680   00C6EE  50F3               	movf	243,w,c
 41681   00C6F0  25A7               	addwf	??_getHash& (0+255),w,b
 41682   00C6F2  6FA8               	movwf	getHash@hash& (0+255),b
 41683                           
 41684                           ; BSR set to: 0
 41685                           ;../../VLCBlib_PIC/event_teach_large.c: 1333:     hash %= 32;
 41686   00C6F4  0E1F               	movlw	31
 41687   00C6F6  17A8               	andwf	getHash@hash& (0+255),f,b
 41688                           
 41689                           ; BSR set to: 0
 41690                           ;../../VLCBlib_PIC/event_teach_large.c: 1334:     return hash;
 41691   00C6F8  51A8               	movf	getHash@hash& (0+255),w,b
 41692                           
 41693                           ; BSR set to: 0
 41694   00C6FA  0012               	return		;funcret
 41695   00C6FC                     __end_of_getHash:
 41696                           	callstack 0
 41697                           
 41698 ;; *************** function _getEN *****************
 41699 ;; Defined at:
 41700 ;;		line 1254 in file "../../VLCBlib_PIC/event_teach_large.c"
 41701 ;; Parameters:    Size  Location     Type
 41702 ;;  tableIndex      1    wreg     unsigned char 
 41703 ;; Auto vars:     Size  Location     Type
 41704 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 41705 ;;  lo              2   63[BANK0 ] unsigned short 
 41706 ;;  hi              2   61[BANK0 ] unsigned short 
 41707 ;; Return value:  Size  Location     Type
 41708 ;;                  2   55[BANK0 ] unsigned short 
 41709 ;; Registers used:
 41710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41711 ;; Tracked objects:
 41712 ;;		On entry : 0/0
 41713 ;;		On exit  : 0/0
 41714 ;;		Unchanged: 0/0
 41715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41716 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41717 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41718 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41719 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41720 ;;Total ram usage:       11 bytes
 41721 ;; Hardware stack levels used: 1
 41722 ;; Hardware stack levels required when called: 14
 41723 ;; This function calls:
 41724 ;;		_readNVM
 41725 ;; This function is called by:
 41726 ;;		_nerdCallback
 41727 ;;		_doNenrd
 41728 ;;		_reqevCallback
 41729 ;;		_findEvent
 41730 ;;		_rebuildHashtable
 41731 ;;		_sendProducedEvent
 41732 ;; This function uses a non-reentrant model
 41733 ;;
 41734                           
 41735                           	psect	text179
 41736   00ADB0                     __ptext179:
 41737                           	callstack 0
 41738   00ADB0                     _getEN:
 41739                           	callstack 13
 41740                           
 41741                           ; BSR set to: 0
 41742                           ;incstack = 0
 41743                           ;getEN@tableIndex stored from wreg
 41744   00ADB0  0100               	movlb	0	; () banked
 41745   00ADB2  6FA1               	movwf	getEN@tableIndex& (0+255),b
 41746                           
 41747                           ;../../VLCBlib_PIC/event_teach_large.c: 1255:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1256:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1258:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 41748   00ADB4  0100               	movlb	0	; () banked
 41749   00ADB6  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41750   00ADB8  0D10               	mullw	16
 41751   00ADBA  CFF3 F099          	movff	prodl,??_getEN
 41752   00ADBE  CFF4 F09A          	movff	prodh,??_getEN+1
 41753   00ADC2  0E84               	movlw	132
 41754   00ADC4  2599               	addwf	??_getEN& (0+255),w,b
 41755   00ADC6  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41756   00ADC8  0EEF               	movlw	239
 41757   00ADCA  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41758   00ADCC  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41759   00ADCE  C09B  F091         	movff	??_getEN+2,readNVM@index
 41760   00ADD2  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41761   00ADD6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41762   00ADD8  0E01               	movlw	1
 41763   00ADDA  EC0F  F05B         	call	_readNVM
 41764   00ADDE  0100               	movlb	0	; () banked
 41765   00ADE0  5191               	movf	?_readNVM& (0+255),w,b
 41766   00ADE2  6F9F               	movwf	getEN@lo& (0+255),b
 41767   00ADE4  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 41768                           
 41769                           ;../../VLCBlib_PIC/event_teach_large.c: 1259:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+4 +1);
 41770   00ADE6  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41771   00ADE8  0D10               	mullw	16
 41772   00ADEA  CFF3 F099          	movff	prodl,??_getEN
 41773   00ADEE  CFF4 F09A          	movff	prodh,??_getEN+1
 41774   00ADF2  0E85               	movlw	133
 41775   00ADF4  2599               	addwf	??_getEN& (0+255),w,b
 41776   00ADF6  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41777   00ADF8  0EEF               	movlw	239
 41778   00ADFA  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41779   00ADFC  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41780   00ADFE  C09B  F091         	movff	??_getEN+2,readNVM@index
 41781   00AE02  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41782   00AE06  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41783   00AE08  0E01               	movlw	1
 41784   00AE0A  EC0F  F05B         	call	_readNVM
 41785   00AE0E  0100               	movlb	0	; () banked
 41786   00AE10  5191               	movf	?_readNVM& (0+255),w,b
 41787   00AE12  6F9D               	movwf	getEN@hi& (0+255),b
 41788   00AE14  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 41789                           
 41790                           ; BSR set to: 0
 41791                           ;../../VLCBlib_PIC/event_teach_large.c: 1260:     return lo | (hi << 8);
 41792   00AE16  519D               	movf	getEN@hi& (0+255),w,b
 41793   00AE18  6F9A               	movwf	(??_getEN+1)& (0+255),b
 41794   00AE1A  6B99               	clrf	??_getEN& (0+255),b
 41795   00AE1C  519F               	movf	getEN@lo& (0+255),w,b
 41796   00AE1E  1199               	iorwf	??_getEN& (0+255),w,b
 41797   00AE20  6F97               	movwf	?_getEN& (0+255),b
 41798   00AE22  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 41799   00AE24  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 41800   00AE26  6F98               	movwf	(?_getEN+1)& (0+255),b
 41801                           
 41802                           ; BSR set to: 0
 41803   00AE28  0012               	return		;funcret
 41804   00AE2A                     __end_of_getEN:
 41805                           	callstack 0
 41806                           
 41807 ;; *************** function _configIO *****************
 41808 ;; Defined at:
 41809 ;;		line 559 in file "../main.c"
 41810 ;; Parameters:    Size  Location     Type
 41811 ;;  i               1    wreg     unsigned char 
 41812 ;; Auto vars:     Size  Location     Type
 41813 ;;  i               1    8[BANK1 ] unsigned char 
 41814 ;;  type            1    7[BANK1 ] unsigned char 
 41815 ;;  action          1    6[BANK1 ] unsigned char 
 41816 ;; Return value:  Size  Location     Type
 41817 ;;                  1    wreg      void 
 41818 ;; Registers used:
 41819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41820 ;; Tracked objects:
 41821 ;;		On entry : 0/0
 41822 ;;		On exit  : 0/0
 41823 ;;		Unchanged: 0/0
 41824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41826 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41827 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41828 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41829 ;;Total ram usage:        8 bytes
 41830 ;; Hardware stack levels used: 1
 41831 ;; Hardware stack levels required when called: 18
 41832 ;; This function calls:
 41833 ;;		_getNV
 41834 ;;		_readNVM
 41835 ;;		_setDigitalOutput
 41836 ;;		_writeNVM
 41837 ;; This function is called by:
 41838 ;;		_setup
 41839 ;;		_setType
 41840 ;; This function uses a non-reentrant model
 41841 ;;
 41842                           
 41843                           	psect	text180
 41844   004E50                     __ptext180:
 41845                           	callstack 0
 41846   004E50                     _configIO:
 41847                           	callstack 11
 41848                           
 41849                           ; BSR set to: 0
 41850                           ;incstack = 0
 41851                           ;configIO@i stored from wreg
 41852   004E50  0101               	movlb	1	; () banked
 41853   004E52  6FC6               	movwf	configIO@i& (0+255),b
 41854                           
 41855                           ;../main.c: 560:     uint8_t action;;../main.c: 561:     uint8_t type;;../main.c: 563:  
      +                             if (i >= 16) return;
 41856   004E54  0E0F               	movlw	15
 41857   004E56  0101               	movlb	1	; () banked
 41858   004E58  65C6               	cpfsgt	configIO@i& (0+255),b
 41859   004E5A  D001               	goto	l19953
 41860   004E5C  0012               	return	
 41861   004E5E                     l19953:
 41862                           
 41863                           ; BSR set to: 1
 41864                           ;../main.c: 566:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 41865   004E5E  51C6               	movf	configIO@i& (0+255),w,b
 41866   004E60  0D07               	mullw	7
 41867   004E62  50F3               	movf	243,w,c
 41868   004E64  0F10               	addlw	16
 41869   004E66  ECB0  F05F         	call	_getNV
 41870   004E6A  0100               	movlb	0	; () banked
 41871   004E6C  518D               	movf	?_getNV& (0+255),w,b
 41872   004E6E  0101               	movlb	1	; () banked
 41873   004E70  6FC5               	movwf	configIO@type& (0+255),b
 41874                           
 41875                           ;../main.c: 567:     switch (type) {
 41876   004E72  D060               	goto	l19977
 41877   004E74                     l19955:
 41878                           
 41879                           ; BSR set to: 1
 41880                           ;../main.c: 569:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 41881   004E74  51C6               	movf	configIO@i& (0+255),w,b
 41882   004E76  0D07               	mullw	7
 41883   004E78  50F3               	movf	243,w,c
 41884   004E7A  0F11               	addlw	17
 41885   004E7C  ECB0  F05F         	call	_getNV
 41886   004E80  0100               	movlb	0	; () banked
 41887   004E82  A58D               	btfss	?_getNV& (0+255),2,b
 41888   004E84  D018               	goto	l19959
 41889                           
 41890                           ; BSR set to: 0
 41891                           ;../main.c: 570:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 41892   004E86  0EDE               	movlw	222
 41893   004E88  0101               	movlb	1	; () banked
 41894   004E8A  25C6               	addwf	configIO@i& (0+255),w,b
 41895   004E8C  6FBF               	movwf	??_configIO& (0+255),b
 41896   004E8E  6BC0               	clrf	(??_configIO+1)& (0+255),b
 41897   004E90  0E03               	movlw	3
 41898   004E92  23C0               	addwfc	(??_configIO+1)& (0+255),f,b
 41899   004E94  C1BF  F091         	movff	??_configIO,readNVM@index
 41900   004E98  C1C0  F092         	movff	??_configIO+1,readNVM@index+1
 41901   004E9C  0100               	movlb	0	; () banked
 41902   004E9E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41903   004EA0  0E00               	movlw	0
 41904   004EA2  EC0F  F05B         	call	_readNVM
 41905   004EA6  0100               	movlb	0	; () banked
 41906   004EA8  5191               	movf	?_readNVM& (0+255),w,b
 41907   004EAA  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41908   004EAC  0101               	movlb	1	; () banked
 41909   004EAE  51C6               	movf	configIO@i& (0+255),w,b
 41910   004EB0  EC87  F053         	call	_setDigitalOutput
 41911                           
 41912                           ;../main.c: 571:             } else {
 41913   004EB4  D122               	goto	l20011
 41914   004EB6                     l19959:
 41915                           
 41916                           ; BSR set to: 0
 41917                           ;../main.c: 572:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 41918   004EB6  0101               	movlb	1	; () banked
 41919   004EB8  51C6               	movf	configIO@i& (0+255),w,b
 41920   004EBA  0D07               	mullw	7
 41921   004EBC  50F3               	movf	243,w,c
 41922   004EBE  0F11               	addlw	17
 41923   004EC0  ECB0  F05F         	call	_getNV
 41924   004EC4  0100               	movlb	0	; () banked
 41925   004EC6  BB8D               	btfsc	?_getNV& (0+255),5,b
 41926   004EC8  D005               	goto	l19963
 41927                           
 41928                           ; BSR set to: 0
 41929   004ECA  0E00               	movlw	0
 41930   004ECC  0101               	movlb	1	; () banked
 41931   004ECE  6FC3               	movwf	(_configIO$746+1)& (0+255),b
 41932   004ED0  0E02               	movlw	2
 41933   004ED2  D004               	goto	L25
 41934   004ED4                     l19963:
 41935                           
 41936                           ; BSR set to: 0
 41937   004ED4  0E00               	movlw	0
 41938   004ED6  0101               	movlb	1	; () banked
 41939   004ED8  6FC3               	movwf	(_configIO$746+1)& (0+255),b
 41940   004EDA  0E01               	movlw	1
 41941   004EDC                     L25:
 41942   004EDC  6FC2               	movwf	_configIO$746& (0+255),b
 41943                           
 41944                           ; BSR set to: 1
 41945   004EDE  C1C2  F1C4         	movff	_configIO$746,configIO@action
 41946                           
 41947                           ; BSR set to: 1
 41948                           ;../main.c: 573:                 setDigitalOutput(i, action);
 41949   004EE2  C1C4  F097         	movff	configIO@action,setDigitalOutput@state
 41950   004EE6  51C6               	movf	configIO@i& (0+255),w,b
 41951   004EE8  EC87  F053         	call	_setDigitalOutput
 41952                           
 41953                           ;../main.c: 575:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 41954   004EEC  0EDE               	movlw	222
 41955   004EEE  0101               	movlb	1	; () banked
 41956   004EF0  25C6               	addwf	configIO@i& (0+255),w,b
 41957   004EF2  6FBF               	movwf	??_configIO& (0+255),b
 41958   004EF4  6BC0               	clrf	(??_configIO+1)& (0+255),b
 41959   004EF6  0E03               	movlw	3
 41960   004EF8  23C0               	addwfc	(??_configIO+1)& (0+255),f,b
 41961   004EFA  C1BF  F0A4         	movff	??_configIO,writeNVM@index
 41962   004EFE  C1C0  F0A5         	movff	??_configIO+1,writeNVM@index+1
 41963   004F02  0100               	movlb	0	; () banked
 41964   004F04  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 41965   004F06  C1C4  F0A7         	movff	configIO@action,writeNVM@value
 41966   004F0A  0E00               	movlw	0
 41967   004F0C  EC9F  F05D         	call	_writeNVM
 41968   004F10  D0F4               	goto	l20011
 41969   004F12                     l19971:
 41970                           
 41971                           ; BSR set to: 1
 41972                           ;../main.c: 584:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41973   004F12  51C6               	movf	configIO@i& (0+255),w,b
 41974   004F14  0D07               	mullw	7
 41975   004F16  50F3               	movf	243,w,c
 41976   004F18  0F11               	addlw	17
 41977   004F1A  ECB0  F05F         	call	_getNV
 41978   004F1E  0100               	movlb	0	; () banked
 41979   004F20  518D               	movf	?_getNV& (0+255),w,b
 41980   004F22  0B10               	andlw	16
 41981   004F24  0101               	movlb	1	; () banked
 41982   004F26  6FC1               	movwf	_configIO$8093& (0+255),b
 41983                           
 41984                           ; BSR set to: 1
 41985                           ;../main.c: 584:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41986   004F28  C1C1  F097         	movff	_configIO$8093,setDigitalOutput@state
 41987   004F2C  51C6               	movf	configIO@i& (0+255),w,b
 41988   004F2E  EC87  F053         	call	_setDigitalOutput
 41989                           
 41990                           ;../main.c: 585:             break;
 41991   004F32  D0E3               	goto	l20011
 41992   004F34                     l19977:
 41993                           
 41994                           ; BSR set to: 1
 41995   004F34  51C5               	movf	configIO@type& (0+255),w,b
 41996                           
 41997                           ; Switch size 1, requested type "simple"
 41998                           ; Number of cases is 3, Range of values is 1 to 3
 41999                           ; switch strategies available:
 42000                           ; Name         Instructions Cycles
 42001                           ; simple_byte           10     6 (average)
 42002                           ;	Chosen strategy is simple_byte
 42003   004F36  0A01               	xorlw	1	; case 1
 42004   004F38  B4D8               	btfsc	status,2,c
 42005   004F3A  D79C               	goto	l19955
 42006   004F3C  0A03               	xorlw	3	; case 2
 42007   004F3E  B4D8               	btfsc	status,2,c
 42008   004F40  D7E8               	goto	l19971
 42009   004F42  0A01               	xorlw	1	; case 3
 42010   004F44  B4D8               	btfsc	status,2,c
 42011   004F46  D7E5               	goto	l19971
 42012   004F48  D0D8               	goto	l20011
 42013   004F4A                     l19979:
 42014                           
 42015                           ; BSR set to: 1
 42016                           ;../main.c: 599:             if ((type == 0) || (type == 5) || (type == 6)) {
 42017   004F4A  51C5               	movf	configIO@type& (0+255),w,b
 42018   004F4C  B4D8               	btfsc	status,2,c
 42019   004F4E  D008               	goto	u19930
 42020                           
 42021                           ; BSR set to: 1
 42022   004F50  0E05               	movlw	5
 42023   004F52  19C5               	xorwf	configIO@type& (0+255),w,b
 42024   004F54  B4D8               	btfsc	status,2,c
 42025   004F56  D004               	goto	u19930
 42026                           
 42027                           ; BSR set to: 1
 42028   004F58  0E06               	movlw	6
 42029   004F5A  19C5               	xorwf	configIO@type& (0+255),w,b
 42030   004F5C  A4D8               	btfss	status,2,c
 42031   004F5E  D01E               	goto	l19987
 42032   004F60                     u19930:
 42033                           
 42034                           ; BSR set to: 1
 42035                           ;../main.c: 600:                 TRISA |= (1 << configs[i].no);
 42036   004F60  51C6               	movf	configIO@i& (0+255),w,b
 42037   004F62  0D04               	mullw	4
 42038   004F64  0E02               	movlw	2
 42039   004F66  26F3               	addwf	243,f,c
 42040   004F68  0E00               	movlw	0
 42041   004F6A  22F4               	addwfc	244,f,c
 42042   004F6C  0E29               	movlw	low _configs
 42043   004F6E  24F3               	addwf	243,w,c
 42044   004F70  6EF6               	movwf	tblptrl,c
 42045   004F72  0EEE               	movlw	high _configs
 42046   004F74  20F4               	addwfc	244,w,c
 42047   004F76  6EF7               	movwf	tblptrh,c
 42048   004F78                     	if	1	;There are 3 active tblptr bytes
 42049   004F78  6AF8               	clrf	tblptru,c
 42050   004F7A  0E00               	movlw	low (__mediumconst shr (0+16))
 42051   004F7C  22F8               	addwfc	tblptru,f,c
 42052   004F7E                     	endif
 42053   004F7E  0008               	tblrd		*
 42054   004F80  CFF5 F1BF          	movff	tablat,??_configIO
 42055   004F84  0E01               	movlw	1
 42056   004F86  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42057   004F88  2BBF               	incf	??_configIO& (0+255),f,b
 42058   004F8A  D002               	goto	u19944
 42059   004F8C                     u19945:
 42060   004F8C  90D8               	bcf	status,0,c
 42061   004F8E  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42062   004F90                     u19944:
 42063   004F90  2FBF               	decfsz	??_configIO& (0+255),f,b
 42064   004F92  D7FC               	goto	u19945
 42065   004F94  0101               	movlb	1	; () banked
 42066   004F96  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42067   004F98  1292               	iorwf	146,f,c	;volatile
 42068                           
 42069                           ;../main.c: 601:             } else {
 42070   004F9A  0012               	return	
 42071   004F9C                     l19987:
 42072                           
 42073                           ; BSR set to: 1
 42074                           ;../main.c: 602:                 TRISA &= ~(1 << configs[i].no);
 42075   004F9C  51C6               	movf	configIO@i& (0+255),w,b
 42076   004F9E  0D04               	mullw	4
 42077   004FA0  0E02               	movlw	2
 42078   004FA2  26F3               	addwf	243,f,c
 42079   004FA4  0E00               	movlw	0
 42080   004FA6  22F4               	addwfc	244,f,c
 42081   004FA8  0E29               	movlw	low _configs
 42082   004FAA  24F3               	addwf	243,w,c
 42083   004FAC  6EF6               	movwf	tblptrl,c
 42084   004FAE  0EEE               	movlw	high _configs
 42085   004FB0  20F4               	addwfc	244,w,c
 42086   004FB2  6EF7               	movwf	tblptrh,c
 42087   004FB4                     	if	1	;There are 3 active tblptr bytes
 42088   004FB4  6AF8               	clrf	tblptru,c
 42089   004FB6  0E00               	movlw	low (__mediumconst shr (0+16))
 42090   004FB8  22F8               	addwfc	tblptru,f,c
 42091   004FBA                     	endif
 42092   004FBA  0008               	tblrd		*
 42093   004FBC  CFF5 F1BF          	movff	tablat,??_configIO
 42094   004FC0  0E01               	movlw	1
 42095   004FC2  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42096   004FC4  2BBF               	incf	??_configIO& (0+255),f,b
 42097   004FC6  D002               	goto	u19954
 42098   004FC8                     u19955:
 42099   004FC8  90D8               	bcf	status,0,c
 42100   004FCA  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42101   004FCC                     u19954:
 42102   004FCC  2FBF               	decfsz	??_configIO& (0+255),f,b
 42103   004FCE  D7FC               	goto	u19955
 42104   004FD0  0101               	movlb	1	; () banked
 42105   004FD2  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42106   004FD4  0AFF               	xorlw	255
 42107   004FD6  1692               	andwf	146,f,c	;volatile
 42108   004FD8  0012               	return	
 42109   004FDA                     l19989:
 42110                           
 42111                           ; BSR set to: 1
 42112                           ;../main.c: 606:             if ((type == 0) || (type == 5) || (type == 6)) {
 42113   004FDA  51C5               	movf	configIO@type& (0+255),w,b
 42114   004FDC  B4D8               	btfsc	status,2,c
 42115   004FDE  D008               	goto	u19980
 42116                           
 42117                           ; BSR set to: 1
 42118   004FE0  0E05               	movlw	5
 42119   004FE2  19C5               	xorwf	configIO@type& (0+255),w,b
 42120   004FE4  B4D8               	btfsc	status,2,c
 42121   004FE6  D004               	goto	u19980
 42122                           
 42123                           ; BSR set to: 1
 42124   004FE8  0E06               	movlw	6
 42125   004FEA  19C5               	xorwf	configIO@type& (0+255),w,b
 42126   004FEC  A4D8               	btfss	status,2,c
 42127   004FEE  D01E               	goto	l19997
 42128   004FF0                     u19980:
 42129                           
 42130                           ; BSR set to: 1
 42131                           ;../main.c: 607:                 TRISB |= (1 << configs[i].no);
 42132   004FF0  51C6               	movf	configIO@i& (0+255),w,b
 42133   004FF2  0D04               	mullw	4
 42134   004FF4  0E02               	movlw	2
 42135   004FF6  26F3               	addwf	243,f,c
 42136   004FF8  0E00               	movlw	0
 42137   004FFA  22F4               	addwfc	244,f,c
 42138   004FFC  0E29               	movlw	low _configs
 42139   004FFE  24F3               	addwf	243,w,c
 42140   005000  6EF6               	movwf	tblptrl,c
 42141   005002  0EEE               	movlw	high _configs
 42142   005004  20F4               	addwfc	244,w,c
 42143   005006  6EF7               	movwf	tblptrh,c
 42144   005008                     	if	1	;There are 3 active tblptr bytes
 42145   005008  6AF8               	clrf	tblptru,c
 42146   00500A  0E00               	movlw	low (__mediumconst shr (0+16))
 42147   00500C  22F8               	addwfc	tblptru,f,c
 42148   00500E                     	endif
 42149   00500E  0008               	tblrd		*
 42150   005010  CFF5 F1BF          	movff	tablat,??_configIO
 42151   005014  0E01               	movlw	1
 42152   005016  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42153   005018  2BBF               	incf	??_configIO& (0+255),f,b
 42154   00501A  D002               	goto	u19994
 42155   00501C                     u19995:
 42156   00501C  90D8               	bcf	status,0,c
 42157   00501E  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42158   005020                     u19994:
 42159   005020  2FBF               	decfsz	??_configIO& (0+255),f,b
 42160   005022  D7FC               	goto	u19995
 42161   005024  0101               	movlb	1	; () banked
 42162   005026  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42163   005028  1293               	iorwf	147,f,c	;volatile
 42164                           
 42165                           ;../main.c: 608:             } else {
 42166   00502A  0012               	return	
 42167   00502C                     l19997:
 42168                           
 42169                           ; BSR set to: 1
 42170                           ;../main.c: 609:                 TRISB &= ~(1 << configs[i].no);
 42171   00502C  51C6               	movf	configIO@i& (0+255),w,b
 42172   00502E  0D04               	mullw	4
 42173   005030  0E02               	movlw	2
 42174   005032  26F3               	addwf	243,f,c
 42175   005034  0E00               	movlw	0
 42176   005036  22F4               	addwfc	244,f,c
 42177   005038  0E29               	movlw	low _configs
 42178   00503A  24F3               	addwf	243,w,c
 42179   00503C  6EF6               	movwf	tblptrl,c
 42180   00503E  0EEE               	movlw	high _configs
 42181   005040  20F4               	addwfc	244,w,c
 42182   005042  6EF7               	movwf	tblptrh,c
 42183   005044                     	if	1	;There are 3 active tblptr bytes
 42184   005044  6AF8               	clrf	tblptru,c
 42185   005046  0E00               	movlw	low (__mediumconst shr (0+16))
 42186   005048  22F8               	addwfc	tblptru,f,c
 42187   00504A                     	endif
 42188   00504A  0008               	tblrd		*
 42189   00504C  CFF5 F1BF          	movff	tablat,??_configIO
 42190   005050  0E01               	movlw	1
 42191   005052  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42192   005054  2BBF               	incf	??_configIO& (0+255),f,b
 42193   005056  D002               	goto	u20004
 42194   005058                     u20005:
 42195   005058  90D8               	bcf	status,0,c
 42196   00505A  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42197   00505C                     u20004:
 42198   00505C  2FBF               	decfsz	??_configIO& (0+255),f,b
 42199   00505E  D7FC               	goto	u20005
 42200   005060  0101               	movlb	1	; () banked
 42201   005062  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42202   005064  0AFF               	xorlw	255
 42203   005066  1693               	andwf	147,f,c	;volatile
 42204   005068  0012               	return	
 42205   00506A                     l19999:
 42206                           
 42207                           ; BSR set to: 1
 42208                           ;../main.c: 613:             if ((type == 0) || (type == 5) || (type == 6)) {
 42209   00506A  51C5               	movf	configIO@type& (0+255),w,b
 42210   00506C  B4D8               	btfsc	status,2,c
 42211   00506E  D008               	goto	u20030
 42212                           
 42213                           ; BSR set to: 1
 42214   005070  0E05               	movlw	5
 42215   005072  19C5               	xorwf	configIO@type& (0+255),w,b
 42216   005074  B4D8               	btfsc	status,2,c
 42217   005076  D004               	goto	u20030
 42218                           
 42219                           ; BSR set to: 1
 42220   005078  0E06               	movlw	6
 42221   00507A  19C5               	xorwf	configIO@type& (0+255),w,b
 42222   00507C  A4D8               	btfss	status,2,c
 42223   00507E  D01E               	goto	l20007
 42224   005080                     u20030:
 42225                           
 42226                           ; BSR set to: 1
 42227                           ;../main.c: 614:                 TRISC |= (1 << configs[i].no);
 42228   005080  51C6               	movf	configIO@i& (0+255),w,b
 42229   005082  0D04               	mullw	4
 42230   005084  0E02               	movlw	2
 42231   005086  26F3               	addwf	243,f,c
 42232   005088  0E00               	movlw	0
 42233   00508A  22F4               	addwfc	244,f,c
 42234   00508C  0E29               	movlw	low _configs
 42235   00508E  24F3               	addwf	243,w,c
 42236   005090  6EF6               	movwf	tblptrl,c
 42237   005092  0EEE               	movlw	high _configs
 42238   005094  20F4               	addwfc	244,w,c
 42239   005096  6EF7               	movwf	tblptrh,c
 42240   005098                     	if	1	;There are 3 active tblptr bytes
 42241   005098  6AF8               	clrf	tblptru,c
 42242   00509A  0E00               	movlw	low (__mediumconst shr (0+16))
 42243   00509C  22F8               	addwfc	tblptru,f,c
 42244   00509E                     	endif
 42245   00509E  0008               	tblrd		*
 42246   0050A0  CFF5 F1BF          	movff	tablat,??_configIO
 42247   0050A4  0E01               	movlw	1
 42248   0050A6  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42249   0050A8  2BBF               	incf	??_configIO& (0+255),f,b
 42250   0050AA  D002               	goto	u20044
 42251   0050AC                     u20045:
 42252   0050AC  90D8               	bcf	status,0,c
 42253   0050AE  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42254   0050B0                     u20044:
 42255   0050B0  2FBF               	decfsz	??_configIO& (0+255),f,b
 42256   0050B2  D7FC               	goto	u20045
 42257   0050B4  0101               	movlb	1	; () banked
 42258   0050B6  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42259   0050B8  1294               	iorwf	148,f,c	;volatile
 42260                           
 42261                           ;../main.c: 615:             } else {
 42262   0050BA  0012               	return	
 42263   0050BC                     l20007:
 42264                           
 42265                           ; BSR set to: 1
 42266                           ;../main.c: 616:                 TRISC &= ~(1 << configs[i].no);
 42267   0050BC  51C6               	movf	configIO@i& (0+255),w,b
 42268   0050BE  0D04               	mullw	4
 42269   0050C0  0E02               	movlw	2
 42270   0050C2  26F3               	addwf	243,f,c
 42271   0050C4  0E00               	movlw	0
 42272   0050C6  22F4               	addwfc	244,f,c
 42273   0050C8  0E29               	movlw	low _configs
 42274   0050CA  24F3               	addwf	243,w,c
 42275   0050CC  6EF6               	movwf	tblptrl,c
 42276   0050CE  0EEE               	movlw	high _configs
 42277   0050D0  20F4               	addwfc	244,w,c
 42278   0050D2  6EF7               	movwf	tblptrh,c
 42279   0050D4                     	if	1	;There are 3 active tblptr bytes
 42280   0050D4  6AF8               	clrf	tblptru,c
 42281   0050D6  0E00               	movlw	low (__mediumconst shr (0+16))
 42282   0050D8  22F8               	addwfc	tblptru,f,c
 42283   0050DA                     	endif
 42284   0050DA  0008               	tblrd		*
 42285   0050DC  CFF5 F1BF          	movff	tablat,??_configIO
 42286   0050E0  0E01               	movlw	1
 42287   0050E2  6FC0               	movwf	(??_configIO+1)& (0+255),b
 42288   0050E4  2BBF               	incf	??_configIO& (0+255),f,b
 42289   0050E6  D002               	goto	u20054
 42290   0050E8                     u20055:
 42291   0050E8  90D8               	bcf	status,0,c
 42292   0050EA  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 42293   0050EC                     u20054:
 42294   0050EC  2FBF               	decfsz	??_configIO& (0+255),f,b
 42295   0050EE  D7FC               	goto	u20055
 42296   0050F0  0101               	movlb	1	; () banked
 42297   0050F2  51C0               	movf	(??_configIO+1)& (0+255),w,b
 42298   0050F4  0AFF               	xorlw	255
 42299   0050F6  1694               	andwf	148,f,c	;volatile
 42300   0050F8  0012               	return	
 42301   0050FA                     l20011:
 42302   0050FA  0101               	movlb	1	; () banked
 42303   0050FC  51C6               	movf	configIO@i& (0+255),w,b
 42304   0050FE  0D04               	mullw	4
 42305   005100  0E01               	movlw	1
 42306   005102  26F3               	addwf	243,f,c
 42307   005104  0E00               	movlw	0
 42308   005106  22F4               	addwfc	244,f,c
 42309   005108  0E29               	movlw	low _configs
 42310   00510A  24F3               	addwf	243,w,c
 42311   00510C  6EF6               	movwf	tblptrl,c
 42312   00510E  0EEE               	movlw	high _configs
 42313   005110  20F4               	addwfc	244,w,c
 42314   005112  6EF7               	movwf	tblptrh,c
 42315   005114                     	if	1	;There are 3 active tblptr bytes
 42316   005114  6AF8               	clrf	tblptru,c
 42317   005116  0E00               	movlw	low (__mediumconst shr (0+16))
 42318   005118  22F8               	addwfc	tblptru,f,c
 42319   00511A                     	endif
 42320   00511A  0008               	tblrd		*
 42321   00511C  50F5               	movf	tablat,w,c
 42322                           
 42323                           ; Switch size 1, requested type "simple"
 42324                           ; Number of cases is 3, Range of values is 65 to 67
 42325                           ; switch strategies available:
 42326                           ; Name         Instructions Cycles
 42327                           ; simple_byte           10     6 (average)
 42328                           ;	Chosen strategy is simple_byte
 42329   00511E  0A41               	xorlw	65	; case 65
 42330   005120  B4D8               	btfsc	status,2,c
 42331   005122  D713               	goto	l19979
 42332   005124  0A03               	xorlw	3	; case 66
 42333   005126  B4D8               	btfsc	status,2,c
 42334   005128  D758               	goto	l19989
 42335   00512A  0A01               	xorlw	1	; case 67
 42336   00512C  A4D8               	btfss	status,2,c
 42337   00512E  0012               	return	
 42338   005130  D79C               	goto	l19999
 42339   005132                     __end_of_configIO:
 42340                           	callstack 0
 42341                           
 42342 ;; *************** function _writeNVM *****************
 42343 ;; Defined at:
 42344 ;;		line 533 in file "../../VLCBlib_PIC/nvm.c"
 42345 ;; Parameters:    Size  Location     Type
 42346 ;;  type            1    wreg     enum E12738
 42347 ;;  index           3   68[BANK0 ] unsigned um
 42348 ;;  value           1   71[BANK0 ] unsigned char 
 42349 ;; Auto vars:     Size  Location     Type
 42350 ;;  type            1    0[BANK1 ] enum E12738
 42351 ;; Return value:  Size  Location     Type
 42352 ;;                  1    wreg      unsigned char 
 42353 ;; Registers used:
 42354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42355 ;; Tracked objects:
 42356 ;;		On entry : 0/0
 42357 ;;		On exit  : 0/0
 42358 ;;		Unchanged: 0/0
 42359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42361 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42362 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42363 ;;      Totals:         0       6       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42364 ;;Total ram usage:        7 bytes
 42365 ;; Hardware stack levels used: 1
 42366 ;; Hardware stack levels required when called: 17
 42367 ;; This function calls:
 42368 ;;		_EEPROM_Write
 42369 ;;		_FLASH_Write
 42370 ;; This function is called by:
 42371 ;;		_configIO
 42372 ;;		_startDigitalOutput
 42373 ;;		_inputScan
 42374 ;;		_pollServos
 42375 ;;		_bootProcessMessage
 42376 ;;		_mnsFactoryReset
 42377 ;;		_mnsProcessMessage
 42378 ;;		_mnsPoll
 42379 ;;		_nvFactoryReset
 42380 ;;		_saveNV
 42381 ;;		_setNV
 42382 ;;		_factoryReset
 42383 ;;		_canFactoryReset
 42384 ;;		_setNewCanId
 42385 ;;		_clearAllEvents
 42386 ;;		_removeTableEntry
 42387 ;;		_addEvent
 42388 ;;		_writeEv
 42389 ;; This function uses a non-reentrant model
 42390 ;;
 42391                           
 42392                           	psect	text181
 42393   00BB3E                     __ptext181:
 42394                           	callstack 0
 42395   00BB3E                     _writeNVM:
 42396                           	callstack 11
 42397                           
 42398                           ; BSR set to: 1
 42399                           ;incstack = 0
 42400                           ;writeNVM@type stored from wreg
 42401   00BB3E  0101               	movlb	1	; () banked
 42402   00BB40  6FBE               	movwf	writeNVM@type& (0+255),b
 42403                           
 42404                           ;../../VLCBlib_PIC/nvm.c: 534:     switch(type) {
 42405   00BB42  D012               	goto	l19225
 42406   00BB44                     l19215:
 42407                           
 42408                           ; BSR set to: 0
 42409                           ;../../VLCBlib_PIC/nvm.c: 536:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 42410   00BB44  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 42411   00BB48  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 42412   00BB4C  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 42413   00BB50  EC7F  F059         	call	_EEPROM_Write	;wreg free
 42414   00BB54  0012               	return	
 42415   00BB56                     l19219:
 42416                           
 42417                           ; BSR set to: 0
 42418                           ;../../VLCBlib_PIC/nvm.c: 538:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 42419   00BB56  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 42420   00BB5A  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 42421   00BB5E  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 42422   00BB62  ECC6  F048         	call	_FLASH_Write	;wreg free
 42423   00BB66  0012               	return	
 42424   00BB68                     l19225:
 42425   00BB68  0101               	movlb	1	; () banked
 42426   00BB6A  51BE               	movf	writeNVM@type& (0+255),w,b
 42427   00BB6C  0100               	movlb	0	; () banked
 42428   00BB6E  6FA8               	movwf	??_writeNVM& (0+255),b
 42429   00BB70  6BA9               	clrf	(??_writeNVM+1)& (0+255),b
 42430                           
 42431                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42432                           ; Switch size 1, requested type "simple"
 42433                           ; Number of cases is 1, Range of values is 0 to 0
 42434                           ; switch strategies available:
 42435                           ; Name         Instructions Cycles
 42436                           ; simple_byte            4     3 (average)
 42437                           ;	Chosen strategy is simple_byte
 42438   00BB72  51A9               	movf	(??_writeNVM+1)& (0+255),w,b
 42439   00BB74  0A00               	xorlw	0	; case 0
 42440   00BB76  A4D8               	btfss	status,2,c
 42441   00BB78  0012               	return	
 42442                           
 42443                           ; BSR set to: 0
 42444                           ; Switch size 1, requested type "simple"
 42445                           ; Number of cases is 2, Range of values is 0 to 1
 42446                           ; switch strategies available:
 42447                           ; Name         Instructions Cycles
 42448                           ; simple_byte            7     4 (average)
 42449                           ;	Chosen strategy is simple_byte
 42450   00BB7A  51A8               	movf	??_writeNVM& (0+255),w,b
 42451   00BB7C  0A00               	xorlw	0	; case 0
 42452   00BB7E  B4D8               	btfsc	status,2,c
 42453   00BB80  D7E1               	goto	l19215
 42454   00BB82  0A01               	xorlw	1	; case 1
 42455   00BB84  A4D8               	btfss	status,2,c
 42456   00BB86  0012               	return	
 42457   00BB88  D7E6               	goto	l19219
 42458   00BB8A                     __end_of_writeNVM:
 42459                           	callstack 0
 42460                           
 42461 ;; *************** function _FLASH_Write *****************
 42462 ;; Defined at:
 42463 ;;		line 487 in file "../../VLCBlib_PIC/nvm.c"
 42464 ;; Parameters:    Size  Location     Type
 42465 ;;  index           2   48[BANK0 ] unsigned short 
 42466 ;;  value           1   50[BANK0 ] unsigned char 
 42467 ;; Auto vars:     Size  Location     Type
 42468 ;;  oldValue        1    0        unsigned char 
 42469 ;; Return value:  Size  Location     Type
 42470 ;;                  1    wreg      unsigned char 
 42471 ;; Registers used:
 42472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42473 ;; Tracked objects:
 42474 ;;		On entry : 0/0
 42475 ;;		On exit  : 0/0
 42476 ;;		Unchanged: 0/0
 42477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42478 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42480 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42481 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42482 ;;Total ram usage:        7 bytes
 42483 ;; Hardware stack levels used: 1
 42484 ;; Hardware stack levels required when called: 16
 42485 ;; This function calls:
 42486 ;;		_eraseFlashBlock
 42487 ;;		_flushFlashBlock
 42488 ;;		_loadFlashBlock
 42489 ;; This function is called by:
 42490 ;;		_writeNVM
 42491 ;; This function uses a non-reentrant model
 42492 ;;
 42493                           
 42494                           	psect	text182
 42495   00918C                     __ptext182:
 42496                           	callstack 0
 42497   00918C                     _FLASH_Write:
 42498                           	callstack 11
 42499                           
 42500                           ;../../VLCBlib_PIC/nvm.c: 488:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 503:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 42501                           
 42502                           ;incstack = 0
 42503   00918C  0EC0               	movlw	192
 42504   00918E  0100               	movlb	0	; () banked
 42505   009190  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42506   009192  6F93               	movwf	??_FLASH_Write& (0+255),b
 42507   009194  0EFF               	movlw	255
 42508   009196  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42509   009198  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42510   00919A  51D1               	movf	_flashBlock& (0+255),w,b
 42511   00919C  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 42512   00919E  E104               	bnz	u18820
 42513   0091A0  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 42514   0091A2  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 42515   0091A4  B4D8               	btfsc	status,2,c
 42516   0091A6  D015               	goto	l19173
 42517   0091A8                     u18820:
 42518                           
 42519                           ; BSR set to: 0
 42520                           ;../../VLCBlib_PIC/nvm.c: 504:         if (flashBlock != 0) {
 42521   0091A8  51D1               	movf	_flashBlock& (0+255),w,b
 42522   0091AA  11D2               	iorwf	(_flashBlock+1)& (0+255),w,b
 42523   0091AC  B4D8               	btfsc	status,2,c
 42524   0091AE  D008               	goto	l19169
 42525                           
 42526                           ; BSR set to: 0
 42527                           ;../../VLCBlib_PIC/nvm.c: 506:             if (flashFlags.eraseNeeded) {
 42528   0091B0  A3BA               	btfss	_flashFlags& (0+255),1,b
 42529   0091B2  D004               	goto	l19167
 42530                           
 42531                           ; BSR set to: 0
 42532                           ;../../VLCBlib_PIC/nvm.c: 507:                 eraseFlashBlock();
 42533   0091B4  ECC5  F05D         	call	_eraseFlashBlock	;wreg free
 42534                           
 42535                           ;../../VLCBlib_PIC/nvm.c: 508:                 flashFlags.eraseNeeded = 0;
 42536   0091B8  0100               	movlb	0	; () banked
 42537   0091BA  93BA               	bcf	_flashFlags& (0+255),1,b
 42538   0091BC                     l19167:
 42539                           
 42540                           ; BSR set to: 0
 42541                           ;../../VLCBlib_PIC/nvm.c: 511:             flushFlashBlock();
 42542   0091BC  EC9C  F054         	call	_flushFlashBlock	;wreg free
 42543   0091C0                     l19169:
 42544                           
 42545                           ;../../VLCBlib_PIC/nvm.c: 515:         flashBlock = (index&(~((flash_address_t)64 -1)));
 42546   0091C0  0EC0               	movlw	192
 42547   0091C2  0100               	movlb	0	; () banked
 42548   0091C4  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42549   0091C6  6FD1               	movwf	_flashBlock& (0+255),b
 42550   0091C8  0EFF               	movlw	255
 42551   0091CA  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42552   0091CC  6FD2               	movwf	(_flashBlock+1)& (0+255),b
 42553                           
 42554                           ; BSR set to: 0
 42555                           ;../../VLCBlib_PIC/nvm.c: 516:         loadFlashBlock();
 42556   0091CE  EC80  F05E         	call	_loadFlashBlock	;wreg free
 42557   0091D2                     l19173:
 42558                           
 42559                           ;../../VLCBlib_PIC/nvm.c: 518:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 42560   0091D2  0E3F               	movlw	63
 42561   0091D4  0100               	movlb	0	; () banked
 42562   0091D6  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42563   0091D8  6F93               	movwf	??_FLASH_Write& (0+255),b
 42564   0091DA  0E00               	movlw	0
 42565   0091DC  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42566   0091DE  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42567   0091E0  0E48               	movlw	low _flashBuffer
 42568   0091E2  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42569   0091E4  6ED9               	movwf	fsr2l,c
 42570   0091E6  0E03               	movlw	high _flashBuffer
 42571   0091E8  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42572   0091EA  6EDA               	movwf	fsr2h,c
 42573   0091EC  50DF               	movf	indf2,w,c
 42574   0091EE  0AFF               	xorlw	255
 42575   0091F0  1592               	andwf	FLASH_Write@value& (0+255),w,b
 42576   0091F2  0900               	iorlw	0
 42577   0091F4  B4D8               	btfsc	status,2,c
 42578   0091F6  D003               	goto	u18850
 42579   0091F8  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42580   0091FA  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 42581   0091FC  D002               	goto	u18868
 42582   0091FE                     u18850:
 42583   0091FE  0100               	movlb	0	; () banked
 42584   009200  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 42585   009202                     u18868:
 42586   009202  31BA               	rrcf	_flashFlags& (0+255),w,b
 42587   009204  0B01               	andlw	1
 42588   009206  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 42589   009208  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 42590   00920A  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 42591   00920C  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 42592   00920E  51BA               	movf	_flashFlags& (0+255),w,b
 42593   009210  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42594   009212  0BFD               	andlw	-3
 42595   009214  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 42596   009216  6FBA               	movwf	_flashFlags& (0+255),b
 42597                           
 42598                           ; BSR set to: 0
 42599                           ;../../VLCBlib_PIC/nvm.c: 519:     if (flashBuffer[(index&(64 -1))] != value) {
 42600   009218  0E3F               	movlw	63
 42601   00921A  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42602   00921C  6F93               	movwf	??_FLASH_Write& (0+255),b
 42603   00921E  0E00               	movlw	0
 42604   009220  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42605   009222  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42606   009224  0E48               	movlw	low _flashBuffer
 42607   009226  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42608   009228  6ED9               	movwf	fsr2l,c
 42609   00922A  0E03               	movlw	high _flashBuffer
 42610   00922C  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42611   00922E  6EDA               	movwf	fsr2h,c
 42612   009230  5192               	movf	FLASH_Write@value& (0+255),w,b
 42613   009232  18DE               	xorwf	postinc2,w,c
 42614   009234  B4D8               	btfsc	status,2,c
 42615   009236  D00F               	goto	l19181
 42616                           
 42617                           ; BSR set to: 0
 42618                           ;../../VLCBlib_PIC/nvm.c: 520:         flashFlags.writeNeeded = 1;
 42619   009238  81BA               	bsf	_flashFlags& (0+255),0,b
 42620                           
 42621                           ; BSR set to: 0
 42622                           ;../../VLCBlib_PIC/nvm.c: 521:         flashBuffer[(index&(64 -1))] = value;
 42623   00923A  0E3F               	movlw	63
 42624   00923C  1590               	andwf	FLASH_Write@index& (0+255),w,b
 42625   00923E  6F93               	movwf	??_FLASH_Write& (0+255),b
 42626   009240  0E00               	movlw	0
 42627   009242  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 42628   009244  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 42629   009246  0E48               	movlw	low _flashBuffer
 42630   009248  2593               	addwf	??_FLASH_Write& (0+255),w,b
 42631   00924A  6ED9               	movwf	fsr2l,c
 42632   00924C  0E03               	movlw	high _flashBuffer
 42633   00924E  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 42634   009250  6EDA               	movwf	fsr2h,c
 42635   009252  C092  FFDF         	movff	FLASH_Write@value,indf2
 42636   009256                     l19181:
 42637                           
 42638                           ; BSR set to: 0
 42639                           ;../../VLCBlib_PIC/nvm.c: 523:     return GRSP_OK;
 42640   009256  0E00               	movlw	0
 42641                           
 42642                           ; BSR set to: 0
 42643   009258  0012               	return		;funcret
 42644   00925A                     __end_of_FLASH_Write:
 42645                           	callstack 0
 42646                           
 42647 ;; *************** function _loadFlashBlock *****************
 42648 ;; Defined at:
 42649 ;;		line 449 in file "../../VLCBlib_PIC/nvm.c"
 42650 ;; Parameters:    Size  Location     Type
 42651 ;;		None
 42652 ;; Auto vars:     Size  Location     Type
 42653 ;;  i               1   45[BANK0 ] unsigned char 
 42654 ;; Return value:  Size  Location     Type
 42655 ;;                  1    wreg      void 
 42656 ;; Registers used:
 42657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42658 ;; Tracked objects:
 42659 ;;		On entry : 0/0
 42660 ;;		On exit  : 0/0
 42661 ;;		Unchanged: 0/0
 42662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42666 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42667 ;;Total ram usage:        1 bytes
 42668 ;; Hardware stack levels used: 1
 42669 ;; Hardware stack levels required when called: 12
 42670 ;; This function calls:
 42671 ;;		Nothing
 42672 ;; This function is called by:
 42673 ;;		_FLASH_Write
 42674 ;; This function uses a non-reentrant model
 42675 ;;
 42676                           
 42677                           	psect	text183
 42678   00BD00                     __ptext183:
 42679                           	callstack 0
 42680   00BD00                     _loadFlashBlock:
 42681                           	callstack 14
 42682                           
 42683                           ;../../VLCBlib_PIC/nvm.c: 451:     EECON1=0X80;
 42684                           
 42685                           ; BSR set to: 0
 42686                           ;incstack = 0
 42687   00BD00  0E80               	movlw	128
 42688   00BD02  6E7F               	movwf	127,c	;volsfr
 42689                           
 42690                           ;../../VLCBlib_PIC/nvm.c: 452:     TBLPTR = flashBlock;
 42691   00BD04  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42692   00BD08  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42693   00BD0C  6AF8               	clrf	248,c	;volatile
 42694                           
 42695                           ;../../VLCBlib_PIC/nvm.c: 453:     TBLPTRU = 0;
 42696   00BD0E  0E00               	movlw	0
 42697   00BD10  6EF8               	movwf	248,c	;volatile
 42698                           
 42699                           ;../../VLCBlib_PIC/nvm.c: 454:     for (uint8_t i=0; i<64; i++) {
 42700   00BD12  0E00               	movlw	0
 42701   00BD14  0100               	movlb	0	; () banked
 42702   00BD16  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 42703   00BD18                     l2232:
 42704                           
 42705                           ; BSR set to: 0
 42706   00BD18  0009               	tblrd		*+	;# 
 42707                           
 42708                           ;../../VLCBlib_PIC/nvm.c: 456:         __nop();
 42709   00BD1A  0000               	nop	
 42710                           
 42711                           ;../../VLCBlib_PIC/nvm.c: 457:         flashBuffer[i] = TABLAT;
 42712   00BD1C  0E48               	movlw	low _flashBuffer
 42713   00BD1E  0100               	movlb	0	; () banked
 42714   00BD20  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 42715   00BD22  6ED9               	movwf	fsr2l,c
 42716   00BD24  6ADA               	clrf	fsr2h,c
 42717   00BD26  0E03               	movlw	high _flashBuffer
 42718   00BD28  22DA               	addwfc	fsr2h,f,c
 42719   00BD2A  CFF5 FFDF          	movff	tablat,indf2	;volatile
 42720                           
 42721                           ; BSR set to: 0
 42722                           ;../../VLCBlib_PIC/nvm.c: 458:     }
 42723   00BD2E  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 42724                           
 42725                           ; BSR set to: 0
 42726   00BD30  0E3F               	movlw	63
 42727   00BD32  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 42728   00BD34  D7F1               	goto	l2232
 42729                           
 42730                           ; BSR set to: 0
 42731                           ;../../VLCBlib_PIC/nvm.c: 459:     TBLPTR = flashBlock;
 42732   00BD36  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42733   00BD3A  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42734   00BD3E  6AF8               	clrf	248,c	;volatile
 42735                           
 42736                           ; BSR set to: 0
 42737                           ;../../VLCBlib_PIC/nvm.c: 460:     TBLPTRU = 0;
 42738   00BD40  0E00               	movlw	0
 42739   00BD42  6EF8               	movwf	248,c	;volatile
 42740                           
 42741                           ; BSR set to: 0
 42742                           ;../../VLCBlib_PIC/nvm.c: 476:     flashFlags.asByte = 0;
 42743   00BD44  0E00               	movlw	0
 42744   00BD46  6FBA               	movwf	_flashFlags& (0+255),b
 42745                           
 42746                           ; BSR set to: 0
 42747   00BD48  0012               	return		;funcret
 42748   00BD4A                     __end_of_loadFlashBlock:
 42749                           	callstack 0
 42750                           
 42751 ;; *************** function _flushFlashBlock *****************
 42752 ;; Defined at:
 42753 ;;		line 375 in file "../../VLCBlib_PIC/nvm.c"
 42754 ;; Parameters:    Size  Location     Type
 42755 ;;		None
 42756 ;; Auto vars:     Size  Location     Type
 42757 ;;  i               1   47[BANK0 ] unsigned char 
 42758 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 42759 ;; Return value:  Size  Location     Type
 42760 ;;                  1    wreg      void 
 42761 ;; Registers used:
 42762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42763 ;; Tracked objects:
 42764 ;;		On entry : 0/0
 42765 ;;		On exit  : 0/0
 42766 ;;		Unchanged: 0/0
 42767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42769 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42772 ;;Total ram usage:        2 bytes
 42773 ;; Hardware stack levels used: 1
 42774 ;; Hardware stack levels required when called: 15
 42775 ;; This function calls:
 42776 ;;		_APP_isSuitableTimeToWriteFlash
 42777 ;;		_eraseFlashBlock
 42778 ;; This function is called by:
 42779 ;;		_APP_factoryReset
 42780 ;;		_deleteActionRange
 42781 ;;		_poll
 42782 ;;		_FLASH_Write
 42783 ;;		_clearAllEvents
 42784 ;;		_removeTableEntry
 42785 ;;		_addEvent
 42786 ;;		_deleteHappeningRange
 42787 ;; This function uses a non-reentrant model
 42788 ;;
 42789                           
 42790                           	psect	text184
 42791   00A938                     __ptext184:
 42792                           	callstack 0
 42793   00A938                     _flushFlashBlock:
 42794                           	callstack 11
 42795                           
 42796                           ;../../VLCBlib_PIC/nvm.c: 376:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 37
      +                          8:     TBLPTR = flashBlock;
 42797                           
 42798                           ; BSR set to: 0
 42799                           ;incstack = 0
 42800   00A938  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42801   00A93C  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42802   00A940  6AF8               	clrf	248,c	;volatile
 42803                           
 42804                           ;../../VLCBlib_PIC/nvm.c: 379:     TBLPTRU = 0;
 42805   00A942  0E00               	movlw	0
 42806   00A944  6EF8               	movwf	248,c	;volatile
 42807                           
 42808                           ;../../VLCBlib_PIC/nvm.c: 384:     if (! flashFlags.writeNeeded) return;
 42809   00A946  0100               	movlb	0	; () banked
 42810   00A948  A1BA               	btfss	_flashFlags& (0+255),0,b
 42811   00A94A  0012               	return	
 42812   00A94C                     l18983:
 42813                           
 42814                           ;../../VLCBlib_PIC/nvm.c: 387:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42815   00A94C  EC20  F064         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42816   00A950  0900               	iorlw	0
 42817   00A952  B4D8               	btfsc	status,2,c
 42818   00A954  D7FB               	goto	l18983
 42819                           
 42820                           ;../../VLCBlib_PIC/nvm.c: 390:     if (flashFlags.eraseNeeded) {
 42821   00A956  0100               	movlb	0	; () banked
 42822   00A958  B3BA               	btfsc	_flashFlags& (0+255),1,b
 42823                           
 42824                           ; BSR set to: 0
 42825                           ;../../VLCBlib_PIC/nvm.c: 391:         eraseFlashBlock();
 42826   00A95A  ECC5  F05D         	call	_eraseFlashBlock	;wreg free
 42827                           
 42828                           ;../../VLCBlib_PIC/nvm.c: 394:     interruptEnabled = (INTCONbits.GIEH);
 42829   00A95E  0E00               	movlw	0
 42830   00A960  BEF2               	btfsc	242,7,c	;volatile
 42831   00A962  0E01               	movlw	1
 42832   00A964  0100               	movlb	0	; () banked
 42833   00A966  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 42834                           
 42835                           ; BSR set to: 0
 42836                           ;../../VLCBlib_PIC/nvm.c: 395:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42837   00A968  9EF2               	bcf	242,7,c	;volatile
 42838                           
 42839                           ; BSR set to: 0
 42840   00A96A  9CF2               	bcf	242,6,c	;volatile
 42841                           
 42842                           ; BSR set to: 0
 42843                           ;../../VLCBlib_PIC/nvm.c: 397:     for (uint8_t i=0; i<64; i++) {
 42844   00A96C  0E00               	movlw	0
 42845   00A96E  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 42846   00A970                     l18999:
 42847                           
 42848                           ; BSR set to: 0
 42849                           ;../../VLCBlib_PIC/nvm.c: 398:         TABLAT = flashBuffer[i];
 42850   00A970  0E48               	movlw	low _flashBuffer
 42851   00A972  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 42852   00A974  6ED9               	movwf	fsr2l,c
 42853   00A976  6ADA               	clrf	fsr2h,c
 42854   00A978  0E03               	movlw	high _flashBuffer
 42855   00A97A  22DA               	addwfc	fsr2h,f,c
 42856   00A97C  50DF               	movf	indf2,w,c
 42857   00A97E  6EF5               	movwf	245,c	;volatile
 42858   00A980  000D               	tblwt		*+	;# 
 42859                           
 42860                           ;../../VLCBlib_PIC/nvm.c: 400:     }
 42861   00A982  0100               	movlb	0	; () banked
 42862   00A984  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 42863                           
 42864                           ; BSR set to: 0
 42865   00A986  0E3F               	movlw	63
 42866   00A988  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 42867   00A98A  D7F2               	goto	l18999
 42868                           
 42869                           ; BSR set to: 0
 42870                           ;../../VLCBlib_PIC/nvm.c: 407:     TBLPTR = flashBlock;
 42871   00A98C  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42872   00A990  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42873   00A994  6AF8               	clrf	248,c	;volatile
 42874                           
 42875                           ; BSR set to: 0
 42876                           ;../../VLCBlib_PIC/nvm.c: 408:     TBLPTRU = 0;
 42877   00A996  0E00               	movlw	0
 42878   00A998  6EF8               	movwf	248,c	;volatile
 42879                           
 42880                           ; BSR set to: 0
 42881                           ;../../VLCBlib_PIC/nvm.c: 409:     EECON1bits.EEPGD = 1;
 42882   00A99A  8E7F               	bsf	127,7,c	;volsfr
 42883                           
 42884                           ; BSR set to: 0
 42885                           ;../../VLCBlib_PIC/nvm.c: 410:     EECON1bits.CFGS = 0;
 42886   00A99C  9C7F               	bcf	127,6,c	;volsfr
 42887                           
 42888                           ; BSR set to: 0
 42889                           ;../../VLCBlib_PIC/nvm.c: 411:     EECON1bits.FREE = 0;
 42890   00A99E  987F               	bcf	127,4,c	;volsfr
 42891                           
 42892                           ; BSR set to: 0
 42893                           ;../../VLCBlib_PIC/nvm.c: 412:     EECON1bits.WREN = 1;
 42894   00A9A0  847F               	bsf	127,2,c	;volsfr
 42895                           
 42896                           ; BSR set to: 0
 42897                           ;../../VLCBlib_PIC/nvm.c: 414:     EECON2 = 0x55;
 42898   00A9A2  0E55               	movlw	85
 42899   00A9A4  6E7E               	movwf	126,c	;volsfr
 42900                           
 42901                           ; BSR set to: 0
 42902                           ;../../VLCBlib_PIC/nvm.c: 415:     EECON2 = 0xAA;
 42903   00A9A6  0EAA               	movlw	170
 42904   00A9A8  6E7E               	movwf	126,c	;volsfr
 42905                           
 42906                           ; BSR set to: 0
 42907                           ;../../VLCBlib_PIC/nvm.c: 416:     EECON1bits.WR = 1;
 42908   00A9AA  827F               	bsf	127,1,c	;volsfr
 42909                           
 42910                           ; BSR set to: 0
 42911                           ;../../VLCBlib_PIC/nvm.c: 417:     EECON1bits.WREN = 0;
 42912   00A9AC  947F               	bcf	127,2,c	;volsfr
 42913                           
 42914                           ; BSR set to: 0
 42915                           ;../../VLCBlib_PIC/nvm.c: 440:     if (interruptEnabled) {
 42916   00A9AE  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 42917   00A9B0  B4D8               	btfsc	status,2,c
 42918   00A9B2  D002               	goto	l19029
 42919                           
 42920                           ; BSR set to: 0
 42921                           ;../../VLCBlib_PIC/nvm.c: 441:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42922   00A9B4  8EF2               	bsf	242,7,c	;volatile
 42923   00A9B6  8CF2               	bsf	242,6,c	;volatile
 42924   00A9B8                     l19029:
 42925                           
 42926                           ; BSR set to: 0
 42927                           ;../../VLCBlib_PIC/nvm.c: 443:     flashFlags.asByte = 0;
 42928   00A9B8  0E00               	movlw	0
 42929   00A9BA  6FBA               	movwf	_flashFlags& (0+255),b
 42930                           
 42931                           ; BSR set to: 0
 42932   00A9BC  0012               	return		;funcret
 42933   00A9BE                     __end_of_flushFlashBlock:
 42934                           	callstack 0
 42935                           
 42936 ;; *************** function _eraseFlashBlock *****************
 42937 ;; Defined at:
 42938 ;;		line 324 in file "../../VLCBlib_PIC/nvm.c"
 42939 ;; Parameters:    Size  Location     Type
 42940 ;;		None
 42941 ;; Auto vars:     Size  Location     Type
 42942 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 42943 ;; Return value:  Size  Location     Type
 42944 ;;                  1    wreg      void 
 42945 ;; Registers used:
 42946 ;;		wreg, status,2, cstack
 42947 ;; Tracked objects:
 42948 ;;		On entry : 0/0
 42949 ;;		On exit  : 0/0
 42950 ;;		Unchanged: 0/0
 42951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42955 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42956 ;;Total ram usage:        1 bytes
 42957 ;; Hardware stack levels used: 1
 42958 ;; Hardware stack levels required when called: 14
 42959 ;; This function calls:
 42960 ;;		_APP_isSuitableTimeToWriteFlash
 42961 ;; This function is called by:
 42962 ;;		_flushFlashBlock
 42963 ;;		_FLASH_Write
 42964 ;; This function uses a non-reentrant model
 42965 ;;
 42966                           
 42967                           	psect	text185
 42968   00BB8A                     __ptext185:
 42969                           	callstack 0
 42970   00BB8A                     _eraseFlashBlock:
 42971                           	callstack 11
 42972                           
 42973                           ;../../VLCBlib_PIC/nvm.c: 328:     while (! APP_isSuitableTimeToWriteFlash())
 42974                           
 42975                           ;../../VLCBlib_PIC/nvm.c: 325:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 32
      +                          8:     while (! APP_isSuitableTimeToWriteFlash())
 42976                           
 42977                           ; BSR set to: 0
 42978                           ;incstack = 0
 42979   00BB8A  EC20  F064         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42980   00BB8E  0900               	iorlw	0
 42981   00BB90  B4D8               	btfsc	status,2,c
 42982   00BB92  D7FB               	goto	__ptext185
 42983                           
 42984                           ;../../VLCBlib_PIC/nvm.c: 331:     interruptEnabled = (INTCONbits.GIEH);
 42985   00BB94  0E00               	movlw	0
 42986   00BB96  BEF2               	btfsc	242,7,c	;volatile
 42987   00BB98  0E01               	movlw	1
 42988   00BB9A  0100               	movlb	0	; () banked
 42989   00BB9C  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 42990                           
 42991                           ; BSR set to: 0
 42992                           ;../../VLCBlib_PIC/nvm.c: 333:     TBLPTR = flashBlock;
 42993   00BB9E  C0D1  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42994   00BBA2  C0D2  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42995   00BBA6  6AF8               	clrf	248,c	;volatile
 42996                           
 42997                           ;../../VLCBlib_PIC/nvm.c: 334:     TBLPTRU = 0;
 42998   00BBA8  0E00               	movlw	0
 42999   00BBAA  6EF8               	movwf	248,c	;volatile
 43000                           
 43001                           ; BSR set to: 0
 43002                           ;../../VLCBlib_PIC/nvm.c: 335:     EECON1bits.EEPGD = 1;
 43003   00BBAC  8E7F               	bsf	127,7,c	;volsfr
 43004                           
 43005                           ; BSR set to: 0
 43006                           ;../../VLCBlib_PIC/nvm.c: 336:     EECON1bits.CFGS = 0;
 43007   00BBAE  9C7F               	bcf	127,6,c	;volsfr
 43008                           
 43009                           ; BSR set to: 0
 43010                           ;../../VLCBlib_PIC/nvm.c: 337:     EECON1bits.WREN = 1;
 43011   00BBB0  847F               	bsf	127,2,c	;volsfr
 43012                           
 43013                           ; BSR set to: 0
 43014                           ;../../VLCBlib_PIC/nvm.c: 338:     EECON1bits.FREE = 1;
 43015   00BBB2  887F               	bsf	127,4,c	;volsfr
 43016                           
 43017                           ; BSR set to: 0
 43018                           ;../../VLCBlib_PIC/nvm.c: 339:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 43019   00BBB4  9EF2               	bcf	242,7,c	;volatile
 43020                           
 43021                           ; BSR set to: 0
 43022   00BBB6  9CF2               	bcf	242,6,c	;volatile
 43023                           
 43024                           ;../../VLCBlib_PIC/nvm.c: 340:     EECON2 = 0x55;
 43025   00BBB8  0E55               	movlw	85
 43026   00BBBA  6E7E               	movwf	126,c	;volsfr
 43027                           
 43028                           ;../../VLCBlib_PIC/nvm.c: 341:     EECON2 = 0xaa;
 43029   00BBBC  0EAA               	movlw	170
 43030   00BBBE  6E7E               	movwf	126,c	;volsfr
 43031                           
 43032                           ; BSR set to: 0
 43033                           ;../../VLCBlib_PIC/nvm.c: 342:     EECON1bits.WR = 1;
 43034   00BBC0  827F               	bsf	127,1,c	;volsfr
 43035   00BBC2                     l2214:
 43036                           
 43037                           ;../../VLCBlib_PIC/nvm.c: 343:     while(EECON1bits.WR)
 43038   00BBC2  B27F               	btfsc	127,1,c	;volsfr
 43039   00BBC4  D7FE               	goto	l2214
 43040                           
 43041                           ;../../VLCBlib_PIC/nvm.c: 345:     EECON1bits.WREN = 0;
 43042   00BBC6  947F               	bcf	127,2,c	;volsfr
 43043                           
 43044                           ;../../VLCBlib_PIC/nvm.c: 365:     if (interruptEnabled) {
 43045   00BBC8  0100               	movlb	0	; () banked
 43046   00BBCA  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 43047   00BBCC  B4D8               	btfsc	status,2,c
 43048   00BBCE  0012               	return	
 43049                           
 43050                           ; BSR set to: 0
 43051                           ;../../VLCBlib_PIC/nvm.c: 366:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 43052   00BBD0  8EF2               	bsf	242,7,c	;volatile
 43053   00BBD2  8CF2               	bsf	242,6,c	;volatile
 43054                           
 43055                           ; BSR set to: 0
 43056   00BBD4  0012               	return		;funcret
 43057   00BBD6                     __end_of_eraseFlashBlock:
 43058                           	callstack 0
 43059                           
 43060 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 43061 ;; Defined at:
 43062 ;;		line 403 in file "../main.c"
 43063 ;; Parameters:    Size  Location     Type
 43064 ;;		None
 43065 ;; Auto vars:     Size  Location     Type
 43066 ;;		None
 43067 ;; Return value:  Size  Location     Type
 43068 ;;                  1    wreg      enum E12692
 43069 ;; Registers used:
 43070 ;;		wreg, status,2, cstack
 43071 ;; Tracked objects:
 43072 ;;		On entry : 0/0
 43073 ;;		On exit  : 0/0
 43074 ;;		Unchanged: 0/0
 43075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43080 ;;Total ram usage:        0 bytes
 43081 ;; Hardware stack levels used: 1
 43082 ;; Hardware stack levels required when called: 13
 43083 ;; This function calls:
 43084 ;;		_isNoServoPulses
 43085 ;; This function is called by:
 43086 ;;		_eraseFlashBlock
 43087 ;;		_flushFlashBlock
 43088 ;; This function uses a non-reentrant model
 43089 ;;
 43090                           
 43091                           	psect	text186
 43092   00C840                     __ptext186:
 43093                           	callstack 0
 43094   00C840                     _APP_isSuitableTimeToWriteFlash:
 43095                           	callstack 11
 43096                           
 43097                           ;../main.c: 405:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 43098                           
 43099                           ; BSR set to: 0
 43100                           ;incstack = 0
 43101   00C840  EC31  F064         	call	_isNoServoPulses	;wreg free
 43102   00C844  0900               	iorlw	0
 43103   00C846  B4D8               	btfsc	status,2,c
 43104   00C848  D002               	goto	u18550
 43105   00C84A  0E01               	movlw	1
 43106   00C84C  0012               	return	
 43107   00C84E                     u18550:
 43108   00C84E  0E00               	movlw	0
 43109   00C850  0012               	return		;funcret
 43110   00C852                     __end_of_APP_isSuitableTimeToWriteFlash:
 43111                           	callstack 0
 43112                           
 43113 ;; *************** function _isNoServoPulses *****************
 43114 ;; Defined at:
 43115 ;;		line 713 in file "../servo.c"
 43116 ;; Parameters:    Size  Location     Type
 43117 ;;		None
 43118 ;; Auto vars:     Size  Location     Type
 43119 ;;		None
 43120 ;; Return value:  Size  Location     Type
 43121 ;;                  1    wreg      enum E12716
 43122 ;; Registers used:
 43123 ;;		wreg
 43124 ;; Tracked objects:
 43125 ;;		On entry : 0/0
 43126 ;;		On exit  : 0/0
 43127 ;;		Unchanged: 0/0
 43128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43133 ;;Total ram usage:        0 bytes
 43134 ;; Hardware stack levels used: 1
 43135 ;; Hardware stack levels required when called: 12
 43136 ;; This function calls:
 43137 ;;		Nothing
 43138 ;; This function is called by:
 43139 ;;		_APP_isSuitableTimeToWriteFlash
 43140 ;; This function uses a non-reentrant model
 43141 ;;
 43142                           
 43143                           	psect	text187
 43144   00C862                     __ptext187:
 43145                           	callstack 0
 43146   00C862                     _isNoServoPulses:
 43147                           	callstack 11
 43148                           
 43149                           ;../servo.c: 715:     if (T1CONbits.TMR1ON) return FALSE;
 43150                           
 43151                           ;incstack = 0
 43152   00C862  A0CD               	btfss	205,0,c	;volatile
 43153   00C864  D002               	goto	l1193
 43154   00C866                     u18530:
 43155   00C866  0E00               	movlw	0
 43156   00C868  0012               	return	
 43157   00C86A                     l1193:
 43158                           
 43159                           ;../servo.c: 716:     if (T3CONbits.TMR3ON) return FALSE;
 43160   00C86A  B0B1               	btfsc	177,0,c	;volatile
 43161   00C86C  D7FC               	goto	u18530
 43162                           
 43163                           ;../servo.c: 718:     return TRUE;
 43164   00C86E  0E01               	movlw	1
 43165   00C870  0012               	return		;funcret
 43166   00C872                     __end_of_isNoServoPulses:
 43167                           	callstack 0
 43168                           
 43169 ;; *************** function _EEPROM_Write *****************
 43170 ;; Defined at:
 43171 ;;		line 216 in file "../../VLCBlib_PIC/nvm.c"
 43172 ;; Parameters:    Size  Location     Type
 43173 ;;  index           2   47[BANK0 ] unsigned short 
 43174 ;;  value           1   49[BANK0 ] unsigned char 
 43175 ;; Auto vars:     Size  Location     Type
 43176 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 43177 ;; Return value:  Size  Location     Type
 43178 ;;                  1    wreg      unsigned char 
 43179 ;; Registers used:
 43180 ;;		wreg, status,2, status,0, cstack
 43181 ;; Tracked objects:
 43182 ;;		On entry : 0/0
 43183 ;;		On exit  : 0/0
 43184 ;;		Unchanged: 0/0
 43185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43186 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43189 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43190 ;;Total ram usage:        4 bytes
 43191 ;; Hardware stack levels used: 1
 43192 ;; Hardware stack levels required when called: 13
 43193 ;; This function calls:
 43194 ;;		_EEPROM_Read
 43195 ;;		_updateModuleErrorStatus
 43196 ;; This function is called by:
 43197 ;;		_writeNVM
 43198 ;; This function uses a non-reentrant model
 43199 ;;
 43200                           
 43201                           	psect	text188
 43202   00B2FE                     __ptext188:
 43203                           	callstack 0
 43204   00B2FE                     _EEPROM_Write:
 43205                           	callstack 14
 43206                           
 43207                           ;../../VLCBlib_PIC/nvm.c: 217:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 21
      +                          8:     interruptEnabled = (INTCONbits.GIEH);
 43208                           
 43209                           ;incstack = 0
 43210   00B2FE  0E00               	movlw	0
 43211   00B300  BEF2               	btfsc	242,7,c	;volatile
 43212   00B302  0E01               	movlw	1
 43213   00B304  0100               	movlb	0	; () banked
 43214   00B306  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 43215   00B308                     l19119:
 43216                           
 43217                           ;../../VLCBlib_PIC/nvm.c: 221:         EEADRH = (index >> 8)&0xFF;
 43218   00B308  0100               	movlb	0	; () banked
 43219   00B30A  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 43220   00B30C  6E75               	movwf	117,c	;volatile
 43221                           
 43222                           ; BSR set to: 0
 43223                           ;../../VLCBlib_PIC/nvm.c: 222:         EEADR = index & 0xFF;
 43224   00B30E  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 43225                           
 43226                           ; BSR set to: 0
 43227                           ;../../VLCBlib_PIC/nvm.c: 223:         EEDATA = value;
 43228   00B312  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 43229                           
 43230                           ; BSR set to: 0
 43231                           ;../../VLCBlib_PIC/nvm.c: 224:         EECON1bits.EEPGD = 0;
 43232   00B316  9E7F               	bcf	127,7,c	;volsfr
 43233                           
 43234                           ; BSR set to: 0
 43235                           ;../../VLCBlib_PIC/nvm.c: 225:         EECON1bits.CFGS = 0;
 43236   00B318  9C7F               	bcf	127,6,c	;volsfr
 43237                           
 43238                           ; BSR set to: 0
 43239                           ;../../VLCBlib_PIC/nvm.c: 226:         EECON1bits.WREN = 1;
 43240   00B31A  847F               	bsf	127,2,c	;volsfr
 43241                           
 43242                           ; BSR set to: 0
 43243                           ;../../VLCBlib_PIC/nvm.c: 228:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 43244   00B31C  9EF2               	bcf	242,7,c	;volatile
 43245                           
 43246                           ; BSR set to: 0
 43247   00B31E  9CF2               	bcf	242,6,c	;volatile
 43248                           
 43249                           ; BSR set to: 0
 43250                           ;../../VLCBlib_PIC/nvm.c: 229:         EECON2 = 0x55;
 43251   00B320  0E55               	movlw	85
 43252   00B322  6E7E               	movwf	126,c	;volsfr
 43253                           
 43254                           ; BSR set to: 0
 43255                           ;../../VLCBlib_PIC/nvm.c: 230:         EECON2 = 0xAA;
 43256   00B324  0EAA               	movlw	170
 43257   00B326  6E7E               	movwf	126,c	;volsfr
 43258                           
 43259                           ; BSR set to: 0
 43260                           ;../../VLCBlib_PIC/nvm.c: 231:         EECON1bits.WR = 1;
 43261   00B328  827F               	bsf	127,1,c	;volsfr
 43262   00B32A                     l2194:
 43263                           
 43264                           ;../../VLCBlib_PIC/nvm.c: 232:         while (EECON1bits.WR)
 43265   00B32A  B27F               	btfsc	127,1,c	;volsfr
 43266   00B32C  D7FE               	goto	l2194
 43267   00B32E                     u18780:
 43268                           
 43269                           ;../../VLCBlib_PIC/nvm.c: 234:         while (!EEIF)
 43270                           
 43271                           ;../../VLCBlib_PIC/nvm.c: 235:             ;
 43272   00B32E  ACB7               	btfss	4023,6,c	;volatile
 43273   00B330  D7FE               	goto	u18780
 43274                           
 43275                           ;../../VLCBlib_PIC/nvm.c: 236:         EEIF = 0;
 43276   00B332  9CB7               	bcf	4023,6,c	;volatile
 43277                           
 43278                           ;../../VLCBlib_PIC/nvm.c: 237:         if (interruptEnabled) {
 43279   00B334  0100               	movlb	0	; () banked
 43280   00B336  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 43281   00B338  B4D8               	btfsc	status,2,c
 43282   00B33A  D002               	goto	l2200
 43283                           
 43284                           ; BSR set to: 0
 43285                           ;../../VLCBlib_PIC/nvm.c: 239:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 43286   00B33C  8EF2               	bsf	242,7,c	;volatile
 43287   00B33E  8CF2               	bsf	242,6,c	;volatile
 43288   00B340                     l2200:
 43289                           
 43290                           ; BSR set to: 0
 43291                           ;../../VLCBlib_PIC/nvm.c: 241:         EECON1bits.WREN = 0;
 43292   00B340  947F               	bcf	127,2,c	;volsfr
 43293                           
 43294                           ; BSR set to: 0
 43295                           ;../../VLCBlib_PIC/nvm.c: 277:         if (EEPROM_Read(index) == value) {
 43296   00B342  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 43297   00B346  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 43298   00B34A  EC9D  F063         	call	_EEPROM_Read	;wreg free
 43299   00B34E  0100               	movlb	0	; () banked
 43300   00B350  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 43301   00B352  B4D8               	btfsc	status,2,c
 43302   00B354  D006               	goto	l19153
 43303                           
 43304                           ; BSR set to: 0
 43305                           ;../../VLCBlib_PIC/nvm.c: 281:         mnsDiagnostics[0x04].asUint++;
 43306   00B356  0101               	movlb	1	; () banked
 43307   00B358  4B94               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 43308   00B35A  2B95               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 43309                           
 43310                           ; BSR set to: 1
 43311                           ;../../VLCBlib_PIC/nvm.c: 282:         updateModuleErrorStatus();
 43312   00B35C  EC39  F064         	call	_updateModuleErrorStatus	;wreg free
 43313                           
 43314                           ;../../VLCBlib_PIC/nvm.c: 284:     } while (1);
 43315   00B360  D7D3               	goto	l19119
 43316   00B362                     l19153:
 43317                           
 43318                           ; BSR set to: 0
 43319                           ;../../VLCBlib_PIC/nvm.c: 285:     return GRSP_OK;
 43320   00B362  0E00               	movlw	0
 43321                           
 43322                           ; BSR set to: 0
 43323   00B364  0012               	return		;funcret
 43324   00B366                     __end_of_EEPROM_Write:
 43325                           	callstack 0
 43326                           
 43327 ;; *************** function _updateModuleErrorStatus *****************
 43328 ;; Defined at:
 43329 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 43330 ;; Parameters:    Size  Location     Type
 43331 ;;		None
 43332 ;; Auto vars:     Size  Location     Type
 43333 ;;		None
 43334 ;; Return value:  Size  Location     Type
 43335 ;;                  1    wreg      void 
 43336 ;; Registers used:
 43337 ;;		wreg, status,2, status,0
 43338 ;; Tracked objects:
 43339 ;;		On entry : 0/0
 43340 ;;		On exit  : 0/0
 43341 ;;		Unchanged: 0/0
 43342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43347 ;;Total ram usage:        0 bytes
 43348 ;; Hardware stack levels used: 1
 43349 ;; Hardware stack levels required when called: 12
 43350 ;; This function calls:
 43351 ;;		Nothing
 43352 ;; This function is called by:
 43353 ;;		_EEPROM_Write
 43354 ;;		_canSendMessage
 43355 ;;		_processEnumeration
 43356 ;; This function uses a non-reentrant model
 43357 ;;
 43358                           
 43359                           	psect	text189
 43360   00C872                     __ptext189:
 43361                           	callstack 0
 43362   00C872                     _updateModuleErrorStatus:
 43363                           	callstack 14
 43364                           
 43365                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 43366                           
 43367                           ; BSR set to: 0
 43368                           ;incstack = 0
 43369   00C872  0101               	movlb	1	; () banked
 43370   00C874  298E               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 43371   00C876  B4D8               	btfsc	status,2,c
 43372   00C878  0012               	return	
 43373                           
 43374                           ; BSR set to: 1
 43375                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 43376   00C87A  2B8E               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 43377                           
 43378                           ; BSR set to: 1
 43379   00C87C  0012               	return		;funcret
 43380   00C87E                     __end_of_updateModuleErrorStatus:
 43381                           	callstack 0
 43382                           
 43383 ;; *************** function _setDigitalOutput *****************
 43384 ;; Defined at:
 43385 ;;		line 226 in file "../digitalOut.c"
 43386 ;; Parameters:    Size  Location     Type
 43387 ;;  io              1    wreg     unsigned char 
 43388 ;;  state           1   55[BANK0 ] unsigned char 
 43389 ;; Auto vars:     Size  Location     Type
 43390 ;;  io              1   57[BANK0 ] unsigned char 
 43391 ;;  pinState        1   56[BANK0 ] enum E12766
 43392 ;; Return value:  Size  Location     Type
 43393 ;;                  1    wreg      void 
 43394 ;; Registers used:
 43395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43396 ;; Tracked objects:
 43397 ;;		On entry : 0/0
 43398 ;;		On exit  : 0/0
 43399 ;;		Unchanged: 0/0
 43400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43401 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43402 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43404 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43405 ;;Total ram usage:        3 bytes
 43406 ;; Hardware stack levels used: 1
 43407 ;; Hardware stack levels required when called: 13
 43408 ;; This function calls:
 43409 ;;		_getNV
 43410 ;;		_setOutputPin
 43411 ;; This function is called by:
 43412 ;;		_configIO
 43413 ;;		_setOutputPosition
 43414 ;; This function uses a non-reentrant model
 43415 ;;
 43416                           
 43417                           	psect	text190
 43418   00A70E                     __ptext190:
 43419                           	callstack 0
 43420   00A70E                     _setDigitalOutput:
 43421                           	callstack 14
 43422                           
 43423                           ; BSR set to: 1
 43424                           ;incstack = 0
 43425                           ;setDigitalOutput@io stored from wreg
 43426   00A70E  0100               	movlb	0	; () banked
 43427   00A710  6F99               	movwf	setDigitalOutput@io& (0+255),b
 43428                           
 43429                           ;../digitalOut.c: 227:     Boolean pinState;;../digitalOut.c: 228:     switch (state) {
 43430   00A712  D038               	goto	l19859
 43431   00A714                     l19843:
 43432                           
 43433                           ; BSR set to: 0
 43434                           ;../digitalOut.c: 230:             state = 2;
 43435   00A714  0E02               	movlw	2
 43436   00A716  6F97               	movwf	setDigitalOutput@state& (0+255),b
 43437   00A718                     l19845:
 43438                           
 43439                           ; BSR set to: 0
 43440                           ;../digitalOut.c: 234:             pinState = (state == 1);
 43441   00A718  0597               	decf	setDigitalOutput@state& (0+255),w,b
 43442   00A71A  A4D8               	btfss	status,2,c
 43443   00A71C  D002               	goto	u19730
 43444   00A71E  0E01               	movlw	1
 43445   00A720  D001               	goto	u19740
 43446   00A722                     u19730:
 43447   00A722  0E00               	movlw	0
 43448   00A724                     u19740:
 43449   00A724  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 43450                           
 43451                           ; BSR set to: 0
 43452                           ;../digitalOut.c: 238:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 43453   00A726  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43454   00A728  0D07               	mullw	7
 43455   00A72A  50F3               	movf	243,w,c
 43456   00A72C  0F11               	addlw	17
 43457   00A72E  ECB0  F05F         	call	_getNV
 43458   00A732  0100               	movlb	0	; () banked
 43459   00A734  AB8D               	btfss	?_getNV& (0+255),5,b
 43460   00A736  D00B               	goto	l19851
 43461                           
 43462                           ; BSR set to: 0
 43463                           ;../digitalOut.c: 239:                 setOutputPin(io, ! pinState);
 43464   00A738  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 43465   00A73A  A4D8               	btfss	status,2,c
 43466   00A73C  D002               	goto	u19760
 43467   00A73E  0E01               	movlw	1
 43468   00A740  D001               	goto	u19770
 43469   00A742                     u19760:
 43470   00A742  0E00               	movlw	0
 43471   00A744                     u19770:
 43472   00A744  6F91               	movwf	setOutputPin@state& (0+255),b
 43473   00A746  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43474   00A748  EC9A  F037         	call	_setOutputPin
 43475                           
 43476                           ;../digitalOut.c: 240:             } else {
 43477   00A74C  0012               	return	
 43478   00A74E                     l19851:
 43479                           
 43480                           ; BSR set to: 0
 43481                           ;../digitalOut.c: 241:                 setOutputPin(io, pinState);
 43482   00A74E  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 43483   00A752  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43484   00A754  EC9A  F037         	call	_setOutputPin
 43485   00A758  0012               	return	
 43486   00A75A                     l19853:
 43487                           
 43488                           ; BSR set to: 0
 43489                           ;../digitalOut.c: 245:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 43490   00A75A  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43491   00A75C  0D07               	mullw	7
 43492   00A75E  50F3               	movf	243,w,c
 43493   00A760  0F13               	addlw	19
 43494   00A762  ECB0  F05F         	call	_getNV
 43495   00A766  0E20               	movlw	low _flashDelays
 43496   00A768  0100               	movlb	0	; () banked
 43497   00A76A  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 43498   00A76C  6ED9               	movwf	fsr2l,c
 43499   00A76E  6ADA               	clrf	fsr2h,c
 43500   00A770  0E01               	movlw	high _flashDelays
 43501   00A772  22DA               	addwfc	fsr2h,f,c
 43502   00A774  C08D  FFDF         	movff	?_getNV,indf2
 43503                           
 43504                           ; BSR set to: 0
 43505                           ;../digitalOut.c: 246:             setOutputPin(io, TRUE);
 43506   00A778  0E01               	movlw	1
 43507   00A77A  6F91               	movwf	setOutputPin@state& (0+255),b
 43508   00A77C  5199               	movf	setDigitalOutput@io& (0+255),w,b
 43509   00A77E  EC9A  F037         	call	_setOutputPin
 43510                           
 43511                           ;../digitalOut.c: 247:             break;
 43512   00A782  0012               	return	
 43513   00A784                     l19859:
 43514   00A784  0100               	movlb	0	; () banked
 43515   00A786  5197               	movf	setDigitalOutput@state& (0+255),w,b
 43516                           
 43517                           ; Switch size 1, requested type "simple"
 43518                           ; Number of cases is 3, Range of values is 1 to 3
 43519                           ; switch strategies available:
 43520                           ; Name         Instructions Cycles
 43521                           ; simple_byte           10     6 (average)
 43522                           ;	Chosen strategy is simple_byte
 43523   00A788  0A01               	xorlw	1	; case 1
 43524   00A78A  B4D8               	btfsc	status,2,c
 43525   00A78C  D7C5               	goto	l19845
 43526   00A78E  0A03               	xorlw	3	; case 2
 43527   00A790  B4D8               	btfsc	status,2,c
 43528   00A792  D7C2               	goto	l19845
 43529   00A794  0A01               	xorlw	1	; case 3
 43530   00A796  B4D8               	btfsc	status,2,c
 43531   00A798  D7E0               	goto	l19853
 43532   00A79A  D7BC               	goto	l19843
 43533   00A79C                     __end_of_setDigitalOutput:
 43534                           	callstack 0
 43535                           
 43536 ;; *************** function _setOutputPin *****************
 43537 ;; Defined at:
 43538 ;;		line 256 in file "../digitalOut.c"
 43539 ;; Parameters:    Size  Location     Type
 43540 ;;  io              1    wreg     unsigned char 
 43541 ;;  state           1   49[BANK0 ] enum E12766
 43542 ;; Auto vars:     Size  Location     Type
 43543 ;;  io              1   52[BANK0 ] unsigned char 
 43544 ;; Return value:  Size  Location     Type
 43545 ;;                  1    wreg      void 
 43546 ;; Registers used:
 43547 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 43548 ;; Tracked objects:
 43549 ;;		On entry : 0/0
 43550 ;;		On exit  : 0/0
 43551 ;;		Unchanged: 0/0
 43552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43553 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43554 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43555 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43556 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43557 ;;Total ram usage:        4 bytes
 43558 ;; Hardware stack levels used: 1
 43559 ;; Hardware stack levels required when called: 12
 43560 ;; This function calls:
 43561 ;;		Nothing
 43562 ;; This function is called by:
 43563 ;;		_startDigitalOutput
 43564 ;;		_processOutputs
 43565 ;;		_setDigitalOutput
 43566 ;;		_setOutputPosition
 43567 ;;		_setupTimer1
 43568 ;;		_setupTimer3
 43569 ;;		_pollServos
 43570 ;; This function uses a non-reentrant model
 43571 ;;
 43572                           
 43573                           	psect	text191
 43574   006F34                     __ptext191:
 43575                           	callstack 0
 43576   006F34                     _setOutputPin:
 43577                           	callstack 15
 43578                           
 43579                           ;incstack = 0
 43580                           ;setOutputPin@io stored from wreg
 43581   006F34  0100               	movlb	0	; () banked
 43582   006F36  6F94               	movwf	setOutputPin@io& (0+255),b
 43583                           
 43584                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 43585   006F38  D0C0               	goto	l19707
 43586   006F3A                     l19687:
 43587                           
 43588                           ; BSR set to: 0
 43589                           ;../digitalOut.c: 259:             if (state) {
 43590   006F3A  5191               	movf	setOutputPin@state& (0+255),w,b
 43591   006F3C  B4D8               	btfsc	status,2,c
 43592   006F3E  D01E               	goto	l19691
 43593                           
 43594                           ; BSR set to: 0
 43595                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 43596   006F40  5194               	movf	setOutputPin@io& (0+255),w,b
 43597   006F42  0D04               	mullw	4
 43598   006F44  0E02               	movlw	2
 43599   006F46  26F3               	addwf	243,f,c
 43600   006F48  0E00               	movlw	0
 43601   006F4A  22F4               	addwfc	244,f,c
 43602   006F4C  0E29               	movlw	low _configs
 43603   006F4E  24F3               	addwf	243,w,c
 43604   006F50  6EF6               	movwf	tblptrl,c
 43605   006F52  0EEE               	movlw	high _configs
 43606   006F54  20F4               	addwfc	244,w,c
 43607   006F56  6EF7               	movwf	tblptrh,c
 43608   006F58                     	if	1	;There are 3 active tblptr bytes
 43609   006F58  6AF8               	clrf	tblptru,c
 43610   006F5A  0E00               	movlw	low (__mediumconst shr (0+16))
 43611   006F5C  22F8               	addwfc	tblptru,f,c
 43612   006F5E                     	endif
 43613   006F5E  0008               	tblrd		*
 43614   006F60  CFF5 F092          	movff	tablat,??_setOutputPin
 43615   006F64  0E01               	movlw	1
 43616   006F66  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43617   006F68  2B92               	incf	??_setOutputPin& (0+255),f,b
 43618   006F6A  D002               	goto	u19474
 43619   006F6C                     u19475:
 43620   006F6C  90D8               	bcf	status,0,c
 43621   006F6E  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43622   006F70                     u19474:
 43623   006F70  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43624   006F72  D7FC               	goto	u19475
 43625   006F74  0100               	movlb	0	; () banked
 43626   006F76  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43627   006F78  1289               	iorwf	137,f,c	;volatile
 43628                           
 43629                           ;../digitalOut.c: 262:             } else {
 43630   006F7A  0012               	return	
 43631   006F7C                     l19691:
 43632                           
 43633                           ; BSR set to: 0
 43634                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 43635   006F7C  5194               	movf	setOutputPin@io& (0+255),w,b
 43636   006F7E  0D04               	mullw	4
 43637   006F80  0E02               	movlw	2
 43638   006F82  26F3               	addwf	243,f,c
 43639   006F84  0E00               	movlw	0
 43640   006F86  22F4               	addwfc	244,f,c
 43641   006F88  0E29               	movlw	low _configs
 43642   006F8A  24F3               	addwf	243,w,c
 43643   006F8C  6EF6               	movwf	tblptrl,c
 43644   006F8E  0EEE               	movlw	high _configs
 43645   006F90  20F4               	addwfc	244,w,c
 43646   006F92  6EF7               	movwf	tblptrh,c
 43647   006F94                     	if	1	;There are 3 active tblptr bytes
 43648   006F94  6AF8               	clrf	tblptru,c
 43649   006F96  0E00               	movlw	low (__mediumconst shr (0+16))
 43650   006F98  22F8               	addwfc	tblptru,f,c
 43651   006F9A                     	endif
 43652   006F9A  0008               	tblrd		*
 43653   006F9C  CFF5 F092          	movff	tablat,??_setOutputPin
 43654   006FA0  0E01               	movlw	1
 43655   006FA2  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43656   006FA4  2B92               	incf	??_setOutputPin& (0+255),f,b
 43657   006FA6  D002               	goto	u19484
 43658   006FA8                     u19485:
 43659   006FA8  90D8               	bcf	status,0,c
 43660   006FAA  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43661   006FAC                     u19484:
 43662   006FAC  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43663   006FAE  D7FC               	goto	u19485
 43664   006FB0  0100               	movlb	0	; () banked
 43665   006FB2  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43666   006FB4  0AFF               	xorlw	255
 43667   006FB6  1689               	andwf	137,f,c	;volatile
 43668   006FB8  0012               	return	
 43669   006FBA                     l19693:
 43670                           
 43671                           ; BSR set to: 0
 43672                           ;../digitalOut.c: 268:             if (state) {
 43673   006FBA  5191               	movf	setOutputPin@state& (0+255),w,b
 43674   006FBC  B4D8               	btfsc	status,2,c
 43675   006FBE  D01E               	goto	l19697
 43676                           
 43677                           ; BSR set to: 0
 43678                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 43679   006FC0  5194               	movf	setOutputPin@io& (0+255),w,b
 43680   006FC2  0D04               	mullw	4
 43681   006FC4  0E02               	movlw	2
 43682   006FC6  26F3               	addwf	243,f,c
 43683   006FC8  0E00               	movlw	0
 43684   006FCA  22F4               	addwfc	244,f,c
 43685   006FCC  0E29               	movlw	low _configs
 43686   006FCE  24F3               	addwf	243,w,c
 43687   006FD0  6EF6               	movwf	tblptrl,c
 43688   006FD2  0EEE               	movlw	high _configs
 43689   006FD4  20F4               	addwfc	244,w,c
 43690   006FD6  6EF7               	movwf	tblptrh,c
 43691   006FD8                     	if	1	;There are 3 active tblptr bytes
 43692   006FD8  6AF8               	clrf	tblptru,c
 43693   006FDA  0E00               	movlw	low (__mediumconst shr (0+16))
 43694   006FDC  22F8               	addwfc	tblptru,f,c
 43695   006FDE                     	endif
 43696   006FDE  0008               	tblrd		*
 43697   006FE0  CFF5 F092          	movff	tablat,??_setOutputPin
 43698   006FE4  0E01               	movlw	1
 43699   006FE6  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43700   006FE8  2B92               	incf	??_setOutputPin& (0+255),f,b
 43701   006FEA  D002               	goto	u19504
 43702   006FEC                     u19505:
 43703   006FEC  90D8               	bcf	status,0,c
 43704   006FEE  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43705   006FF0                     u19504:
 43706   006FF0  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43707   006FF2  D7FC               	goto	u19505
 43708   006FF4  0100               	movlb	0	; () banked
 43709   006FF6  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43710   006FF8  128A               	iorwf	138,f,c	;volatile
 43711                           
 43712                           ;../digitalOut.c: 271:             } else {
 43713   006FFA  0012               	return	
 43714   006FFC                     l19697:
 43715                           
 43716                           ; BSR set to: 0
 43717                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 43718   006FFC  5194               	movf	setOutputPin@io& (0+255),w,b
 43719   006FFE  0D04               	mullw	4
 43720   007000  0E02               	movlw	2
 43721   007002  26F3               	addwf	243,f,c
 43722   007004  0E00               	movlw	0
 43723   007006  22F4               	addwfc	244,f,c
 43724   007008  0E29               	movlw	low _configs
 43725   00700A  24F3               	addwf	243,w,c
 43726   00700C  6EF6               	movwf	tblptrl,c
 43727   00700E  0EEE               	movlw	high _configs
 43728   007010  20F4               	addwfc	244,w,c
 43729   007012  6EF7               	movwf	tblptrh,c
 43730   007014                     	if	1	;There are 3 active tblptr bytes
 43731   007014  6AF8               	clrf	tblptru,c
 43732   007016  0E00               	movlw	low (__mediumconst shr (0+16))
 43733   007018  22F8               	addwfc	tblptru,f,c
 43734   00701A                     	endif
 43735   00701A  0008               	tblrd		*
 43736   00701C  CFF5 F092          	movff	tablat,??_setOutputPin
 43737   007020  0E01               	movlw	1
 43738   007022  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43739   007024  2B92               	incf	??_setOutputPin& (0+255),f,b
 43740   007026  D002               	goto	u19514
 43741   007028                     u19515:
 43742   007028  90D8               	bcf	status,0,c
 43743   00702A  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43744   00702C                     u19514:
 43745   00702C  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43746   00702E  D7FC               	goto	u19515
 43747   007030  0100               	movlb	0	; () banked
 43748   007032  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43749   007034  0AFF               	xorlw	255
 43750   007036  168A               	andwf	138,f,c	;volatile
 43751   007038  0012               	return	
 43752   00703A                     l19699:
 43753                           
 43754                           ; BSR set to: 0
 43755                           ;../digitalOut.c: 277:             if (state) {
 43756   00703A  5191               	movf	setOutputPin@state& (0+255),w,b
 43757   00703C  B4D8               	btfsc	status,2,c
 43758   00703E  D01E               	goto	l19703
 43759                           
 43760                           ; BSR set to: 0
 43761                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 43762   007040  5194               	movf	setOutputPin@io& (0+255),w,b
 43763   007042  0D04               	mullw	4
 43764   007044  0E02               	movlw	2
 43765   007046  26F3               	addwf	243,f,c
 43766   007048  0E00               	movlw	0
 43767   00704A  22F4               	addwfc	244,f,c
 43768   00704C  0E29               	movlw	low _configs
 43769   00704E  24F3               	addwf	243,w,c
 43770   007050  6EF6               	movwf	tblptrl,c
 43771   007052  0EEE               	movlw	high _configs
 43772   007054  20F4               	addwfc	244,w,c
 43773   007056  6EF7               	movwf	tblptrh,c
 43774   007058                     	if	1	;There are 3 active tblptr bytes
 43775   007058  6AF8               	clrf	tblptru,c
 43776   00705A  0E00               	movlw	low (__mediumconst shr (0+16))
 43777   00705C  22F8               	addwfc	tblptru,f,c
 43778   00705E                     	endif
 43779   00705E  0008               	tblrd		*
 43780   007060  CFF5 F092          	movff	tablat,??_setOutputPin
 43781   007064  0E01               	movlw	1
 43782   007066  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43783   007068  2B92               	incf	??_setOutputPin& (0+255),f,b
 43784   00706A  D002               	goto	u19534
 43785   00706C                     u19535:
 43786   00706C  90D8               	bcf	status,0,c
 43787   00706E  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43788   007070                     u19534:
 43789   007070  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43790   007072  D7FC               	goto	u19535
 43791   007074  0100               	movlb	0	; () banked
 43792   007076  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43793   007078  128B               	iorwf	139,f,c	;volatile
 43794                           
 43795                           ;../digitalOut.c: 280:             } else {
 43796   00707A  0012               	return	
 43797   00707C                     l19703:
 43798                           
 43799                           ; BSR set to: 0
 43800                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 43801   00707C  5194               	movf	setOutputPin@io& (0+255),w,b
 43802   00707E  0D04               	mullw	4
 43803   007080  0E02               	movlw	2
 43804   007082  26F3               	addwf	243,f,c
 43805   007084  0E00               	movlw	0
 43806   007086  22F4               	addwfc	244,f,c
 43807   007088  0E29               	movlw	low _configs
 43808   00708A  24F3               	addwf	243,w,c
 43809   00708C  6EF6               	movwf	tblptrl,c
 43810   00708E  0EEE               	movlw	high _configs
 43811   007090  20F4               	addwfc	244,w,c
 43812   007092  6EF7               	movwf	tblptrh,c
 43813   007094                     	if	1	;There are 3 active tblptr bytes
 43814   007094  6AF8               	clrf	tblptru,c
 43815   007096  0E00               	movlw	low (__mediumconst shr (0+16))
 43816   007098  22F8               	addwfc	tblptru,f,c
 43817   00709A                     	endif
 43818   00709A  0008               	tblrd		*
 43819   00709C  CFF5 F092          	movff	tablat,??_setOutputPin
 43820   0070A0  0E01               	movlw	1
 43821   0070A2  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43822   0070A4  2B92               	incf	??_setOutputPin& (0+255),f,b
 43823   0070A6  D002               	goto	u19544
 43824   0070A8                     u19545:
 43825   0070A8  90D8               	bcf	status,0,c
 43826   0070AA  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43827   0070AC                     u19544:
 43828   0070AC  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43829   0070AE  D7FC               	goto	u19545
 43830   0070B0  0100               	movlb	0	; () banked
 43831   0070B2  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43832   0070B4  0AFF               	xorlw	255
 43833   0070B6  168B               	andwf	139,f,c	;volatile
 43834   0070B8  0012               	return	
 43835   0070BA                     l19707:
 43836   0070BA  0100               	movlb	0	; () banked
 43837   0070BC  5194               	movf	setOutputPin@io& (0+255),w,b
 43838   0070BE  0D04               	mullw	4
 43839   0070C0  0E01               	movlw	1
 43840   0070C2  26F3               	addwf	243,f,c
 43841   0070C4  0E00               	movlw	0
 43842   0070C6  22F4               	addwfc	244,f,c
 43843   0070C8  0E29               	movlw	low _configs
 43844   0070CA  24F3               	addwf	243,w,c
 43845   0070CC  6EF6               	movwf	tblptrl,c
 43846   0070CE  0EEE               	movlw	high _configs
 43847   0070D0  20F4               	addwfc	244,w,c
 43848   0070D2  6EF7               	movwf	tblptrh,c
 43849   0070D4                     	if	1	;There are 3 active tblptr bytes
 43850   0070D4  6AF8               	clrf	tblptru,c
 43851   0070D6  0E00               	movlw	low (__mediumconst shr (0+16))
 43852   0070D8  22F8               	addwfc	tblptru,f,c
 43853   0070DA                     	endif
 43854   0070DA  0008               	tblrd		*
 43855   0070DC  50F5               	movf	tablat,w,c
 43856                           
 43857                           ; Switch size 1, requested type "simple"
 43858                           ; Number of cases is 3, Range of values is 65 to 67
 43859                           ; switch strategies available:
 43860                           ; Name         Instructions Cycles
 43861                           ; simple_byte           10     6 (average)
 43862                           ;	Chosen strategy is simple_byte
 43863   0070DE  0A41               	xorlw	65	; case 65
 43864   0070E0  B4D8               	btfsc	status,2,c
 43865   0070E2  D72B               	goto	l19687
 43866   0070E4  0A03               	xorlw	3	; case 66
 43867   0070E6  B4D8               	btfsc	status,2,c
 43868   0070E8  D768               	goto	l19693
 43869   0070EA  0A01               	xorlw	1	; case 67
 43870   0070EC  A4D8               	btfss	status,2,c
 43871   0070EE  0012               	return	
 43872   0070F0  D7A4               	goto	l19699
 43873   0070F2                     __end_of_setOutputPin:
 43874                           	callstack 0
 43875                           
 43876 ;; *************** function _getNV *****************
 43877 ;; Defined at:
 43878 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 43879 ;; Parameters:    Size  Location     Type
 43880 ;;  index           1    wreg     unsigned char 
 43881 ;; Auto vars:     Size  Location     Type
 43882 ;;  index           1   48[BANK0 ] unsigned char 
 43883 ;; Return value:  Size  Location     Type
 43884 ;;                  2   45[BANK0 ] short 
 43885 ;; Registers used:
 43886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43887 ;; Tracked objects:
 43888 ;;		On entry : 0/0
 43889 ;;		On exit  : 0/0
 43890 ;;		Unchanged: 0/0
 43891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43892 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43895 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43896 ;;Total ram usage:        4 bytes
 43897 ;; Hardware stack levels used: 1
 43898 ;; Hardware stack levels required when called: 12
 43899 ;; This function calls:
 43900 ;;		Nothing
 43901 ;; This function is called by:
 43902 ;;		_setup
 43903 ;;		_loop
 43904 ;;		_APP_GetEventState
 43905 ;;		_configIO
 43906 ;;		_startDigitalOutput
 43907 ;;		_processOutputs
 43908 ;;		_setDigitalOutput
 43909 ;;		_initInputScan
 43910 ;;		_inputScan
 43911 ;;		_readInput
 43912 ;;		_consumer2QProcessMessage
 43913 ;;		_processActions
 43914 ;;		_sodTRCallback
 43915 ;;		_APP_nvValueChanged
 43916 ;;		_setOutputPosition
 43917 ;;		_initServos
 43918 ;;		_startServos
 43919 ;;		_setupTimer1
 43920 ;;		_setupTimer3
 43921 ;;		_pollServos
 43922 ;;		_startServoOutput
 43923 ;;		_startMultiOutput
 43924 ;;		_setServoState
 43925 ;;		_setBounceState
 43926 ;;		_setMultiState
 43927 ;;		_bounceDown
 43928 ;;		_bounceUp
 43929 ;;		_nvProcessMessage
 43930 ;;		_nvTRnvrdCallback
 43931 ;; This function uses a non-reentrant model
 43932 ;;
 43933                           
 43934                           	psect	text192
 43935   00BF60                     __ptext192:
 43936                           	callstack 0
 43937   00BF60                     _getNV:
 43938                           	callstack 14
 43939                           
 43940                           ; BSR set to: 0
 43941                           ;incstack = 0
 43942                           ;getNV@index stored from wreg
 43943   00BF60  0100               	movlb	0	; () banked
 43944   00BF62  6F90               	movwf	getNV@index& (0+255),b
 43945                           
 43946                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 43947   00BF64  0100               	movlb	0	; () banked
 43948   00BF66  5190               	movf	getNV@index& (0+255),w,b
 43949   00BF68  A4D8               	btfss	status,2,c
 43950   00BF6A  D005               	goto	l19675
 43951                           
 43952                           ; BSR set to: 0
 43953   00BF6C  0E00               	movlw	0
 43954   00BF6E  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43955   00BF70  0E7F               	movlw	127
 43956   00BF72  6F8D               	movwf	?_getNV& (0+255),b
 43957   00BF74  0012               	return	
 43958   00BF76                     l19675:
 43959                           
 43960                           ; BSR set to: 0
 43961                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 43962   00BF76  0E7F               	movlw	127
 43963   00BF78  6590               	cpfsgt	getNV@index& (0+255),b
 43964   00BF7A  D005               	goto	l19681
 43965                           
 43966                           ; BSR set to: 0
 43967   00BF7C  0EFF               	movlw	255
 43968   00BF7E  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43969   00BF80  0EF6               	movlw	246
 43970   00BF82  6F8D               	movwf	?_getNV& (0+255),b
 43971   00BF84  0012               	return	
 43972   00BF86                     l19681:
 43973                           
 43974                           ; BSR set to: 0
 43975                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 43976   00BF86  0E00               	movlw	low _nvCache
 43977   00BF88  2590               	addwf	getNV@index& (0+255),w,b
 43978   00BF8A  6ED9               	movwf	fsr2l,c
 43979   00BF8C  6ADA               	clrf	fsr2h,c
 43980   00BF8E  0E04               	movlw	high _nvCache
 43981   00BF90  22DA               	addwfc	fsr2h,f,c
 43982   00BF92  50DF               	movf	indf2,w,c
 43983   00BF94  6F8F               	movwf	??_getNV& (0+255),b
 43984   00BF96  518F               	movf	??_getNV& (0+255),w,b
 43985   00BF98  6F8D               	movwf	?_getNV& (0+255),b
 43986   00BF9A  6B8E               	clrf	(?_getNV+1)& (0+255),b
 43987                           
 43988                           ; BSR set to: 0
 43989   00BF9C  0012               	return		;funcret
 43990   00BF9E                     __end_of_getNV:
 43991                           	callstack 0
 43992                           
 43993 ;; *************** function _readNVM *****************
 43994 ;; Defined at:
 43995 ;;		line 550 in file "../../VLCBlib_PIC/nvm.c"
 43996 ;; Parameters:    Size  Location     Type
 43997 ;;  type            1    wreg     enum E12738
 43998 ;;  index           3   49[BANK0 ] unsigned um
 43999 ;; Auto vars:     Size  Location     Type
 44000 ;;  type            1   54[BANK0 ] enum E12738
 44001 ;; Return value:  Size  Location     Type
 44002 ;;                  2   49[BANK0 ] short 
 44003 ;; Registers used:
 44004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 44005 ;; Tracked objects:
 44006 ;;		On entry : 0/0
 44007 ;;		On exit  : 0/0
 44008 ;;		Unchanged: 0/0
 44009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44010 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44013 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44014 ;;Total ram usage:        6 bytes
 44015 ;; Hardware stack levels used: 1
 44016 ;; Hardware stack levels required when called: 13
 44017 ;; This function calls:
 44018 ;;		_EEPROM_Read
 44019 ;;		_FLASH_Read
 44020 ;; This function is called by:
 44021 ;;		_APP_GetEventState
 44022 ;;		_configIO
 44023 ;;		_initInputScan
 44024 ;;		_initServos
 44025 ;;		_bootPowerUp
 44026 ;;		_mnsPowerUp
 44027 ;;		_loadNvCache
 44028 ;;		_main
 44029 ;;		_canPowerUp
 44030 ;;		_doNnevn
 44031 ;;		_removeTableEntry
 44032 ;;		_addEvent
 44033 ;;		_writeEv
 44034 ;;		_getEv
 44035 ;;		_numEv
 44036 ;;		_getEVs
 44037 ;;		_getNN
 44038 ;;		_getEN
 44039 ;;		_validStart
 44040 ;;		_deleteHappeningRange
 44041 ;; This function uses a non-reentrant model
 44042 ;;
 44043                           
 44044                           	psect	text193
 44045   00B61E                     __ptext193:
 44046                           	callstack 0
 44047   00B61E                     _readNVM:
 44048                           	callstack 15
 44049                           
 44050                           ; BSR set to: 0
 44051                           ;incstack = 0
 44052                           ;readNVM@type stored from wreg
 44053   00B61E  0100               	movlb	0	; () banked
 44054   00B620  6F96               	movwf	readNVM@type& (0+255),b
 44055                           
 44056                           ;../../VLCBlib_PIC/nvm.c: 551:     switch(type) {
 44057   00B622  D01D               	goto	l18943
 44058   00B624                     l18929:
 44059                           
 44060                           ; BSR set to: 0
 44061                           ;../../VLCBlib_PIC/nvm.c: 553:             return EEPROM_Read((uint16_t)index);
 44062   00B624  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 44063   00B628  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 44064   00B62C  EC9D  F063         	call	_EEPROM_Read	;wreg free
 44065   00B630  0100               	movlb	0	; () banked
 44066   00B632  6F94               	movwf	??_readNVM& (0+255),b
 44067   00B634  5194               	movf	??_readNVM& (0+255),w,b
 44068   00B636  6F91               	movwf	?_readNVM& (0+255),b
 44069   00B638  6B92               	clrf	(?_readNVM+1)& (0+255),b
 44070   00B63A  0012               	return	
 44071   00B63C                     l18933:
 44072                           
 44073                           ; BSR set to: 0
 44074                           ;../../VLCBlib_PIC/nvm.c: 556:             return FLASH_Read((uint16_t)index);
 44075   00B63C  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 44076   00B640  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 44077   00B644  ECEB  F05D         	call	_FLASH_Read	;wreg free
 44078   00B648  0100               	movlb	0	; () banked
 44079   00B64A  6F94               	movwf	??_readNVM& (0+255),b
 44080   00B64C  5194               	movf	??_readNVM& (0+255),w,b
 44081   00B64E  6F91               	movwf	?_readNVM& (0+255),b
 44082   00B650  6B92               	clrf	(?_readNVM+1)& (0+255),b
 44083   00B652  0012               	return	
 44084   00B654                     l18937:
 44085                           
 44086                           ; BSR set to: 0
 44087                           ;../../VLCBlib_PIC/nvm.c: 562:             return -GRSP_UNKNOWN_NVM_TYPE;
 44088   00B654  0EFF               	movlw	255
 44089   00B656  6F92               	movwf	(?_readNVM+1)& (0+255),b
 44090   00B658  0E02               	movlw	2
 44091   00B65A  6F91               	movwf	?_readNVM& (0+255),b
 44092   00B65C  0012               	return	
 44093   00B65E                     l18943:
 44094   00B65E  0100               	movlb	0	; () banked
 44095   00B660  5196               	movf	readNVM@type& (0+255),w,b
 44096   00B662  6F94               	movwf	??_readNVM& (0+255),b
 44097   00B664  6B95               	clrf	(??_readNVM+1)& (0+255),b
 44098                           
 44099                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 44100                           ; Switch size 1, requested type "simple"
 44101                           ; Number of cases is 1, Range of values is 0 to 0
 44102                           ; switch strategies available:
 44103                           ; Name         Instructions Cycles
 44104                           ; simple_byte            4     3 (average)
 44105                           ;	Chosen strategy is simple_byte
 44106   00B666  5195               	movf	(??_readNVM+1)& (0+255),w,b
 44107   00B668  0A00               	xorlw	0	; case 0
 44108   00B66A  A4D8               	btfss	status,2,c
 44109   00B66C  D7F3               	goto	l18937
 44110                           
 44111                           ; BSR set to: 0
 44112                           ; Switch size 1, requested type "simple"
 44113                           ; Number of cases is 2, Range of values is 0 to 1
 44114                           ; switch strategies available:
 44115                           ; Name         Instructions Cycles
 44116                           ; simple_byte            7     4 (average)
 44117                           ;	Chosen strategy is simple_byte
 44118   00B66E  5194               	movf	??_readNVM& (0+255),w,b
 44119   00B670  0A00               	xorlw	0	; case 0
 44120   00B672  B4D8               	btfsc	status,2,c
 44121   00B674  D7D7               	goto	l18929
 44122   00B676  0A01               	xorlw	1	; case 1
 44123   00B678  B4D8               	btfsc	status,2,c
 44124   00B67A  D7E0               	goto	l18933
 44125   00B67C  D7EB               	goto	l18937
 44126   00B67E                     __end_of_readNVM:
 44127                           	callstack 0
 44128                           
 44129 ;; *************** function _FLASH_Read *****************
 44130 ;; Defined at:
 44131 ;;		line 295 in file "../../VLCBlib_PIC/nvm.c"
 44132 ;; Parameters:    Size  Location     Type
 44133 ;;  address         2   45[BANK0 ] unsigned short 
 44134 ;; Auto vars:     Size  Location     Type
 44135 ;;		None
 44136 ;; Return value:  Size  Location     Type
 44137 ;;                  1    wreg      unsigned char 
 44138 ;; Registers used:
 44139 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 44140 ;; Tracked objects:
 44141 ;;		On entry : 0/0
 44142 ;;		On exit  : 0/0
 44143 ;;		Unchanged: 0/0
 44144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44145 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44148 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44149 ;;Total ram usage:        4 bytes
 44150 ;; Hardware stack levels used: 1
 44151 ;; Hardware stack levels required when called: 12
 44152 ;; This function calls:
 44153 ;;		Nothing
 44154 ;; This function is called by:
 44155 ;;		_readNVM
 44156 ;; This function uses a non-reentrant model
 44157 ;;
 44158                           
 44159                           	psect	text194
 44160   00BBD6                     __ptext194:
 44161                           	callstack 0
 44162   00BBD6                     _FLASH_Read:
 44163                           	callstack 15
 44164                           
 44165                           ;../../VLCBlib_PIC/nvm.c: 297:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 44166                           
 44167                           ; BSR set to: 0
 44168                           ;incstack = 0
 44169   00BBD6  0EC0               	movlw	192
 44170   00BBD8  0100               	movlb	0	; () banked
 44171   00BBDA  158D               	andwf	FLASH_Read@address& (0+255),w,b
 44172   00BBDC  6F8F               	movwf	??_FLASH_Read& (0+255),b
 44173   00BBDE  0EFF               	movlw	255
 44174   00BBE0  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 44175   00BBE2  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 44176   00BBE4  51D1               	movf	_flashBlock& (0+255),w,b
 44177   00BBE6  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 44178   00BBE8  E112               	bnz	l18919
 44179   00BBEA  51D2               	movf	(_flashBlock+1)& (0+255),w,b
 44180   00BBEC  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 44181   00BBEE  A4D8               	btfss	status,2,c
 44182   00BBF0  D00E               	goto	l18919
 44183                           
 44184                           ; BSR set to: 0
 44185                           ;../../VLCBlib_PIC/nvm.c: 299:         return flashBuffer[(address&(64 -1))];
 44186   00BBF2  0E3F               	movlw	63
 44187   00BBF4  158D               	andwf	FLASH_Read@address& (0+255),w,b
 44188   00BBF6  6F8F               	movwf	??_FLASH_Read& (0+255),b
 44189   00BBF8  0E00               	movlw	0
 44190   00BBFA  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 44191   00BBFC  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 44192   00BBFE  0E48               	movlw	low _flashBuffer
 44193   00BC00  258F               	addwf	??_FLASH_Read& (0+255),w,b
 44194   00BC02  6ED9               	movwf	fsr2l,c
 44195   00BC04  0E03               	movlw	high _flashBuffer
 44196   00BC06  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 44197   00BC08  6EDA               	movwf	fsr2h,c
 44198   00BC0A  50DF               	movf	indf2,w,c
 44199   00BC0C  0012               	return	
 44200   00BC0E                     l18919:
 44201                           
 44202                           ; BSR set to: 0
 44203                           ;../../VLCBlib_PIC/nvm.c: 303:         TBLPTR = address;
 44204   00BC0E  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 44205   00BC12  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 44206   00BC16  6AF8               	clrf	248,c	;volatile
 44207                           
 44208                           ; BSR set to: 0
 44209                           ;../../VLCBlib_PIC/nvm.c: 304:         TBLPTRU = 0;
 44210   00BC18  0E00               	movlw	0
 44211   00BC1A  6EF8               	movwf	248,c	;volatile
 44212   00BC1C  0008               	tblrd		*	;# 
 44213                           
 44214                           ;../../VLCBlib_PIC/nvm.c: 315:         return TABLAT;
 44215   00BC1E  50F5               	movf	245,w,c	;volatile
 44216   00BC20  0012               	return		;funcret
 44217   00BC22                     __end_of_FLASH_Read:
 44218                           	callstack 0
 44219                           
 44220 ;; *************** function _EEPROM_Read *****************
 44221 ;; Defined at:
 44222 ;;		line 171 in file "../../VLCBlib_PIC/nvm.c"
 44223 ;; Parameters:    Size  Location     Type
 44224 ;;  index           2   45[BANK0 ] unsigned short 
 44225 ;; Auto vars:     Size  Location     Type
 44226 ;;		None
 44227 ;; Return value:  Size  Location     Type
 44228 ;;                  1    wreg      unsigned char 
 44229 ;; Registers used:
 44230 ;;		wreg, status,2
 44231 ;; Tracked objects:
 44232 ;;		On entry : 0/0
 44233 ;;		On exit  : 0/0
 44234 ;;		Unchanged: 0/0
 44235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44236 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44239 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44240 ;;Total ram usage:        2 bytes
 44241 ;; Hardware stack levels used: 1
 44242 ;; Hardware stack levels required when called: 12
 44243 ;; This function calls:
 44244 ;;		Nothing
 44245 ;; This function is called by:
 44246 ;;		_EEPROM_Write
 44247 ;;		_readNVM
 44248 ;; This function uses a non-reentrant model
 44249 ;;
 44250                           
 44251                           	psect	text195
 44252   00C73A                     __ptext195:
 44253                           	callstack 0
 44254   00C73A                     _EEPROM_Read:
 44255                           	callstack 15
 44256                           
 44257                           ;../../VLCBlib_PIC/nvm.c: 174:     while (EECON1bits.WR)
 44258                           
 44259                           ;../../VLCBlib_PIC/nvm.c: 175:         ;
 44260                           
 44261                           ;incstack = 0
 44262   00C73A  B27F               	btfsc	127,1,c	;volsfr
 44263   00C73C  D7FE               	goto	__ptext195
 44264                           
 44265                           ;../../VLCBlib_PIC/nvm.c: 177:     EEADRH = (index >> 8)&0xFF;
 44266   00C73E  0100               	movlb	0	; () banked
 44267   00C740  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 44268   00C742  6E75               	movwf	117,c	;volatile
 44269                           
 44270                           ; BSR set to: 0
 44271                           ;../../VLCBlib_PIC/nvm.c: 178:     EEADR = index & 0xFF;
 44272   00C744  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 44273                           
 44274                           ; BSR set to: 0
 44275                           ;../../VLCBlib_PIC/nvm.c: 179:     EECON1bits.EEPGD = 0;
 44276   00C748  9E7F               	bcf	127,7,c	;volsfr
 44277                           
 44278                           ; BSR set to: 0
 44279                           ;../../VLCBlib_PIC/nvm.c: 180:     EECON1bits.CFGS = 0;
 44280   00C74A  9C7F               	bcf	127,6,c	;volsfr
 44281                           
 44282                           ; BSR set to: 0
 44283                           ;../../VLCBlib_PIC/nvm.c: 181:     EECON1bits.RD = 1;
 44284   00C74C  807F               	bsf	127,0,c	;volsfr
 44285   00C74E                     l2187:
 44286                           
 44287                           ;../../VLCBlib_PIC/nvm.c: 182:     while (EECON1bits.RD)
 44288   00C74E  B07F               	btfsc	127,0,c	;volsfr
 44289   00C750  D7FE               	goto	l2187
 44290   00C752  0000               	nop		;# 
 44291                           
 44292                           ;../../VLCBlib_PIC/nvm.c: 187:     return EEDATA;
 44293   00C754  5073               	movf	115,w,c	;volatile
 44294   00C756  0012               	return		;funcret
 44295   00C758                     __end_of_EEPROM_Read:
 44296                           	callstack 0
 44297                           
 44298 ;; *************** function _factoryResetGlobalEvents *****************
 44299 ;; Defined at:
 44300 ;;		line 100 in file "../universalEvents.c"
 44301 ;; Parameters:    Size  Location     Type
 44302 ;;		None
 44303 ;; Auto vars:     Size  Location     Type
 44304 ;;		None
 44305 ;; Return value:  Size  Location     Type
 44306 ;;                  1    wreg      void 
 44307 ;; Registers used:
 44308 ;;		None
 44309 ;; Tracked objects:
 44310 ;;		On entry : 0/0
 44311 ;;		On exit  : 0/0
 44312 ;;		Unchanged: 0/0
 44313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44318 ;;Total ram usage:        0 bytes
 44319 ;; Hardware stack levels used: 1
 44320 ;; Hardware stack levels required when called: 12
 44321 ;; This function calls:
 44322 ;;		Nothing
 44323 ;; This function is called by:
 44324 ;;		_APP_factoryReset
 44325 ;; This function uses a non-reentrant model
 44326 ;;
 44327                           
 44328                           	psect	text196
 44329   00C8EA                     __ptext196:
 44330                           	callstack 0
 44331   00C8EA                     _factoryResetGlobalEvents:
 44332                           	callstack 14
 44333                           
 44334                           ;incstack = 0
 44335   00C8EA  0012               	return		;funcret
 44336   00C8EC                     __end_of_factoryResetGlobalEvents:
 44337                           	callstack 0
 44338                           
 44339 ;; *************** function _APP_testMode *****************
 44340 ;; Defined at:
 44341 ;;		line 229 in file "../main.c"
 44342 ;; Parameters:    Size  Location     Type
 44343 ;;		None
 44344 ;; Auto vars:     Size  Location     Type
 44345 ;;		None
 44346 ;; Return value:  Size  Location     Type
 44347 ;;                  1    wreg      void 
 44348 ;; Registers used:
 44349 ;;		None
 44350 ;; Tracked objects:
 44351 ;;		On entry : 0/0
 44352 ;;		On exit  : 0/0
 44353 ;;		Unchanged: 0/0
 44354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44359 ;;Total ram usage:        0 bytes
 44360 ;; Hardware stack levels used: 1
 44361 ;; Hardware stack levels required when called: 12
 44362 ;; This function calls:
 44363 ;;		Nothing
 44364 ;; This function is called by:
 44365 ;;		_checkPowerOnPb
 44366 ;; This function uses a non-reentrant model
 44367 ;;
 44368                           
 44369                           	psect	text197
 44370   00C8EC                     __ptext197:
 44371                           	callstack 0
 44372   00C8EC                     _APP_testMode:
 44373                           	callstack 17
 44374                           
 44375                           ;incstack = 0
 44376   00C8EC  0012               	return		;funcret
 44377   00C8EE                     __end_of_APP_testMode:
 44378                           	callstack 0
 44379                           
 44380 ;; *************** function _isrLow *****************
 44381 ;; Defined at:
 44382 ;;		line 1332 in file "../../VLCBlib_PIC/vlcb.c"
 44383 ;; Parameters:    Size  Location     Type
 44384 ;;		None
 44385 ;; Auto vars:     Size  Location     Type
 44386 ;;		None
 44387 ;; Return value:  Size  Location     Type
 44388 ;;                  1    wreg      void 
 44389 ;; Registers used:
 44390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44391 ;; Tracked objects:
 44392 ;;		On entry : 0/0
 44393 ;;		On exit  : 0/0
 44394 ;;		Unchanged: 0/0
 44395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44398 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44399 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44400 ;;Total ram usage:       15 bytes
 44401 ;; Hardware stack levels used: 1
 44402 ;; Hardware stack levels required when called: 11
 44403 ;; This function calls:
 44404 ;;		_lowIsr
 44405 ;; This function is called by:
 44406 ;;		Interrupt level 1
 44407 ;; This function uses a non-reentrant model
 44408 ;;
 44409                           
 44410 ;; *************** function _isrHigh *****************
 44411 ;; Defined at:
 44412 ;;		line 1325 in file "../../VLCBlib_PIC/vlcb.c"
 44413 ;; Parameters:    Size  Location     Type
 44414 ;;		None
 44415 ;; Auto vars:     Size  Location     Type
 44416 ;;		None
 44417 ;; Return value:  Size  Location     Type
 44418 ;;                  1    wreg      void 
 44419 ;; Registers used:
 44420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44421 ;; Tracked objects:
 44422 ;;		On entry : 0/0
 44423 ;;		On exit  : 0/0
 44424 ;;		Unchanged: 0/0
 44425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44428 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44429 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44430 ;;Total ram usage:       12 bytes
 44431 ;; Hardware stack levels used: 1
 44432 ;; Hardware stack levels required when called: 5
 44433 ;; This function calls:
 44434 ;;		_highIsr
 44435 ;; This function is called by:
 44436 ;;		Interrupt level 2
 44437 ;; This function uses a non-reentrant model
 44438 ;;
 44439                           
 44440                           	psect	mainSec
 44441   00866C                     __pmainSec:
 44442                           	callstack 0
 44443   00866C                     _isrLow:
 44444                           	callstack 2
 44445                           
 44446                           ;incstack = 0
 44447   00866C  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 44448   00866E  CFD8 F07E          	movff	status,??_isrLow
 44449   008672  CFE8 F07F          	movff	wreg,??_isrLow+1
 44450   008676  CFE0 F080          	movff	bsr,??_isrLow+2
 44451   00867A  CFFA F081          	movff	pclath,??_isrLow+3
 44452   00867E  CFFB F082          	movff	pclatu,??_isrLow+4
 44453   008682  CFE1 F083          	movff	fsr1l,??_isrLow+5
 44454   008686  CFE2 F084          	movff	fsr1h,??_isrLow+6
 44455   00868A  CFD9 F085          	movff	fsr2l,??_isrLow+7
 44456   00868E  CFDA F086          	movff	fsr2h,??_isrLow+8
 44457   008692  CFF3 F087          	movff	prodl,??_isrLow+9
 44458   008696  CFF4 F088          	movff	prodh,??_isrLow+10
 44459   00869A  CFF6 F089          	movff	tblptrl,??_isrLow+11
 44460   00869E  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 44461   0086A2  CFF8 F08B          	movff	tblptru,??_isrLow+13
 44462   0086A6  CFF5 F08C          	movff	tablat,??_isrLow+14
 44463   0086AA                     
 44464                           ;../../VLCBlib_PIC/vlcb.c: 1333:     lowIsr();
 44465   0086AA  EC2D  F049         	call	_lowIsr	;wreg free
 44466   0086AE  C08C  FFF5         	movff	??_isrLow+14,tablat
 44467   0086B2  C08B  FFF8         	movff	??_isrLow+13,tblptru
 44468   0086B6  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 44469   0086BA  C089  FFF6         	movff	??_isrLow+11,tblptrl
 44470   0086BE  C088  FFF4         	movff	??_isrLow+10,prodh
 44471   0086C2  C087  FFF3         	movff	??_isrLow+9,prodl
 44472   0086C6  C086  FFDA         	movff	??_isrLow+8,fsr2h
 44473   0086CA  C085  FFD9         	movff	??_isrLow+7,fsr2l
 44474   0086CE  C084  FFE2         	movff	??_isrLow+6,fsr1h
 44475   0086D2  C083  FFE1         	movff	??_isrLow+5,fsr1l
 44476   0086D6  C082  FFFB         	movff	??_isrLow+4,pclatu
 44477   0086DA  C081  FFFA         	movff	??_isrLow+3,pclath
 44478   0086DE  C080  FFE0         	movff	??_isrLow+2,bsr
 44479   0086E2  C07F  FFE8         	movff	??_isrLow+1,wreg
 44480   0086E6  C07E  FFD8         	movff	??_isrLow,status
 44481   0086EA  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 44482   0086EC  0010               	retfie	
 44483   0086EE                     __end_of_isrLow:
 44484                           	callstack 0
 44485   0086EE                     _isrHigh:
 44486                           	callstack 2
 44487                           
 44488                           ;incstack = 0
 44489   0086EE  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 44490   0086F0  CFFA F049          	movff	pclath,??_isrHigh
 44491   0086F4  CFFB F04A          	movff	pclatu,??_isrHigh+1
 44492   0086F8  CFE1 F04B          	movff	fsr1l,??_isrHigh+2
 44493   0086FC  CFE2 F04C          	movff	fsr1h,??_isrHigh+3
 44494   008700  CFD9 F04D          	movff	fsr2l,??_isrHigh+4
 44495   008704  CFDA F04E          	movff	fsr2h,??_isrHigh+5
 44496   008708  CFF3 F04F          	movff	prodl,??_isrHigh+6
 44497   00870C  CFF4 F050          	movff	prodh,??_isrHigh+7
 44498   008710  CFF6 F051          	movff	tblptrl,??_isrHigh+8
 44499   008714  CFF7 F052          	movff	tblptrh,??_isrHigh+9
 44500   008718  CFF8 F053          	movff	tblptru,??_isrHigh+10
 44501   00871C  CFF5 F054          	movff	tablat,??_isrHigh+11
 44502   008720                     
 44503                           ;../../VLCBlib_PIC/vlcb.c: 1326:     highIsr();
 44504   008720  EC94  F049         	call	_highIsr	;wreg free
 44505   008724  C054  FFF5         	movff	??_isrHigh+11,tablat
 44506   008728  C053  FFF8         	movff	??_isrHigh+10,tblptru
 44507   00872C  C052  FFF7         	movff	??_isrHigh+9,tblptrh
 44508   008730  C051  FFF6         	movff	??_isrHigh+8,tblptrl
 44509   008734  C050  FFF4         	movff	??_isrHigh+7,prodh
 44510   008738  C04F  FFF3         	movff	??_isrHigh+6,prodl
 44511   00873C  C04E  FFDA         	movff	??_isrHigh+5,fsr2h
 44512   008740  C04D  FFD9         	movff	??_isrHigh+4,fsr2l
 44513   008744  C04C  FFE2         	movff	??_isrHigh+3,fsr1h
 44514   008748  C04B  FFE1         	movff	??_isrHigh+2,fsr1l
 44515   00874C  C04A  FFFB         	movff	??_isrHigh+1,pclatu
 44516   008750  C049  FFFA         	movff	??_isrHigh,pclath
 44517   008754  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 44518   008756  0011               	retfie		f
 44519   008758                     __end_of_isrHigh:
 44520                           	callstack 0
 44521                           
 44522                           	psect	intcodelo
 44523   000818                     __pintcodelo:
 44524                           	callstack 2
 44525   000818  EF36  F043         	goto	_isrLow
 44526                           
 44527 ;; *************** function _lowIsr *****************
 44528 ;; Defined at:
 44529 ;;		line 1077 in file "../../VLCBlib_PIC/vlcb.c"
 44530 ;; Parameters:    Size  Location     Type
 44531 ;;		None
 44532 ;; Auto vars:     Size  Location     Type
 44533 ;;  i               1   29[BANK0 ] unsigned char 
 44534 ;; Return value:  Size  Location     Type
 44535 ;;                  1    wreg      void 
 44536 ;; Registers used:
 44537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44538 ;; Tracked objects:
 44539 ;;		On entry : 0/0
 44540 ;;		On exit  : 0/0
 44541 ;;		Unchanged: 0/0
 44542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44545 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44546 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44547 ;;Total ram usage:        5 bytes
 44548 ;; Hardware stack levels used: 1
 44549 ;; Hardware stack levels required when called: 10
 44550 ;; This function calls:
 44551 ;;		NULL
 44552 ;;		_APP_lowIsr
 44553 ;;		_canIsr
 44554 ;;		_mnsLowIsr
 44555 ;; This function is called by:
 44556 ;;		_isrLow
 44557 ;; This function uses a non-reentrant model
 44558 ;;
 44559                           
 44560                           	psect	text199
 44561   00925A                     __ptext199:
 44562                           	callstack 0
 44563   00925A                     _lowIsr:
 44564                           	callstack 2
 44565                           
 44566                           ;../../VLCBlib_PIC/vlcb.c: 1078:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1080:     for 
      +                          (i=0; i<9; i++) {
 44567                           
 44568                           ;incstack = 0
 44569   00925A  0E00               	movlw	0
 44570   00925C  0100               	movlb	0	; () banked
 44571   00925E  6F7D               	movwf	lowIsr@i& (0+255),b
 44572   009260                     i1l25397:
 44573                           
 44574                           ; BSR set to: 0
 44575                           ;../../VLCBlib_PIC/vlcb.c: 1081:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 44576   009260  517D               	movf	lowIsr@i& (0+255),w,b
 44577   009262  0D02               	mullw	2
 44578   009264  0E69               	movlw	low _services
 44579   009266  24F3               	addwf	243,w,c
 44580   009268  6EF6               	movwf	tblptrl,c
 44581   00926A  0EEE               	movlw	high _services
 44582   00926C  20F4               	addwfc	244,w,c
 44583   00926E  6EF7               	movwf	tblptrh,c
 44584   009270                     	if	1	;There are 3 active tblptr bytes
 44585   009270  6AF8               	clrf	tblptru,c
 44586   009272  0E00               	movlw	low (__mediumconst shr (0+16))
 44587   009274  22F8               	addwfc	tblptru,f,c
 44588   009276                     	endif
 44589   009276  0009               	tblrd		*+
 44590   009278  50F5               	movf	tablat,w,c
 44591   00927A  0009               	tblrd		*+
 44592   00927C  10F5               	iorwf	tablat,w,c
 44593   00927E  B4D8               	btfsc	status,2,c
 44594   009280  D04B               	goto	i1u2741_29
 44595                           
 44596                           ; BSR set to: 0
 44597   009282  517D               	movf	lowIsr@i& (0+255),w,b
 44598   009284  0D02               	mullw	2
 44599   009286  0E69               	movlw	low _services
 44600   009288  24F3               	addwf	243,w,c
 44601   00928A  6EF6               	movwf	tblptrl,c
 44602   00928C  0EEE               	movlw	high _services
 44603   00928E  20F4               	addwfc	244,w,c
 44604   009290  6EF7               	movwf	tblptrh,c
 44605   009292                     	if	1	;There are 3 active tblptr bytes
 44606   009292  6AF8               	clrf	tblptru,c
 44607   009294  0E00               	movlw	low (__mediumconst shr (0+16))
 44608   009296  22F8               	addwfc	tblptru,f,c
 44609   009298                     	endif
 44610   009298  0009               	tblrd		*+
 44611   00929A  CFF5 F079          	movff	tablat,??_lowIsr
 44612   00929E  0009               	tblrd		*+
 44613   0092A0  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44614   0092A4  0E0C               	movlw	12
 44615   0092A6  2779               	addwf	??_lowIsr& (0+255),f,b
 44616   0092A8  0E00               	movlw	0
 44617   0092AA  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44618   0092AC  C079  FFF6         	movff	??_lowIsr,tblptrl
 44619   0092B0  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44620   0092B4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44621   0092B4  6AF8               	clrf	tblptru,c
 44622   0092B6                     	endif
 44623   0092B6                     	if	0	;tblptru may be non-zero
 44624   0092B6                     	endif
 44625   0092B6  0009               	tblrd		*+
 44626   0092B8  50F5               	movf	tablat,w,c
 44627   0092BA  0009               	tblrd		*+
 44628   0092BC  10F5               	iorwf	tablat,w,c
 44629   0092BE  B4D8               	btfsc	status,2,c
 44630   0092C0  D02B               	goto	i1u2741_29
 44631                           
 44632                           ; BSR set to: 0
 44633                           ;../../VLCBlib_PIC/vlcb.c: 1082:             services[i]->lowIsr();
 44634   0092C2  517D               	movf	lowIsr@i& (0+255),w,b
 44635   0092C4  0D02               	mullw	2
 44636   0092C6  0E69               	movlw	low _services
 44637   0092C8  24F3               	addwf	243,w,c
 44638   0092CA  6EF6               	movwf	tblptrl,c
 44639   0092CC  0EEE               	movlw	high _services
 44640   0092CE  20F4               	addwfc	244,w,c
 44641   0092D0  6EF7               	movwf	tblptrh,c
 44642   0092D2                     	if	1	;There are 3 active tblptr bytes
 44643   0092D2  6AF8               	clrf	tblptru,c
 44644   0092D4  0E00               	movlw	low (__mediumconst shr (0+16))
 44645   0092D6  22F8               	addwfc	tblptru,f,c
 44646   0092D8                     	endif
 44647   0092D8  0009               	tblrd		*+
 44648   0092DA  CFF5 F079          	movff	tablat,??_lowIsr
 44649   0092DE  0009               	tblrd		*+
 44650   0092E0  CFF5 F07A          	movff	tablat,??_lowIsr+1
 44651   0092E4  0E0C               	movlw	12
 44652   0092E6  2779               	addwf	??_lowIsr& (0+255),f,b
 44653   0092E8  0E00               	movlw	0
 44654   0092EA  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 44655   0092EC  C079  FFF6         	movff	??_lowIsr,tblptrl
 44656   0092F0  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 44657   0092F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44658   0092F4  6AF8               	clrf	tblptru,c
 44659   0092F6                     	endif
 44660   0092F6                     	if	0	;tblptru may be non-zero
 44661   0092F6                     	endif
 44662   0092F6  0009               	tblrd		*+
 44663   0092F8  CFF5 F07B          	movff	tablat,??_lowIsr+2
 44664   0092FC  0009               	tblrd		*+
 44665   0092FE  CFF5 F07C          	movff	tablat,??_lowIsr+3
 44666   009302  D801               	call	i1u2741_28
 44667   009304  D009               	goto	i1u2741_29
 44668   009306                     i1u2741_28:
 44669   009306  0005               	push	
 44670   009308  6EFA               	movwf	pclath,c
 44671   00930A  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 44672   00930C  6EFD               	movwf	tosl,c
 44673   00930E  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 44674   009310  6EFE               	movwf	tosh,c
 44675   009312  6AFF               	clrf	tosu,c
 44676   009314  50FA               	movf	pclath,w,c
 44677   009316  0012               	return		;indir
 44678   009318                     i1u2741_29:
 44679                           
 44680                           ;../../VLCBlib_PIC/vlcb.c: 1084:     }
 44681   009318  0100               	movlb	0	; () banked
 44682   00931A  2B7D               	incf	lowIsr@i& (0+255),f,b
 44683                           
 44684                           ; BSR set to: 0
 44685   00931C  0E08               	movlw	8
 44686   00931E  657D               	cpfsgt	lowIsr@i& (0+255),b
 44687   009320  D79F               	goto	i1l25397
 44688                           
 44689                           ; BSR set to: 0
 44690                           ;../../VLCBlib_PIC/vlcb.c: 1085:     APP_lowIsr();
 44691   009322  EC77  F064         	call	_APP_lowIsr	;wreg free
 44692   009326  0012               	return		;funcret
 44693   009328                     __end_of_lowIsr:
 44694                           	callstack 0
 44695                           
 44696 ;; *************** function _canIsr *****************
 44697 ;; Defined at:
 44698 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 44699 ;; Parameters:    Size  Location     Type
 44700 ;;		None
 44701 ;; Auto vars:     Size  Location     Type
 44702 ;;		None
 44703 ;; Return value:  Size  Location     Type
 44704 ;;                  1    wreg      void 
 44705 ;; Registers used:
 44706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44707 ;; Tracked objects:
 44708 ;;		On entry : 0/0
 44709 ;;		On exit  : 0/0
 44710 ;;		Unchanged: 0/0
 44711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44716 ;;Total ram usage:        0 bytes
 44717 ;; Hardware stack levels used: 1
 44718 ;; Hardware stack levels required when called: 9
 44719 ;; This function calls:
 44720 ;;		_canFillRxFifo
 44721 ;;		_canTxError
 44722 ;;		_checkCANTimeout
 44723 ;;		_checkTxFifo
 44724 ;; This function is called by:
 44725 ;;		_highIsr
 44726 ;;		_lowIsr
 44727 ;; This function uses a non-reentrant model
 44728 ;;
 44729                           
 44730                           	psect	text200
 44731   00C6FC                     __ptext200:
 44732                           	callstack 0
 44733   00C6FC                     _canIsr:
 44734                           	callstack 0
 44735                           
 44736                           ;Skip over the trampoline to the duplicate function for level 2
 44737   00C6FC  A255               	btfss	btemp,1,c
 44738   00C6FE  D002               	goto	_canIsr$intlevel1
 44739   00C700  EFEC  F063         	goto	i2_canIsr
 44740   00C704                     _canIsr$intlevel1:
 44741                           	callstack 2
 44742                           
 44743                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 44744                           
 44745                           ;incstack = 0
 44746   00C704  B077               	btfsc	119,0,c	;volatile
 44747                           
 44748                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 44749   00C706  EC2E  F03A         	call	_canFillRxFifo	;wreg free
 44750                           
 44751                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 44752   00C70A  BA77               	btfsc	119,5,c	;volatile
 44753                           
 44754                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 44755   00C70C  EC7D  F05A         	call	_canTxError	;wreg free
 44756                           
 44757                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 44758   00C710  B877               	btfsc	119,4,c	;volatile
 44759                           
 44760                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 44761   00C712  ECFF  F029         	call	_checkTxFifo	;wreg free
 44762                           
 44763                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 44764                           
 44765                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 44766   00C716  ECFC  F05C         	call	_checkCANTimeout	;wreg free
 44767   00C71A  0012               	return		;funcret
 44768   00C71C                     __end_of_canIsr:
 44769                           	callstack 0
 44770                           
 44771 ;; *************** function _mnsLowIsr *****************
 44772 ;; Defined at:
 44773 ;;		line 764 in file "../../VLCBlib_PIC/mns.c"
 44774 ;; Parameters:    Size  Location     Type
 44775 ;;		None
 44776 ;; Auto vars:     Size  Location     Type
 44777 ;;		None
 44778 ;; Return value:  Size  Location     Type
 44779 ;;                  1    wreg      void 
 44780 ;; Registers used:
 44781 ;;		wreg, status,2, status,0
 44782 ;; Tracked objects:
 44783 ;;		On entry : 0/0
 44784 ;;		On exit  : 0/0
 44785 ;;		Unchanged: 0/0
 44786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44791 ;;Total ram usage:        0 bytes
 44792 ;; Hardware stack levels used: 1
 44793 ;; Hardware stack levels required when called: 6
 44794 ;; This function calls:
 44795 ;;		Nothing
 44796 ;; This function is called by:
 44797 ;;		_lowIsr
 44798 ;; This function uses a non-reentrant model
 44799 ;;
 44800                           
 44801                           	psect	text201
 44802   00C81A                     __ptext201:
 44803                           	callstack 0
 44804   00C81A                     _mnsLowIsr:
 44805                           	callstack 5
 44806                           
 44807                           ;../../VLCBlib_PIC/mns.c: 767:     if(INTCONbits.TMR0IF) {
 44808                           
 44809                           ;incstack = 0
 44810   00C81A  A4F2               	btfss	242,2,c	;volatile
 44811   00C81C  0012               	return	
 44812                           
 44813                           ;../../VLCBlib_PIC/mns.c: 769:         INTCONbits.TMR0IF = 0;
 44814   00C81E  94F2               	bcf	242,2,c	;volatile
 44815                           
 44816                           ;../../VLCBlib_PIC/mns.c: 770:         timerExtension1++;
 44817   00C820  0100               	movlb	0	; () banked
 44818   00C822  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 44819                           
 44820                           ; BSR set to: 0
 44821                           ;../../VLCBlib_PIC/mns.c: 771:         if(timerExtension1 == 0) {
 44822   00C824  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 44823   00C826  A4D8               	btfss	status,2,c
 44824   00C828  0012               	return	
 44825                           
 44826                           ; BSR set to: 0
 44827                           ;../../VLCBlib_PIC/mns.c: 772:             timerExtension2++;
 44828   00C82A  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 44829   00C82C  0012               	return		;funcret
 44830   00C82E                     __end_of_mnsLowIsr:
 44831                           	callstack 0
 44832                           
 44833 ;; *************** function _checkCANTimeout *****************
 44834 ;; Defined at:
 44835 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 44836 ;; Parameters:    Size  Location     Type
 44837 ;;		None
 44838 ;; Auto vars:     Size  Location     Type
 44839 ;;		None
 44840 ;; Return value:  Size  Location     Type
 44841 ;;                  1    wreg      void 
 44842 ;; Registers used:
 44843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44844 ;; Tracked objects:
 44845 ;;		On entry : 0/0
 44846 ;;		On exit  : 0/0
 44847 ;;		Unchanged: 0/0
 44848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44851 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44852 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44853 ;;Total ram usage:        4 bytes
 44854 ;; Hardware stack levels used: 1
 44855 ;; Hardware stack levels required when called: 8
 44856 ;; This function calls:
 44857 ;;		_checkTxFifo
 44858 ;;		i1_tickGet
 44859 ;;		i1_updateModuleErrorStatus
 44860 ;; This function is called by:
 44861 ;;		_canIsr
 44862 ;; This function uses a non-reentrant model
 44863 ;;
 44864                           
 44865                           	psect	text202
 44866   00B9F8                     __ptext202:
 44867                           	callstack 0
 44868   00B9F8                     _checkCANTimeout:
 44869                           	callstack 2
 44870                           
 44871                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 44872                           
 44873                           ;incstack = 0
 44874   00B9F8  5015               	movf	_canTransmitTimeout^0,w,c
 44875   00B9FA  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 44876   00B9FC  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 44877   00B9FE  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 44878   00BA00  B4D8               	btfsc	status,2,c
 44879   00BA02  0012               	return	
 44880                           
 44881                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 44882   00BA04  EC7B  F05C         	call	i1_tickGet	;wreg free
 44883   00BA08  5015               	movf	_canTransmitTimeout^0,w,c
 44884   00BA0A  0100               	movlb	0	; () banked
 44885   00BA0C  5D60               	subwf	?i1_tickGet& (0+255),w,b
 44886   00BA0E  6F75               	movwf	??_checkCANTimeout& (0+255),b
 44887   00BA10  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 44888   00BA12  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 44889   00BA14  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 44890   00BA16  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 44891   00BA18  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 44892   00BA1A  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 44893   00BA1C  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 44894   00BA1E  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 44895   00BA20  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 44896   00BA22  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 44897   00BA24  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 44898   00BA26  E106               	bnz	i1u2375_20
 44899   00BA28  0E25               	movlw	37
 44900   00BA2A  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 44901   00BA2C  0EF4               	movlw	244
 44902   00BA2E  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 44903   00BA30  A0D8               	btfss	status,0,c
 44904   00BA32  0012               	return	
 44905   00BA34                     i1u2375_20:
 44906                           
 44907                           ; BSR set to: 0
 44908                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 44909   00BA34  0E01               	movlw	1
 44910   00BA36  6FB8               	movwf	_canTransmitFailed& (0+255),b
 44911                           
 44912                           ; BSR set to: 0
 44913                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 44914   00BA38  010F               	movlb	15	; () banked
 44915   00BA3A  9720               	bcf	32,3,b	;volatile
 44916                           
 44917                           ; BSR set to: 15
 44918                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 44919   00BA3C  ECFF  F029         	call	_checkTxFifo	;wreg free
 44920                           
 44921                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 44922   00BA40  0101               	movlb	1	; () banked
 44923   00BA42  4B6A               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44924   00BA44  2B6B               	incf	(_canDiagnostics+5)& (0+255),f,b
 44925                           
 44926                           ; BSR set to: 1
 44927                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 44928   00BA46  EC3F  F064         	call	i1_updateModuleErrorStatus	;wreg free
 44929   00BA4A  0012               	return		;funcret
 44930   00BA4C                     __end_of_checkCANTimeout:
 44931                           	callstack 0
 44932                           
 44933 ;; *************** function _canTxError *****************
 44934 ;; Defined at:
 44935 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 44936 ;; Parameters:    Size  Location     Type
 44937 ;;		None
 44938 ;; Auto vars:     Size  Location     Type
 44939 ;;		None
 44940 ;; Return value:  Size  Location     Type
 44941 ;;                  1    wreg      void 
 44942 ;; Registers used:
 44943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44944 ;; Tracked objects:
 44945 ;;		On entry : 0/0
 44946 ;;		On exit  : 0/0
 44947 ;;		Unchanged: 0/0
 44948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44953 ;;Total ram usage:        0 bytes
 44954 ;; Hardware stack levels used: 1
 44955 ;; Hardware stack levels required when called: 8
 44956 ;; This function calls:
 44957 ;;		_checkTxFifo
 44958 ;;		i1_updateModuleErrorStatus
 44959 ;; This function is called by:
 44960 ;;		_canIsr
 44961 ;; This function uses a non-reentrant model
 44962 ;;
 44963                           
 44964                           	psect	text203
 44965   00B4FA                     __ptext203:
 44966                           	callstack 0
 44967   00B4FA                     _canTxError:
 44968                           	callstack 2
 44969                           
 44970                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 44971                           
 44972                           ;incstack = 0
 44973   00B4FA  010F               	movlb	15	; () banked
 44974   00B4FC  AB20               	btfss	32,5,b	;volatile
 44975   00B4FE  D012               	goto	i1l22661
 44976                           
 44977                           ; BSR set to: 15
 44978                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 44979   00B500  0E01               	movlw	1
 44980   00B502  0100               	movlb	0	; () banked
 44981   00B504  6FB8               	movwf	_canTransmitFailed& (0+255),b
 44982                           
 44983                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 44984   00B506  0E00               	movlw	0
 44985   00B508  6E15               	movwf	_canTransmitTimeout^0,c
 44986   00B50A  0E00               	movlw	0
 44987   00B50C  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 44988   00B50E  0E00               	movlw	0
 44989   00B510  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 44990   00B512  0E00               	movlw	0
 44991   00B514  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 44992                           
 44993                           ; BSR set to: 0
 44994                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 44995   00B516  010F               	movlb	15	; () banked
 44996   00B518  9720               	bcf	32,3,b	;volatile
 44997                           
 44998                           ; BSR set to: 15
 44999                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 45000   00B51A  0101               	movlb	1	; () banked
 45001   00B51C  4B7E               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 45002   00B51E  2B7F               	incf	(_canDiagnostics+25)& (0+255),f,b
 45003                           
 45004                           ; BSR set to: 1
 45005                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 45006   00B520  EC3F  F064         	call	i1_updateModuleErrorStatus	;wreg free
 45007   00B524                     i1l22661:
 45008                           
 45009                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 45010   00B524  010F               	movlb	15	; () banked
 45011   00B526  A920               	btfss	32,4,b	;volatile
 45012   00B528  D012               	goto	i1l22671
 45013                           
 45014                           ; BSR set to: 15
 45015                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 45016   00B52A  0E01               	movlw	1
 45017   00B52C  0100               	movlb	0	; () banked
 45018   00B52E  6FB8               	movwf	_canTransmitFailed& (0+255),b
 45019                           
 45020                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 45021   00B530  0E00               	movlw	0
 45022   00B532  6E15               	movwf	_canTransmitTimeout^0,c
 45023   00B534  0E00               	movlw	0
 45024   00B536  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45025   00B538  0E00               	movlw	0
 45026   00B53A  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45027   00B53C  0E00               	movlw	0
 45028   00B53E  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45029                           
 45030                           ; BSR set to: 0
 45031                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 45032   00B540  010F               	movlb	15	; () banked
 45033   00B542  9720               	bcf	32,3,b	;volatile
 45034                           
 45035                           ; BSR set to: 15
 45036                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 45037   00B544  0101               	movlb	1	; () banked
 45038   00B546  4B6A               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 45039   00B548  2B6B               	incf	(_canDiagnostics+5)& (0+255),f,b
 45040                           
 45041                           ; BSR set to: 1
 45042                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 45043   00B54A  EC3F  F064         	call	i1_updateModuleErrorStatus	;wreg free
 45044   00B54E                     i1l22671:
 45045                           
 45046                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 45047   00B54E  0100               	movlb	0	; () banked
 45048   00B550  51B8               	movf	_canTransmitFailed& (0+255),w,b
 45049   00B552  A4D8               	btfss	status,2,c
 45050                           
 45051                           ; BSR set to: 0
 45052                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 45053   00B554  ECFF  F029         	call	_checkTxFifo	;wreg free
 45054                           
 45055                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 45056   00B558  9A77               	bcf	119,5,c	;volatile
 45057   00B55A  0012               	return		;funcret
 45058   00B55C                     __end_of_canTxError:
 45059                           	callstack 0
 45060                           
 45061 ;; *************** function _checkTxFifo *****************
 45062 ;; Defined at:
 45063 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 45064 ;; Parameters:    Size  Location     Type
 45065 ;;		None
 45066 ;; Auto vars:     Size  Location     Type
 45067 ;;  mp              2   19[BANK0 ] PTR struct Message
 45068 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45069 ;;  m               2   17[BANK0 ] PTR struct Message
 45070 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45071 ;; Return value:  Size  Location     Type
 45072 ;;                  1    wreg      void 
 45073 ;; Registers used:
 45074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45075 ;; Tracked objects:
 45076 ;;		On entry : 0/0
 45077 ;;		On exit  : 0/0
 45078 ;;		Unchanged: 0/0
 45079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45081 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45082 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45083 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45084 ;;Total ram usage:        9 bytes
 45085 ;; Hardware stack levels used: 1
 45086 ;; Hardware stack levels required when called: 7
 45087 ;; This function calls:
 45088 ;;		i1_getNextWriteMessage
 45089 ;;		i1_isEvent
 45090 ;;		i1_pop
 45091 ;;		i1_tickGet
 45092 ;;		i1_updateModuleErrorStatus
 45093 ;; This function is called by:
 45094 ;;		_canIsr
 45095 ;;		_checkCANTimeout
 45096 ;;		_canTxError
 45097 ;; This function uses a non-reentrant model
 45098 ;;
 45099                           
 45100                           	psect	text204
 45101   0053FE                     __ptext204:
 45102                           	callstack 0
 45103   0053FE                     _checkTxFifo:
 45104                           	callstack 3
 45105                           
 45106                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 45107                           
 45108                           ;incstack = 0
 45109   0053FE  9877               	bcf	119,4,c	;volatile
 45110                           
 45111                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 45112   005400  010F               	movlb	15	; () banked
 45113   005402  B720               	btfsc	32,3,b	;volatile
 45114   005404  D15A               	goto	i1l2561
 45115                           
 45116                           ; BSR set to: 15
 45117                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 45118   005406  0EA9               	movlw	low _txQueue
 45119   005408  0100               	movlb	0	; () banked
 45120   00540A  6F60               	movwf	i1pop@q& (0+255),b
 45121   00540C  0E01               	movlw	high _txQueue
 45122   00540E  6F61               	movwf	(i1pop@q+1)& (0+255),b
 45123   005410  EC51  F04F         	call	i1_pop	;wreg free
 45124   005414  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 45125   005418  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 45126                           
 45127                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 45128   00541C  0100               	movlb	0	; () banked
 45129   00541E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45130   005420  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 45131   005422  B4D8               	btfsc	status,2,c
 45132   005424  D13C               	goto	i1l21429
 45133                           
 45134                           ; BSR set to: 0
 45135                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45136   005426  EE20 F001          	lfsr	2,1
 45137   00542A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45138   00542C  26D9               	addwf	fsr2l,f,c
 45139   00542E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45140   005430  22DA               	addwfc	fsr2h,f,c
 45141   005432  50DF               	movf	indf2,w,c
 45142   005434  6F6C               	movwf	??_checkTxFifo& (0+255),b
 45143   005436  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 45144   005438  0E29               	movlw	low _priorities
 45145   00543A  256C               	addwf	??_checkTxFifo& (0+255),w,b
 45146   00543C  6EF6               	movwf	tblptrl,c
 45147   00543E  0EED               	movlw	high _priorities
 45148   005440  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 45149   005442  6EF7               	movwf	tblptrh,c
 45150   005444                     	if	1	;There are 3 active tblptr bytes
 45151   005444  6AF8               	clrf	tblptru,c
 45152   005446  0E00               	movlw	low (__mediumconst shr (0+16))
 45153   005448  22F8               	addwfc	tblptru,f,c
 45154   00544A                     	endif
 45155   00544A  0008               	tblrd		*
 45156   00544C  50F5               	movf	tablat,w,c
 45157   00544E  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 45158   005450  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 45159   005452  0E86               	movlw	low _canPri
 45160   005454  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 45161   005456  6EF6               	movwf	tblptrl,c
 45162   005458  0EEE               	movlw	high _canPri
 45163   00545A  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 45164   00545C  6EF7               	movwf	tblptrh,c
 45165   00545E                     	if	1	;There are 3 active tblptr bytes
 45166   00545E  6AF8               	clrf	tblptru,c
 45167   005460  0E00               	movlw	low (__mediumconst shr (0+16))
 45168   005462  22F8               	addwfc	tblptru,f,c
 45169   005464                     	endif
 45170   005464  0008               	tblrd		*
 45171   005466  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 45172   00546A  39B9               	swapf	_canId& (0+255),w,b
 45173   00546C  46E8               	rlncf	wreg,f,c
 45174   00546E  0B1F               	andlw	31
 45175   005470  0B0F               	andlw	15
 45176   005472  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 45177   005474  010F               	movlb	15	; () banked
 45178   005476  6F21               	movwf	33,b	;volatile
 45179                           
 45180                           ; BSR set to: 15
 45181                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45182   005478  C0B9  F06C         	movff	_canId,??_checkTxFifo
 45183   00547C  0E07               	movlw	7
 45184   00547E  0100               	movlb	0	; () banked
 45185   005480  176C               	andwf	??_checkTxFifo& (0+255),f,b
 45186   005482  0E05               	movlw	5
 45187   005484  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 45188   005486                     i1u2199_25:
 45189   005486  90D8               	bcf	status,0,c
 45190   005488  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 45191   00548A  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 45192   00548C  D7FC               	goto	i1u2199_25
 45193   00548E  516C               	movf	??_checkTxFifo& (0+255),w,b
 45194   005490  010F               	movlb	15	; () banked
 45195   005492  6F22               	movwf	34,b	;volatile
 45196                           
 45197                           ; BSR set to: 15
 45198                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 45199   005494  0100               	movlb	0	; () banked
 45200   005496  EE20 F001          	lfsr	2,1
 45201   00549A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45202   00549C  26D9               	addwf	fsr2l,f,c
 45203   00549E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45204   0054A0  22DA               	addwfc	fsr2h,f,c
 45205   0054A2  50DF               	movf	indf2,w,c
 45206   0054A4  010F               	movlb	15	; () banked
 45207   0054A6  6F26               	movwf	38,b	;volatile
 45208                           
 45209                           ; BSR set to: 15
 45210                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 45211   0054A8  0100               	movlb	0	; () banked
 45212   0054AA  EE20 F002          	lfsr	2,2
 45213   0054AE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45214   0054B0  26D9               	addwf	fsr2l,f,c
 45215   0054B2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45216   0054B4  22DA               	addwfc	fsr2h,f,c
 45217   0054B6  50DF               	movf	indf2,w,c
 45218   0054B8  010F               	movlb	15	; () banked
 45219   0054BA  6F27               	movwf	39,b	;volatile
 45220                           
 45221                           ; BSR set to: 15
 45222                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 45223   0054BC  0100               	movlb	0	; () banked
 45224   0054BE  EE20 F003          	lfsr	2,3
 45225   0054C2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45226   0054C4  26D9               	addwf	fsr2l,f,c
 45227   0054C6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45228   0054C8  22DA               	addwfc	fsr2h,f,c
 45229   0054CA  50DF               	movf	indf2,w,c
 45230   0054CC  010F               	movlb	15	; () banked
 45231   0054CE  6F28               	movwf	40,b	;volatile
 45232                           
 45233                           ; BSR set to: 15
 45234                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 45235   0054D0  0100               	movlb	0	; () banked
 45236   0054D2  EE20 F004          	lfsr	2,4
 45237   0054D6  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45238   0054D8  26D9               	addwf	fsr2l,f,c
 45239   0054DA  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45240   0054DC  22DA               	addwfc	fsr2h,f,c
 45241   0054DE  50DF               	movf	indf2,w,c
 45242   0054E0  010F               	movlb	15	; () banked
 45243   0054E2  6F29               	movwf	41,b	;volatile
 45244                           
 45245                           ; BSR set to: 15
 45246                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 45247   0054E4  0100               	movlb	0	; () banked
 45248   0054E6  EE20 F005          	lfsr	2,5
 45249   0054EA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45250   0054EC  26D9               	addwf	fsr2l,f,c
 45251   0054EE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45252   0054F0  22DA               	addwfc	fsr2h,f,c
 45253   0054F2  50DF               	movf	indf2,w,c
 45254   0054F4  010F               	movlb	15	; () banked
 45255   0054F6  6F2A               	movwf	42,b	;volatile
 45256                           
 45257                           ; BSR set to: 15
 45258                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 45259   0054F8  0100               	movlb	0	; () banked
 45260   0054FA  EE20 F006          	lfsr	2,6
 45261   0054FE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45262   005500  26D9               	addwf	fsr2l,f,c
 45263   005502  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45264   005504  22DA               	addwfc	fsr2h,f,c
 45265   005506  50DF               	movf	indf2,w,c
 45266   005508  010F               	movlb	15	; () banked
 45267   00550A  6F2B               	movwf	43,b	;volatile
 45268                           
 45269                           ; BSR set to: 15
 45270                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 45271   00550C  0100               	movlb	0	; () banked
 45272   00550E  EE20 F007          	lfsr	2,7
 45273   005512  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45274   005514  26D9               	addwf	fsr2l,f,c
 45275   005516  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45276   005518  22DA               	addwfc	fsr2h,f,c
 45277   00551A  50DF               	movf	indf2,w,c
 45278   00551C  010F               	movlb	15	; () banked
 45279   00551E  6F2C               	movwf	44,b	;volatile
 45280                           
 45281                           ; BSR set to: 15
 45282                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 45283   005520  0100               	movlb	0	; () banked
 45284   005522  EE20 F008          	lfsr	2,8
 45285   005526  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45286   005528  26D9               	addwf	fsr2l,f,c
 45287   00552A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45288   00552C  22DA               	addwfc	fsr2h,f,c
 45289   00552E  50DF               	movf	indf2,w,c
 45290   005530  010F               	movlb	15	; () banked
 45291   005532  6F2D               	movwf	45,b	;volatile
 45292                           
 45293                           ; BSR set to: 15
 45294                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 45295   005534  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 45296   005538  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 45297   00553C  50DF               	movf	indf2,w,c
 45298   00553E  6F25               	movwf	37,b	;volatile
 45299                           
 45300                           ; BSR set to: 15
 45301                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 45302   005540  EC7B  F05C         	call	i1_tickGet	;wreg free
 45303   005544  C060  F015         	movff	?i1_tickGet,_canTransmitTimeout
 45304   005548  C061  F016         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 45305   00554C  C062  F017         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 45306   005550  C063  F018         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 45307                           
 45308                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 45309   005554  0E00               	movlw	0
 45310   005556  0100               	movlb	0	; () banked
 45311   005558  6FB8               	movwf	_canTransmitFailed& (0+255),b
 45312                           
 45313                           ; BSR set to: 0
 45314                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 45315   00555A  010F               	movlb	15	; () banked
 45316   00555C  8720               	bsf	32,3,b	;volatile
 45317                           
 45318                           ; BSR set to: 15
 45319                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 45320   00555E  8876               	bsf	118,4,c	;volatile
 45321                           
 45322                           ; BSR set to: 15
 45323                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 45324   005560  0101               	movlb	1	; () banked
 45325   005562  4B72               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 45326   005564  2B73               	incf	(_canDiagnostics+13)& (0+255),f,b
 45327                           
 45328                           ; BSR set to: 1
 45329                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 45330   005566  0100               	movlb	0	; () banked
 45331   005568  EE20 F001          	lfsr	2,1
 45332   00556C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45333   00556E  26D9               	addwf	fsr2l,f,c
 45334   005570  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45335   005572  22DA               	addwfc	fsr2h,f,c
 45336   005574  50DF               	movf	indf2,w,c
 45337   005576  ECA7  F062         	call	i1_isEvent
 45338   00557A  0900               	iorlw	0
 45339   00557C  B4D8               	btfsc	status,2,c
 45340   00557E  0012               	return	
 45341                           
 45342                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 45343   005580  0E26               	movlw	low _rxQueue
 45344   005582  0100               	movlb	0	; () banked
 45345   005584  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 45346   005586  EC8D  F047         	call	i1_getNextWriteMessage	;wreg free
 45347   00558A  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 45348   00558E  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 45349                           
 45350                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 45351   005592  0100               	movlb	0	; () banked
 45352   005594  5171               	movf	checkTxFifo@m& (0+255),w,b
 45353   005596  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 45354   005598  A4D8               	btfss	status,2,c
 45355   00559A  D006               	goto	i1l21411
 45356                           
 45357                           ; BSR set to: 0
 45358                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 45359   00559C  0101               	movlb	1	; () banked
 45360   00559E  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 45361   0055A0  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 45362                           
 45363                           ; BSR set to: 1
 45364                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 45365   0055A2  EC3F  F064         	call	i1_updateModuleErrorStatus	;wreg free
 45366                           
 45367                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 45368   0055A6  0012               	return	
 45369   0055A8                     i1l21411:
 45370                           
 45371                           ; BSR set to: 0
 45372                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 45373   0055A8  EE20 F001          	lfsr	2,1
 45374   0055AC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45375   0055AE  26D9               	addwf	fsr2l,f,c
 45376   0055B0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45377   0055B2  22DA               	addwfc	fsr2h,f,c
 45378   0055B4  EE10 F001          	lfsr	1,1
 45379   0055B8  5171               	movf	checkTxFifo@m& (0+255),w,b
 45380   0055BA  26E1               	addwf	fsr1l,f,c
 45381   0055BC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45382   0055BE  22E2               	addwfc	fsr1h,f,c
 45383   0055C0  CFDF FFE7          	movff	indf2,indf1
 45384                           
 45385                           ; BSR set to: 0
 45386                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 45387   0055C4  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 45388   0055C8  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 45389   0055CC  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 45390   0055D0  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 45391   0055D4  CFDF FFE7          	movff	indf2,indf1
 45392                           
 45393                           ; BSR set to: 0
 45394                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 45395   0055D8  EE20 F002          	lfsr	2,2
 45396   0055DC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45397   0055DE  26D9               	addwf	fsr2l,f,c
 45398   0055E0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45399   0055E2  22DA               	addwfc	fsr2h,f,c
 45400   0055E4  EE10 F002          	lfsr	1,2
 45401   0055E8  5171               	movf	checkTxFifo@m& (0+255),w,b
 45402   0055EA  26E1               	addwf	fsr1l,f,c
 45403   0055EC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45404   0055EE  22E2               	addwfc	fsr1h,f,c
 45405   0055F0  CFDF FFE7          	movff	indf2,indf1
 45406                           
 45407                           ; BSR set to: 0
 45408                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 45409   0055F4  EE20 F003          	lfsr	2,3
 45410   0055F8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45411   0055FA  26D9               	addwf	fsr2l,f,c
 45412   0055FC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45413   0055FE  22DA               	addwfc	fsr2h,f,c
 45414   005600  EE10 F003          	lfsr	1,3
 45415   005604  5171               	movf	checkTxFifo@m& (0+255),w,b
 45416   005606  26E1               	addwf	fsr1l,f,c
 45417   005608  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45418   00560A  22E2               	addwfc	fsr1h,f,c
 45419   00560C  CFDF FFE7          	movff	indf2,indf1
 45420                           
 45421                           ; BSR set to: 0
 45422                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 45423   005610  EE20 F004          	lfsr	2,4
 45424   005614  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45425   005616  26D9               	addwf	fsr2l,f,c
 45426   005618  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45427   00561A  22DA               	addwfc	fsr2h,f,c
 45428   00561C  EE10 F004          	lfsr	1,4
 45429   005620  5171               	movf	checkTxFifo@m& (0+255),w,b
 45430   005622  26E1               	addwf	fsr1l,f,c
 45431   005624  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45432   005626  22E2               	addwfc	fsr1h,f,c
 45433   005628  CFDF FFE7          	movff	indf2,indf1
 45434                           
 45435                           ; BSR set to: 0
 45436                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 45437   00562C  EE20 F005          	lfsr	2,5
 45438   005630  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45439   005632  26D9               	addwf	fsr2l,f,c
 45440   005634  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45441   005636  22DA               	addwfc	fsr2h,f,c
 45442   005638  EE10 F005          	lfsr	1,5
 45443   00563C  5171               	movf	checkTxFifo@m& (0+255),w,b
 45444   00563E  26E1               	addwf	fsr1l,f,c
 45445   005640  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45446   005642  22E2               	addwfc	fsr1h,f,c
 45447   005644  CFDF FFE7          	movff	indf2,indf1
 45448                           
 45449                           ; BSR set to: 0
 45450                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 45451   005648  EE20 F006          	lfsr	2,6
 45452   00564C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45453   00564E  26D9               	addwf	fsr2l,f,c
 45454   005650  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45455   005652  22DA               	addwfc	fsr2h,f,c
 45456   005654  EE10 F006          	lfsr	1,6
 45457   005658  5171               	movf	checkTxFifo@m& (0+255),w,b
 45458   00565A  26E1               	addwf	fsr1l,f,c
 45459   00565C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45460   00565E  22E2               	addwfc	fsr1h,f,c
 45461   005660  CFDF FFE7          	movff	indf2,indf1
 45462                           
 45463                           ; BSR set to: 0
 45464                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 45465   005664  EE20 F007          	lfsr	2,7
 45466   005668  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45467   00566A  26D9               	addwf	fsr2l,f,c
 45468   00566C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45469   00566E  22DA               	addwfc	fsr2h,f,c
 45470   005670  EE10 F007          	lfsr	1,7
 45471   005674  5171               	movf	checkTxFifo@m& (0+255),w,b
 45472   005676  26E1               	addwf	fsr1l,f,c
 45473   005678  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45474   00567A  22E2               	addwfc	fsr1h,f,c
 45475   00567C  CFDF FFE7          	movff	indf2,indf1
 45476                           
 45477                           ; BSR set to: 0
 45478                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 45479   005680  EE20 F008          	lfsr	2,8
 45480   005684  5173               	movf	checkTxFifo@mp& (0+255),w,b
 45481   005686  26D9               	addwf	fsr2l,f,c
 45482   005688  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 45483   00568A  22DA               	addwfc	fsr2h,f,c
 45484   00568C  EE10 F008          	lfsr	1,8
 45485   005690  5171               	movf	checkTxFifo@m& (0+255),w,b
 45486   005692  26E1               	addwf	fsr1l,f,c
 45487   005694  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 45488   005696  22E2               	addwfc	fsr1h,f,c
 45489   005698  CFDF FFE7          	movff	indf2,indf1
 45490   00569C  0012               	return	
 45491   00569E                     i1l21429:
 45492                           
 45493                           ; BSR set to: 0
 45494                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 45495   00569E  0E00               	movlw	0
 45496   0056A0  6E15               	movwf	_canTransmitTimeout^0,c
 45497   0056A2  0E00               	movlw	0
 45498   0056A4  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45499   0056A6  0E00               	movlw	0
 45500   0056A8  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45501   0056AA  0E00               	movlw	0
 45502   0056AC  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45503                           
 45504                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 45505   0056AE  0E00               	movlw	0
 45506   0056B0  010F               	movlb	15	; () banked
 45507   0056B2  6F20               	movwf	32,b	;volatile
 45508                           
 45509                           ; BSR set to: 15
 45510                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 45511   0056B4  9877               	bcf	119,4,c	;volatile
 45512                           
 45513                           ; BSR set to: 15
 45514                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 45515   0056B6  9876               	bcf	118,4,c	;volatile
 45516   0056B8  0012               	return	
 45517   0056BA                     i1l2561:
 45518                           
 45519                           ; BSR set to: 15
 45520                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 45521   0056BA  9877               	bcf	119,4,c	;volatile
 45522                           
 45523                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 45524   0056BC  8876               	bsf	118,4,c	;volatile
 45525   0056BE  0012               	return		;funcret
 45526   0056C0                     __end_of_checkTxFifo:
 45527                           	callstack 0
 45528                           
 45529 ;; *************** function i1_tickGet *****************
 45530 ;; Defined at:
 45531 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45532 ;; Parameters:    Size  Location     Type
 45533 ;;		None
 45534 ;; Auto vars:     Size  Location     Type
 45535 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 45536 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 45537 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 45538 ;; Return value:  Size  Location     Type
 45539 ;;                  4    0[BANK0 ] unsigned long 
 45540 ;; Registers used:
 45541 ;;		wreg, status,2, status,0
 45542 ;; Tracked objects:
 45543 ;;		On entry : 0/0
 45544 ;;		On exit  : 0/0
 45545 ;;		Unchanged: 0/0
 45546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45547 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45548 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45550 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45551 ;;Total ram usage:       10 bytes
 45552 ;; Hardware stack levels used: 1
 45553 ;; Hardware stack levels required when called: 6
 45554 ;; This function calls:
 45555 ;;		Nothing
 45556 ;; This function is called by:
 45557 ;;		_checkTxFifo
 45558 ;;		_checkCANTimeout
 45559 ;; This function uses a non-reentrant model
 45560 ;;
 45561                           
 45562                           	psect	text205
 45563   00B8F6                     __ptext205:
 45564                           	callstack 0
 45565   00B8F6                     i1_tickGet:
 45566                           	callstack 3
 45567                           
 45568                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45569                           
 45570                           ;incstack = 0
 45571   00B8F6  0E00               	movlw	0
 45572   00B8F8  0100               	movlb	0	; () banked
 45573   00B8FA  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 45574                           
 45575                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45576   00B8FC  0E00               	movlw	0
 45577   00B8FE  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 45578                           
 45579                           ; BSR set to: 0
 45580                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45581   00B900  9AF2               	bcf	242,5,c	;volatile
 45582   00B902                     i1l20509:
 45583                           
 45584                           ; BSR set to: 0
 45585                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45586   00B902  0E00               	movlw	0
 45587   00B904  B4F2               	btfsc	242,2,c	;volatile
 45588   00B906  0E01               	movlw	1
 45589   00B908  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 45590                           
 45591                           ; BSR set to: 0
 45592                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45593   00B90A  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 45594                           
 45595                           ; BSR set to: 0
 45596                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45597   00B90E  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 45598                           
 45599                           ; BSR set to: 0
 45600                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45601   00B912  0E00               	movlw	0
 45602   00B914  B4F2               	btfsc	242,2,c	;volatile
 45603   00B916  0E01               	movlw	1
 45604   00B918  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 45605                           
 45606                           ; BSR set to: 0
 45607                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45608   00B91A  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 45609   00B91C  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 45610   00B91E  A4D8               	btfss	status,2,c
 45611   00B920  D7F0               	goto	i1l20509
 45612                           
 45613                           ; BSR set to: 0
 45614                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45615   00B922  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 45616   00B924  B4D8               	btfsc	status,2,c
 45617   00B926  D005               	goto	i1l20529
 45618                           
 45619                           ; BSR set to: 0
 45620                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 45621   00B928  94F2               	bcf	242,2,c	;volatile
 45622                           
 45623                           ; BSR set to: 0
 45624                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45625   00B92A  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 45626                           
 45627                           ; BSR set to: 0
 45628                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45629   00B92C  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 45630   00B92E  B4D8               	btfsc	status,2,c
 45631                           
 45632                           ; BSR set to: 0
 45633                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45634   00B930  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 45635   00B932                     i1l20529:
 45636                           
 45637                           ; BSR set to: 0
 45638                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45639   00B932  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 45640   00B934  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 45641                           
 45642                           ; BSR set to: 0
 45643                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45644   00B936  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 45645   00B938  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 45646                           
 45647                           ; BSR set to: 0
 45648                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 45649   00B93A  8AF2               	bsf	242,5,c	;volatile
 45650                           
 45651                           ; BSR set to: 0
 45652                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45653   00B93C  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 45654   00B940  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 45655   00B944  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 45656   00B948  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 45657                           
 45658                           ; BSR set to: 0
 45659   00B94C  0012               	return		;funcret
 45660   00B94E                     __end_ofi1_tickGet:
 45661                           	callstack 0
 45662                           
 45663 ;; *************** function i1_pop *****************
 45664 ;; Defined at:
 45665 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 45666 ;; Parameters:    Size  Location     Type
 45667 ;;  q               2    0[BANK0 ] PTR struct MessageQueue
 45668 ;;		 -> txQueue(5), rxQueue(5), 
 45669 ;; Auto vars:     Size  Location     Type
 45670 ;;  ret             2    7[BANK0 ] PTR struct Message
 45671 ;;		 -> txBuffers(72), rxBuffers(288), 
 45672 ;; Return value:  Size  Location     Type
 45673 ;;                  2    0[BANK0 ] PTR struct Message
 45674 ;; Registers used:
 45675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45676 ;; Tracked objects:
 45677 ;;		On entry : 0/0
 45678 ;;		On exit  : 0/0
 45679 ;;		Unchanged: 0/0
 45680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45683 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45684 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45685 ;;Total ram usage:        9 bytes
 45686 ;; Hardware stack levels used: 1
 45687 ;; Hardware stack levels required when called: 6
 45688 ;; This function calls:
 45689 ;;		Nothing
 45690 ;; This function is called by:
 45691 ;;		_checkTxFifo
 45692 ;; This function uses a non-reentrant model
 45693 ;;
 45694                           
 45695                           	psect	text206
 45696   009EA2                     __ptext206:
 45697                           	callstack 0
 45698   009EA2                     i1_pop:
 45699                           	callstack 3
 45700                           
 45701                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 45702                           
 45703                           ; BSR set to: 0
 45704                           ;incstack = 0
 45705   009EA2  0100               	movlb	0	; () banked
 45706   009EA4  EE20 F002          	lfsr	2,2
 45707   009EA8  5160               	movf	i1pop@q& (0+255),w,b
 45708   009EAA  26D9               	addwf	fsr2l,f,c
 45709   009EAC  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45710   009EAE  22DA               	addwfc	fsr2h,f,c
 45711   009EB0  EE10 F003          	lfsr	1,3
 45712   009EB4  5160               	movf	i1pop@q& (0+255),w,b
 45713   009EB6  26E1               	addwf	fsr1l,f,c
 45714   009EB8  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45715   009EBA  22E2               	addwfc	fsr1h,f,c
 45716   009EBC  50DE               	movf	postinc2,w,c
 45717   009EBE  18E6               	xorwf	postinc1,w,c
 45718   009EC0  A4D8               	btfss	status,2,c
 45719   009EC2  D005               	goto	i1l20571
 45720                           
 45721                           ; BSR set to: 0
 45722                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 45723   009EC4  0E00               	movlw	0
 45724   009EC6  6F60               	movwf	?i1_pop& (0+255),b
 45725   009EC8  0E00               	movlw	0
 45726   009ECA  6F61               	movwf	(?i1_pop+1)& (0+255),b
 45727   009ECC  0012               	return	
 45728   009ECE                     i1l20571:
 45729                           
 45730                           ; BSR set to: 0
 45731                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 45732   009ECE  EE20 F002          	lfsr	2,2
 45733   009ED2  5160               	movf	i1pop@q& (0+255),w,b
 45734   009ED4  26D9               	addwf	fsr2l,f,c
 45735   009ED6  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45736   009ED8  22DA               	addwfc	fsr2h,f,c
 45737   009EDA  50DF               	movf	indf2,w,c
 45738   009EDC  6F62               	movwf	??i1_pop& (0+255),b
 45739   009EDE  5162               	movf	??i1_pop& (0+255),w,b
 45740   009EE0  0D09               	mullw	9
 45741   009EE2  CFF3 F063          	movff	prodl,??i1_pop+1
 45742   009EE6  CFF4 F064          	movff	prodh,??i1_pop+2
 45743   009EEA  C060  FFD9         	movff	i1pop@q,fsr2l
 45744   009EEE  C061  FFDA         	movff	i1pop@q+1,fsr2h
 45745   009EF2  CFDE F065          	movff	postinc2,??i1_pop+3
 45746   009EF6  CFDD F066          	movff	postdec2,??i1_pop+4
 45747   009EFA  5163               	movf	(??i1_pop+1)& (0+255),w,b
 45748   009EFC  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 45749   009EFE  6F67               	movwf	i1pop@ret& (0+255),b
 45750   009F00  5164               	movf	(??i1_pop+2)& (0+255),w,b
 45751   009F02  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 45752   009F04  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 45753                           
 45754                           ; BSR set to: 0
 45755   009F06  EE20 F002          	lfsr	2,2
 45756   009F0A  5160               	movf	i1pop@q& (0+255),w,b
 45757   009F0C  26D9               	addwf	fsr2l,f,c
 45758   009F0E  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45759   009F10  22DA               	addwfc	fsr2h,f,c
 45760   009F12  2ADF               	incf	indf2,f,c
 45761                           
 45762                           ; BSR set to: 0
 45763                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 45764   009F14  EE20 F004          	lfsr	2,4
 45765   009F18  5160               	movf	i1pop@q& (0+255),w,b
 45766   009F1A  26D9               	addwf	fsr2l,f,c
 45767   009F1C  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45768   009F1E  22DA               	addwfc	fsr2h,f,c
 45769   009F20  EE10 F002          	lfsr	1,2
 45770   009F24  5160               	movf	i1pop@q& (0+255),w,b
 45771   009F26  26E1               	addwf	fsr1l,f,c
 45772   009F28  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45773   009F2A  22E2               	addwfc	fsr1h,f,c
 45774   009F2C  50DE               	movf	postinc2,w,c
 45775   009F2E  5CE6               	subwf	postinc1,w,c
 45776   009F30  A0D8               	btfss	status,0,c
 45777   009F32  D007               	goto	i1l20579
 45778                           
 45779                           ; BSR set to: 0
 45780   009F34  EE20 F002          	lfsr	2,2
 45781   009F38  5160               	movf	i1pop@q& (0+255),w,b
 45782   009F3A  26D9               	addwf	fsr2l,f,c
 45783   009F3C  5161               	movf	(i1pop@q+1)& (0+255),w,b
 45784   009F3E  22DA               	addwfc	fsr2h,f,c
 45785   009F40  6ADF               	clrf	indf2,c
 45786   009F42                     i1l20579:
 45787                           
 45788                           ; BSR set to: 0
 45789                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 45790   009F42  C067  F060         	movff	i1pop@ret,?i1_pop
 45791   009F46  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 45792                           
 45793                           ; BSR set to: 0
 45794   009F4A  0012               	return		;funcret
 45795   009F4C                     __end_ofi1_pop:
 45796                           	callstack 0
 45797                           
 45798 ;; *************** function i1_isEvent *****************
 45799 ;; Defined at:
 45800 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 45801 ;; Parameters:    Size  Location     Type
 45802 ;;  opc             1    wreg     unsigned char 
 45803 ;; Auto vars:     Size  Location     Type
 45804 ;;  opc             1    1[BANK0 ] unsigned char 
 45805 ;; Return value:  Size  Location     Type
 45806 ;;                  1    wreg      enum E12766
 45807 ;; Registers used:
 45808 ;;		wreg, status,2, status,0
 45809 ;; Tracked objects:
 45810 ;;		On entry : 0/0
 45811 ;;		On exit  : 0/0
 45812 ;;		Unchanged: 0/0
 45813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45815 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45817 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45818 ;;Total ram usage:        2 bytes
 45819 ;; Hardware stack levels used: 1
 45820 ;; Hardware stack levels required when called: 6
 45821 ;; This function calls:
 45822 ;;		Nothing
 45823 ;; This function is called by:
 45824 ;;		_checkTxFifo
 45825 ;; This function uses a non-reentrant model
 45826 ;;
 45827                           
 45828                           	psect	text207
 45829   00C54E                     __ptext207:
 45830                           	callstack 0
 45831   00C54E                     i1_isEvent:
 45832                           	callstack 3
 45833                           
 45834                           ; BSR set to: 0
 45835                           ;incstack = 0
 45836                           ;i1isEvent@opc stored from wreg
 45837   00C54E  0100               	movlb	0	; () banked
 45838   00C550  6F61               	movwf	i1isEvent@opc& (0+255),b
 45839                           
 45840                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 45841   00C552  0E00               	movlw	0
 45842   00C554  0100               	movlb	0	; () banked
 45843   00C556  6F60               	movwf	i1_isEvent$4896& (0+255),b
 45844                           
 45845                           ; BSR set to: 0
 45846   00C558  5161               	movf	i1isEvent@opc& (0+255),w,b
 45847   00C55A  0B90               	andlw	144
 45848   00C55C  0A90               	xorlw	144
 45849   00C55E  A4D8               	btfss	status,2,c
 45850   00C560  D008               	goto	i1l2069
 45851                           
 45852                           ; BSR set to: 0
 45853   00C562  5161               	movf	i1isEvent@opc& (0+255),w,b
 45854   00C564  0AFF               	xorlw	255
 45855   00C566  0B06               	andlw	6
 45856   00C568  0A06               	xorlw	6
 45857   00C56A  A4D8               	btfss	status,2,c
 45858   00C56C  D002               	goto	i1l2069
 45859                           
 45860                           ; BSR set to: 0
 45861   00C56E  0E01               	movlw	1
 45862   00C570  6F60               	movwf	i1_isEvent$4896& (0+255),b
 45863   00C572                     i1l2069:
 45864                           
 45865                           ; BSR set to: 0
 45866   00C572  5160               	movf	i1_isEvent$4896& (0+255),w,b
 45867                           
 45868                           ; BSR set to: 0
 45869   00C574  0012               	return		;funcret
 45870   00C576                     __end_ofi1_isEvent:
 45871                           	callstack 0
 45872                           
 45873 ;; *************** function _canFillRxFifo *****************
 45874 ;; Defined at:
 45875 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 45876 ;; Parameters:    Size  Location     Type
 45877 ;;		None
 45878 ;; Auto vars:     Size  Location     Type
 45879 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 45880 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 45881 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 45882 ;;		 -> NULL(0), 
 45883 ;;  m               2   12[BANK0 ] PTR struct Message
 45884 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45885 ;;  hiIndex         1    0        unsigned char 
 45886 ;; Return value:  Size  Location     Type
 45887 ;;                  1    wreg      void 
 45888 ;; Registers used:
 45889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45890 ;; Tracked objects:
 45891 ;;		On entry : 0/0
 45892 ;;		On exit  : 0/0
 45893 ;;		Unchanged: 0/0
 45894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45896 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45898 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45899 ;;Total ram usage:        4 bytes
 45900 ;; Hardware stack levels used: 1
 45901 ;; Hardware stack levels required when called: 7
 45902 ;; This function calls:
 45903 ;;		i1_getBufferPointer
 45904 ;;		i1_getNextWriteMessage
 45905 ;;		i1_updateModuleErrorStatus
 45906 ;; This function is called by:
 45907 ;;		_canIsr
 45908 ;; This function uses a non-reentrant model
 45909 ;;
 45910                           
 45911                           	psect	text208
 45912   00745C                     __ptext208:
 45913                           	callstack 0
 45914   00745C                     _canFillRxFifo:
 45915                           	callstack 3
 45916                           
 45917                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45918                           
 45919                           ; BSR set to: 0
 45920                           ;incstack = 0
 45921   00745C  D0B4               	goto	i1l22649
 45922   00745E                     i1l22611:
 45923                           
 45924                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 45925   00745E  506F               	movf	111,w,c	;volatile
 45926   007460  0B07               	andlw	7
 45927   007462  EC1A  F052         	call	i1_getBufferPointer
 45928   007466  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 45929   00746A  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 45930                           
 45931                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 45932   00746E  9277               	bcf	119,1,c	;volatile
 45933                           
 45934                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 45935   007470  BC71               	btfsc	113,6,c	;volatile
 45936                           
 45937                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 45938   007472  9C71               	bcf	113,6,c	;volatile
 45939                           
 45940                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 45941   007474  0100               	movlb	0	; () banked
 45942   007476  EE20 F002          	lfsr	2,2
 45943   00747A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45944   00747C  26D9               	addwf	fsr2l,f,c
 45945   00747E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45946   007480  22DA               	addwfc	fsr2h,f,c
 45947   007482  B6DF               	btfsc	indf2,3,c
 45948   007484  D093               	goto	i1l22639
 45949                           
 45950                           ; BSR set to: 0
 45951                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 45952   007486  0E26               	movlw	low _rxQueue
 45953   007488  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 45954   00748A  EC8D  F047         	call	i1_getNextWriteMessage	;wreg free
 45955   00748E  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 45956   007492  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 45957                           
 45958                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 45959   007496  0100               	movlb	0	; () banked
 45960   007498  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45961   00749A  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 45962   00749C  A4D8               	btfss	status,2,c
 45963   00749E  D009               	goto	i1l22635
 45964                           
 45965                           ; BSR set to: 0
 45966                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 45967   0074A0  0101               	movlb	1	; () banked
 45968   0074A2  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 45969   0074A4  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 45970                           
 45971                           ; BSR set to: 1
 45972                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 45973   0074A6  EC3F  F064         	call	i1_updateModuleErrorStatus	;wreg free
 45974                           
 45975                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 45976   0074AA  AE77               	btfss	119,7,c	;volatile
 45977   0074AC  0012               	return	
 45978                           
 45979                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 45980   0074AE  9E77               	bcf	119,7,c	;volatile
 45981   0074B0  0012               	return	
 45982   0074B2                     i1l22635:
 45983                           
 45984                           ; BSR set to: 0
 45985                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 45986   0074B2  EE20 F006          	lfsr	2,6
 45987   0074B6  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45988   0074B8  26D9               	addwf	fsr2l,f,c
 45989   0074BA  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45990   0074BC  22DA               	addwfc	fsr2h,f,c
 45991   0074BE  EE10 F001          	lfsr	1,1
 45992   0074C2  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45993   0074C4  26E1               	addwf	fsr1l,f,c
 45994   0074C6  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45995   0074C8  22E2               	addwfc	fsr1h,f,c
 45996   0074CA  CFDF FFE7          	movff	indf2,indf1
 45997                           
 45998                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 45999   0074CE  EE20 F007          	lfsr	2,7
 46000   0074D2  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46001   0074D4  26D9               	addwf	fsr2l,f,c
 46002   0074D6  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46003   0074D8  22DA               	addwfc	fsr2h,f,c
 46004   0074DA  EE10 F002          	lfsr	1,2
 46005   0074DE  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46006   0074E0  26E1               	addwf	fsr1l,f,c
 46007   0074E2  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46008   0074E4  22E2               	addwfc	fsr1h,f,c
 46009   0074E6  CFDF FFE7          	movff	indf2,indf1
 46010                           
 46011                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 46012   0074EA  EE20 F008          	lfsr	2,8
 46013   0074EE  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46014   0074F0  26D9               	addwf	fsr2l,f,c
 46015   0074F2  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46016   0074F4  22DA               	addwfc	fsr2h,f,c
 46017   0074F6  EE10 F003          	lfsr	1,3
 46018   0074FA  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46019   0074FC  26E1               	addwf	fsr1l,f,c
 46020   0074FE  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46021   007500  22E2               	addwfc	fsr1h,f,c
 46022   007502  CFDF FFE7          	movff	indf2,indf1
 46023                           
 46024                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 46025   007506  EE20 F009          	lfsr	2,9
 46026   00750A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46027   00750C  26D9               	addwf	fsr2l,f,c
 46028   00750E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46029   007510  22DA               	addwfc	fsr2h,f,c
 46030   007512  EE10 F004          	lfsr	1,4
 46031   007516  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46032   007518  26E1               	addwf	fsr1l,f,c
 46033   00751A  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46034   00751C  22E2               	addwfc	fsr1h,f,c
 46035   00751E  CFDF FFE7          	movff	indf2,indf1
 46036                           
 46037                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 46038   007522  EE20 F00A          	lfsr	2,10
 46039   007526  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46040   007528  26D9               	addwf	fsr2l,f,c
 46041   00752A  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46042   00752C  22DA               	addwfc	fsr2h,f,c
 46043   00752E  EE10 F005          	lfsr	1,5
 46044   007532  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46045   007534  26E1               	addwf	fsr1l,f,c
 46046   007536  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46047   007538  22E2               	addwfc	fsr1h,f,c
 46048   00753A  CFDF FFE7          	movff	indf2,indf1
 46049                           
 46050                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 46051   00753E  EE20 F00B          	lfsr	2,11
 46052   007542  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46053   007544  26D9               	addwf	fsr2l,f,c
 46054   007546  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46055   007548  22DA               	addwfc	fsr2h,f,c
 46056   00754A  EE10 F006          	lfsr	1,6
 46057   00754E  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46058   007550  26E1               	addwf	fsr1l,f,c
 46059   007552  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46060   007554  22E2               	addwfc	fsr1h,f,c
 46061   007556  CFDF FFE7          	movff	indf2,indf1
 46062                           
 46063                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 46064   00755A  EE20 F00C          	lfsr	2,12
 46065   00755E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46066   007560  26D9               	addwf	fsr2l,f,c
 46067   007562  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46068   007564  22DA               	addwfc	fsr2h,f,c
 46069   007566  EE10 F007          	lfsr	1,7
 46070   00756A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46071   00756C  26E1               	addwf	fsr1l,f,c
 46072   00756E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46073   007570  22E2               	addwfc	fsr1h,f,c
 46074   007572  CFDF FFE7          	movff	indf2,indf1
 46075                           
 46076                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 46077   007576  EE20 F00D          	lfsr	2,13
 46078   00757A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46079   00757C  26D9               	addwf	fsr2l,f,c
 46080   00757E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46081   007580  22DA               	addwfc	fsr2h,f,c
 46082   007582  EE10 F008          	lfsr	1,8
 46083   007586  516C               	movf	canFillRxFifo@m& (0+255),w,b
 46084   007588  26E1               	addwf	fsr1l,f,c
 46085   00758A  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 46086   00758C  22E2               	addwfc	fsr1h,f,c
 46087   00758E  CFDF FFE7          	movff	indf2,indf1
 46088                           
 46089                           ; BSR set to: 0
 46090                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 46091   007592  EE20 F005          	lfsr	2,5
 46092   007596  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 46093   007598  26D9               	addwf	fsr2l,f,c
 46094   00759A  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 46095   00759C  22DA               	addwfc	fsr2h,f,c
 46096   00759E  50DF               	movf	indf2,w,c
 46097   0075A0  0B0F               	andlw	15
 46098   0075A2  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 46099   0075A6  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 46100   0075AA  6EDF               	movwf	indf2,c
 46101   0075AC                     i1l22639:
 46102                           
 46103                           ; BSR set to: 0
 46104                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 46105   0075AC  AE77               	btfss	119,7,c	;volatile
 46106   0075AE  D004               	goto	i1l22645
 46107                           
 46108                           ; BSR set to: 0
 46109                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 46110   0075B0  0101               	movlb	1	; () banked
 46111   0075B2  4B68               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 46112   0075B4  2B69               	incf	(_canDiagnostics+3)& (0+255),f,b
 46113                           
 46114                           ; BSR set to: 1
 46115                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 46116   0075B6  9E77               	bcf	119,7,c	;volatile
 46117   0075B8                     i1l22645:
 46118                           
 46119                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 46120   0075B8  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 46121   0075BC  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 46122   0075C0  0E7F               	movlw	127
 46123   0075C2  16DF               	andwf	indf2,f,c
 46124                           
 46125                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 46126   0075C4  9077               	bcf	119,0,c	;volatile
 46127   0075C6                     i1l22649:
 46128                           
 46129                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46130   0075C6  AE71               	btfss	113,7,c	;volatile
 46131   0075C8  0012               	return	
 46132   0075CA  D749               	goto	i1l22611
 46133   0075CC                     __end_of_canFillRxFifo:
 46134                           	callstack 0
 46135                           
 46136 ;; *************** function i1_updateModuleErrorStatus *****************
 46137 ;; Defined at:
 46138 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 46139 ;; Parameters:    Size  Location     Type
 46140 ;;		None
 46141 ;; Auto vars:     Size  Location     Type
 46142 ;;		None
 46143 ;; Return value:  Size  Location     Type
 46144 ;;                  1    wreg      void 
 46145 ;; Registers used:
 46146 ;;		wreg, status,2, status,0
 46147 ;; Tracked objects:
 46148 ;;		On entry : 0/0
 46149 ;;		On exit  : 0/0
 46150 ;;		Unchanged: 0/0
 46151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46156 ;;Total ram usage:        0 bytes
 46157 ;; Hardware stack levels used: 1
 46158 ;; Hardware stack levels required when called: 6
 46159 ;; This function calls:
 46160 ;;		Nothing
 46161 ;; This function is called by:
 46162 ;;		_checkTxFifo
 46163 ;;		_checkCANTimeout
 46164 ;;		_canTxError
 46165 ;;		_canFillRxFifo
 46166 ;; This function uses a non-reentrant model
 46167 ;;
 46168                           
 46169                           	psect	text209
 46170   00C87E                     __ptext209:
 46171                           	callstack 0
 46172   00C87E                     i1_updateModuleErrorStatus:
 46173                           	callstack 3
 46174                           
 46175                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 46176                           
 46177                           ;incstack = 0
 46178   00C87E  0101               	movlb	1	; () banked
 46179   00C880  298E               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 46180   00C882  B4D8               	btfsc	status,2,c
 46181   00C884  0012               	return	
 46182                           
 46183                           ; BSR set to: 1
 46184                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 46185   00C886  2B8E               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 46186                           
 46187                           ; BSR set to: 1
 46188   00C888  0012               	return		;funcret
 46189   00C88A                     __end_ofi1_updateModuleErrorStatus:
 46190                           	callstack 0
 46191                           
 46192 ;; *************** function i1_getNextWriteMessage *****************
 46193 ;; Defined at:
 46194 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 46195 ;; Parameters:    Size  Location     Type
 46196 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 46197 ;;		 -> rxQueue(5), 
 46198 ;; Auto vars:     Size  Location     Type
 46199 ;;  wr              1   11[BANK0 ] unsigned char 
 46200 ;; Return value:  Size  Location     Type
 46201 ;;                  2    0[BANK0 ] PTR struct Message
 46202 ;; Registers used:
 46203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46204 ;; Tracked objects:
 46205 ;;		On entry : 0/0
 46206 ;;		On exit  : 0/0
 46207 ;;		Unchanged: 0/0
 46208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46209 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46211 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46212 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46213 ;;Total ram usage:       12 bytes
 46214 ;; Hardware stack levels used: 1
 46215 ;; Hardware stack levels required when called: 6
 46216 ;; This function calls:
 46217 ;;		Nothing
 46218 ;; This function is called by:
 46219 ;;		_checkTxFifo
 46220 ;;		_canFillRxFifo
 46221 ;; This function uses a non-reentrant model
 46222 ;;
 46223                           
 46224                           	psect	text210
 46225   008F1A                     __ptext210:
 46226                           	callstack 0
 46227   008F1A                     i1_getNextWriteMessage:
 46228                           	callstack 3
 46229                           
 46230                           ; BSR set to: 1
 46231                           ;incstack = 0
 46232   008F1A  0100               	movlb	0	; () banked
 46233   008F1C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46234   008F1E  6ED9               	movwf	fsr2l,c
 46235   008F20  6ADA               	clrf	fsr2h,c
 46236   008F22  0E02               	movlw	2
 46237   008F24  26D9               	addwf	fsr2l,f,c
 46238   008F26  50DF               	movf	indf2,w,c
 46239   008F28  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 46240   008F2A  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 46241   008F2C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46242   008F2E  6ED9               	movwf	fsr2l,c
 46243   008F30  6ADA               	clrf	fsr2h,c
 46244   008F32  0E04               	movlw	4
 46245   008F34  26D9               	addwf	fsr2l,f,c
 46246   008F36  50DF               	movf	indf2,w,c
 46247   008F38  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 46248   008F3A  0EFF               	movlw	255
 46249   008F3C  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 46250   008F3E  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 46251   008F40  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 46252   008F42  0EFF               	movlw	255
 46253   008F44  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 46254   008F46  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46255   008F48  6ED9               	movwf	fsr2l,c
 46256   008F4A  6ADA               	clrf	fsr2h,c
 46257   008F4C  0E03               	movlw	3
 46258   008F4E  26D9               	addwf	fsr2l,f,c
 46259   008F50  50DF               	movf	indf2,w,c
 46260   008F52  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 46261   008F54  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 46262   008F56  0E01               	movlw	1
 46263   008F58  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 46264   008F5A  0E00               	movlw	0
 46265   008F5C  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 46266   008F5E  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 46267   008F60  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 46268   008F62  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 46269   008F64  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 46270   008F66  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 46271   008F68  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 46272   008F6A  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 46273   008F6C  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 46274   008F6E  E109               	bnz	i1l20555
 46275   008F70  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 46276   008F72  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 46277   008F74  A4D8               	btfss	status,2,c
 46278   008F76  D005               	goto	i1l20555
 46279                           
 46280                           ; BSR set to: 0
 46281   008F78  0E00               	movlw	0
 46282   008F7A  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 46283   008F7C  0E00               	movlw	0
 46284   008F7E  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 46285   008F80  0012               	return	
 46286   008F82                     i1l20555:
 46287                           
 46288                           ; BSR set to: 0
 46289   008F82  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46290   008F84  6ED9               	movwf	fsr2l,c
 46291   008F86  6ADA               	clrf	fsr2h,c
 46292   008F88  0E03               	movlw	3
 46293   008F8A  26D9               	addwf	fsr2l,f,c
 46294   008F8C  50DF               	movf	indf2,w,c
 46295   008F8E  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 46296   008F90  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46297   008F92  6ED9               	movwf	fsr2l,c
 46298   008F94  6ADA               	clrf	fsr2h,c
 46299   008F96  0E03               	movlw	3
 46300   008F98  26D9               	addwf	fsr2l,f,c
 46301   008F9A  2ADF               	incf	indf2,f,c
 46302                           
 46303                           ; BSR set to: 0
 46304   008F9C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46305   008F9E  6ED9               	movwf	fsr2l,c
 46306   008FA0  6ADA               	clrf	fsr2h,c
 46307   008FA2  0E04               	movlw	4
 46308   008FA4  26D9               	addwf	fsr2l,f,c
 46309   008FA6  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46310   008FA8  6EE1               	movwf	fsr1l,c
 46311   008FAA  6AE2               	clrf	fsr1h,c
 46312   008FAC  0E03               	movlw	3
 46313   008FAE  26E1               	addwf	fsr1l,f,c
 46314   008FB0  50DE               	movf	postinc2,w,c
 46315   008FB2  5CE6               	subwf	postinc1,w,c
 46316   008FB4  A0D8               	btfss	status,0,c
 46317   008FB6  D006               	goto	i1l20561
 46318                           
 46319                           ; BSR set to: 0
 46320   008FB8  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46321   008FBA  6ED9               	movwf	fsr2l,c
 46322   008FBC  6ADA               	clrf	fsr2h,c
 46323   008FBE  0E03               	movlw	3
 46324   008FC0  26D9               	addwf	fsr2l,f,c
 46325   008FC2  6ADF               	clrf	indf2,c
 46326   008FC4                     i1l20561:
 46327                           
 46328                           ; BSR set to: 0
 46329   008FC4  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 46330   008FC6  0D09               	mullw	9
 46331   008FC8  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 46332   008FCC  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 46333   008FD0  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 46334   008FD2  6ED9               	movwf	fsr2l,c
 46335   008FD4  6ADA               	clrf	fsr2h,c
 46336   008FD6  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 46337   008FDA  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 46338   008FDE  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 46339   008FE0  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 46340   008FE2  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 46341   008FE4  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 46342   008FE6  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 46343   008FE8  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 46344                           
 46345                           ; BSR set to: 0
 46346   008FEA  0012               	return		;funcret
 46347   008FEC                     __end_ofi1_getNextWriteMessage:
 46348                           	callstack 0
 46349                           
 46350 ;; *************** function i1_getBufferPointer *****************
 46351 ;; Defined at:
 46352 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 46353 ;; Parameters:    Size  Location     Type
 46354 ;;  b               1    wreg     unsigned char 
 46355 ;; Auto vars:     Size  Location     Type
 46356 ;;  b               1    2[BANK0 ] unsigned char 
 46357 ;; Return value:  Size  Location     Type
 46358 ;;                  2    0[BANK0 ] PTR unsigned char 
 46359 ;; Registers used:
 46360 ;;		wreg, status,2, status,0
 46361 ;; Tracked objects:
 46362 ;;		On entry : 0/0
 46363 ;;		On exit  : 0/0
 46364 ;;		Unchanged: 0/0
 46365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46369 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46370 ;;Total ram usage:        3 bytes
 46371 ;; Hardware stack levels used: 1
 46372 ;; Hardware stack levels required when called: 6
 46373 ;; This function calls:
 46374 ;;		Nothing
 46375 ;; This function is called by:
 46376 ;;		_canFillRxFifo
 46377 ;; This function uses a non-reentrant model
 46378 ;;
 46379                           
 46380                           	psect	text211
 46381   00A434                     __ptext211:
 46382                           	callstack 0
 46383   00A434                     i1_getBufferPointer:
 46384                           	callstack 3
 46385                           
 46386                           ; BSR set to: 0
 46387                           ;incstack = 0
 46388                           ;i1getBufferPointer@b stored from wreg
 46389   00A434  0100               	movlb	0	; () banked
 46390   00A436  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 46391                           
 46392                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 46393   00A438  D02D               	goto	i1l21595
 46394   00A43A                     i1l21557:
 46395                           
 46396                           ; BSR set to: 0
 46397                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 46398   00A43A  0E60               	movlw	96
 46399   00A43C  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46400   00A43E  0E0F               	movlw	15
 46401   00A440  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46402   00A442  0012               	return	
 46403   00A444                     i1l21561:
 46404                           
 46405                           ; BSR set to: 0
 46406                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 46407   00A444  0E30               	movlw	48
 46408   00A446  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46409   00A448  0E0F               	movlw	15
 46410   00A44A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46411   00A44C  0012               	return	
 46412   00A44E                     i1l21565:
 46413                           
 46414                           ; BSR set to: 0
 46415                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 46416   00A44E  0E80               	movlw	128
 46417   00A450  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46418   00A452  0E0E               	movlw	14
 46419   00A454  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46420   00A456  0012               	return	
 46421   00A458                     i1l21569:
 46422                           
 46423                           ; BSR set to: 0
 46424                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 46425   00A458  0E90               	movlw	144
 46426   00A45A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46427   00A45C  0E0E               	movlw	14
 46428   00A45E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46429   00A460  0012               	return	
 46430   00A462                     i1l21573:
 46431                           
 46432                           ; BSR set to: 0
 46433                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 46434   00A462  0EA0               	movlw	160
 46435   00A464  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46436   00A466  0E0E               	movlw	14
 46437   00A468  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46438   00A46A  0012               	return	
 46439   00A46C                     i1l21577:
 46440                           
 46441                           ; BSR set to: 0
 46442                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 46443   00A46C  0EB0               	movlw	176
 46444   00A46E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46445   00A470  0E0E               	movlw	14
 46446   00A472  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46447   00A474  0012               	return	
 46448   00A476                     i1l21581:
 46449                           
 46450                           ; BSR set to: 0
 46451                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 46452   00A476  0EC0               	movlw	192
 46453   00A478  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46454   00A47A  0E0E               	movlw	14
 46455   00A47C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46456   00A47E  0012               	return	
 46457   00A480                     i1l21585:
 46458                           
 46459                           ; BSR set to: 0
 46460                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 46461   00A480  0ED0               	movlw	208
 46462   00A482  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46463   00A484  0E0E               	movlw	14
 46464   00A486  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46465   00A488  0012               	return	
 46466   00A48A                     i1l21589:
 46467                           
 46468                           ; BSR set to: 0
 46469                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 46470   00A48A  0E00               	movlw	0
 46471   00A48C  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 46472   00A48E  0E00               	movlw	0
 46473   00A490  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 46474   00A492  0012               	return	
 46475   00A494                     i1l21595:
 46476   00A494  0100               	movlb	0	; () banked
 46477   00A496  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 46478                           
 46479                           ; Switch size 1, requested type "simple"
 46480                           ; Number of cases is 8, Range of values is 0 to 7
 46481                           ; switch strategies available:
 46482                           ; Name         Instructions Cycles
 46483                           ; simple_byte           25    13 (average)
 46484                           ;	Chosen strategy is simple_byte
 46485   00A498  0A00               	xorlw	0	; case 0
 46486   00A49A  B4D8               	btfsc	status,2,c
 46487   00A49C  D7CE               	goto	i1l21557
 46488   00A49E  0A01               	xorlw	1	; case 1
 46489   00A4A0  B4D8               	btfsc	status,2,c
 46490   00A4A2  D7D0               	goto	i1l21561
 46491   00A4A4  0A03               	xorlw	3	; case 2
 46492   00A4A6  B4D8               	btfsc	status,2,c
 46493   00A4A8  D7D2               	goto	i1l21565
 46494   00A4AA  0A01               	xorlw	1	; case 3
 46495   00A4AC  B4D8               	btfsc	status,2,c
 46496   00A4AE  D7D4               	goto	i1l21569
 46497   00A4B0  0A07               	xorlw	7	; case 4
 46498   00A4B2  B4D8               	btfsc	status,2,c
 46499   00A4B4  D7D6               	goto	i1l21573
 46500   00A4B6  0A01               	xorlw	1	; case 5
 46501   00A4B8  B4D8               	btfsc	status,2,c
 46502   00A4BA  D7D8               	goto	i1l21577
 46503   00A4BC  0A03               	xorlw	3	; case 6
 46504   00A4BE  B4D8               	btfsc	status,2,c
 46505   00A4C0  D7DA               	goto	i1l21581
 46506   00A4C2  0A01               	xorlw	1	; case 7
 46507   00A4C4  B4D8               	btfsc	status,2,c
 46508   00A4C6  D7DC               	goto	i1l21585
 46509   00A4C8  D7E0               	goto	i1l21589
 46510   00A4CA                     __end_ofi1_getBufferPointer:
 46511                           	callstack 0
 46512                           
 46513 ;; *************** function _APP_lowIsr *****************
 46514 ;; Defined at:
 46515 ;;		line 708 in file "../main.c"
 46516 ;; Parameters:    Size  Location     Type
 46517 ;;		None
 46518 ;; Auto vars:     Size  Location     Type
 46519 ;;		None
 46520 ;; Return value:  Size  Location     Type
 46521 ;;                  1    wreg      void 
 46522 ;; Registers used:
 46523 ;;		None
 46524 ;; Tracked objects:
 46525 ;;		On entry : 0/0
 46526 ;;		On exit  : 0/0
 46527 ;;		Unchanged: 0/0
 46528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46533 ;;Total ram usage:        0 bytes
 46534 ;; Hardware stack levels used: 1
 46535 ;; Hardware stack levels required when called: 6
 46536 ;; This function calls:
 46537 ;;		Nothing
 46538 ;; This function is called by:
 46539 ;;		_lowIsr
 46540 ;; This function uses a non-reentrant model
 46541 ;;
 46542                           
 46543                           	psect	text212
 46544   00C8EE                     __ptext212:
 46545                           	callstack 0
 46546   00C8EE                     _APP_lowIsr:
 46547                           	callstack 5
 46548                           
 46549                           ; BSR set to: 0
 46550                           ;incstack = 0
 46551   00C8EE  0012               	return		;funcret
 46552   00C8F0                     __end_of_APP_lowIsr:
 46553                           	callstack 0
 46554                           
 46555                           	psect	intcode
 46556   000808                     __pintcode:
 46557                           	callstack 2
 46558   000808  EF77  F043         	goto	_isrHigh
 46559                           
 46560 ;; *************** function _highIsr *****************
 46561 ;; Defined at:
 46562 ;;		line 1057 in file "../../VLCBlib_PIC/vlcb.c"
 46563 ;; Parameters:    Size  Location     Type
 46564 ;;		None
 46565 ;; Auto vars:     Size  Location     Type
 46566 ;;  i               1   29[COMRAM] unsigned char 
 46567 ;; Return value:  Size  Location     Type
 46568 ;;                  1    wreg      void 
 46569 ;; Registers used:
 46570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 46571 ;; Tracked objects:
 46572 ;;		On entry : 0/0
 46573 ;;		On exit  : 0/0
 46574 ;;		Unchanged: 0/0
 46575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46579 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46580 ;;Total ram usage:        5 bytes
 46581 ;; Hardware stack levels used: 1
 46582 ;; Hardware stack levels required when called: 4
 46583 ;; This function calls:
 46584 ;;		NULL
 46585 ;;		_APP_highIsr
 46586 ;;		i2_canIsr
 46587 ;; This function is called by:
 46588 ;;		_isrHigh
 46589 ;; This function uses a non-reentrant model
 46590 ;;
 46591                           
 46592                           	psect	text214
 46593   009328                     __ptext214:
 46594                           	callstack 0
 46595   009328                     _highIsr:
 46596                           	callstack 2
 46597                           
 46598                           ;../../VLCBlib_PIC/vlcb.c: 1058:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1060:     for 
      +                          (i=0; i<9; i++) {
 46599                           
 46600                           ;incstack = 0
 46601   009328  0E00               	movlw	0
 46602   00932A  6E48               	movwf	highIsr@i^0,c
 46603   00932C                     i2l25379:
 46604                           
 46605                           ;../../VLCBlib_PIC/vlcb.c: 1061:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 46606   00932C  5048               	movf	highIsr@i^0,w,c
 46607   00932E  0D02               	mullw	2
 46608   009330  0E69               	movlw	low _services
 46609   009332  24F3               	addwf	243,w,c
 46610   009334  6EF6               	movwf	tblptrl,c
 46611   009336  0EEE               	movlw	high _services
 46612   009338  20F4               	addwfc	244,w,c
 46613   00933A  6EF7               	movwf	tblptrh,c
 46614   00933C                     	if	1	;There are 3 active tblptr bytes
 46615   00933C  6AF8               	clrf	tblptru,c
 46616   00933E  0E00               	movlw	low (__mediumconst shr (0+16))
 46617   009340  22F8               	addwfc	tblptru,f,c
 46618   009342                     	endif
 46619   009342  0009               	tblrd		*+
 46620   009344  50F5               	movf	tablat,w,c
 46621   009346  0009               	tblrd		*+
 46622   009348  10F5               	iorwf	tablat,w,c
 46623   00934A  B4D8               	btfsc	status,2,c
 46624   00934C  D04B               	goto	i2u2737_49
 46625   00934E  5048               	movf	highIsr@i^0,w,c
 46626   009350  0D02               	mullw	2
 46627   009352  0E69               	movlw	low _services
 46628   009354  24F3               	addwf	243,w,c
 46629   009356  6EF6               	movwf	tblptrl,c
 46630   009358  0EEE               	movlw	high _services
 46631   00935A  20F4               	addwfc	244,w,c
 46632   00935C  6EF7               	movwf	tblptrh,c
 46633   00935E                     	if	1	;There are 3 active tblptr bytes
 46634   00935E  6AF8               	clrf	tblptru,c
 46635   009360  0E00               	movlw	low (__mediumconst shr (0+16))
 46636   009362  22F8               	addwfc	tblptru,f,c
 46637   009364                     	endif
 46638   009364  0009               	tblrd		*+
 46639   009366  CFF5 F044          	movff	tablat,??_highIsr
 46640   00936A  0009               	tblrd		*+
 46641   00936C  CFF5 F045          	movff	tablat,??_highIsr+1
 46642   009370  0E0A               	movlw	10
 46643   009372  2644               	addwf	??_highIsr^0,f,c
 46644   009374  0E00               	movlw	0
 46645   009376  2245               	addwfc	(??_highIsr+1)^0,f,c
 46646   009378  C044  FFF6         	movff	??_highIsr,tblptrl
 46647   00937C  C045  FFF7         	movff	??_highIsr+1,tblptrh
 46648   009380                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46649   009380  6AF8               	clrf	tblptru,c
 46650   009382                     	endif
 46651   009382                     	if	0	;tblptru may be non-zero
 46652   009382                     	endif
 46653   009382  0009               	tblrd		*+
 46654   009384  50F5               	movf	tablat,w,c
 46655   009386  0009               	tblrd		*+
 46656   009388  10F5               	iorwf	tablat,w,c
 46657   00938A  B4D8               	btfsc	status,2,c
 46658   00938C  D02B               	goto	i2u2737_49
 46659                           
 46660                           ;../../VLCBlib_PIC/vlcb.c: 1062:             services[i]->highIsr();
 46661   00938E  5048               	movf	highIsr@i^0,w,c
 46662   009390  0D02               	mullw	2
 46663   009392  0E69               	movlw	low _services
 46664   009394  24F3               	addwf	243,w,c
 46665   009396  6EF6               	movwf	tblptrl,c
 46666   009398  0EEE               	movlw	high _services
 46667   00939A  20F4               	addwfc	244,w,c
 46668   00939C  6EF7               	movwf	tblptrh,c
 46669   00939E                     	if	1	;There are 3 active tblptr bytes
 46670   00939E  6AF8               	clrf	tblptru,c
 46671   0093A0  0E00               	movlw	low (__mediumconst shr (0+16))
 46672   0093A2  22F8               	addwfc	tblptru,f,c
 46673   0093A4                     	endif
 46674   0093A4  0009               	tblrd		*+
 46675   0093A6  CFF5 F044          	movff	tablat,??_highIsr
 46676   0093AA  0009               	tblrd		*+
 46677   0093AC  CFF5 F045          	movff	tablat,??_highIsr+1
 46678   0093B0  0E0A               	movlw	10
 46679   0093B2  2644               	addwf	??_highIsr^0,f,c
 46680   0093B4  0E00               	movlw	0
 46681   0093B6  2245               	addwfc	(??_highIsr+1)^0,f,c
 46682   0093B8  C044  FFF6         	movff	??_highIsr,tblptrl
 46683   0093BC  C045  FFF7         	movff	??_highIsr+1,tblptrh
 46684   0093C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 46685   0093C0  6AF8               	clrf	tblptru,c
 46686   0093C2                     	endif
 46687   0093C2                     	if	0	;tblptru may be non-zero
 46688   0093C2                     	endif
 46689   0093C2  0009               	tblrd		*+
 46690   0093C4  CFF5 F046          	movff	tablat,??_highIsr+2
 46691   0093C8  0009               	tblrd		*+
 46692   0093CA  CFF5 F047          	movff	tablat,??_highIsr+3
 46693   0093CE  D801               	call	i2u2737_48
 46694   0093D0  D009               	goto	i2u2737_49
 46695   0093D2                     i2u2737_48:
 46696   0093D2  0005               	push	
 46697   0093D4  6EFA               	movwf	pclath,c
 46698   0093D6  5046               	movf	(??_highIsr+2)^0,w,c
 46699   0093D8  6EFD               	movwf	tosl,c
 46700   0093DA  5047               	movf	(??_highIsr+3)^0,w,c
 46701   0093DC  6EFE               	movwf	tosh,c
 46702   0093DE  6AFF               	clrf	tosu,c
 46703   0093E0  50FA               	movf	pclath,w,c
 46704   0093E2  0012               	return		;indir
 46705   0093E4                     i2u2737_49:
 46706                           
 46707                           ;../../VLCBlib_PIC/vlcb.c: 1064:     }
 46708   0093E4  2A48               	incf	highIsr@i^0,f,c
 46709   0093E6  0E08               	movlw	8
 46710   0093E8  6448               	cpfsgt	highIsr@i^0,c
 46711   0093EA  D7A0               	goto	i2l25379
 46712                           
 46713                           ;../../VLCBlib_PIC/vlcb.c: 1065:     APP_highIsr();
 46714   0093EC  ECF8  F063         	call	_APP_highIsr	;wreg free
 46715   0093F0  0012               	return		;funcret
 46716   0093F2                     __end_of_highIsr:
 46717                           	callstack 0
 46718                           
 46719 ;; *************** function i2_canIsr *****************
 46720 ;; Defined at:
 46721 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 46722 ;; Parameters:    Size  Location     Type
 46723 ;;		None
 46724 ;; Auto vars:     Size  Location     Type
 46725 ;;		None
 46726 ;; Return value:  Size  Location     Type
 46727 ;;                  1    wreg      void 
 46728 ;; Registers used:
 46729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46730 ;; Tracked objects:
 46731 ;;		On entry : 0/0
 46732 ;;		On exit  : 0/0
 46733 ;;		Unchanged: 0/0
 46734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46739 ;;Total ram usage:        0 bytes
 46740 ;; Hardware stack levels used: 1
 46741 ;; Hardware stack levels required when called: 3
 46742 ;; This function calls:
 46743 ;;		i2_canFillRxFifo
 46744 ;;		i2_canTxError
 46745 ;;		i2_checkCANTimeout
 46746 ;;		i2_checkTxFifo
 46747 ;; This function is called by:
 46748 ;;		_highIsr
 46749 ;;		_lowIsr
 46750 ;; This function uses a non-reentrant model
 46751 ;;
 46752                           
 46753                           	psect	text215
 46754   00C7D8                     __ptext215:
 46755                           	callstack 0
 46756   00C7D8                     i2_canIsr:
 46757                           	callstack 2
 46758                           
 46759                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 46760                           
 46761                           ;incstack = 0
 46762   00C7D8  B077               	btfsc	119,0,c	;volatile
 46763                           
 46764                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 46765   00C7DA  ECE6  F03A         	call	i2_canFillRxFifo	;wreg free
 46766                           
 46767                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 46768   00C7DE  BA77               	btfsc	119,5,c	;volatile
 46769                           
 46770                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 46771   00C7E0  ECAE  F05A         	call	i2_canTxError	;wreg free
 46772                           
 46773                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 46774   00C7E4  B877               	btfsc	119,4,c	;volatile
 46775                           
 46776                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 46777   00C7E6  EC09  F02E         	call	i2_checkTxFifo	;wreg free
 46778                           
 46779                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 46780                           
 46781                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 46782   00C7EA  EC26  F05D         	call	i2_checkCANTimeout	;wreg free
 46783   00C7EE  0012               	return		;funcret
 46784   00C7F0                     __end_ofi2_canIsr:
 46785                           	callstack 0
 46786                           
 46787 ;; *************** function i2_checkCANTimeout *****************
 46788 ;; Defined at:
 46789 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 46790 ;; Parameters:    Size  Location     Type
 46791 ;;		None
 46792 ;; Auto vars:     Size  Location     Type
 46793 ;;		None
 46794 ;; Return value:  Size  Location     Type
 46795 ;;                  1    wreg      void 
 46796 ;; Registers used:
 46797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46798 ;; Tracked objects:
 46799 ;;		On entry : 0/0
 46800 ;;		On exit  : 0/0
 46801 ;;		Unchanged: 0/0
 46802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46805 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46807 ;;Total ram usage:        4 bytes
 46808 ;; Hardware stack levels used: 1
 46809 ;; Hardware stack levels required when called: 2
 46810 ;; This function calls:
 46811 ;;		i2_checkTxFifo
 46812 ;;		i2_tickGet
 46813 ;;		i2_updateModuleErrorStatus
 46814 ;; This function is called by:
 46815 ;;		i2_canIsr
 46816 ;; This function uses a non-reentrant model
 46817 ;;
 46818                           
 46819                           	psect	text216
 46820   00BA4C                     __ptext216:
 46821                           	callstack 0
 46822   00BA4C                     i2_checkCANTimeout:
 46823                           	callstack 2
 46824                           
 46825                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 46826                           
 46827                           ;incstack = 0
 46828   00BA4C  5015               	movf	_canTransmitTimeout^0,w,c
 46829   00BA4E  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 46830   00BA50  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 46831   00BA52  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 46832   00BA54  B4D8               	btfsc	status,2,c
 46833   00BA56  0012               	return	
 46834                           
 46835                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 46836   00BA58  ECCA  F05B         	call	i2_tickGet	;wreg free
 46837   00BA5C  5015               	movf	_canTransmitTimeout^0,w,c
 46838   00BA5E  5C2B               	subwf	?i2_tickGet^0,w,c
 46839   00BA60  6E40               	movwf	??i2_checkCANTimeout^0,c
 46840   00BA62  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 46841   00BA64  582C               	subwfb	(?i2_tickGet+1)^0,w,c
 46842   00BA66  6E41               	movwf	(??i2_checkCANTimeout+1)^0,c
 46843   00BA68  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 46844   00BA6A  582D               	subwfb	(?i2_tickGet+2)^0,w,c
 46845   00BA6C  6E42               	movwf	(??i2_checkCANTimeout+2)^0,c
 46846   00BA6E  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 46847   00BA70  582E               	subwfb	(?i2_tickGet+3)^0,w,c
 46848   00BA72  6E43               	movwf	(??i2_checkCANTimeout+3)^0,c
 46849   00BA74  5043               	movf	(??i2_checkCANTimeout+3)^0,w,c
 46850   00BA76  1042               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 46851   00BA78  E106               	bnz	i2u2421_40
 46852   00BA7A  0E25               	movlw	37
 46853   00BA7C  5C40               	subwf	??i2_checkCANTimeout^0,w,c
 46854   00BA7E  0EF4               	movlw	244
 46855   00BA80  5841               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 46856   00BA82  A0D8               	btfss	status,0,c
 46857   00BA84  0012               	return	
 46858   00BA86                     i2u2421_40:
 46859                           
 46860                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 46861   00BA86  0E01               	movlw	1
 46862   00BA88  0100               	movlb	0	; () banked
 46863   00BA8A  6FB8               	movwf	_canTransmitFailed& (0+255),b
 46864                           
 46865                           ; BSR set to: 0
 46866                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 46867   00BA8C  010F               	movlb	15	; () banked
 46868   00BA8E  9720               	bcf	32,3,b	;volatile
 46869                           
 46870                           ; BSR set to: 15
 46871                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 46872   00BA90  EC09  F02E         	call	i2_checkTxFifo	;wreg free
 46873                           
 46874                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 46875   00BA94  0101               	movlb	1	; () banked
 46876   00BA96  4B6A               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46877   00BA98  2B6B               	incf	(_canDiagnostics+5)& (0+255),f,b
 46878                           
 46879                           ; BSR set to: 1
 46880                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 46881   00BA9A  EC45  F064         	call	i2_updateModuleErrorStatus	;wreg free
 46882   00BA9E  0012               	return		;funcret
 46883   00BAA0                     __end_ofi2_checkCANTimeout:
 46884                           	callstack 0
 46885                           
 46886 ;; *************** function i2_canTxError *****************
 46887 ;; Defined at:
 46888 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 46889 ;; Parameters:    Size  Location     Type
 46890 ;;		None
 46891 ;; Auto vars:     Size  Location     Type
 46892 ;;		None
 46893 ;; Return value:  Size  Location     Type
 46894 ;;                  1    wreg      void 
 46895 ;; Registers used:
 46896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46897 ;; Tracked objects:
 46898 ;;		On entry : 0/0
 46899 ;;		On exit  : 0/0
 46900 ;;		Unchanged: 0/0
 46901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46906 ;;Total ram usage:        0 bytes
 46907 ;; Hardware stack levels used: 1
 46908 ;; Hardware stack levels required when called: 2
 46909 ;; This function calls:
 46910 ;;		i2_checkTxFifo
 46911 ;;		i2_updateModuleErrorStatus
 46912 ;; This function is called by:
 46913 ;;		i2_canIsr
 46914 ;; This function uses a non-reentrant model
 46915 ;;
 46916                           
 46917                           	psect	text217
 46918   00B55C                     __ptext217:
 46919                           	callstack 0
 46920   00B55C                     i2_canTxError:
 46921                           	callstack 2
 46922                           
 46923                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 46924                           
 46925                           ;incstack = 0
 46926   00B55C  010F               	movlb	15	; () banked
 46927   00B55E  AB20               	btfss	32,5,b	;volatile
 46928   00B560  D012               	goto	i2l23093
 46929                           
 46930                           ; BSR set to: 15
 46931                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 46932   00B562  0E01               	movlw	1
 46933   00B564  0100               	movlb	0	; () banked
 46934   00B566  6FB8               	movwf	_canTransmitFailed& (0+255),b
 46935                           
 46936                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 46937   00B568  0E00               	movlw	0
 46938   00B56A  6E15               	movwf	_canTransmitTimeout^0,c
 46939   00B56C  0E00               	movlw	0
 46940   00B56E  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 46941   00B570  0E00               	movlw	0
 46942   00B572  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 46943   00B574  0E00               	movlw	0
 46944   00B576  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 46945                           
 46946                           ; BSR set to: 0
 46947                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 46948   00B578  010F               	movlb	15	; () banked
 46949   00B57A  9720               	bcf	32,3,b	;volatile
 46950                           
 46951                           ; BSR set to: 15
 46952                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 46953   00B57C  0101               	movlb	1	; () banked
 46954   00B57E  4B7E               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 46955   00B580  2B7F               	incf	(_canDiagnostics+25)& (0+255),f,b
 46956                           
 46957                           ; BSR set to: 1
 46958                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 46959   00B582  EC45  F064         	call	i2_updateModuleErrorStatus	;wreg free
 46960   00B586                     i2l23093:
 46961                           
 46962                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 46963   00B586  010F               	movlb	15	; () banked
 46964   00B588  A920               	btfss	32,4,b	;volatile
 46965   00B58A  D012               	goto	i2l23103
 46966                           
 46967                           ; BSR set to: 15
 46968                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 46969   00B58C  0E01               	movlw	1
 46970   00B58E  0100               	movlb	0	; () banked
 46971   00B590  6FB8               	movwf	_canTransmitFailed& (0+255),b
 46972                           
 46973                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 46974   00B592  0E00               	movlw	0
 46975   00B594  6E15               	movwf	_canTransmitTimeout^0,c
 46976   00B596  0E00               	movlw	0
 46977   00B598  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 46978   00B59A  0E00               	movlw	0
 46979   00B59C  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 46980   00B59E  0E00               	movlw	0
 46981   00B5A0  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 46982                           
 46983                           ; BSR set to: 0
 46984                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 46985   00B5A2  010F               	movlb	15	; () banked
 46986   00B5A4  9720               	bcf	32,3,b	;volatile
 46987                           
 46988                           ; BSR set to: 15
 46989                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 46990   00B5A6  0101               	movlb	1	; () banked
 46991   00B5A8  4B6A               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46992   00B5AA  2B6B               	incf	(_canDiagnostics+5)& (0+255),f,b
 46993                           
 46994                           ; BSR set to: 1
 46995                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 46996   00B5AC  EC45  F064         	call	i2_updateModuleErrorStatus	;wreg free
 46997   00B5B0                     i2l23103:
 46998                           
 46999                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 47000   00B5B0  0100               	movlb	0	; () banked
 47001   00B5B2  51B8               	movf	_canTransmitFailed& (0+255),w,b
 47002   00B5B4  A4D8               	btfss	status,2,c
 47003                           
 47004                           ; BSR set to: 0
 47005                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 47006   00B5B6  EC09  F02E         	call	i2_checkTxFifo	;wreg free
 47007                           
 47008                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 47009   00B5BA  9A77               	bcf	119,5,c	;volatile
 47010   00B5BC  0012               	return		;funcret
 47011   00B5BE                     __end_ofi2_canTxError:
 47012                           	callstack 0
 47013                           
 47014 ;; *************** function i2_checkTxFifo *****************
 47015 ;; Defined at:
 47016 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 47017 ;; Parameters:    Size  Location     Type
 47018 ;;		None
 47019 ;; Auto vars:     Size  Location     Type
 47020 ;;  mp              2   19[COMRAM] PTR struct Message
 47021 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47022 ;;  m               2   17[COMRAM] PTR struct Message
 47023 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47024 ;; Return value:  Size  Location     Type
 47025 ;;                  1    wreg      void 
 47026 ;; Registers used:
 47027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47028 ;; Tracked objects:
 47029 ;;		On entry : 0/0
 47030 ;;		On exit  : 0/0
 47031 ;;		Unchanged: 0/0
 47032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47034 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47035 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47036 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47037 ;;Total ram usage:        9 bytes
 47038 ;; Hardware stack levels used: 1
 47039 ;; Hardware stack levels required when called: 1
 47040 ;; This function calls:
 47041 ;;		i2_getNextWriteMessage
 47042 ;;		i2_isEvent
 47043 ;;		i2_pop
 47044 ;;		i2_tickGet
 47045 ;;		i2_updateModuleErrorStatus
 47046 ;; This function is called by:
 47047 ;;		i2_canIsr
 47048 ;;		i2_checkCANTimeout
 47049 ;;		i2_canTxError
 47050 ;; This function uses a non-reentrant model
 47051 ;;
 47052                           
 47053                           	psect	text218
 47054   005C12                     __ptext218:
 47055                           	callstack 0
 47056   005C12                     i2_checkTxFifo:
 47057                           	callstack 3
 47058                           
 47059                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 47060                           
 47061                           ;incstack = 0
 47062   005C12  9877               	bcf	119,4,c	;volatile
 47063                           
 47064                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 47065   005C14  010F               	movlb	15	; () banked
 47066   005C16  B720               	btfsc	32,3,b	;volatile
 47067   005C18  D144               	goto	i2l2561
 47068                           
 47069                           ; BSR set to: 15
 47070                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 47071   005C1A  0EA9               	movlw	low _txQueue
 47072   005C1C  6E2B               	movwf	i2pop@q^0,c
 47073   005C1E  0E01               	movlw	high _txQueue
 47074   005C20  6E2C               	movwf	(i2pop@q+1)^0,c
 47075   005C22  ECA6  F04F         	call	i2_pop	;wreg free
 47076   005C26  C02B  F03E         	movff	?i2_pop,i2checkTxFifo@mp
 47077   005C2A  C02C  F03F         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 47078                           
 47079                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 47080   005C2E  503E               	movf	i2checkTxFifo@mp^0,w,c
 47081   005C30  103F               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 47082   005C32  B4D8               	btfsc	status,2,c
 47083   005C34  D128               	goto	i2l21663
 47084                           
 47085                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 47086   005C36  EE20 F001          	lfsr	2,1
 47087   005C3A  503E               	movf	i2checkTxFifo@mp^0,w,c
 47088   005C3C  26D9               	addwf	fsr2l,f,c
 47089   005C3E  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47090   005C40  22DA               	addwfc	fsr2h,f,c
 47091   005C42  50DF               	movf	indf2,w,c
 47092   005C44  6E37               	movwf	??i2_checkTxFifo^0,c
 47093   005C46  6A38               	clrf	(??i2_checkTxFifo+1)^0,c
 47094   005C48  0E29               	movlw	low _priorities
 47095   005C4A  2437               	addwf	??i2_checkTxFifo^0,w,c
 47096   005C4C  6EF6               	movwf	tblptrl,c
 47097   005C4E  0EED               	movlw	high _priorities
 47098   005C50  2038               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 47099   005C52  6EF7               	movwf	tblptrh,c
 47100   005C54                     	if	1	;There are 3 active tblptr bytes
 47101   005C54  6AF8               	clrf	tblptru,c
 47102   005C56  0E00               	movlw	low (__mediumconst shr (0+16))
 47103   005C58  22F8               	addwfc	tblptru,f,c
 47104   005C5A                     	endif
 47105   005C5A  0008               	tblrd		*
 47106   005C5C  50F5               	movf	tablat,w,c
 47107   005C5E  6E39               	movwf	(??i2_checkTxFifo+2)^0,c
 47108   005C60  6A3A               	clrf	(??i2_checkTxFifo+3)^0,c
 47109   005C62  0E86               	movlw	low _canPri
 47110   005C64  2439               	addwf	(??i2_checkTxFifo+2)^0,w,c
 47111   005C66  6EF6               	movwf	tblptrl,c
 47112   005C68  0EEE               	movlw	high _canPri
 47113   005C6A  203A               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 47114   005C6C  6EF7               	movwf	tblptrh,c
 47115   005C6E                     	if	1	;There are 3 active tblptr bytes
 47116   005C6E  6AF8               	clrf	tblptru,c
 47117   005C70  0E00               	movlw	low (__mediumconst shr (0+16))
 47118   005C72  22F8               	addwfc	tblptru,f,c
 47119   005C74                     	endif
 47120   005C74  0008               	tblrd		*
 47121   005C76  CFF5 F03B          	movff	tablat,??i2_checkTxFifo+4
 47122   005C7A  0100               	movlb	0	; () banked
 47123   005C7C  39B9               	swapf	_canId& (0+255),w,b
 47124   005C7E  46E8               	rlncf	wreg,f,c
 47125   005C80  0B1F               	andlw	31
 47126   005C82  0B0F               	andlw	15
 47127   005C84  103B               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 47128   005C86  010F               	movlb	15	; () banked
 47129   005C88  6F21               	movwf	33,b	;volatile
 47130                           
 47131                           ; BSR set to: 15
 47132                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 47133   005C8A  C0B9  F037         	movff	_canId,??i2_checkTxFifo
 47134   005C8E  0E07               	movlw	7
 47135   005C90  1637               	andwf	??i2_checkTxFifo^0,f,c
 47136   005C92  0E05               	movlw	5
 47137   005C94  6E38               	movwf	(??i2_checkTxFifo+1)^0,c
 47138   005C96                     i2u2215_45:
 47139   005C96  90D8               	bcf	status,0,c
 47140   005C98  3637               	rlcf	??i2_checkTxFifo^0,f,c
 47141   005C9A  2E38               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 47142   005C9C  D7FC               	goto	i2u2215_45
 47143   005C9E  5037               	movf	??i2_checkTxFifo^0,w,c
 47144   005CA0  6F22               	movwf	34,b	;volatile
 47145                           
 47146                           ; BSR set to: 15
 47147                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 47148   005CA2  EE20 F001          	lfsr	2,1
 47149   005CA6  503E               	movf	i2checkTxFifo@mp^0,w,c
 47150   005CA8  26D9               	addwf	fsr2l,f,c
 47151   005CAA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47152   005CAC  22DA               	addwfc	fsr2h,f,c
 47153   005CAE  50DF               	movf	indf2,w,c
 47154   005CB0  6F26               	movwf	38,b	;volatile
 47155                           
 47156                           ; BSR set to: 15
 47157                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 47158   005CB2  EE20 F002          	lfsr	2,2
 47159   005CB6  503E               	movf	i2checkTxFifo@mp^0,w,c
 47160   005CB8  26D9               	addwf	fsr2l,f,c
 47161   005CBA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47162   005CBC  22DA               	addwfc	fsr2h,f,c
 47163   005CBE  50DF               	movf	indf2,w,c
 47164   005CC0  6F27               	movwf	39,b	;volatile
 47165                           
 47166                           ; BSR set to: 15
 47167                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 47168   005CC2  EE20 F003          	lfsr	2,3
 47169   005CC6  503E               	movf	i2checkTxFifo@mp^0,w,c
 47170   005CC8  26D9               	addwf	fsr2l,f,c
 47171   005CCA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47172   005CCC  22DA               	addwfc	fsr2h,f,c
 47173   005CCE  50DF               	movf	indf2,w,c
 47174   005CD0  6F28               	movwf	40,b	;volatile
 47175                           
 47176                           ; BSR set to: 15
 47177                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 47178   005CD2  EE20 F004          	lfsr	2,4
 47179   005CD6  503E               	movf	i2checkTxFifo@mp^0,w,c
 47180   005CD8  26D9               	addwf	fsr2l,f,c
 47181   005CDA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47182   005CDC  22DA               	addwfc	fsr2h,f,c
 47183   005CDE  50DF               	movf	indf2,w,c
 47184   005CE0  6F29               	movwf	41,b	;volatile
 47185                           
 47186                           ; BSR set to: 15
 47187                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 47188   005CE2  EE20 F005          	lfsr	2,5
 47189   005CE6  503E               	movf	i2checkTxFifo@mp^0,w,c
 47190   005CE8  26D9               	addwf	fsr2l,f,c
 47191   005CEA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47192   005CEC  22DA               	addwfc	fsr2h,f,c
 47193   005CEE  50DF               	movf	indf2,w,c
 47194   005CF0  6F2A               	movwf	42,b	;volatile
 47195                           
 47196                           ; BSR set to: 15
 47197                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 47198   005CF2  EE20 F006          	lfsr	2,6
 47199   005CF6  503E               	movf	i2checkTxFifo@mp^0,w,c
 47200   005CF8  26D9               	addwf	fsr2l,f,c
 47201   005CFA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47202   005CFC  22DA               	addwfc	fsr2h,f,c
 47203   005CFE  50DF               	movf	indf2,w,c
 47204   005D00  6F2B               	movwf	43,b	;volatile
 47205                           
 47206                           ; BSR set to: 15
 47207                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 47208   005D02  EE20 F007          	lfsr	2,7
 47209   005D06  503E               	movf	i2checkTxFifo@mp^0,w,c
 47210   005D08  26D9               	addwf	fsr2l,f,c
 47211   005D0A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47212   005D0C  22DA               	addwfc	fsr2h,f,c
 47213   005D0E  50DF               	movf	indf2,w,c
 47214   005D10  6F2C               	movwf	44,b	;volatile
 47215                           
 47216                           ; BSR set to: 15
 47217                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 47218   005D12  EE20 F008          	lfsr	2,8
 47219   005D16  503E               	movf	i2checkTxFifo@mp^0,w,c
 47220   005D18  26D9               	addwf	fsr2l,f,c
 47221   005D1A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47222   005D1C  22DA               	addwfc	fsr2h,f,c
 47223   005D1E  50DF               	movf	indf2,w,c
 47224   005D20  6F2D               	movwf	45,b	;volatile
 47225                           
 47226                           ; BSR set to: 15
 47227                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 47228   005D22  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 47229   005D26  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 47230   005D2A  50DF               	movf	indf2,w,c
 47231   005D2C  6F25               	movwf	37,b	;volatile
 47232                           
 47233                           ; BSR set to: 15
 47234                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 47235   005D2E  ECCA  F05B         	call	i2_tickGet	;wreg free
 47236   005D32  C02B  F015         	movff	?i2_tickGet,_canTransmitTimeout
 47237   005D36  C02C  F016         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 47238   005D3A  C02D  F017         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 47239   005D3E  C02E  F018         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 47240                           
 47241                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 47242   005D42  0E00               	movlw	0
 47243   005D44  0100               	movlb	0	; () banked
 47244   005D46  6FB8               	movwf	_canTransmitFailed& (0+255),b
 47245                           
 47246                           ; BSR set to: 0
 47247                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 47248   005D48  010F               	movlb	15	; () banked
 47249   005D4A  8720               	bsf	32,3,b	;volatile
 47250                           
 47251                           ; BSR set to: 15
 47252                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 47253   005D4C  8876               	bsf	118,4,c	;volatile
 47254                           
 47255                           ; BSR set to: 15
 47256                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 47257   005D4E  0101               	movlb	1	; () banked
 47258   005D50  4B72               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 47259   005D52  2B73               	incf	(_canDiagnostics+13)& (0+255),f,b
 47260                           
 47261                           ; BSR set to: 1
 47262                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 47263   005D54  EE20 F001          	lfsr	2,1
 47264   005D58  503E               	movf	i2checkTxFifo@mp^0,w,c
 47265   005D5A  26D9               	addwf	fsr2l,f,c
 47266   005D5C  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47267   005D5E  22DA               	addwfc	fsr2h,f,c
 47268   005D60  50DF               	movf	indf2,w,c
 47269   005D62  EC3C  F063         	call	i2_isEvent
 47270   005D66  0900               	iorlw	0
 47271   005D68  B4D8               	btfsc	status,2,c
 47272   005D6A  0012               	return	
 47273                           
 47274                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 47275   005D6C  0E26               	movlw	low _rxQueue
 47276   005D6E  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 47277   005D70  EC5E  F048         	call	i2_getNextWriteMessage	;wreg free
 47278   005D74  C02B  F03C         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 47279   005D78  C02C  F03D         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 47280                           
 47281                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 47282   005D7C  503C               	movf	i2checkTxFifo@m^0,w,c
 47283   005D7E  103D               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 47284   005D80  A4D8               	btfss	status,2,c
 47285   005D82  D006               	goto	i2l21645
 47286                           
 47287                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 47288   005D84  0101               	movlb	1	; () banked
 47289   005D86  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47290   005D88  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 47291                           
 47292                           ; BSR set to: 1
 47293                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 47294   005D8A  EC45  F064         	call	i2_updateModuleErrorStatus	;wreg free
 47295                           
 47296                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 47297   005D8E  0012               	return	
 47298   005D90                     i2l21645:
 47299                           
 47300                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 47301   005D90  EE20 F001          	lfsr	2,1
 47302   005D94  503E               	movf	i2checkTxFifo@mp^0,w,c
 47303   005D96  26D9               	addwf	fsr2l,f,c
 47304   005D98  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47305   005D9A  22DA               	addwfc	fsr2h,f,c
 47306   005D9C  EE10 F001          	lfsr	1,1
 47307   005DA0  503C               	movf	i2checkTxFifo@m^0,w,c
 47308   005DA2  26E1               	addwf	fsr1l,f,c
 47309   005DA4  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47310   005DA6  22E2               	addwfc	fsr1h,f,c
 47311   005DA8  CFDF FFE7          	movff	indf2,indf1
 47312                           
 47313                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 47314   005DAC  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 47315   005DB0  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 47316   005DB4  C03C  FFE1         	movff	i2checkTxFifo@m,fsr1l
 47317   005DB8  C03D  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 47318   005DBC  CFDF FFE7          	movff	indf2,indf1
 47319                           
 47320                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 47321   005DC0  EE20 F002          	lfsr	2,2
 47322   005DC4  503E               	movf	i2checkTxFifo@mp^0,w,c
 47323   005DC6  26D9               	addwf	fsr2l,f,c
 47324   005DC8  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47325   005DCA  22DA               	addwfc	fsr2h,f,c
 47326   005DCC  EE10 F002          	lfsr	1,2
 47327   005DD0  503C               	movf	i2checkTxFifo@m^0,w,c
 47328   005DD2  26E1               	addwf	fsr1l,f,c
 47329   005DD4  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47330   005DD6  22E2               	addwfc	fsr1h,f,c
 47331   005DD8  CFDF FFE7          	movff	indf2,indf1
 47332                           
 47333                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 47334   005DDC  EE20 F003          	lfsr	2,3
 47335   005DE0  503E               	movf	i2checkTxFifo@mp^0,w,c
 47336   005DE2  26D9               	addwf	fsr2l,f,c
 47337   005DE4  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47338   005DE6  22DA               	addwfc	fsr2h,f,c
 47339   005DE8  EE10 F003          	lfsr	1,3
 47340   005DEC  503C               	movf	i2checkTxFifo@m^0,w,c
 47341   005DEE  26E1               	addwf	fsr1l,f,c
 47342   005DF0  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47343   005DF2  22E2               	addwfc	fsr1h,f,c
 47344   005DF4  CFDF FFE7          	movff	indf2,indf1
 47345                           
 47346                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 47347   005DF8  EE20 F004          	lfsr	2,4
 47348   005DFC  503E               	movf	i2checkTxFifo@mp^0,w,c
 47349   005DFE  26D9               	addwf	fsr2l,f,c
 47350   005E00  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47351   005E02  22DA               	addwfc	fsr2h,f,c
 47352   005E04  EE10 F004          	lfsr	1,4
 47353   005E08  503C               	movf	i2checkTxFifo@m^0,w,c
 47354   005E0A  26E1               	addwf	fsr1l,f,c
 47355   005E0C  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47356   005E0E  22E2               	addwfc	fsr1h,f,c
 47357   005E10  CFDF FFE7          	movff	indf2,indf1
 47358                           
 47359                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 47360   005E14  EE20 F005          	lfsr	2,5
 47361   005E18  503E               	movf	i2checkTxFifo@mp^0,w,c
 47362   005E1A  26D9               	addwf	fsr2l,f,c
 47363   005E1C  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47364   005E1E  22DA               	addwfc	fsr2h,f,c
 47365   005E20  EE10 F005          	lfsr	1,5
 47366   005E24  503C               	movf	i2checkTxFifo@m^0,w,c
 47367   005E26  26E1               	addwf	fsr1l,f,c
 47368   005E28  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47369   005E2A  22E2               	addwfc	fsr1h,f,c
 47370   005E2C  CFDF FFE7          	movff	indf2,indf1
 47371                           
 47372                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 47373   005E30  EE20 F006          	lfsr	2,6
 47374   005E34  503E               	movf	i2checkTxFifo@mp^0,w,c
 47375   005E36  26D9               	addwf	fsr2l,f,c
 47376   005E38  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47377   005E3A  22DA               	addwfc	fsr2h,f,c
 47378   005E3C  EE10 F006          	lfsr	1,6
 47379   005E40  503C               	movf	i2checkTxFifo@m^0,w,c
 47380   005E42  26E1               	addwf	fsr1l,f,c
 47381   005E44  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47382   005E46  22E2               	addwfc	fsr1h,f,c
 47383   005E48  CFDF FFE7          	movff	indf2,indf1
 47384                           
 47385                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 47386   005E4C  EE20 F007          	lfsr	2,7
 47387   005E50  503E               	movf	i2checkTxFifo@mp^0,w,c
 47388   005E52  26D9               	addwf	fsr2l,f,c
 47389   005E54  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47390   005E56  22DA               	addwfc	fsr2h,f,c
 47391   005E58  EE10 F007          	lfsr	1,7
 47392   005E5C  503C               	movf	i2checkTxFifo@m^0,w,c
 47393   005E5E  26E1               	addwf	fsr1l,f,c
 47394   005E60  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47395   005E62  22E2               	addwfc	fsr1h,f,c
 47396   005E64  CFDF FFE7          	movff	indf2,indf1
 47397                           
 47398                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 47399   005E68  EE20 F008          	lfsr	2,8
 47400   005E6C  503E               	movf	i2checkTxFifo@mp^0,w,c
 47401   005E6E  26D9               	addwf	fsr2l,f,c
 47402   005E70  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 47403   005E72  22DA               	addwfc	fsr2h,f,c
 47404   005E74  EE10 F008          	lfsr	1,8
 47405   005E78  503C               	movf	i2checkTxFifo@m^0,w,c
 47406   005E7A  26E1               	addwf	fsr1l,f,c
 47407   005E7C  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 47408   005E7E  22E2               	addwfc	fsr1h,f,c
 47409   005E80  CFDF FFE7          	movff	indf2,indf1
 47410   005E84  0012               	return	
 47411   005E86                     i2l21663:
 47412                           
 47413                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 47414   005E86  0E00               	movlw	0
 47415   005E88  6E15               	movwf	_canTransmitTimeout^0,c
 47416   005E8A  0E00               	movlw	0
 47417   005E8C  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 47418   005E8E  0E00               	movlw	0
 47419   005E90  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 47420   005E92  0E00               	movlw	0
 47421   005E94  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 47422                           
 47423                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 47424   005E96  0E00               	movlw	0
 47425   005E98  010F               	movlb	15	; () banked
 47426   005E9A  6F20               	movwf	32,b	;volatile
 47427                           
 47428                           ; BSR set to: 15
 47429                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 47430   005E9C  9877               	bcf	119,4,c	;volatile
 47431                           
 47432                           ; BSR set to: 15
 47433                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 47434   005E9E  9876               	bcf	118,4,c	;volatile
 47435   005EA0  0012               	return	
 47436   005EA2                     i2l2561:
 47437                           
 47438                           ; BSR set to: 15
 47439                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 47440   005EA2  9877               	bcf	119,4,c	;volatile
 47441                           
 47442                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 47443   005EA4  8876               	bsf	118,4,c	;volatile
 47444   005EA6  0012               	return		;funcret
 47445   005EA8                     __end_ofi2_checkTxFifo:
 47446                           	callstack 0
 47447                           
 47448 ;; *************** function i2_tickGet *****************
 47449 ;; Defined at:
 47450 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 47451 ;; Parameters:    Size  Location     Type
 47452 ;;		None
 47453 ;; Auto vars:     Size  Location     Type
 47454 ;;  currentTime     4    6[COMRAM] struct _TickValue
 47455 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 47456 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 47457 ;; Return value:  Size  Location     Type
 47458 ;;                  4    0[COMRAM] unsigned long 
 47459 ;; Registers used:
 47460 ;;		wreg, status,2, status,0
 47461 ;; Tracked objects:
 47462 ;;		On entry : 0/0
 47463 ;;		On exit  : 0/0
 47464 ;;		Unchanged: 0/0
 47465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47467 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47469 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47470 ;;Total ram usage:       10 bytes
 47471 ;; Hardware stack levels used: 1
 47472 ;; This function calls:
 47473 ;;		Nothing
 47474 ;; This function is called by:
 47475 ;;		i2_checkTxFifo
 47476 ;;		i2_checkCANTimeout
 47477 ;; This function uses a non-reentrant model
 47478 ;;
 47479                           
 47480                           	psect	text219
 47481   00B794                     __ptext219:
 47482                           	callstack 0
 47483   00B794                     i2_tickGet:
 47484                           	callstack 3
 47485                           
 47486                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 47487                           
 47488                           ;incstack = 0
 47489   00B794  0E00               	movlw	0
 47490   00B796  6E33               	movwf	(i2tickGet@currentTime+2)^0,c
 47491                           
 47492                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 47493   00B798  0E00               	movlw	0
 47494   00B79A  6E34               	movwf	(i2tickGet@currentTime+3)^0,c
 47495                           
 47496                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 47497   00B79C  9AF2               	bcf	242,5,c	;volatile
 47498   00B79E                     i2l12959:
 47499                           
 47500                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 47501   00B79E  0E00               	movlw	0
 47502   00B7A0  B4F2               	btfsc	242,2,c	;volatile
 47503   00B7A2  0E01               	movlw	1
 47504   00B7A4  6E30               	movwf	i2tickGet@IntFlag1^0,c
 47505                           
 47506                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 47507   00B7A6  CFD6 F031          	movff	4054,i2tickGet@currentTime	;volatile
 47508                           
 47509                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 47510   00B7AA  CFD7 F032          	movff	4055,i2tickGet@currentTime+1	;volatile
 47511                           
 47512                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 47513   00B7AE  0E00               	movlw	0
 47514   00B7B0  B4F2               	btfsc	242,2,c	;volatile
 47515   00B7B2  0E01               	movlw	1
 47516   00B7B4  6E2F               	movwf	i2tickGet@IntFlag2^0,c
 47517                           
 47518                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 47519   00B7B6  502F               	movf	i2tickGet@IntFlag2^0,w,c
 47520   00B7B8  1830               	xorwf	i2tickGet@IntFlag1^0,w,c
 47521   00B7BA  A4D8               	btfss	status,2,c
 47522   00B7BC  D7F0               	goto	i2l12959
 47523                           
 47524                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 47525   00B7BE  5030               	movf	i2tickGet@IntFlag1^0,w,c
 47526   00B7C0  B4D8               	btfsc	status,2,c
 47527   00B7C2  D006               	goto	i2l12979
 47528                           
 47529                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 47530   00B7C4  94F2               	bcf	242,2,c	;volatile
 47531                           
 47532                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 47533   00B7C6  0100               	movlb	0	; () banked
 47534   00B7C8  2BC6               	incf	_timerExtension1& (0+255),f,b	;volatile
 47535                           
 47536                           ; BSR set to: 0
 47537                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 47538   00B7CA  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 47539   00B7CC  B4D8               	btfsc	status,2,c
 47540                           
 47541                           ; BSR set to: 0
 47542                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 47543   00B7CE  2BC5               	incf	_timerExtension2& (0+255),f,b	;volatile
 47544   00B7D0                     i2l12979:
 47545                           
 47546                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 47547   00B7D0  0100               	movlb	0	; () banked
 47548   00B7D2  51C6               	movf	_timerExtension1& (0+255),w,b	;volatile
 47549   00B7D4  2633               	addwf	(i2tickGet@currentTime+2)^0,f,c
 47550                           
 47551                           ; BSR set to: 0
 47552                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 47553   00B7D6  51C5               	movf	_timerExtension2& (0+255),w,b	;volatile
 47554   00B7D8  2634               	addwf	(i2tickGet@currentTime+3)^0,f,c
 47555                           
 47556                           ; BSR set to: 0
 47557                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 47558   00B7DA  8AF2               	bsf	242,5,c	;volatile
 47559                           
 47560                           ; BSR set to: 0
 47561                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 47562   00B7DC  C031  F02B         	movff	i2tickGet@currentTime,?i2_tickGet
 47563   00B7E0  C032  F02C         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 47564   00B7E4  C033  F02D         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 47565   00B7E8  C034  F02E         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 47566                           
 47567                           ; BSR set to: 0
 47568   00B7EC  0012               	return		;funcret
 47569   00B7EE                     __end_ofi2_tickGet:
 47570                           	callstack 0
 47571                           
 47572 ;; *************** function i2_pop *****************
 47573 ;; Defined at:
 47574 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 47575 ;; Parameters:    Size  Location     Type
 47576 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 47577 ;;		 -> txQueue(5), rxQueue(5), 
 47578 ;; Auto vars:     Size  Location     Type
 47579 ;;  ret             2    7[COMRAM] PTR struct Message
 47580 ;;		 -> txBuffers(72), rxBuffers(288), 
 47581 ;; Return value:  Size  Location     Type
 47582 ;;                  2    0[COMRAM] PTR struct Message
 47583 ;; Registers used:
 47584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47585 ;; Tracked objects:
 47586 ;;		On entry : 0/0
 47587 ;;		On exit  : 0/0
 47588 ;;		Unchanged: 0/0
 47589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47592 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47593 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47594 ;;Total ram usage:        9 bytes
 47595 ;; Hardware stack levels used: 1
 47596 ;; This function calls:
 47597 ;;		Nothing
 47598 ;; This function is called by:
 47599 ;;		i2_checkTxFifo
 47600 ;; This function uses a non-reentrant model
 47601 ;;
 47602                           
 47603                           	psect	text220
 47604   009F4C                     __ptext220:
 47605                           	callstack 0
 47606   009F4C                     i2_pop:
 47607                           	callstack 3
 47608                           
 47609                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 47610                           
 47611                           ; BSR set to: 0
 47612                           ;incstack = 0
 47613   009F4C  EE20 F002          	lfsr	2,2
 47614   009F50  502B               	movf	i2pop@q^0,w,c
 47615   009F52  26D9               	addwf	fsr2l,f,c
 47616   009F54  502C               	movf	(i2pop@q+1)^0,w,c
 47617   009F56  22DA               	addwfc	fsr2h,f,c
 47618   009F58  EE10 F003          	lfsr	1,3
 47619   009F5C  502B               	movf	i2pop@q^0,w,c
 47620   009F5E  26E1               	addwf	fsr1l,f,c
 47621   009F60  502C               	movf	(i2pop@q+1)^0,w,c
 47622   009F62  22E2               	addwfc	fsr1h,f,c
 47623   009F64  50DE               	movf	postinc2,w,c
 47624   009F66  18E6               	xorwf	postinc1,w,c
 47625   009F68  A4D8               	btfss	status,2,c
 47626   009F6A  D005               	goto	i2l20589
 47627                           
 47628                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 47629   009F6C  0E00               	movlw	0
 47630   009F6E  6E2B               	movwf	?i2_pop^0,c
 47631   009F70  0E00               	movlw	0
 47632   009F72  6E2C               	movwf	(?i2_pop+1)^0,c
 47633   009F74  0012               	return	
 47634   009F76                     i2l20589:
 47635                           
 47636                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 47637   009F76  EE20 F002          	lfsr	2,2
 47638   009F7A  502B               	movf	i2pop@q^0,w,c
 47639   009F7C  26D9               	addwf	fsr2l,f,c
 47640   009F7E  502C               	movf	(i2pop@q+1)^0,w,c
 47641   009F80  22DA               	addwfc	fsr2h,f,c
 47642   009F82  50DF               	movf	indf2,w,c
 47643   009F84  6E2D               	movwf	??i2_pop^0,c
 47644   009F86  502D               	movf	??i2_pop^0,w,c
 47645   009F88  0D09               	mullw	9
 47646   009F8A  CFF3 F02E          	movff	prodl,??i2_pop+1
 47647   009F8E  CFF4 F02F          	movff	prodh,??i2_pop+2
 47648   009F92  C02B  FFD9         	movff	i2pop@q,fsr2l
 47649   009F96  C02C  FFDA         	movff	i2pop@q+1,fsr2h
 47650   009F9A  CFDE F030          	movff	postinc2,??i2_pop+3
 47651   009F9E  CFDD F031          	movff	postdec2,??i2_pop+4
 47652   009FA2  502E               	movf	(??i2_pop+1)^0,w,c
 47653   009FA4  2430               	addwf	(??i2_pop+3)^0,w,c
 47654   009FA6  6E32               	movwf	i2pop@ret^0,c
 47655   009FA8  502F               	movf	(??i2_pop+2)^0,w,c
 47656   009FAA  2031               	addwfc	(??i2_pop+4)^0,w,c
 47657   009FAC  6E33               	movwf	(i2pop@ret+1)^0,c
 47658   009FAE  EE20 F002          	lfsr	2,2
 47659   009FB2  502B               	movf	i2pop@q^0,w,c
 47660   009FB4  26D9               	addwf	fsr2l,f,c
 47661   009FB6  502C               	movf	(i2pop@q+1)^0,w,c
 47662   009FB8  22DA               	addwfc	fsr2h,f,c
 47663   009FBA  2ADF               	incf	indf2,f,c
 47664                           
 47665                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 47666   009FBC  EE20 F004          	lfsr	2,4
 47667   009FC0  502B               	movf	i2pop@q^0,w,c
 47668   009FC2  26D9               	addwf	fsr2l,f,c
 47669   009FC4  502C               	movf	(i2pop@q+1)^0,w,c
 47670   009FC6  22DA               	addwfc	fsr2h,f,c
 47671   009FC8  EE10 F002          	lfsr	1,2
 47672   009FCC  502B               	movf	i2pop@q^0,w,c
 47673   009FCE  26E1               	addwf	fsr1l,f,c
 47674   009FD0  502C               	movf	(i2pop@q+1)^0,w,c
 47675   009FD2  22E2               	addwfc	fsr1h,f,c
 47676   009FD4  50DE               	movf	postinc2,w,c
 47677   009FD6  5CE6               	subwf	postinc1,w,c
 47678   009FD8  A0D8               	btfss	status,0,c
 47679   009FDA  D007               	goto	i2l20597
 47680   009FDC  EE20 F002          	lfsr	2,2
 47681   009FE0  502B               	movf	i2pop@q^0,w,c
 47682   009FE2  26D9               	addwf	fsr2l,f,c
 47683   009FE4  502C               	movf	(i2pop@q+1)^0,w,c
 47684   009FE6  22DA               	addwfc	fsr2h,f,c
 47685   009FE8  6ADF               	clrf	indf2,c
 47686   009FEA                     i2l20597:
 47687                           
 47688                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 47689   009FEA  C032  F02B         	movff	i2pop@ret,?i2_pop
 47690   009FEE  C033  F02C         	movff	i2pop@ret+1,?i2_pop+1
 47691   009FF2  0012               	return		;funcret
 47692   009FF4                     __end_ofi2_pop:
 47693                           	callstack 0
 47694                           
 47695 ;; *************** function i2_isEvent *****************
 47696 ;; Defined at:
 47697 ;;		line 1118 in file "../../VLCBlib_PIC/vlcb.c"
 47698 ;; Parameters:    Size  Location     Type
 47699 ;;  opc             1    wreg     unsigned char 
 47700 ;; Auto vars:     Size  Location     Type
 47701 ;;  opc             1    1[COMRAM] unsigned char 
 47702 ;; Return value:  Size  Location     Type
 47703 ;;                  1    wreg      enum E12766
 47704 ;; Registers used:
 47705 ;;		wreg, status,2, status,0
 47706 ;; Tracked objects:
 47707 ;;		On entry : 0/0
 47708 ;;		On exit  : 0/0
 47709 ;;		Unchanged: 0/0
 47710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47715 ;;Total ram usage:        2 bytes
 47716 ;; Hardware stack levels used: 1
 47717 ;; This function calls:
 47718 ;;		Nothing
 47719 ;; This function is called by:
 47720 ;;		i2_checkTxFifo
 47721 ;; This function uses a non-reentrant model
 47722 ;;
 47723                           
 47724                           	psect	text221
 47725   00C678                     __ptext221:
 47726                           	callstack 0
 47727   00C678                     i2_isEvent:
 47728                           	callstack 3
 47729                           
 47730                           ;incstack = 0
 47731                           ;i2isEvent@opc stored from wreg
 47732   00C678  6E2C               	movwf	i2isEvent@opc^0,c
 47733                           
 47734                           ;../../VLCBlib_PIC/vlcb.c: 1119:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 47735   00C67A  0E00               	movlw	0
 47736   00C67C  6E2B               	movwf	i2_isEvent$4896^0,c
 47737   00C67E  502C               	movf	i2isEvent@opc^0,w,c
 47738   00C680  0B90               	andlw	144
 47739   00C682  0A90               	xorlw	144
 47740   00C684  A4D8               	btfss	status,2,c
 47741   00C686  D008               	goto	i2l2069
 47742   00C688  502C               	movf	i2isEvent@opc^0,w,c
 47743   00C68A  0AFF               	xorlw	255
 47744   00C68C  0B06               	andlw	6
 47745   00C68E  0A06               	xorlw	6
 47746   00C690  A4D8               	btfss	status,2,c
 47747   00C692  D002               	goto	i2l2069
 47748   00C694  0E01               	movlw	1
 47749   00C696  6E2B               	movwf	i2_isEvent$4896^0,c
 47750   00C698                     i2l2069:
 47751   00C698  502B               	movf	i2_isEvent$4896^0,w,c
 47752   00C69A  0012               	return		;funcret
 47753   00C69C                     __end_ofi2_isEvent:
 47754                           	callstack 0
 47755                           
 47756 ;; *************** function i2_canFillRxFifo *****************
 47757 ;; Defined at:
 47758 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 47759 ;; Parameters:    Size  Location     Type
 47760 ;;		None
 47761 ;; Auto vars:     Size  Location     Type
 47762 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 47763 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 47764 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 47765 ;;		 -> NULL(0), 
 47766 ;;  m               2   12[COMRAM] PTR struct Message
 47767 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47768 ;;  hiIndex         1    0        unsigned char 
 47769 ;; Return value:  Size  Location     Type
 47770 ;;                  1    wreg      void 
 47771 ;; Registers used:
 47772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47773 ;; Tracked objects:
 47774 ;;		On entry : 0/0
 47775 ;;		On exit  : 0/0
 47776 ;;		Unchanged: 0/0
 47777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47779 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47781 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47782 ;;Total ram usage:        4 bytes
 47783 ;; Hardware stack levels used: 1
 47784 ;; Hardware stack levels required when called: 1
 47785 ;; This function calls:
 47786 ;;		i2_getBufferPointer
 47787 ;;		i2_getNextWriteMessage
 47788 ;;		i2_updateModuleErrorStatus
 47789 ;; This function is called by:
 47790 ;;		i2_canIsr
 47791 ;; This function uses a non-reentrant model
 47792 ;;
 47793                           
 47794                           	psect	text222
 47795   0075CC                     __ptext222:
 47796                           	callstack 0
 47797   0075CC                     i2_canFillRxFifo:
 47798                           	callstack 3
 47799                           
 47800                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47801                           
 47802                           ;incstack = 0
 47803   0075CC  D0B2               	goto	i2l15741
 47804   0075CE                     i2l15703:
 47805                           
 47806                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 47807   0075CE  506F               	movf	111,w,c	;volatile
 47808   0075D0  0B07               	andlw	7
 47809   0075D2  ECAF  F052         	call	i2_getBufferPointer
 47810   0075D6  C02B  F039         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 47811   0075DA  C02C  F03A         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 47812                           
 47813                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 47814   0075DE  9277               	bcf	119,1,c	;volatile
 47815                           
 47816                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 47817   0075E0  BC71               	btfsc	113,6,c	;volatile
 47818                           
 47819                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 47820   0075E2  9C71               	bcf	113,6,c	;volatile
 47821                           
 47822                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 47823   0075E4  EE20 F002          	lfsr	2,2
 47824   0075E8  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47825   0075EA  26D9               	addwf	fsr2l,f,c
 47826   0075EC  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47827   0075EE  22DA               	addwfc	fsr2h,f,c
 47828   0075F0  B6DF               	btfsc	indf2,3,c
 47829   0075F2  D092               	goto	i2l15731
 47830                           
 47831                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 47832   0075F4  0E26               	movlw	low _rxQueue
 47833   0075F6  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 47834   0075F8  EC5E  F048         	call	i2_getNextWriteMessage	;wreg free
 47835   0075FC  C02B  F037         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 47836   007600  C02C  F038         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 47837                           
 47838                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 47839   007604  5037               	movf	i2canFillRxFifo@m^0,w,c
 47840   007606  1038               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 47841   007608  A4D8               	btfss	status,2,c
 47842   00760A  D009               	goto	i2l15727
 47843                           
 47844                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 47845   00760C  0101               	movlb	1	; () banked
 47846   00760E  4B76               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47847   007610  2B77               	incf	(_canDiagnostics+17)& (0+255),f,b
 47848                           
 47849                           ; BSR set to: 1
 47850                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 47851   007612  EC45  F064         	call	i2_updateModuleErrorStatus	;wreg free
 47852                           
 47853                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 47854   007616  AE77               	btfss	119,7,c	;volatile
 47855   007618  0012               	return	
 47856                           
 47857                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 47858   00761A  9E77               	bcf	119,7,c	;volatile
 47859   00761C  0012               	return	
 47860   00761E                     i2l15727:
 47861                           
 47862                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 47863   00761E  EE20 F006          	lfsr	2,6
 47864   007622  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47865   007624  26D9               	addwf	fsr2l,f,c
 47866   007626  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47867   007628  22DA               	addwfc	fsr2h,f,c
 47868   00762A  EE10 F001          	lfsr	1,1
 47869   00762E  5037               	movf	i2canFillRxFifo@m^0,w,c
 47870   007630  26E1               	addwf	fsr1l,f,c
 47871   007632  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47872   007634  22E2               	addwfc	fsr1h,f,c
 47873   007636  CFDF FFE7          	movff	indf2,indf1
 47874                           
 47875                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 47876   00763A  EE20 F007          	lfsr	2,7
 47877   00763E  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47878   007640  26D9               	addwf	fsr2l,f,c
 47879   007642  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47880   007644  22DA               	addwfc	fsr2h,f,c
 47881   007646  EE10 F002          	lfsr	1,2
 47882   00764A  5037               	movf	i2canFillRxFifo@m^0,w,c
 47883   00764C  26E1               	addwf	fsr1l,f,c
 47884   00764E  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47885   007650  22E2               	addwfc	fsr1h,f,c
 47886   007652  CFDF FFE7          	movff	indf2,indf1
 47887                           
 47888                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 47889   007656  EE20 F008          	lfsr	2,8
 47890   00765A  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47891   00765C  26D9               	addwf	fsr2l,f,c
 47892   00765E  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47893   007660  22DA               	addwfc	fsr2h,f,c
 47894   007662  EE10 F003          	lfsr	1,3
 47895   007666  5037               	movf	i2canFillRxFifo@m^0,w,c
 47896   007668  26E1               	addwf	fsr1l,f,c
 47897   00766A  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47898   00766C  22E2               	addwfc	fsr1h,f,c
 47899   00766E  CFDF FFE7          	movff	indf2,indf1
 47900                           
 47901                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 47902   007672  EE20 F009          	lfsr	2,9
 47903   007676  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47904   007678  26D9               	addwf	fsr2l,f,c
 47905   00767A  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47906   00767C  22DA               	addwfc	fsr2h,f,c
 47907   00767E  EE10 F004          	lfsr	1,4
 47908   007682  5037               	movf	i2canFillRxFifo@m^0,w,c
 47909   007684  26E1               	addwf	fsr1l,f,c
 47910   007686  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47911   007688  22E2               	addwfc	fsr1h,f,c
 47912   00768A  CFDF FFE7          	movff	indf2,indf1
 47913                           
 47914                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 47915   00768E  EE20 F00A          	lfsr	2,10
 47916   007692  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47917   007694  26D9               	addwf	fsr2l,f,c
 47918   007696  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47919   007698  22DA               	addwfc	fsr2h,f,c
 47920   00769A  EE10 F005          	lfsr	1,5
 47921   00769E  5037               	movf	i2canFillRxFifo@m^0,w,c
 47922   0076A0  26E1               	addwf	fsr1l,f,c
 47923   0076A2  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47924   0076A4  22E2               	addwfc	fsr1h,f,c
 47925   0076A6  CFDF FFE7          	movff	indf2,indf1
 47926                           
 47927                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 47928   0076AA  EE20 F00B          	lfsr	2,11
 47929   0076AE  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47930   0076B0  26D9               	addwf	fsr2l,f,c
 47931   0076B2  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47932   0076B4  22DA               	addwfc	fsr2h,f,c
 47933   0076B6  EE10 F006          	lfsr	1,6
 47934   0076BA  5037               	movf	i2canFillRxFifo@m^0,w,c
 47935   0076BC  26E1               	addwf	fsr1l,f,c
 47936   0076BE  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47937   0076C0  22E2               	addwfc	fsr1h,f,c
 47938   0076C2  CFDF FFE7          	movff	indf2,indf1
 47939                           
 47940                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 47941   0076C6  EE20 F00C          	lfsr	2,12
 47942   0076CA  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47943   0076CC  26D9               	addwf	fsr2l,f,c
 47944   0076CE  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47945   0076D0  22DA               	addwfc	fsr2h,f,c
 47946   0076D2  EE10 F007          	lfsr	1,7
 47947   0076D6  5037               	movf	i2canFillRxFifo@m^0,w,c
 47948   0076D8  26E1               	addwf	fsr1l,f,c
 47949   0076DA  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47950   0076DC  22E2               	addwfc	fsr1h,f,c
 47951   0076DE  CFDF FFE7          	movff	indf2,indf1
 47952                           
 47953                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 47954   0076E2  EE20 F00D          	lfsr	2,13
 47955   0076E6  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47956   0076E8  26D9               	addwf	fsr2l,f,c
 47957   0076EA  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47958   0076EC  22DA               	addwfc	fsr2h,f,c
 47959   0076EE  EE10 F008          	lfsr	1,8
 47960   0076F2  5037               	movf	i2canFillRxFifo@m^0,w,c
 47961   0076F4  26E1               	addwf	fsr1l,f,c
 47962   0076F6  5038               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47963   0076F8  22E2               	addwfc	fsr1h,f,c
 47964   0076FA  CFDF FFE7          	movff	indf2,indf1
 47965                           
 47966                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 47967   0076FE  EE20 F005          	lfsr	2,5
 47968   007702  5039               	movf	i2canFillRxFifo@ptr^0,w,c
 47969   007704  26D9               	addwf	fsr2l,f,c
 47970   007706  503A               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47971   007708  22DA               	addwfc	fsr2h,f,c
 47972   00770A  50DF               	movf	indf2,w,c
 47973   00770C  0B0F               	andlw	15
 47974   00770E  C037  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 47975   007712  C038  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 47976   007716  6EDF               	movwf	indf2,c
 47977   007718                     i2l15731:
 47978                           
 47979                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 47980   007718  AE77               	btfss	119,7,c	;volatile
 47981   00771A  D004               	goto	i2l15737
 47982                           
 47983                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 47984   00771C  0101               	movlb	1	; () banked
 47985   00771E  4B68               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 47986   007720  2B69               	incf	(_canDiagnostics+3)& (0+255),f,b
 47987                           
 47988                           ; BSR set to: 1
 47989                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 47990   007722  9E77               	bcf	119,7,c	;volatile
 47991   007724                     i2l15737:
 47992                           
 47993                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 47994   007724  C039  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 47995   007728  C03A  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 47996   00772C  0E7F               	movlw	127
 47997   00772E  16DF               	andwf	indf2,f,c
 47998                           
 47999                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 48000   007730  9077               	bcf	119,0,c	;volatile
 48001   007732                     i2l15741:
 48002                           
 48003                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 48004   007732  AE71               	btfss	113,7,c	;volatile
 48005   007734  0012               	return	
 48006   007736  D74B               	goto	i2l15703
 48007   007738                     __end_ofi2_canFillRxFifo:
 48008                           	callstack 0
 48009                           
 48010 ;; *************** function i2_updateModuleErrorStatus *****************
 48011 ;; Defined at:
 48012 ;;		line 617 in file "../../VLCBlib_PIC/mns.c"
 48013 ;; Parameters:    Size  Location     Type
 48014 ;;		None
 48015 ;; Auto vars:     Size  Location     Type
 48016 ;;		None
 48017 ;; Return value:  Size  Location     Type
 48018 ;;                  1    wreg      void 
 48019 ;; Registers used:
 48020 ;;		wreg, status,2, status,0
 48021 ;; Tracked objects:
 48022 ;;		On entry : 0/0
 48023 ;;		On exit  : 0/0
 48024 ;;		Unchanged: 0/0
 48025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48030 ;;Total ram usage:        0 bytes
 48031 ;; Hardware stack levels used: 1
 48032 ;; This function calls:
 48033 ;;		Nothing
 48034 ;; This function is called by:
 48035 ;;		i2_checkTxFifo
 48036 ;;		i2_checkCANTimeout
 48037 ;;		i2_canTxError
 48038 ;;		i2_canFillRxFifo
 48039 ;; This function uses a non-reentrant model
 48040 ;;
 48041                           
 48042                           	psect	text223
 48043   00C88A                     __ptext223:
 48044                           	callstack 0
 48045   00C88A                     i2_updateModuleErrorStatus:
 48046                           	callstack 3
 48047                           
 48048                           ;../../VLCBlib_PIC/mns.c: 618:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 48049                           
 48050                           ;incstack = 0
 48051   00C88A  0101               	movlb	1	; () banked
 48052   00C88C  298E               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 48053   00C88E  B4D8               	btfsc	status,2,c
 48054   00C890  0012               	return	
 48055                           
 48056                           ; BSR set to: 1
 48057                           ;../../VLCBlib_PIC/mns.c: 619:         mnsDiagnostics[0x01].asBytes.lo++;
 48058   00C892  2B8E               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 48059                           
 48060                           ; BSR set to: 1
 48061   00C894  0012               	return		;funcret
 48062   00C896                     __end_ofi2_updateModuleErrorStatus:
 48063                           	callstack 0
 48064                           
 48065 ;; *************** function i2_getNextWriteMessage *****************
 48066 ;; Defined at:
 48067 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 48068 ;; Parameters:    Size  Location     Type
 48069 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 48070 ;;		 -> rxQueue(5), 
 48071 ;; Auto vars:     Size  Location     Type
 48072 ;;  wr              1   11[COMRAM] unsigned char 
 48073 ;; Return value:  Size  Location     Type
 48074 ;;                  2    0[COMRAM] PTR struct Message
 48075 ;; Registers used:
 48076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 48077 ;; Tracked objects:
 48078 ;;		On entry : 0/0
 48079 ;;		On exit  : 0/0
 48080 ;;		Unchanged: 0/0
 48081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48084 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48085 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48086 ;;Total ram usage:       12 bytes
 48087 ;; Hardware stack levels used: 1
 48088 ;; This function calls:
 48089 ;;		Nothing
 48090 ;; This function is called by:
 48091 ;;		i2_checkTxFifo
 48092 ;;		i2_canFillRxFifo
 48093 ;; This function uses a non-reentrant model
 48094 ;;
 48095                           
 48096                           	psect	text224
 48097   0090BC                     __ptext224:
 48098                           	callstack 0
 48099   0090BC                     i2_getNextWriteMessage:
 48100                           	callstack 3
 48101                           
 48102                           ; BSR set to: 1
 48103                           ;incstack = 0
 48104   0090BC  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48105   0090BE  6ED9               	movwf	fsr2l,c
 48106   0090C0  6ADA               	clrf	fsr2h,c
 48107   0090C2  0E02               	movlw	2
 48108   0090C4  26D9               	addwf	fsr2l,f,c
 48109   0090C6  50DF               	movf	indf2,w,c
 48110   0090C8  6E2D               	movwf	??i2_getNextWriteMessage^0,c
 48111   0090CA  6A2E               	clrf	(??i2_getNextWriteMessage+1)^0,c
 48112   0090CC  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48113   0090CE  6ED9               	movwf	fsr2l,c
 48114   0090D0  6ADA               	clrf	fsr2h,c
 48115   0090D2  0E04               	movlw	4
 48116   0090D4  26D9               	addwf	fsr2l,f,c
 48117   0090D6  50DF               	movf	indf2,w,c
 48118   0090D8  6E2F               	movwf	(??i2_getNextWriteMessage+2)^0,c
 48119   0090DA  0EFF               	movlw	255
 48120   0090DC  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 48121   0090DE  6E30               	movwf	(??i2_getNextWriteMessage+3)^0,c
 48122   0090E0  6A31               	clrf	(??i2_getNextWriteMessage+4)^0,c
 48123   0090E2  0EFF               	movlw	255
 48124   0090E4  2231               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 48125   0090E6  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48126   0090E8  6ED9               	movwf	fsr2l,c
 48127   0090EA  6ADA               	clrf	fsr2h,c
 48128   0090EC  0E03               	movlw	3
 48129   0090EE  26D9               	addwf	fsr2l,f,c
 48130   0090F0  50DF               	movf	indf2,w,c
 48131   0090F2  6E32               	movwf	(??i2_getNextWriteMessage+5)^0,c
 48132   0090F4  6A33               	clrf	(??i2_getNextWriteMessage+6)^0,c
 48133   0090F6  0E01               	movlw	1
 48134   0090F8  2632               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 48135   0090FA  0E00               	movlw	0
 48136   0090FC  2233               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 48137   0090FE  5030               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 48138   009100  1432               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 48139   009102  6E34               	movwf	(??i2_getNextWriteMessage+7)^0,c
 48140   009104  5031               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 48141   009106  1433               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 48142   009108  6E35               	movwf	(??i2_getNextWriteMessage+8)^0,c
 48143   00910A  502D               	movf	??i2_getNextWriteMessage^0,w,c
 48144   00910C  1834               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 48145   00910E  E109               	bnz	i2l13031
 48146   009110  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 48147   009112  1835               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 48148   009114  A4D8               	btfss	status,2,c
 48149   009116  D005               	goto	i2l13031
 48150   009118  0E00               	movlw	0
 48151   00911A  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 48152   00911C  0E00               	movlw	0
 48153   00911E  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 48154   009120  0012               	return	
 48155   009122                     i2l13031:
 48156   009122  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48157   009124  6ED9               	movwf	fsr2l,c
 48158   009126  6ADA               	clrf	fsr2h,c
 48159   009128  0E03               	movlw	3
 48160   00912A  26D9               	addwf	fsr2l,f,c
 48161   00912C  50DF               	movf	indf2,w,c
 48162   00912E  6E36               	movwf	i2getNextWriteMessage@wr^0,c
 48163   009130  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48164   009132  6ED9               	movwf	fsr2l,c
 48165   009134  6ADA               	clrf	fsr2h,c
 48166   009136  0E03               	movlw	3
 48167   009138  26D9               	addwf	fsr2l,f,c
 48168   00913A  2ADF               	incf	indf2,f,c
 48169   00913C  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48170   00913E  6ED9               	movwf	fsr2l,c
 48171   009140  6ADA               	clrf	fsr2h,c
 48172   009142  0E04               	movlw	4
 48173   009144  26D9               	addwf	fsr2l,f,c
 48174   009146  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48175   009148  6EE1               	movwf	fsr1l,c
 48176   00914A  6AE2               	clrf	fsr1h,c
 48177   00914C  0E03               	movlw	3
 48178   00914E  26E1               	addwf	fsr1l,f,c
 48179   009150  50DE               	movf	postinc2,w,c
 48180   009152  5CE6               	subwf	postinc1,w,c
 48181   009154  A0D8               	btfss	status,0,c
 48182   009156  D006               	goto	i2l13037
 48183   009158  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48184   00915A  6ED9               	movwf	fsr2l,c
 48185   00915C  6ADA               	clrf	fsr2h,c
 48186   00915E  0E03               	movlw	3
 48187   009160  26D9               	addwf	fsr2l,f,c
 48188   009162  6ADF               	clrf	indf2,c
 48189   009164                     i2l13037:
 48190   009164  5036               	movf	i2getNextWriteMessage@wr^0,w,c
 48191   009166  0D09               	mullw	9
 48192   009168  CFF3 F02D          	movff	prodl,??i2_getNextWriteMessage
 48193   00916C  CFF4 F02E          	movff	prodh,??i2_getNextWriteMessage+1
 48194   009170  502B               	movf	i2getNextWriteMessage@q^0,w,c
 48195   009172  6ED9               	movwf	fsr2l,c
 48196   009174  6ADA               	clrf	fsr2h,c
 48197   009176  CFDE F02F          	movff	postinc2,??i2_getNextWriteMessage+2
 48198   00917A  CFDD F030          	movff	postdec2,??i2_getNextWriteMessage+3
 48199   00917E  502D               	movf	??i2_getNextWriteMessage^0,w,c
 48200   009180  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 48201   009182  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 48202   009184  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 48203   009186  2030               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 48204   009188  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 48205   00918A  0012               	return		;funcret
 48206   00918C                     __end_ofi2_getNextWriteMessage:
 48207                           	callstack 0
 48208                           
 48209 ;; *************** function i2_getBufferPointer *****************
 48210 ;; Defined at:
 48211 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 48212 ;; Parameters:    Size  Location     Type
 48213 ;;  b               1    wreg     unsigned char 
 48214 ;; Auto vars:     Size  Location     Type
 48215 ;;  b               1    2[COMRAM] unsigned char 
 48216 ;; Return value:  Size  Location     Type
 48217 ;;                  2    0[COMRAM] PTR unsigned char 
 48218 ;; Registers used:
 48219 ;;		wreg, status,2, status,0
 48220 ;; Tracked objects:
 48221 ;;		On entry : 0/0
 48222 ;;		On exit  : 0/0
 48223 ;;		Unchanged: 0/0
 48224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48228 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48229 ;;Total ram usage:        3 bytes
 48230 ;; Hardware stack levels used: 1
 48231 ;; This function calls:
 48232 ;;		Nothing
 48233 ;; This function is called by:
 48234 ;;		i2_canFillRxFifo
 48235 ;; This function uses a non-reentrant model
 48236 ;;
 48237                           
 48238                           	psect	text225
 48239   00A55E                     __ptext225:
 48240                           	callstack 0
 48241   00A55E                     i2_getBufferPointer:
 48242                           	callstack 3
 48243                           
 48244                           ;incstack = 0
 48245                           ;i2getBufferPointer@b stored from wreg
 48246   00A55E  6E2D               	movwf	i2getBufferPointer@b^0,c
 48247                           
 48248                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 48249   00A560  D02D               	goto	i2l14153
 48250   00A562                     i2l14115:
 48251                           
 48252                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 48253   00A562  0E60               	movlw	96
 48254   00A564  6E2B               	movwf	?i2_getBufferPointer^0,c
 48255   00A566  0E0F               	movlw	15
 48256   00A568  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48257   00A56A  0012               	return	
 48258   00A56C                     i2l14119:
 48259                           
 48260                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 48261   00A56C  0E30               	movlw	48
 48262   00A56E  6E2B               	movwf	?i2_getBufferPointer^0,c
 48263   00A570  0E0F               	movlw	15
 48264   00A572  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48265   00A574  0012               	return	
 48266   00A576                     i2l14123:
 48267                           
 48268                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 48269   00A576  0E80               	movlw	128
 48270   00A578  6E2B               	movwf	?i2_getBufferPointer^0,c
 48271   00A57A  0E0E               	movlw	14
 48272   00A57C  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48273   00A57E  0012               	return	
 48274   00A580                     i2l14127:
 48275                           
 48276                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 48277   00A580  0E90               	movlw	144
 48278   00A582  6E2B               	movwf	?i2_getBufferPointer^0,c
 48279   00A584  0E0E               	movlw	14
 48280   00A586  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48281   00A588  0012               	return	
 48282   00A58A                     i2l14131:
 48283                           
 48284                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 48285   00A58A  0EA0               	movlw	160
 48286   00A58C  6E2B               	movwf	?i2_getBufferPointer^0,c
 48287   00A58E  0E0E               	movlw	14
 48288   00A590  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48289   00A592  0012               	return	
 48290   00A594                     i2l14135:
 48291                           
 48292                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 48293   00A594  0EB0               	movlw	176
 48294   00A596  6E2B               	movwf	?i2_getBufferPointer^0,c
 48295   00A598  0E0E               	movlw	14
 48296   00A59A  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48297   00A59C  0012               	return	
 48298   00A59E                     i2l14139:
 48299                           
 48300                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 48301   00A59E  0EC0               	movlw	192
 48302   00A5A0  6E2B               	movwf	?i2_getBufferPointer^0,c
 48303   00A5A2  0E0E               	movlw	14
 48304   00A5A4  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48305   00A5A6  0012               	return	
 48306   00A5A8                     i2l14143:
 48307                           
 48308                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 48309   00A5A8  0ED0               	movlw	208
 48310   00A5AA  6E2B               	movwf	?i2_getBufferPointer^0,c
 48311   00A5AC  0E0E               	movlw	14
 48312   00A5AE  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48313   00A5B0  0012               	return	
 48314   00A5B2                     i2l14147:
 48315                           
 48316                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 48317   00A5B2  0E00               	movlw	0
 48318   00A5B4  6E2B               	movwf	?i2_getBufferPointer^0,c
 48319   00A5B6  0E00               	movlw	0
 48320   00A5B8  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 48321   00A5BA  0012               	return	
 48322   00A5BC                     i2l14153:
 48323   00A5BC  502D               	movf	i2getBufferPointer@b^0,w,c
 48324                           
 48325                           ; Switch size 1, requested type "simple"
 48326                           ; Number of cases is 8, Range of values is 0 to 7
 48327                           ; switch strategies available:
 48328                           ; Name         Instructions Cycles
 48329                           ; simple_byte           25    13 (average)
 48330                           ;	Chosen strategy is simple_byte
 48331   00A5BE  0A00               	xorlw	0	; case 0
 48332   00A5C0  B4D8               	btfsc	status,2,c
 48333   00A5C2  D7CF               	goto	i2l14115
 48334   00A5C4  0A01               	xorlw	1	; case 1
 48335   00A5C6  B4D8               	btfsc	status,2,c
 48336   00A5C8  D7D1               	goto	i2l14119
 48337   00A5CA  0A03               	xorlw	3	; case 2
 48338   00A5CC  B4D8               	btfsc	status,2,c
 48339   00A5CE  D7D3               	goto	i2l14123
 48340   00A5D0  0A01               	xorlw	1	; case 3
 48341   00A5D2  B4D8               	btfsc	status,2,c
 48342   00A5D4  D7D5               	goto	i2l14127
 48343   00A5D6  0A07               	xorlw	7	; case 4
 48344   00A5D8  B4D8               	btfsc	status,2,c
 48345   00A5DA  D7D7               	goto	i2l14131
 48346   00A5DC  0A01               	xorlw	1	; case 5
 48347   00A5DE  B4D8               	btfsc	status,2,c
 48348   00A5E0  D7D9               	goto	i2l14135
 48349   00A5E2  0A03               	xorlw	3	; case 6
 48350   00A5E4  B4D8               	btfsc	status,2,c
 48351   00A5E6  D7DB               	goto	i2l14139
 48352   00A5E8  0A01               	xorlw	1	; case 7
 48353   00A5EA  B4D8               	btfsc	status,2,c
 48354   00A5EC  D7DD               	goto	i2l14143
 48355   00A5EE  D7E1               	goto	i2l14147
 48356   00A5F0                     __end_ofi2_getBufferPointer:
 48357                           	callstack 0
 48358                           
 48359 ;; *************** function _APP_highIsr *****************
 48360 ;; Defined at:
 48361 ;;		line 712 in file "../main.c"
 48362 ;; Parameters:    Size  Location     Type
 48363 ;;		None
 48364 ;; Auto vars:     Size  Location     Type
 48365 ;;		None
 48366 ;; Return value:  Size  Location     Type
 48367 ;;                  1    wreg      void 
 48368 ;; Registers used:
 48369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48370 ;; Tracked objects:
 48371 ;;		On entry : 0/0
 48372 ;;		On exit  : 0/0
 48373 ;;		Unchanged: 0/0
 48374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48379 ;;Total ram usage:        0 bytes
 48380 ;; Hardware stack levels used: 1
 48381 ;; Hardware stack levels required when called: 2
 48382 ;; This function calls:
 48383 ;;		_timer1DoneInterruptHandler
 48384 ;;		_timer3DoneInterruptHandler
 48385 ;; This function is called by:
 48386 ;;		_highIsr
 48387 ;; This function uses a non-reentrant model
 48388 ;;
 48389                           
 48390                           	psect	text226
 48391   00C7F0                     __ptext226:
 48392                           	callstack 0
 48393   00C7F0                     _APP_highIsr:
 48394                           	callstack 3
 48395                           
 48396                           ;../main.c: 715:     if (PIR1bits.TMR1IF) {
 48397                           
 48398                           ;incstack = 0
 48399   00C7F0  A09E               	btfss	158,0,c	;volatile
 48400   00C7F2  D003               	goto	i2l16111
 48401                           
 48402                           ;../main.c: 716:         timer1DoneInterruptHandler();
 48403   00C7F4  ECCF  F062         	call	_timer1DoneInterruptHandler	;wreg free
 48404                           
 48405                           ;../main.c: 717:         PIR1bits.TMR1IF = 0;
 48406   00C7F8  909E               	bcf	158,0,c	;volatile
 48407   00C7FA                     i2l16111:
 48408                           
 48409                           ;../main.c: 719:     if (PIR2bits.TMR3IF) {
 48410   00C7FA  A2A1               	btfss	161,1,c	;volatile
 48411   00C7FC  0012               	return	
 48412                           
 48413                           ;../main.c: 720:         timer3DoneInterruptHandler();
 48414   00C7FE  ECBB  F062         	call	_timer3DoneInterruptHandler	;wreg free
 48415                           
 48416                           ;../main.c: 721:         PIR2bits.TMR3IF = 0;
 48417   00C802  92A1               	bcf	161,1,c	;volatile
 48418   00C804  0012               	return		;funcret
 48419   00C806                     __end_of_APP_highIsr:
 48420                           	callstack 0
 48421                           
 48422 ;; *************** function _timer3DoneInterruptHandler *****************
 48423 ;; Defined at:
 48424 ;;		line 249 in file "../servo.c"
 48425 ;; Parameters:    Size  Location     Type
 48426 ;;		None
 48427 ;; Auto vars:     Size  Location     Type
 48428 ;;		None
 48429 ;; Return value:  Size  Location     Type
 48430 ;;                  1    wreg      void 
 48431 ;; Registers used:
 48432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48433 ;; Tracked objects:
 48434 ;;		On entry : 0/0
 48435 ;;		On exit  : 0/0
 48436 ;;		Unchanged: 0/0
 48437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48442 ;;Total ram usage:        0 bytes
 48443 ;; Hardware stack levels used: 1
 48444 ;; Hardware stack levels required when called: 1
 48445 ;; This function calls:
 48446 ;;		i2_getNV
 48447 ;;		i2_setOutputPin
 48448 ;; This function is called by:
 48449 ;;		_APP_highIsr
 48450 ;; This function uses a non-reentrant model
 48451 ;;
 48452                           
 48453                           	psect	text227
 48454   00C576                     __ptext227:
 48455                           	callstack 0
 48456   00C576                     _timer3DoneInterruptHandler:
 48457                           	callstack 3
 48458                           
 48459                           ;../servo.c: 250:     T3CONbits.TMR3ON = 0;
 48460                           
 48461                           ;incstack = 0
 48462   00C576  90B1               	bcf	177,0,c	;volatile
 48463                           
 48464                           ;../servo.c: 251:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 48465   00C578  0100               	movlb	0	; () banked
 48466   00C57A  51C9               	movf	_servoInBlock& (0+255),w,b
 48467   00C57C  0D07               	mullw	7
 48468   00C57E  50F3               	movf	243,w,c
 48469   00C580  0F49               	addlw	73
 48470   00C582  EC28  F060         	call	i2_getNV
 48471   00C586  502B               	movf	?i2_getNV^0,w,c
 48472   00C588  0B20               	andlw	32
 48473   00C58A  6E2F               	movwf	i2setOutputPin@state^0,c
 48474   00C58C  0100               	movlb	0	; () banked
 48475   00C58E  51C9               	movf	_servoInBlock& (0+255),w,b
 48476   00C590  0F08               	addlw	8
 48477   00C592  EC57  F039         	call	i2_setOutputPin
 48478                           
 48479                           ;../servo.c: 252:     servoActive[1] = 0;
 48480   00C596  0E00               	movlw	0
 48481   00C598  0100               	movlb	0	; () banked
 48482   00C59A  6FB3               	movwf	(_servoActive+1)& (0+255),b
 48483                           
 48484                           ; BSR set to: 0
 48485   00C59C  0012               	return		;funcret
 48486   00C59E                     __end_of_timer3DoneInterruptHandler:
 48487                           	callstack 0
 48488                           
 48489 ;; *************** function _timer1DoneInterruptHandler *****************
 48490 ;; Defined at:
 48491 ;;		line 243 in file "../servo.c"
 48492 ;; Parameters:    Size  Location     Type
 48493 ;;		None
 48494 ;; Auto vars:     Size  Location     Type
 48495 ;;		None
 48496 ;; Return value:  Size  Location     Type
 48497 ;;                  1    wreg      void 
 48498 ;; Registers used:
 48499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 48500 ;; Tracked objects:
 48501 ;;		On entry : 0/0
 48502 ;;		On exit  : 0/0
 48503 ;;		Unchanged: 0/0
 48504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48509 ;;Total ram usage:        0 bytes
 48510 ;; Hardware stack levels used: 1
 48511 ;; Hardware stack levels required when called: 1
 48512 ;; This function calls:
 48513 ;;		i2_getNV
 48514 ;;		i2_setOutputPin
 48515 ;; This function is called by:
 48516 ;;		_APP_highIsr
 48517 ;; This function uses a non-reentrant model
 48518 ;;
 48519                           
 48520                           	psect	text228
 48521   00C59E                     __ptext228:
 48522                           	callstack 0
 48523   00C59E                     _timer1DoneInterruptHandler:
 48524                           	callstack 3
 48525                           
 48526                           ;../servo.c: 244:     T1CONbits.TMR1ON = 0;
 48527                           
 48528                           ; BSR set to: 0
 48529                           ;incstack = 0
 48530   00C59E  90CD               	bcf	205,0,c	;volatile
 48531                           
 48532                           ;../servo.c: 245:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 48533   00C5A0  0100               	movlb	0	; () banked
 48534   00C5A2  51C9               	movf	_servoInBlock& (0+255),w,b
 48535   00C5A4  0D07               	mullw	7
 48536   00C5A6  50F3               	movf	243,w,c
 48537   00C5A8  0F11               	addlw	17
 48538   00C5AA  EC28  F060         	call	i2_getNV
 48539   00C5AE  502B               	movf	?i2_getNV^0,w,c
 48540   00C5B0  0B20               	andlw	32
 48541   00C5B2  6E2F               	movwf	i2setOutputPin@state^0,c
 48542   00C5B4  0100               	movlb	0	; () banked
 48543   00C5B6  51C9               	movf	_servoInBlock& (0+255),w,b
 48544   00C5B8  EC57  F039         	call	i2_setOutputPin
 48545                           
 48546                           ;../servo.c: 246:     servoActive[0] = 0;
 48547   00C5BC  0E00               	movlw	0
 48548   00C5BE  0100               	movlb	0	; () banked
 48549   00C5C0  6FB2               	movwf	_servoActive& (0+255),b
 48550                           
 48551                           ; BSR set to: 0
 48552   00C5C2  0012               	return		;funcret
 48553   00C5C4                     __end_of_timer1DoneInterruptHandler:
 48554                           	callstack 0
 48555                           
 48556 ;; *************** function i2_setOutputPin *****************
 48557 ;; Defined at:
 48558 ;;		line 256 in file "../digitalOut.c"
 48559 ;; Parameters:    Size  Location     Type
 48560 ;;  io              1    wreg     unsigned char 
 48561 ;;  state           1    4[COMRAM] enum E12766
 48562 ;; Auto vars:     Size  Location     Type
 48563 ;;  io              1    7[COMRAM] unsigned char 
 48564 ;; Return value:  Size  Location     Type
 48565 ;;                  1    wreg      void 
 48566 ;; Registers used:
 48567 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 48568 ;; Tracked objects:
 48569 ;;		On entry : 0/0
 48570 ;;		On exit  : 0/0
 48571 ;;		Unchanged: 0/0
 48572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48573 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48577 ;;Total ram usage:        4 bytes
 48578 ;; Hardware stack levels used: 1
 48579 ;; This function calls:
 48580 ;;		Nothing
 48581 ;; This function is called by:
 48582 ;;		_timer1DoneInterruptHandler
 48583 ;;		_timer3DoneInterruptHandler
 48584 ;; This function uses a non-reentrant model
 48585 ;;
 48586                           
 48587                           	psect	text229
 48588   0072AE                     __ptext229:
 48589                           	callstack 0
 48590   0072AE                     i2_setOutputPin:
 48591                           	callstack 3
 48592                           
 48593                           ; BSR set to: 0
 48594                           ;incstack = 0
 48595                           ;i2setOutputPin@io stored from wreg
 48596   0072AE  6E32               	movwf	i2setOutputPin@io^0,c
 48597                           
 48598                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 48599   0072B0  D0BA               	goto	i2l14053
 48600   0072B2                     i2l14033:
 48601                           
 48602                           ;../digitalOut.c: 259:             if (state) {
 48603   0072B2  502F               	movf	i2setOutputPin@state^0,w,c
 48604   0072B4  B4D8               	btfsc	status,2,c
 48605   0072B6  D01D               	goto	i2l14037
 48606                           
 48607                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 48608   0072B8  5032               	movf	i2setOutputPin@io^0,w,c
 48609   0072BA  0D04               	mullw	4
 48610   0072BC  0E02               	movlw	2
 48611   0072BE  26F3               	addwf	243,f,c
 48612   0072C0  0E00               	movlw	0
 48613   0072C2  22F4               	addwfc	244,f,c
 48614   0072C4  0E29               	movlw	low _configs
 48615   0072C6  24F3               	addwf	243,w,c
 48616   0072C8  6EF6               	movwf	tblptrl,c
 48617   0072CA  0EEE               	movlw	high _configs
 48618   0072CC  20F4               	addwfc	244,w,c
 48619   0072CE  6EF7               	movwf	tblptrh,c
 48620   0072D0                     	if	1	;There are 3 active tblptr bytes
 48621   0072D0  6AF8               	clrf	tblptru,c
 48622   0072D2  0E00               	movlw	low (__mediumconst shr (0+16))
 48623   0072D4  22F8               	addwfc	tblptru,f,c
 48624   0072D6                     	endif
 48625   0072D6  0008               	tblrd		*
 48626   0072D8  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48627   0072DC  0E01               	movlw	1
 48628   0072DE  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48629   0072E0  2A30               	incf	??i2_setOutputPin^0,f,c
 48630   0072E2  D002               	goto	i2u1297_44
 48631   0072E4                     i2u1297_45:
 48632   0072E4  90D8               	bcf	status,0,c
 48633   0072E6  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48634   0072E8                     i2u1297_44:
 48635   0072E8  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48636   0072EA  D7FC               	goto	i2u1297_45
 48637   0072EC  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48638   0072EE  1289               	iorwf	137,f,c	;volatile
 48639                           
 48640                           ;../digitalOut.c: 262:             } else {
 48641   0072F0  0012               	return	
 48642   0072F2                     i2l14037:
 48643                           
 48644                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 48645   0072F2  5032               	movf	i2setOutputPin@io^0,w,c
 48646   0072F4  0D04               	mullw	4
 48647   0072F6  0E02               	movlw	2
 48648   0072F8  26F3               	addwf	243,f,c
 48649   0072FA  0E00               	movlw	0
 48650   0072FC  22F4               	addwfc	244,f,c
 48651   0072FE  0E29               	movlw	low _configs
 48652   007300  24F3               	addwf	243,w,c
 48653   007302  6EF6               	movwf	tblptrl,c
 48654   007304  0EEE               	movlw	high _configs
 48655   007306  20F4               	addwfc	244,w,c
 48656   007308  6EF7               	movwf	tblptrh,c
 48657   00730A                     	if	1	;There are 3 active tblptr bytes
 48658   00730A  6AF8               	clrf	tblptru,c
 48659   00730C  0E00               	movlw	low (__mediumconst shr (0+16))
 48660   00730E  22F8               	addwfc	tblptru,f,c
 48661   007310                     	endif
 48662   007310  0008               	tblrd		*
 48663   007312  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48664   007316  0E01               	movlw	1
 48665   007318  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48666   00731A  2A30               	incf	??i2_setOutputPin^0,f,c
 48667   00731C  D002               	goto	i2u1298_44
 48668   00731E                     i2u1298_45:
 48669   00731E  90D8               	bcf	status,0,c
 48670   007320  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48671   007322                     i2u1298_44:
 48672   007322  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48673   007324  D7FC               	goto	i2u1298_45
 48674   007326  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48675   007328  0AFF               	xorlw	255
 48676   00732A  1689               	andwf	137,f,c	;volatile
 48677   00732C  0012               	return	
 48678   00732E                     i2l14039:
 48679                           
 48680                           ;../digitalOut.c: 268:             if (state) {
 48681   00732E  502F               	movf	i2setOutputPin@state^0,w,c
 48682   007330  B4D8               	btfsc	status,2,c
 48683   007332  D01D               	goto	i2l14043
 48684                           
 48685                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 48686   007334  5032               	movf	i2setOutputPin@io^0,w,c
 48687   007336  0D04               	mullw	4
 48688   007338  0E02               	movlw	2
 48689   00733A  26F3               	addwf	243,f,c
 48690   00733C  0E00               	movlw	0
 48691   00733E  22F4               	addwfc	244,f,c
 48692   007340  0E29               	movlw	low _configs
 48693   007342  24F3               	addwf	243,w,c
 48694   007344  6EF6               	movwf	tblptrl,c
 48695   007346  0EEE               	movlw	high _configs
 48696   007348  20F4               	addwfc	244,w,c
 48697   00734A  6EF7               	movwf	tblptrh,c
 48698   00734C                     	if	1	;There are 3 active tblptr bytes
 48699   00734C  6AF8               	clrf	tblptru,c
 48700   00734E  0E00               	movlw	low (__mediumconst shr (0+16))
 48701   007350  22F8               	addwfc	tblptru,f,c
 48702   007352                     	endif
 48703   007352  0008               	tblrd		*
 48704   007354  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48705   007358  0E01               	movlw	1
 48706   00735A  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48707   00735C  2A30               	incf	??i2_setOutputPin^0,f,c
 48708   00735E  D002               	goto	i2u1300_44
 48709   007360                     i2u1300_45:
 48710   007360  90D8               	bcf	status,0,c
 48711   007362  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48712   007364                     i2u1300_44:
 48713   007364  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48714   007366  D7FC               	goto	i2u1300_45
 48715   007368  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48716   00736A  128A               	iorwf	138,f,c	;volatile
 48717                           
 48718                           ;../digitalOut.c: 271:             } else {
 48719   00736C  0012               	return	
 48720   00736E                     i2l14043:
 48721                           
 48722                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 48723   00736E  5032               	movf	i2setOutputPin@io^0,w,c
 48724   007370  0D04               	mullw	4
 48725   007372  0E02               	movlw	2
 48726   007374  26F3               	addwf	243,f,c
 48727   007376  0E00               	movlw	0
 48728   007378  22F4               	addwfc	244,f,c
 48729   00737A  0E29               	movlw	low _configs
 48730   00737C  24F3               	addwf	243,w,c
 48731   00737E  6EF6               	movwf	tblptrl,c
 48732   007380  0EEE               	movlw	high _configs
 48733   007382  20F4               	addwfc	244,w,c
 48734   007384  6EF7               	movwf	tblptrh,c
 48735   007386                     	if	1	;There are 3 active tblptr bytes
 48736   007386  6AF8               	clrf	tblptru,c
 48737   007388  0E00               	movlw	low (__mediumconst shr (0+16))
 48738   00738A  22F8               	addwfc	tblptru,f,c
 48739   00738C                     	endif
 48740   00738C  0008               	tblrd		*
 48741   00738E  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48742   007392  0E01               	movlw	1
 48743   007394  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48744   007396  2A30               	incf	??i2_setOutputPin^0,f,c
 48745   007398  D002               	goto	i2u1301_44
 48746   00739A                     i2u1301_45:
 48747   00739A  90D8               	bcf	status,0,c
 48748   00739C  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48749   00739E                     i2u1301_44:
 48750   00739E  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48751   0073A0  D7FC               	goto	i2u1301_45
 48752   0073A2  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48753   0073A4  0AFF               	xorlw	255
 48754   0073A6  168A               	andwf	138,f,c	;volatile
 48755   0073A8  0012               	return	
 48756   0073AA                     i2l14045:
 48757                           
 48758                           ;../digitalOut.c: 277:             if (state) {
 48759   0073AA  502F               	movf	i2setOutputPin@state^0,w,c
 48760   0073AC  B4D8               	btfsc	status,2,c
 48761   0073AE  D01D               	goto	i2l14049
 48762                           
 48763                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 48764   0073B0  5032               	movf	i2setOutputPin@io^0,w,c
 48765   0073B2  0D04               	mullw	4
 48766   0073B4  0E02               	movlw	2
 48767   0073B6  26F3               	addwf	243,f,c
 48768   0073B8  0E00               	movlw	0
 48769   0073BA  22F4               	addwfc	244,f,c
 48770   0073BC  0E29               	movlw	low _configs
 48771   0073BE  24F3               	addwf	243,w,c
 48772   0073C0  6EF6               	movwf	tblptrl,c
 48773   0073C2  0EEE               	movlw	high _configs
 48774   0073C4  20F4               	addwfc	244,w,c
 48775   0073C6  6EF7               	movwf	tblptrh,c
 48776   0073C8                     	if	1	;There are 3 active tblptr bytes
 48777   0073C8  6AF8               	clrf	tblptru,c
 48778   0073CA  0E00               	movlw	low (__mediumconst shr (0+16))
 48779   0073CC  22F8               	addwfc	tblptru,f,c
 48780   0073CE                     	endif
 48781   0073CE  0008               	tblrd		*
 48782   0073D0  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48783   0073D4  0E01               	movlw	1
 48784   0073D6  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48785   0073D8  2A30               	incf	??i2_setOutputPin^0,f,c
 48786   0073DA  D002               	goto	i2u1303_44
 48787   0073DC                     i2u1303_45:
 48788   0073DC  90D8               	bcf	status,0,c
 48789   0073DE  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48790   0073E0                     i2u1303_44:
 48791   0073E0  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48792   0073E2  D7FC               	goto	i2u1303_45
 48793   0073E4  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48794   0073E6  128B               	iorwf	139,f,c	;volatile
 48795                           
 48796                           ;../digitalOut.c: 280:             } else {
 48797   0073E8  0012               	return	
 48798   0073EA                     i2l14049:
 48799                           
 48800                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 48801   0073EA  5032               	movf	i2setOutputPin@io^0,w,c
 48802   0073EC  0D04               	mullw	4
 48803   0073EE  0E02               	movlw	2
 48804   0073F0  26F3               	addwf	243,f,c
 48805   0073F2  0E00               	movlw	0
 48806   0073F4  22F4               	addwfc	244,f,c
 48807   0073F6  0E29               	movlw	low _configs
 48808   0073F8  24F3               	addwf	243,w,c
 48809   0073FA  6EF6               	movwf	tblptrl,c
 48810   0073FC  0EEE               	movlw	high _configs
 48811   0073FE  20F4               	addwfc	244,w,c
 48812   007400  6EF7               	movwf	tblptrh,c
 48813   007402                     	if	1	;There are 3 active tblptr bytes
 48814   007402  6AF8               	clrf	tblptru,c
 48815   007404  0E00               	movlw	low (__mediumconst shr (0+16))
 48816   007406  22F8               	addwfc	tblptru,f,c
 48817   007408                     	endif
 48818   007408  0008               	tblrd		*
 48819   00740A  CFF5 F030          	movff	tablat,??i2_setOutputPin
 48820   00740E  0E01               	movlw	1
 48821   007410  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 48822   007412  2A30               	incf	??i2_setOutputPin^0,f,c
 48823   007414  D002               	goto	i2u1304_44
 48824   007416                     i2u1304_45:
 48825   007416  90D8               	bcf	status,0,c
 48826   007418  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48827   00741A                     i2u1304_44:
 48828   00741A  2E30               	decfsz	??i2_setOutputPin^0,f,c
 48829   00741C  D7FC               	goto	i2u1304_45
 48830   00741E  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 48831   007420  0AFF               	xorlw	255
 48832   007422  168B               	andwf	139,f,c	;volatile
 48833   007424  0012               	return	
 48834   007426                     i2l14053:
 48835   007426  5032               	movf	i2setOutputPin@io^0,w,c
 48836   007428  0D04               	mullw	4
 48837   00742A  0E01               	movlw	1
 48838   00742C  26F3               	addwf	243,f,c
 48839   00742E  0E00               	movlw	0
 48840   007430  22F4               	addwfc	244,f,c
 48841   007432  0E29               	movlw	low _configs
 48842   007434  24F3               	addwf	243,w,c
 48843   007436  6EF6               	movwf	tblptrl,c
 48844   007438  0EEE               	movlw	high _configs
 48845   00743A  20F4               	addwfc	244,w,c
 48846   00743C  6EF7               	movwf	tblptrh,c
 48847   00743E                     	if	1	;There are 3 active tblptr bytes
 48848   00743E  6AF8               	clrf	tblptru,c
 48849   007440  0E00               	movlw	low (__mediumconst shr (0+16))
 48850   007442  22F8               	addwfc	tblptru,f,c
 48851   007444                     	endif
 48852   007444  0008               	tblrd		*
 48853   007446  50F5               	movf	tablat,w,c
 48854                           
 48855                           ; Switch size 1, requested type "simple"
 48856                           ; Number of cases is 3, Range of values is 65 to 67
 48857                           ; switch strategies available:
 48858                           ; Name         Instructions Cycles
 48859                           ; simple_byte           10     6 (average)
 48860                           ;	Chosen strategy is simple_byte
 48861   007448  0A41               	xorlw	65	; case 65
 48862   00744A  B4D8               	btfsc	status,2,c
 48863   00744C  D732               	goto	i2l14033
 48864   00744E  0A03               	xorlw	3	; case 66
 48865   007450  B4D8               	btfsc	status,2,c
 48866   007452  D76D               	goto	i2l14039
 48867   007454  0A01               	xorlw	1	; case 67
 48868   007456  A4D8               	btfss	status,2,c
 48869   007458  0012               	return	
 48870   00745A  D7A7               	goto	i2l14045
 48871   00745C                     __end_ofi2_setOutputPin:
 48872                           	callstack 0
 48873                           
 48874 ;; *************** function i2_getNV *****************
 48875 ;; Defined at:
 48876 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 48877 ;; Parameters:    Size  Location     Type
 48878 ;;  index           1    wreg     unsigned char 
 48879 ;; Auto vars:     Size  Location     Type
 48880 ;;  index           1    3[COMRAM] unsigned char 
 48881 ;; Return value:  Size  Location     Type
 48882 ;;                  2    0[COMRAM] short 
 48883 ;; Registers used:
 48884 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48885 ;; Tracked objects:
 48886 ;;		On entry : 0/0
 48887 ;;		On exit  : 0/0
 48888 ;;		Unchanged: 0/0
 48889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48894 ;;Total ram usage:        4 bytes
 48895 ;; Hardware stack levels used: 1
 48896 ;; This function calls:
 48897 ;;		Nothing
 48898 ;; This function is called by:
 48899 ;;		_timer1DoneInterruptHandler
 48900 ;;		_timer3DoneInterruptHandler
 48901 ;; This function uses a non-reentrant model
 48902 ;;
 48903                           
 48904                           	psect	text230
 48905   00C050                     __ptext230:
 48906                           	callstack 0
 48907   00C050                     i2_getNV:
 48908                           	callstack 3
 48909                           
 48910                           ;incstack = 0
 48911                           ;i2getNV@index stored from wreg
 48912   00C050  6E2E               	movwf	i2getNV@index^0,c
 48913                           
 48914                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 48915   00C052  502E               	movf	i2getNV@index^0,w,c
 48916   00C054  A4D8               	btfss	status,2,c
 48917   00C056  D005               	goto	i2l14061
 48918   00C058  0E00               	movlw	0
 48919   00C05A  6E2C               	movwf	(?i2_getNV+1)^0,c
 48920   00C05C  0E7F               	movlw	127
 48921   00C05E  6E2B               	movwf	?i2_getNV^0,c
 48922   00C060  0012               	return	
 48923   00C062                     i2l14061:
 48924                           
 48925                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 48926   00C062  0E7F               	movlw	127
 48927   00C064  642E               	cpfsgt	i2getNV@index^0,c
 48928   00C066  D005               	goto	i2l14067
 48929   00C068  0EFF               	movlw	255
 48930   00C06A  6E2C               	movwf	(?i2_getNV+1)^0,c
 48931   00C06C  0EF6               	movlw	246
 48932   00C06E  6E2B               	movwf	?i2_getNV^0,c
 48933   00C070  0012               	return	
 48934   00C072                     i2l14067:
 48935                           
 48936                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 48937   00C072  0E00               	movlw	low _nvCache
 48938   00C074  242E               	addwf	i2getNV@index^0,w,c
 48939   00C076  6ED9               	movwf	fsr2l,c
 48940   00C078  6ADA               	clrf	fsr2h,c
 48941   00C07A  0E04               	movlw	high _nvCache
 48942   00C07C  22DA               	addwfc	fsr2h,f,c
 48943   00C07E  50DF               	movf	indf2,w,c
 48944   00C080  6E2D               	movwf	??i2_getNV^0,c
 48945   00C082  502D               	movf	??i2_getNV^0,w,c
 48946   00C084  6E2B               	movwf	?i2_getNV^0,c
 48947   00C086  6A2C               	clrf	(?i2_getNV+1)^0,c
 48948   00C088  0012               	return		;funcret
 48949   00C08A                     __end_ofi2_getNV:
 48950                           	callstack 0
 48951                           
 48952                           	psect	rparam
 48953   000000                     
 48954                           	psect	temp
 48955   000055                     btemp:
 48956                           	callstack 0
 48957   000055                     	ds	1
 48958   000000                     int$flags	set	btemp
 48959   000000                     wtemp8	set	btemp+1
 48960   000000                     ttemp5	set	btemp+1
 48961   000000                     ttemp6	set	btemp+4
 48962   000000                     ttemp7	set	btemp+8
 48963                           
 48964                           	psect	config
 48965                           
 48966                           ;Config register CONFIG1L @ 0x300000
 48967                           ;	VREG Sleep Enable bit
 48968                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 48969                           ;	LF-INTOSC Low-power Enable bit
 48970                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 48971                           ;	SOSC Power Selection and mode Configuration bits
 48972                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 48973                           ;	Extended Instruction Set
 48974                           ;	XINST = OFF, Disabled
 48975   300000                     	org	3145728
 48976   300000  15                 	db	21
 48977                           
 48978                           ;Config register CONFIG1H @ 0x300001
 48979                           ;	Oscillator
 48980                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 48981                           ;	PLL x4 Enable bit
 48982                           ;	PLLCFG = OFF, Disabled
 48983                           ;	Fail-Safe Clock Monitor
 48984                           ;	FCMEN = OFF, Disabled
 48985                           ;	Internal External Oscillator Switch Over Mode
 48986                           ;	IESO = OFF, Disabled
 48987   300001                     	org	3145729
 48988   300001  03                 	db	3
 48989                           
 48990                           ;Config register CONFIG2L @ 0x300002
 48991                           ;	Power Up Timer
 48992                           ;	PWRTEN = ON, Enabled
 48993                           ;	Brown Out Detect
 48994                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 48995                           ;	Brown-out Reset Voltage bits
 48996                           ;	BORV = 0, 3.0V
 48997                           ;	BORMV Power level
 48998                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 48999   300002                     	org	3145730
 49000   300002  66                 	db	102
 49001                           
 49002                           ;Config register CONFIG2H @ 0x300003
 49003                           ;	Watchdog Timer
 49004                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 49005                           ;	Watchdog Postscaler
 49006                           ;	WDTPS = 1048576, 1:1048576
 49007   300003                     	org	3145731
 49008   300003  50                 	db	80
 49009                           
 49010                           ; Padding undefined space
 49011   300004                     	org	3145732
 49012   300004  FF                 	db	255
 49013                           
 49014                           ;Config register CONFIG3H @ 0x300005
 49015                           ;	ECAN Mux bit
 49016                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 49017                           ;	MSSP address masking
 49018                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 49019                           ;	Master Clear Enable
 49020                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 49021   300005                     	org	3145733
 49022   300005  89                 	db	137
 49023                           
 49024                           ;Config register CONFIG4L @ 0x300006
 49025                           ;	Stack Overflow Reset
 49026                           ;	STVREN = ON, Enabled
 49027                           ;	Boot Block Size
 49028                           ;	BBSIZ = BB1K, 1K word Boot Block size
 49029                           ;	Background Debugger
 49030                           ;	DEBUG = 0x1, unprogrammed default
 49031   300006                     	org	3145734
 49032   300006  81                 	db	129
 49033                           
 49034                           ; Padding undefined space
 49035   300007                     	org	3145735
 49036   300007  FF                 	db	255
 49037                           
 49038                           ;Config register CONFIG5L @ 0x300008
 49039                           ;	Code Protect 00800-03FFF
 49040                           ;	CP0 = OFF, Disabled
 49041                           ;	Code Protect 04000-07FFF
 49042                           ;	CP1 = OFF, Disabled
 49043                           ;	Code Protect 08000-0BFFF
 49044                           ;	CP2 = OFF, Disabled
 49045                           ;	Code Protect 0C000-0FFFF
 49046                           ;	CP3 = OFF, Disabled
 49047   300008                     	org	3145736
 49048   300008  0F                 	db	15
 49049                           
 49050                           ;Config register CONFIG5H @ 0x300009
 49051                           ;	Code Protect Boot
 49052                           ;	CPB = OFF, Disabled
 49053                           ;	Data EE Read Protect
 49054                           ;	CPD = OFF, Disabled
 49055   300009                     	org	3145737
 49056   300009  C0                 	db	192
 49057                           
 49058                           ;Config register CONFIG6L @ 0x30000A
 49059                           ;	Table Write Protect 00800-03FFF
 49060                           ;	WRT0 = OFF, Disabled
 49061                           ;	Table Write Protect 04000-07FFF
 49062                           ;	WRT1 = OFF, Disabled
 49063                           ;	Table Write Protect 08000-0BFFF
 49064                           ;	WRT2 = OFF, Disabled
 49065                           ;	Table Write Protect 0C000-0FFFF
 49066                           ;	WRT3 = OFF, Disabled
 49067   30000A                     	org	3145738
 49068   30000A  0F                 	db	15
 49069                           
 49070                           ;Config register CONFIG6H @ 0x30000B
 49071                           ;	Config. Write Protect
 49072                           ;	WRTC = OFF, Disabled
 49073                           ;	Table Write Protect Boot
 49074                           ;	WRTB = OFF, Disabled
 49075                           ;	Data EE Write Protect
 49076                           ;	WRTD = OFF, Disabled
 49077   30000B                     	org	3145739
 49078   30000B  E0                 	db	224
 49079                           
 49080                           ;Config register CONFIG7L @ 0x30000C
 49081                           ;	Table Read Protect 00800-03FFF
 49082                           ;	EBTR0 = OFF, Disabled
 49083                           ;	Table Read Protect 04000-07FFF
 49084                           ;	EBTR1 = OFF, Disabled
 49085                           ;	Table Read Protect 08000-0BFFF
 49086                           ;	EBTR2 = OFF, Disabled
 49087                           ;	Table Read Protect 0C000-0FFFF
 49088                           ;	EBTR3 = OFF, Disabled
 49089   30000C                     	org	3145740
 49090   30000C  0F                 	db	15
 49091                           
 49092                           ;Config register CONFIG7H @ 0x30000D
 49093                           ;	Table Read Protect Boot
 49094                           ;	EBTRB = OFF, Disabled
 49095   30000D                     	org	3145741
 49096   30000D  40                 	db	64
 49097                           tosu	equ	0xFFF
 49098                           tosh	equ	0xFFE
 49099                           tosl	equ	0xFFD
 49100                           stkptr	equ	0xFFC
 49101                           pclatu	equ	0xFFB
 49102                           pclath	equ	0xFFA
 49103                           pcl	equ	0xFF9
 49104                           tblptru	equ	0xFF8
 49105                           tblptrh	equ	0xFF7
 49106                           tblptrl	equ	0xFF6
 49107                           tablat	equ	0xFF5
 49108                           prodh	equ	0xFF4
 49109                           prodl	equ	0xFF3
 49110                           indf0	equ	0xFEF
 49111                           postinc0	equ	0xFEE
 49112                           postdec0	equ	0xFED
 49113                           preinc0	equ	0xFEC
 49114                           plusw0	equ	0xFEB
 49115                           fsr0h	equ	0xFEA
 49116                           fsr0l	equ	0xFE9
 49117                           wreg	equ	0xFE8
 49118                           indf1	equ	0xFE7
 49119                           postinc1	equ	0xFE6
 49120                           postdec1	equ	0xFE5
 49121                           preinc1	equ	0xFE4
 49122                           plusw1	equ	0xFE3
 49123                           fsr1h	equ	0xFE2
 49124                           fsr1l	equ	0xFE1
 49125                           bsr	equ	0xFE0
 49126                           indf2	equ	0xFDF
 49127                           postinc2	equ	0xFDE
 49128                           postdec2	equ	0xFDD
 49129                           preinc2	equ	0xFDC
 49130                           plusw2	equ	0xFDB
 49131                           fsr2h	equ	0xFDA
 49132                           fsr2l	equ	0xFD9
 49133                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    597
    Data        0
    BSS         1867
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      84
    BANK0           160     74     115
    BANK1           256     65     255
    BANK2           256     50     254
    BANK3           256      0     200
    BANK4           256      0     192
    BANK5           256      0      72
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8106	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    getNumRxBuffersInUse@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    poll$8107	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8108	const PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8108$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(BANK1[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> txQueue(BANK1[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    quantity@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(BANK1[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    S5136MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> bootEsdData(), canEsdData(), consumer2QEsdData(), nvGetESDdata(), 
		 -> producerEsdData(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), bootPowerUp(), canPowerUp(), consumer2QPowerUp(), 
		 -> mnsPowerUp(), nvPowerUp(), producerPowerUp(), teachPowerUp(), 
		 -> NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12749 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12928 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12928 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12860 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12864 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _powerUp->_teachPowerUp
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _bootPowerUp->_readNVM
    _teachProcessMessage->_sendMessage3
    _teachProcessMessage->_teachCheckLen
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNnclr->_sendMessage2
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage2
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage2
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_APP_GetEventState
    _producerProcessMessage->_sendMessage3
    _sodTRCallback->_APP_GetEventState
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvProcessMessage->_sendMessage2
    _nvProcessMessage->_sendMessage3
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awdiv
    _mnsProcessMessage->_sendMessage2
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _mnsPoll->_sendMessage2
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _getNumRxBuffersInUse->_quantity
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _isConsumedEvent->_getEv
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_sendProducedEvent
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_bounceDown
    _pollServos->_sendProducedEvent
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _processOutputs->_sendProducedEvent
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _sendInvertedProducedEvent->_sendProducedEvent
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_sendProducedEvent
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_push
    _getNumTxBuffersInUse->_quantity
    _readInput->_getNV
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _teachPowerUp->_rebuildHashtable
    _poll->_ackEventProcessMessage
    _poll->_bootProcessMessage
    _poll->_canProcessMessage
    _poll->_consumer2QProcessMessage
    _poll->_mnsProcessMessage
    _poll->_nvProcessMessage
    _poll->_producerProcessMessage
    _poll->_teachProcessMessage
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 4245605
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   32975
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0   10205
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4923
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4738
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   44346
                                              9 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                        _bootPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   24492
                                             73 BANK0      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4592
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    5006
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4780
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _bootPowerUp                                          6     6      0    4663
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2733364
                                             35 BANK2     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  899335
                                             63 BANK1      2     0      2
                                              0 BANK2      6     6      0
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   62481
                                             73 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   20252
                                              9 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   70300
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                 _startTimedResponse
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   91019
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   20190
                                              9 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   75448
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1998
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   58370
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  112033
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   54958
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  340648
                                             52 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         8     1      7  282937
                                             44 BANK1      8     1      7
                           _addEvent
              _checkRemoveTableEntry
                   _rebuildHashtable
                            _writeEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   62938
                                             63 BANK1      2     0      2
                                              0 BANK2     10    10      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  217272
                                             41 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   46634
                                             26 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11604
                                             63 BANK0     11    11      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   70665
                                             26 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage5
                       _sendMessage6
                 _tableIndexToEvtIdx
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8958
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13934
                                             26 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   27593
                                             26 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   29138
                                             26 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   14215
                                             26 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   15059
                                             26 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  612608
                                             63 BANK1      2     0      2
                                              0 BANK2      4     4      0
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  539186
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  519873
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    9015
                                             63 BANK0      2     1      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   38    36      2  729637
                                             63 BANK1      2     0      2
                                              0 BANK2     35    35      0
                                NULL *
                   _ackGetDiagnostic *
                        _bootEsdData *
                         _canEsdData *
                   _canGetDiagnostic *
                  _consumer2QEsdData *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   13385
                                             71 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15722
                                             71 BANK0      3     0      3
                                              8 BANK1      1     1      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     439
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     247
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumer2QEsdData                                    1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     4     2      2    1020
                                             55 BANK0      4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootEsdData                                          1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     3     1      2      62
                                             55 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   51138
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   12001
                                             71 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            20    18      2   31318
                                             63 BANK1      2     0      2
                                              0 BANK2     17    17      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2   13809
                                              9 BANK1      9     7      2
                   _getBufferPointer
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              2 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              1 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (5) _getNumRxBuffersInUse                                 4     4      0     564
                                             51 BANK0      4     4      0
                   _getBufferPointer
                           _quantity
 ---------------------------------------------------------------------------------
 (6) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   29169
                                             63 BANK1      2     0      2
                                              0 BANK2      2     2      0
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      2     0      2
                                              0 BANK2      2     2      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   65978
                                             63 BANK1      2     0      2
                                              0 BANK2      7     7      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13956
                                             71 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                        _bootEsdData (ARG) *
                         _canEsdData (ARG) *
                  _consumer2QEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      2     2      0    9681
                                             70 BANK0      2     2      0
                              _getEv
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   30013
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29771
                                             72 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   29014
                                             71 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  228511
                                             46 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   75278
                                             30 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1940
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1940
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   71113
                                             18 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                       _setOutputPin
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    8078
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12774
                                             63 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       2     2      0   28021
                                             18 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   62381
                                             37 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                     _finaliseOutput
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   42680
                                             34 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   40028
                                             26 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   27223
                                             18 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _finaliseOutput                                       2     1      1     211
                                             45 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1998
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1806
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   35780
                                             18 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   25464
                                             72 BANK0      2     1      1
                                             12 BANK1      6     6      0
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13683
                                             71 BANK0      1     1      0
                                              8 BANK1      4     0      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9928
                                             68 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      10     8      2    3889
                                             58 BANK0     10     8      2
                _getNextWriteMessage
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _push                                                13     9      4    1234
                                             45 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 0     0      0     363
                           _quantity
 ---------------------------------------------------------------------------------
 (7) _quantity                                             6     4      2     363
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  610418
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7243
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  591693
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   34433
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   34433
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23401
                                              1 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13497
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6925
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  504376
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  504042
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14853
                                              5 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              1 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4493
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        5     4      1  461056
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  332882
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  163860
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  168929
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  127554
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2   73087
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _checkRemoveTableEntry                                2     2      0   57047
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   43283
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   24393
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9616
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (7) _getEVs                                               8     8      0    9178
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4394
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   11368
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4493
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4428
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17500
                                              1 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      6     2      4
                                              0 BANK1      1     1      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2359
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1590
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4298
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    7315
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    7315
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    6478
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    2047
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1836
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1836
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     317
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _rebuildHashtable
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _getNumTxBuffersInUse
                 _quantity
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _finaliseOutput
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _setOutputPin
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
             _tableIndexToEvtIdx (ARG)
       _findEvent
       _findService
       _isConsumedEvent
         _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _bootEsdData (ARG) *
         _canEsdData (ARG) *
         _consumer2QEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _producerEsdData (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _getNumRxBuffersInUse
         _getBufferPointer
         _quantity
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _bootEsdData *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _consumer2QEsdData *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerEsdData *
       _producerGetDiagnostic *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awdiv
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage5
         _sendMessage6
         _tableIndexToEvtIdx
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
           _checkRemoveTableEntry
           _rebuildHashtable
           _writeEv
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _startTimedResponse
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _bootPowerUp *
       _readNVM
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0      48      14       28.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C0      13       75.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     32      FE       9       99.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100     41      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      54       1       89.4%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRhh          4      0       0      24        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     494      59        0.0%
DATA                 0      0     834       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Feb 08 11:06:07 2025

                   nerdCallback@nodeNumber 01DA                        findEvent@tableIndex 01CA  
                __end_of_pollTimedResponse ACBA                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 00A8                           sendMessage@data1 01BF  
                         sendMessage@data2 01C0                           sendMessage@data3 01C1  
                         sendMessage@data4 01C2                           sendMessage@data5 01C3  
                         sendMessage@data6 01C4                           sendMessage@data7 01C5  
                      findEvent@nodeNumber 01BE              __end_of_setTimedResponseDelay C8B4  
            __end_of_producerGetDiagnostic C436                          ackEventCheckLen@m 01CF  
                           _completed$1545 0091                              ?_APP_addEvent 01EA  
                     _getNumRxBuffersInUse BF9E                      _timedResponseCallback 0021  
                      _timedResponseOpcode 00B6                               ___awdiv@sign 009C  
                          _normalReadIndex 00CD                                         _io 00CF  
                                       _nn 00B4                                         bsr 0FE0  
                              ?_APP_lowIsr 002B                        ___wmul@multiplicand 0093  
                             configIO@type 01C5                         i2_getBufferPointer A55E  
           _sendInvertedProducedEvent$1404 01D5                           ?_flushFlashBlock 002B  
                   _eventConsumer2QService EF0E                               ?_APP_highIsr 002B  
                  __end_of_eraseFlashBlock BBD6                __end_of_universalEventsInit C840  
                ?_consumer2QProcessMessage 01FD                                _startServos 97CC  
                           ??_getTwoAction 008F                  __end_of_deleteActionRange 99EC  
                                      l260 57BC                                        l501 3D54  
                                      l502 3D60                                        l280 6CCA  
                                      l353 521C                                        l282 6D60  
                                      l470 3C70                                        l454 3A7E  
                                      l551 A89A                                        l463 3A90  
                                      l561 ABA8                                        l449 3A76  
                                      l466 3C7C                                        l458 3A88  
                                      l547 A858                                        l491 3DAE  
                              _startOutput B73A                                        l556 AB66  
                                      l820 AFF4                                        l646 777C  
                                      l814 2DF4                                        l654 B208  
                                      l917 A536                            checkPowerOnPb@i 01F7  
                       _enumerationResults 0234                      deleteHappeningRange@h 01E2  
          ?_APP_isSuitableTimeToWriteFlash 002B           ??_APP_isSuitableTimeToWriteFlash 008D  
                      _expeditedWriteIndex 00CA                            _initServos$8094 00A7  
                          _initServos$8095 00A6                                        _evs 0220  
                                      _pop 9DF8                              _APP_nvDefault 8E48  
                             ___awmod@sign 0092                                        prod 0FF3  
                  i2getNextWriteMessage@wr 0036                                        tosl 0FFD  
                                      wreg 0FE8               tableIndexToEvtIdx@tableIndex 008D  
                      ?i2_getBufferPointer 002B       sendInvertedProducedEvent@can_send_on 01D2  
                  APP_nvValueChanged@index 01F6               APP_GetEventState@disable_off 00A7  
                  APP_nvValueChanged@value 01F1        __end_of_mnsTRallDiagnosticsCallback 846A  
              _mnsTRallDiagnosticsCallback 8366                                       l1104 1410  
                                     l2013 9A60                                       l2006 9B10  
                                     l2200 B340                                       l1323 6856  
                                     l2214 BBC2                                       l2038 44AE  
                                     l2232 BD18                                       l1193 C86A  
                                     l1450 8064                                       l2069 C522  
                                     l1285 C5EE                                       l1525 220C  
                                     l1269 949C                                       l1454 80B0  
                                     l3151 AA30                                       l1287 C5F2  
                                     l1455 80B4                                       l1456 80E0  
                                     l1801 62FC                                       l1529 226C  
                                     l3081 5FB8                                       l2194 B32A  
                                     l1570 3540                                       l2506 B240  
                                     l2187 C74E                                       l1803 630C  
                                     l2531 4E4C                                       l1572 3562  
                                     l1564 3418                                       l1492 1B3C  
                                     l1805 631C                                       l1493 1B60  
                                     l1822 8946                                       l1566 344A  
                                     l1807 6326                                       l2535 6A14  
                                     l1559 33B0                                       l2472 7202  
                                     l1809 6330                                       l2465 7144  
                                     l2539 6A38                                       l1772 616E  
                                     l1781 61F6                                       l2469 7192  
                                     l1774 6176                                       l1783 6206  
                                     l1792 627A                                       l2760 23CE  
                                     l1785 6218                                       l1794 6282  
                                     l1787 621E                             _bootloaderType 00C8  
                                     l1789 6224                                       l2856 C0A4  
                                     l2958 7A60              __end_ofi2_getNextWriteMessage 918C  
                                     _BIE0 0E7E                         doEvuln@eventNumber 01D4  
                                     ?_pop 008D                           setOutputState@io 0095  
                                     _EEIF 7DBE                     __end_of_checkPowerOnPb B73A  
                                     _LATA 0F89                                       _LATB 0F8A  
                                     _LATC 0F8B                                       _IPR5 0F78  
                        doEvuln@nodeNumber 01D2                      __end_of_sodTRCallback 866C  
                           configIO@action 01C4                                       _WPUB 0F5B  
                        setOutputPin@state 0091                             i2_setOutputPin 72AE  
                              _outputState 02B4                              _pushTwoAction B67E  
                    i1_getNextWriteMessage 8F1A                                       _have B06A  
                                     _main BC22                                       _name 0848  
                                     _loop 6D6C                                       _poll 414E  
               __end_of_mnsTRrqnpnCallback C3BA                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       _push 3DC2  
                      setMultiState@action 0091                                       btemp 0055  
                         ?_producerEsdData 002B                          ?_removeTableEntry 002B  
              sodTRCallback@happeningIndex 01DF                                       pop@q 008D  
                                     prodh 0FF4                                       prodl 0FF3  
                          __end_ofi2_getNV C08A                                       start 081C  
                             ?_loadNvCache 002B                         bounceDown@reversed 00A6  
                             bootPowerUp@a 009A                               bootPowerUp@b 0097  
                             bootPowerUp@i 0099            APP_GetEventState@happeningIndex 00A9  
                            setupTimer1@io 009C                        _setExpeditedActions C8D0  
                            setupTimer3@io 009C                 __end_of_startDigitalOutput 5976  
                           _setBounceState 9BF8                consumer2QProcessMessage@end 02CF  
              consumer2QProcessMessage@enn 02D2                       ??i2_getBufferPointer 002D  
              consumer2QProcessMessage@opc 02D1                         ??_removeTableEntry 01C7  
                            ?_APP_testMode 002B                            getEN@tableIndex 00A1  
                             ___param_bank 0000                             ??_APP_addEvent 00AA  
                    ?_getNumRxBuffersInUse 002B                      __end_of_defaultEvents 789A  
                         ?_producerPowerUp 002B                          findServiceIndex@i 0090  
                              completed@io 0092                       __end_of_EEPROM_Write B366  
                              _uptimeTimer 014C                                      ??_pop 008F  
                                    l20011 50FA                                      l20021 989A  
                                    l20007 50BC                                      l20111 A3E0  
                                    l20103 A3CC                                      _B0CON 0E80  
                                    l20201 B12C                                      l20043 9914  
                                    l20035 98F8                                      l20115 A3EA  
                                    l20107 A3D6                                      l20141 A8C8  
                                    l20205 B136                                      l20045 991A  
                                    l20125 A3FE                                      l21005 2D34  
                                    l20063 BAAA                                      l20303 8E66  
                                    l20039 9908                                      l20119 A3F4  
                                    l21015 2DC6                                      _B1CON 0E90  
                                    l20153 A8EE                                      l20209 B144  
                                    l22001 0978                                      l20075 7752  
                                    l20083 787A                                      l20155 A8F6  
                                    l20147 A8D8                                      l20307 8E6A  
                                    l20411 9064                                      l20403 8FF2  
                                    l20331 9B52                                      l21115 2EBC  
                                    l20091 A3AE                                      l21211 8854  
                                    l21203 884C                                      l21035 AFD2  
                                    l20077 77A6                                      l20229 B4EE  
                                    l20173 A92E                                      l20165 A916  
                                    l20317 8E6E                                      l21301 8932  
                                    l20405 900E                                      l20341 9BCA  
                                    l20237 BC7E                                      l21125 305C  
                                    l22021 0A84                                      l21029 AFCE  
                                    l20079 77CE                                      l20319 8EA8  
                                    l21303 893C                                      l20407 902A  
                                    l20335 9B80                                      l20351 965A  
                                    l21135 320E                                      l21143 3264  
                                    l21071 5AF2                                      l21047 59B2  
                                    l22015 0A34                                      l22007 09D2  
                                    l20095 A3B8                                      l20087 A3A4  
                                    l21231 8866                                      l21223 885C  
                                    l21207 8850                                      _B2CON 0EA0  
                                    l20169 A920                                      l20193 B10C  
                                    l20185 B0F2                                      l21321 8986  
                                    l21313 896E                                      l20265 C34C  
                                    l20417 909E                                      l20337 9B9C  
                                    l20345 9BE6                                      l20425 A21C  
                                    l20361 96B8                                      l21129 30B0  
                                    l21073 5B0A                                      l22113 0F60  
                                    l22041 0B60                                      l22033 0AFC  
                                    l22017 0A50                                      l22009 09F4  
                                    l20441 B804                                      l21241 887A  
                                    l23001 C616                                      l20195 B114  
                                    l20291 8E5A                                      l20283 8E56  
                                    l21307 8950                                      l20355 967A  
                                    l21139 3260                                      l21067 5ACA  
                                    l21059 5A5A                                      l22211 161A  
                                    l22203 1584                                      l22027 0AC8  
                                    l21163 AB3E                                      l20099 A3C2  
                                    l21235 886A                                      l21227 8860  
                                    l21219 8858                                      l23011 C61E  
                                    l20189 B0FE                                      l21325 8992  
                                    l21317 897A                                      l21309 8962  
                                    l20373 9BFE                                      l20357 968A  
                                    l20349 964C                                      l21085 5B80  
                                    l22141 115C                                      l22133 10A8  
                                    l22053 0BF0                                      l20453 B82E  
                                    l20445 B814                                      l21261 8882  
                                    l21173 C49C                                      l23005 C61A  
                                    l21501 8CB8                                      l20701 45EC  
                                    l20295 8E5E                                      l21343 BFE0  
                                    l20383 9C76                                      l20391 B3D2  
                                    l22223 1704                                      l22207 15E4  
                                    l22127 1018                                      l22071 0D0E  
                                    l22231 175C                                      l22047 0BA0  
                                    l22039 0B3E                                      l22215 1652  
                                    l21159 AB3A                                      l22311 C5F6  
                                    l21503 8CF6                                      _B3CON 0EB0  
                                    l20609 C65E                                      l21329 89A4  
                                    l20377 9C2C                                      l20393 B3E8  
                                    l21097 5BDE                                      l22233 1788  
                                    l22217 1680                                      l22145 11B6  
                                    l22137 1102                                      l22129 1050  
                                    l22049 0BBC                                      l20473 BFB2  
                                    l20457 B838                                      l21273 88A6  
                                    l21265 8894                                      l21249 887E  
                                    l21441 B24A                                      l20721 46EC  
                                    l23025 B3C8                                      l23121 7E1C  
                                    l20299 8E62                                      l20491 B9AA  
                                    l20627 B852                                      l20379 9C48  
                                    l20387 9C92                                      l20811 593A  
                                    l20803 58D8                                      l21099 5C0E  
                                    l22227 1728                                      l22163 12C4  
                                    l22155 1258                                      l22147 11C8  
                                    l22083 0DAA                                      l22059 0C2C  
                                    l22075 0D46                                      l23203 97EE  
                                    l21195 8844                                      l21283 88AA  
                                    l21355 C44C                                      l21443 B25C  
                                    l21515 8D68                                      l20731 4776  
                                    l20715 46AC                                      l20707 4672  
                                    l23019 B372                                      l21531 C3DC  
                                    l23115 7DEA                                      l20397 B402  
                                    l22157 127A                                      l22077 0D84  
                                    l22069 0CE6                                      l21293 C474  
                                    l21541 C424                                      l22317 C5FA  
                                    l23061 C6A6                                      l23053 C6A2  
                                    l20725 4722                                      l20717 46B6  
                                    l20709 4688                                      l23045 9620  
                                    l23037 95BC                                      l23133 7EC6  
                                    l21551 B8C4                                      l20647 B882  
                                    l22503 61CE                                      l20831 A84A  
                                    l20399 B412                                      l23311 6398  
                                    l22183 13F4                                      l22175 1388  
                                    l22167 12FA                                      l23215 9836  
                                    l22351 C13A                                      l21199 8848  
                                    l21447 B26E                                      l20671 4514  
                                    l20743 47E6                                      l23047 9642  
                                    l24031 1C70                                      l24015 1B8E  
                                    l24007 1B62                                      l23119 7E0E  
                                    _B4CON 0EC0                                      l23233 5138  
                                    l20913 BEBE                                      l23401 65B6  
                                    l22177 13AA                                      l22097 0E7C  
                                    l22337 A38C                                      l22329 A310  
                                    l24201 32F0                                      l21481 C4EC  
                                    l21449 B282                                      l20665 44F2  
                                    l22417 C39A                                      l24121 2206  
                                    l24041 1CA6                                      l23129 7E94  
                                    l22363 875E                                      l21547 B8B0  
                                    l22531 622A                                      l21299 8928  
                                    l23251 51CC                                      l20843 A870  
                                    l21811 B96C                                      l21803 B954  
                                    l20763 577E                                      l23331 63D4  
                                    l22195 14C4                                      l23227 9880  
                                    l22347 C12A                                      l22355 C142  
                                    l20819 C4C4                                      l22451 C796  
                                    l23067 C6AA                                      l22435 ACDE  
                                    l20739 47CA                                      l20691 458E  
                                    l20683 454E                                      l20675 452E  
                                    l25011 2748                                      l24027 1BE6  
                                    l24019 1BB8                                      l23163 9D54  
                                    l22533 627C                                      l23237 5140  
                                    l20917 BED2                                      l21821 AA48  
                                    l23325 63BC                                      l22277 A172  
                                    l22605 9E98                                      l21709 B6B2  
                                    l22349 C132                                      l20933 29C0  
                                    l22429 ACCA                                      l20693 4598  
                                    l20685 455E                                      l24141 2240  
                                    l24109 2192                                      l24061 1DDC  
                                    l24053 1DB0                                      l25101 5EAA  
                                    l23181 9DE6                                      l22543 62B0  
                                    l23271 52DC                                      l23263 5266  
                                    l21807 B960                                      l23343 6404  
                                    l23319 63A4                                      l22199 1524  
                                    l22295 A0D4                                      l24215 3344  
                                    l24207 3318                                      l21743 C6CA  
                                    l22447 C792                                      l22703 C780  
                                    l20951 2A60                                      l22383 A68C  
                                    l25031 27AA                                      l24047 1D5E  
                                    l23175 9D96                                      l23167 9D5C  
                                    _B5CON 0ED0                                      l22537 6286  
                                    l21681 81EC                                      l21673 8174  
                                    l23281 5336                                      l23273 52EC  
                                    l21825 AA4C                                      l21841 AA9E  
                                    l21817 B978                                      l20793 5886  
                                    l20777 57EE                                      l23337 63EC  
                                    l23441 6D28                                      l23425 6C7E  
                                    l23409 6BA0                                      l24217 3348  
                                    l21737 C6C6                                      l21729 C6C2  
                                    l22457 C79A                                      l20945 2A20  
                                    l20937 29D0                                      l20697 45C2  
                                    l21913 8594                                      l22393 83C6  
                                    l22465 BE72                                      l23513 3B82  
                                    l24129 2214                                      l24081 1F34  
                                    l24161 2272                                      l24401 4980  
                                    l25113 5F4C                                      l25105 5ECC  
                                    l22491 617A                                      l23283 5348  
                                    l20891 B002                                      l20787 5866  
                                    l23419 6C28                                      l23195 97DE  
                                    l22715 78DE                                      l22707 789C  
                                    l21931 85D4                                      l25051 281C  
                                    l23611 3D6A                                      l23603 3D48  
                                    l24067 1E20                                      l25203 9CFC  
                                    l22549 62D6                                      l21677 81B0  
                                    l23293 53B8                                      l21829 AA66  
                                    l20797 58B0                                      l21861 B764  
                                    l21853 B74C                                      l23357 64A8  
                                    l23429 6CA6                                      l22805 8318  
                                    l22733 7964                                      l24229 33CA  
                                    l24309 3686                                      l20981 2C3A  
                                    l20973 2BA8                                      l20965 2B2A  
                                    l20957 2A9E                                      l21941 8604  
                                    l22397 83CA                                      l23613 3D70  
                                    l23621 3D7E                                      l23541 3C2A  
                                    l23533 3C16                                      l24077 1E4E  
                                    l24413 49D0                                      l25141 60B4  
                                    l25109 5ED0                                      l22487 6170  
                                    l21687 8228                                      l23287 536C  
                                    l23295 53D6                                      l21871 A4D0  
                                    l21767 AB7E                                      l23391 6586  
                                    l23359 64B0                                      l23439 6D1C  
                                    l25231 6E76                                      l22815 8344  
                                    l22743 799E                                      l22735 7966  
                                    l24263 34F4                                      l21951 861C  
                                    l22831 B604                                      l23527 3BBA  
                                    l23703 A2BA                                      l24095 2156  
                                    l24087 2128                                      l25151 6112  
                                    l25135 602A                                      l23463 BD58  
                                    l22497 61A6                                      l22577 6336  
                                    l21689 825C                                      l23289 537E  
                                    l23297 53E8                                      l21793 A7BE  
                                    l21857 B758                                      l21849 B740  
                                    l23385 655C                                      l23393 658A  
                                    l25225 6E1A                                      l22729 7920  
                                    l24265 34F8                                      l24273 355C  
                                    l20993 2CB8                                      l20969 2B6A  
                                    l21953 8644                                      l21937 85EC  
                                    l25073 28F0                                      l23545 3C36  
                                    l23529 3C00                                      l23801 6938  
                                    l24441 4A94                                      l24361 4898  
                                    l24345 4828                                      l25137 6074  
                                    l25313 423E                                      l24329 C0FC  
                                    l23299 53F8                                      l21875 A4D4  
                                    l20899 B05E                                      l21867 B770  
                                    l22747 79A4                                      l24195 32D4  
                                    l20987 2C7A                                      l21947 8610  
                                    l24531 AC96                                      l24515 AC52  
                                    l22907 7DC4                                      l22827 B600  
                                    l22835 B608                                      l23491 3A96  
                                    l23715 A2D8                                      l24419 49FC  
                                    l24363 489E                                      l25307 41E0  
                                    l23459 BD50                                      l25091 C2B0  
                                    l15803 C368                                      l21963 AF1A  
                                    l15645 A9E2                                      l21893 A53A  
                                    l22597 9E24                                      l22765 79CA  
                                    l22757 79C2                                      l24269 353C  
                                    l22693 C778                                      l24525 AC8A  
                                    l24517 AC78                                      l22925 B2A0  
                                    l22941 C094                                      l23549 3C40  
                                    l23493 3B18                                      l23477 3A44  
                                    l24453 4AF0                                      l24429 4A28  
                                    l24357 485A                                      l25149 60E6  
                                    l23469 BD70                                      l15647 A9EE  
                                    l24551 9A06                                      l21879 A4EE  
                                    l21991 0910                                      l21983 085A  
                                    l25239 6ED6                                      l20999 2CF6  
                                    l24527 AC90                                      l22855 9550  
                                    l22847 94F6                                      l22871 AD84  
                                    l23559 3C84                                      l24391 4954  
                                    l24367 48A2                                      l25351 43BA  
                                    l25319 4244                                      l23671 944C  
                                    l23663 940C                                      l21967 AF26  
                                    l21975 AF5A                                      l19105 7AE0  
                                    l15657 AA22                                      l21993 0932  
                                    l22777 BE32                                      l22785 BE52  
                                    l22769 79D2                                      l24289 3616  
                                    l22697 C77C                                      l22881 7CEE  
                                    l23593 3CE2                                      l23569 3CA6  
                                    l23745 67F0                                      l23913 1950  
                                    l23657 9408                                      l23729 C2DE  
                                    l23841 80E4                                      l25193 9CE8  
                                    l19043 BB3A                                      l24539 9AB6  
                                    l21995 0944                                      l21987 08B6  
                                    l23595 3D28                                      l23691 A28A  
                                    l23907 1914                                      l24379 48FE  
                                    l24467 4B1C                                      l24643 A006  
                                    l23851 8106                                      l25259 8AFE  
                                    l19029 A9B8                                      l25285 B702  
                                    l22797 828E                                      l24709 69D2  
                                    l22957 B180                                      l22981 8A84  
                                    l24813 22E0                                      l23909 194C  
                                    l23829 808C                                      l25197 9CF0  
                                    l25445 BC62                                      l19119 B308  
                                    l19215 BB44                                      l24751 6AB2  
                                    l22887 7D26                                      l22983 8A96  
                                    l24807 22C0                                      l23791 68E2  
                                    l23759 683A                                      l23767 6852  
                                    l23943 19E4                                      l23927 199E  
                                    l23919 1972                                      l23863 179E  
                                    l24655 A038                                      l25359 448C  
                                    l19153 B362                                      l19225 BB68  
                                    l19313 8480                                      l19081 7A12  
                                    l24729 6A34                                      l22993 8AD0  
                                    l22969 8A32                                      l24825 231C  
                                    l23697 A2A4                                      l23961 1A2E  
                                    l23881 183E                                      l23953 19F2  
                                    l24673 A068                                      l24489 BDE8  
                                    l24585 7150                                      l19219 BB56  
                                    l19251 7F36                                      l22899 7D72  
                                    l24819 2316                                      l23787 687A  
                                    l23955 1A1E                                      l23883 1842  
                                    l23867 17CA                                      l24659 A03C  
                                    l24579 7148                                      l19181 9256  
                                    l19173 91D2                                      l19341 851C  
                                    l19325 848A                                      l19093 7A6E  
                                    l24773 6B86                                      l22997 C612  
                                    l22989 8AB8                                      l24909 257A  
                                    l24853 2394                                      l23789 68CC  
                                    l23981 1A8E                                      l23973 1A62  
                                    l23893 186C                                      l19167 91BC  
                                    l19191 9758                                      l19351 8532  
                                    l19319 8486                                      l19087 7A24  
                                    l19239 7F1A                                      l19407 BDB8  
                                    l19431 B0D0                                      l19423 B074  
                                    l24767 6B7A                                      l24951 2652  
                                    l24855 2398                                      l23799 68FE  
                                    l23887 1846                                      l19169 91C0  
                                    l19273 7F6E                                      l19257 7F3A  
                                    l24929 25C8                                      l19347 852E  
                                    l19515 373E                                      l24971 26A4  
                                    l24859 239C                                      l23899 18F2  
                                    l24795 C0CC                                      l19373 7BD8  
                                    l19533 3886                                      l19509 3734  
                                    l24949 264C                                      l24893 24E2  
                                    l24877 245A                                      l23989 1AD4  
                                    l19703 707C                                      l19295 7FE0  
                                    l19287 7FB6                                      l19383 7C52  
                                    l19391 7C9A                                      l19519 3744  
                                    l19463 414A                                      l19455 3E2A  
                                    l24991 26F6                                      l19385 7C8C  
                                    l19473 8DDE                                      l19633 4D10  
                                    l19707 70BA                                      l19299 8024  
                                    l19547 3938                                      l18933 B63C  
                                    l19725 A636                                      l19717 A60C  
                                    l19549 393A                                      l19557 394C  
                                    l19805 8C8A                                      l19653 4E06  
                                    l18919 BC0E                                      l18943 B65E  
                                    l19735 A676                                      l19495 36B2  
                                    l19479 8E20                                      l19663 4E30  
                                    l18937 B654                                      l18929 B624  
                                    l19681 BF86                                      l19569 3A22  
                                    l19921 67B6                                      l19905 678C  
                                    l19675 BF76                                      l19691 6F7C  
                                    l19851 A74E                                      l19843 A714  
                                    l19915 679E                                      l19771 99C4  
                                    l19763 9968                                      l19595 4B9E  
                                    l19693 6FBA                                      l19853 A75A  
                                    l19845 A718                                      l19749 9944  
                                    l19589 4B82                                      l19687 6F3A  
                                    l18983 A94C                                      l19943 BCF6  
                                    l19935 BCBC                                      l19697 6FFC  
                                    l19953 4E5E                                      l19873 65E4  
                                    l19793 8BCC                                      l19699 703A  
                                    l19859 A784                                      l19971 4F12  
                                    l19963 4ED4                                      l19955 4E74  
                                    l19779 99D8                                      l18999 A970  
                                    l19959 4EB6                                      l19879 65EC  
                                    l19977 4F34                                      l19897 6746  
                                    l19987 4F9C                                      l19979 4F4A  
                                    l19997 502C                                      l19989 4FDA  
                                    ?_have 002B                                      l19999 506A  
                                    ?_main 002B                  ??_consumer2QGetDiagnostic 0099  
                             ?_initOutputs 002B                        processEnumeration@i 01C6  
                          __end_of___awdiv A938                                      _EEADR 0F74  
                                    ?_loop 002B                          setOutputState@act 0093  
                          __end_of___awmod B14E                                      ?_poll 002B  
                                    ?_push 008D                                      _BSEL0 0E7D  
                          __end_of___lldiv AA42                                      u20004 505C  
                                    u20005 5058                                      u20030 5080  
                                    u21000 571C                                      _T0CON 0FD5  
                                    u21010 571E                                      u20044 50B0  
                                    u20220 B118                                      u20300 BC8A  
                                    u21020 5796                            ___awdiv@divisor 0099  
                                    u20045 50AC                                      u20054 50EC  
                                    u20070 9896                                      u21030 5798  
                                    u20055 50E8                                      u20160 A8FA  
                                    u20320 BC9E                                      u21200 5946  
                                    u21210 5948                                      u21050 57B8  
                                    u20340 BCAA                                      u21140 58D4  
                                    u21060 57BA                                      u20270 B4DE  
                                    u21150 58D6                                      u21240 A846  
                                    u23000 12E0                                      u21410 BECE  
                                    u20450 9048                                      u20290 BC88  
                                    u22204 81E0                                      u20460 9082  
                                    u21180 590A                                      u22060 8CB4  
                                    u22205 81DC                                      u22214 821C  
                                    u21190 590C                                      u23110 1512  
                                    u22215 8218                                      u23200 16F4  
                                    u23120 1514                                      u22410 AA9A  
                                    u23210 171A                                      u20810 45BE  
                                    u20730 44EE                                      u23220 171C  
                                    u23140 1572                                      u20740 452A  
                                    u21541 2BC6                                      u15150 A9F2  
                                    u22430 A4EA                                      u23150 1574  
                                    u22270 C650                                      u20910 471E  
                                    u20830 45E8                                      u21800 2EEE  
                                    u23080 14B2                                      u22194 81A4  
                                    u21730 5B6C                                      u23170 15D2  
                                    u23090 14B4                                      u23250 A1C4  
                                    u20930 4740                                      u20850 466E  
                                    u20770 454A                                      u22530 860C  
                                    u22195 81A0                                      u21491 2ABC  
                                    u22380 AA62                                      u21660 59AC  
                                    u23180 15D4                                      u23260 A1C6  
                                    u20940 4772                                      u24300 9D92  
                                    u22470 A532                                      u21670 59AE  
                                    u20790 458A                                      u24310 9D94  
                                    u22550 AF4E                                      u22800 0CD2  
                                    u23280 A126                                      u26000 365E  
                                    u20960 4794                                      u23440 BE6E  
                                    u25200 94B8                                      u22560 AF50  
                                    u21770 2E9A                                      u22810 0CD4  
                                    u23290 A128                                      u20970 47C6  
                                    u20890 46E8                                      u25210 A286  
                                    u23460 6154                                      u21780 2EBC  
                                    u22900 0F1A                                      u22820 0CFC  
                                    u24420 9864                                      u24340 97DA  
                   APP_GetEventState@flags 00A6                                      u23358 8804  
                                    u21790 2EEC                                      u22830 0CFE  
                                    u22670 0AB4                                      u26110 49BC  
                                    u23359 8816                                      u22680 0AB6  
                                    u23800 797E                                      u25160 3DB8  
                                    u26040 4824                                      u19010 8514  
                                    u24530 5262                                      u22850 0E32  
                                    u21890 8876                                      u26130 4A64  
                                    u23580 6302                                      u24540 5264  
                                    u22860 0E34                                      u24380 981C  
                                    u27020 6EBE                                      u25260 67EC  
                                    u26300 A002                                      u25180 9458  
                                    u23590 6312                                      u27030 6F16  
                                    u23398 840E                                      u23399 8422  
                                    u24640 53A6                                      u23904 82F6  
                                    u23760 78DA                                      u26400 6A32  
                                    u25360 805A                                      u23905 82F2  
                                    u24650 53A8                                      u24570 52A6  
                                    u22890 0F18                                      u23930 8362  
                                    u24580 52A8                                      u24660 6392  
                                    u23780 795E                                      u26180 AC4E  
                                    u26165 BE0C                                      u26166 BE0E  
                                    u26270 717A                                      u19240 373A  
                                    u24840 6C50                                      u25720 2188  
                                    u25608 1D0C                                      u27320 4496  
                                    u27208 42EA                                      u25609 1D2E  
                                    u27209 42FC                                      u18530 C866  
                                    u24850 6C52                                      u23890 82E2  
                                    u27170 4226                                      u23875 82A2  
                                    u26460 22DC                                      u24940 3A40  
                                    u27308 446C                                      u27068 8BA4  
                                    u27309 447E                                      u27069 8BB6  
                                    u18550 C84E                                      u24790 6590  
                                    u25910 348C                                      u26198 AC56  
                                    u26199 AC72                                      u19504 6FF0  
                                    u18720 7A06                                      u19280 3940  
                                    u25840 332E                                      u26480 2310  
                                    u27248 4378                                      u19505 6FEC  
                                    u27249 438A                                      u19514 702C  
                                    u25850 3388                                      u19515 7028  
                                    u18820 91A8                                      u18740 7A64  
                                    u25940 3538                                      u25780 32B2  
                                    u25668 200A                                      u25669 201E  
                                    u19534 7070                                      u19550 A632  
                                    u25870 33B4                                      u25678 2088  
                                    u19535 706C                                      u25679 209C  
                                    u19544 70AC                                      u25880 340A  
                                    u25688 2106                                      u19545 70A8  
                                    u19385 4BFE                                      u25689 211A  
                                    u19474 6F70                                      u19730 A722  
                                    u18850 91FE                                      u25970 35AA  
                          reqevCallback@ev 01E2                                      u19475 6F6C  
                     __end_of_factoryReset 883E                                      u19484 6FAC  
                                    u19740 A724                                      u18780 B32E  
                                    u19485 6FA8                                      u19830 6794  
                                    u19815 6702                                      u19760 A742  
                                    u19816 6706                                      u19728 AC2C  
                                    u19770 A744                                      u19930 4F60  
                                    u18970 802C                                      u18868 9202  
                                    u18990 847C                                      u19790 65E0  
                                    u26990 6E58                          _initTimedResponse C8C4  
                                    u19944 4F90                                      u19945 4F8C  
                                    u19954 4FCC                                      u19955 4FC8  
                                    u19980 4FF0                                      u19994 5020  
                                    u19995 501C                             ?_APP_nvDefault 002B  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback BEA6                               i2_canTxError B55C  
         __end_of_factoryResetGlobalEvents C8EC                             _APP_nvValidate AF86  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0032  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 9580  
                          __end_of_doNenrd B1BE                       ?_setExpeditedActions 002B  
             nvProcessMessage@valueOrError 02CE                            __end_of_doEvuln ADB0  
                           _ackDiagnostics 01B6                            __end_of_doNnclr C1BA  
                          __end_of_doNnevn B2FE         sendInvertedProducedEvent@happening 01D4  
                          __end_of_doReqev 7DE4                            __end_of_doReval 8AE6  
                                    i1_pop 9EA2                                      i2_pop 9F4C  
                          __end_of_doRqevn C0C2                            __end_of_getHash C6FC  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 0015  
                       ?_initTimedResponse 002B                         __p_paramBlock_text 0820  
                          __end_of_highIsr 93F2                              ?_leds_powerUp 002B  
                          __end_of_isEvent C526                            __end_of_configs EE69  
                                    _canId 00B9                                      _doSOD C7A6  
              ??_sendInvertedProducedEvent 00AA                                      _getEN ADB0  
                                    _getNN 970A                                      _getNV BF60  
                                    _getEv 79F4                           needsStarting@act 008D  
                     _enumerationStartTime 0011                            __end_of_readNVM B67E  
                          __end_of_isrHigh 8758                                      _setNV ACBA  
                   __end_ofi2_setOutputPin 745C                                      _numEv 8C9E  
                                    have@i 0090                                      _speed 0200  
                                    _setup 9CA4                        canReceiveMessage@mp 01CB  
                      canReceiveMessage@no 01CD               __end_of_getNumTxBuffersInUse C862  
                          __end_of_mnsPoll 369E                              setNV@oldValue 01FB  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B89E  
                          ?_checkPowerOnPb 002B                            __end_of_setType B4FA  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 002B  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D9            mnsTRallDiagnosticsCallback@type 002B  
                                    poll@i 02F4                                      poll@m 02F5  
                         __end_ofi2_canIsr C7F0                            __end_of_powerUp 8BC2  
                                    plusw2 0FDB                                      push@m 008F  
                                    push@q 008D                    reqevCallback@tableIndex 01E6  
                                    ttemp5 0056                                      ttemp6 0059  
                                    ttemp7 005D                           _setServoPosition C5C4  
                                    status 0FD8                                      wtemp8 0056  
                            ?_nvGetESDdata 002B                     __end_of_setBounceState 9CA4  
                  reqevCallback@nodeNumber 01E4                            __end_of_writeEv 3A32  
                 ?_updateModuleErrorStatus 002B                 __end_of_startTimedResponse BEE4  
                             bounceDown@io 00A9                           ?_nvGetDiagnostic 0097  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01C4                            __initialization AEA2  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have B0DC                               __end_of_main BC6C  
                             __end_of_name 0850                               __end_of_loop 6F34  
                             __end_of_poll 44C4                               __end_of_push 414E  
                            ?_nerdCallback 01D8                           i2canFillRxFifo@m 0037  
                         _setupTimer1$1932 0098                           _setupTimer3$1936 0098  
                     __end_of_getParameter 8922                  __end_of_initTimedResponse C8CA  
                   __end_of_APP_nvValidate AFF8                                     ??_have 008D  
                             ?_setNewCanId 002B                                     ??_main 00AA  
                         ?_eraseFlashBlock 002B                                     ??_loop 01EC  
                             ?_sendMessage 01BE                                     ??_poll 02EF  
                                   ??_push 0091                      __end_of_reqevCallback 9646  
                 __end_of_ackEventCheckLen C7D8                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01FD                          _pollsPerStepSpeed 0274  
                                   ?i1_pop 0060                                     ?i2_pop 002B  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CC  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 90BC                                     ?_doSOD 002B  
                    __end_of_setServoState 9BF8                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 015C                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 67C0  
                                   ?_setNV 01F8                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7A                                     ?_numEv 002B  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 002F  
                                   _CIOCON 0F70                                     ?_setup 002B  
                      APP_nvValidate@index 00A0        consumer2QProcessMessage@firstAction 02D6  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 009F  
                       setOutputState@type 0094                                  ??i2_getNV 002D  
                   ?i1_getNextWriteMessage 0060                           reqevCallback@nEv 01DF  
                                   i1l2118 86AE                                     i1l2069 C572  
                                   i1l2561 56BA                                     i2l2113 8724  
                                   i2l2069 C698                      getNumRxBuffersInUse@i 0096  
                                   i2l2561 5EA2                                     _TABLAT 0FF5  
                       rebuildHashtable@ev 01C1                     _producerProcessMessage 5EA8  
                  ackEventProcessMessage@m 01FD                                     _TBLPTR 0FF6  
                           ??_nvGetESDdata 008D                              _needsStarting AA42  
          __end_of_consumer2QGetDiagnostic C4D6                                     _TXB0D0 0F26  
                                   _TXB0D1 0F27                                     _TXB0D2 0F28  
                                   _TXB0D3 0F29                                     _TXB0D4 0F2A  
                                   _TXB0D5 0F2B                                     _TXB0D6 0F2C  
                                   _TXB0D7 0F2D                           __end_of_checkLen AB42  
                             ?_removeEvent 01CD                            ?_setBounceState 0091  
                      setServoPosition@pos 009F                             _clearAllEvents B9A4  
                 __end_of_APP_factoryReset C678                       __end_of_getTwoAction C8BC  
                      setServoState@action 0091                            setMultiState@io 0092  
                            _canFillRxFifo 745C                                initTicker@i 008F  
                        ?_findServiceIndex 002B                           _rebuildHashtable 7F14  
                         ??_processActions 00AA                          _canProcessMessage 9FF4  
                                   i1pop@q 0060                              teachPowerUp@i 00A9  
                                   i2pop@q 002B                            completed@action 008D  
                       finaliseOutput@type 008D                   reqevCallback@eventNumber 01E0  
               __end_of_APP_nvValueChanged 2DF6                            setServoState@io 0092  
                         __end_of_configIO 5132                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent BC6C                         _processEnumeration 789A  
                              readInput@io 0093                         ?_canProcessMessage 01FD  
                   ??_getNumRxBuffersInUse 0093                           pollServos@midway 01DA  
               startDigitalOutput@pinState 01DD                             teachCheckLen@m 01CF  
             ??_timer3DoneInterruptHandler 0033                           __end_of_bounceUp 5C12  
                         pollServos@target 01D8                                     ___lmul B89E  
                 __end_of_mnsGetDiagnostic C486                             ??_nerdCallback 00AA  
                                   _canIsr C6FC            checkRemoveTableEntry@tableIndex 01CD  
                                   _canPri EE86                                     ___wmul C526  
                                ??___awdiv 009B                                     _doNerd C758  
                                ??___awmod 0091                      _APP_preProcessMessage C8E2  
                                   _doWait A79C                           ??_finaliseOutput 008E  
                                   _getEVs 846A                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01E4  
                            _nvDiagnostics 01A3                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy BE20  
                                ??_doEvlrn 00AA                                  ??_doNenrd 00AA  
                                   _isrLow 866C                                  ??_doEvuln 00AA  
                                   getNN@f 00A1                                  ??_doNnclr 00AA  
                                   clear_0 AEAA                                     clear_1 AEBC  
                                   clear_2 AEC8                                  ??_doNnevn 01C7  
                                   clear_3 AED4                                     clear_4 AEE0  
                                   clear_5 AEEC                                     clear_6 AEF8  
                                   clear_7 AF04                                  ??_doReqev 00AA  
                                ??_doReval 01CC                                     _lowIsr 925A  
                                   _saveNV C016                           ___awdiv@quotient 009D  
                                   getEv@f 00A4                   __end_of_setDigitalOutput A79C  
                          ___awmod@divisor 008F                                  ??_doRqevn 00AA  
                         flushFlashBlock@i 008F                        ?_processEnumeration 002B  
                                   have@id 008F                                  ??_getHash 00A7  
                          ??_APP_nvDefault 009F                        ??_canProcessMessage 02CC  
                                   isa$std 0001                            ___awmod@counter 0091  
                          ?_APP_nvValidate 009F                           ??_processOutputs 01D0  
                                ??_highIsr 0044                                  ??_isEvent 008D  
           __end_of_ackEventProcessMessage 69B2                   __end_of_setNormalActions C8D0  
              producerProcessMessage@index 02D5                                  ??_readNVM 0094  
                 nerdCallback@serviceIndex 01D8                                  ??_isrHigh 0049  
                            i2_checkTxFifo 5C12                      ackGetDiagnostic@index 0099  
                        _canReceiveMessage 69B2                 __end_of_teachGetDiagnostic C4FE  
                         _nvProcessMessage 4816                                     numEv@f 00A2  
                                ??_mnsPoll 01CB                                     pop@ret 0094  
                         canFillRxFifo@ptr 006E                          ??_mnsFactoryReset 00AA  
                             __mediumconst ED28                                  ??_tickGet 0091  
                         __end_of_services EE7B                         _tableIndexToEvtIdx C8A0  
              findServiceIndex@serviceType 008F                                  ??_setType 00AA  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                        doEvlrn@nodeNumber 01F2                                     tblptru 0FF8  
                             ??_FLASH_Read 008F                              _initInputScan 9D4E  
                         __end_of_quantity BF22                          nvProcessMessage@m 01FD  
                       ?_canReceiveMessage 01C7                                  ??_powerUp 01C7  
                        __end_ofi1_isEvent C576                               i2getNV@index 002E  
               __end_of_peekTwoActionQueue A8B2                     getParameterFlags@flags 0091  
                             ?_setupTimer1 002B          mnsTRserviceDiscoveryCallback@step 01D9  
                             ?_setupTimer3 002B                            ??_pushTwoAction 008D  
        mnsTRserviceDiscoveryCallback@type 002B                              checkTxFifo@mp 0073  
                        __end_ofi2_isEvent C69C                          i2_checkCANTimeout BA4C  
                     __end_of_APP_addEvent B22A                                  ??_writeEv 01D1  
                             __p_name_text 0848                      _checkRemoveTableEntry BD92  
                      addEvent@eventNumber 01DD                          _expeditedQueueBuf 02C4  
             nvTRnvrdCallback@valueOrError 01DA                           __end_of_writeNVM BB8A  
                           ?_needsStarting 008D                        ?_tableIndexToEvtIdx 002B  
                   __end_of_clearAllEvents B9F8                      mnsGetDiagnostic@index 0099  
                        __end_ofi1_tickGet B94E                     startServoOutput@action 0091  
                     ??_processEnumeration 01C0                         ?i2_checkCANTimeout 002B  
                               __accesstop 0060                    __end_of__initialization AF0A  
                __end_of_canProcessMessage A096                          __end_ofi2_tickGet B7EE  
                            bounceDown@tmp 00A7                        ??_canReceiveMessage 01C9  
                        EEPROM_Write@index 008F                             nvGetESDdata@id 008D  
                        EEPROM_Write@value 0091                             ?_canFillRxFifo 002B  
                           setOutputPin@io 0094                     checkRemoveTableEntry@e 01CE  
                            doEvuln@result 01D6                              ___rparam_used 0001  
                       teachCheckLen@learn 01D2                                 _eeBootFlag 0024  
                        i1tickGet@IntFlag1 0065                          i1tickGet@IntFlag2 0064  
                  ??_handleSelfEnumeration 0099                  ?_factoryResetGlobalEvents 002B  
                            ?_teachPowerUp 002B                           FLASH_Write@index 0090  
                        _getParameterFlags B7EE                              __end_ofi1_pop 9F4C  
                         FLASH_Write@value 0092                              __end_ofi2_pop 9FF4  
                      ??i2_checkCANTimeout 0040                             __pcstackCOMRAM 002B  
               ?i1_updateModuleErrorStatus 002B  mnsTRserviceDiscoveryCallback@serviceIndex 01D8  
                           _io@inputs$F849 00CE                                 _canEsdData C772  
                            __end_of_doSOD C7C0                         ?_getParameterFlags 002B  
                            __end_of_getEN AE2A                              __end_of_getNN 97CC  
                            __end_of_getNV BF9E                              __end_of_getEv 7B4A  
                       __end_of_FLASH_Read BC22                                 _ackPowerUp C2D8  
                   ackEventCheckLen@needed 01D1                              __end_of_setNV AD36  
                            __end_of_numEv 8D76                              __end_of_setup 9D4E  
                     ??_tableIndexToEvtIdx 008D                               i1isEvent@opc 0061  
                             ??_APP_lowIsr 0060                       _getNumTxBuffersInUse C852  
                   consumer2QEsdData@index 008D                         APP_factoryReset@io 01F1  
                             ?_startServos 002B                  __end_of_canReceiveMessage 6B9A  
                             ?_startOutput 01E0               nvTRnvrdCallback@serviceIndex 01D8  
               __end_of_bootProcessMessage A306                                  ?i2_canIsr 002B  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 002B  
                               _canTxError B4FA                                 _canService EF68  
                        ??_isConsumedEvent 00A6                                 _canPowerUp 70F2  
                  producerProcessMessage@h 02D4                    producerProcessMessage@m 01FD  
                                  ??i1_pop 0062                                    ??i2_pop 002D  
                           ?_initInputScan 002B                  reqevCallback@serviceIndex 01D8  
                     __end_of_APP_testMode C8EE                 rebuildHashtable@tableIndex 01C6  
             __end_of_deleteHappeningRange 8C9E                  __end_ofi2_checkCANTimeout BAA0  
             consumer2QGetDiagnostic@index 0099                                    ??_doSOD 0095  
                            completed@type 008E                                    ??_getEN 0099  
                                  ??_getNN 0099                                    ??_getNV 008F  
                                  ??_getEv 009F                    startDigitalOutput@state 01D8  
                              saveNV@index 01C2                             canFillRxFifo@m 006C  
                                  ??_setNV 01F9                              ?_sendMessage2 00A7  
                            ?_sendMessage3 00A7                              ?_sendMessage4 01C6  
                            ?_sendMessage5 01C6                              ?_sendMessage6 01C6  
                            ?_sendMessage7 01C6                                    ??_numEv 009D  
                    _setupModePreviousMode 00C1                                    ??_setup 00AA  
                             canEsdData@id 008D                                saveNV@value 01BF  
                             readNVM@index 0091                   mnsProcessMessage@newMode 02EE  
                        initTicker@divider 008E                               _EEPROM_Write B2FE  
                               __pbssBANK0 00AA                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                             loadNvCache@i 009B                               i2isEvent@opc 002C  
                          ?_clearAllEvents 002B                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A2                                 _defaultNVs BAA0  
                       __end_of_APP_lowIsr C8F0                        setNewCanId@newCanId 01BF  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B846  
                               _delayCount 0284                             _loadFlashBlock BD00  
                             _factoryReset 8758                             ??_teachPowerUp 00A9  
                            _setLEDsByMode C128                              addEvent@evVal 01E0  
                            addEvent@evNum 01DF                             _canDiagnostics 0166  
                            addEvent@error 01E6             __end_of_eventConsumer2QService EF20  
                   processActions@ioAction 01E8                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 02EC                         mnsProcessMessage@i 02EA  
                       mnsProcessMessage@m 01FD                       __end_of_leds_powerUp C18A  
                               _bl_version EE7B                     ?_APP_preProcessMessage 008D  
                                  ?___lmul 0091                                    ?_canIsr 002B  
                     i2tickGet@currentTime 0031                                    ?___wmul 0091  
                        _bootloaderVersion 00C7                               initBounce@io 008D  
                                  ?_doNerd 002B                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C88A                                    ?_getEVs 002B  
                        i2tickGet@IntFlag1 0030                          i2tickGet@IntFlag2 002F  
                    ?_getNumTxBuffersInUse 002B                                    ?_memcpy 008D  
                                ?_addEvent 01DB                                    _ECANCON 0F72  
                                  ?_isrLow 002B                         _mnsTRrqnpnCallback C38E  
                           ___lmul@product 0099                        i1getBufferPointer@b 0062  
                                  ?_lowIsr 002B                                    ?_saveNV 01BF  
                      setOutputPosition@io 00A3                      _setTimedResponseDelay C8AA  
                    _producerGetDiagnostic C40E                                    _BRGCON1 0E43  
                                  _BRGCON2 0E44                                    _BRGCON3 0E45  
                   processActions@peekItem 01E4                   __end_of_setServoPosition C5E8  
                     __end_of_nvGetESDdata C7A6                                 ??i2_canIsr 0044  
                       _startDigitalOutput 56C0                                    _COMSTAT 0F71  
                         _canGetDiagnostic B22A                                 _flashBlock 00D1  
                               _flashFlags 00BA                                    i1l21411 55A8  
                                  i1l20509 B902                                    i1l20561 8FC4  
                                  i1l20529 B932                                    i1l20555 8F82  
                                  i1l20571 9ECE                                    i1l21429 569E  
                                  i1l21561 A444                                    i1l22611 745E  
                                  i1l20579 9F42                                    i1l21581 A476  
                                  i1l21573 A462                                    i1l21565 A44E  
                                  i1l21557 A43A                                    i1l21585 A480  
                                  i1l21577 A46C                                    i1l21569 A458  
                                  i1l21595 A494                                    i1l22635 74B2  
                                  i1l21589 A48A                                    i1l22645 75B8  
                                  i1l22661 B524                                    i1l22639 75AC  
                                  i1l22671 B54E                                    i1l22649 75C6  
                                  i1l25451 86AA                                    i1l25397 9260  
                                  i2l13031 9122                                    i2l13037 9164  
                                  i2l14033 72B2                                    i2l14043 736E  
                                  i2l14131 A58A                                    i2l14123 A576  
                                  i2l14115 A562                                    i2l14061 C062  
                                  i2l14045 73AA                                    i2l14037 72F2  
                                  i2l14053 7426                                    i2l14039 732E  
                                  i2l14143 A5A8                                    i2l14135 A594  
                                  i2l14127 A580                                    i2l14119 A56C  
                                  i2l23103 B5B0                                    i2l14049 73EA  
                                  i2l14153 A5BC                                    i2l14067 C072  
                                  i2l14147 A5B2                                    i2l14139 A59E  
                                  i2l16111 C7FA                                    i2l20597 9FEA  
                                  i2l20589 9F76                                    i2l21645 5D90  
                                  i2l23093 B586                                    i2l21663 5E86  
                                  i2l15703 75CE                                    i2l12959 B79E  
                                  i2l15731 7718                                    i2l12979 B7D0  
                                  i2l15741 7732                                    i2l15727 761E  
                                  i2l15737 7724                                    i2l25449 8720  
                                  i2l25379 932C                                  ?_checkLen 01CB  
                           _setOutputState B94E                     getNumRxBuffersInUse@no 0095  
                        ?_nvTRnvrdCallback 01D8                          reqevCallback@step 01D9  
                   processActions@nextType 01E5                        ?_mnsTRrqnpnCallback 01D8  
                         ??_checkPowerOnPb 00AA                          ??i2_canFillRxFifo 0037  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00AA                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A9  
                           ??_sendMessage3 00AA                             ??_sendMessage4 00A7  
                           ??_sendMessage5 00A7                             ??_sendMessage6 00A7  
                           ??_sendMessage7 00A7                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D8                     ?_checkRemoveTableEntry 002B  
                                  _RXFCON0 0E46                           _teachDiagnostics 01B2  
                          ??_needsStarting 008F                                  ?_configIO 002B  
                               _bounceDown 2DF6                       __end_of_nerdCallback B3CC  
                           inputScan@input 01D3                                  ?_bounceUp 002B  
                isConsumedEvent@eventIndex 00A6                                    i2_getNV C050  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01CD                               _getParameter 883E  
                   __end_of_loadFlashBlock BD4A                          _sendProducedEvent 9884  
                    i2_getNextWriteMessage 90BC                            _timerExtension1 00C6  
                          _timerExtension2 00C5                             ?_setLEDsByMode 002B  
                   mnsTRrqnpnCallback@step 01D9                     mnsTRrqnpnCallback@type 002B  
                       ?_sendProducedEvent 00A8                                poll@handled 02F3  
                     ??_mnsTRrqnpnCallback 00AA                          __end_of_findEvent A680  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 002B  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C59E  
               _timer3DoneInterruptHandler C576                                 _initBounce C3E4  
                   _APP_postProcessMessage C8E6                                 _eventTable EF80  
                     ??_startDigitalOutput 01D9                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 002B                          __end_of_pbUpTimer 9A9C  
                         pbUpTimer@timeout 00A8                                 _initTicker BDDA  
                                  ___awdiv A8B2                                 _initRomOps C806  
                                  ___awmod B0DC                   _consumer2QProcessMessage 3A32  
                         _ackGetDiagnostic C486                                 _initServos 7DE4  
                                ?_quantity 008D                                    ___lldiv A9BE  
                      ??_sendProducedEvent 00A9                          __end_of_completed A55E  
                              ?_ackPowerUp 002B                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01DF  
                               ??_addEvent 01E2                                 _currentPos 0130  
                                  _doEvlrn 94BA                                 _paramBlock 0820  
                                  _doNenrd B14E                         canProcessMessage@m 01FD  
                                  _doEvuln AD36                                    _doNnclr C18A  
                 sodTRCallback@disable_off 01E0                                    _doNnevn B296  
                                  _doReqev 7C9E                                    _doReval 8A06  
                                  __pcinit AEA2                            ??i2_checkTxFifo 0037  
                              setType@type 01EE                              _teachCheckLen B5BE  
                                  _doRqevn C08A                          __end_of_leds_poll 6384  
                       _startTimedResponse BEA6                                    __ramtop 0F00  
                                  _getHash C6DC                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01F4                              ??_checkTxFifo 006C  
                                  __ptext0 BC22                                    __ptext1 9CA4  
                                  __ptext2 C82E                                    __ptext3 7DE4  
                                  __ptext4 AF14                                    __ptext5 C362  
                                  __ptext6 9D4E                                    __ptext7 8AE6  
                                  __ptext8 C2AA                                    __ptext9 70F2  
                   __end_of_setOutputState B9A4                                    _highIsr 9328  
                                  _isEvent C4FE                                    _configs EE29  
                                  _pbTimer 00AA                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 002B                           _EnumerationState 0023  
                        ??_canFactoryReset 00AA                          _mnsProcessMessage 1794  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 0165                                  _T1CONbits 0FCD  
                              ?_canPowerUp 002B                                    _readNVM B61E  
                        __end_of_readInput 8260                             _nvFactoryReset BFDA  
                             _getTwoAction C8B4                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01CF  
                                  _isrHigh 86EE                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 8038                                 ??_checkLen 00A8  
                         ??i2_setOutputPin 0030                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C4                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$746 01C2  
                       doReqev@eventNumber 01CE                                    _mnsPoll 3268  
                       ?_mnsProcessMessage 01FD                                    _tickGet B846  
                             _flashCounter 00AE                          doNenrd@tableIndex 01D0  
                      ?_startTimedResponse 0091                                    _setType B496  
                             _isEvent$4896 008D                         ??_ackEventCheckLen 00A9  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 0294  
                                  _rxQueue 0026                          doNenrd@nodeNumber 01CC  
                 processActions@nextAction 01E9                                    _powerUp 8AE6  
                        __end_of_inputScan 53FE                          __end_of_mnsLowIsr C82E  
                        _consumer2QEsdData C6BC                                    _txQueue 01A9  
                  ?_producerProcessMessage 01FD                            defaultEvents@en 01EB  
                          defaultEvents@io 01ED                                    _started 00D0  
                               ??_configIO 01BF                                 _mnsService EF56  
                        __end_of_nvService EF56                           ??_setBounceState 0092  
                               _mnsPowerUp 8038                          __end_of_nvPowerUp C128  
                                  _writeEv 369E                  __end_of_sendProducedEvent 993A  
                               ??_bounceUp 009F                       end_of_initialization AF0A  
                       _expeditedReadIndex 00CB                              startOutput@io 01E2  
                       ?_consumer2QEsdData 002B                        ??_mnsProcessMessage 02CC  
                             writeNVM@type 01BE                                 getEv@evNum 009D  
                         producerPowerUp@i 008D                                    memcpy@d 0094  
                                  memcpy@n 0091                                    memcpy@s 0096  
               APP_nvValueChanged@oldValue 01F2                                ?_defaultNVs 01C3  
                            ??_EEPROM_Read 008F                            ?_loadFlashBlock 002B  
                            ??_clearEvents 00AA                      __end_of_doneTwoAction C8DC  
                                i1u2375_20 BA34                                  i1u2199_25 5486  
                                i2u1300_44 7364                                  i2u1300_45 7360  
                                i2u1301_44 739E                                  i1u2741_28 9306  
                                i2u1301_45 739A                                  i1u2741_29 9318  
                                  lowIsr@i 007D                                  i2u1303_44 73E0  
                                i2u1303_45 73DC                                  i2u1304_44 741A  
                                i2u1304_45 7416                          _consumer2QPowerUp BD4A  
                                i2u2215_45 5C96                                  i2u2421_40 BA86  
                                i2u1297_44 72E8                                  i2u1297_45 72E4  
                                i2u1298_44 7322                                  i2u1298_45 731E  
                        ?_APP_factoryReset 002B                             ??_popTwoAction 008D  
                               _validStart BAF0                                  i2u2737_48 93D2  
                                i2u2737_49 93E4                            ___lldiv@divisor 009B  
                      ??_consumer2QEsdData 008D                               writeEv@evVal 01D0  
                 __end_of_nvProcessMessage 4B50                               writeEv@evNum 01CF  
                          ___lldiv@counter 00A3                       ??_startTimedResponse 0094  
                       ?_consumer2QPowerUp 002B                               writeEv@nextF 01D6  
                  pollTimedResponse@result 01E9                         ??_APP_factoryReset 00AA  
          eraseFlashBlock@interruptEnabled 008D                                 _pollServos 0850  
                   pollServos@beforeMidway 01D9                           ??_APP_nvValidate 00A0  
                consumer2QProcessMessage@e 02DB                  consumer2QProcessMessage@m 01FD  
                     _deleteHappeningRange 8BC2                              ??_FLASH_Write 0093  
                     nvGetDiagnostic@index 0099                                    postdec1 0FE5  
                                  postdec2 0FDD                     ??_getNumTxBuffersInUse 0093  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 0097  
                          _mnsFactoryReset AE2A                          ?_mnsGetDiagnostic 0097  
                               ??_quantity 008F                __end_of_setExpeditedActions C8D6  
                   ?_setTimedResponseDelay 002B                               _APP_addEvent B1BE  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 0097  
                           ?_teachCheckLen 01CF                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 22BE                                 _tmpMessage 019A  
                       ??_mnsGetDiagnostic 0099             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset C016                                 _servoState 0110  
                               ??_writeNVM 00A8                                 _showStatus 8922  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0160  
           deleteHappeningRange@tableIndex 01E3                          ?_setNormalActions 002B  
                       _APP_nvValueChanged 2960                  _timedResponseServiceIndex 00BE  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01E3                                 _priorities ED29  
                       _lastActionPollTime 0154                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent BCB6                            sendMessage2@opc 00A9  
                     __end_of_teachPowerUp C0F6                            sendMessage3@opc 01C6  
                __end_of_consumer2QEsdData C6DC                            sendMessage4@opc 00A7  
                          sendMessage5@opc 00A7                            sendMessage6@opc 00A7  
                          sendMessage7@opc 00A7                         _sodTRCallback$1424 01DD  
                       _sodTRCallback$1425 01DE                          _eventTeachService EF20  
           __end_of_producerProcessMessage 6116                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01CA                           setupTimer3@ticks 009A  
                   _mnsProcessMessage$3632 02EB                         _timedResponseDelay 0164  
                      __end_of_checkTxFifo 56C0                       APP_nvValueChanged@io 01F7  
                              showStatus@s 008F                              ??_findService 008F  
                          loadNvCache@temp 0099                                ?_bounceDown 002B  
                           i1_isEvent$4896 0060                        ?_APP_nvValueChanged 01F1  
                            clearEvents@io 01E5                              ??_bootEsdData 008D  
                               isEvent@opc 008E                     ?i2_getNextWriteMessage 002B  
                  peekTwoActionQueue@index 008E                     i2getNextWriteMessage@q 002B  
                          ??_setLEDsByMode 0090                  __end_of_consumer2QPowerUp BD92  
                            _sodTRCallback 856E                                  i1_isEvent C54E  
                      teachCheckLen@needed 01D1            ??_mnsTRserviceDiscoveryCallback 01DA  
                        ??_flushFlashBlock 008E                                  i2_isEvent C678  
                       _teachGetDiagnostic C4D6     sendInvertedProducedEvent@state_to_send 01D7  
               deleteHappeningRange@number 01DB                          _heartbeatSequence 00BF  
                      _teachProcessMessage 22BE           sendProducedEvent@producedEventEN 01CB  
         sendProducedEvent@producedEventNN 01CD                                  i1_tickGet B8F6  
                        removeTableEntry@f 01CB                             bounceUp@midway 00A6  
                            ??_bootPowerUp 0097                             _normalQueueBuf 0480  
                       _peekTwoActionQueue A828                 consumer2QProcessMessage@ca 02DA  
                                i2_tickGet B794                 consumer2QProcessMessage@io 02D8  
                               bounceUp@io 00A7                                ?_initBounce 002B  
        sodTRCallback@disable_SOD_response 01DA                               _APP_testMode C8EC  
                          _isConsumedEvent C630                      ?_deleteHappeningRange 01DB  
            __end_of_handleSelfEnumeration 8366               ??_timer1DoneInterruptHandler 0033  
                      __end_of_EEPROM_Read C758                        ?_teachGetDiagnostic 0097  
                      __end_of_clearEvents BF60                          _canTransmitFailed 00B8  
              ??i1_updateModuleErrorStatus 0060                                ?_initTicker 002B  
                              ?_initRomOps 002B                       ??_APP_nvValueChanged 01F3  
                              ?_initServos 002B                       __end_of_sendMessage2 C21A  
                     __end_of_sendMessage3 C334                       __end_of_sendMessage4 C2AA  
                     __end_of_sendMessage5 C27A                       __end_of_sendMessage6 C1EA  
                     __end_of_sendMessage7 C24A                             __end_of___lmul B8F6  
                            _defaultEvents 7738                             __end_of_canIsr C71C  
                           __end_of_canPri EE8B                             __end_of___wmul C54E  
                      ?_peekTwoActionQueue 002B                             __end_of_doNerd C772  
               removeTableEntry@tableIndex 01CC                             __end_of_doWait A828  
                           __end_of_getEVs 856E                              ??_APP_highIsr 0033  
                          ?_nvFactoryReset 002B                           _removeTableEntry 7B4A  
                          needsStarting@io 0091                             __end_of_memcpy BE66  
                           __end_of_isrLow 86EE                         canReceiveMessage@m 01C7  
                       canReceiveMessage@p 01CE                             __end_of_lowIsr 9328  
                           __end_of_saveNV C050                 __end_ofi1_getBufferPointer A4CA  
                     ?_teachProcessMessage 01FD                  __end_of_eventTeachService EF32  
                      __end_of_FLASH_Write 925A                      __end_of_APP_nvDefault 8F1A  
                           _canSendMessage 4B50                          ??_producerEsdData 008D  
                             _name_absaddr 0848                        start_initialization AEA2  
                         ??_clearAllEvents 01C7                            _checkCANTimeout B9F8  
                             _leds_powerUp C15A                       ??_teachGetDiagnostic 0099  
                              __end_of_pop 9EA2                              factoryReset@i 01F6  
                              ?_mnsPowerUp 002B               ?_mnsTRallDiagnosticsCallback 01D8  
                     setBounceState@action 0091                   setDigitalOutput@pinState 0098  
                        ??_producerPowerUp 008D                       ??_peekTwoActionQueue 008D  
                              _CANSTATbits 0F6E                             ?_sodTRCallback 01D8  
                       i2canFillRxFifo@ptr 0039                      __end_of_pushTwoAction B6DC  
                      __end_of_pbDownTimer 9B4C                         _bootProcessMessage A26E  
                               ?i1_isEvent 002B                   producerProcessMessage@ev 02D2  
                      _getNextWriteMessage 8D76                                 ?i2_isEvent 002B  
                             _nvGetESDdata C78C                   __end_of_canGetDiagnostic B296  
                  ??_APP_preProcessMessage 008F                    __end_of_mnsFactoryReset AEA2  
                      __end_of_findService A39E                              ??_loadNvCache 0097  
                               ?i1_tickGet 0060                                ?_validStart 002B  
                       setServoPosition@io 00A0                        __end_of_bootEsdData C60C  
                        isConsumedEvent@ev 00A7                        ?_bootProcessMessage 01FD  
                               ?i2_tickGet 002B                               doEvlrn@evVal 01F7  
                             doEvlrn@evNum 01F6                            numEv@tableIndex 00A3  
                   startTimedResponse@type 0094               __end_of_deleteTwoActionQueue ABC0  
                             doEvlrn@error 01F8                                ?_pollServos 002B  
               __end_of_evtIdxToTableIndex C8A0                   rebuildHashtable@chainIdx 01C5  
                     __end_of_setOutputPin 70F2                                   ??___lmul 0099  
                          ??_teachCheckLen 00A9                                   ??_canIsr 0079  
                      _universalEventsInit C82E                                   ??___wmul 0095  
                             doNenrd@index 01CB                                   ??_doNerd 0095  
                                 ??_doWait 009F                                   ??_getEVs 009D  
                           ?_defaultEvents 01EA                        bootProcessMessage@m 01FD  
                       addEvent@forceOwnNN 01E1                               _nerdCallback B366  
                          i2_canFillRxFifo 75CC                 ?i2_updateModuleErrorStatus 002B  
                  _updateModuleErrorStatus C872                        __end_of_bootService EF44  
                                 ??_memcpy 0093                                   ??_isrLow 007E  
                      __end_of_bootPowerUp 94BA                                   ??_lowIsr 0079  
                                 ??_saveNV 01C0                     __end_of_canSendMessage 4E50  
                              ?_showStatus 002B                              ??_initOutputs 008D  
                 sodTRCallback@send_off_ok 01DC                       ?_getNextWriteMessage 008D  
                    ??_teachProcessMessage 02CC                               checkTxFifo@m 0071  
                              _checkTxFifo 53FE                           _startMultiOutput A1D2  
                        ?_setServoPosition 009F                              ?i2_canTxError 002B  
                       startMultiOutput@io 0093                           _startServoOutput 9646  
                              __pbssBIGRAM 0548                              _reqevCallback 9580  
       consumer2QProcessMessage@tableIndex 02D4                    ??_checkRemoveTableEntry 00AA  
    consumer2QProcessMessage@masked_action 02D9                       ??_bootProcessMessage 02CC  
                              __pbssCOMRAM 0001                      peekTwoActionQueue@qty 008D  
                        ??_nvGetDiagnostic 0099                       __end_of_popTwoAction C362  
                       ??_setServoPosition 00A0                           canSendMessage@mp 009A  
                         canSendMessage@no 00A1                              __pcstackBANK0 0060  
                            __pcstackBANK1 01BE                              __pcstackBANK2 02CC  
                      __end_of_APP_highIsr C806                  i1_updateModuleErrorStatus C87E  
       consumer2QProcessMessage@nextAction 02D5                       ?_universalEventsInit 002B  
                               setNV@index 01FC                              _setMultiState 8FEC  
                          _happening2Event 0300                              _setServoState 9B4C  
                               setNV@value 01F8                         startServoOutput@io 0093  
                       addEvent@tableIndex 01E9                   __end_of_ackGetDiagnostic C4AE  
                           i2_isEvent$4896 002B                 setTimedResponseDelay@delay 008D  
                                addEvent@e 01E8                                  addEvent@f 01E7  
                                 ?i2_getNV 002B                         addEvent@nodeNumber 01DB  
            ??_mnsTRallDiagnosticsCallback 01DA                   _factoryResetGlobalEvents C8EA  
                  __end_of_isConsumedEvent C654                         initInputScan@input 0099  
    sendInvertedProducedEvent@can_send_off 01D3                                _EEPROM_Read C73A  
               ??_consumer2QProcessMessage 02CC                         initTicker@priority 008D  
                              _clearEvents BF22                    ?_APP_postProcessMessage 008D  
                        ??_eraseFlashBlock 008D                                  __pnvBANK0 00D1  
                          i2checkTxFifo@mp 003E                           setBounceState@io 0092  
                   ??_deleteHappeningRange 01DC                             mnsPowerUp@temp 0098  
                             doNnevn@count 01CC                                  __pmainSec 866C  
                     teachProcessMessage@m 01FD                           _getBufferPointer A39E  
                          _canFactoryReset C71C                ?_timer3DoneInterruptHandler 002B  
    __end_of_mnsTRserviceDiscoveryCallback A70E              _mnsTRserviceDiscoveryCallback A680  
             mnsTRallDiagnosticsCallback@d 01DE                                 nvPowerUp@i 009C  
                          tickGet@IntFlag1 0092                            tickGet@IntFlag2 0091  
                                __pintcode 0808                            _teachGetESDdata C60C  
                             ??_canEsdData 008D         handleSelfEnumeration@incomingCanId 009D  
                        _lastInputScanTime 0158                              __pmediumconst ED28  
                 ??_ackEventProcessMessage 02CC                       i1tickGet@currentTime 0066  
                              ackPowerUp@i 008D                           getEVs@tableIndex 00A3  
                                 ?___awdiv 0097                                  __ptext100 0850  
                                __ptext101 C3E4                                  __ptext110 BC6C  
                                __ptext102 5976                                  __ptext111 B3CC  
                                __ptext103 2DF6                                  __ptext200 C6FC  
                                __ptext120 A79C                                  __ptext112 B94E  
                                __ptext104 6B9A                                  __ptext201 C81A  
                                __ptext121 C8D6                                  __ptext113 9B4C  
                                __ptext105 6384                                  __ptext210 8F1A  
                                __ptext202 B9F8                                  __ptext130 C27A  
                                __ptext122 C334                                  __ptext114 8FEC  
                                __ptext106 B73A                                  __ptext211 A434  
                                __ptext203 B4FA                                  __ptext131 ABC0  
                                __ptext123 C7A6                                  __ptext115 9BF8  
                                __ptext107 9646                                  __ptext220 9F4C  
                                __ptext212 C8EE                                  __ptext204 53FE  
                                __ptext140 C806                                  __ptext132 4B50  
                                __ptext124 BEA6                                  __ptext116 AA42  
                                __ptext108 A1D2                                  __ptext221 C678  
                                __ptext205 B8F6                                  __ptext141 B6DC  
                                __ptext133 3DC2                                  __ptext125 AFF8  
                                __ptext117 C8B4                                  __ptext109 56C0  
                              _FLASH_Write 918C                                  __ptext230 C050  
                                __ptext222 75CC                                  __ptext214 9328  
                                __ptext206 9EA2                                  __ptext150 C71C  
                                __ptext142 8922                                  __ptext134 C4FE  
                                __ptext126 AB42                                  __ptext118 A828  
                                __ptext223 C88A                                  __ptext215 C7D8  
                                __ptext207 C54E                                  __ptext151 BFDA  
                                __ptext143 99EC                                  __ptext135 B06A  
                                __ptext127 A4CA                                  __ptext119 C8BC  
                                __ptext224 90BC                                  __ptext216 BA4C  
                                __ptext208 745C                                  __ptext160 B496  
                                __ptext152 AE2A                                  __ptext144 9A9C  
                                __ptext136 C852                                  __ptext128 5132  
                                __ptext225 A55E                                  __ptext217 B55C  
                                __ptext209 C87E                                  __ptext161 BAA0  
                                __ptext153 C8DC                                  __ptext145 6116  
                                __ptext137 BEE4                                  __ptext129 9884  
                                __ptext226 C7F0                                  __ptext218 5C12  
                                __ptext170 BD92                                  __ptext162 C016  
                                __ptext154 B9A4                                  __ptext146 B846  
                                __ptext138 8D76                                  __ptext227 C576  
                                __ptext219 B794                                  __ptext171 7B4A  
                                __ptext163 BCB6                                  __ptext155 8E48  
                                __ptext147 B89E                                  __ptext139 8156  
                                __ptext228 C59E                                  __ptext180 4E50  
                                __ptext172 7F14                                  __ptext164 7738  
                                __ptext156 C526                                  __ptext148 A9BE  
                                __ptext229 72AE                                  __ptext181 BB3E  
                                __ptext173 79F4                                  __ptext165 BF22  
                                __ptext157 B0DC                                  __ptext149 8758  
                                __ptext190 A70E                                  __ptext182 918C  
                                __ptext174 846A                                  __ptext166 8BC2  
                                __ptext158 A8B2                                  __ptext191 6F34  
                                __ptext183 BD00                                  __ptext175 BAF0  
                                __ptext167 993A                                  __ptext159 C654  
                                __ptext192 BF60                                  __ptext184 A938  
                                __ptext176 A5F0                                  __ptext168 65BC  
                                __ptext193 B61E                                  __ptext185 BB8A  
                                __ptext177 970A                                  __ptext169 369E  
                                __ptext194 BBD6                                  __ptext186 C840  
                                __ptext178 C6DC                                  __ptext195 C73A  
                                __ptext187 C862                                  __ptext179 ADB0  
                                 ?___awmod 008D                                  __ptext196 C8EA  
                                __ptext188 B2FE                                  __ptext197 C8EC  
                                __ptext189 C872                                  __ptext199 925A  
                             defaultNVs@io 01C6                                  _findEvent A5F0  
                                 ?___lldiv 0097                               ??_ackPowerUp 008D  
                   _startDigitalOutput$808 01DB                        __end_of_loadNvCache BD00  
                             doReqev@evVal 01D1                               doReqev@evNum 01D0  
                          getNN@tableIndex 00A2                           processActions@io 01EA  
                             doReval@enNum 01CE                         sodTRCallback@flags 01E3  
                             doReval@evVal 01CF                               doReval@evNum 01CB  
                                 ?_doEvlrn 01F2                                   ?_doNenrd 002B  
                                 ?_doEvuln 01D2                                __pintcodelo 0818  
                                 ?_doNnclr 002B                                   ?_doNnevn 002B  
                      i2getBufferPointer@b 002D                                   ?_doReqev 01CC  
                                 ?_doReval 01CB                          teachGetESDdata@id 008D  
                       sodTRCallback@value 01E1          __end_ofi2_updateModuleErrorStatus C896  
                                 ?_doRqevn 002B                      ??_getNextWriteMessage 008F  
                                 ?_getHash 00A3                   deleteActionRange@updated 01E1  
                  __end_of_checkCANTimeout BA4C                              ??_setNewCanId 00AA  
                                _pbUpTimer 99EC                            ?_canSendMessage 009A  
                            ??_sendMessage 00A4                                   ?_highIsr 002B  
                           ??i2_canTxError 0040                                   ?_isEvent 002B  
                             ??_canTxError 0075                           _findServiceIndex AFF8  
                                _completed A4CA                           nerdCallback@step 01D9  
                         nerdCallback@type 002B                             ?_reqevCallback 01D8  
                             ??_canPowerUp 0097                             _heartbeatTimer 0150  
                                 ?_readNVM 0091                                   ?_isrHigh 002B  
                              _COMSTATbits 0F71                    i1getNextWriteMessage@wr 006B  
                                _leds_poll 6116                 producerGetDiagnostic@index 0099  
                                 ?_mnsPoll 002B                          ?_rebuildHashtable 002B  
                         _canIsr$intlevel1 C704                       setOutputPosition@pos 00A1  
                                 ?_tickGet 008D    mnsTRallDiagnosticsCallback@serviceIndex 01D8  
                              _pbDownTimer 9A9C                                  checkLen@m 01CB  
                                 ?_setType 01EE           ackEventProcessMessage@eventIndex 02D0  
                    ??_universalEventsInit 008D                             defaultNVs@type 01C3  
                           ?_setMultiState 0091                    startBounceOutput@action 008D  
                      __end_of_initOutputs C38E                           ??_loadFlashBlock 008D  
                           ?_setServoState 0091                                   ?_powerUp 002B  
                                _readInput 8156                         ??_rebuildHashtable 01BE  
                          ??_sodTRCallback 00AA                                _findService A306  
            __end_ofi1_getNextWriteMessage 8FEC                                   ?_writeEv 01CF  
                          startServos@type 01DC                                _flashDelays 0120  
                       processActions@type 01E7                                  _expedited 0025  
                              _bootEsdData C5E8                         __end_of_canEsdData C78C  
                    __end_of_needsStarting AAC4                                _flashBuffer 0348  
                           doReval@evIndex 01CD                                ??i1_isEvent 0060  
            deleteHappeningRange@happening 01E1                               ??_defaultNVs 01C4  
                                _inputScan 5132             __end_of_APP_postProcessMessage C8EA  
                          _eventAckService EED8                                  _mnsLowIsr C81A  
                       __end_of_ackPowerUp C306                                  _nvService EF44  
                           ___wmul@product 0095                                  _loopCount 0254  
                            ??_removeEvent 00AA                                ??i2_isEvent 002B  
                     sendProducedEvent@opc 01CA                                   _LATBbits 0F8A  
                                _nvPowerUp C0F6                      __end_of_canFillRxFifo 75CC  
                        findEvent@chainIdx 01C9                            _isNoServoPulses C862  
               __end_ofi2_getBufferPointer A5F0                    getNumRxBuffersInUse@ptr 0093  
                                 _PIE1bits 0F9D                                   _PIE2bits 0FA0  
                     rebuildHashtable@hash 01C3                           ?_mnsFactoryReset 002B  
                                 _PIE5bits 0F76                                ??i1_tickGet 0064  
                                _rxBuffers 07C8                         __p_eventTable_text EF80  
                                getHash@en 00A5                                  getHash@nn 00A3  
                  __end_ofi2_canFillRxFifo 7738                             _flashFlushTime 0140  
   __end_of_APP_isSuitableTimeToWriteFlash C852             _APP_isSuitableTimeToWriteFlash C840  
                        _channelDefaultNVs EE8B                                  _targetPos 0001  
                              _bootService EF32         __end_of_timer1DoneInterruptHandler C5C4  
               _timer1DoneInterruptHandler C59E                                ??i2_tickGet 002F  
                       __end_of_canTxError B55C                         __end_of_canService EF7A  
                             _teachPowerUp C0C2                                  _pollCount 0264  
                              _bootPowerUp 93F2                                   _PIR1bits 0F9E  
                                 _PIR2bits 0FA1                         __end_of_canPowerUp 72AE  
                        ?_nvProcessMessage 01FD                    ??_setTimedResponseDelay 008D  
                                 _PIR5bits 0F77                          doReqev@tableIndex 01D3  
                  ??_producerGetDiagnostic 0099                            ??_defaultEvents 00AA  
                                _txBuffers 0500                             _mnsDiagnostics 018C  
                ??_updateModuleErrorStatus 008D                                   _RCONbits 0FD0  
                        doReqev@nodeNumber 01CC                           ??_setOutputState 0095  
                              _pbWasPushed 00C0                                   _RXF0SIDL 0EE1  
            startDigitalOutput@actionState 01DE                         ??_nvProcessMessage 02CC  
                                 _RXM0EIDH 0EFA                                   _RXM0EIDL 0EFB  
                               ?_findEvent 01BE                                   _TXB0SIDH 0F21  
                                 _TXB0SIDL 0F22                                   _TXB1SIDH 0F11  
                                 _TXB1SIDL 0F12                                   _TXB2SIDH 0F01  
                                 _TXB2SIDL 0F02                                   _RXFBCON0 0E71  
                                 _RXM0SIDH 0EF8                                   _RXM0SIDL 0EF9  
                           pushTwoAction@a 008D                sodTRCallback@event_inverted 01E2  
                          inputScan@change 01D2                        i2setOutputPin@state 002F  
                        _stepsPerPollSpeed 0100                          _teachFactoryReset C8DC  
                               ?_pbUpTimer 002B                                  configIO@i 01C6  
                              _bounceState 0244                                _APP_highIsr C7F0  
                           sendMessage@len 01BE                             sendMessage@opc 00A6  
                        _timedResponseTime 0144                          ___wmul@multiplier 0091  
                        _timedResponseStep 00BB                          _timedResponseType 00BC  
                                _startWait 0019                                  _startTime 001D  
                               ?_completed 008D                                   i2_canIsr C7D8  
                    __end_ofi2_checkTxFifo 5EA8                           _enumerationState 00B7  
                             doRqevn@count 01C7                                  _transport 0162  
                       ?_teachFactoryReset 002B                          defaultEvents@type 01EA  
                       __end_of_defaultNVs BAF0                                 ?_leds_poll 002B  
                    __end_of_initInputScan 9DF8                            _flushFlashBlock A938  
               processActions@simultaneous 01E3                    ??i2_getNextWriteMessage 002D  
                      __end_of_setNewCanId B496                        __end_of_sendMessage AC3E  
                               ?_readInput 002B                             doWait@duration 009D  
                            ??_setupTimer1 0095                              ??_setupTimer3 0095  
                     _deleteTwoActionQueue AB42                            _eventCoeService EEEA  
                             ??_bounceDown 009F                        ??_teachFactoryReset 00AA  
                          checkLen@service 01CE                         __end_of_bl_version EE86  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 C1EA                               _sendMessage3 C306  
                             _sendMessage4 C27A                               _sendMessage5 C24A  
                             _sendMessage6 C1BA                               _sendMessage7 C21A  
                                 i1pop@ret 0067                                   i2pop@ret 0032  
                          startOutput@type 01E1                            nvFactoryReset@i 01C1  
                               ?_inputScan 002B                                 ?_mnsLowIsr 002B  
                  __end_of_canFactoryReset C73A                   __end_of_removeTableEntry 7C9E  
                         ?_isConsumedEvent 002B                    __end_of_teachGetESDdata C630  
                               ?_nvPowerUp 002B                  __end_of_channelDefaultNVs EED8  
             __end_of_eventProducerService EF0E                     handleSelfEnumeration@p 0097  
                               _EECON1bits 0F7F                        startBounceOutput@io 008E  
                              _loadNvCache BCB6                                   __Hrparam 0000  
                              _eventChains 0548                           finaliseOutput@io 002B  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01EC                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01D1  
                          _producerEsdData C69C                           ??_nvFactoryReset 01BF  
                             ??_initTicker 008D                        __end_of_removeEvent C3E4  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01CF  
 consumer2QProcessMessage@nextSimultaneous 02D7                               ??_initServos 00A4  
                __end_of_teachFactoryReset C8E2                    sodTRCallback@send_on_ok 01DB  
                                 _addEvent 65BC                          _startBounceOutput B3CC  
           ?_mnsTRserviceDiscoveryCallback 01D8                             _processActions 6384  
                       __end_of_bounceDown 3268                            ??_reqevCallback 01DA  
                            ??_startServos 00AA                           ?_checkCANTimeout 002B  
                            ??_startOutput 00AA                                _initOutputs C362  
                       ?_startBounceOutput 008D                            _producerPowerUp C2AA  
                       doNenrd@eventNumber 01CE                  rebuildHashtable@happening 01C4  
                             setType@index 01EF                                   _checkLen AAC4  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 003C                             _finaliseOutput C8BC  
                      _producerDiagnostics 01AE                    deleteActionRange@action 01E2  
                            initOutputs@io 008D                       processActions@action 01EB  
          __end_of_updateModuleErrorStatus C87E                    __end_of_eventAckService EEEA  
                               _FLASH_Read BBD6                 ?_sendInvertedProducedEvent 01D0  
                    ?_deleteTwoActionQueue 002B                      getNextWriteMessage@wr 0098  
                                 __ptext10 C0F6                                   __ptext11 8038  
                                 __ptext20 5EA8                                   __ptext12 C2D8  
                                 __ptext21 9FF4                                   __ptext13 93F2  
                               _T1GCONbits 0FAA                                   __ptext30 8A06  
                                 __ptext22 4816                                   __ptext14 BD4A  
                                 __ptext31 7C9E                                   __ptext23 1794  
                                 __ptext15 C0C2                                defaultNVs@i 01C7  
                                 __ptext40 B1BE                                   __ptext32 B296  
                                 __ptext24 67C0                                   __ptext16 C15A  
                                 __ptext41 AC3E                                   __ptext33 C18A  
                                 __ptext25 A26E                                   __ptext17 C8C4  
                                 __ptext50 8C9E                                   __ptext42 9580  
                                 __ptext34 C758                                   __ptext26 3A32  
                                 __ptext18 BDDA                                   __ptext51 C8A0  
                                 __ptext43 B366                                   __ptext35 B14E  
                                 __ptext27 22BE                                   __ptext19 414E  
                                 __ptext60 C5E8                                   __ptext52 ACBA  
                                 __ptext44 BE66                                   __ptext36 C896  
                                 __ptext28 B5BE                                   __ptext61 C6BC  
                                 __ptext53 2960                                   __ptext45 A680  
                                 __ptext37 AD36                                   __ptext29 C08A  
                                 __ptext70 C1BA                                   __ptext62 C60C  
                                 __ptext54 C8AA                                   __ptext46 8366  
                                 __ptext38 C3BA                                   __ptext71 C306  
                                 __ptext63 C40E                                   __ptext55 C5C4  
                                 __ptext47 C38E                                   __ptext39 94BA  
                                 __ptext80 69B2                                   __ptext72 883E  
                                 __ptext64 B22A                                   __ptext56 AF86  
                                 __ptext48 856E                                   __ptext81 789A  
                                 __ptext73 B7EE                                   __ptext65 C436  
                                 __ptext57 C69C                                   __ptext49 44C4  
                                 __ptext90 A306                                   __ptext82 B432  
                                 __ptext74 3268                                   __ptext66 C45E  
                                 __ptext58 C772                                   __ptext91 C7C0  
                                 __ptext83 9DF8                                   __ptext75 C128  
                                 __ptext67 C486                                   __ptext59 C78C  
                                 __ptext92 AAC4                                   __ptext84 BE20  
                                 __ptext76 C1EA                                   __ptext68 C4AE  
                                 __ptext93 C24A                                   __ptext85 8260  
                                 __ptext77 C8CA                                   __ptext69 C4D6  
                                 __ptext94 C8E2                                   __ptext86 BF9E  
                                 __ptext78 C8D0                                   __ptext95 C8E6  
                                 __ptext87 A39E                                   __ptext79 B67E  
                                 __ptext96 6D6C                                   __ptext88 C21A  
                                 __ptext97 97CC                                   __ptext89 C630  
                                 __ptext98 A096                                   __ptext99 A134  
                      ??_startBounceOutput 008E               __end_of_getNumRxBuffersInUse BFDA  
                  __end_of_isNoServoPulses C872                               _setOutputPin 6F34  
                     processActions@nextIo 01E6                               ??_mnsPowerUp 0097  
                                 _configIO 4E50                                   _ledTimer 0148  
                  deleteActionRange@number 01DB                             _processOutputs 6B9A  
                        _APP_GetEventState 44C4                                   _ledState 00B0  
                        sodTRCallback@step 01D9                         __end_of_initBounce C40E  
                        sodTRCallback@type 002B                              ?_EEPROM_Write 008F  
                       __end_of_eventTable FF70                                   _bounceUp 5976  
                               _T3GCONbits 0FB0                     i1getNextWriteMessage@q 0060  
                       __end_of_initTicker BE20                         __end_of_initRomOps C81A  
                       i1_getBufferPointer A434                         ?_APP_GetEventState 002B  
                       __end_of_initServos 7F14           __end_of_consumer2QProcessMessage 3DC2  
                                setType@io 01F0                                   doNnevn@f 01CB  
                                 doNnevn@i 01CD                 sendProducedEvent@happening 01CF  
                       __end_of_paramBlock 0840                             canPowerUp@temp 0098  
                    __end_of_setLEDsByMode C15A                        __end_of_setupTimer1 A1D2  
                      __end_of_setupTimer3 A134                       __end_ofi2_canTxError B5BE  
                            ?_factoryReset 002B                   __end_of_startMultiOutput A26E  
                            _configIO$8093 01C1                           _nvTRnvrdCallback BE66  
                            findEvent@hash 01C8                   __end_of_startServoOutput 970A  
                             ??_validStart 0097                                   doRqevn@i 01C8  
                        ?_canGetDiagnostic 0097                             writeEv@nextIdx 01DA  
                              getEVs@evIdx 00A2             consumer2QProcessMessage@change 02D0  
           consumer2QProcessMessage@action 02DC                           ?i2_canFillRxFifo 002B  
                              getEVs@evNum 00A4                        ?i1_getBufferPointer 0060  
                      ??_APP_GetEventState 009F              __end_of_APP_preProcessMessage C8E6  
            ackEventProcessMessage@eventEN 02CE              ackEventProcessMessage@eventNN 02D1  
                             _popTwoAction C334                         ??_canGetDiagnostic 0099  
                             ??_pollServos 01D0                                   isa$xinst 0000  
                                 _services EE69                  __end_of_startBounceOutput B432  
                   __end_of_processActions 65BC                   clearAllEvents@tableIndex 01CB  
                                 int$flags 0055                            _nvGetDiagnostic C436  
                                 highIsr@i 0048                                ??_findEvent 01C2  
                                 _quantity BEE4                      _handleSelfEnumeration 8260  
              ??i2_updateModuleErrorStatus 002B                                 _APP_lowIsr C8EE  
                   sendProducedEvent@onOff 00A8                         __end_of_mnsService EF68  
                  __end_of_flushFlashBlock A9BE                          writeEv@tableIndex 01D9  
                       __end_of_mnsPowerUp 8156                          _setOutputPosition AF14  
                             ??_showStatus 008D                                ??_pbUpTimer 00A4  
                         processOutputs@io 01D1                                   _writeNVM BB3E  
               processEnumeration@newCanId 01C5                     APP_addEvent@forceOwnNN 01F0  
                              _setNewCanId B432                               ?_checkTxFifo 002B  
                             pollServos@io 01DB                                ??_completed 008F  
                              _sendMessage ABC0                     __end_of_finaliseOutput C8C4  
                           startOutput@act 01E0                    __end_of_eventCoeService EEFC  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C896                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 009A                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6D6C  
                __end_of_APP_GetEventState 4816                   __end_of_getBufferPointer A434  
                          _eraseFlashBlock BB8A                          APP_addEvent@evVal 01EF  
            __end_of_checkRemoveTableEntry BDDA                          APP_addEvent@evNum 01EE  
                       __end_of_validStart BB3E                        __end_of_startServos 9884  
                  teachGetDiagnostic@index 0099                                ??_readInput 0091  
                      __end_of_startOutput B794                     _ackEventProcessMessage 67C0  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 79F4  
                              getHash@hash 00A8                         __end_of_pollServos 1794  
                        ?_ackGetDiagnostic 0097                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 002B  
                            ?_getParameter 002B                                ??_inputScan 01D0  
                             _servoInBlock 00C9                                ??_mnsLowIsr 0060  
                     getNextWriteMessage@q 008D                           ?_canFactoryReset 002B  
                   APP_addEvent@tableIndex 01F1                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 0099            sendInvertedProducedEvent@invert 01D1  
                           ??_factoryReset 01F2                    __end_of_producerEsdData C6BC  
                              ??_nvPowerUp 009C                               ?_clearEvents 002B  
                         _ackEventCheckLen C7C0                      removeEvent@tableIndex 01D1  
                         ?_teachGetESDdata 002B                   __end_of_findServiceIndex B06A  
                              _removeEvent C3BA                     APP_addEvent@nodeNumber 01EA  
                              _TXB0CONbits 0F20                              _doneTwoAction C8D6  
                       __end_of_showStatus 8A06             mnsTRrqnpnCallback@serviceIndex 01D8  
                    removeEvent@nodeNumber 01CD                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01E4                         __end_of_priorities EE29  
                         ??_canSendMessage 009C                __end_of_teachProcessMessage 2960  
               __end_of_tableIndexToEvtIdx C8AA                  sodTRCallback@serviceIndex 01D8  
                     __end_of_canTransport EF7E                               ?_FLASH_Write 0090  
                  __end_of_producerPowerUp C2D8                         tickGet@currentTime 0093  
                          ?_processActions 002B                              findService@id 0091  
                __end_of_setOutputPosition AF86                                   powerUp@i 01CB  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse AC3E  
                    __end_of_teachCheckLen B61E                   ??_producerProcessMessage 02CC  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 002B                          FLASH_Read@address 008D  
                         _APP_factoryReset C654                            ?_finaliseOutput 008D  
                  nerdCallback@eventNumber 01DC                              ?_getTwoAction 002B  
                              _servoActive 00B2                           _ticksWhenStopped 0388  
                         ___lldiv@quotient 009F                       producerEsdData@index 008D  
                     _eventProducerService EEFC             sendInvertedProducedEvent@state 01D0  
                  _consumer2QGetDiagnostic C4AE                     ??_deleteTwoActionQueue 008D  
                        _deleteActionRange 993A                               ?_pbDownTimer 002B  
                              findEvent@en 01C6                                findEvent@nn 01C4  
                        writeEv@startIndex 01D5                       findEvent@eventNumber 01C0  
                                 writeEv@e 01D7                                   writeEv@f 01D8  
                          ?_processOutputs 002B                                ?_FLASH_Read 008D  
                            bootEsdData@id 008D                        ??_pollTimedResponse 01E7  
                         _mnsGetDiagnostic C45E                               findService@i 0092  
                       ?_deleteActionRange 01DB               _timedResponseAllServicesFlag 00BD  
                              _setupTimer1 A134                                _setupTimer3 A096  
                         ?_isNoServoPulses 002B                               ?_findService 008D  
                   startMultiOutput@action 0091                  i2_updateModuleErrorStatus C88A  
                           ??_getParameter 0092                               ?_bootEsdData 002B  
                        sendMessage2@data1 00A7                          sendMessage2@data2 00A8  
                        sendMessage3@data1 00A7                          sendMessage3@data2 00A8  
                        sendMessage3@data3 00A9                          sendMessage4@data1 01C6  
                        sendMessage4@data2 01C7                          sendMessage4@data3 01C8  
                        sendMessage4@data4 01C9                           _setDigitalOutput A70E  
                        getBufferPointer@b 008F                          sendMessage5@data1 01C6  
                        sendMessage5@data2 01C7                          sendMessage5@data3 01C8  
                        sendMessage5@data4 01C9                          sendMessage5@data5 01CA  
                    _consumer2QDiagnostics 01BA                          sendMessage6@data1 01C6  
                        sendMessage6@data2 01C7                          sendMessage6@data3 01C8  
                        sendMessage6@data4 01C9                          sendMessage6@data5 01CA  
                        sendMessage6@data6 01CB                           bootPowerUp@found 0098  
                          _last_mode_flags 00C2                          sendMessage7@data1 01C6  
                        sendMessage7@data2 01C7                          sendMessage7@data3 01C8  
                        sendMessage7@data4 01C9                          sendMessage7@data5 01CA  
                        sendMessage7@data6 01CB                          sendMessage7@data7 01CC  
                           _checkPowerOnPb B6DC                           EEPROM_Read@index 008D  
                      ??_deleteActionRange 01DC                           _setNormalActions C8CA  
                           ?_doneTwoAction 002B                            _last_mode_state 00C3  
                  __end_of_nvGetDiagnostic C45E                               ?_bootPowerUp 002B  
                     validStart@tableIndex 009B                       nvTRnvrdCallback@step 01D9  
              ?_timer1DoneInterruptHandler 002B                       nvTRnvrdCallback@type 002B  
                              _pulseDelays 02A4                __end_of_getNextWriteMessage 8E48  
