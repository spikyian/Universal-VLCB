

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue May 21 16:03:10 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1,group=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   213                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   247                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   248                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   249                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   250   000000                     
   251                           ; Generated 12/10/2023 GMT
   252                           ; 
   253                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   254                           ; All rights reserved.
   255                           ; 
   256                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   257                           ; 
   258                           ; Redistribution and use in source and binary forms, with or without modification, are
   259                           ; permitted provided that the following conditions are met:
   260                           ; 
   261                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   262                           ;        conditions and the following disclaimer.
   263                           ; 
   264                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   265                           ;        of conditions and the following disclaimer in the documentation and/or other
   266                           ;        materials provided with the distribution. Publication is not required when
   267                           ;        this file is used in an embedded application.
   268                           ; 
   269                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   270                           ;        software without specific prior written permission.
   271                           ; 
   272                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   273                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   274                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   275                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   276                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   277                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   278                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   279                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   280                           ; 
   281                           ; 
   282                           ; Code-generator required, PIC18F26K80 Definitions
   283                           ; 
   284                           ; SFR Addresses
   285   000000                     
   286                           	psect	eeprom_data
   287   F003FF                     	org	1023	;# 
   288   F003FF  00                 	db	0	;# 
   289   000000                     _eventTable_absaddr	set	61312
   290                           
   291                           	psect	mediumconst
   292   00ED34                     __pmediumconst:
   293                           	callstack 0
   294   00ED34  00                 	db	0
   295   00ED35                     _priorities:
   296                           	callstack 0
   297   00ED35  01                 	db	1
   298   00ED36  01                 	db	1
   299   00ED37  03                 	db	3
   300   00ED38  02                 	db	2
   301   00ED39  02                 	db	2
   302   00ED3A  02                 	db	2
   303   00ED3B  02                 	db	2
   304   00ED3C  03                 	db	3
   305   00ED3D  02                 	db	2
   306   00ED3E  02                 	db	2
   307   00ED3F  03                 	db	3
   308   00ED40  01                 	db	1
   309   00ED41  00                 	db	0
   310   00ED42  00                 	db	0
   311   00ED43  01                 	db	1
   312   00ED44  01                 	db	1
   313   00ED45  01                 	db	1
   314   00ED46  01                 	db	1
   315   00ED47  01                 	db	1
   316   00ED48  01                 	db	1
   317   00ED49  01                 	db	1
   318   00ED4A  01                 	db	1
   319   00ED4B  01                 	db	1
   320   00ED4C  01                 	db	1
   321   00ED4D  01                 	db	1
   322   00ED4E  01                 	db	1
   323   00ED4F  01                 	db	1
   324   00ED50  01                 	db	1
   325   00ED51  01                 	db	1
   326   00ED52  01                 	db	1
   327   00ED53  01                 	db	1
   328   00ED54  01                 	db	1
   329   00ED55  01                 	db	1
   330   00ED56  01                 	db	1
   331   00ED57  01                 	db	1
   332   00ED58  01                 	db	1
   333   00ED59  01                 	db	1
   334   00ED5A  01                 	db	1
   335   00ED5B  01                 	db	1
   336   00ED5C  01                 	db	1
   337   00ED5D  01                 	db	1
   338   00ED5E  01                 	db	1
   339   00ED5F  01                 	db	1
   340   00ED60  01                 	db	1
   341   00ED61  01                 	db	1
   342   00ED62  01                 	db	1
   343   00ED63  01                 	db	1
   344   00ED64  01                 	db	1
   345   00ED65  01                 	db	1
   346   00ED66  01                 	db	1
   347   00ED67  01                 	db	1
   348   00ED68  01                 	db	1
   349   00ED69  01                 	db	1
   350   00ED6A  01                 	db	1
   351   00ED6B  01                 	db	1
   352   00ED6C  01                 	db	1
   353   00ED6D  01                 	db	1
   354   00ED6E  01                 	db	1
   355   00ED6F  01                 	db	1
   356   00ED70  01                 	db	1
   357   00ED71  01                 	db	1
   358   00ED72  01                 	db	1
   359   00ED73  01                 	db	1
   360   00ED74  00                 	db	0
   361   00ED75  01                 	db	1
   362   00ED76  01                 	db	1
   363   00ED77  01                 	db	1
   364   00ED78  01                 	db	1
   365   00ED79  01                 	db	1
   366   00ED7A  01                 	db	1
   367   00ED7B  01                 	db	1
   368   00ED7C  01                 	db	1
   369   00ED7D  01                 	db	1
   370   00ED7E  00                 	db	0
   371   00ED7F  01                 	db	1
   372   00ED80  01                 	db	1
   373   00ED81  00                 	db	0
   374   00ED82  00                 	db	0
   375   00ED83  00                 	db	0
   376   00ED84  00                 	db	0
   377   00ED85  00                 	db	0
   378   00ED86  00                 	db	0
   379   00ED87  00                 	db	0
   380   00ED88  00                 	db	0
   381   00ED89  00                 	db	0
   382   00ED8A  00                 	db	0
   383   00ED8B  00                 	db	0
   384   00ED8C  00                 	db	0
   385   00ED8D  00                 	db	0
   386   00ED8E  00                 	db	0
   387   00ED8F  00                 	db	0
   388   00ED90  00                 	db	0
   389   00ED91  00                 	db	0
   390   00ED92  01                 	db	1
   391   00ED93  01                 	db	1
   392   00ED94  01                 	db	1
   393   00ED95  01                 	db	1
   394   00ED96  01                 	db	1
   395   00ED97  03                 	db	3
   396   00ED98  01                 	db	1
   397   00ED99  01                 	db	1
   398   00ED9A  01                 	db	1
   399   00ED9B  01                 	db	1
   400   00ED9C  01                 	db	1
   401   00ED9D  01                 	db	1
   402   00ED9E  01                 	db	1
   403   00ED9F  01                 	db	1
   404   00EDA0  00                 	db	0
   405   00EDA1  00                 	db	0
   406   00EDA2  00                 	db	0
   407   00EDA3  00                 	db	0
   408   00EDA4  00                 	db	0
   409   00EDA5  00                 	db	0
   410   00EDA6  00                 	db	0
   411   00EDA7  00                 	db	0
   412   00EDA8  01                 	db	1
   413   00EDA9  00                 	db	0
   414   00EDAA  01                 	db	1
   415   00EDAB  01                 	db	1
   416   00EDAC  01                 	db	1
   417   00EDAD  01                 	db	1
   418   00EDAE  01                 	db	1
   419   00EDAF  01                 	db	1
   420   00EDB0  00                 	db	0
   421   00EDB1  01                 	db	1
   422   00EDB2  01                 	db	1
   423   00EDB3  01                 	db	1
   424   00EDB4  01                 	db	1
   425   00EDB5  01                 	db	1
   426   00EDB6  01                 	db	1
   427   00EDB7  01                 	db	1
   428   00EDB8  00                 	db	0
   429   00EDB9  01                 	db	1
   430   00EDBA  01                 	db	1
   431   00EDBB  01                 	db	1
   432   00EDBC  01                 	db	1
   433   00EDBD  01                 	db	1
   434   00EDBE  01                 	db	1
   435   00EDBF  00                 	db	0
   436   00EDC0  01                 	db	1
   437   00EDC1  00                 	db	0
   438   00EDC2  00                 	db	0
   439   00EDC3  00                 	db	0
   440   00EDC4  00                 	db	0
   441   00EDC5  00                 	db	0
   442   00EDC6  00                 	db	0
   443   00EDC7  00                 	db	0
   444   00EDC8  00                 	db	0
   445   00EDC9  00                 	db	0
   446   00EDCA  00                 	db	0
   447   00EDCB  00                 	db	0
   448   00EDCC  00                 	db	0
   449   00EDCD  00                 	db	0
   450   00EDCE  00                 	db	0
   451   00EDCF  00                 	db	0
   452   00EDD0  00                 	db	0
   453   00EDD1  01                 	db	1
   454   00EDD2  01                 	db	1
   455   00EDD3  01                 	db	1
   456   00EDD4  01                 	db	1
   457   00EDD5  01                 	db	1
   458   00EDD6  01                 	db	1
   459   00EDD7  01                 	db	1
   460   00EDD8  01                 	db	1
   461   00EDD9  01                 	db	1
   462   00EDDA  01                 	db	1
   463   00EDDB  01                 	db	1
   464   00EDDC  00                 	db	0
   465   00EDDD  00                 	db	0
   466   00EDDE  01                 	db	1
   467   00EDDF  01                 	db	1
   468   00EDE0  00                 	db	0
   469   00EDE1  00                 	db	0
   470   00EDE2  00                 	db	0
   471   00EDE3  00                 	db	0
   472   00EDE4  00                 	db	0
   473   00EDE5  00                 	db	0
   474   00EDE6  00                 	db	0
   475   00EDE7  00                 	db	0
   476   00EDE8  01                 	db	1
   477   00EDE9  00                 	db	0
   478   00EDEA  00                 	db	0
   479   00EDEB  01                 	db	1
   480   00EDEC  01                 	db	1
   481   00EDED  01                 	db	1
   482   00EDEE  00                 	db	0
   483   00EDEF  00                 	db	0
   484   00EDF0  00                 	db	0
   485   00EDF1  01                 	db	1
   486   00EDF2  01                 	db	1
   487   00EDF3  01                 	db	1
   488   00EDF4  01                 	db	1
   489   00EDF5  01                 	db	1
   490   00EDF6  01                 	db	1
   491   00EDF7  01                 	db	1
   492   00EDF8  00                 	db	0
   493   00EDF9  01                 	db	1
   494   00EDFA  01                 	db	1
   495   00EDFB  01                 	db	1
   496   00EDFC  01                 	db	1
   497   00EDFD  01                 	db	1
   498   00EDFE  01                 	db	1
   499   00EDFF  01                 	db	1
   500   00EE00  01                 	db	1
   501   00EE01  00                 	db	0
   502   00EE02  00                 	db	0
   503   00EE03  00                 	db	0
   504   00EE04  00                 	db	0
   505   00EE05  00                 	db	0
   506   00EE06  00                 	db	0
   507   00EE07  01                 	db	1
   508   00EE08  01                 	db	1
   509   00EE09  00                 	db	0
   510   00EE0A  00                 	db	0
   511   00EE0B  01                 	db	1
   512   00EE0C  01                 	db	1
   513   00EE0D  01                 	db	1
   514   00EE0E  00                 	db	0
   515   00EE0F  00                 	db	0
   516   00EE10  00                 	db	0
   517   00EE11  01                 	db	1
   518   00EE12  01                 	db	1
   519   00EE13  00                 	db	0
   520   00EE14  01                 	db	1
   521   00EE15  01                 	db	1
   522   00EE16  01                 	db	1
   523   00EE17  00                 	db	0
   524   00EE18  00                 	db	0
   525   00EE19  01                 	db	1
   526   00EE1A  00                 	db	0
   527   00EE1B  01                 	db	1
   528   00EE1C  01                 	db	1
   529   00EE1D  01                 	db	1
   530   00EE1E  01                 	db	1
   531   00EE1F  01                 	db	1
   532   00EE20  00                 	db	0
   533   00EE21  00                 	db	0
   534   00EE22  00                 	db	0
   535   00EE23  00                 	db	0
   536   00EE24  00                 	db	0
   537   00EE25  00                 	db	0
   538   00EE26  00                 	db	0
   539   00EE27  00                 	db	0
   540   00EE28  00                 	db	0
   541   00EE29  00                 	db	0
   542   00EE2A  00                 	db	0
   543   00EE2B  00                 	db	0
   544   00EE2C  00                 	db	0
   545   00EE2D  00                 	db	0
   546   00EE2E  00                 	db	0
   547   00EE2F  01                 	db	1
   548   00EE30  00                 	db	0
   549   00EE31  00                 	db	0
   550   00EE32  00                 	db	0
   551   00EE33  00                 	db	0
   552   00EE34  00                 	db	0
   553   00EE35                     __end_of_priorities:
   554                           	callstack 0
   555   00EE35                     _configs:
   556                           	callstack 0
   557   00EE35  0B                 	db	11
   558   00EE36  43                 	db	67
   559   00EE37  00                 	db	0
   560   00EE38  FF                 	db	255
   561   00EE39  0C                 	db	12
   562   00EE3A  43                 	db	67
   563   00EE3B  01                 	db	1
   564   00EE3C  FF                 	db	255
   565   00EE3D  0D                 	db	13
   566   00EE3E  43                 	db	67
   567   00EE3F  02                 	db	2
   568   00EE40  FF                 	db	255
   569   00EE41  0E                 	db	14
   570   00EE42  43                 	db	67
   571   00EE43  03                 	db	3
   572   00EE44  FF                 	db	255
   573   00EE45  0F                 	db	15
   574   00EE46  43                 	db	67
   575   00EE47  04                 	db	4
   576   00EE48  FF                 	db	255
   577   00EE49  10                 	db	16
   578   00EE4A  43                 	db	67
   579   00EE4B  05                 	db	5
   580   00EE4C  FF                 	db	255
   581   00EE4D  11                 	db	17
   582   00EE4E  43                 	db	67
   583   00EE4F  06                 	db	6
   584   00EE50  FF                 	db	255
   585   00EE51  12                 	db	18
   586   00EE52  43                 	db	67
   587   00EE53  07                 	db	7
   588   00EE54  FF                 	db	255
   589   00EE55  15                 	db	21
   590   00EE56  42                 	db	66
   591   00EE57  00                 	db	0
   592   00EE58  0A                 	db	10
   593   00EE59  16                 	db	22
   594   00EE5A  42                 	db	66
   595   00EE5B  01                 	db	1
   596   00EE5C  08                 	db	8
   597   00EE5D  19                 	db	25
   598   00EE5E  42                 	db	66
   599   00EE5F  04                 	db	4
   600   00EE60  09                 	db	9
   601   00EE61  1A                 	db	26
   602   00EE62  42                 	db	66
   603   00EE63  05                 	db	5
   604   00EE64  FF                 	db	255
   605   00EE65  03                 	db	3
   606   00EE66  41                 	db	65
   607   00EE67  01                 	db	1
   608   00EE68  01                 	db	1
   609   00EE69  02                 	db	2
   610   00EE6A  41                 	db	65
   611   00EE6B  00                 	db	0
   612   00EE6C  00                 	db	0
   613   00EE6D  05                 	db	5
   614   00EE6E  41                 	db	65
   615   00EE6F  03                 	db	3
   616   00EE70  03                 	db	3
   617   00EE71  07                 	db	7
   618   00EE72  41                 	db	65
   619   00EE73  05                 	db	5
   620   00EE74  04                 	db	4
   621   00EE75                     __end_of_configs:
   622                           	callstack 0
   623   000000                     _paramBlock_absaddr	set	2080
   624   00EE75                     _services:
   625                           	callstack 0
   626   00EE75  69                 	db	low _canService
   627   00EE76  EF                 	db	high _canService
   628   00EE77  57                 	db	low _mnsService
   629   00EE78  EF                 	db	high _mnsService
   630   00EE79  45                 	db	low _nvService
   631   00EE7A  EF                 	db	high _nvService
   632   00EE7B  33                 	db	low _bootService
   633   00EE7C  EF                 	db	high _bootService
   634   00EE7D  21                 	db	low _eventTeachService
   635   00EE7E  EF                 	db	high _eventTeachService
   636   00EE7F  0F                 	db	low _eventConsumer2QService
   637   00EE80  EF                 	db	high _eventConsumer2QService
   638   00EE81  FD                 	db	low _eventProducerService
   639   00EE82  EE                 	db	high _eventProducerService
   640   00EE83  EB                 	db	low _eventCoeService
   641   00EE84  EE                 	db	high _eventCoeService
   642   00EE85  D9                 	db	low _eventAckService
   643   00EE86  EE                 	db	high _eventAckService
   644   00EE87                     __end_of_services:
   645                           	callstack 0
   646   000000                     _name_absaddr	set	2120
   647   00EE87                     _canPri:
   648                           	callstack 0
   649   00EE87  70                 	db	112
   650   00EE88  60                 	db	96
   651   00EE89  50                 	db	80
   652   00EE8A  40                 	db	64
   653   00EE8B  00                 	db	0
   654   00EE8C                     __end_of_canPri:
   655                           	callstack 0
   656   00EE8C                     _channelDefaultNVs:
   657                           	callstack 0
   658   00EE8C  00                 	db	0
   659   00EE8D  06                 	db	6
   660   00EE8E  04                 	db	4
   661   00EE8F  04                 	db	4
   662   00EE90  00                 	db	0
   663   00EE91  00                 	db	0
   664   00EE92  00                 	db	0
   665   00EE93  01                 	db	1
   666   00EE94  06                 	db	6
   667   00EE95  00                 	db	0
   668   00EE96  00                 	db	0
   669   00EE97  00                 	db	0
   670   00EE98  00                 	db	0
   671   00EE99  00                 	db	0
   672   00EE9A  02                 	db	2
   673   00EE9B  06                 	db	6
   674   00EE9C  80                 	db	128
   675   00EE9D  80                 	db	128
   676   00EE9E  EB                 	db	235
   677   00EE9F  EB                 	db	235
   678   00EEA0  00                 	db	0
   679   00EEA1  03                 	db	3
   680   00EEA2  06                 	db	6
   681   00EEA3  80                 	db	128
   682   00EEA4  7F                 	db	127
   683   00EEA5  40                 	db	64
   684   00EEA6  03                 	db	3
   685   00EEA7  3C                 	db	60
   686   00EEA8  04                 	db	4
   687   00EEA9  06                 	db	6
   688   00EEAA  03                 	db	3
   689   00EEAB  80                 	db	128
   690   00EEAC  80                 	db	128
   691   00EEAD  80                 	db	128
   692   00EEAE  00                 	db	0
   693   00EEAF  05                 	db	5
   694   00EEB0  06                 	db	6
   695   00EEB1  80                 	db	128
   696   00EEB2  10                 	db	16
   697   00EEB3  00                 	db	0
   698   00EEB4  00                 	db	0
   699   00EEB5  00                 	db	0
   700   00EEB6  06                 	db	6
   701   00EEB7  06                 	db	6
   702   00EEB8  00                 	db	0
   703   00EEB9  7B                 	db	123
   704   00EEBA  20                 	db	32
   705   00EEBB  07                 	db	7
   706   00EEBC  FF                 	db	255
   707   00EEBD  07                 	db	7
   708   00EEBE  00                 	db	0
   709   00EEBF  00                 	db	0
   710   00EEC0  00                 	db	0
   711   00EEC1  00                 	db	0
   712   00EEC2  00                 	db	0
   713   00EEC3  00                 	db	0
   714   00EEC4  08                 	db	8
   715   00EEC5  00                 	db	0
   716   00EEC6  00                 	db	0
   717   00EEC7  00                 	db	0
   718   00EEC8  00                 	db	0
   719   00EEC9  00                 	db	0
   720   00EECA  00                 	db	0
   721   00EECB  09                 	db	9
   722   00EECC  00                 	db	0
   723   00EECD  00                 	db	0
   724   00EECE  00                 	db	0
   725   00EECF  00                 	db	0
   726   00EED0  00                 	db	0
   727   00EED1  00                 	db	0
   728   00EED2  0A                 	db	10
   729   00EED3  00                 	db	0
   730   00EED4  00                 	db	0
   731   00EED5  00                 	db	0
   732   00EED6  00                 	db	0
   733   00EED7  00                 	db	0
   734   00EED8  00                 	db	0
   735   00EED9                     __end_of_channelDefaultNVs:
   736                           	callstack 0
   737   00EED9                     _eventAckService:
   738                           	callstack 0
   739   00EED9  09                 	db	9
   740   00EEDA  01                 	db	1
   741   00EEDB  00                 	db	0
   742   00EEDC  00                 	db	0
   743   00EEDD  E0                 	db	low _ackPowerUp
   744   00EEDE  C1                 	db	high _ackPowerUp
   745   00EEDF  9A                 	db	low _ackEventProcessMessage
   746   00EEE0  67                 	db	high _ackEventProcessMessage
   747   00EEE1  00                 	db	0
   748   00EEE2  00                 	db	0
   749   00EEE3  00                 	db	0
   750   00EEE4  00                 	db	0
   751   00EEE5  00                 	db	0
   752   00EEE6  00                 	db	0
   753   00EEE7  00                 	db	0
   754   00EEE8  00                 	db	0
   755   00EEE9  E0                 	db	low _ackGetDiagnostic
   756   00EEEA  BE                 	db	high _ackGetDiagnostic
   757   00EEEB                     __end_of_eventAckService:
   758                           	callstack 0
   759   00EEEB                     _eventCoeService:
   760                           	callstack 0
   761   00EEEB  08                 	db	8
   762   00EEEC  01                 	db	1
   763   00EEED  00                 	db	0
   764   00EEEE  00                 	db	0
   765   00EEEF  00                 	db	0
   766   00EEF0  00                 	db	0
   767   00EEF1  00                 	db	0
   768   00EEF2  00                 	db	0
   769   00EEF3  00                 	db	0
   770   00EEF4  00                 	db	0
   771   00EEF5  00                 	db	0
   772   00EEF6  00                 	db	0
   773   00EEF7  00                 	db	0
   774   00EEF8  00                 	db	0
   775   00EEF9  00                 	db	0
   776   00EEFA  00                 	db	0
   777   00EEFB  00                 	db	0
   778   00EEFC  00                 	db	0
   779   00EEFD                     __end_of_eventCoeService:
   780                           	callstack 0
   781   00EEFD                     _eventProducerService:
   782                           	callstack 0
   783   00EEFD  05                 	db	5
   784   00EEFE  01                 	db	1
   785   00EEFF  00                 	db	0
   786   00EF00  00                 	db	0
   787   00EF01  00                 	db	0
   788   00EF02  00                 	db	0
   789   00EF03  84                 	db	low _producerProcessMessage
   790   00EF04  56                 	db	high _producerProcessMessage
   791   00EF05  00                 	db	0
   792   00EF06  00                 	db	0
   793   00EF07  00                 	db	0
   794   00EF08  00                 	db	0
   795   00EF09  00                 	db	0
   796   00EF0A  00                 	db	0
   797   00EF0B  00                 	db	0
   798   00EF0C  00                 	db	0
   799   00EF0D  90                 	db	low _producerGetDiagnostic
   800   00EF0E  BC                 	db	high _producerGetDiagnostic
   801   00EF0F                     __end_of_eventProducerService:
   802                           	callstack 0
   803   00EF0F                     _eventConsumer2QService:
   804                           	callstack 0
   805   00EF0F  06                 	db	6
   806   00EF10  01                 	db	1
   807   00EF11  00                 	db	0
   808   00EF12  00                 	db	0
   809   00EF13  EA                 	db	low _consumer2QPowerUp
   810   00EF14  C2                 	db	high _consumer2QPowerUp
   811   00EF15  54                 	db	low _consumer2QProcessMessage
   812   00EF16  32                 	db	high _consumer2QProcessMessage
   813   00EF17  00                 	db	0
   814   00EF18  00                 	db	0
   815   00EF19  00                 	db	0
   816   00EF1A  00                 	db	0
   817   00EF1B  00                 	db	0
   818   00EF1C  00                 	db	0
   819   00EF1D  00                 	db	0
   820   00EF1E  00                 	db	0
   821   00EF1F  C6                 	db	low _consumer2QGetDiagnostic
   822   00EF20  BC                 	db	high _consumer2QGetDiagnostic
   823   00EF21                     __end_of_eventConsumer2QService:
   824                           	callstack 0
   825   00EF21                     _eventTeachService:
   826                           	callstack 0
   827   00EF21  04                 	db	4
   828   00EF22  01                 	db	1
   829   00EF23  06                 	db	low _teachFactoryReset
   830   00EF24  C4                 	db	high _teachFactoryReset
   831   00EF25  C4                 	db	low _teachPowerUp
   832   00EF26  BF                 	db	high _teachPowerUp
   833   00EF27  AA                 	db	low _teachProcessMessage
   834   00EF28  22                 	db	high _teachProcessMessage
   835   00EF29  00                 	db	0
   836   00EF2A  00                 	db	0
   837   00EF2B  00                 	db	0
   838   00EF2C  00                 	db	0
   839   00EF2D  00                 	db	0
   840   00EF2E  00                 	db	0
   841   00EF2F  30                 	db	low _teachGetESDdata
   842   00EF30  C1                 	db	high _teachGetESDdata
   843   00EF31  FC                 	db	low _teachGetDiagnostic
   844   00EF32  BC                 	db	high _teachGetDiagnostic
   845   00EF33                     __end_of_eventTeachService:
   846                           	callstack 0
   847   00EF33                     _bootService:
   848                           	callstack 0
   849   00EF33  0A                 	db	10
   850   00EF34  01                 	db	1
   851   00EF35  00                 	db	0
   852   00EF36  00                 	db	0
   853   00EF37  00                 	db	0
   854   00EF38  00                 	db	0
   855   00EF39  C2                 	db	low _bootProcessMessage
   856   00EF3A  9E                 	db	high _bootProcessMessage
   857   00EF3B  00                 	db	0
   858   00EF3C  00                 	db	0
   859   00EF3D  00                 	db	0
   860   00EF3E  00                 	db	0
   861   00EF3F  00                 	db	0
   862   00EF40  00                 	db	0
   863   00EF41  00                 	db	0
   864   00EF42  00                 	db	0
   865   00EF43  00                 	db	0
   866   00EF44  00                 	db	0
   867   00EF45                     __end_of_bootService:
   868                           	callstack 0
   869   00EF45                     _nvService:
   870                           	callstack 0
   871   00EF45  02                 	db	2
   872   00EF46  01                 	db	1
   873   00EF47  3C                 	db	low _nvFactoryReset
   874   00EF48  BB                 	db	high _nvFactoryReset
   875   00EF49  E8                 	db	low _nvPowerUp
   876   00EF4A  C0                 	db	high _nvPowerUp
   877   00EF4B  A8                 	db	low _nvProcessMessage
   878   00EF4C  44                 	db	high _nvProcessMessage
   879   00EF4D  00                 	db	0
   880   00EF4E  00                 	db	0
   881   00EF4F  00                 	db	0
   882   00EF50  00                 	db	0
   883   00EF51  00                 	db	0
   884   00EF52  00                 	db	0
   885   00EF53  D0                 	db	low _nvGetESDdata
   886   00EF54  C2                 	db	high _nvGetESDdata
   887   00EF55  B2                 	db	low _nvGetDiagnostic
   888   00EF56  BE                 	db	high _nvGetDiagnostic
   889   00EF57                     __end_of_nvService:
   890                           	callstack 0
   891   00EF57                     _mnsService:
   892                           	callstack 0
   893   00EF57  01                 	db	1
   894   00EF58  01                 	db	1
   895   00EF59  14                 	db	low _mnsFactoryReset
   896   00EF5A  AB                 	db	high _mnsFactoryReset
   897   00EF5B  CC                 	db	low _mnsPowerUp
   898   00EF5C  7F                 	db	high _mnsPowerUp
   899   00EF5D  66                 	db	low _mnsProcessMessage
   900   00EF5E  17                 	db	high _mnsProcessMessage
   901   00EF5F  E8                 	db	low _mnsPoll
   902   00EF60  47                 	db	high _mnsPoll
   903   00EF61  00                 	db	0
   904   00EF62  00                 	db	0
   905   00EF63  5C                 	db	low _mnsLowIsr
   906   00EF64  C3                 	db	high _mnsLowIsr
   907   00EF65  00                 	db	0
   908   00EF66  00                 	db	0
   909   00EF67  5A                 	db	low _mnsGetDiagnostic
   910   00EF68  BC                 	db	high _mnsGetDiagnostic
   911   00EF69                     __end_of_mnsService:
   912                           	callstack 0
   913   00EF69                     _canService:
   914                           	callstack 0
   915   00EF69  03                 	db	3
   916   00EF6A  01                 	db	1
   917   00EF6B  60                 	db	low _canFactoryReset
   918   00EF6C  C2                 	db	high _canFactoryReset
   919   00EF6D  9C                 	db	low _canPowerUp
   920   00EF6E  69                 	db	high _canPowerUp
   921   00EF6F  AE                 	db	low _canProcessMessage
   922   00EF70  9B                 	db	high _canProcessMessage
   923   00EF71  00                 	db	0
   924   00EF72  00                 	db	0
   925   00EF73  20                 	db	low _canIsr
   926   00EF74  C2                 	db	high _canIsr
   927   00EF75  20                 	db	low _canIsr
   928   00EF76  C2                 	db	high _canIsr
   929   00EF77  B6                 	db	low _canEsdData
   930   00EF78  C2                 	db	high _canEsdData
   931   00EF79  24                 	db	low _canGetDiagnostic
   932   00EF7A  BC                 	db	high _canGetDiagnostic
   933   00EF7B                     __end_of_canService:
   934                           	callstack 0
   935   00EF7B                     _canTransport:
   936                           	callstack 0
   937   00EF7B  FC                 	db	low _canSendMessage
   938   00EF7C  4D                 	db	high _canSendMessage
   939   00EF7D  D0                 	db	low _canReceiveMessage
   940   00EF7E  70                 	db	high _canReceiveMessage
   941   00EF7F                     __end_of_canTransport:
   942                           	callstack 0
   943   000000                     _eventTable_absaddr	set	61312
   944   00EF7F  00                 	db	0	; dummy byte at the end
   945   000000                     
   946                           	psect	_eventTable_text
   947   00EF80                     __p_eventTable_text:
   948                           	callstack 0
   949   00EF80                     _eventTable:
   950                           	callstack 0
   951   00EF80  FF                 	db	255
   952   00EF81  FF                 	db	255
   953   00EF82  FF                 	db	255
   954   00EF83  FF                 	db	255
   955   00EF84  FF                 	db	255
   956   00EF85  FF                 	db	255
   957   00EF86  FF                 	db	255
   958   00EF87  FF                 	db	255
   959   00EF88  FF                 	db	255
   960   00EF89  FF                 	db	255
   961   00EF8A  FF                 	db	255
   962   00EF8B  FF                 	db	255
   963   00EF8C  FF                 	db	255
   964   00EF8D  FF                 	db	255
   965   00EF8E  FF                 	db	255
   966   00EF8F  FF                 	db	255
   967   00EF90  FF                 	db	255
   968   00EF91  FF                 	db	255
   969   00EF92  FF                 	db	255
   970   00EF93  FF                 	db	255
   971   00EF94  FF                 	db	255
   972   00EF95  FF                 	db	255
   973   00EF96  FF                 	db	255
   974   00EF97  FF                 	db	255
   975   00EF98  FF                 	db	255
   976   00EF99  FF                 	db	255
   977   00EF9A  FF                 	db	255
   978   00EF9B  FF                 	db	255
   979   00EF9C  FF                 	db	255
   980   00EF9D  FF                 	db	255
   981   00EF9E  FF                 	db	255
   982   00EF9F  FF                 	db	255
   983   00EFA0  FF                 	db	255
   984   00EFA1  FF                 	db	255
   985   00EFA2  FF                 	db	255
   986   00EFA3  FF                 	db	255
   987   00EFA4  FF                 	db	255
   988   00EFA5  FF                 	db	255
   989   00EFA6  FF                 	db	255
   990   00EFA7  FF                 	db	255
   991   00EFA8  FF                 	db	255
   992   00EFA9  FF                 	db	255
   993   00EFAA  FF                 	db	255
   994   00EFAB  FF                 	db	255
   995   00EFAC  FF                 	db	255
   996   00EFAD  FF                 	db	255
   997   00EFAE  FF                 	db	255
   998   00EFAF  FF                 	db	255
   999   00EFB0  FF                 	db	255
  1000   00EFB1  FF                 	db	255
  1001   00EFB2  FF                 	db	255
  1002   00EFB3  FF                 	db	255
  1003   00EFB4  FF                 	db	255
  1004   00EFB5  FF                 	db	255
  1005   00EFB6  FF                 	db	255
  1006   00EFB7  FF                 	db	255
  1007   00EFB8  FF                 	db	255
  1008   00EFB9  FF                 	db	255
  1009   00EFBA  FF                 	db	255
  1010   00EFBB  FF                 	db	255
  1011   00EFBC  FF                 	db	255
  1012   00EFBD  FF                 	db	255
  1013   00EFBE  FF                 	db	255
  1014   00EFBF  FF                 	db	255
  1015   00EFC0  FF                 	db	255
  1016   00EFC1  FF                 	db	255
  1017   00EFC2  FF                 	db	255
  1018   00EFC3  FF                 	db	255
  1019   00EFC4  FF                 	db	255
  1020   00EFC5  FF                 	db	255
  1021   00EFC6  FF                 	db	255
  1022   00EFC7  FF                 	db	255
  1023   00EFC8  FF                 	db	255
  1024   00EFC9  FF                 	db	255
  1025   00EFCA  FF                 	db	255
  1026   00EFCB  FF                 	db	255
  1027   00EFCC  FF                 	db	255
  1028   00EFCD  FF                 	db	255
  1029   00EFCE  FF                 	db	255
  1030   00EFCF  FF                 	db	255
  1031   00EFD0  FF                 	db	255
  1032   00EFD1  FF                 	db	255
  1033   00EFD2  FF                 	db	255
  1034   00EFD3  FF                 	db	255
  1035   00EFD4  FF                 	db	255
  1036   00EFD5  FF                 	db	255
  1037   00EFD6  FF                 	db	255
  1038   00EFD7  FF                 	db	255
  1039   00EFD8  FF                 	db	255
  1040   00EFD9  FF                 	db	255
  1041   00EFDA  FF                 	db	255
  1042   00EFDB  FF                 	db	255
  1043   00EFDC  FF                 	db	255
  1044   00EFDD  FF                 	db	255
  1045   00EFDE  FF                 	db	255
  1046   00EFDF  FF                 	db	255
  1047   00EFE0  FF                 	db	255
  1048   00EFE1  FF                 	db	255
  1049   00EFE2  FF                 	db	255
  1050   00EFE3  FF                 	db	255
  1051   00EFE4  FF                 	db	255
  1052   00EFE5  FF                 	db	255
  1053   00EFE6  FF                 	db	255
  1054   00EFE7  FF                 	db	255
  1055   00EFE8  FF                 	db	255
  1056   00EFE9  FF                 	db	255
  1057   00EFEA  FF                 	db	255
  1058   00EFEB  FF                 	db	255
  1059   00EFEC  FF                 	db	255
  1060   00EFED  FF                 	db	255
  1061   00EFEE  FF                 	db	255
  1062   00EFEF  FF                 	db	255
  1063   00EFF0  FF                 	db	255
  1064   00EFF1  FF                 	db	255
  1065   00EFF2  FF                 	db	255
  1066   00EFF3  FF                 	db	255
  1067   00EFF4  FF                 	db	255
  1068   00EFF5  FF                 	db	255
  1069   00EFF6  FF                 	db	255
  1070   00EFF7  FF                 	db	255
  1071   00EFF8  FF                 	db	255
  1072   00EFF9  FF                 	db	255
  1073   00EFFA  FF                 	db	255
  1074   00EFFB  FF                 	db	255
  1075   00EFFC  FF                 	db	255
  1076   00EFFD  FF                 	db	255
  1077   00EFFE  FF                 	db	255
  1078   00EFFF  FF                 	db	255
  1079   00F000  FF                 	db	255
  1080   00F001  FF                 	db	255
  1081   00F002  FF                 	db	255
  1082   00F003  FF                 	db	255
  1083   00F004  FF                 	db	255
  1084   00F005  FF                 	db	255
  1085   00F006  FF                 	db	255
  1086   00F007  FF                 	db	255
  1087   00F008  FF                 	db	255
  1088   00F009  FF                 	db	255
  1089   00F00A  FF                 	db	255
  1090   00F00B  FF                 	db	255
  1091   00F00C  FF                 	db	255
  1092   00F00D  FF                 	db	255
  1093   00F00E  FF                 	db	255
  1094   00F00F  FF                 	db	255
  1095   00F010  FF                 	db	255
  1096   00F011  FF                 	db	255
  1097   00F012  FF                 	db	255
  1098   00F013  FF                 	db	255
  1099   00F014  FF                 	db	255
  1100   00F015  FF                 	db	255
  1101   00F016  FF                 	db	255
  1102   00F017  FF                 	db	255
  1103   00F018  FF                 	db	255
  1104   00F019  FF                 	db	255
  1105   00F01A  FF                 	db	255
  1106   00F01B  FF                 	db	255
  1107   00F01C  FF                 	db	255
  1108   00F01D  FF                 	db	255
  1109   00F01E  FF                 	db	255
  1110   00F01F  FF                 	db	255
  1111   00F020  FF                 	db	255
  1112   00F021  FF                 	db	255
  1113   00F022  FF                 	db	255
  1114   00F023  FF                 	db	255
  1115   00F024  FF                 	db	255
  1116   00F025  FF                 	db	255
  1117   00F026  FF                 	db	255
  1118   00F027  FF                 	db	255
  1119   00F028  FF                 	db	255
  1120   00F029  FF                 	db	255
  1121   00F02A  FF                 	db	255
  1122   00F02B  FF                 	db	255
  1123   00F02C  FF                 	db	255
  1124   00F02D  FF                 	db	255
  1125   00F02E  FF                 	db	255
  1126   00F02F  FF                 	db	255
  1127   00F030  FF                 	db	255
  1128   00F031  FF                 	db	255
  1129   00F032  FF                 	db	255
  1130   00F033  FF                 	db	255
  1131   00F034  FF                 	db	255
  1132   00F035  FF                 	db	255
  1133   00F036  FF                 	db	255
  1134   00F037  FF                 	db	255
  1135   00F038  FF                 	db	255
  1136   00F039  FF                 	db	255
  1137   00F03A  FF                 	db	255
  1138   00F03B  FF                 	db	255
  1139   00F03C  FF                 	db	255
  1140   00F03D  FF                 	db	255
  1141   00F03E  FF                 	db	255
  1142   00F03F  FF                 	db	255
  1143   00F040  FF                 	db	255
  1144   00F041  FF                 	db	255
  1145   00F042  FF                 	db	255
  1146   00F043  FF                 	db	255
  1147   00F044  FF                 	db	255
  1148   00F045  FF                 	db	255
  1149   00F046  FF                 	db	255
  1150   00F047  FF                 	db	255
  1151   00F048  FF                 	db	255
  1152   00F049  FF                 	db	255
  1153   00F04A  FF                 	db	255
  1154   00F04B  FF                 	db	255
  1155   00F04C  FF                 	db	255
  1156   00F04D  FF                 	db	255
  1157   00F04E  FF                 	db	255
  1158   00F04F  FF                 	db	255
  1159   00F050  FF                 	db	255
  1160   00F051  FF                 	db	255
  1161   00F052  FF                 	db	255
  1162   00F053  FF                 	db	255
  1163   00F054  FF                 	db	255
  1164   00F055  FF                 	db	255
  1165   00F056  FF                 	db	255
  1166   00F057  FF                 	db	255
  1167   00F058  FF                 	db	255
  1168   00F059  FF                 	db	255
  1169   00F05A  FF                 	db	255
  1170   00F05B  FF                 	db	255
  1171   00F05C  FF                 	db	255
  1172   00F05D  FF                 	db	255
  1173   00F05E  FF                 	db	255
  1174   00F05F  FF                 	db	255
  1175   00F060  FF                 	db	255
  1176   00F061  FF                 	db	255
  1177   00F062  FF                 	db	255
  1178   00F063  FF                 	db	255
  1179   00F064  FF                 	db	255
  1180   00F065  FF                 	db	255
  1181   00F066  FF                 	db	255
  1182   00F067  FF                 	db	255
  1183   00F068  FF                 	db	255
  1184   00F069  FF                 	db	255
  1185   00F06A  FF                 	db	255
  1186   00F06B  FF                 	db	255
  1187   00F06C  FF                 	db	255
  1188   00F06D  FF                 	db	255
  1189   00F06E  FF                 	db	255
  1190   00F06F  FF                 	db	255
  1191   00F070  FF                 	db	255
  1192   00F071  FF                 	db	255
  1193   00F072  FF                 	db	255
  1194   00F073  FF                 	db	255
  1195   00F074  FF                 	db	255
  1196   00F075  FF                 	db	255
  1197   00F076  FF                 	db	255
  1198   00F077  FF                 	db	255
  1199   00F078  FF                 	db	255
  1200   00F079  FF                 	db	255
  1201   00F07A  FF                 	db	255
  1202   00F07B  FF                 	db	255
  1203   00F07C  FF                 	db	255
  1204   00F07D  FF                 	db	255
  1205   00F07E  FF                 	db	255
  1206   00F07F  FF                 	db	255
  1207   00F080  FF                 	db	255
  1208   00F081  FF                 	db	255
  1209   00F082  FF                 	db	255
  1210   00F083  FF                 	db	255
  1211   00F084  FF                 	db	255
  1212   00F085  FF                 	db	255
  1213   00F086  FF                 	db	255
  1214   00F087  FF                 	db	255
  1215   00F088  FF                 	db	255
  1216   00F089  FF                 	db	255
  1217   00F08A  FF                 	db	255
  1218   00F08B  FF                 	db	255
  1219   00F08C  FF                 	db	255
  1220   00F08D  FF                 	db	255
  1221   00F08E  FF                 	db	255
  1222   00F08F  FF                 	db	255
  1223   00F090  FF                 	db	255
  1224   00F091  FF                 	db	255
  1225   00F092  FF                 	db	255
  1226   00F093  FF                 	db	255
  1227   00F094  FF                 	db	255
  1228   00F095  FF                 	db	255
  1229   00F096  FF                 	db	255
  1230   00F097  FF                 	db	255
  1231   00F098  FF                 	db	255
  1232   00F099  FF                 	db	255
  1233   00F09A  FF                 	db	255
  1234   00F09B  FF                 	db	255
  1235   00F09C  FF                 	db	255
  1236   00F09D  FF                 	db	255
  1237   00F09E  FF                 	db	255
  1238   00F09F  FF                 	db	255
  1239   00F0A0  FF                 	db	255
  1240   00F0A1  FF                 	db	255
  1241   00F0A2  FF                 	db	255
  1242   00F0A3  FF                 	db	255
  1243   00F0A4  FF                 	db	255
  1244   00F0A5  FF                 	db	255
  1245   00F0A6  FF                 	db	255
  1246   00F0A7  FF                 	db	255
  1247   00F0A8  FF                 	db	255
  1248   00F0A9  FF                 	db	255
  1249   00F0AA  FF                 	db	255
  1250   00F0AB  FF                 	db	255
  1251   00F0AC  FF                 	db	255
  1252   00F0AD  FF                 	db	255
  1253   00F0AE  FF                 	db	255
  1254   00F0AF  FF                 	db	255
  1255   00F0B0  FF                 	db	255
  1256   00F0B1  FF                 	db	255
  1257   00F0B2  FF                 	db	255
  1258   00F0B3  FF                 	db	255
  1259   00F0B4  FF                 	db	255
  1260   00F0B5  FF                 	db	255
  1261   00F0B6  FF                 	db	255
  1262   00F0B7  FF                 	db	255
  1263   00F0B8  FF                 	db	255
  1264   00F0B9  FF                 	db	255
  1265   00F0BA  FF                 	db	255
  1266   00F0BB  FF                 	db	255
  1267   00F0BC  FF                 	db	255
  1268   00F0BD  FF                 	db	255
  1269   00F0BE  FF                 	db	255
  1270   00F0BF  FF                 	db	255
  1271   00F0C0  FF                 	db	255
  1272   00F0C1  FF                 	db	255
  1273   00F0C2  FF                 	db	255
  1274   00F0C3  FF                 	db	255
  1275   00F0C4  FF                 	db	255
  1276   00F0C5  FF                 	db	255
  1277   00F0C6  FF                 	db	255
  1278   00F0C7  FF                 	db	255
  1279   00F0C8  FF                 	db	255
  1280   00F0C9  FF                 	db	255
  1281   00F0CA  FF                 	db	255
  1282   00F0CB  FF                 	db	255
  1283   00F0CC  FF                 	db	255
  1284   00F0CD  FF                 	db	255
  1285   00F0CE  FF                 	db	255
  1286   00F0CF  FF                 	db	255
  1287   00F0D0  FF                 	db	255
  1288   00F0D1  FF                 	db	255
  1289   00F0D2  FF                 	db	255
  1290   00F0D3  FF                 	db	255
  1291   00F0D4  FF                 	db	255
  1292   00F0D5  FF                 	db	255
  1293   00F0D6  FF                 	db	255
  1294   00F0D7  FF                 	db	255
  1295   00F0D8  FF                 	db	255
  1296   00F0D9  FF                 	db	255
  1297   00F0DA  FF                 	db	255
  1298   00F0DB  FF                 	db	255
  1299   00F0DC  FF                 	db	255
  1300   00F0DD  FF                 	db	255
  1301   00F0DE  FF                 	db	255
  1302   00F0DF  FF                 	db	255
  1303   00F0E0  FF                 	db	255
  1304   00F0E1  FF                 	db	255
  1305   00F0E2  FF                 	db	255
  1306   00F0E3  FF                 	db	255
  1307   00F0E4  FF                 	db	255
  1308   00F0E5  FF                 	db	255
  1309   00F0E6  FF                 	db	255
  1310   00F0E7  FF                 	db	255
  1311   00F0E8  FF                 	db	255
  1312   00F0E9  FF                 	db	255
  1313   00F0EA  FF                 	db	255
  1314   00F0EB  FF                 	db	255
  1315   00F0EC  FF                 	db	255
  1316   00F0ED  FF                 	db	255
  1317   00F0EE  FF                 	db	255
  1318   00F0EF  FF                 	db	255
  1319   00F0F0  FF                 	db	255
  1320   00F0F1  FF                 	db	255
  1321   00F0F2  FF                 	db	255
  1322   00F0F3  FF                 	db	255
  1323   00F0F4  FF                 	db	255
  1324   00F0F5  FF                 	db	255
  1325   00F0F6  FF                 	db	255
  1326   00F0F7  FF                 	db	255
  1327   00F0F8  FF                 	db	255
  1328   00F0F9  FF                 	db	255
  1329   00F0FA  FF                 	db	255
  1330   00F0FB  FF                 	db	255
  1331   00F0FC  FF                 	db	255
  1332   00F0FD  FF                 	db	255
  1333   00F0FE  FF                 	db	255
  1334   00F0FF  FF                 	db	255
  1335   00F100  FF                 	db	255
  1336   00F101  FF                 	db	255
  1337   00F102  FF                 	db	255
  1338   00F103  FF                 	db	255
  1339   00F104  FF                 	db	255
  1340   00F105  FF                 	db	255
  1341   00F106  FF                 	db	255
  1342   00F107  FF                 	db	255
  1343   00F108  FF                 	db	255
  1344   00F109  FF                 	db	255
  1345   00F10A  FF                 	db	255
  1346   00F10B  FF                 	db	255
  1347   00F10C  FF                 	db	255
  1348   00F10D  FF                 	db	255
  1349   00F10E  FF                 	db	255
  1350   00F10F  FF                 	db	255
  1351   00F110  FF                 	db	255
  1352   00F111  FF                 	db	255
  1353   00F112  FF                 	db	255
  1354   00F113  FF                 	db	255
  1355   00F114  FF                 	db	255
  1356   00F115  FF                 	db	255
  1357   00F116  FF                 	db	255
  1358   00F117  FF                 	db	255
  1359   00F118  FF                 	db	255
  1360   00F119  FF                 	db	255
  1361   00F11A  FF                 	db	255
  1362   00F11B  FF                 	db	255
  1363   00F11C  FF                 	db	255
  1364   00F11D  FF                 	db	255
  1365   00F11E  FF                 	db	255
  1366   00F11F  FF                 	db	255
  1367   00F120  FF                 	db	255
  1368   00F121  FF                 	db	255
  1369   00F122  FF                 	db	255
  1370   00F123  FF                 	db	255
  1371   00F124  FF                 	db	255
  1372   00F125  FF                 	db	255
  1373   00F126  FF                 	db	255
  1374   00F127  FF                 	db	255
  1375   00F128  FF                 	db	255
  1376   00F129  FF                 	db	255
  1377   00F12A  FF                 	db	255
  1378   00F12B  FF                 	db	255
  1379   00F12C  FF                 	db	255
  1380   00F12D  FF                 	db	255
  1381   00F12E  FF                 	db	255
  1382   00F12F  FF                 	db	255
  1383   00F130  FF                 	db	255
  1384   00F131  FF                 	db	255
  1385   00F132  FF                 	db	255
  1386   00F133  FF                 	db	255
  1387   00F134  FF                 	db	255
  1388   00F135  FF                 	db	255
  1389   00F136  FF                 	db	255
  1390   00F137  FF                 	db	255
  1391   00F138  FF                 	db	255
  1392   00F139  FF                 	db	255
  1393   00F13A  FF                 	db	255
  1394   00F13B  FF                 	db	255
  1395   00F13C  FF                 	db	255
  1396   00F13D  FF                 	db	255
  1397   00F13E  FF                 	db	255
  1398   00F13F  FF                 	db	255
  1399   00F140  FF                 	db	255
  1400   00F141  FF                 	db	255
  1401   00F142  FF                 	db	255
  1402   00F143  FF                 	db	255
  1403   00F144  FF                 	db	255
  1404   00F145  FF                 	db	255
  1405   00F146  FF                 	db	255
  1406   00F147  FF                 	db	255
  1407   00F148  FF                 	db	255
  1408   00F149  FF                 	db	255
  1409   00F14A  FF                 	db	255
  1410   00F14B  FF                 	db	255
  1411   00F14C  FF                 	db	255
  1412   00F14D  FF                 	db	255
  1413   00F14E  FF                 	db	255
  1414   00F14F  FF                 	db	255
  1415   00F150  FF                 	db	255
  1416   00F151  FF                 	db	255
  1417   00F152  FF                 	db	255
  1418   00F153  FF                 	db	255
  1419   00F154  FF                 	db	255
  1420   00F155  FF                 	db	255
  1421   00F156  FF                 	db	255
  1422   00F157  FF                 	db	255
  1423   00F158  FF                 	db	255
  1424   00F159  FF                 	db	255
  1425   00F15A  FF                 	db	255
  1426   00F15B  FF                 	db	255
  1427   00F15C  FF                 	db	255
  1428   00F15D  FF                 	db	255
  1429   00F15E  FF                 	db	255
  1430   00F15F  FF                 	db	255
  1431   00F160  FF                 	db	255
  1432   00F161  FF                 	db	255
  1433   00F162  FF                 	db	255
  1434   00F163  FF                 	db	255
  1435   00F164  FF                 	db	255
  1436   00F165  FF                 	db	255
  1437   00F166  FF                 	db	255
  1438   00F167  FF                 	db	255
  1439   00F168  FF                 	db	255
  1440   00F169  FF                 	db	255
  1441   00F16A  FF                 	db	255
  1442   00F16B  FF                 	db	255
  1443   00F16C  FF                 	db	255
  1444   00F16D  FF                 	db	255
  1445   00F16E  FF                 	db	255
  1446   00F16F  FF                 	db	255
  1447   00F170  FF                 	db	255
  1448   00F171  FF                 	db	255
  1449   00F172  FF                 	db	255
  1450   00F173  FF                 	db	255
  1451   00F174  FF                 	db	255
  1452   00F175  FF                 	db	255
  1453   00F176  FF                 	db	255
  1454   00F177  FF                 	db	255
  1455   00F178  FF                 	db	255
  1456   00F179  FF                 	db	255
  1457   00F17A  FF                 	db	255
  1458   00F17B  FF                 	db	255
  1459   00F17C  FF                 	db	255
  1460   00F17D  FF                 	db	255
  1461   00F17E  FF                 	db	255
  1462   00F17F  FF                 	db	255
  1463   00F180  FF                 	db	255
  1464   00F181  FF                 	db	255
  1465   00F182  FF                 	db	255
  1466   00F183  FF                 	db	255
  1467   00F184  FF                 	db	255
  1468   00F185  FF                 	db	255
  1469   00F186  FF                 	db	255
  1470   00F187  FF                 	db	255
  1471   00F188  FF                 	db	255
  1472   00F189  FF                 	db	255
  1473   00F18A  FF                 	db	255
  1474   00F18B  FF                 	db	255
  1475   00F18C  FF                 	db	255
  1476   00F18D  FF                 	db	255
  1477   00F18E  FF                 	db	255
  1478   00F18F  FF                 	db	255
  1479   00F190  FF                 	db	255
  1480   00F191  FF                 	db	255
  1481   00F192  FF                 	db	255
  1482   00F193  FF                 	db	255
  1483   00F194  FF                 	db	255
  1484   00F195  FF                 	db	255
  1485   00F196  FF                 	db	255
  1486   00F197  FF                 	db	255
  1487   00F198  FF                 	db	255
  1488   00F199  FF                 	db	255
  1489   00F19A  FF                 	db	255
  1490   00F19B  FF                 	db	255
  1491   00F19C  FF                 	db	255
  1492   00F19D  FF                 	db	255
  1493   00F19E  FF                 	db	255
  1494   00F19F  FF                 	db	255
  1495   00F1A0  FF                 	db	255
  1496   00F1A1  FF                 	db	255
  1497   00F1A2  FF                 	db	255
  1498   00F1A3  FF                 	db	255
  1499   00F1A4  FF                 	db	255
  1500   00F1A5  FF                 	db	255
  1501   00F1A6  FF                 	db	255
  1502   00F1A7  FF                 	db	255
  1503   00F1A8  FF                 	db	255
  1504   00F1A9  FF                 	db	255
  1505   00F1AA  FF                 	db	255
  1506   00F1AB  FF                 	db	255
  1507   00F1AC  FF                 	db	255
  1508   00F1AD  FF                 	db	255
  1509   00F1AE  FF                 	db	255
  1510   00F1AF  FF                 	db	255
  1511   00F1B0  FF                 	db	255
  1512   00F1B1  FF                 	db	255
  1513   00F1B2  FF                 	db	255
  1514   00F1B3  FF                 	db	255
  1515   00F1B4  FF                 	db	255
  1516   00F1B5  FF                 	db	255
  1517   00F1B6  FF                 	db	255
  1518   00F1B7  FF                 	db	255
  1519   00F1B8  FF                 	db	255
  1520   00F1B9  FF                 	db	255
  1521   00F1BA  FF                 	db	255
  1522   00F1BB  FF                 	db	255
  1523   00F1BC  FF                 	db	255
  1524   00F1BD  FF                 	db	255
  1525   00F1BE  FF                 	db	255
  1526   00F1BF  FF                 	db	255
  1527   00F1C0  FF                 	db	255
  1528   00F1C1  FF                 	db	255
  1529   00F1C2  FF                 	db	255
  1530   00F1C3  FF                 	db	255
  1531   00F1C4  FF                 	db	255
  1532   00F1C5  FF                 	db	255
  1533   00F1C6  FF                 	db	255
  1534   00F1C7  FF                 	db	255
  1535   00F1C8  FF                 	db	255
  1536   00F1C9  FF                 	db	255
  1537   00F1CA  FF                 	db	255
  1538   00F1CB  FF                 	db	255
  1539   00F1CC  FF                 	db	255
  1540   00F1CD  FF                 	db	255
  1541   00F1CE  FF                 	db	255
  1542   00F1CF  FF                 	db	255
  1543   00F1D0  FF                 	db	255
  1544   00F1D1  FF                 	db	255
  1545   00F1D2  FF                 	db	255
  1546   00F1D3  FF                 	db	255
  1547   00F1D4  FF                 	db	255
  1548   00F1D5  FF                 	db	255
  1549   00F1D6  FF                 	db	255
  1550   00F1D7  FF                 	db	255
  1551   00F1D8  FF                 	db	255
  1552   00F1D9  FF                 	db	255
  1553   00F1DA  FF                 	db	255
  1554   00F1DB  FF                 	db	255
  1555   00F1DC  FF                 	db	255
  1556   00F1DD  FF                 	db	255
  1557   00F1DE  FF                 	db	255
  1558   00F1DF  FF                 	db	255
  1559   00F1E0  FF                 	db	255
  1560   00F1E1  FF                 	db	255
  1561   00F1E2  FF                 	db	255
  1562   00F1E3  FF                 	db	255
  1563   00F1E4  FF                 	db	255
  1564   00F1E5  FF                 	db	255
  1565   00F1E6  FF                 	db	255
  1566   00F1E7  FF                 	db	255
  1567   00F1E8  FF                 	db	255
  1568   00F1E9  FF                 	db	255
  1569   00F1EA  FF                 	db	255
  1570   00F1EB  FF                 	db	255
  1571   00F1EC  FF                 	db	255
  1572   00F1ED  FF                 	db	255
  1573   00F1EE  FF                 	db	255
  1574   00F1EF  FF                 	db	255
  1575   00F1F0  FF                 	db	255
  1576   00F1F1  FF                 	db	255
  1577   00F1F2  FF                 	db	255
  1578   00F1F3  FF                 	db	255
  1579   00F1F4  FF                 	db	255
  1580   00F1F5  FF                 	db	255
  1581   00F1F6  FF                 	db	255
  1582   00F1F7  FF                 	db	255
  1583   00F1F8  FF                 	db	255
  1584   00F1F9  FF                 	db	255
  1585   00F1FA  FF                 	db	255
  1586   00F1FB  FF                 	db	255
  1587   00F1FC  FF                 	db	255
  1588   00F1FD  FF                 	db	255
  1589   00F1FE  FF                 	db	255
  1590   00F1FF  FF                 	db	255
  1591   00F200  FF                 	db	255
  1592   00F201  FF                 	db	255
  1593   00F202  FF                 	db	255
  1594   00F203  FF                 	db	255
  1595   00F204  FF                 	db	255
  1596   00F205  FF                 	db	255
  1597   00F206  FF                 	db	255
  1598   00F207  FF                 	db	255
  1599   00F208  FF                 	db	255
  1600   00F209  FF                 	db	255
  1601   00F20A  FF                 	db	255
  1602   00F20B  FF                 	db	255
  1603   00F20C  FF                 	db	255
  1604   00F20D  FF                 	db	255
  1605   00F20E  FF                 	db	255
  1606   00F20F  FF                 	db	255
  1607   00F210  FF                 	db	255
  1608   00F211  FF                 	db	255
  1609   00F212  FF                 	db	255
  1610   00F213  FF                 	db	255
  1611   00F214  FF                 	db	255
  1612   00F215  FF                 	db	255
  1613   00F216  FF                 	db	255
  1614   00F217  FF                 	db	255
  1615   00F218  FF                 	db	255
  1616   00F219  FF                 	db	255
  1617   00F21A  FF                 	db	255
  1618   00F21B  FF                 	db	255
  1619   00F21C  FF                 	db	255
  1620   00F21D  FF                 	db	255
  1621   00F21E  FF                 	db	255
  1622   00F21F  FF                 	db	255
  1623   00F220  FF                 	db	255
  1624   00F221  FF                 	db	255
  1625   00F222  FF                 	db	255
  1626   00F223  FF                 	db	255
  1627   00F224  FF                 	db	255
  1628   00F225  FF                 	db	255
  1629   00F226  FF                 	db	255
  1630   00F227  FF                 	db	255
  1631   00F228  FF                 	db	255
  1632   00F229  FF                 	db	255
  1633   00F22A  FF                 	db	255
  1634   00F22B  FF                 	db	255
  1635   00F22C  FF                 	db	255
  1636   00F22D  FF                 	db	255
  1637   00F22E  FF                 	db	255
  1638   00F22F  FF                 	db	255
  1639   00F230  FF                 	db	255
  1640   00F231  FF                 	db	255
  1641   00F232  FF                 	db	255
  1642   00F233  FF                 	db	255
  1643   00F234  FF                 	db	255
  1644   00F235  FF                 	db	255
  1645   00F236  FF                 	db	255
  1646   00F237  FF                 	db	255
  1647   00F238  FF                 	db	255
  1648   00F239  FF                 	db	255
  1649   00F23A  FF                 	db	255
  1650   00F23B  FF                 	db	255
  1651   00F23C  FF                 	db	255
  1652   00F23D  FF                 	db	255
  1653   00F23E  FF                 	db	255
  1654   00F23F  FF                 	db	255
  1655   00F240  FF                 	db	255
  1656   00F241  FF                 	db	255
  1657   00F242  FF                 	db	255
  1658   00F243  FF                 	db	255
  1659   00F244  FF                 	db	255
  1660   00F245  FF                 	db	255
  1661   00F246  FF                 	db	255
  1662   00F247  FF                 	db	255
  1663   00F248  FF                 	db	255
  1664   00F249  FF                 	db	255
  1665   00F24A  FF                 	db	255
  1666   00F24B  FF                 	db	255
  1667   00F24C  FF                 	db	255
  1668   00F24D  FF                 	db	255
  1669   00F24E  FF                 	db	255
  1670   00F24F  FF                 	db	255
  1671   00F250  FF                 	db	255
  1672   00F251  FF                 	db	255
  1673   00F252  FF                 	db	255
  1674   00F253  FF                 	db	255
  1675   00F254  FF                 	db	255
  1676   00F255  FF                 	db	255
  1677   00F256  FF                 	db	255
  1678   00F257  FF                 	db	255
  1679   00F258  FF                 	db	255
  1680   00F259  FF                 	db	255
  1681   00F25A  FF                 	db	255
  1682   00F25B  FF                 	db	255
  1683   00F25C  FF                 	db	255
  1684   00F25D  FF                 	db	255
  1685   00F25E  FF                 	db	255
  1686   00F25F  FF                 	db	255
  1687   00F260  FF                 	db	255
  1688   00F261  FF                 	db	255
  1689   00F262  FF                 	db	255
  1690   00F263  FF                 	db	255
  1691   00F264  FF                 	db	255
  1692   00F265  FF                 	db	255
  1693   00F266  FF                 	db	255
  1694   00F267  FF                 	db	255
  1695   00F268  FF                 	db	255
  1696   00F269  FF                 	db	255
  1697   00F26A  FF                 	db	255
  1698   00F26B  FF                 	db	255
  1699   00F26C  FF                 	db	255
  1700   00F26D  FF                 	db	255
  1701   00F26E  FF                 	db	255
  1702   00F26F  FF                 	db	255
  1703   00F270  FF                 	db	255
  1704   00F271  FF                 	db	255
  1705   00F272  FF                 	db	255
  1706   00F273  FF                 	db	255
  1707   00F274  FF                 	db	255
  1708   00F275  FF                 	db	255
  1709   00F276  FF                 	db	255
  1710   00F277  FF                 	db	255
  1711   00F278  FF                 	db	255
  1712   00F279  FF                 	db	255
  1713   00F27A  FF                 	db	255
  1714   00F27B  FF                 	db	255
  1715   00F27C  FF                 	db	255
  1716   00F27D  FF                 	db	255
  1717   00F27E  FF                 	db	255
  1718   00F27F  FF                 	db	255
  1719   00F280  FF                 	db	255
  1720   00F281  FF                 	db	255
  1721   00F282  FF                 	db	255
  1722   00F283  FF                 	db	255
  1723   00F284  FF                 	db	255
  1724   00F285  FF                 	db	255
  1725   00F286  FF                 	db	255
  1726   00F287  FF                 	db	255
  1727   00F288  FF                 	db	255
  1728   00F289  FF                 	db	255
  1729   00F28A  FF                 	db	255
  1730   00F28B  FF                 	db	255
  1731   00F28C  FF                 	db	255
  1732   00F28D  FF                 	db	255
  1733   00F28E  FF                 	db	255
  1734   00F28F  FF                 	db	255
  1735   00F290  FF                 	db	255
  1736   00F291  FF                 	db	255
  1737   00F292  FF                 	db	255
  1738   00F293  FF                 	db	255
  1739   00F294  FF                 	db	255
  1740   00F295  FF                 	db	255
  1741   00F296  FF                 	db	255
  1742   00F297  FF                 	db	255
  1743   00F298  FF                 	db	255
  1744   00F299  FF                 	db	255
  1745   00F29A  FF                 	db	255
  1746   00F29B  FF                 	db	255
  1747   00F29C  FF                 	db	255
  1748   00F29D  FF                 	db	255
  1749   00F29E  FF                 	db	255
  1750   00F29F  FF                 	db	255
  1751   00F2A0  FF                 	db	255
  1752   00F2A1  FF                 	db	255
  1753   00F2A2  FF                 	db	255
  1754   00F2A3  FF                 	db	255
  1755   00F2A4  FF                 	db	255
  1756   00F2A5  FF                 	db	255
  1757   00F2A6  FF                 	db	255
  1758   00F2A7  FF                 	db	255
  1759   00F2A8  FF                 	db	255
  1760   00F2A9  FF                 	db	255
  1761   00F2AA  FF                 	db	255
  1762   00F2AB  FF                 	db	255
  1763   00F2AC  FF                 	db	255
  1764   00F2AD  FF                 	db	255
  1765   00F2AE  FF                 	db	255
  1766   00F2AF  FF                 	db	255
  1767   00F2B0  FF                 	db	255
  1768   00F2B1  FF                 	db	255
  1769   00F2B2  FF                 	db	255
  1770   00F2B3  FF                 	db	255
  1771   00F2B4  FF                 	db	255
  1772   00F2B5  FF                 	db	255
  1773   00F2B6  FF                 	db	255
  1774   00F2B7  FF                 	db	255
  1775   00F2B8  FF                 	db	255
  1776   00F2B9  FF                 	db	255
  1777   00F2BA  FF                 	db	255
  1778   00F2BB  FF                 	db	255
  1779   00F2BC  FF                 	db	255
  1780   00F2BD  FF                 	db	255
  1781   00F2BE  FF                 	db	255
  1782   00F2BF  FF                 	db	255
  1783   00F2C0  FF                 	db	255
  1784   00F2C1  FF                 	db	255
  1785   00F2C2  FF                 	db	255
  1786   00F2C3  FF                 	db	255
  1787   00F2C4  FF                 	db	255
  1788   00F2C5  FF                 	db	255
  1789   00F2C6  FF                 	db	255
  1790   00F2C7  FF                 	db	255
  1791   00F2C8  FF                 	db	255
  1792   00F2C9  FF                 	db	255
  1793   00F2CA  FF                 	db	255
  1794   00F2CB  FF                 	db	255
  1795   00F2CC  FF                 	db	255
  1796   00F2CD  FF                 	db	255
  1797   00F2CE  FF                 	db	255
  1798   00F2CF  FF                 	db	255
  1799   00F2D0  FF                 	db	255
  1800   00F2D1  FF                 	db	255
  1801   00F2D2  FF                 	db	255
  1802   00F2D3  FF                 	db	255
  1803   00F2D4  FF                 	db	255
  1804   00F2D5  FF                 	db	255
  1805   00F2D6  FF                 	db	255
  1806   00F2D7  FF                 	db	255
  1807   00F2D8  FF                 	db	255
  1808   00F2D9  FF                 	db	255
  1809   00F2DA  FF                 	db	255
  1810   00F2DB  FF                 	db	255
  1811   00F2DC  FF                 	db	255
  1812   00F2DD  FF                 	db	255
  1813   00F2DE  FF                 	db	255
  1814   00F2DF  FF                 	db	255
  1815   00F2E0  FF                 	db	255
  1816   00F2E1  FF                 	db	255
  1817   00F2E2  FF                 	db	255
  1818   00F2E3  FF                 	db	255
  1819   00F2E4  FF                 	db	255
  1820   00F2E5  FF                 	db	255
  1821   00F2E6  FF                 	db	255
  1822   00F2E7  FF                 	db	255
  1823   00F2E8  FF                 	db	255
  1824   00F2E9  FF                 	db	255
  1825   00F2EA  FF                 	db	255
  1826   00F2EB  FF                 	db	255
  1827   00F2EC  FF                 	db	255
  1828   00F2ED  FF                 	db	255
  1829   00F2EE  FF                 	db	255
  1830   00F2EF  FF                 	db	255
  1831   00F2F0  FF                 	db	255
  1832   00F2F1  FF                 	db	255
  1833   00F2F2  FF                 	db	255
  1834   00F2F3  FF                 	db	255
  1835   00F2F4  FF                 	db	255
  1836   00F2F5  FF                 	db	255
  1837   00F2F6  FF                 	db	255
  1838   00F2F7  FF                 	db	255
  1839   00F2F8  FF                 	db	255
  1840   00F2F9  FF                 	db	255
  1841   00F2FA  FF                 	db	255
  1842   00F2FB  FF                 	db	255
  1843   00F2FC  FF                 	db	255
  1844   00F2FD  FF                 	db	255
  1845   00F2FE  FF                 	db	255
  1846   00F2FF  FF                 	db	255
  1847   00F300  FF                 	db	255
  1848   00F301  FF                 	db	255
  1849   00F302  FF                 	db	255
  1850   00F303  FF                 	db	255
  1851   00F304  FF                 	db	255
  1852   00F305  FF                 	db	255
  1853   00F306  FF                 	db	255
  1854   00F307  FF                 	db	255
  1855   00F308  FF                 	db	255
  1856   00F309  FF                 	db	255
  1857   00F30A  FF                 	db	255
  1858   00F30B  FF                 	db	255
  1859   00F30C  FF                 	db	255
  1860   00F30D  FF                 	db	255
  1861   00F30E  FF                 	db	255
  1862   00F30F  FF                 	db	255
  1863   00F310  FF                 	db	255
  1864   00F311  FF                 	db	255
  1865   00F312  FF                 	db	255
  1866   00F313  FF                 	db	255
  1867   00F314  FF                 	db	255
  1868   00F315  FF                 	db	255
  1869   00F316  FF                 	db	255
  1870   00F317  FF                 	db	255
  1871   00F318  FF                 	db	255
  1872   00F319  FF                 	db	255
  1873   00F31A  FF                 	db	255
  1874   00F31B  FF                 	db	255
  1875   00F31C  FF                 	db	255
  1876   00F31D  FF                 	db	255
  1877   00F31E  FF                 	db	255
  1878   00F31F  FF                 	db	255
  1879   00F320  FF                 	db	255
  1880   00F321  FF                 	db	255
  1881   00F322  FF                 	db	255
  1882   00F323  FF                 	db	255
  1883   00F324  FF                 	db	255
  1884   00F325  FF                 	db	255
  1885   00F326  FF                 	db	255
  1886   00F327  FF                 	db	255
  1887   00F328  FF                 	db	255
  1888   00F329  FF                 	db	255
  1889   00F32A  FF                 	db	255
  1890   00F32B  FF                 	db	255
  1891   00F32C  FF                 	db	255
  1892   00F32D  FF                 	db	255
  1893   00F32E  FF                 	db	255
  1894   00F32F  FF                 	db	255
  1895   00F330  FF                 	db	255
  1896   00F331  FF                 	db	255
  1897   00F332  FF                 	db	255
  1898   00F333  FF                 	db	255
  1899   00F334  FF                 	db	255
  1900   00F335  FF                 	db	255
  1901   00F336  FF                 	db	255
  1902   00F337  FF                 	db	255
  1903   00F338  FF                 	db	255
  1904   00F339  FF                 	db	255
  1905   00F33A  FF                 	db	255
  1906   00F33B  FF                 	db	255
  1907   00F33C  FF                 	db	255
  1908   00F33D  FF                 	db	255
  1909   00F33E  FF                 	db	255
  1910   00F33F  FF                 	db	255
  1911   00F340  FF                 	db	255
  1912   00F341  FF                 	db	255
  1913   00F342  FF                 	db	255
  1914   00F343  FF                 	db	255
  1915   00F344  FF                 	db	255
  1916   00F345  FF                 	db	255
  1917   00F346  FF                 	db	255
  1918   00F347  FF                 	db	255
  1919   00F348  FF                 	db	255
  1920   00F349  FF                 	db	255
  1921   00F34A  FF                 	db	255
  1922   00F34B  FF                 	db	255
  1923   00F34C  FF                 	db	255
  1924   00F34D  FF                 	db	255
  1925   00F34E  FF                 	db	255
  1926   00F34F  FF                 	db	255
  1927   00F350  FF                 	db	255
  1928   00F351  FF                 	db	255
  1929   00F352  FF                 	db	255
  1930   00F353  FF                 	db	255
  1931   00F354  FF                 	db	255
  1932   00F355  FF                 	db	255
  1933   00F356  FF                 	db	255
  1934   00F357  FF                 	db	255
  1935   00F358  FF                 	db	255
  1936   00F359  FF                 	db	255
  1937   00F35A  FF                 	db	255
  1938   00F35B  FF                 	db	255
  1939   00F35C  FF                 	db	255
  1940   00F35D  FF                 	db	255
  1941   00F35E  FF                 	db	255
  1942   00F35F  FF                 	db	255
  1943   00F360  FF                 	db	255
  1944   00F361  FF                 	db	255
  1945   00F362  FF                 	db	255
  1946   00F363  FF                 	db	255
  1947   00F364  FF                 	db	255
  1948   00F365  FF                 	db	255
  1949   00F366  FF                 	db	255
  1950   00F367  FF                 	db	255
  1951   00F368  FF                 	db	255
  1952   00F369  FF                 	db	255
  1953   00F36A  FF                 	db	255
  1954   00F36B  FF                 	db	255
  1955   00F36C  FF                 	db	255
  1956   00F36D  FF                 	db	255
  1957   00F36E  FF                 	db	255
  1958   00F36F  FF                 	db	255
  1959   00F370  FF                 	db	255
  1960   00F371  FF                 	db	255
  1961   00F372  FF                 	db	255
  1962   00F373  FF                 	db	255
  1963   00F374  FF                 	db	255
  1964   00F375  FF                 	db	255
  1965   00F376  FF                 	db	255
  1966   00F377  FF                 	db	255
  1967   00F378  FF                 	db	255
  1968   00F379  FF                 	db	255
  1969   00F37A  FF                 	db	255
  1970   00F37B  FF                 	db	255
  1971   00F37C  FF                 	db	255
  1972   00F37D  FF                 	db	255
  1973   00F37E  FF                 	db	255
  1974   00F37F  FF                 	db	255
  1975   00F380  FF                 	db	255
  1976   00F381  FF                 	db	255
  1977   00F382  FF                 	db	255
  1978   00F383  FF                 	db	255
  1979   00F384  FF                 	db	255
  1980   00F385  FF                 	db	255
  1981   00F386  FF                 	db	255
  1982   00F387  FF                 	db	255
  1983   00F388  FF                 	db	255
  1984   00F389  FF                 	db	255
  1985   00F38A  FF                 	db	255
  1986   00F38B  FF                 	db	255
  1987   00F38C  FF                 	db	255
  1988   00F38D  FF                 	db	255
  1989   00F38E  FF                 	db	255
  1990   00F38F  FF                 	db	255
  1991   00F390  FF                 	db	255
  1992   00F391  FF                 	db	255
  1993   00F392  FF                 	db	255
  1994   00F393  FF                 	db	255
  1995   00F394  FF                 	db	255
  1996   00F395  FF                 	db	255
  1997   00F396  FF                 	db	255
  1998   00F397  FF                 	db	255
  1999   00F398  FF                 	db	255
  2000   00F399  FF                 	db	255
  2001   00F39A  FF                 	db	255
  2002   00F39B  FF                 	db	255
  2003   00F39C  FF                 	db	255
  2004   00F39D  FF                 	db	255
  2005   00F39E  FF                 	db	255
  2006   00F39F  FF                 	db	255
  2007   00F3A0  FF                 	db	255
  2008   00F3A1  FF                 	db	255
  2009   00F3A2  FF                 	db	255
  2010   00F3A3  FF                 	db	255
  2011   00F3A4  FF                 	db	255
  2012   00F3A5  FF                 	db	255
  2013   00F3A6  FF                 	db	255
  2014   00F3A7  FF                 	db	255
  2015   00F3A8  FF                 	db	255
  2016   00F3A9  FF                 	db	255
  2017   00F3AA  FF                 	db	255
  2018   00F3AB  FF                 	db	255
  2019   00F3AC  FF                 	db	255
  2020   00F3AD  FF                 	db	255
  2021   00F3AE  FF                 	db	255
  2022   00F3AF  FF                 	db	255
  2023   00F3B0  FF                 	db	255
  2024   00F3B1  FF                 	db	255
  2025   00F3B2  FF                 	db	255
  2026   00F3B3  FF                 	db	255
  2027   00F3B4  FF                 	db	255
  2028   00F3B5  FF                 	db	255
  2029   00F3B6  FF                 	db	255
  2030   00F3B7  FF                 	db	255
  2031   00F3B8  FF                 	db	255
  2032   00F3B9  FF                 	db	255
  2033   00F3BA  FF                 	db	255
  2034   00F3BB  FF                 	db	255
  2035   00F3BC  FF                 	db	255
  2036   00F3BD  FF                 	db	255
  2037   00F3BE  FF                 	db	255
  2038   00F3BF  FF                 	db	255
  2039   00F3C0  FF                 	db	255
  2040   00F3C1  FF                 	db	255
  2041   00F3C2  FF                 	db	255
  2042   00F3C3  FF                 	db	255
  2043   00F3C4  FF                 	db	255
  2044   00F3C5  FF                 	db	255
  2045   00F3C6  FF                 	db	255
  2046   00F3C7  FF                 	db	255
  2047   00F3C8  FF                 	db	255
  2048   00F3C9  FF                 	db	255
  2049   00F3CA  FF                 	db	255
  2050   00F3CB  FF                 	db	255
  2051   00F3CC  FF                 	db	255
  2052   00F3CD  FF                 	db	255
  2053   00F3CE  FF                 	db	255
  2054   00F3CF  FF                 	db	255
  2055   00F3D0  FF                 	db	255
  2056   00F3D1  FF                 	db	255
  2057   00F3D2  FF                 	db	255
  2058   00F3D3  FF                 	db	255
  2059   00F3D4  FF                 	db	255
  2060   00F3D5  FF                 	db	255
  2061   00F3D6  FF                 	db	255
  2062   00F3D7  FF                 	db	255
  2063   00F3D8  FF                 	db	255
  2064   00F3D9  FF                 	db	255
  2065   00F3DA  FF                 	db	255
  2066   00F3DB  FF                 	db	255
  2067   00F3DC  FF                 	db	255
  2068   00F3DD  FF                 	db	255
  2069   00F3DE  FF                 	db	255
  2070   00F3DF  FF                 	db	255
  2071   00F3E0  FF                 	db	255
  2072   00F3E1  FF                 	db	255
  2073   00F3E2  FF                 	db	255
  2074   00F3E3  FF                 	db	255
  2075   00F3E4  FF                 	db	255
  2076   00F3E5  FF                 	db	255
  2077   00F3E6  FF                 	db	255
  2078   00F3E7  FF                 	db	255
  2079   00F3E8  FF                 	db	255
  2080   00F3E9  FF                 	db	255
  2081   00F3EA  FF                 	db	255
  2082   00F3EB  FF                 	db	255
  2083   00F3EC  FF                 	db	255
  2084   00F3ED  FF                 	db	255
  2085   00F3EE  FF                 	db	255
  2086   00F3EF  FF                 	db	255
  2087   00F3F0  FF                 	db	255
  2088   00F3F1  FF                 	db	255
  2089   00F3F2  FF                 	db	255
  2090   00F3F3  FF                 	db	255
  2091   00F3F4  FF                 	db	255
  2092   00F3F5  FF                 	db	255
  2093   00F3F6  FF                 	db	255
  2094   00F3F7  FF                 	db	255
  2095   00F3F8  FF                 	db	255
  2096   00F3F9  FF                 	db	255
  2097   00F3FA  FF                 	db	255
  2098   00F3FB  FF                 	db	255
  2099   00F3FC  FF                 	db	255
  2100   00F3FD  FF                 	db	255
  2101   00F3FE  FF                 	db	255
  2102   00F3FF  FF                 	db	255
  2103   00F400  FF                 	db	255
  2104   00F401  FF                 	db	255
  2105   00F402  FF                 	db	255
  2106   00F403  FF                 	db	255
  2107   00F404  FF                 	db	255
  2108   00F405  FF                 	db	255
  2109   00F406  FF                 	db	255
  2110   00F407  FF                 	db	255
  2111   00F408  FF                 	db	255
  2112   00F409  FF                 	db	255
  2113   00F40A  FF                 	db	255
  2114   00F40B  FF                 	db	255
  2115   00F40C  FF                 	db	255
  2116   00F40D  FF                 	db	255
  2117   00F40E  FF                 	db	255
  2118   00F40F  FF                 	db	255
  2119   00F410  FF                 	db	255
  2120   00F411  FF                 	db	255
  2121   00F412  FF                 	db	255
  2122   00F413  FF                 	db	255
  2123   00F414  FF                 	db	255
  2124   00F415  FF                 	db	255
  2125   00F416  FF                 	db	255
  2126   00F417  FF                 	db	255
  2127   00F418  FF                 	db	255
  2128   00F419  FF                 	db	255
  2129   00F41A  FF                 	db	255
  2130   00F41B  FF                 	db	255
  2131   00F41C  FF                 	db	255
  2132   00F41D  FF                 	db	255
  2133   00F41E  FF                 	db	255
  2134   00F41F  FF                 	db	255
  2135   00F420  FF                 	db	255
  2136   00F421  FF                 	db	255
  2137   00F422  FF                 	db	255
  2138   00F423  FF                 	db	255
  2139   00F424  FF                 	db	255
  2140   00F425  FF                 	db	255
  2141   00F426  FF                 	db	255
  2142   00F427  FF                 	db	255
  2143   00F428  FF                 	db	255
  2144   00F429  FF                 	db	255
  2145   00F42A  FF                 	db	255
  2146   00F42B  FF                 	db	255
  2147   00F42C  FF                 	db	255
  2148   00F42D  FF                 	db	255
  2149   00F42E  FF                 	db	255
  2150   00F42F  FF                 	db	255
  2151   00F430  FF                 	db	255
  2152   00F431  FF                 	db	255
  2153   00F432  FF                 	db	255
  2154   00F433  FF                 	db	255
  2155   00F434  FF                 	db	255
  2156   00F435  FF                 	db	255
  2157   00F436  FF                 	db	255
  2158   00F437  FF                 	db	255
  2159   00F438  FF                 	db	255
  2160   00F439  FF                 	db	255
  2161   00F43A  FF                 	db	255
  2162   00F43B  FF                 	db	255
  2163   00F43C  FF                 	db	255
  2164   00F43D  FF                 	db	255
  2165   00F43E  FF                 	db	255
  2166   00F43F  FF                 	db	255
  2167   00F440  FF                 	db	255
  2168   00F441  FF                 	db	255
  2169   00F442  FF                 	db	255
  2170   00F443  FF                 	db	255
  2171   00F444  FF                 	db	255
  2172   00F445  FF                 	db	255
  2173   00F446  FF                 	db	255
  2174   00F447  FF                 	db	255
  2175   00F448  FF                 	db	255
  2176   00F449  FF                 	db	255
  2177   00F44A  FF                 	db	255
  2178   00F44B  FF                 	db	255
  2179   00F44C  FF                 	db	255
  2180   00F44D  FF                 	db	255
  2181   00F44E  FF                 	db	255
  2182   00F44F  FF                 	db	255
  2183   00F450  FF                 	db	255
  2184   00F451  FF                 	db	255
  2185   00F452  FF                 	db	255
  2186   00F453  FF                 	db	255
  2187   00F454  FF                 	db	255
  2188   00F455  FF                 	db	255
  2189   00F456  FF                 	db	255
  2190   00F457  FF                 	db	255
  2191   00F458  FF                 	db	255
  2192   00F459  FF                 	db	255
  2193   00F45A  FF                 	db	255
  2194   00F45B  FF                 	db	255
  2195   00F45C  FF                 	db	255
  2196   00F45D  FF                 	db	255
  2197   00F45E  FF                 	db	255
  2198   00F45F  FF                 	db	255
  2199   00F460  FF                 	db	255
  2200   00F461  FF                 	db	255
  2201   00F462  FF                 	db	255
  2202   00F463  FF                 	db	255
  2203   00F464  FF                 	db	255
  2204   00F465  FF                 	db	255
  2205   00F466  FF                 	db	255
  2206   00F467  FF                 	db	255
  2207   00F468  FF                 	db	255
  2208   00F469  FF                 	db	255
  2209   00F46A  FF                 	db	255
  2210   00F46B  FF                 	db	255
  2211   00F46C  FF                 	db	255
  2212   00F46D  FF                 	db	255
  2213   00F46E  FF                 	db	255
  2214   00F46F  FF                 	db	255
  2215   00F470  FF                 	db	255
  2216   00F471  FF                 	db	255
  2217   00F472  FF                 	db	255
  2218   00F473  FF                 	db	255
  2219   00F474  FF                 	db	255
  2220   00F475  FF                 	db	255
  2221   00F476  FF                 	db	255
  2222   00F477  FF                 	db	255
  2223   00F478  FF                 	db	255
  2224   00F479  FF                 	db	255
  2225   00F47A  FF                 	db	255
  2226   00F47B  FF                 	db	255
  2227   00F47C  FF                 	db	255
  2228   00F47D  FF                 	db	255
  2229   00F47E  FF                 	db	255
  2230   00F47F  FF                 	db	255
  2231   00F480  FF                 	db	255
  2232   00F481  FF                 	db	255
  2233   00F482  FF                 	db	255
  2234   00F483  FF                 	db	255
  2235   00F484  FF                 	db	255
  2236   00F485  FF                 	db	255
  2237   00F486  FF                 	db	255
  2238   00F487  FF                 	db	255
  2239   00F488  FF                 	db	255
  2240   00F489  FF                 	db	255
  2241   00F48A  FF                 	db	255
  2242   00F48B  FF                 	db	255
  2243   00F48C  FF                 	db	255
  2244   00F48D  FF                 	db	255
  2245   00F48E  FF                 	db	255
  2246   00F48F  FF                 	db	255
  2247   00F490  FF                 	db	255
  2248   00F491  FF                 	db	255
  2249   00F492  FF                 	db	255
  2250   00F493  FF                 	db	255
  2251   00F494  FF                 	db	255
  2252   00F495  FF                 	db	255
  2253   00F496  FF                 	db	255
  2254   00F497  FF                 	db	255
  2255   00F498  FF                 	db	255
  2256   00F499  FF                 	db	255
  2257   00F49A  FF                 	db	255
  2258   00F49B  FF                 	db	255
  2259   00F49C  FF                 	db	255
  2260   00F49D  FF                 	db	255
  2261   00F49E  FF                 	db	255
  2262   00F49F  FF                 	db	255
  2263   00F4A0  FF                 	db	255
  2264   00F4A1  FF                 	db	255
  2265   00F4A2  FF                 	db	255
  2266   00F4A3  FF                 	db	255
  2267   00F4A4  FF                 	db	255
  2268   00F4A5  FF                 	db	255
  2269   00F4A6  FF                 	db	255
  2270   00F4A7  FF                 	db	255
  2271   00F4A8  FF                 	db	255
  2272   00F4A9  FF                 	db	255
  2273   00F4AA  FF                 	db	255
  2274   00F4AB  FF                 	db	255
  2275   00F4AC  FF                 	db	255
  2276   00F4AD  FF                 	db	255
  2277   00F4AE  FF                 	db	255
  2278   00F4AF  FF                 	db	255
  2279   00F4B0  FF                 	db	255
  2280   00F4B1  FF                 	db	255
  2281   00F4B2  FF                 	db	255
  2282   00F4B3  FF                 	db	255
  2283   00F4B4  FF                 	db	255
  2284   00F4B5  FF                 	db	255
  2285   00F4B6  FF                 	db	255
  2286   00F4B7  FF                 	db	255
  2287   00F4B8  FF                 	db	255
  2288   00F4B9  FF                 	db	255
  2289   00F4BA  FF                 	db	255
  2290   00F4BB  FF                 	db	255
  2291   00F4BC  FF                 	db	255
  2292   00F4BD  FF                 	db	255
  2293   00F4BE  FF                 	db	255
  2294   00F4BF  FF                 	db	255
  2295   00F4C0  FF                 	db	255
  2296   00F4C1  FF                 	db	255
  2297   00F4C2  FF                 	db	255
  2298   00F4C3  FF                 	db	255
  2299   00F4C4  FF                 	db	255
  2300   00F4C5  FF                 	db	255
  2301   00F4C6  FF                 	db	255
  2302   00F4C7  FF                 	db	255
  2303   00F4C8  FF                 	db	255
  2304   00F4C9  FF                 	db	255
  2305   00F4CA  FF                 	db	255
  2306   00F4CB  FF                 	db	255
  2307   00F4CC  FF                 	db	255
  2308   00F4CD  FF                 	db	255
  2309   00F4CE  FF                 	db	255
  2310   00F4CF  FF                 	db	255
  2311   00F4D0  FF                 	db	255
  2312   00F4D1  FF                 	db	255
  2313   00F4D2  FF                 	db	255
  2314   00F4D3  FF                 	db	255
  2315   00F4D4  FF                 	db	255
  2316   00F4D5  FF                 	db	255
  2317   00F4D6  FF                 	db	255
  2318   00F4D7  FF                 	db	255
  2319   00F4D8  FF                 	db	255
  2320   00F4D9  FF                 	db	255
  2321   00F4DA  FF                 	db	255
  2322   00F4DB  FF                 	db	255
  2323   00F4DC  FF                 	db	255
  2324   00F4DD  FF                 	db	255
  2325   00F4DE  FF                 	db	255
  2326   00F4DF  FF                 	db	255
  2327   00F4E0  FF                 	db	255
  2328   00F4E1  FF                 	db	255
  2329   00F4E2  FF                 	db	255
  2330   00F4E3  FF                 	db	255
  2331   00F4E4  FF                 	db	255
  2332   00F4E5  FF                 	db	255
  2333   00F4E6  FF                 	db	255
  2334   00F4E7  FF                 	db	255
  2335   00F4E8  FF                 	db	255
  2336   00F4E9  FF                 	db	255
  2337   00F4EA  FF                 	db	255
  2338   00F4EB  FF                 	db	255
  2339   00F4EC  FF                 	db	255
  2340   00F4ED  FF                 	db	255
  2341   00F4EE  FF                 	db	255
  2342   00F4EF  FF                 	db	255
  2343   00F4F0  FF                 	db	255
  2344   00F4F1  FF                 	db	255
  2345   00F4F2  FF                 	db	255
  2346   00F4F3  FF                 	db	255
  2347   00F4F4  FF                 	db	255
  2348   00F4F5  FF                 	db	255
  2349   00F4F6  FF                 	db	255
  2350   00F4F7  FF                 	db	255
  2351   00F4F8  FF                 	db	255
  2352   00F4F9  FF                 	db	255
  2353   00F4FA  FF                 	db	255
  2354   00F4FB  FF                 	db	255
  2355   00F4FC  FF                 	db	255
  2356   00F4FD  FF                 	db	255
  2357   00F4FE  FF                 	db	255
  2358   00F4FF  FF                 	db	255
  2359   00F500  FF                 	db	255
  2360   00F501  FF                 	db	255
  2361   00F502  FF                 	db	255
  2362   00F503  FF                 	db	255
  2363   00F504  FF                 	db	255
  2364   00F505  FF                 	db	255
  2365   00F506  FF                 	db	255
  2366   00F507  FF                 	db	255
  2367   00F508  FF                 	db	255
  2368   00F509  FF                 	db	255
  2369   00F50A  FF                 	db	255
  2370   00F50B  FF                 	db	255
  2371   00F50C  FF                 	db	255
  2372   00F50D  FF                 	db	255
  2373   00F50E  FF                 	db	255
  2374   00F50F  FF                 	db	255
  2375   00F510  FF                 	db	255
  2376   00F511  FF                 	db	255
  2377   00F512  FF                 	db	255
  2378   00F513  FF                 	db	255
  2379   00F514  FF                 	db	255
  2380   00F515  FF                 	db	255
  2381   00F516  FF                 	db	255
  2382   00F517  FF                 	db	255
  2383   00F518  FF                 	db	255
  2384   00F519  FF                 	db	255
  2385   00F51A  FF                 	db	255
  2386   00F51B  FF                 	db	255
  2387   00F51C  FF                 	db	255
  2388   00F51D  FF                 	db	255
  2389   00F51E  FF                 	db	255
  2390   00F51F  FF                 	db	255
  2391   00F520  FF                 	db	255
  2392   00F521  FF                 	db	255
  2393   00F522  FF                 	db	255
  2394   00F523  FF                 	db	255
  2395   00F524  FF                 	db	255
  2396   00F525  FF                 	db	255
  2397   00F526  FF                 	db	255
  2398   00F527  FF                 	db	255
  2399   00F528  FF                 	db	255
  2400   00F529  FF                 	db	255
  2401   00F52A  FF                 	db	255
  2402   00F52B  FF                 	db	255
  2403   00F52C  FF                 	db	255
  2404   00F52D  FF                 	db	255
  2405   00F52E  FF                 	db	255
  2406   00F52F  FF                 	db	255
  2407   00F530  FF                 	db	255
  2408   00F531  FF                 	db	255
  2409   00F532  FF                 	db	255
  2410   00F533  FF                 	db	255
  2411   00F534  FF                 	db	255
  2412   00F535  FF                 	db	255
  2413   00F536  FF                 	db	255
  2414   00F537  FF                 	db	255
  2415   00F538  FF                 	db	255
  2416   00F539  FF                 	db	255
  2417   00F53A  FF                 	db	255
  2418   00F53B  FF                 	db	255
  2419   00F53C  FF                 	db	255
  2420   00F53D  FF                 	db	255
  2421   00F53E  FF                 	db	255
  2422   00F53F  FF                 	db	255
  2423   00F540  FF                 	db	255
  2424   00F541  FF                 	db	255
  2425   00F542  FF                 	db	255
  2426   00F543  FF                 	db	255
  2427   00F544  FF                 	db	255
  2428   00F545  FF                 	db	255
  2429   00F546  FF                 	db	255
  2430   00F547  FF                 	db	255
  2431   00F548  FF                 	db	255
  2432   00F549  FF                 	db	255
  2433   00F54A  FF                 	db	255
  2434   00F54B  FF                 	db	255
  2435   00F54C  FF                 	db	255
  2436   00F54D  FF                 	db	255
  2437   00F54E  FF                 	db	255
  2438   00F54F  FF                 	db	255
  2439   00F550  FF                 	db	255
  2440   00F551  FF                 	db	255
  2441   00F552  FF                 	db	255
  2442   00F553  FF                 	db	255
  2443   00F554  FF                 	db	255
  2444   00F555  FF                 	db	255
  2445   00F556  FF                 	db	255
  2446   00F557  FF                 	db	255
  2447   00F558  FF                 	db	255
  2448   00F559  FF                 	db	255
  2449   00F55A  FF                 	db	255
  2450   00F55B  FF                 	db	255
  2451   00F55C  FF                 	db	255
  2452   00F55D  FF                 	db	255
  2453   00F55E  FF                 	db	255
  2454   00F55F  FF                 	db	255
  2455   00F560  FF                 	db	255
  2456   00F561  FF                 	db	255
  2457   00F562  FF                 	db	255
  2458   00F563  FF                 	db	255
  2459   00F564  FF                 	db	255
  2460   00F565  FF                 	db	255
  2461   00F566  FF                 	db	255
  2462   00F567  FF                 	db	255
  2463   00F568  FF                 	db	255
  2464   00F569  FF                 	db	255
  2465   00F56A  FF                 	db	255
  2466   00F56B  FF                 	db	255
  2467   00F56C  FF                 	db	255
  2468   00F56D  FF                 	db	255
  2469   00F56E  FF                 	db	255
  2470   00F56F  FF                 	db	255
  2471   00F570  FF                 	db	255
  2472   00F571  FF                 	db	255
  2473   00F572  FF                 	db	255
  2474   00F573  FF                 	db	255
  2475   00F574  FF                 	db	255
  2476   00F575  FF                 	db	255
  2477   00F576  FF                 	db	255
  2478   00F577  FF                 	db	255
  2479   00F578  FF                 	db	255
  2480   00F579  FF                 	db	255
  2481   00F57A  FF                 	db	255
  2482   00F57B  FF                 	db	255
  2483   00F57C  FF                 	db	255
  2484   00F57D  FF                 	db	255
  2485   00F57E  FF                 	db	255
  2486   00F57F  FF                 	db	255
  2487   00F580  FF                 	db	255
  2488   00F581  FF                 	db	255
  2489   00F582  FF                 	db	255
  2490   00F583  FF                 	db	255
  2491   00F584  FF                 	db	255
  2492   00F585  FF                 	db	255
  2493   00F586  FF                 	db	255
  2494   00F587  FF                 	db	255
  2495   00F588  FF                 	db	255
  2496   00F589  FF                 	db	255
  2497   00F58A  FF                 	db	255
  2498   00F58B  FF                 	db	255
  2499   00F58C  FF                 	db	255
  2500   00F58D  FF                 	db	255
  2501   00F58E  FF                 	db	255
  2502   00F58F  FF                 	db	255
  2503   00F590  FF                 	db	255
  2504   00F591  FF                 	db	255
  2505   00F592  FF                 	db	255
  2506   00F593  FF                 	db	255
  2507   00F594  FF                 	db	255
  2508   00F595  FF                 	db	255
  2509   00F596  FF                 	db	255
  2510   00F597  FF                 	db	255
  2511   00F598  FF                 	db	255
  2512   00F599  FF                 	db	255
  2513   00F59A  FF                 	db	255
  2514   00F59B  FF                 	db	255
  2515   00F59C  FF                 	db	255
  2516   00F59D  FF                 	db	255
  2517   00F59E  FF                 	db	255
  2518   00F59F  FF                 	db	255
  2519   00F5A0  FF                 	db	255
  2520   00F5A1  FF                 	db	255
  2521   00F5A2  FF                 	db	255
  2522   00F5A3  FF                 	db	255
  2523   00F5A4  FF                 	db	255
  2524   00F5A5  FF                 	db	255
  2525   00F5A6  FF                 	db	255
  2526   00F5A7  FF                 	db	255
  2527   00F5A8  FF                 	db	255
  2528   00F5A9  FF                 	db	255
  2529   00F5AA  FF                 	db	255
  2530   00F5AB  FF                 	db	255
  2531   00F5AC  FF                 	db	255
  2532   00F5AD  FF                 	db	255
  2533   00F5AE  FF                 	db	255
  2534   00F5AF  FF                 	db	255
  2535   00F5B0  FF                 	db	255
  2536   00F5B1  FF                 	db	255
  2537   00F5B2  FF                 	db	255
  2538   00F5B3  FF                 	db	255
  2539   00F5B4  FF                 	db	255
  2540   00F5B5  FF                 	db	255
  2541   00F5B6  FF                 	db	255
  2542   00F5B7  FF                 	db	255
  2543   00F5B8  FF                 	db	255
  2544   00F5B9  FF                 	db	255
  2545   00F5BA  FF                 	db	255
  2546   00F5BB  FF                 	db	255
  2547   00F5BC  FF                 	db	255
  2548   00F5BD  FF                 	db	255
  2549   00F5BE  FF                 	db	255
  2550   00F5BF  FF                 	db	255
  2551   00F5C0  FF                 	db	255
  2552   00F5C1  FF                 	db	255
  2553   00F5C2  FF                 	db	255
  2554   00F5C3  FF                 	db	255
  2555   00F5C4  FF                 	db	255
  2556   00F5C5  FF                 	db	255
  2557   00F5C6  FF                 	db	255
  2558   00F5C7  FF                 	db	255
  2559   00F5C8  FF                 	db	255
  2560   00F5C9  FF                 	db	255
  2561   00F5CA  FF                 	db	255
  2562   00F5CB  FF                 	db	255
  2563   00F5CC  FF                 	db	255
  2564   00F5CD  FF                 	db	255
  2565   00F5CE  FF                 	db	255
  2566   00F5CF  FF                 	db	255
  2567   00F5D0  FF                 	db	255
  2568   00F5D1  FF                 	db	255
  2569   00F5D2  FF                 	db	255
  2570   00F5D3  FF                 	db	255
  2571   00F5D4  FF                 	db	255
  2572   00F5D5  FF                 	db	255
  2573   00F5D6  FF                 	db	255
  2574   00F5D7  FF                 	db	255
  2575   00F5D8  FF                 	db	255
  2576   00F5D9  FF                 	db	255
  2577   00F5DA  FF                 	db	255
  2578   00F5DB  FF                 	db	255
  2579   00F5DC  FF                 	db	255
  2580   00F5DD  FF                 	db	255
  2581   00F5DE  FF                 	db	255
  2582   00F5DF  FF                 	db	255
  2583   00F5E0  FF                 	db	255
  2584   00F5E1  FF                 	db	255
  2585   00F5E2  FF                 	db	255
  2586   00F5E3  FF                 	db	255
  2587   00F5E4  FF                 	db	255
  2588   00F5E5  FF                 	db	255
  2589   00F5E6  FF                 	db	255
  2590   00F5E7  FF                 	db	255
  2591   00F5E8  FF                 	db	255
  2592   00F5E9  FF                 	db	255
  2593   00F5EA  FF                 	db	255
  2594   00F5EB  FF                 	db	255
  2595   00F5EC  FF                 	db	255
  2596   00F5ED  FF                 	db	255
  2597   00F5EE  FF                 	db	255
  2598   00F5EF  FF                 	db	255
  2599   00F5F0  FF                 	db	255
  2600   00F5F1  FF                 	db	255
  2601   00F5F2  FF                 	db	255
  2602   00F5F3  FF                 	db	255
  2603   00F5F4  FF                 	db	255
  2604   00F5F5  FF                 	db	255
  2605   00F5F6  FF                 	db	255
  2606   00F5F7  FF                 	db	255
  2607   00F5F8  FF                 	db	255
  2608   00F5F9  FF                 	db	255
  2609   00F5FA  FF                 	db	255
  2610   00F5FB  FF                 	db	255
  2611   00F5FC  FF                 	db	255
  2612   00F5FD  FF                 	db	255
  2613   00F5FE  FF                 	db	255
  2614   00F5FF  FF                 	db	255
  2615   00F600  FF                 	db	255
  2616   00F601  FF                 	db	255
  2617   00F602  FF                 	db	255
  2618   00F603  FF                 	db	255
  2619   00F604  FF                 	db	255
  2620   00F605  FF                 	db	255
  2621   00F606  FF                 	db	255
  2622   00F607  FF                 	db	255
  2623   00F608  FF                 	db	255
  2624   00F609  FF                 	db	255
  2625   00F60A  FF                 	db	255
  2626   00F60B  FF                 	db	255
  2627   00F60C  FF                 	db	255
  2628   00F60D  FF                 	db	255
  2629   00F60E  FF                 	db	255
  2630   00F60F  FF                 	db	255
  2631   00F610  FF                 	db	255
  2632   00F611  FF                 	db	255
  2633   00F612  FF                 	db	255
  2634   00F613  FF                 	db	255
  2635   00F614  FF                 	db	255
  2636   00F615  FF                 	db	255
  2637   00F616  FF                 	db	255
  2638   00F617  FF                 	db	255
  2639   00F618  FF                 	db	255
  2640   00F619  FF                 	db	255
  2641   00F61A  FF                 	db	255
  2642   00F61B  FF                 	db	255
  2643   00F61C  FF                 	db	255
  2644   00F61D  FF                 	db	255
  2645   00F61E  FF                 	db	255
  2646   00F61F  FF                 	db	255
  2647   00F620  FF                 	db	255
  2648   00F621  FF                 	db	255
  2649   00F622  FF                 	db	255
  2650   00F623  FF                 	db	255
  2651   00F624  FF                 	db	255
  2652   00F625  FF                 	db	255
  2653   00F626  FF                 	db	255
  2654   00F627  FF                 	db	255
  2655   00F628  FF                 	db	255
  2656   00F629  FF                 	db	255
  2657   00F62A  FF                 	db	255
  2658   00F62B  FF                 	db	255
  2659   00F62C  FF                 	db	255
  2660   00F62D  FF                 	db	255
  2661   00F62E  FF                 	db	255
  2662   00F62F  FF                 	db	255
  2663   00F630  FF                 	db	255
  2664   00F631  FF                 	db	255
  2665   00F632  FF                 	db	255
  2666   00F633  FF                 	db	255
  2667   00F634  FF                 	db	255
  2668   00F635  FF                 	db	255
  2669   00F636  FF                 	db	255
  2670   00F637  FF                 	db	255
  2671   00F638  FF                 	db	255
  2672   00F639  FF                 	db	255
  2673   00F63A  FF                 	db	255
  2674   00F63B  FF                 	db	255
  2675   00F63C  FF                 	db	255
  2676   00F63D  FF                 	db	255
  2677   00F63E  FF                 	db	255
  2678   00F63F  FF                 	db	255
  2679   00F640  FF                 	db	255
  2680   00F641  FF                 	db	255
  2681   00F642  FF                 	db	255
  2682   00F643  FF                 	db	255
  2683   00F644  FF                 	db	255
  2684   00F645  FF                 	db	255
  2685   00F646  FF                 	db	255
  2686   00F647  FF                 	db	255
  2687   00F648  FF                 	db	255
  2688   00F649  FF                 	db	255
  2689   00F64A  FF                 	db	255
  2690   00F64B  FF                 	db	255
  2691   00F64C  FF                 	db	255
  2692   00F64D  FF                 	db	255
  2693   00F64E  FF                 	db	255
  2694   00F64F  FF                 	db	255
  2695   00F650  FF                 	db	255
  2696   00F651  FF                 	db	255
  2697   00F652  FF                 	db	255
  2698   00F653  FF                 	db	255
  2699   00F654  FF                 	db	255
  2700   00F655  FF                 	db	255
  2701   00F656  FF                 	db	255
  2702   00F657  FF                 	db	255
  2703   00F658  FF                 	db	255
  2704   00F659  FF                 	db	255
  2705   00F65A  FF                 	db	255
  2706   00F65B  FF                 	db	255
  2707   00F65C  FF                 	db	255
  2708   00F65D  FF                 	db	255
  2709   00F65E  FF                 	db	255
  2710   00F65F  FF                 	db	255
  2711   00F660  FF                 	db	255
  2712   00F661  FF                 	db	255
  2713   00F662  FF                 	db	255
  2714   00F663  FF                 	db	255
  2715   00F664  FF                 	db	255
  2716   00F665  FF                 	db	255
  2717   00F666  FF                 	db	255
  2718   00F667  FF                 	db	255
  2719   00F668  FF                 	db	255
  2720   00F669  FF                 	db	255
  2721   00F66A  FF                 	db	255
  2722   00F66B  FF                 	db	255
  2723   00F66C  FF                 	db	255
  2724   00F66D  FF                 	db	255
  2725   00F66E  FF                 	db	255
  2726   00F66F  FF                 	db	255
  2727   00F670  FF                 	db	255
  2728   00F671  FF                 	db	255
  2729   00F672  FF                 	db	255
  2730   00F673  FF                 	db	255
  2731   00F674  FF                 	db	255
  2732   00F675  FF                 	db	255
  2733   00F676  FF                 	db	255
  2734   00F677  FF                 	db	255
  2735   00F678  FF                 	db	255
  2736   00F679  FF                 	db	255
  2737   00F67A  FF                 	db	255
  2738   00F67B  FF                 	db	255
  2739   00F67C  FF                 	db	255
  2740   00F67D  FF                 	db	255
  2741   00F67E  FF                 	db	255
  2742   00F67F  FF                 	db	255
  2743   00F680  FF                 	db	255
  2744   00F681  FF                 	db	255
  2745   00F682  FF                 	db	255
  2746   00F683  FF                 	db	255
  2747   00F684  FF                 	db	255
  2748   00F685  FF                 	db	255
  2749   00F686  FF                 	db	255
  2750   00F687  FF                 	db	255
  2751   00F688  FF                 	db	255
  2752   00F689  FF                 	db	255
  2753   00F68A  FF                 	db	255
  2754   00F68B  FF                 	db	255
  2755   00F68C  FF                 	db	255
  2756   00F68D  FF                 	db	255
  2757   00F68E  FF                 	db	255
  2758   00F68F  FF                 	db	255
  2759   00F690  FF                 	db	255
  2760   00F691  FF                 	db	255
  2761   00F692  FF                 	db	255
  2762   00F693  FF                 	db	255
  2763   00F694  FF                 	db	255
  2764   00F695  FF                 	db	255
  2765   00F696  FF                 	db	255
  2766   00F697  FF                 	db	255
  2767   00F698  FF                 	db	255
  2768   00F699  FF                 	db	255
  2769   00F69A  FF                 	db	255
  2770   00F69B  FF                 	db	255
  2771   00F69C  FF                 	db	255
  2772   00F69D  FF                 	db	255
  2773   00F69E  FF                 	db	255
  2774   00F69F  FF                 	db	255
  2775   00F6A0  FF                 	db	255
  2776   00F6A1  FF                 	db	255
  2777   00F6A2  FF                 	db	255
  2778   00F6A3  FF                 	db	255
  2779   00F6A4  FF                 	db	255
  2780   00F6A5  FF                 	db	255
  2781   00F6A6  FF                 	db	255
  2782   00F6A7  FF                 	db	255
  2783   00F6A8  FF                 	db	255
  2784   00F6A9  FF                 	db	255
  2785   00F6AA  FF                 	db	255
  2786   00F6AB  FF                 	db	255
  2787   00F6AC  FF                 	db	255
  2788   00F6AD  FF                 	db	255
  2789   00F6AE  FF                 	db	255
  2790   00F6AF  FF                 	db	255
  2791   00F6B0  FF                 	db	255
  2792   00F6B1  FF                 	db	255
  2793   00F6B2  FF                 	db	255
  2794   00F6B3  FF                 	db	255
  2795   00F6B4  FF                 	db	255
  2796   00F6B5  FF                 	db	255
  2797   00F6B6  FF                 	db	255
  2798   00F6B7  FF                 	db	255
  2799   00F6B8  FF                 	db	255
  2800   00F6B9  FF                 	db	255
  2801   00F6BA  FF                 	db	255
  2802   00F6BB  FF                 	db	255
  2803   00F6BC  FF                 	db	255
  2804   00F6BD  FF                 	db	255
  2805   00F6BE  FF                 	db	255
  2806   00F6BF  FF                 	db	255
  2807   00F6C0  FF                 	db	255
  2808   00F6C1  FF                 	db	255
  2809   00F6C2  FF                 	db	255
  2810   00F6C3  FF                 	db	255
  2811   00F6C4  FF                 	db	255
  2812   00F6C5  FF                 	db	255
  2813   00F6C6  FF                 	db	255
  2814   00F6C7  FF                 	db	255
  2815   00F6C8  FF                 	db	255
  2816   00F6C9  FF                 	db	255
  2817   00F6CA  FF                 	db	255
  2818   00F6CB  FF                 	db	255
  2819   00F6CC  FF                 	db	255
  2820   00F6CD  FF                 	db	255
  2821   00F6CE  FF                 	db	255
  2822   00F6CF  FF                 	db	255
  2823   00F6D0  FF                 	db	255
  2824   00F6D1  FF                 	db	255
  2825   00F6D2  FF                 	db	255
  2826   00F6D3  FF                 	db	255
  2827   00F6D4  FF                 	db	255
  2828   00F6D5  FF                 	db	255
  2829   00F6D6  FF                 	db	255
  2830   00F6D7  FF                 	db	255
  2831   00F6D8  FF                 	db	255
  2832   00F6D9  FF                 	db	255
  2833   00F6DA  FF                 	db	255
  2834   00F6DB  FF                 	db	255
  2835   00F6DC  FF                 	db	255
  2836   00F6DD  FF                 	db	255
  2837   00F6DE  FF                 	db	255
  2838   00F6DF  FF                 	db	255
  2839   00F6E0  FF                 	db	255
  2840   00F6E1  FF                 	db	255
  2841   00F6E2  FF                 	db	255
  2842   00F6E3  FF                 	db	255
  2843   00F6E4  FF                 	db	255
  2844   00F6E5  FF                 	db	255
  2845   00F6E6  FF                 	db	255
  2846   00F6E7  FF                 	db	255
  2847   00F6E8  FF                 	db	255
  2848   00F6E9  FF                 	db	255
  2849   00F6EA  FF                 	db	255
  2850   00F6EB  FF                 	db	255
  2851   00F6EC  FF                 	db	255
  2852   00F6ED  FF                 	db	255
  2853   00F6EE  FF                 	db	255
  2854   00F6EF  FF                 	db	255
  2855   00F6F0  FF                 	db	255
  2856   00F6F1  FF                 	db	255
  2857   00F6F2  FF                 	db	255
  2858   00F6F3  FF                 	db	255
  2859   00F6F4  FF                 	db	255
  2860   00F6F5  FF                 	db	255
  2861   00F6F6  FF                 	db	255
  2862   00F6F7  FF                 	db	255
  2863   00F6F8  FF                 	db	255
  2864   00F6F9  FF                 	db	255
  2865   00F6FA  FF                 	db	255
  2866   00F6FB  FF                 	db	255
  2867   00F6FC  FF                 	db	255
  2868   00F6FD  FF                 	db	255
  2869   00F6FE  FF                 	db	255
  2870   00F6FF  FF                 	db	255
  2871   00F700  FF                 	db	255
  2872   00F701  FF                 	db	255
  2873   00F702  FF                 	db	255
  2874   00F703  FF                 	db	255
  2875   00F704  FF                 	db	255
  2876   00F705  FF                 	db	255
  2877   00F706  FF                 	db	255
  2878   00F707  FF                 	db	255
  2879   00F708  FF                 	db	255
  2880   00F709  FF                 	db	255
  2881   00F70A  FF                 	db	255
  2882   00F70B  FF                 	db	255
  2883   00F70C  FF                 	db	255
  2884   00F70D  FF                 	db	255
  2885   00F70E  FF                 	db	255
  2886   00F70F  FF                 	db	255
  2887   00F710  FF                 	db	255
  2888   00F711  FF                 	db	255
  2889   00F712  FF                 	db	255
  2890   00F713  FF                 	db	255
  2891   00F714  FF                 	db	255
  2892   00F715  FF                 	db	255
  2893   00F716  FF                 	db	255
  2894   00F717  FF                 	db	255
  2895   00F718  FF                 	db	255
  2896   00F719  FF                 	db	255
  2897   00F71A  FF                 	db	255
  2898   00F71B  FF                 	db	255
  2899   00F71C  FF                 	db	255
  2900   00F71D  FF                 	db	255
  2901   00F71E  FF                 	db	255
  2902   00F71F  FF                 	db	255
  2903   00F720  FF                 	db	255
  2904   00F721  FF                 	db	255
  2905   00F722  FF                 	db	255
  2906   00F723  FF                 	db	255
  2907   00F724  FF                 	db	255
  2908   00F725  FF                 	db	255
  2909   00F726  FF                 	db	255
  2910   00F727  FF                 	db	255
  2911   00F728  FF                 	db	255
  2912   00F729  FF                 	db	255
  2913   00F72A  FF                 	db	255
  2914   00F72B  FF                 	db	255
  2915   00F72C  FF                 	db	255
  2916   00F72D  FF                 	db	255
  2917   00F72E  FF                 	db	255
  2918   00F72F  FF                 	db	255
  2919   00F730  FF                 	db	255
  2920   00F731  FF                 	db	255
  2921   00F732  FF                 	db	255
  2922   00F733  FF                 	db	255
  2923   00F734  FF                 	db	255
  2924   00F735  FF                 	db	255
  2925   00F736  FF                 	db	255
  2926   00F737  FF                 	db	255
  2927   00F738  FF                 	db	255
  2928   00F739  FF                 	db	255
  2929   00F73A  FF                 	db	255
  2930   00F73B  FF                 	db	255
  2931   00F73C  FF                 	db	255
  2932   00F73D  FF                 	db	255
  2933   00F73E  FF                 	db	255
  2934   00F73F  FF                 	db	255
  2935   00F740  FF                 	db	255
  2936   00F741  FF                 	db	255
  2937   00F742  FF                 	db	255
  2938   00F743  FF                 	db	255
  2939   00F744  FF                 	db	255
  2940   00F745  FF                 	db	255
  2941   00F746  FF                 	db	255
  2942   00F747  FF                 	db	255
  2943   00F748  FF                 	db	255
  2944   00F749  FF                 	db	255
  2945   00F74A  FF                 	db	255
  2946   00F74B  FF                 	db	255
  2947   00F74C  FF                 	db	255
  2948   00F74D  FF                 	db	255
  2949   00F74E  FF                 	db	255
  2950   00F74F  FF                 	db	255
  2951   00F750  FF                 	db	255
  2952   00F751  FF                 	db	255
  2953   00F752  FF                 	db	255
  2954   00F753  FF                 	db	255
  2955   00F754  FF                 	db	255
  2956   00F755  FF                 	db	255
  2957   00F756  FF                 	db	255
  2958   00F757  FF                 	db	255
  2959   00F758  FF                 	db	255
  2960   00F759  FF                 	db	255
  2961   00F75A  FF                 	db	255
  2962   00F75B  FF                 	db	255
  2963   00F75C  FF                 	db	255
  2964   00F75D  FF                 	db	255
  2965   00F75E  FF                 	db	255
  2966   00F75F  FF                 	db	255
  2967   00F760  FF                 	db	255
  2968   00F761  FF                 	db	255
  2969   00F762  FF                 	db	255
  2970   00F763  FF                 	db	255
  2971   00F764  FF                 	db	255
  2972   00F765  FF                 	db	255
  2973   00F766  FF                 	db	255
  2974   00F767  FF                 	db	255
  2975   00F768  FF                 	db	255
  2976   00F769  FF                 	db	255
  2977   00F76A  FF                 	db	255
  2978   00F76B  FF                 	db	255
  2979   00F76C  FF                 	db	255
  2980   00F76D  FF                 	db	255
  2981   00F76E  FF                 	db	255
  2982   00F76F  FF                 	db	255
  2983   00F770  FF                 	db	255
  2984   00F771  FF                 	db	255
  2985   00F772  FF                 	db	255
  2986   00F773  FF                 	db	255
  2987   00F774  FF                 	db	255
  2988   00F775  FF                 	db	255
  2989   00F776  FF                 	db	255
  2990   00F777  FF                 	db	255
  2991   00F778  FF                 	db	255
  2992   00F779  FF                 	db	255
  2993   00F77A  FF                 	db	255
  2994   00F77B  FF                 	db	255
  2995   00F77C  FF                 	db	255
  2996   00F77D  FF                 	db	255
  2997   00F77E  FF                 	db	255
  2998   00F77F  FF                 	db	255
  2999   00F780  FF                 	db	255
  3000   00F781  FF                 	db	255
  3001   00F782  FF                 	db	255
  3002   00F783  FF                 	db	255
  3003   00F784  FF                 	db	255
  3004   00F785  FF                 	db	255
  3005   00F786  FF                 	db	255
  3006   00F787  FF                 	db	255
  3007   00F788  FF                 	db	255
  3008   00F789  FF                 	db	255
  3009   00F78A  FF                 	db	255
  3010   00F78B  FF                 	db	255
  3011   00F78C  FF                 	db	255
  3012   00F78D  FF                 	db	255
  3013   00F78E  FF                 	db	255
  3014   00F78F  FF                 	db	255
  3015   00F790  FF                 	db	255
  3016   00F791  FF                 	db	255
  3017   00F792  FF                 	db	255
  3018   00F793  FF                 	db	255
  3019   00F794  FF                 	db	255
  3020   00F795  FF                 	db	255
  3021   00F796  FF                 	db	255
  3022   00F797  FF                 	db	255
  3023   00F798  FF                 	db	255
  3024   00F799  FF                 	db	255
  3025   00F79A  FF                 	db	255
  3026   00F79B  FF                 	db	255
  3027   00F79C  FF                 	db	255
  3028   00F79D  FF                 	db	255
  3029   00F79E  FF                 	db	255
  3030   00F79F  FF                 	db	255
  3031   00F7A0  FF                 	db	255
  3032   00F7A1  FF                 	db	255
  3033   00F7A2  FF                 	db	255
  3034   00F7A3  FF                 	db	255
  3035   00F7A4  FF                 	db	255
  3036   00F7A5  FF                 	db	255
  3037   00F7A6  FF                 	db	255
  3038   00F7A7  FF                 	db	255
  3039   00F7A8  FF                 	db	255
  3040   00F7A9  FF                 	db	255
  3041   00F7AA  FF                 	db	255
  3042   00F7AB  FF                 	db	255
  3043   00F7AC  FF                 	db	255
  3044   00F7AD  FF                 	db	255
  3045   00F7AE  FF                 	db	255
  3046   00F7AF  FF                 	db	255
  3047   00F7B0  FF                 	db	255
  3048   00F7B1  FF                 	db	255
  3049   00F7B2  FF                 	db	255
  3050   00F7B3  FF                 	db	255
  3051   00F7B4  FF                 	db	255
  3052   00F7B5  FF                 	db	255
  3053   00F7B6  FF                 	db	255
  3054   00F7B7  FF                 	db	255
  3055   00F7B8  FF                 	db	255
  3056   00F7B9  FF                 	db	255
  3057   00F7BA  FF                 	db	255
  3058   00F7BB  FF                 	db	255
  3059   00F7BC  FF                 	db	255
  3060   00F7BD  FF                 	db	255
  3061   00F7BE  FF                 	db	255
  3062   00F7BF  FF                 	db	255
  3063   00F7C0  FF                 	db	255
  3064   00F7C1  FF                 	db	255
  3065   00F7C2  FF                 	db	255
  3066   00F7C3  FF                 	db	255
  3067   00F7C4  FF                 	db	255
  3068   00F7C5  FF                 	db	255
  3069   00F7C6  FF                 	db	255
  3070   00F7C7  FF                 	db	255
  3071   00F7C8  FF                 	db	255
  3072   00F7C9  FF                 	db	255
  3073   00F7CA  FF                 	db	255
  3074   00F7CB  FF                 	db	255
  3075   00F7CC  FF                 	db	255
  3076   00F7CD  FF                 	db	255
  3077   00F7CE  FF                 	db	255
  3078   00F7CF  FF                 	db	255
  3079   00F7D0  FF                 	db	255
  3080   00F7D1  FF                 	db	255
  3081   00F7D2  FF                 	db	255
  3082   00F7D3  FF                 	db	255
  3083   00F7D4  FF                 	db	255
  3084   00F7D5  FF                 	db	255
  3085   00F7D6  FF                 	db	255
  3086   00F7D7  FF                 	db	255
  3087   00F7D8  FF                 	db	255
  3088   00F7D9  FF                 	db	255
  3089   00F7DA  FF                 	db	255
  3090   00F7DB  FF                 	db	255
  3091   00F7DC  FF                 	db	255
  3092   00F7DD  FF                 	db	255
  3093   00F7DE  FF                 	db	255
  3094   00F7DF  FF                 	db	255
  3095   00F7E0  FF                 	db	255
  3096   00F7E1  FF                 	db	255
  3097   00F7E2  FF                 	db	255
  3098   00F7E3  FF                 	db	255
  3099   00F7E4  FF                 	db	255
  3100   00F7E5  FF                 	db	255
  3101   00F7E6  FF                 	db	255
  3102   00F7E7  FF                 	db	255
  3103   00F7E8  FF                 	db	255
  3104   00F7E9  FF                 	db	255
  3105   00F7EA  FF                 	db	255
  3106   00F7EB  FF                 	db	255
  3107   00F7EC  FF                 	db	255
  3108   00F7ED  FF                 	db	255
  3109   00F7EE  FF                 	db	255
  3110   00F7EF  FF                 	db	255
  3111   00F7F0  FF                 	db	255
  3112   00F7F1  FF                 	db	255
  3113   00F7F2  FF                 	db	255
  3114   00F7F3  FF                 	db	255
  3115   00F7F4  FF                 	db	255
  3116   00F7F5  FF                 	db	255
  3117   00F7F6  FF                 	db	255
  3118   00F7F7  FF                 	db	255
  3119   00F7F8  FF                 	db	255
  3120   00F7F9  FF                 	db	255
  3121   00F7FA  FF                 	db	255
  3122   00F7FB  FF                 	db	255
  3123   00F7FC  FF                 	db	255
  3124   00F7FD  FF                 	db	255
  3125   00F7FE  FF                 	db	255
  3126   00F7FF  FF                 	db	255
  3127   00F800  FF                 	db	255
  3128   00F801  FF                 	db	255
  3129   00F802  FF                 	db	255
  3130   00F803  FF                 	db	255
  3131   00F804  FF                 	db	255
  3132   00F805  FF                 	db	255
  3133   00F806  FF                 	db	255
  3134   00F807  FF                 	db	255
  3135   00F808  FF                 	db	255
  3136   00F809  FF                 	db	255
  3137   00F80A  FF                 	db	255
  3138   00F80B  FF                 	db	255
  3139   00F80C  FF                 	db	255
  3140   00F80D  FF                 	db	255
  3141   00F80E  FF                 	db	255
  3142   00F80F  FF                 	db	255
  3143   00F810  FF                 	db	255
  3144   00F811  FF                 	db	255
  3145   00F812  FF                 	db	255
  3146   00F813  FF                 	db	255
  3147   00F814  FF                 	db	255
  3148   00F815  FF                 	db	255
  3149   00F816  FF                 	db	255
  3150   00F817  FF                 	db	255
  3151   00F818  FF                 	db	255
  3152   00F819  FF                 	db	255
  3153   00F81A  FF                 	db	255
  3154   00F81B  FF                 	db	255
  3155   00F81C  FF                 	db	255
  3156   00F81D  FF                 	db	255
  3157   00F81E  FF                 	db	255
  3158   00F81F  FF                 	db	255
  3159   00F820  FF                 	db	255
  3160   00F821  FF                 	db	255
  3161   00F822  FF                 	db	255
  3162   00F823  FF                 	db	255
  3163   00F824  FF                 	db	255
  3164   00F825  FF                 	db	255
  3165   00F826  FF                 	db	255
  3166   00F827  FF                 	db	255
  3167   00F828  FF                 	db	255
  3168   00F829  FF                 	db	255
  3169   00F82A  FF                 	db	255
  3170   00F82B  FF                 	db	255
  3171   00F82C  FF                 	db	255
  3172   00F82D  FF                 	db	255
  3173   00F82E  FF                 	db	255
  3174   00F82F  FF                 	db	255
  3175   00F830  FF                 	db	255
  3176   00F831  FF                 	db	255
  3177   00F832  FF                 	db	255
  3178   00F833  FF                 	db	255
  3179   00F834  FF                 	db	255
  3180   00F835  FF                 	db	255
  3181   00F836  FF                 	db	255
  3182   00F837  FF                 	db	255
  3183   00F838  FF                 	db	255
  3184   00F839  FF                 	db	255
  3185   00F83A  FF                 	db	255
  3186   00F83B  FF                 	db	255
  3187   00F83C  FF                 	db	255
  3188   00F83D  FF                 	db	255
  3189   00F83E  FF                 	db	255
  3190   00F83F  FF                 	db	255
  3191   00F840  FF                 	db	255
  3192   00F841  FF                 	db	255
  3193   00F842  FF                 	db	255
  3194   00F843  FF                 	db	255
  3195   00F844  FF                 	db	255
  3196   00F845  FF                 	db	255
  3197   00F846  FF                 	db	255
  3198   00F847  FF                 	db	255
  3199   00F848  FF                 	db	255
  3200   00F849  FF                 	db	255
  3201   00F84A  FF                 	db	255
  3202   00F84B  FF                 	db	255
  3203   00F84C  FF                 	db	255
  3204   00F84D  FF                 	db	255
  3205   00F84E  FF                 	db	255
  3206   00F84F  FF                 	db	255
  3207   00F850  FF                 	db	255
  3208   00F851  FF                 	db	255
  3209   00F852  FF                 	db	255
  3210   00F853  FF                 	db	255
  3211   00F854  FF                 	db	255
  3212   00F855  FF                 	db	255
  3213   00F856  FF                 	db	255
  3214   00F857  FF                 	db	255
  3215   00F858  FF                 	db	255
  3216   00F859  FF                 	db	255
  3217   00F85A  FF                 	db	255
  3218   00F85B  FF                 	db	255
  3219   00F85C  FF                 	db	255
  3220   00F85D  FF                 	db	255
  3221   00F85E  FF                 	db	255
  3222   00F85F  FF                 	db	255
  3223   00F860  FF                 	db	255
  3224   00F861  FF                 	db	255
  3225   00F862  FF                 	db	255
  3226   00F863  FF                 	db	255
  3227   00F864  FF                 	db	255
  3228   00F865  FF                 	db	255
  3229   00F866  FF                 	db	255
  3230   00F867  FF                 	db	255
  3231   00F868  FF                 	db	255
  3232   00F869  FF                 	db	255
  3233   00F86A  FF                 	db	255
  3234   00F86B  FF                 	db	255
  3235   00F86C  FF                 	db	255
  3236   00F86D  FF                 	db	255
  3237   00F86E  FF                 	db	255
  3238   00F86F  FF                 	db	255
  3239   00F870  FF                 	db	255
  3240   00F871  FF                 	db	255
  3241   00F872  FF                 	db	255
  3242   00F873  FF                 	db	255
  3243   00F874  FF                 	db	255
  3244   00F875  FF                 	db	255
  3245   00F876  FF                 	db	255
  3246   00F877  FF                 	db	255
  3247   00F878  FF                 	db	255
  3248   00F879  FF                 	db	255
  3249   00F87A  FF                 	db	255
  3250   00F87B  FF                 	db	255
  3251   00F87C  FF                 	db	255
  3252   00F87D  FF                 	db	255
  3253   00F87E  FF                 	db	255
  3254   00F87F  FF                 	db	255
  3255   00F880  FF                 	db	255
  3256   00F881  FF                 	db	255
  3257   00F882  FF                 	db	255
  3258   00F883  FF                 	db	255
  3259   00F884  FF                 	db	255
  3260   00F885  FF                 	db	255
  3261   00F886  FF                 	db	255
  3262   00F887  FF                 	db	255
  3263   00F888  FF                 	db	255
  3264   00F889  FF                 	db	255
  3265   00F88A  FF                 	db	255
  3266   00F88B  FF                 	db	255
  3267   00F88C  FF                 	db	255
  3268   00F88D  FF                 	db	255
  3269   00F88E  FF                 	db	255
  3270   00F88F  FF                 	db	255
  3271   00F890  FF                 	db	255
  3272   00F891  FF                 	db	255
  3273   00F892  FF                 	db	255
  3274   00F893  FF                 	db	255
  3275   00F894  FF                 	db	255
  3276   00F895  FF                 	db	255
  3277   00F896  FF                 	db	255
  3278   00F897  FF                 	db	255
  3279   00F898  FF                 	db	255
  3280   00F899  FF                 	db	255
  3281   00F89A  FF                 	db	255
  3282   00F89B  FF                 	db	255
  3283   00F89C  FF                 	db	255
  3284   00F89D  FF                 	db	255
  3285   00F89E  FF                 	db	255
  3286   00F89F  FF                 	db	255
  3287   00F8A0  FF                 	db	255
  3288   00F8A1  FF                 	db	255
  3289   00F8A2  FF                 	db	255
  3290   00F8A3  FF                 	db	255
  3291   00F8A4  FF                 	db	255
  3292   00F8A5  FF                 	db	255
  3293   00F8A6  FF                 	db	255
  3294   00F8A7  FF                 	db	255
  3295   00F8A8  FF                 	db	255
  3296   00F8A9  FF                 	db	255
  3297   00F8AA  FF                 	db	255
  3298   00F8AB  FF                 	db	255
  3299   00F8AC  FF                 	db	255
  3300   00F8AD  FF                 	db	255
  3301   00F8AE  FF                 	db	255
  3302   00F8AF  FF                 	db	255
  3303   00F8B0  FF                 	db	255
  3304   00F8B1  FF                 	db	255
  3305   00F8B2  FF                 	db	255
  3306   00F8B3  FF                 	db	255
  3307   00F8B4  FF                 	db	255
  3308   00F8B5  FF                 	db	255
  3309   00F8B6  FF                 	db	255
  3310   00F8B7  FF                 	db	255
  3311   00F8B8  FF                 	db	255
  3312   00F8B9  FF                 	db	255
  3313   00F8BA  FF                 	db	255
  3314   00F8BB  FF                 	db	255
  3315   00F8BC  FF                 	db	255
  3316   00F8BD  FF                 	db	255
  3317   00F8BE  FF                 	db	255
  3318   00F8BF  FF                 	db	255
  3319   00F8C0  FF                 	db	255
  3320   00F8C1  FF                 	db	255
  3321   00F8C2  FF                 	db	255
  3322   00F8C3  FF                 	db	255
  3323   00F8C4  FF                 	db	255
  3324   00F8C5  FF                 	db	255
  3325   00F8C6  FF                 	db	255
  3326   00F8C7  FF                 	db	255
  3327   00F8C8  FF                 	db	255
  3328   00F8C9  FF                 	db	255
  3329   00F8CA  FF                 	db	255
  3330   00F8CB  FF                 	db	255
  3331   00F8CC  FF                 	db	255
  3332   00F8CD  FF                 	db	255
  3333   00F8CE  FF                 	db	255
  3334   00F8CF  FF                 	db	255
  3335   00F8D0  FF                 	db	255
  3336   00F8D1  FF                 	db	255
  3337   00F8D2  FF                 	db	255
  3338   00F8D3  FF                 	db	255
  3339   00F8D4  FF                 	db	255
  3340   00F8D5  FF                 	db	255
  3341   00F8D6  FF                 	db	255
  3342   00F8D7  FF                 	db	255
  3343   00F8D8  FF                 	db	255
  3344   00F8D9  FF                 	db	255
  3345   00F8DA  FF                 	db	255
  3346   00F8DB  FF                 	db	255
  3347   00F8DC  FF                 	db	255
  3348   00F8DD  FF                 	db	255
  3349   00F8DE  FF                 	db	255
  3350   00F8DF  FF                 	db	255
  3351   00F8E0  FF                 	db	255
  3352   00F8E1  FF                 	db	255
  3353   00F8E2  FF                 	db	255
  3354   00F8E3  FF                 	db	255
  3355   00F8E4  FF                 	db	255
  3356   00F8E5  FF                 	db	255
  3357   00F8E6  FF                 	db	255
  3358   00F8E7  FF                 	db	255
  3359   00F8E8  FF                 	db	255
  3360   00F8E9  FF                 	db	255
  3361   00F8EA  FF                 	db	255
  3362   00F8EB  FF                 	db	255
  3363   00F8EC  FF                 	db	255
  3364   00F8ED  FF                 	db	255
  3365   00F8EE  FF                 	db	255
  3366   00F8EF  FF                 	db	255
  3367   00F8F0  FF                 	db	255
  3368   00F8F1  FF                 	db	255
  3369   00F8F2  FF                 	db	255
  3370   00F8F3  FF                 	db	255
  3371   00F8F4  FF                 	db	255
  3372   00F8F5  FF                 	db	255
  3373   00F8F6  FF                 	db	255
  3374   00F8F7  FF                 	db	255
  3375   00F8F8  FF                 	db	255
  3376   00F8F9  FF                 	db	255
  3377   00F8FA  FF                 	db	255
  3378   00F8FB  FF                 	db	255
  3379   00F8FC  FF                 	db	255
  3380   00F8FD  FF                 	db	255
  3381   00F8FE  FF                 	db	255
  3382   00F8FF  FF                 	db	255
  3383   00F900  FF                 	db	255
  3384   00F901  FF                 	db	255
  3385   00F902  FF                 	db	255
  3386   00F903  FF                 	db	255
  3387   00F904  FF                 	db	255
  3388   00F905  FF                 	db	255
  3389   00F906  FF                 	db	255
  3390   00F907  FF                 	db	255
  3391   00F908  FF                 	db	255
  3392   00F909  FF                 	db	255
  3393   00F90A  FF                 	db	255
  3394   00F90B  FF                 	db	255
  3395   00F90C  FF                 	db	255
  3396   00F90D  FF                 	db	255
  3397   00F90E  FF                 	db	255
  3398   00F90F  FF                 	db	255
  3399   00F910  FF                 	db	255
  3400   00F911  FF                 	db	255
  3401   00F912  FF                 	db	255
  3402   00F913  FF                 	db	255
  3403   00F914  FF                 	db	255
  3404   00F915  FF                 	db	255
  3405   00F916  FF                 	db	255
  3406   00F917  FF                 	db	255
  3407   00F918  FF                 	db	255
  3408   00F919  FF                 	db	255
  3409   00F91A  FF                 	db	255
  3410   00F91B  FF                 	db	255
  3411   00F91C  FF                 	db	255
  3412   00F91D  FF                 	db	255
  3413   00F91E  FF                 	db	255
  3414   00F91F  FF                 	db	255
  3415   00F920  FF                 	db	255
  3416   00F921  FF                 	db	255
  3417   00F922  FF                 	db	255
  3418   00F923  FF                 	db	255
  3419   00F924  FF                 	db	255
  3420   00F925  FF                 	db	255
  3421   00F926  FF                 	db	255
  3422   00F927  FF                 	db	255
  3423   00F928  FF                 	db	255
  3424   00F929  FF                 	db	255
  3425   00F92A  FF                 	db	255
  3426   00F92B  FF                 	db	255
  3427   00F92C  FF                 	db	255
  3428   00F92D  FF                 	db	255
  3429   00F92E  FF                 	db	255
  3430   00F92F  FF                 	db	255
  3431   00F930  FF                 	db	255
  3432   00F931  FF                 	db	255
  3433   00F932  FF                 	db	255
  3434   00F933  FF                 	db	255
  3435   00F934  FF                 	db	255
  3436   00F935  FF                 	db	255
  3437   00F936  FF                 	db	255
  3438   00F937  FF                 	db	255
  3439   00F938  FF                 	db	255
  3440   00F939  FF                 	db	255
  3441   00F93A  FF                 	db	255
  3442   00F93B  FF                 	db	255
  3443   00F93C  FF                 	db	255
  3444   00F93D  FF                 	db	255
  3445   00F93E  FF                 	db	255
  3446   00F93F  FF                 	db	255
  3447   00F940  FF                 	db	255
  3448   00F941  FF                 	db	255
  3449   00F942  FF                 	db	255
  3450   00F943  FF                 	db	255
  3451   00F944  FF                 	db	255
  3452   00F945  FF                 	db	255
  3453   00F946  FF                 	db	255
  3454   00F947  FF                 	db	255
  3455   00F948  FF                 	db	255
  3456   00F949  FF                 	db	255
  3457   00F94A  FF                 	db	255
  3458   00F94B  FF                 	db	255
  3459   00F94C  FF                 	db	255
  3460   00F94D  FF                 	db	255
  3461   00F94E  FF                 	db	255
  3462   00F94F  FF                 	db	255
  3463   00F950  FF                 	db	255
  3464   00F951  FF                 	db	255
  3465   00F952  FF                 	db	255
  3466   00F953  FF                 	db	255
  3467   00F954  FF                 	db	255
  3468   00F955  FF                 	db	255
  3469   00F956  FF                 	db	255
  3470   00F957  FF                 	db	255
  3471   00F958  FF                 	db	255
  3472   00F959  FF                 	db	255
  3473   00F95A  FF                 	db	255
  3474   00F95B  FF                 	db	255
  3475   00F95C  FF                 	db	255
  3476   00F95D  FF                 	db	255
  3477   00F95E  FF                 	db	255
  3478   00F95F  FF                 	db	255
  3479   00F960  FF                 	db	255
  3480   00F961  FF                 	db	255
  3481   00F962  FF                 	db	255
  3482   00F963  FF                 	db	255
  3483   00F964  FF                 	db	255
  3484   00F965  FF                 	db	255
  3485   00F966  FF                 	db	255
  3486   00F967  FF                 	db	255
  3487   00F968  FF                 	db	255
  3488   00F969  FF                 	db	255
  3489   00F96A  FF                 	db	255
  3490   00F96B  FF                 	db	255
  3491   00F96C  FF                 	db	255
  3492   00F96D  FF                 	db	255
  3493   00F96E  FF                 	db	255
  3494   00F96F  FF                 	db	255
  3495   00F970  FF                 	db	255
  3496   00F971  FF                 	db	255
  3497   00F972  FF                 	db	255
  3498   00F973  FF                 	db	255
  3499   00F974  FF                 	db	255
  3500   00F975  FF                 	db	255
  3501   00F976  FF                 	db	255
  3502   00F977  FF                 	db	255
  3503   00F978  FF                 	db	255
  3504   00F979  FF                 	db	255
  3505   00F97A  FF                 	db	255
  3506   00F97B  FF                 	db	255
  3507   00F97C  FF                 	db	255
  3508   00F97D  FF                 	db	255
  3509   00F97E  FF                 	db	255
  3510   00F97F  FF                 	db	255
  3511   00F980  FF                 	db	255
  3512   00F981  FF                 	db	255
  3513   00F982  FF                 	db	255
  3514   00F983  FF                 	db	255
  3515   00F984  FF                 	db	255
  3516   00F985  FF                 	db	255
  3517   00F986  FF                 	db	255
  3518   00F987  FF                 	db	255
  3519   00F988  FF                 	db	255
  3520   00F989  FF                 	db	255
  3521   00F98A  FF                 	db	255
  3522   00F98B  FF                 	db	255
  3523   00F98C  FF                 	db	255
  3524   00F98D  FF                 	db	255
  3525   00F98E  FF                 	db	255
  3526   00F98F  FF                 	db	255
  3527   00F990  FF                 	db	255
  3528   00F991  FF                 	db	255
  3529   00F992  FF                 	db	255
  3530   00F993  FF                 	db	255
  3531   00F994  FF                 	db	255
  3532   00F995  FF                 	db	255
  3533   00F996  FF                 	db	255
  3534   00F997  FF                 	db	255
  3535   00F998  FF                 	db	255
  3536   00F999  FF                 	db	255
  3537   00F99A  FF                 	db	255
  3538   00F99B  FF                 	db	255
  3539   00F99C  FF                 	db	255
  3540   00F99D  FF                 	db	255
  3541   00F99E  FF                 	db	255
  3542   00F99F  FF                 	db	255
  3543   00F9A0  FF                 	db	255
  3544   00F9A1  FF                 	db	255
  3545   00F9A2  FF                 	db	255
  3546   00F9A3  FF                 	db	255
  3547   00F9A4  FF                 	db	255
  3548   00F9A5  FF                 	db	255
  3549   00F9A6  FF                 	db	255
  3550   00F9A7  FF                 	db	255
  3551   00F9A8  FF                 	db	255
  3552   00F9A9  FF                 	db	255
  3553   00F9AA  FF                 	db	255
  3554   00F9AB  FF                 	db	255
  3555   00F9AC  FF                 	db	255
  3556   00F9AD  FF                 	db	255
  3557   00F9AE  FF                 	db	255
  3558   00F9AF  FF                 	db	255
  3559   00F9B0  FF                 	db	255
  3560   00F9B1  FF                 	db	255
  3561   00F9B2  FF                 	db	255
  3562   00F9B3  FF                 	db	255
  3563   00F9B4  FF                 	db	255
  3564   00F9B5  FF                 	db	255
  3565   00F9B6  FF                 	db	255
  3566   00F9B7  FF                 	db	255
  3567   00F9B8  FF                 	db	255
  3568   00F9B9  FF                 	db	255
  3569   00F9BA  FF                 	db	255
  3570   00F9BB  FF                 	db	255
  3571   00F9BC  FF                 	db	255
  3572   00F9BD  FF                 	db	255
  3573   00F9BE  FF                 	db	255
  3574   00F9BF  FF                 	db	255
  3575   00F9C0  FF                 	db	255
  3576   00F9C1  FF                 	db	255
  3577   00F9C2  FF                 	db	255
  3578   00F9C3  FF                 	db	255
  3579   00F9C4  FF                 	db	255
  3580   00F9C5  FF                 	db	255
  3581   00F9C6  FF                 	db	255
  3582   00F9C7  FF                 	db	255
  3583   00F9C8  FF                 	db	255
  3584   00F9C9  FF                 	db	255
  3585   00F9CA  FF                 	db	255
  3586   00F9CB  FF                 	db	255
  3587   00F9CC  FF                 	db	255
  3588   00F9CD  FF                 	db	255
  3589   00F9CE  FF                 	db	255
  3590   00F9CF  FF                 	db	255
  3591   00F9D0  FF                 	db	255
  3592   00F9D1  FF                 	db	255
  3593   00F9D2  FF                 	db	255
  3594   00F9D3  FF                 	db	255
  3595   00F9D4  FF                 	db	255
  3596   00F9D5  FF                 	db	255
  3597   00F9D6  FF                 	db	255
  3598   00F9D7  FF                 	db	255
  3599   00F9D8  FF                 	db	255
  3600   00F9D9  FF                 	db	255
  3601   00F9DA  FF                 	db	255
  3602   00F9DB  FF                 	db	255
  3603   00F9DC  FF                 	db	255
  3604   00F9DD  FF                 	db	255
  3605   00F9DE  FF                 	db	255
  3606   00F9DF  FF                 	db	255
  3607   00F9E0  FF                 	db	255
  3608   00F9E1  FF                 	db	255
  3609   00F9E2  FF                 	db	255
  3610   00F9E3  FF                 	db	255
  3611   00F9E4  FF                 	db	255
  3612   00F9E5  FF                 	db	255
  3613   00F9E6  FF                 	db	255
  3614   00F9E7  FF                 	db	255
  3615   00F9E8  FF                 	db	255
  3616   00F9E9  FF                 	db	255
  3617   00F9EA  FF                 	db	255
  3618   00F9EB  FF                 	db	255
  3619   00F9EC  FF                 	db	255
  3620   00F9ED  FF                 	db	255
  3621   00F9EE  FF                 	db	255
  3622   00F9EF  FF                 	db	255
  3623   00F9F0  FF                 	db	255
  3624   00F9F1  FF                 	db	255
  3625   00F9F2  FF                 	db	255
  3626   00F9F3  FF                 	db	255
  3627   00F9F4  FF                 	db	255
  3628   00F9F5  FF                 	db	255
  3629   00F9F6  FF                 	db	255
  3630   00F9F7  FF                 	db	255
  3631   00F9F8  FF                 	db	255
  3632   00F9F9  FF                 	db	255
  3633   00F9FA  FF                 	db	255
  3634   00F9FB  FF                 	db	255
  3635   00F9FC  FF                 	db	255
  3636   00F9FD  FF                 	db	255
  3637   00F9FE  FF                 	db	255
  3638   00F9FF  FF                 	db	255
  3639   00FA00  FF                 	db	255
  3640   00FA01  FF                 	db	255
  3641   00FA02  FF                 	db	255
  3642   00FA03  FF                 	db	255
  3643   00FA04  FF                 	db	255
  3644   00FA05  FF                 	db	255
  3645   00FA06  FF                 	db	255
  3646   00FA07  FF                 	db	255
  3647   00FA08  FF                 	db	255
  3648   00FA09  FF                 	db	255
  3649   00FA0A  FF                 	db	255
  3650   00FA0B  FF                 	db	255
  3651   00FA0C  FF                 	db	255
  3652   00FA0D  FF                 	db	255
  3653   00FA0E  FF                 	db	255
  3654   00FA0F  FF                 	db	255
  3655   00FA10  FF                 	db	255
  3656   00FA11  FF                 	db	255
  3657   00FA12  FF                 	db	255
  3658   00FA13  FF                 	db	255
  3659   00FA14  FF                 	db	255
  3660   00FA15  FF                 	db	255
  3661   00FA16  FF                 	db	255
  3662   00FA17  FF                 	db	255
  3663   00FA18  FF                 	db	255
  3664   00FA19  FF                 	db	255
  3665   00FA1A  FF                 	db	255
  3666   00FA1B  FF                 	db	255
  3667   00FA1C  FF                 	db	255
  3668   00FA1D  FF                 	db	255
  3669   00FA1E  FF                 	db	255
  3670   00FA1F  FF                 	db	255
  3671   00FA20  FF                 	db	255
  3672   00FA21  FF                 	db	255
  3673   00FA22  FF                 	db	255
  3674   00FA23  FF                 	db	255
  3675   00FA24  FF                 	db	255
  3676   00FA25  FF                 	db	255
  3677   00FA26  FF                 	db	255
  3678   00FA27  FF                 	db	255
  3679   00FA28  FF                 	db	255
  3680   00FA29  FF                 	db	255
  3681   00FA2A  FF                 	db	255
  3682   00FA2B  FF                 	db	255
  3683   00FA2C  FF                 	db	255
  3684   00FA2D  FF                 	db	255
  3685   00FA2E  FF                 	db	255
  3686   00FA2F  FF                 	db	255
  3687   00FA30  FF                 	db	255
  3688   00FA31  FF                 	db	255
  3689   00FA32  FF                 	db	255
  3690   00FA33  FF                 	db	255
  3691   00FA34  FF                 	db	255
  3692   00FA35  FF                 	db	255
  3693   00FA36  FF                 	db	255
  3694   00FA37  FF                 	db	255
  3695   00FA38  FF                 	db	255
  3696   00FA39  FF                 	db	255
  3697   00FA3A  FF                 	db	255
  3698   00FA3B  FF                 	db	255
  3699   00FA3C  FF                 	db	255
  3700   00FA3D  FF                 	db	255
  3701   00FA3E  FF                 	db	255
  3702   00FA3F  FF                 	db	255
  3703   00FA40  FF                 	db	255
  3704   00FA41  FF                 	db	255
  3705   00FA42  FF                 	db	255
  3706   00FA43  FF                 	db	255
  3707   00FA44  FF                 	db	255
  3708   00FA45  FF                 	db	255
  3709   00FA46  FF                 	db	255
  3710   00FA47  FF                 	db	255
  3711   00FA48  FF                 	db	255
  3712   00FA49  FF                 	db	255
  3713   00FA4A  FF                 	db	255
  3714   00FA4B  FF                 	db	255
  3715   00FA4C  FF                 	db	255
  3716   00FA4D  FF                 	db	255
  3717   00FA4E  FF                 	db	255
  3718   00FA4F  FF                 	db	255
  3719   00FA50  FF                 	db	255
  3720   00FA51  FF                 	db	255
  3721   00FA52  FF                 	db	255
  3722   00FA53  FF                 	db	255
  3723   00FA54  FF                 	db	255
  3724   00FA55  FF                 	db	255
  3725   00FA56  FF                 	db	255
  3726   00FA57  FF                 	db	255
  3727   00FA58  FF                 	db	255
  3728   00FA59  FF                 	db	255
  3729   00FA5A  FF                 	db	255
  3730   00FA5B  FF                 	db	255
  3731   00FA5C  FF                 	db	255
  3732   00FA5D  FF                 	db	255
  3733   00FA5E  FF                 	db	255
  3734   00FA5F  FF                 	db	255
  3735   00FA60  FF                 	db	255
  3736   00FA61  FF                 	db	255
  3737   00FA62  FF                 	db	255
  3738   00FA63  FF                 	db	255
  3739   00FA64  FF                 	db	255
  3740   00FA65  FF                 	db	255
  3741   00FA66  FF                 	db	255
  3742   00FA67  FF                 	db	255
  3743   00FA68  FF                 	db	255
  3744   00FA69  FF                 	db	255
  3745   00FA6A  FF                 	db	255
  3746   00FA6B  FF                 	db	255
  3747   00FA6C  FF                 	db	255
  3748   00FA6D  FF                 	db	255
  3749   00FA6E  FF                 	db	255
  3750   00FA6F  FF                 	db	255
  3751   00FA70  FF                 	db	255
  3752   00FA71  FF                 	db	255
  3753   00FA72  FF                 	db	255
  3754   00FA73  FF                 	db	255
  3755   00FA74  FF                 	db	255
  3756   00FA75  FF                 	db	255
  3757   00FA76  FF                 	db	255
  3758   00FA77  FF                 	db	255
  3759   00FA78  FF                 	db	255
  3760   00FA79  FF                 	db	255
  3761   00FA7A  FF                 	db	255
  3762   00FA7B  FF                 	db	255
  3763   00FA7C  FF                 	db	255
  3764   00FA7D  FF                 	db	255
  3765   00FA7E  FF                 	db	255
  3766   00FA7F  FF                 	db	255
  3767   00FA80  FF                 	db	255
  3768   00FA81  FF                 	db	255
  3769   00FA82  FF                 	db	255
  3770   00FA83  FF                 	db	255
  3771   00FA84  FF                 	db	255
  3772   00FA85  FF                 	db	255
  3773   00FA86  FF                 	db	255
  3774   00FA87  FF                 	db	255
  3775   00FA88  FF                 	db	255
  3776   00FA89  FF                 	db	255
  3777   00FA8A  FF                 	db	255
  3778   00FA8B  FF                 	db	255
  3779   00FA8C  FF                 	db	255
  3780   00FA8D  FF                 	db	255
  3781   00FA8E  FF                 	db	255
  3782   00FA8F  FF                 	db	255
  3783   00FA90  FF                 	db	255
  3784   00FA91  FF                 	db	255
  3785   00FA92  FF                 	db	255
  3786   00FA93  FF                 	db	255
  3787   00FA94  FF                 	db	255
  3788   00FA95  FF                 	db	255
  3789   00FA96  FF                 	db	255
  3790   00FA97  FF                 	db	255
  3791   00FA98  FF                 	db	255
  3792   00FA99  FF                 	db	255
  3793   00FA9A  FF                 	db	255
  3794   00FA9B  FF                 	db	255
  3795   00FA9C  FF                 	db	255
  3796   00FA9D  FF                 	db	255
  3797   00FA9E  FF                 	db	255
  3798   00FA9F  FF                 	db	255
  3799   00FAA0  FF                 	db	255
  3800   00FAA1  FF                 	db	255
  3801   00FAA2  FF                 	db	255
  3802   00FAA3  FF                 	db	255
  3803   00FAA4  FF                 	db	255
  3804   00FAA5  FF                 	db	255
  3805   00FAA6  FF                 	db	255
  3806   00FAA7  FF                 	db	255
  3807   00FAA8  FF                 	db	255
  3808   00FAA9  FF                 	db	255
  3809   00FAAA  FF                 	db	255
  3810   00FAAB  FF                 	db	255
  3811   00FAAC  FF                 	db	255
  3812   00FAAD  FF                 	db	255
  3813   00FAAE  FF                 	db	255
  3814   00FAAF  FF                 	db	255
  3815   00FAB0  FF                 	db	255
  3816   00FAB1  FF                 	db	255
  3817   00FAB2  FF                 	db	255
  3818   00FAB3  FF                 	db	255
  3819   00FAB4  FF                 	db	255
  3820   00FAB5  FF                 	db	255
  3821   00FAB6  FF                 	db	255
  3822   00FAB7  FF                 	db	255
  3823   00FAB8  FF                 	db	255
  3824   00FAB9  FF                 	db	255
  3825   00FABA  FF                 	db	255
  3826   00FABB  FF                 	db	255
  3827   00FABC  FF                 	db	255
  3828   00FABD  FF                 	db	255
  3829   00FABE  FF                 	db	255
  3830   00FABF  FF                 	db	255
  3831   00FAC0  FF                 	db	255
  3832   00FAC1  FF                 	db	255
  3833   00FAC2  FF                 	db	255
  3834   00FAC3  FF                 	db	255
  3835   00FAC4  FF                 	db	255
  3836   00FAC5  FF                 	db	255
  3837   00FAC6  FF                 	db	255
  3838   00FAC7  FF                 	db	255
  3839   00FAC8  FF                 	db	255
  3840   00FAC9  FF                 	db	255
  3841   00FACA  FF                 	db	255
  3842   00FACB  FF                 	db	255
  3843   00FACC  FF                 	db	255
  3844   00FACD  FF                 	db	255
  3845   00FACE  FF                 	db	255
  3846   00FACF  FF                 	db	255
  3847   00FAD0  FF                 	db	255
  3848   00FAD1  FF                 	db	255
  3849   00FAD2  FF                 	db	255
  3850   00FAD3  FF                 	db	255
  3851   00FAD4  FF                 	db	255
  3852   00FAD5  FF                 	db	255
  3853   00FAD6  FF                 	db	255
  3854   00FAD7  FF                 	db	255
  3855   00FAD8  FF                 	db	255
  3856   00FAD9  FF                 	db	255
  3857   00FADA  FF                 	db	255
  3858   00FADB  FF                 	db	255
  3859   00FADC  FF                 	db	255
  3860   00FADD  FF                 	db	255
  3861   00FADE  FF                 	db	255
  3862   00FADF  FF                 	db	255
  3863   00FAE0  FF                 	db	255
  3864   00FAE1  FF                 	db	255
  3865   00FAE2  FF                 	db	255
  3866   00FAE3  FF                 	db	255
  3867   00FAE4  FF                 	db	255
  3868   00FAE5  FF                 	db	255
  3869   00FAE6  FF                 	db	255
  3870   00FAE7  FF                 	db	255
  3871   00FAE8  FF                 	db	255
  3872   00FAE9  FF                 	db	255
  3873   00FAEA  FF                 	db	255
  3874   00FAEB  FF                 	db	255
  3875   00FAEC  FF                 	db	255
  3876   00FAED  FF                 	db	255
  3877   00FAEE  FF                 	db	255
  3878   00FAEF  FF                 	db	255
  3879   00FAF0  FF                 	db	255
  3880   00FAF1  FF                 	db	255
  3881   00FAF2  FF                 	db	255
  3882   00FAF3  FF                 	db	255
  3883   00FAF4  FF                 	db	255
  3884   00FAF5  FF                 	db	255
  3885   00FAF6  FF                 	db	255
  3886   00FAF7  FF                 	db	255
  3887   00FAF8  FF                 	db	255
  3888   00FAF9  FF                 	db	255
  3889   00FAFA  FF                 	db	255
  3890   00FAFB  FF                 	db	255
  3891   00FAFC  FF                 	db	255
  3892   00FAFD  FF                 	db	255
  3893   00FAFE  FF                 	db	255
  3894   00FAFF  FF                 	db	255
  3895   00FB00  FF                 	db	255
  3896   00FB01  FF                 	db	255
  3897   00FB02  FF                 	db	255
  3898   00FB03  FF                 	db	255
  3899   00FB04  FF                 	db	255
  3900   00FB05  FF                 	db	255
  3901   00FB06  FF                 	db	255
  3902   00FB07  FF                 	db	255
  3903   00FB08  FF                 	db	255
  3904   00FB09  FF                 	db	255
  3905   00FB0A  FF                 	db	255
  3906   00FB0B  FF                 	db	255
  3907   00FB0C  FF                 	db	255
  3908   00FB0D  FF                 	db	255
  3909   00FB0E  FF                 	db	255
  3910   00FB0F  FF                 	db	255
  3911   00FB10  FF                 	db	255
  3912   00FB11  FF                 	db	255
  3913   00FB12  FF                 	db	255
  3914   00FB13  FF                 	db	255
  3915   00FB14  FF                 	db	255
  3916   00FB15  FF                 	db	255
  3917   00FB16  FF                 	db	255
  3918   00FB17  FF                 	db	255
  3919   00FB18  FF                 	db	255
  3920   00FB19  FF                 	db	255
  3921   00FB1A  FF                 	db	255
  3922   00FB1B  FF                 	db	255
  3923   00FB1C  FF                 	db	255
  3924   00FB1D  FF                 	db	255
  3925   00FB1E  FF                 	db	255
  3926   00FB1F  FF                 	db	255
  3927   00FB20  FF                 	db	255
  3928   00FB21  FF                 	db	255
  3929   00FB22  FF                 	db	255
  3930   00FB23  FF                 	db	255
  3931   00FB24  FF                 	db	255
  3932   00FB25  FF                 	db	255
  3933   00FB26  FF                 	db	255
  3934   00FB27  FF                 	db	255
  3935   00FB28  FF                 	db	255
  3936   00FB29  FF                 	db	255
  3937   00FB2A  FF                 	db	255
  3938   00FB2B  FF                 	db	255
  3939   00FB2C  FF                 	db	255
  3940   00FB2D  FF                 	db	255
  3941   00FB2E  FF                 	db	255
  3942   00FB2F  FF                 	db	255
  3943   00FB30  FF                 	db	255
  3944   00FB31  FF                 	db	255
  3945   00FB32  FF                 	db	255
  3946   00FB33  FF                 	db	255
  3947   00FB34  FF                 	db	255
  3948   00FB35  FF                 	db	255
  3949   00FB36  FF                 	db	255
  3950   00FB37  FF                 	db	255
  3951   00FB38  FF                 	db	255
  3952   00FB39  FF                 	db	255
  3953   00FB3A  FF                 	db	255
  3954   00FB3B  FF                 	db	255
  3955   00FB3C  FF                 	db	255
  3956   00FB3D  FF                 	db	255
  3957   00FB3E  FF                 	db	255
  3958   00FB3F  FF                 	db	255
  3959   00FB40  FF                 	db	255
  3960   00FB41  FF                 	db	255
  3961   00FB42  FF                 	db	255
  3962   00FB43  FF                 	db	255
  3963   00FB44  FF                 	db	255
  3964   00FB45  FF                 	db	255
  3965   00FB46  FF                 	db	255
  3966   00FB47  FF                 	db	255
  3967   00FB48  FF                 	db	255
  3968   00FB49  FF                 	db	255
  3969   00FB4A  FF                 	db	255
  3970   00FB4B  FF                 	db	255
  3971   00FB4C  FF                 	db	255
  3972   00FB4D  FF                 	db	255
  3973   00FB4E  FF                 	db	255
  3974   00FB4F  FF                 	db	255
  3975   00FB50  FF                 	db	255
  3976   00FB51  FF                 	db	255
  3977   00FB52  FF                 	db	255
  3978   00FB53  FF                 	db	255
  3979   00FB54  FF                 	db	255
  3980   00FB55  FF                 	db	255
  3981   00FB56  FF                 	db	255
  3982   00FB57  FF                 	db	255
  3983   00FB58  FF                 	db	255
  3984   00FB59  FF                 	db	255
  3985   00FB5A  FF                 	db	255
  3986   00FB5B  FF                 	db	255
  3987   00FB5C  FF                 	db	255
  3988   00FB5D  FF                 	db	255
  3989   00FB5E  FF                 	db	255
  3990   00FB5F  FF                 	db	255
  3991   00FB60  FF                 	db	255
  3992   00FB61  FF                 	db	255
  3993   00FB62  FF                 	db	255
  3994   00FB63  FF                 	db	255
  3995   00FB64  FF                 	db	255
  3996   00FB65  FF                 	db	255
  3997   00FB66  FF                 	db	255
  3998   00FB67  FF                 	db	255
  3999   00FB68  FF                 	db	255
  4000   00FB69  FF                 	db	255
  4001   00FB6A  FF                 	db	255
  4002   00FB6B  FF                 	db	255
  4003   00FB6C  FF                 	db	255
  4004   00FB6D  FF                 	db	255
  4005   00FB6E  FF                 	db	255
  4006   00FB6F  FF                 	db	255
  4007   00FB70  FF                 	db	255
  4008   00FB71  FF                 	db	255
  4009   00FB72  FF                 	db	255
  4010   00FB73  FF                 	db	255
  4011   00FB74  FF                 	db	255
  4012   00FB75  FF                 	db	255
  4013   00FB76  FF                 	db	255
  4014   00FB77  FF                 	db	255
  4015   00FB78  FF                 	db	255
  4016   00FB79  FF                 	db	255
  4017   00FB7A  FF                 	db	255
  4018   00FB7B  FF                 	db	255
  4019   00FB7C  FF                 	db	255
  4020   00FB7D  FF                 	db	255
  4021   00FB7E  FF                 	db	255
  4022   00FB7F  FF                 	db	255
  4023   00FB80  FF                 	db	255
  4024   00FB81  FF                 	db	255
  4025   00FB82  FF                 	db	255
  4026   00FB83  FF                 	db	255
  4027   00FB84  FF                 	db	255
  4028   00FB85  FF                 	db	255
  4029   00FB86  FF                 	db	255
  4030   00FB87  FF                 	db	255
  4031   00FB88  FF                 	db	255
  4032   00FB89  FF                 	db	255
  4033   00FB8A  FF                 	db	255
  4034   00FB8B  FF                 	db	255
  4035   00FB8C  FF                 	db	255
  4036   00FB8D  FF                 	db	255
  4037   00FB8E  FF                 	db	255
  4038   00FB8F  FF                 	db	255
  4039   00FB90  FF                 	db	255
  4040   00FB91  FF                 	db	255
  4041   00FB92  FF                 	db	255
  4042   00FB93  FF                 	db	255
  4043   00FB94  FF                 	db	255
  4044   00FB95  FF                 	db	255
  4045   00FB96  FF                 	db	255
  4046   00FB97  FF                 	db	255
  4047   00FB98  FF                 	db	255
  4048   00FB99  FF                 	db	255
  4049   00FB9A  FF                 	db	255
  4050   00FB9B  FF                 	db	255
  4051   00FB9C  FF                 	db	255
  4052   00FB9D  FF                 	db	255
  4053   00FB9E  FF                 	db	255
  4054   00FB9F  FF                 	db	255
  4055   00FBA0  FF                 	db	255
  4056   00FBA1  FF                 	db	255
  4057   00FBA2  FF                 	db	255
  4058   00FBA3  FF                 	db	255
  4059   00FBA4  FF                 	db	255
  4060   00FBA5  FF                 	db	255
  4061   00FBA6  FF                 	db	255
  4062   00FBA7  FF                 	db	255
  4063   00FBA8  FF                 	db	255
  4064   00FBA9  FF                 	db	255
  4065   00FBAA  FF                 	db	255
  4066   00FBAB  FF                 	db	255
  4067   00FBAC  FF                 	db	255
  4068   00FBAD  FF                 	db	255
  4069   00FBAE  FF                 	db	255
  4070   00FBAF  FF                 	db	255
  4071   00FBB0  FF                 	db	255
  4072   00FBB1  FF                 	db	255
  4073   00FBB2  FF                 	db	255
  4074   00FBB3  FF                 	db	255
  4075   00FBB4  FF                 	db	255
  4076   00FBB5  FF                 	db	255
  4077   00FBB6  FF                 	db	255
  4078   00FBB7  FF                 	db	255
  4079   00FBB8  FF                 	db	255
  4080   00FBB9  FF                 	db	255
  4081   00FBBA  FF                 	db	255
  4082   00FBBB  FF                 	db	255
  4083   00FBBC  FF                 	db	255
  4084   00FBBD  FF                 	db	255
  4085   00FBBE  FF                 	db	255
  4086   00FBBF  FF                 	db	255
  4087   00FBC0  FF                 	db	255
  4088   00FBC1  FF                 	db	255
  4089   00FBC2  FF                 	db	255
  4090   00FBC3  FF                 	db	255
  4091   00FBC4  FF                 	db	255
  4092   00FBC5  FF                 	db	255
  4093   00FBC6  FF                 	db	255
  4094   00FBC7  FF                 	db	255
  4095   00FBC8  FF                 	db	255
  4096   00FBC9  FF                 	db	255
  4097   00FBCA  FF                 	db	255
  4098   00FBCB  FF                 	db	255
  4099   00FBCC  FF                 	db	255
  4100   00FBCD  FF                 	db	255
  4101   00FBCE  FF                 	db	255
  4102   00FBCF  FF                 	db	255
  4103   00FBD0  FF                 	db	255
  4104   00FBD1  FF                 	db	255
  4105   00FBD2  FF                 	db	255
  4106   00FBD3  FF                 	db	255
  4107   00FBD4  FF                 	db	255
  4108   00FBD5  FF                 	db	255
  4109   00FBD6  FF                 	db	255
  4110   00FBD7  FF                 	db	255
  4111   00FBD8  FF                 	db	255
  4112   00FBD9  FF                 	db	255
  4113   00FBDA  FF                 	db	255
  4114   00FBDB  FF                 	db	255
  4115   00FBDC  FF                 	db	255
  4116   00FBDD  FF                 	db	255
  4117   00FBDE  FF                 	db	255
  4118   00FBDF  FF                 	db	255
  4119   00FBE0  FF                 	db	255
  4120   00FBE1  FF                 	db	255
  4121   00FBE2  FF                 	db	255
  4122   00FBE3  FF                 	db	255
  4123   00FBE4  FF                 	db	255
  4124   00FBE5  FF                 	db	255
  4125   00FBE6  FF                 	db	255
  4126   00FBE7  FF                 	db	255
  4127   00FBE8  FF                 	db	255
  4128   00FBE9  FF                 	db	255
  4129   00FBEA  FF                 	db	255
  4130   00FBEB  FF                 	db	255
  4131   00FBEC  FF                 	db	255
  4132   00FBED  FF                 	db	255
  4133   00FBEE  FF                 	db	255
  4134   00FBEF  FF                 	db	255
  4135   00FBF0  FF                 	db	255
  4136   00FBF1  FF                 	db	255
  4137   00FBF2  FF                 	db	255
  4138   00FBF3  FF                 	db	255
  4139   00FBF4  FF                 	db	255
  4140   00FBF5  FF                 	db	255
  4141   00FBF6  FF                 	db	255
  4142   00FBF7  FF                 	db	255
  4143   00FBF8  FF                 	db	255
  4144   00FBF9  FF                 	db	255
  4145   00FBFA  FF                 	db	255
  4146   00FBFB  FF                 	db	255
  4147   00FBFC  FF                 	db	255
  4148   00FBFD  FF                 	db	255
  4149   00FBFE  FF                 	db	255
  4150   00FBFF  FF                 	db	255
  4151   00FC00  FF                 	db	255
  4152   00FC01  FF                 	db	255
  4153   00FC02  FF                 	db	255
  4154   00FC03  FF                 	db	255
  4155   00FC04  FF                 	db	255
  4156   00FC05  FF                 	db	255
  4157   00FC06  FF                 	db	255
  4158   00FC07  FF                 	db	255
  4159   00FC08  FF                 	db	255
  4160   00FC09  FF                 	db	255
  4161   00FC0A  FF                 	db	255
  4162   00FC0B  FF                 	db	255
  4163   00FC0C  FF                 	db	255
  4164   00FC0D  FF                 	db	255
  4165   00FC0E  FF                 	db	255
  4166   00FC0F  FF                 	db	255
  4167   00FC10  FF                 	db	255
  4168   00FC11  FF                 	db	255
  4169   00FC12  FF                 	db	255
  4170   00FC13  FF                 	db	255
  4171   00FC14  FF                 	db	255
  4172   00FC15  FF                 	db	255
  4173   00FC16  FF                 	db	255
  4174   00FC17  FF                 	db	255
  4175   00FC18  FF                 	db	255
  4176   00FC19  FF                 	db	255
  4177   00FC1A  FF                 	db	255
  4178   00FC1B  FF                 	db	255
  4179   00FC1C  FF                 	db	255
  4180   00FC1D  FF                 	db	255
  4181   00FC1E  FF                 	db	255
  4182   00FC1F  FF                 	db	255
  4183   00FC20  FF                 	db	255
  4184   00FC21  FF                 	db	255
  4185   00FC22  FF                 	db	255
  4186   00FC23  FF                 	db	255
  4187   00FC24  FF                 	db	255
  4188   00FC25  FF                 	db	255
  4189   00FC26  FF                 	db	255
  4190   00FC27  FF                 	db	255
  4191   00FC28  FF                 	db	255
  4192   00FC29  FF                 	db	255
  4193   00FC2A  FF                 	db	255
  4194   00FC2B  FF                 	db	255
  4195   00FC2C  FF                 	db	255
  4196   00FC2D  FF                 	db	255
  4197   00FC2E  FF                 	db	255
  4198   00FC2F  FF                 	db	255
  4199   00FC30  FF                 	db	255
  4200   00FC31  FF                 	db	255
  4201   00FC32  FF                 	db	255
  4202   00FC33  FF                 	db	255
  4203   00FC34  FF                 	db	255
  4204   00FC35  FF                 	db	255
  4205   00FC36  FF                 	db	255
  4206   00FC37  FF                 	db	255
  4207   00FC38  FF                 	db	255
  4208   00FC39  FF                 	db	255
  4209   00FC3A  FF                 	db	255
  4210   00FC3B  FF                 	db	255
  4211   00FC3C  FF                 	db	255
  4212   00FC3D  FF                 	db	255
  4213   00FC3E  FF                 	db	255
  4214   00FC3F  FF                 	db	255
  4215   00FC40  FF                 	db	255
  4216   00FC41  FF                 	db	255
  4217   00FC42  FF                 	db	255
  4218   00FC43  FF                 	db	255
  4219   00FC44  FF                 	db	255
  4220   00FC45  FF                 	db	255
  4221   00FC46  FF                 	db	255
  4222   00FC47  FF                 	db	255
  4223   00FC48  FF                 	db	255
  4224   00FC49  FF                 	db	255
  4225   00FC4A  FF                 	db	255
  4226   00FC4B  FF                 	db	255
  4227   00FC4C  FF                 	db	255
  4228   00FC4D  FF                 	db	255
  4229   00FC4E  FF                 	db	255
  4230   00FC4F  FF                 	db	255
  4231   00FC50  FF                 	db	255
  4232   00FC51  FF                 	db	255
  4233   00FC52  FF                 	db	255
  4234   00FC53  FF                 	db	255
  4235   00FC54  FF                 	db	255
  4236   00FC55  FF                 	db	255
  4237   00FC56  FF                 	db	255
  4238   00FC57  FF                 	db	255
  4239   00FC58  FF                 	db	255
  4240   00FC59  FF                 	db	255
  4241   00FC5A  FF                 	db	255
  4242   00FC5B  FF                 	db	255
  4243   00FC5C  FF                 	db	255
  4244   00FC5D  FF                 	db	255
  4245   00FC5E  FF                 	db	255
  4246   00FC5F  FF                 	db	255
  4247   00FC60  FF                 	db	255
  4248   00FC61  FF                 	db	255
  4249   00FC62  FF                 	db	255
  4250   00FC63  FF                 	db	255
  4251   00FC64  FF                 	db	255
  4252   00FC65  FF                 	db	255
  4253   00FC66  FF                 	db	255
  4254   00FC67  FF                 	db	255
  4255   00FC68  FF                 	db	255
  4256   00FC69  FF                 	db	255
  4257   00FC6A  FF                 	db	255
  4258   00FC6B  FF                 	db	255
  4259   00FC6C  FF                 	db	255
  4260   00FC6D  FF                 	db	255
  4261   00FC6E  FF                 	db	255
  4262   00FC6F  FF                 	db	255
  4263   00FC70  FF                 	db	255
  4264   00FC71  FF                 	db	255
  4265   00FC72  FF                 	db	255
  4266   00FC73  FF                 	db	255
  4267   00FC74  FF                 	db	255
  4268   00FC75  FF                 	db	255
  4269   00FC76  FF                 	db	255
  4270   00FC77  FF                 	db	255
  4271   00FC78  FF                 	db	255
  4272   00FC79  FF                 	db	255
  4273   00FC7A  FF                 	db	255
  4274   00FC7B  FF                 	db	255
  4275   00FC7C  FF                 	db	255
  4276   00FC7D  FF                 	db	255
  4277   00FC7E  FF                 	db	255
  4278   00FC7F  FF                 	db	255
  4279   00FC80  FF                 	db	255
  4280   00FC81  FF                 	db	255
  4281   00FC82  FF                 	db	255
  4282   00FC83  FF                 	db	255
  4283   00FC84  FF                 	db	255
  4284   00FC85  FF                 	db	255
  4285   00FC86  FF                 	db	255
  4286   00FC87  FF                 	db	255
  4287   00FC88  FF                 	db	255
  4288   00FC89  FF                 	db	255
  4289   00FC8A  FF                 	db	255
  4290   00FC8B  FF                 	db	255
  4291   00FC8C  FF                 	db	255
  4292   00FC8D  FF                 	db	255
  4293   00FC8E  FF                 	db	255
  4294   00FC8F  FF                 	db	255
  4295   00FC90  FF                 	db	255
  4296   00FC91  FF                 	db	255
  4297   00FC92  FF                 	db	255
  4298   00FC93  FF                 	db	255
  4299   00FC94  FF                 	db	255
  4300   00FC95  FF                 	db	255
  4301   00FC96  FF                 	db	255
  4302   00FC97  FF                 	db	255
  4303   00FC98  FF                 	db	255
  4304   00FC99  FF                 	db	255
  4305   00FC9A  FF                 	db	255
  4306   00FC9B  FF                 	db	255
  4307   00FC9C  FF                 	db	255
  4308   00FC9D  FF                 	db	255
  4309   00FC9E  FF                 	db	255
  4310   00FC9F  FF                 	db	255
  4311   00FCA0  FF                 	db	255
  4312   00FCA1  FF                 	db	255
  4313   00FCA2  FF                 	db	255
  4314   00FCA3  FF                 	db	255
  4315   00FCA4  FF                 	db	255
  4316   00FCA5  FF                 	db	255
  4317   00FCA6  FF                 	db	255
  4318   00FCA7  FF                 	db	255
  4319   00FCA8  FF                 	db	255
  4320   00FCA9  FF                 	db	255
  4321   00FCAA  FF                 	db	255
  4322   00FCAB  FF                 	db	255
  4323   00FCAC  FF                 	db	255
  4324   00FCAD  FF                 	db	255
  4325   00FCAE  FF                 	db	255
  4326   00FCAF  FF                 	db	255
  4327   00FCB0  FF                 	db	255
  4328   00FCB1  FF                 	db	255
  4329   00FCB2  FF                 	db	255
  4330   00FCB3  FF                 	db	255
  4331   00FCB4  FF                 	db	255
  4332   00FCB5  FF                 	db	255
  4333   00FCB6  FF                 	db	255
  4334   00FCB7  FF                 	db	255
  4335   00FCB8  FF                 	db	255
  4336   00FCB9  FF                 	db	255
  4337   00FCBA  FF                 	db	255
  4338   00FCBB  FF                 	db	255
  4339   00FCBC  FF                 	db	255
  4340   00FCBD  FF                 	db	255
  4341   00FCBE  FF                 	db	255
  4342   00FCBF  FF                 	db	255
  4343   00FCC0  FF                 	db	255
  4344   00FCC1  FF                 	db	255
  4345   00FCC2  FF                 	db	255
  4346   00FCC3  FF                 	db	255
  4347   00FCC4  FF                 	db	255
  4348   00FCC5  FF                 	db	255
  4349   00FCC6  FF                 	db	255
  4350   00FCC7  FF                 	db	255
  4351   00FCC8  FF                 	db	255
  4352   00FCC9  FF                 	db	255
  4353   00FCCA  FF                 	db	255
  4354   00FCCB  FF                 	db	255
  4355   00FCCC  FF                 	db	255
  4356   00FCCD  FF                 	db	255
  4357   00FCCE  FF                 	db	255
  4358   00FCCF  FF                 	db	255
  4359   00FCD0  FF                 	db	255
  4360   00FCD1  FF                 	db	255
  4361   00FCD2  FF                 	db	255
  4362   00FCD3  FF                 	db	255
  4363   00FCD4  FF                 	db	255
  4364   00FCD5  FF                 	db	255
  4365   00FCD6  FF                 	db	255
  4366   00FCD7  FF                 	db	255
  4367   00FCD8  FF                 	db	255
  4368   00FCD9  FF                 	db	255
  4369   00FCDA  FF                 	db	255
  4370   00FCDB  FF                 	db	255
  4371   00FCDC  FF                 	db	255
  4372   00FCDD  FF                 	db	255
  4373   00FCDE  FF                 	db	255
  4374   00FCDF  FF                 	db	255
  4375   00FCE0  FF                 	db	255
  4376   00FCE1  FF                 	db	255
  4377   00FCE2  FF                 	db	255
  4378   00FCE3  FF                 	db	255
  4379   00FCE4  FF                 	db	255
  4380   00FCE5  FF                 	db	255
  4381   00FCE6  FF                 	db	255
  4382   00FCE7  FF                 	db	255
  4383   00FCE8  FF                 	db	255
  4384   00FCE9  FF                 	db	255
  4385   00FCEA  FF                 	db	255
  4386   00FCEB  FF                 	db	255
  4387   00FCEC  FF                 	db	255
  4388   00FCED  FF                 	db	255
  4389   00FCEE  FF                 	db	255
  4390   00FCEF  FF                 	db	255
  4391   00FCF0  FF                 	db	255
  4392   00FCF1  FF                 	db	255
  4393   00FCF2  FF                 	db	255
  4394   00FCF3  FF                 	db	255
  4395   00FCF4  FF                 	db	255
  4396   00FCF5  FF                 	db	255
  4397   00FCF6  FF                 	db	255
  4398   00FCF7  FF                 	db	255
  4399   00FCF8  FF                 	db	255
  4400   00FCF9  FF                 	db	255
  4401   00FCFA  FF                 	db	255
  4402   00FCFB  FF                 	db	255
  4403   00FCFC  FF                 	db	255
  4404   00FCFD  FF                 	db	255
  4405   00FCFE  FF                 	db	255
  4406   00FCFF  FF                 	db	255
  4407   00FD00  FF                 	db	255
  4408   00FD01  FF                 	db	255
  4409   00FD02  FF                 	db	255
  4410   00FD03  FF                 	db	255
  4411   00FD04  FF                 	db	255
  4412   00FD05  FF                 	db	255
  4413   00FD06  FF                 	db	255
  4414   00FD07  FF                 	db	255
  4415   00FD08  FF                 	db	255
  4416   00FD09  FF                 	db	255
  4417   00FD0A  FF                 	db	255
  4418   00FD0B  FF                 	db	255
  4419   00FD0C  FF                 	db	255
  4420   00FD0D  FF                 	db	255
  4421   00FD0E  FF                 	db	255
  4422   00FD0F  FF                 	db	255
  4423   00FD10  FF                 	db	255
  4424   00FD11  FF                 	db	255
  4425   00FD12  FF                 	db	255
  4426   00FD13  FF                 	db	255
  4427   00FD14  FF                 	db	255
  4428   00FD15  FF                 	db	255
  4429   00FD16  FF                 	db	255
  4430   00FD17  FF                 	db	255
  4431   00FD18  FF                 	db	255
  4432   00FD19  FF                 	db	255
  4433   00FD1A  FF                 	db	255
  4434   00FD1B  FF                 	db	255
  4435   00FD1C  FF                 	db	255
  4436   00FD1D  FF                 	db	255
  4437   00FD1E  FF                 	db	255
  4438   00FD1F  FF                 	db	255
  4439   00FD20  FF                 	db	255
  4440   00FD21  FF                 	db	255
  4441   00FD22  FF                 	db	255
  4442   00FD23  FF                 	db	255
  4443   00FD24  FF                 	db	255
  4444   00FD25  FF                 	db	255
  4445   00FD26  FF                 	db	255
  4446   00FD27  FF                 	db	255
  4447   00FD28  FF                 	db	255
  4448   00FD29  FF                 	db	255
  4449   00FD2A  FF                 	db	255
  4450   00FD2B  FF                 	db	255
  4451   00FD2C  FF                 	db	255
  4452   00FD2D  FF                 	db	255
  4453   00FD2E  FF                 	db	255
  4454   00FD2F  FF                 	db	255
  4455   00FD30  FF                 	db	255
  4456   00FD31  FF                 	db	255
  4457   00FD32  FF                 	db	255
  4458   00FD33  FF                 	db	255
  4459   00FD34  FF                 	db	255
  4460   00FD35  FF                 	db	255
  4461   00FD36  FF                 	db	255
  4462   00FD37  FF                 	db	255
  4463   00FD38  FF                 	db	255
  4464   00FD39  FF                 	db	255
  4465   00FD3A  FF                 	db	255
  4466   00FD3B  FF                 	db	255
  4467   00FD3C  FF                 	db	255
  4468   00FD3D  FF                 	db	255
  4469   00FD3E  FF                 	db	255
  4470   00FD3F  FF                 	db	255
  4471   00FD40  FF                 	db	255
  4472   00FD41  FF                 	db	255
  4473   00FD42  FF                 	db	255
  4474   00FD43  FF                 	db	255
  4475   00FD44  FF                 	db	255
  4476   00FD45  FF                 	db	255
  4477   00FD46  FF                 	db	255
  4478   00FD47  FF                 	db	255
  4479   00FD48  FF                 	db	255
  4480   00FD49  FF                 	db	255
  4481   00FD4A  FF                 	db	255
  4482   00FD4B  FF                 	db	255
  4483   00FD4C  FF                 	db	255
  4484   00FD4D  FF                 	db	255
  4485   00FD4E  FF                 	db	255
  4486   00FD4F  FF                 	db	255
  4487   00FD50  FF                 	db	255
  4488   00FD51  FF                 	db	255
  4489   00FD52  FF                 	db	255
  4490   00FD53  FF                 	db	255
  4491   00FD54  FF                 	db	255
  4492   00FD55  FF                 	db	255
  4493   00FD56  FF                 	db	255
  4494   00FD57  FF                 	db	255
  4495   00FD58  FF                 	db	255
  4496   00FD59  FF                 	db	255
  4497   00FD5A  FF                 	db	255
  4498   00FD5B  FF                 	db	255
  4499   00FD5C  FF                 	db	255
  4500   00FD5D  FF                 	db	255
  4501   00FD5E  FF                 	db	255
  4502   00FD5F  FF                 	db	255
  4503   00FD60  FF                 	db	255
  4504   00FD61  FF                 	db	255
  4505   00FD62  FF                 	db	255
  4506   00FD63  FF                 	db	255
  4507   00FD64  FF                 	db	255
  4508   00FD65  FF                 	db	255
  4509   00FD66  FF                 	db	255
  4510   00FD67  FF                 	db	255
  4511   00FD68  FF                 	db	255
  4512   00FD69  FF                 	db	255
  4513   00FD6A  FF                 	db	255
  4514   00FD6B  FF                 	db	255
  4515   00FD6C  FF                 	db	255
  4516   00FD6D  FF                 	db	255
  4517   00FD6E  FF                 	db	255
  4518   00FD6F  FF                 	db	255
  4519   00FD70  FF                 	db	255
  4520   00FD71  FF                 	db	255
  4521   00FD72  FF                 	db	255
  4522   00FD73  FF                 	db	255
  4523   00FD74  FF                 	db	255
  4524   00FD75  FF                 	db	255
  4525   00FD76  FF                 	db	255
  4526   00FD77  FF                 	db	255
  4527   00FD78  FF                 	db	255
  4528   00FD79  FF                 	db	255
  4529   00FD7A  FF                 	db	255
  4530   00FD7B  FF                 	db	255
  4531   00FD7C  FF                 	db	255
  4532   00FD7D  FF                 	db	255
  4533   00FD7E  FF                 	db	255
  4534   00FD7F  FF                 	db	255
  4535   00FD80  FF                 	db	255
  4536   00FD81  FF                 	db	255
  4537   00FD82  FF                 	db	255
  4538   00FD83  FF                 	db	255
  4539   00FD84  FF                 	db	255
  4540   00FD85  FF                 	db	255
  4541   00FD86  FF                 	db	255
  4542   00FD87  FF                 	db	255
  4543   00FD88  FF                 	db	255
  4544   00FD89  FF                 	db	255
  4545   00FD8A  FF                 	db	255
  4546   00FD8B  FF                 	db	255
  4547   00FD8C  FF                 	db	255
  4548   00FD8D  FF                 	db	255
  4549   00FD8E  FF                 	db	255
  4550   00FD8F  FF                 	db	255
  4551   00FD90  FF                 	db	255
  4552   00FD91  FF                 	db	255
  4553   00FD92  FF                 	db	255
  4554   00FD93  FF                 	db	255
  4555   00FD94  FF                 	db	255
  4556   00FD95  FF                 	db	255
  4557   00FD96  FF                 	db	255
  4558   00FD97  FF                 	db	255
  4559   00FD98  FF                 	db	255
  4560   00FD99  FF                 	db	255
  4561   00FD9A  FF                 	db	255
  4562   00FD9B  FF                 	db	255
  4563   00FD9C  FF                 	db	255
  4564   00FD9D  FF                 	db	255
  4565   00FD9E  FF                 	db	255
  4566   00FD9F  FF                 	db	255
  4567   00FDA0  FF                 	db	255
  4568   00FDA1  FF                 	db	255
  4569   00FDA2  FF                 	db	255
  4570   00FDA3  FF                 	db	255
  4571   00FDA4  FF                 	db	255
  4572   00FDA5  FF                 	db	255
  4573   00FDA6  FF                 	db	255
  4574   00FDA7  FF                 	db	255
  4575   00FDA8  FF                 	db	255
  4576   00FDA9  FF                 	db	255
  4577   00FDAA  FF                 	db	255
  4578   00FDAB  FF                 	db	255
  4579   00FDAC  FF                 	db	255
  4580   00FDAD  FF                 	db	255
  4581   00FDAE  FF                 	db	255
  4582   00FDAF  FF                 	db	255
  4583   00FDB0  FF                 	db	255
  4584   00FDB1  FF                 	db	255
  4585   00FDB2  FF                 	db	255
  4586   00FDB3  FF                 	db	255
  4587   00FDB4  FF                 	db	255
  4588   00FDB5  FF                 	db	255
  4589   00FDB6  FF                 	db	255
  4590   00FDB7  FF                 	db	255
  4591   00FDB8  FF                 	db	255
  4592   00FDB9  FF                 	db	255
  4593   00FDBA  FF                 	db	255
  4594   00FDBB  FF                 	db	255
  4595   00FDBC  FF                 	db	255
  4596   00FDBD  FF                 	db	255
  4597   00FDBE  FF                 	db	255
  4598   00FDBF  FF                 	db	255
  4599   00FDC0  FF                 	db	255
  4600   00FDC1  FF                 	db	255
  4601   00FDC2  FF                 	db	255
  4602   00FDC3  FF                 	db	255
  4603   00FDC4  FF                 	db	255
  4604   00FDC5  FF                 	db	255
  4605   00FDC6  FF                 	db	255
  4606   00FDC7  FF                 	db	255
  4607   00FDC8  FF                 	db	255
  4608   00FDC9  FF                 	db	255
  4609   00FDCA  FF                 	db	255
  4610   00FDCB  FF                 	db	255
  4611   00FDCC  FF                 	db	255
  4612   00FDCD  FF                 	db	255
  4613   00FDCE  FF                 	db	255
  4614   00FDCF  FF                 	db	255
  4615   00FDD0  FF                 	db	255
  4616   00FDD1  FF                 	db	255
  4617   00FDD2  FF                 	db	255
  4618   00FDD3  FF                 	db	255
  4619   00FDD4  FF                 	db	255
  4620   00FDD5  FF                 	db	255
  4621   00FDD6  FF                 	db	255
  4622   00FDD7  FF                 	db	255
  4623   00FDD8  FF                 	db	255
  4624   00FDD9  FF                 	db	255
  4625   00FDDA  FF                 	db	255
  4626   00FDDB  FF                 	db	255
  4627   00FDDC  FF                 	db	255
  4628   00FDDD  FF                 	db	255
  4629   00FDDE  FF                 	db	255
  4630   00FDDF  FF                 	db	255
  4631   00FDE0  FF                 	db	255
  4632   00FDE1  FF                 	db	255
  4633   00FDE2  FF                 	db	255
  4634   00FDE3  FF                 	db	255
  4635   00FDE4  FF                 	db	255
  4636   00FDE5  FF                 	db	255
  4637   00FDE6  FF                 	db	255
  4638   00FDE7  FF                 	db	255
  4639   00FDE8  FF                 	db	255
  4640   00FDE9  FF                 	db	255
  4641   00FDEA  FF                 	db	255
  4642   00FDEB  FF                 	db	255
  4643   00FDEC  FF                 	db	255
  4644   00FDED  FF                 	db	255
  4645   00FDEE  FF                 	db	255
  4646   00FDEF  FF                 	db	255
  4647   00FDF0  FF                 	db	255
  4648   00FDF1  FF                 	db	255
  4649   00FDF2  FF                 	db	255
  4650   00FDF3  FF                 	db	255
  4651   00FDF4  FF                 	db	255
  4652   00FDF5  FF                 	db	255
  4653   00FDF6  FF                 	db	255
  4654   00FDF7  FF                 	db	255
  4655   00FDF8  FF                 	db	255
  4656   00FDF9  FF                 	db	255
  4657   00FDFA  FF                 	db	255
  4658   00FDFB  FF                 	db	255
  4659   00FDFC  FF                 	db	255
  4660   00FDFD  FF                 	db	255
  4661   00FDFE  FF                 	db	255
  4662   00FDFF  FF                 	db	255
  4663   00FE00  FF                 	db	255
  4664   00FE01  FF                 	db	255
  4665   00FE02  FF                 	db	255
  4666   00FE03  FF                 	db	255
  4667   00FE04  FF                 	db	255
  4668   00FE05  FF                 	db	255
  4669   00FE06  FF                 	db	255
  4670   00FE07  FF                 	db	255
  4671   00FE08  FF                 	db	255
  4672   00FE09  FF                 	db	255
  4673   00FE0A  FF                 	db	255
  4674   00FE0B  FF                 	db	255
  4675   00FE0C  FF                 	db	255
  4676   00FE0D  FF                 	db	255
  4677   00FE0E  FF                 	db	255
  4678   00FE0F  FF                 	db	255
  4679   00FE10  FF                 	db	255
  4680   00FE11  FF                 	db	255
  4681   00FE12  FF                 	db	255
  4682   00FE13  FF                 	db	255
  4683   00FE14  FF                 	db	255
  4684   00FE15  FF                 	db	255
  4685   00FE16  FF                 	db	255
  4686   00FE17  FF                 	db	255
  4687   00FE18  FF                 	db	255
  4688   00FE19  FF                 	db	255
  4689   00FE1A  FF                 	db	255
  4690   00FE1B  FF                 	db	255
  4691   00FE1C  FF                 	db	255
  4692   00FE1D  FF                 	db	255
  4693   00FE1E  FF                 	db	255
  4694   00FE1F  FF                 	db	255
  4695   00FE20  FF                 	db	255
  4696   00FE21  FF                 	db	255
  4697   00FE22  FF                 	db	255
  4698   00FE23  FF                 	db	255
  4699   00FE24  FF                 	db	255
  4700   00FE25  FF                 	db	255
  4701   00FE26  FF                 	db	255
  4702   00FE27  FF                 	db	255
  4703   00FE28  FF                 	db	255
  4704   00FE29  FF                 	db	255
  4705   00FE2A  FF                 	db	255
  4706   00FE2B  FF                 	db	255
  4707   00FE2C  FF                 	db	255
  4708   00FE2D  FF                 	db	255
  4709   00FE2E  FF                 	db	255
  4710   00FE2F  FF                 	db	255
  4711   00FE30  FF                 	db	255
  4712   00FE31  FF                 	db	255
  4713   00FE32  FF                 	db	255
  4714   00FE33  FF                 	db	255
  4715   00FE34  FF                 	db	255
  4716   00FE35  FF                 	db	255
  4717   00FE36  FF                 	db	255
  4718   00FE37  FF                 	db	255
  4719   00FE38  FF                 	db	255
  4720   00FE39  FF                 	db	255
  4721   00FE3A  FF                 	db	255
  4722   00FE3B  FF                 	db	255
  4723   00FE3C  FF                 	db	255
  4724   00FE3D  FF                 	db	255
  4725   00FE3E  FF                 	db	255
  4726   00FE3F  FF                 	db	255
  4727   00FE40  FF                 	db	255
  4728   00FE41  FF                 	db	255
  4729   00FE42  FF                 	db	255
  4730   00FE43  FF                 	db	255
  4731   00FE44  FF                 	db	255
  4732   00FE45  FF                 	db	255
  4733   00FE46  FF                 	db	255
  4734   00FE47  FF                 	db	255
  4735   00FE48  FF                 	db	255
  4736   00FE49  FF                 	db	255
  4737   00FE4A  FF                 	db	255
  4738   00FE4B  FF                 	db	255
  4739   00FE4C  FF                 	db	255
  4740   00FE4D  FF                 	db	255
  4741   00FE4E  FF                 	db	255
  4742   00FE4F  FF                 	db	255
  4743   00FE50  FF                 	db	255
  4744   00FE51  FF                 	db	255
  4745   00FE52  FF                 	db	255
  4746   00FE53  FF                 	db	255
  4747   00FE54  FF                 	db	255
  4748   00FE55  FF                 	db	255
  4749   00FE56  FF                 	db	255
  4750   00FE57  FF                 	db	255
  4751   00FE58  FF                 	db	255
  4752   00FE59  FF                 	db	255
  4753   00FE5A  FF                 	db	255
  4754   00FE5B  FF                 	db	255
  4755   00FE5C  FF                 	db	255
  4756   00FE5D  FF                 	db	255
  4757   00FE5E  FF                 	db	255
  4758   00FE5F  FF                 	db	255
  4759   00FE60  FF                 	db	255
  4760   00FE61  FF                 	db	255
  4761   00FE62  FF                 	db	255
  4762   00FE63  FF                 	db	255
  4763   00FE64  FF                 	db	255
  4764   00FE65  FF                 	db	255
  4765   00FE66  FF                 	db	255
  4766   00FE67  FF                 	db	255
  4767   00FE68  FF                 	db	255
  4768   00FE69  FF                 	db	255
  4769   00FE6A  FF                 	db	255
  4770   00FE6B  FF                 	db	255
  4771   00FE6C  FF                 	db	255
  4772   00FE6D  FF                 	db	255
  4773   00FE6E  FF                 	db	255
  4774   00FE6F  FF                 	db	255
  4775   00FE70  FF                 	db	255
  4776   00FE71  FF                 	db	255
  4777   00FE72  FF                 	db	255
  4778   00FE73  FF                 	db	255
  4779   00FE74  FF                 	db	255
  4780   00FE75  FF                 	db	255
  4781   00FE76  FF                 	db	255
  4782   00FE77  FF                 	db	255
  4783   00FE78  FF                 	db	255
  4784   00FE79  FF                 	db	255
  4785   00FE7A  FF                 	db	255
  4786   00FE7B  FF                 	db	255
  4787   00FE7C  FF                 	db	255
  4788   00FE7D  FF                 	db	255
  4789   00FE7E  FF                 	db	255
  4790   00FE7F  FF                 	db	255
  4791   00FE80  FF                 	db	255
  4792   00FE81  FF                 	db	255
  4793   00FE82  FF                 	db	255
  4794   00FE83  FF                 	db	255
  4795   00FE84  FF                 	db	255
  4796   00FE85  FF                 	db	255
  4797   00FE86  FF                 	db	255
  4798   00FE87  FF                 	db	255
  4799   00FE88  FF                 	db	255
  4800   00FE89  FF                 	db	255
  4801   00FE8A  FF                 	db	255
  4802   00FE8B  FF                 	db	255
  4803   00FE8C  FF                 	db	255
  4804   00FE8D  FF                 	db	255
  4805   00FE8E  FF                 	db	255
  4806   00FE8F  FF                 	db	255
  4807   00FE90  FF                 	db	255
  4808   00FE91  FF                 	db	255
  4809   00FE92  FF                 	db	255
  4810   00FE93  FF                 	db	255
  4811   00FE94  FF                 	db	255
  4812   00FE95  FF                 	db	255
  4813   00FE96  FF                 	db	255
  4814   00FE97  FF                 	db	255
  4815   00FE98  FF                 	db	255
  4816   00FE99  FF                 	db	255
  4817   00FE9A  FF                 	db	255
  4818   00FE9B  FF                 	db	255
  4819   00FE9C  FF                 	db	255
  4820   00FE9D  FF                 	db	255
  4821   00FE9E  FF                 	db	255
  4822   00FE9F  FF                 	db	255
  4823   00FEA0  FF                 	db	255
  4824   00FEA1  FF                 	db	255
  4825   00FEA2  FF                 	db	255
  4826   00FEA3  FF                 	db	255
  4827   00FEA4  FF                 	db	255
  4828   00FEA5  FF                 	db	255
  4829   00FEA6  FF                 	db	255
  4830   00FEA7  FF                 	db	255
  4831   00FEA8  FF                 	db	255
  4832   00FEA9  FF                 	db	255
  4833   00FEAA  FF                 	db	255
  4834   00FEAB  FF                 	db	255
  4835   00FEAC  FF                 	db	255
  4836   00FEAD  FF                 	db	255
  4837   00FEAE  FF                 	db	255
  4838   00FEAF  FF                 	db	255
  4839   00FEB0  FF                 	db	255
  4840   00FEB1  FF                 	db	255
  4841   00FEB2  FF                 	db	255
  4842   00FEB3  FF                 	db	255
  4843   00FEB4  FF                 	db	255
  4844   00FEB5  FF                 	db	255
  4845   00FEB6  FF                 	db	255
  4846   00FEB7  FF                 	db	255
  4847   00FEB8  FF                 	db	255
  4848   00FEB9  FF                 	db	255
  4849   00FEBA  FF                 	db	255
  4850   00FEBB  FF                 	db	255
  4851   00FEBC  FF                 	db	255
  4852   00FEBD  FF                 	db	255
  4853   00FEBE  FF                 	db	255
  4854   00FEBF  FF                 	db	255
  4855   00FEC0  FF                 	db	255
  4856   00FEC1  FF                 	db	255
  4857   00FEC2  FF                 	db	255
  4858   00FEC3  FF                 	db	255
  4859   00FEC4  FF                 	db	255
  4860   00FEC5  FF                 	db	255
  4861   00FEC6  FF                 	db	255
  4862   00FEC7  FF                 	db	255
  4863   00FEC8  FF                 	db	255
  4864   00FEC9  FF                 	db	255
  4865   00FECA  FF                 	db	255
  4866   00FECB  FF                 	db	255
  4867   00FECC  FF                 	db	255
  4868   00FECD  FF                 	db	255
  4869   00FECE  FF                 	db	255
  4870   00FECF  FF                 	db	255
  4871   00FED0  FF                 	db	255
  4872   00FED1  FF                 	db	255
  4873   00FED2  FF                 	db	255
  4874   00FED3  FF                 	db	255
  4875   00FED4  FF                 	db	255
  4876   00FED5  FF                 	db	255
  4877   00FED6  FF                 	db	255
  4878   00FED7  FF                 	db	255
  4879   00FED8  FF                 	db	255
  4880   00FED9  FF                 	db	255
  4881   00FEDA  FF                 	db	255
  4882   00FEDB  FF                 	db	255
  4883   00FEDC  FF                 	db	255
  4884   00FEDD  FF                 	db	255
  4885   00FEDE  FF                 	db	255
  4886   00FEDF  FF                 	db	255
  4887   00FEE0  FF                 	db	255
  4888   00FEE1  FF                 	db	255
  4889   00FEE2  FF                 	db	255
  4890   00FEE3  FF                 	db	255
  4891   00FEE4  FF                 	db	255
  4892   00FEE5  FF                 	db	255
  4893   00FEE6  FF                 	db	255
  4894   00FEE7  FF                 	db	255
  4895   00FEE8  FF                 	db	255
  4896   00FEE9  FF                 	db	255
  4897   00FEEA  FF                 	db	255
  4898   00FEEB  FF                 	db	255
  4899   00FEEC  FF                 	db	255
  4900   00FEED  FF                 	db	255
  4901   00FEEE  FF                 	db	255
  4902   00FEEF  FF                 	db	255
  4903   00FEF0  FF                 	db	255
  4904   00FEF1  FF                 	db	255
  4905   00FEF2  FF                 	db	255
  4906   00FEF3  FF                 	db	255
  4907   00FEF4  FF                 	db	255
  4908   00FEF5  FF                 	db	255
  4909   00FEF6  FF                 	db	255
  4910   00FEF7  FF                 	db	255
  4911   00FEF8  FF                 	db	255
  4912   00FEF9  FF                 	db	255
  4913   00FEFA  FF                 	db	255
  4914   00FEFB  FF                 	db	255
  4915   00FEFC  FF                 	db	255
  4916   00FEFD  FF                 	db	255
  4917   00FEFE  FF                 	db	255
  4918   00FEFF  FF                 	db	255
  4919   00FF00  FF                 	db	255
  4920   00FF01  FF                 	db	255
  4921   00FF02  FF                 	db	255
  4922   00FF03  FF                 	db	255
  4923   00FF04  FF                 	db	255
  4924   00FF05  FF                 	db	255
  4925   00FF06  FF                 	db	255
  4926   00FF07  FF                 	db	255
  4927   00FF08  FF                 	db	255
  4928   00FF09  FF                 	db	255
  4929   00FF0A  FF                 	db	255
  4930   00FF0B  FF                 	db	255
  4931   00FF0C  FF                 	db	255
  4932   00FF0D  FF                 	db	255
  4933   00FF0E  FF                 	db	255
  4934   00FF0F  FF                 	db	255
  4935   00FF10  FF                 	db	255
  4936   00FF11  FF                 	db	255
  4937   00FF12  FF                 	db	255
  4938   00FF13  FF                 	db	255
  4939   00FF14  FF                 	db	255
  4940   00FF15  FF                 	db	255
  4941   00FF16  FF                 	db	255
  4942   00FF17  FF                 	db	255
  4943   00FF18  FF                 	db	255
  4944   00FF19  FF                 	db	255
  4945   00FF1A  FF                 	db	255
  4946   00FF1B  FF                 	db	255
  4947   00FF1C  FF                 	db	255
  4948   00FF1D  FF                 	db	255
  4949   00FF1E  FF                 	db	255
  4950   00FF1F  FF                 	db	255
  4951   00FF20  FF                 	db	255
  4952   00FF21  FF                 	db	255
  4953   00FF22  FF                 	db	255
  4954   00FF23  FF                 	db	255
  4955   00FF24  FF                 	db	255
  4956   00FF25  FF                 	db	255
  4957   00FF26  FF                 	db	255
  4958   00FF27  FF                 	db	255
  4959   00FF28  FF                 	db	255
  4960   00FF29  FF                 	db	255
  4961   00FF2A  FF                 	db	255
  4962   00FF2B  FF                 	db	255
  4963   00FF2C  FF                 	db	255
  4964   00FF2D  FF                 	db	255
  4965   00FF2E  FF                 	db	255
  4966   00FF2F  FF                 	db	255
  4967   00FF30  FF                 	db	255
  4968   00FF31  FF                 	db	255
  4969   00FF32  FF                 	db	255
  4970   00FF33  FF                 	db	255
  4971   00FF34  FF                 	db	255
  4972   00FF35  FF                 	db	255
  4973   00FF36  FF                 	db	255
  4974   00FF37  FF                 	db	255
  4975   00FF38  FF                 	db	255
  4976   00FF39  FF                 	db	255
  4977   00FF3A  FF                 	db	255
  4978   00FF3B  FF                 	db	255
  4979   00FF3C  FF                 	db	255
  4980   00FF3D  FF                 	db	255
  4981   00FF3E  FF                 	db	255
  4982   00FF3F  FF                 	db	255
  4983   00FF40  FF                 	db	255
  4984   00FF41  FF                 	db	255
  4985   00FF42  FF                 	db	255
  4986   00FF43  FF                 	db	255
  4987   00FF44  FF                 	db	255
  4988   00FF45  FF                 	db	255
  4989   00FF46  FF                 	db	255
  4990   00FF47  FF                 	db	255
  4991   00FF48  FF                 	db	255
  4992   00FF49  FF                 	db	255
  4993   00FF4A  FF                 	db	255
  4994   00FF4B  FF                 	db	255
  4995   00FF4C  FF                 	db	255
  4996   00FF4D  FF                 	db	255
  4997   00FF4E  FF                 	db	255
  4998   00FF4F  FF                 	db	255
  4999   00FF50  FF                 	db	255
  5000   00FF51  FF                 	db	255
  5001   00FF52  FF                 	db	255
  5002   00FF53  FF                 	db	255
  5003   00FF54  FF                 	db	255
  5004   00FF55  FF                 	db	255
  5005   00FF56  FF                 	db	255
  5006   00FF57  FF                 	db	255
  5007   00FF58  FF                 	db	255
  5008   00FF59  FF                 	db	255
  5009   00FF5A  FF                 	db	255
  5010   00FF5B  FF                 	db	255
  5011   00FF5C  FF                 	db	255
  5012   00FF5D  FF                 	db	255
  5013   00FF5E  FF                 	db	255
  5014   00FF5F  FF                 	db	255
  5015   00FF60  FF                 	db	255
  5016   00FF61  FF                 	db	255
  5017   00FF62  FF                 	db	255
  5018   00FF63  FF                 	db	255
  5019   00FF64  FF                 	db	255
  5020   00FF65  FF                 	db	255
  5021   00FF66  FF                 	db	255
  5022   00FF67  FF                 	db	255
  5023   00FF68  FF                 	db	255
  5024   00FF69  FF                 	db	255
  5025   00FF6A  FF                 	db	255
  5026   00FF6B  FF                 	db	255
  5027   00FF6C  FF                 	db	255
  5028   00FF6D  FF                 	db	255
  5029   00FF6E  FF                 	db	255
  5030   00FF6F  FF                 	db	255
  5031   00FF70                     __end_of_eventTable:
  5032                           	callstack 0
  5033   000000                     _paramBlock_absaddr	set	2080
  5034                           
  5035                           	psect	_paramBlock_text
  5036   000820                     __p_paramBlock_text:
  5037                           	callstack 0
  5038   000820                     _paramBlock:
  5039                           	callstack 0
  5040   000820  A5                 	db	165
  5041   000821  65                 	db	101
  5042   000822  20                 	db	32
  5043   000823  FF                 	db	255
  5044   000824  14                 	db	20
  5045   000825  7F                 	db	127
  5046   000826  03                 	db	3
  5047   000827  0B                 	db	11
  5048   000828  0F                 	db	15
  5049   000829  01                 	db	1
  5050   00082A  00                 	db	0
  5051   00082B  08                 	db	8
  5052   00082C  00                 	db	0
  5053   00082D  00                 	db	0
  5054   00082E  00                 	db	0
  5055   00082F  00                 	db	0
  5056   000830  00                 	db	0
  5057   000831  00                 	db	0
  5058   000832  01                 	db	1
  5059   000833  03                 	db	3
  5060   000834  00                 	db	0
  5061   000835  00                 	db	0
  5062   000836  00                 	db	0
  5063   000837  00                 	db	0
  5064   000838  14                 	db	20
  5065   000839  00                 	db	0
  5066   00083A  48                 	db	72
  5067   00083B  08                 	db	8
  5068   00083C  00                 	db	0
  5069   00083D  00                 	db	0
  5070   00083E  4A                 	db	74
  5071   00083F  03                 	db	3
  5072   000840                     __end_of_paramBlock:
  5073                           	callstack 0
  5074   000000                     _name_absaddr	set	2120
  5075                           
  5076                           	psect	_name_text
  5077   000848                     __p_name_text:
  5078                           	callstack 0
  5079   000848                     _name:
  5080                           	callstack 0
  5081   000848  4D                 	db	77
  5082   000849  49                 	db	73
  5083   00084A  4F                 	db	79
  5084   00084B  20                 	db	32
  5085   00084C  20                 	db	32
  5086   00084D  20                 	db	32
  5087   00084E  20                 	db	32
  5088   00084F  00                 	db	0
  5089   000850                     __end_of_name:
  5090                           	callstack 0
  5091   000000                     _COMSTATbits	set	3953
  5092   000000                     _PIR5bits	set	3959
  5093   000000                     _PIE5bits	set	3958
  5094   000000                     _TXBIEbits	set	3711
  5095   000000                     _BIE0	set	3710
  5096   000000                     _MSEL3	set	3708
  5097   000000                     _MSEL2	set	3707
  5098   000000                     _MSEL1	set	3706
  5099   000000                     _MSEL0	set	3705
  5100   000000                     _RXFBCON7	set	3704
  5101   000000                     _RXFBCON6	set	3703
  5102   000000                     _RXFBCON5	set	3702
  5103   000000                     _RXFBCON4	set	3701
  5104   000000                     _RXFBCON3	set	3700
  5105   000000                     _RXFBCON2	set	3699
  5106   000000                     _RXFBCON1	set	3698
  5107   000000                     _RXF0SIDL	set	3809
  5108   000000                     _RXM0SIDH	set	3832
  5109   000000                     _CIOCON	set	3952
  5110   000000                     _ECANCON	set	3954
  5111   000000                     _IPR5	set	3960
  5112   000000                     _EECON2	set	3966
  5113   000000                     _TMR0L	set	4054
  5114   000000                     _TMR0H	set	4055
  5115   000000                     _TMR3L	set	4018
  5116   000000                     _TMR3H	set	4019
  5117   000000                     _TMR1L	set	4046
  5118   000000                     _TMR1H	set	4047
  5119   000000                     _T3CONbits	set	4017
  5120   000000                     _ANCON1	set	3932
  5121   000000                     _ANCON0	set	3933
  5122   000000                     _B0CON	set	3712
  5123   000000                     _TXB2CONbits	set	3840
  5124   000000                     _TXB1CONbits	set	3856
  5125   000000                     _TXB0CONbits	set	3872
  5126   000000                     _EECON1	set	3967
  5127   000000                     _T0CONbits	set	4053
  5128   000000                     _LATBbits	set	3978
  5129   000000                     _TRISAbits	set	3986
  5130   000000                     _TRISBbits	set	3987
  5131   000000                     _PORTAbits	set	3968
  5132   000000                     _BRGCON1	set	3651
  5133   000000                     _BSEL0	set	3709
  5134   000000                     _WPUB	set	3931
  5135   000000                     _INTCON2bits	set	4081
  5136   000000                     _TBLPTR	set	4086
  5137   000000                     _TABLAT	set	4085
  5138   000000                     _TBLPTRU	set	4088
  5139   000000                     _INTCONbits	set	4082
  5140   000000                     _CANSTATbits	set	3950
  5141   000000                     _CANCON	set	3951
  5142   000000                     _EEDATA	set	3955
  5143   000000                     _EEADR	set	3956
  5144   000000                     _EEADRH	set	3957
  5145   000000                     _EECON1bits	set	3967
  5146   000000                     _PORTA	set	3968
  5147   000000                     _LATA	set	3977
  5148   000000                     _TRISA	set	3986
  5149   000000                     _RXB0CON	set	3936
  5150   000000                     _OSCTUNEbits	set	3995
  5151   000000                     _PIE1bits	set	3997
  5152   000000                     _PIR1bits	set	3998
  5153   000000                     _TRISC	set	3988
  5154   000000                     _TRISB	set	3987
  5155   000000                     _PIE2bits	set	4000
  5156   000000                     _PIR2bits	set	4001
  5157   000000                     _T1GCONbits	set	4010
  5158   000000                     _LATC	set	3979
  5159   000000                     _LATB	set	3978
  5160   000000                     _PORTC	set	3970
  5161   000000                     _PORTB	set	3969
  5162   000000                     _T3GCONbits	set	4016
  5163   000000                     _T1CONbits	set	4045
  5164   000000                     _RCONbits	set	4048
  5165   000000                     _T0CON	set	4053
  5166   000000                     _EEIF	set	32190
  5167   000000                     _RXFBCON0	set	3697
  5168   000000                     _BRGCON3	set	3653
  5169   000000                     _BRGCON2	set	3652
  5170   000000                     _TXB2SIDL	set	3842
  5171   000000                     _TXB2SIDH	set	3841
  5172   000000                     _TXB2DLC	set	3845
  5173   000000                     _TXB2CON	set	3840
  5174   000000                     _TXB1CON	set	3856
  5175   000000                     _TXB0CON	set	3872
  5176   000000                     _RXM1EIDL	set	3839
  5177   000000                     _RXM1EIDH	set	3838
  5178   000000                     _RXM1SIDL	set	3837
  5179   000000                     _RXM1SIDH	set	3836
  5180   000000                     _RXM0EIDL	set	3835
  5181   000000                     _RXM0EIDH	set	3834
  5182   000000                     _RXM0SIDL	set	3833
  5183   000000                     _RXB1CON	set	3888
  5184   000000                     _B1CON	set	3728
  5185   000000                     _B2CON	set	3744
  5186   000000                     _B3CON	set	3760
  5187   000000                     _B4CON	set	3776
  5188   000000                     _B5CON	set	3792
  5189   000000                     _TXB0SIDL	set	3874
  5190   000000                     _TXB0SIDH	set	3873
  5191   000000                     _TXB0DLC	set	3877
  5192   000000                     _TXB0D7	set	3885
  5193   000000                     _TXB0D6	set	3884
  5194   000000                     _TXB0D5	set	3883
  5195   000000                     _TXB0D4	set	3882
  5196   000000                     _TXB0D3	set	3881
  5197   000000                     _TXB0D2	set	3880
  5198   000000                     _TXB0D1	set	3879
  5199   000000                     _TXB0D0	set	3878
  5200   000000                     _TXB1SIDL	set	3858
  5201   000000                     _TXB1SIDH	set	3857
  5202   000000                     _TXB1DLC	set	3861
  5203                           
  5204                           ; #config settings
  5205                           
  5206                           	psect	cinit
  5207   00AE94                     __pcinit:
  5208                           	callstack 0
  5209   00AE94                     start_initialization:
  5210                           	callstack 0
  5211   00AE94                     __initialization:
  5212                           	callstack 0
  5213                           
  5214                           ; Clear objects allocated to BIGRAM (928 bytes)
  5215   00AE94  EE04  F0C8         	lfsr	0,__pbssBIGRAM
  5216   00AE98  EE13 F0A0          	lfsr	1,928
  5217   00AE9C                     clear_0:
  5218   00AE9C  6AEE               	clrf	postinc0,c
  5219   00AE9E  50E5               	movf	postdec1,w,c
  5220   00AEA0  50E1               	movf	fsr1l,w,c
  5221   00AEA2  E1FC               	bnz	clear_0
  5222   00AEA4  50E2               	movf	fsr1h,w,c
  5223   00AEA6  E1FA               	bnz	clear_0
  5224                           
  5225                           ; Clear objects allocated to BANK4 (200 bytes)
  5226   00AEA8  EE04  F000         	lfsr	0,__pbssBANK4
  5227   00AEAC  0EC8               	movlw	200
  5228   00AEAE                     clear_1:
  5229   00AEAE  6AEE               	clrf	postinc0,c
  5230   00AEB0  06E8               	decf	wreg,f,c
  5231   00AEB2  E1FD               	bnz	clear_1
  5232                           
  5233                           ; Clear objects allocated to BANK3 (200 bytes)
  5234   00AEB4  EE03  F000         	lfsr	0,__pbssBANK3
  5235   00AEB8  0EC8               	movlw	200
  5236   00AEBA                     clear_2:
  5237   00AEBA  6AEE               	clrf	postinc0,c
  5238   00AEBC  06E8               	decf	wreg,f,c
  5239   00AEBE  E1FD               	bnz	clear_2
  5240                           
  5241                           ; Clear objects allocated to BANK2 (244 bytes)
  5242   00AEC0  EE02  F000         	lfsr	0,__pbssBANK2
  5243   00AEC4  0EF4               	movlw	244
  5244   00AEC6                     clear_3:
  5245   00AEC6  6AEE               	clrf	postinc0,c
  5246   00AEC8  06E8               	decf	wreg,f,c
  5247   00AECA  E1FD               	bnz	clear_3
  5248                           
  5249                           ; Clear objects allocated to BANK1 (190 bytes)
  5250   00AECC  EE01  F000         	lfsr	0,__pbssBANK1
  5251   00AED0  0EBE               	movlw	190
  5252   00AED2                     clear_4:
  5253   00AED2  6AEE               	clrf	postinc0,c
  5254   00AED4  06E8               	decf	wreg,f,c
  5255   00AED6  E1FD               	bnz	clear_4
  5256                           
  5257                           ; Clear objects allocated to BANK0 (41 bytes)
  5258   00AED8  EE00  F0AA         	lfsr	0,__pbssBANK0
  5259   00AEDC  0E29               	movlw	41
  5260   00AEDE                     clear_5:
  5261   00AEDE  6AEE               	clrf	postinc0,c
  5262   00AEE0  06E8               	decf	wreg,f,c
  5263   00AEE2  E1FD               	bnz	clear_5
  5264                           
  5265                           ; Clear objects allocated to COMRAM (42 bytes)
  5266   00AEE4  EE00  F001         	lfsr	0,__pbssCOMRAM
  5267   00AEE8  0E2A               	movlw	42
  5268   00AEEA                     clear_6:
  5269   00AEEA  6AEE               	clrf	postinc0,c
  5270   00AEEC  06E8               	decf	wreg,f,c
  5271   00AEEE  E1FD               	bnz	clear_6
  5272   00AEF0                     end_of_initialization:
  5273                           	callstack 0
  5274   00AEF0                     __end_of__initialization:
  5275                           	callstack 0
  5276   00AEF0  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5277   00AEF2  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5278   00AEF4  0100               	movlb	0
  5279   00AEF6  EF03  F05C         	goto	_main	;jump to C main() function
  5280                           
  5281                           	psect	bssCOMRAM
  5282   000001                     __pbssCOMRAM:
  5283                           	callstack 0
  5284   000001                     _targetPos:
  5285                           	callstack 0
  5286   000001                     	ds	16
  5287   000011                     _enumerationStartTime:
  5288                           	callstack 0
  5289   000011                     	ds	4
  5290   000015                     _canTransmitTimeout:
  5291                           	callstack 0
  5292   000015                     	ds	4
  5293   000019                     _startWait:
  5294                           	callstack 0
  5295   000019                     	ds	4
  5296   00001D                     _startTime:
  5297                           	callstack 0
  5298   00001D                     	ds	4
  5299   000021                     _timedResponseCallback:
  5300                           	callstack 0
  5301   000021                     	ds	2
  5302   000023                     _EnumerationState:
  5303                           	callstack 0
  5304   000023                     	ds	1
  5305   000024                     _eeBootFlag:
  5306                           	callstack 0
  5307   000024                     	ds	1
  5308   000025                     _expedited:
  5309                           	callstack 0
  5310   000025                     	ds	1
  5311   000026                     _rxQueue:
  5312                           	callstack 0
  5313   000026                     	ds	5
  5314                           
  5315                           	psect	bssBANK0
  5316   0000AA                     __pbssBANK0:
  5317                           	callstack 0
  5318   0000AA                     _pbTimer:
  5319                           	callstack 0
  5320   0000AA                     	ds	4
  5321   0000AE                     _flashBlock:
  5322                           	callstack 0
  5323   0000AE                     	ds	2
  5324   0000B0                     _flashCounter:
  5325                           	callstack 0
  5326   0000B0                     	ds	2
  5327   0000B2                     _ledState:
  5328                           	callstack 0
  5329   0000B2                     	ds	2
  5330   0000B4                     _nn:
  5331                           	callstack 0
  5332   0000B4                     	ds	2
  5333   0000B6                     _enumerationState:
  5334                           	callstack 0
  5335   0000B6                     	ds	1
  5336   0000B7                     _canTransmitFailed:
  5337                           	callstack 0
  5338   0000B7                     	ds	1
  5339   0000B8                     _canId:
  5340                           	callstack 0
  5341   0000B8                     	ds	1
  5342   0000B9                     _flashFlags:
  5343                           	callstack 0
  5344   0000B9                     	ds	1
  5345   0000BA                     _timedResponseStep:
  5346                           	callstack 0
  5347   0000BA                     	ds	1
  5348   0000BB                     _timedResponseType:
  5349                           	callstack 0
  5350   0000BB                     	ds	1
  5351   0000BC                     _timedResponseAllServicesFlag:
  5352                           	callstack 0
  5353   0000BC                     	ds	1
  5354   0000BD                     _timedResponseServiceIndex:
  5355                           	callstack 0
  5356   0000BD                     	ds	1
  5357   0000BE                     _heartbeatSequence:
  5358                           	callstack 0
  5359   0000BE                     	ds	1
  5360   0000BF                     _setupModePreviousMode:
  5361                           	callstack 0
  5362   0000BF                     	ds	1
  5363   0000C0                     _last_mode_flags:
  5364                           	callstack 0
  5365   0000C0                     	ds	1
  5366   0000C1                     _last_mode_state:
  5367                           	callstack 0
  5368   0000C1                     	ds	1
  5369   0000C2                     _mode_state:
  5370                           	callstack 0
  5371   0000C2                     	ds	1
  5372   0000C3                     _timerExtension2:
  5373                           	callstack 0
  5374   0000C3                     	ds	1
  5375   0000C4                     _timerExtension1:
  5376                           	callstack 0
  5377   0000C4                     	ds	1
  5378   0000C5                     _servoInBlock:
  5379                           	callstack 0
  5380   0000C5                     	ds	1
  5381   0000C6                     _expeditedWriteIndex:
  5382                           	callstack 0
  5383   0000C6                     	ds	1
  5384   0000C7                     _expeditedReadIndex:
  5385                           	callstack 0
  5386   0000C7                     	ds	1
  5387   0000C8                     _normalWriteIndex:
  5388                           	callstack 0
  5389   0000C8                     	ds	1
  5390   0000C9                     _normalReadIndex:
  5391                           	callstack 0
  5392   0000C9                     	ds	1
  5393   0000CA                     _io@inputs$F843:
  5394                           	callstack 0
  5395   0000CA                     	ds	1
  5396   0000CB                     _io:
  5397                           	callstack 0
  5398   0000CB                     	ds	1
  5399   0000CC                     _started:
  5400                           	callstack 0
  5401   0000CC                     	ds	1
  5402   0000CD                     _nvDiagnostics:
  5403                           	callstack 0
  5404   0000CD                     	ds	4
  5405   0000D1                     _ackDiagnostics:
  5406                           	callstack 0
  5407   0000D1                     	ds	2
  5408                           
  5409                           	psect	bssBANK1
  5410   000100                     __pbssBANK1:
  5411                           	callstack 0
  5412   000100                     _speed:
  5413                           	callstack 0
  5414   000100                     	ds	32
  5415   000120                     _stepsPerPollSpeed:
  5416                           	callstack 0
  5417   000120                     	ds	16
  5418   000130                     _servoState:
  5419                           	callstack 0
  5420   000130                     	ds	16
  5421   000140                     _currentPos:
  5422                           	callstack 0
  5423   000140                     	ds	16
  5424   000150                     _expeditedQueueBuf:
  5425                           	callstack 0
  5426   000150                     	ds	8
  5427   000158                     _flashFlushTime:
  5428                           	callstack 0
  5429   000158                     	ds	4
  5430   00015C                     _timedResponseTime:
  5431                           	callstack 0
  5432   00015C                     	ds	4
  5433   000160                     _ledTimer:
  5434                           	callstack 0
  5435   000160                     	ds	4
  5436   000164                     _uptimeTimer:
  5437                           	callstack 0
  5438   000164                     	ds	4
  5439   000168                     _heartbeatTimer:
  5440                           	callstack 0
  5441   000168                     	ds	4
  5442   00016C                     _lastActionPollTime:
  5443                           	callstack 0
  5444   00016C                     	ds	4
  5445   000170                     _lastInputScanTime:
  5446                           	callstack 0
  5447   000170                     	ds	4
  5448   000174                     _lastServoStartTime:
  5449                           	callstack 0
  5450   000174                     	ds	4
  5451   000178                     _previousNN:
  5452                           	callstack 0
  5453   000178                     	ds	2
  5454   00017A                     _transport:
  5455                           	callstack 0
  5456   00017A                     	ds	2
  5457   00017C                     _timedResponseDelay:
  5458                           	callstack 0
  5459   00017C                     	ds	1
  5460   00017D                     _mode_flags:
  5461                           	callstack 0
  5462   00017D                     	ds	1
  5463   00017E                     _canDiagnostics:
  5464                           	callstack 0
  5465   00017E                     	ds	32
  5466   00019E                     _mnsDiagnostics:
  5467                           	callstack 0
  5468   00019E                     	ds	12
  5469   0001AA                     _tmpMessage:
  5470                           	callstack 0
  5471   0001AA                     	ds	9
  5472   0001B3                     _txQueue:
  5473                           	callstack 0
  5474   0001B3                     	ds	5
  5475   0001B8                     _teachDiagnostics:
  5476                           	callstack 0
  5477   0001B8                     	ds	2
  5478   0001BA                     _producerDiagnostics:
  5479                           	callstack 0
  5480   0001BA                     	ds	2
  5481   0001BC                     _consumer2QDiagnostics:
  5482                           	callstack 0
  5483   0001BC                     	ds	2
  5484                           
  5485                           	psect	bssBANK2
  5486   000200                     __pbssBANK2:
  5487                           	callstack 0
  5488   000200                     _ticksWhenStopped:
  5489                           	callstack 0
  5490   000200                     	ds	64
  5491   000240                     _evs:
  5492                           	callstack 0
  5493   000240                     	ds	20
  5494   000254                     _enumerationResults:
  5495                           	callstack 0
  5496   000254                     	ds	16
  5497   000264                     _bounceState:
  5498                           	callstack 0
  5499   000264                     	ds	16
  5500   000274                     _loopCount:
  5501                           	callstack 0
  5502   000274                     	ds	16
  5503   000284                     _pollCount:
  5504                           	callstack 0
  5505   000284                     	ds	16
  5506   000294                     _pollsPerStepSpeed:
  5507                           	callstack 0
  5508   000294                     	ds	16
  5509   0002A4                     _delayCount:
  5510                           	callstack 0
  5511   0002A4                     	ds	16
  5512   0002B4                     _outputState:
  5513                           	callstack 0
  5514   0002B4                     	ds	16
  5515   0002C4                     _inputState:
  5516                           	callstack 0
  5517   0002C4                     	ds	16
  5518   0002D4                     _flashDelays:
  5519                           	callstack 0
  5520   0002D4                     	ds	16
  5521   0002E4                     _pulseDelays:
  5522                           	callstack 0
  5523   0002E4                     	ds	16
  5524                           
  5525                           	psect	bssBANK3
  5526   000300                     __pbssBANK3:
  5527                           	callstack 0
  5528   000300                     _happening2Event:
  5529                           	callstack 0
  5530   000300                     	ds	72
  5531   000348                     _flashBuffer:
  5532                           	callstack 0
  5533   000348                     	ds	64
  5534   000388                     _normalQueueBuf:
  5535                           	callstack 0
  5536   000388                     	ds	64
  5537                           
  5538                           	psect	bssBANK4
  5539   000400                     __pbssBANK4:
  5540                           	callstack 0
  5541   000400                     _nvCache:
  5542                           	callstack 0
  5543   000400                     	ds	128
  5544   000480                     _txBuffers:
  5545                           	callstack 0
  5546   000480                     	ds	72
  5547                           
  5548                           	psect	bssBIGRAM
  5549   0004C8                     __pbssBIGRAM:
  5550                           	callstack 0
  5551   0004C8                     _eventChains:
  5552                           	callstack 0
  5553   0004C8                     	ds	640
  5554   000748                     _rxBuffers:
  5555                           	callstack 0
  5556   000748                     	ds	288
  5557                           
  5558                           	psect	cstackBANK3
  5559   0003C8                     __pcstackBANK3:
  5560                           	callstack 0
  5561   0003C8                     ??_mnsProcessMessage:
  5562   0003C8                     consumer2QProcessMessage@end:
  5563                           	callstack 0
  5564                           
  5565                           ; 1 bytes @ 0x0
  5566   0003C8                     	ds	1
  5567   0003C9                     consumer2QProcessMessage@change:
  5568                           	callstack 0
  5569                           
  5570                           ; 1 bytes @ 0x1
  5571   0003C9                     	ds	1
  5572   0003CA                     consumer2QProcessMessage@opc:
  5573                           	callstack 0
  5574                           
  5575                           ; 1 bytes @ 0x2
  5576   0003CA                     	ds	1
  5577   0003CB                     consumer2QProcessMessage@nextAction:
  5578                           	callstack 0
  5579                           
  5580                           ; 1 bytes @ 0x3
  5581   0003CB                     	ds	1
  5582   0003CC                     consumer2QProcessMessage@firstAction:
  5583                           	callstack 0
  5584                           
  5585                           ; 1 bytes @ 0x4
  5586   0003CC                     	ds	1
  5587   0003CD                     consumer2QProcessMessage@tableIndex:
  5588                           	callstack 0
  5589                           
  5590                           ; 1 bytes @ 0x5
  5591   0003CD                     	ds	1
  5592   0003CE                     consumer2QProcessMessage@nextSimultaneous:
  5593                           	callstack 0
  5594                           
  5595                           ; 1 bytes @ 0x6
  5596   0003CE                     	ds	1
  5597   0003CF                     consumer2QProcessMessage@io:
  5598                           	callstack 0
  5599                           
  5600                           ; 1 bytes @ 0x7
  5601   0003CF                     	ds	1
  5602   0003D0                     consumer2QProcessMessage@masked_action:
  5603                           	callstack 0
  5604                           
  5605                           ; 1 bytes @ 0x8
  5606   0003D0                     	ds	1
  5607   0003D1                     consumer2QProcessMessage@ca:
  5608                           	callstack 0
  5609                           
  5610                           ; 1 bytes @ 0x9
  5611   0003D1                     	ds	1
  5612   0003D2                     consumer2QProcessMessage@e:
  5613                           	callstack 0
  5614                           
  5615                           ; 1 bytes @ 0xA
  5616   0003D2                     	ds	1
  5617   0003D3                     consumer2QProcessMessage@action:
  5618                           	callstack 0
  5619                           
  5620                           ; 1 bytes @ 0xB
  5621   0003D3                     	ds	19
  5622   0003E6                     ??_poll:
  5623                           
  5624                           ; 1 bytes @ 0x1E
  5625   0003E6                     	ds	4
  5626   0003EA                     poll@handled:
  5627                           	callstack 0
  5628                           
  5629                           ; 1 bytes @ 0x22
  5630   0003EA                     	ds	1
  5631   0003EB                     poll@i:
  5632                           	callstack 0
  5633                           
  5634                           ; 1 bytes @ 0x23
  5635   0003EB                     	ds	1
  5636   0003EC                     poll@m:
  5637                           	callstack 0
  5638                           
  5639                           ; 9 bytes @ 0x24
  5640   0003EC                     	ds	9
  5641                           
  5642                           	psect	cstackBANK2
  5643   0002F4                     __pcstackBANK2:
  5644                           	callstack 0
  5645   0002F4                     ??_consumer2QProcessMessage:
  5646   0002F4                     ??_bootProcessMessage:
  5647   0002F4                     ??_ackEventProcessMessage:
  5648   0002F4                     ??_producerProcessMessage:
  5649   0002F4                     ??_teachProcessMessage:
  5650   0002F4                     ??_nvProcessMessage:
  5651   0002F4                     ??_canProcessMessage:
  5652   0002F4                     mnsProcessMessage@i:
  5653                           	callstack 0
  5654                           
  5655                           ; 1 bytes @ 0x0
  5656   0002F4                     	ds	1
  5657   0002F5                     mnsProcessMessage@d:
  5658                           	callstack 0
  5659                           
  5660                           ; 2 bytes @ 0x1
  5661   0002F5                     	ds	1
  5662   0002F6                     ackEventProcessMessage@ev:
  5663                           	callstack 0
  5664   0002F6                     nvProcessMessage@valueOrError:
  5665                           	callstack 0
  5666                           
  5667                           ; 2 bytes @ 0x2
  5668   0002F6                     	ds	1
  5669   0002F7                     mnsProcessMessage@newMode:
  5670                           	callstack 0
  5671                           
  5672                           ; 1 bytes @ 0x3
  5673   0002F7                     	ds	1
  5674   0002F8                     ackEventProcessMessage@eventEN:
  5675                           	callstack 0
  5676                           
  5677                           ; 2 bytes @ 0x4
  5678   0002F8                     	ds	2
  5679   0002FA                     ackEventProcessMessage@eventIndex:
  5680                           	callstack 0
  5681                           
  5682                           ; 1 bytes @ 0x6
  5683   0002FA                     	ds	1
  5684   0002FB                     ackEventProcessMessage@eventNN:
  5685                           	callstack 0
  5686                           
  5687                           ; 2 bytes @ 0x7
  5688   0002FB                     	ds	1
  5689   0002FC                     producerProcessMessage@ev:
  5690                           	callstack 0
  5691                           
  5692                           ; 2 bytes @ 0x8
  5693   0002FC                     	ds	2
  5694   0002FE                     producerProcessMessage@h:
  5695                           	callstack 0
  5696                           
  5697                           ; 1 bytes @ 0xA
  5698   0002FE                     	ds	1
  5699   0002FF                     producerProcessMessage@index:
  5700                           	callstack 0
  5701                           
  5702                           ; 1 bytes @ 0xB
  5703   0002FF                     	ds	1
  5704                           
  5705                           	psect	cstackBANK1
  5706   0001BE                     __pcstackBANK1:
  5707                           	callstack 0
  5708   0001BE                     ??_rebuildHashtable:
  5709   0001BE                     sendMessage@len:
  5710                           	callstack 0
  5711   0001BE                     writeNVM@type:
  5712                           	callstack 0
  5713   0001BE                     findEvent@nodeNumber:
  5714                           	callstack 0
  5715                           
  5716                           ; 2 bytes @ 0x0
  5717   0001BE                     	ds	1
  5718   0001BF                     ??_configIO:
  5719   0001BF                     ??_nvFactoryReset:
  5720   0001BF                     saveNV@value:
  5721                           	callstack 0
  5722   0001BF                     sendMessage@data1:
  5723                           	callstack 0
  5724   0001BF                     setNewCanId@newCanId:
  5725                           	callstack 0
  5726                           
  5727                           ; 1 bytes @ 0x1
  5728   0001BF                     	ds	1
  5729   0001C0                     ??_saveNV:
  5730   0001C0                     ??_processEnumeration:
  5731   0001C0                     sendMessage@data2:
  5732                           	callstack 0
  5733   0001C0                     findEvent@eventNumber:
  5734                           	callstack 0
  5735                           
  5736                           ; 2 bytes @ 0x2
  5737   0001C0                     	ds	1
  5738   0001C1                     nvFactoryReset@i:
  5739                           	callstack 0
  5740   0001C1                     sendMessage@data3:
  5741                           	callstack 0
  5742   0001C1                     _configIO$7955:
  5743                           	callstack 0
  5744   0001C1                     rebuildHashtable@ev:
  5745                           	callstack 0
  5746                           
  5747                           ; 2 bytes @ 0x3
  5748   0001C1                     	ds	1
  5749   0001C2                     ??_findEvent:
  5750   0001C2                     saveNV@index:
  5751                           	callstack 0
  5752   0001C2                     sendMessage@data4:
  5753                           	callstack 0
  5754   0001C2                     _configIO$741:
  5755                           	callstack 0
  5756                           
  5757                           ; 2 bytes @ 0x4
  5758   0001C2                     	ds	1
  5759   0001C3                     defaultNVs@type:
  5760                           	callstack 0
  5761   0001C3                     rebuildHashtable@hash:
  5762                           	callstack 0
  5763   0001C3                     sendMessage@data5:
  5764                           	callstack 0
  5765                           
  5766                           ; 1 bytes @ 0x5
  5767   0001C3                     	ds	1
  5768   0001C4                     ??_defaultNVs:
  5769   0001C4                     configIO@action:
  5770                           	callstack 0
  5771   0001C4                     rebuildHashtable@happening:
  5772                           	callstack 0
  5773   0001C4                     sendMessage@data6:
  5774                           	callstack 0
  5775   0001C4                     processEnumeration@enumResult:
  5776                           	callstack 0
  5777   0001C4                     findEvent@nn:
  5778                           	callstack 0
  5779                           
  5780                           ; 2 bytes @ 0x6
  5781   0001C4                     	ds	1
  5782   0001C5                     configIO@type:
  5783                           	callstack 0
  5784   0001C5                     rebuildHashtable@chainIdx:
  5785                           	callstack 0
  5786   0001C5                     sendMessage@data7:
  5787                           	callstack 0
  5788   0001C5                     processEnumeration@newCanId:
  5789                           	callstack 0
  5790                           
  5791                           ; 1 bytes @ 0x7
  5792   0001C5                     	ds	1
  5793   0001C6                     ??_doNnevn:
  5794   0001C6                     configIO@i:
  5795                           	callstack 0
  5796   0001C6                     defaultNVs@io:
  5797                           	callstack 0
  5798   0001C6                     doRqevn@count:
  5799                           	callstack 0
  5800   0001C6                     rebuildHashtable@tableIndex:
  5801                           	callstack 0
  5802   0001C6                     sendMessage4@opc:
  5803                           	callstack 0
  5804   0001C6                     sendMessage5@data1:
  5805                           	callstack 0
  5806   0001C6                     sendMessage6@data1:
  5807                           	callstack 0
  5808   0001C6                     sendMessage7@data1:
  5809                           	callstack 0
  5810   0001C6                     processEnumeration@i:
  5811                           	callstack 0
  5812   0001C6                     findEvent@en:
  5813                           	callstack 0
  5814                           
  5815                           ; 2 bytes @ 0x8
  5816   0001C6                     	ds	1
  5817   0001C7                     ??_clearAllEvents:
  5818   0001C7                     ??_removeTableEntry:
  5819   0001C7                     ??_powerUp:
  5820   0001C7                     defaultNVs@i:
  5821                           	callstack 0
  5822   0001C7                     sendProducedEvent@onOff:
  5823                           	callstack 0
  5824   0001C7                     doRqevn@i:
  5825                           	callstack 0
  5826   0001C7                     sendMessage5@data2:
  5827                           	callstack 0
  5828   0001C7                     sendMessage6@data2:
  5829                           	callstack 0
  5830   0001C7                     sendMessage7@data2:
  5831                           	callstack 0
  5832   0001C7                     canReceiveMessage@m:
  5833                           	callstack 0
  5834                           
  5835                           ; 2 bytes @ 0x9
  5836   0001C7                     	ds	1
  5837   0001C8                     findEvent@hash:
  5838                           	callstack 0
  5839   0001C8                     sendMessage5@data3:
  5840                           	callstack 0
  5841   0001C8                     sendMessage6@data3:
  5842                           	callstack 0
  5843   0001C8                     sendMessage7@data3:
  5844                           	callstack 0
  5845                           
  5846                           ; 1 bytes @ 0xA
  5847   0001C8                     	ds	1
  5848   0001C9                     sendProducedEvent@opc:
  5849                           	callstack 0
  5850   0001C9                     findEvent@chainIdx:
  5851                           	callstack 0
  5852   0001C9                     sendMessage5@data4:
  5853                           	callstack 0
  5854   0001C9                     sendMessage6@data4:
  5855                           	callstack 0
  5856   0001C9                     sendMessage7@data4:
  5857                           	callstack 0
  5858                           
  5859                           ; 1 bytes @ 0xB
  5860   0001C9                     	ds	1
  5861   0001CA                     doNnevn@f:
  5862                           	callstack 0
  5863   0001CA                     findEvent@tableIndex:
  5864                           	callstack 0
  5865   0001CA                     sendMessage5@data5:
  5866                           	callstack 0
  5867   0001CA                     sendMessage6@data5:
  5868                           	callstack 0
  5869   0001CA                     sendMessage7@data5:
  5870                           	callstack 0
  5871   0001CA                     canReceiveMessage@messageAvailable:
  5872                           	callstack 0
  5873   0001CA                     sendProducedEvent@producedEventEN:
  5874                           	callstack 0
  5875                           
  5876                           ; 2 bytes @ 0xC
  5877   0001CA                     	ds	1
  5878   0001CB                     ??_mnsPoll:
  5879   0001CB                     clearAllEvents@tableIndex:
  5880                           	callstack 0
  5881   0001CB                     doNnevn@count:
  5882                           	callstack 0
  5883   0001CB                     doNenrd@index:
  5884                           	callstack 0
  5885   0001CB                     doReval@evNum:
  5886                           	callstack 0
  5887   0001CB                     removeTableEntry@f:
  5888                           	callstack 0
  5889   0001CB                     powerUp@i:
  5890                           	callstack 0
  5891   0001CB                     sendMessage6@data6:
  5892                           	callstack 0
  5893   0001CB                     sendMessage7@data6:
  5894                           	callstack 0
  5895   0001CB                     checkLen@m:
  5896                           	callstack 0
  5897   0001CB                     canReceiveMessage@mp:
  5898                           	callstack 0
  5899                           
  5900                           ; 2 bytes @ 0xD
  5901   0001CB                     	ds	1
  5902   0001CC                     ??_doReval:
  5903   0001CC                     sendProducedEvent@happening:
  5904                           	callstack 0
  5905   0001CC                     doNnevn@i:
  5906                           	callstack 0
  5907   0001CC                     removeTableEntry@tableIndex:
  5908                           	callstack 0
  5909   0001CC                     sendMessage7@data7:
  5910                           	callstack 0
  5911   0001CC                     doNenrd@nodeNumber:
  5912                           	callstack 0
  5913   0001CC                     doReqev@nodeNumber:
  5914                           	callstack 0
  5915                           
  5916                           ; 2 bytes @ 0xE
  5917   0001CC                     	ds	1
  5918   0001CD                     doReval@evIndex:
  5919                           	callstack 0
  5920   0001CD                     checkRemoveTableEntry@tableIndex:
  5921                           	callstack 0
  5922   0001CD                     mnsTRallDiagnosticsCallback@serviceIndex:
  5923                           	callstack 0
  5924   0001CD                     nvTRnvrdCallback@serviceIndex:
  5925                           	callstack 0
  5926   0001CD                     checkLen@needed:
  5927                           	callstack 0
  5928   0001CD                     sendProducedEvent@producedEventNN:
  5929                           	callstack 0
  5930   0001CD                     removeEvent@nodeNumber:
  5931                           	callstack 0
  5932   0001CD                     canReceiveMessage@p:
  5933                           	callstack 0
  5934                           
  5935                           ; 2 bytes @ 0xF
  5936   0001CD                     	ds	1
  5937   0001CE                     nerdCallback@step:
  5938                           	callstack 0
  5939   0001CE                     doReval@enNum:
  5940                           	callstack 0
  5941   0001CE                     reqevCallback@step:
  5942                           	callstack 0
  5943   0001CE                     checkRemoveTableEntry@e:
  5944                           	callstack 0
  5945   0001CE                     mnsTRserviceDiscoveryCallback@step:
  5946                           	callstack 0
  5947   0001CE                     mnsTRallDiagnosticsCallback@step:
  5948                           	callstack 0
  5949   0001CE                     mnsTRrqnpnCallback@step:
  5950                           	callstack 0
  5951   0001CE                     nvTRnvrdCallback@step:
  5952                           	callstack 0
  5953   0001CE                     checkLen@service:
  5954                           	callstack 0
  5955   0001CE                     doNenrd@eventNumber:
  5956                           	callstack 0
  5957   0001CE                     doReqev@eventNumber:
  5958                           	callstack 0
  5959                           
  5960                           ; 2 bytes @ 0x10
  5961   0001CE                     	ds	1
  5962   0001CF                     ??_inputScan:
  5963   0001CF                     ??_pollServos:
  5964   0001CF                     ??_reqevCallback:
  5965   0001CF                     ??_mnsTRallDiagnosticsCallback:
  5966   0001CF                     ??_mnsTRserviceDiscoveryCallback:
  5967   0001CF                     sendInvertedProducedEvent@state:
  5968                           	callstack 0
  5969   0001CF                     alwaysSendInvertedProducedEvent@state:
  5970                           	callstack 0
  5971   0001CF                     writeEv@evNum:
  5972                           	callstack 0
  5973   0001CF                     ackEventCheckLen@m:
  5974                           	callstack 0
  5975   0001CF                     teachCheckLen@m:
  5976                           	callstack 0
  5977   0001CF                     nerdCallback@nodeNumber:
  5978                           	callstack 0
  5979   0001CF                     doReval@evVal:
  5980                           	callstack 0
  5981   0001CF                     removeEvent@eventNumber:
  5982                           	callstack 0
  5983   0001CF                     nvTRnvrdCallback@valueOrError:
  5984                           	callstack 0
  5985                           
  5986                           ; 2 bytes @ 0x11
  5987   0001CF                     	ds	1
  5988   0001D0                     processOutputs@io:
  5989                           	callstack 0
  5990   0001D0                     sendInvertedProducedEvent@invert:
  5991                           	callstack 0
  5992   0001D0                     alwaysSendInvertedProducedEvent@invert:
  5993                           	callstack 0
  5994   0001D0                     doNenrd@tableIndex:
  5995                           	callstack 0
  5996   0001D0                     doReqev@evNum:
  5997                           	callstack 0
  5998   0001D0                     writeEv@evVal:
  5999                           	callstack 0
  6000                           
  6001                           ; 1 bytes @ 0x12
  6002   0001D0                     	ds	1
  6003   0001D1                     ??_writeEv:
  6004   0001D1                     inputScan@change:
  6005                           	callstack 0
  6006   0001D1                     sendInvertedProducedEvent@can_send_on:
  6007                           	callstack 0
  6008   0001D1                     alwaysSendInvertedProducedEvent@action:
  6009                           	callstack 0
  6010   0001D1                     ackEventCheckLen@needed:
  6011                           	callstack 0
  6012   0001D1                     teachCheckLen@needed:
  6013                           	callstack 0
  6014   0001D1                     doReval@tableIndex:
  6015                           	callstack 0
  6016   0001D1                     removeEvent@tableIndex:
  6017                           	callstack 0
  6018   0001D1                     nerdCallback@eventNumber:
  6019                           	callstack 0
  6020   0001D1                     doReqev@evVal:
  6021                           	callstack 0
  6022                           
  6023                           ; 2 bytes @ 0x13
  6024   0001D1                     	ds	1
  6025   0001D2                     inputScan@input:
  6026                           	callstack 0
  6027   0001D2                     sendInvertedProducedEvent@can_send_off:
  6028                           	callstack 0
  6029   0001D2                     teachCheckLen@learn:
  6030                           	callstack 0
  6031   0001D2                     _alwaysSendInvertedProducedEvent$1334:
  6032                           	callstack 0
  6033   0001D2                     doEvuln@nodeNumber:
  6034                           	callstack 0
  6035                           
  6036                           ; 2 bytes @ 0x14
  6037   0001D2                     	ds	1
  6038   0001D3                     sendInvertedProducedEvent@happening:
  6039                           	callstack 0
  6040   0001D3                     doReqev@tableIndex:
  6041                           	callstack 0
  6042   0001D3                     mnsTRallDiagnosticsCallback@d:
  6043                           	callstack 0
  6044                           
  6045                           ; 2 bytes @ 0x15
  6046   0001D3                     	ds	1
  6047   0001D4                     ??_doSOD:
  6048   0001D4                     reqevCallback@nEv:
  6049                           	callstack 0
  6050   0001D4                     _sendInvertedProducedEvent$1329:
  6051                           	callstack 0
  6052   0001D4                     doEvuln@eventNumber:
  6053                           	callstack 0
  6054                           
  6055                           ; 2 bytes @ 0x16
  6056   0001D4                     	ds	1
  6057   0001D5                     writeEv@startIndex:
  6058                           	callstack 0
  6059   0001D5                     reqevCallback@ev:
  6060                           	callstack 0
  6061                           
  6062                           ; 2 bytes @ 0x17
  6063   0001D5                     	ds	1
  6064   0001D6                     sendInvertedProducedEvent@state_to_send:
  6065                           	callstack 0
  6066   0001D6                     doSOD@midway:
  6067                           	callstack 0
  6068   0001D6                     doEvuln@result:
  6069                           	callstack 0
  6070   0001D6                     writeEv@nextF:
  6071                           	callstack 0
  6072                           
  6073                           ; 1 bytes @ 0x18
  6074   0001D6                     	ds	1
  6075   0001D7                     startDigitalOutput@state:
  6076                           	callstack 0
  6077   0001D7                     doSOD@state:
  6078                           	callstack 0
  6079   0001D7                     pollServos@target:
  6080                           	callstack 0
  6081   0001D7                     writeEv@e:
  6082                           	callstack 0
  6083   0001D7                     reqevCallback@nodeNumber:
  6084                           	callstack 0
  6085                           
  6086                           ; 2 bytes @ 0x19
  6087   0001D7                     	ds	1
  6088   0001D8                     ??_startDigitalOutput:
  6089   0001D8                     doSOD@event_inverted:
  6090                           	callstack 0
  6091   0001D8                     pollServos@beforeMidway:
  6092                           	callstack 0
  6093   0001D8                     writeEv@f:
  6094                           	callstack 0
  6095                           
  6096                           ; 1 bytes @ 0x1A
  6097   0001D8                     	ds	1
  6098   0001D9                     doSOD@io:
  6099                           	callstack 0
  6100   0001D9                     pollServos@midway:
  6101                           	callstack 0
  6102   0001D9                     writeEv@tableIndex:
  6103                           	callstack 0
  6104   0001D9                     reqevCallback@eventNumber:
  6105                           	callstack 0
  6106                           
  6107                           ; 2 bytes @ 0x1B
  6108   0001D9                     	ds	1
  6109   0001DA                     pollServos@io:
  6110                           	callstack 0
  6111   0001DA                     writeEv@nextIdx:
  6112                           	callstack 0
  6113   0001DA                     _startDigitalOutput$802:
  6114                           	callstack 0
  6115                           
  6116                           ; 2 bytes @ 0x1C
  6117   0001DA                     	ds	1
  6118   0001DB                     deleteActionRange@number:
  6119                           	callstack 0
  6120   0001DB                     startServos@type:
  6121                           	callstack 0
  6122   0001DB                     deleteHappeningRange@number:
  6123                           	callstack 0
  6124   0001DB                     reqevCallback@tableIndex:
  6125                           	callstack 0
  6126   0001DB                     addEvent@nodeNumber:
  6127                           	callstack 0
  6128                           
  6129                           ; 2 bytes @ 0x1D
  6130   0001DB                     	ds	1
  6131   0001DC                     ??_deleteHappeningRange:
  6132   0001DC                     ??_deleteActionRange:
  6133   0001DC                     ??_pollTimedResponse:
  6134   0001DC                     startDigitalOutput@pinState:
  6135                           	callstack 0
  6136                           
  6137                           ; 1 bytes @ 0x1E
  6138   0001DC                     	ds	1
  6139   0001DD                     startDigitalOutput@actionState:
  6140                           	callstack 0
  6141   0001DD                     addEvent@eventNumber:
  6142                           	callstack 0
  6143                           
  6144                           ; 2 bytes @ 0x1F
  6145   0001DD                     	ds	1
  6146   0001DE                     startDigitalOutput@io:
  6147                           	callstack 0
  6148   0001DE                     pollTimedResponse@result:
  6149                           	callstack 0
  6150                           
  6151                           ; 1 bytes @ 0x20
  6152   0001DE                     	ds	1
  6153   0001DF                     startOutput@act:
  6154                           	callstack 0
  6155   0001DF                     addEvent@evNum:
  6156                           	callstack 0
  6157                           
  6158                           ; 1 bytes @ 0x21
  6159   0001DF                     	ds	1
  6160   0001E0                     startOutput@type:
  6161                           	callstack 0
  6162   0001E0                     addEvent@evVal:
  6163                           	callstack 0
  6164                           
  6165                           ; 1 bytes @ 0x22
  6166   0001E0                     	ds	1
  6167   0001E1                     deleteActionRange@updated:
  6168                           	callstack 0
  6169   0001E1                     startOutput@io:
  6170                           	callstack 0
  6171   0001E1                     deleteHappeningRange@happening:
  6172                           	callstack 0
  6173   0001E1                     addEvent@forceOwnNN:
  6174                           	callstack 0
  6175                           
  6176                           ; 1 bytes @ 0x23
  6177   0001E1                     	ds	1
  6178   0001E2                     ??_addEvent:
  6179   0001E2                     deleteActionRange@action:
  6180                           	callstack 0
  6181   0001E2                     processActions@simultaneous:
  6182                           	callstack 0
  6183   0001E2                     deleteHappeningRange@h:
  6184                           	callstack 0
  6185                           
  6186                           ; 1 bytes @ 0x24
  6187   0001E2                     	ds	1
  6188   0001E3                     deleteActionRange@e:
  6189                           	callstack 0
  6190   0001E3                     processActions@peekItem:
  6191                           	callstack 0
  6192   0001E3                     deleteHappeningRange@tableIndex:
  6193                           	callstack 0
  6194                           
  6195                           ; 1 bytes @ 0x25
  6196   0001E3                     	ds	1
  6197   0001E4                     deleteActionRange@tableIndex:
  6198                           	callstack 0
  6199   0001E4                     processActions@type:
  6200                           	callstack 0
  6201                           
  6202                           ; 1 bytes @ 0x26
  6203   0001E4                     	ds	1
  6204   0001E5                     clearEvents@io:
  6205                           	callstack 0
  6206   0001E5                     processActions@nextType:
  6207                           	callstack 0
  6208                           
  6209                           ; 1 bytes @ 0x27
  6210   0001E5                     	ds	1
  6211   0001E6                     processActions@nextIo:
  6212                           	callstack 0
  6213   0001E6                     addEvent@error:
  6214                           	callstack 0
  6215                           
  6216                           ; 1 bytes @ 0x28
  6217   0001E6                     	ds	1
  6218   0001E7                     processActions@io:
  6219                           	callstack 0
  6220   0001E7                     addEvent@f:
  6221                           	callstack 0
  6222                           
  6223                           ; 1 bytes @ 0x29
  6224   0001E7                     	ds	1
  6225   0001E8                     processActions@ioAction:
  6226                           	callstack 0
  6227   0001E8                     addEvent@e:
  6228                           	callstack 0
  6229                           
  6230                           ; 1 bytes @ 0x2A
  6231   0001E8                     	ds	1
  6232   0001E9                     processActions@nextAction:
  6233                           	callstack 0
  6234   0001E9                     addEvent@tableIndex:
  6235                           	callstack 0
  6236                           
  6237                           ; 1 bytes @ 0x2B
  6238   0001E9                     	ds	1
  6239   0001EA                     defaultEvents@type:
  6240                           	callstack 0
  6241   0001EA                     processActions@action:
  6242                           	callstack 0
  6243   0001EA                     APP_addEvent@nodeNumber:
  6244                           	callstack 0
  6245                           
  6246                           ; 2 bytes @ 0x2C
  6247   0001EA                     	ds	1
  6248   0001EB                     ??_loop:
  6249   0001EB                     defaultEvents@en:
  6250                           	callstack 0
  6251                           
  6252                           ; 2 bytes @ 0x2D
  6253   0001EB                     	ds	1
  6254   0001EC                     APP_addEvent@eventNumber:
  6255                           	callstack 0
  6256                           
  6257                           ; 2 bytes @ 0x2E
  6258   0001EC                     	ds	1
  6259   0001ED                     defaultEvents@io:
  6260                           	callstack 0
  6261                           
  6262                           ; 1 bytes @ 0x2F
  6263   0001ED                     	ds	1
  6264   0001EE                     setType@type:
  6265                           	callstack 0
  6266   0001EE                     APP_addEvent@evNum:
  6267                           	callstack 0
  6268                           
  6269                           ; 1 bytes @ 0x30
  6270   0001EE                     	ds	1
  6271   0001EF                     setType@index:
  6272                           	callstack 0
  6273   0001EF                     APP_addEvent@evVal:
  6274                           	callstack 0
  6275                           
  6276                           ; 1 bytes @ 0x31
  6277   0001EF                     	ds	1
  6278   0001F0                     setType@io:
  6279                           	callstack 0
  6280   0001F0                     APP_addEvent@forceOwnNN:
  6281                           	callstack 0
  6282                           
  6283                           ; 1 bytes @ 0x32
  6284   0001F0                     	ds	1
  6285   0001F1                     APP_factoryReset@io:
  6286                           	callstack 0
  6287   0001F1                     APP_nvValueChanged@value:
  6288                           	callstack 0
  6289   0001F1                     doEvlrn@nodeNumber:
  6290                           	callstack 0
  6291                           
  6292                           ; 2 bytes @ 0x33
  6293   0001F1                     	ds	1
  6294   0001F2                     ??_factoryReset:
  6295   0001F2                     APP_nvValueChanged@oldValue:
  6296                           	callstack 0
  6297                           
  6298                           ; 1 bytes @ 0x34
  6299   0001F2                     	ds	1
  6300   0001F3                     ??_APP_nvValueChanged:
  6301   0001F3                     doEvlrn@eventNumber:
  6302                           	callstack 0
  6303                           
  6304                           ; 2 bytes @ 0x35
  6305   0001F3                     	ds	2
  6306   0001F5                     doEvlrn@evNum:
  6307                           	callstack 0
  6308                           
  6309                           ; 1 bytes @ 0x37
  6310   0001F5                     	ds	1
  6311   0001F6                     APP_nvValueChanged@index:
  6312                           	callstack 0
  6313   0001F6                     doEvlrn@evVal:
  6314                           	callstack 0
  6315   0001F6                     factoryReset@i:
  6316                           	callstack 0
  6317                           
  6318                           ; 1 bytes @ 0x38
  6319   0001F6                     	ds	1
  6320   0001F7                     APP_nvValueChanged@io:
  6321                           	callstack 0
  6322   0001F7                     doEvlrn@error:
  6323                           	callstack 0
  6324   0001F7                     checkPowerOnPb@i:
  6325                           	callstack 0
  6326                           
  6327                           ; 1 bytes @ 0x39
  6328   0001F7                     	ds	1
  6329   0001F8                     setNV@value:
  6330                           	callstack 0
  6331                           
  6332                           ; 1 bytes @ 0x3A
  6333   0001F8                     	ds	1
  6334   0001F9                     ??_setNV:
  6335                           
  6336                           ; 1 bytes @ 0x3B
  6337   0001F9                     	ds	2
  6338   0001FB                     setNV@oldValue:
  6339                           	callstack 0
  6340                           
  6341                           ; 1 bytes @ 0x3D
  6342   0001FB                     	ds	1
  6343   0001FC                     setNV@index:
  6344                           	callstack 0
  6345                           
  6346                           ; 1 bytes @ 0x3E
  6347   0001FC                     	ds	1
  6348   0001FD                     consumer2QProcessMessage@m:
  6349                           	callstack 0
  6350   0001FD                     bootProcessMessage@m:
  6351                           	callstack 0
  6352   0001FD                     ackEventProcessMessage@m:
  6353                           	callstack 0
  6354   0001FD                     producerProcessMessage@m:
  6355                           	callstack 0
  6356   0001FD                     teachProcessMessage@m:
  6357                           	callstack 0
  6358   0001FD                     mnsProcessMessage@m:
  6359                           	callstack 0
  6360   0001FD                     nvProcessMessage@m:
  6361                           	callstack 0
  6362   0001FD                     canProcessMessage@m:
  6363                           	callstack 0
  6364                           
  6365                           ; 2 bytes @ 0x3F
  6366   0001FD                     	ds	2
  6367                           
  6368                           	psect	cstackBANK0
  6369   000060                     __pcstackBANK0:
  6370                           	callstack 0
  6371   000060                     ?i1_getNextWriteMessage:
  6372                           	callstack 0
  6373   000060                     ?i1_pop:
  6374                           	callstack 0
  6375   000060                     ?i1_getBufferPointer:
  6376                           	callstack 0
  6377   000060                     ?i1_tickGet:
  6378                           	callstack 0
  6379   000060                     i1_isEvent$5817:
  6380                           	callstack 0
  6381   000060                     i1getNextWriteMessage@q:
  6382                           	callstack 0
  6383   000060                     i1pop@q:
  6384                           	callstack 0
  6385                           
  6386                           ; 2 bytes @ 0x0
  6387   000060                     	ds	1
  6388   000061                     i1isEvent@opc:
  6389                           	callstack 0
  6390                           
  6391                           ; 1 bytes @ 0x1
  6392   000061                     	ds	1
  6393   000062                     ??i1_getNextWriteMessage:
  6394   000062                     ??i1_pop:
  6395   000062                     i1getBufferPointer@b:
  6396                           	callstack 0
  6397                           
  6398                           ; 1 bytes @ 0x2
  6399   000062                     	ds	2
  6400   000064                     i1tickGet@IntFlag2:
  6401                           	callstack 0
  6402                           
  6403                           ; 1 bytes @ 0x4
  6404   000064                     	ds	1
  6405   000065                     i1tickGet@IntFlag1:
  6406                           	callstack 0
  6407                           
  6408                           ; 1 bytes @ 0x5
  6409   000065                     	ds	1
  6410   000066                     i1tickGet@currentTime:
  6411                           	callstack 0
  6412                           
  6413                           ; 4 bytes @ 0x6
  6414   000066                     	ds	1
  6415   000067                     i1pop@ret:
  6416                           	callstack 0
  6417                           
  6418                           ; 2 bytes @ 0x7
  6419   000067                     	ds	4
  6420   00006B                     i1getNextWriteMessage@wr:
  6421                           	callstack 0
  6422                           
  6423                           ; 1 bytes @ 0xB
  6424   00006B                     	ds	1
  6425   00006C                     ??_checkTxFifo:
  6426   00006C                     canFillRxFifo@ptr:
  6427                           	callstack 0
  6428                           
  6429                           ; 2 bytes @ 0xC
  6430   00006C                     	ds	2
  6431   00006E                     canFillRxFifo@m:
  6432                           	callstack 0
  6433                           
  6434                           ; 2 bytes @ 0xE
  6435   00006E                     	ds	3
  6436   000071                     checkTxFifo@m:
  6437                           	callstack 0
  6438                           
  6439                           ; 2 bytes @ 0x11
  6440   000071                     	ds	2
  6441   000073                     checkTxFifo@mp:
  6442                           	callstack 0
  6443                           
  6444                           ; 2 bytes @ 0x13
  6445   000073                     	ds	2
  6446   000075                     ??_checkCANTimeout:
  6447                           
  6448                           ; 1 bytes @ 0x15
  6449   000075                     	ds	4
  6450   000079                     ??_lowIsr:
  6451                           
  6452                           ; 1 bytes @ 0x19
  6453   000079                     	ds	4
  6454   00007D                     lowIsr@i:
  6455                           	callstack 0
  6456                           
  6457                           ; 1 bytes @ 0x1D
  6458   00007D                     	ds	1
  6459   00007E                     ??_isrLow:
  6460                           
  6461                           ; 1 bytes @ 0x1E
  6462   00007E                     	ds	15
  6463   00008D                     ??_findServiceIndex:
  6464   00008D                     ??_have:
  6465   00008D                     ??_showStatus:
  6466   00008D                     ?_getNV:
  6467                           	callstack 0
  6468   00008D                     ?_consumer2QGetDiagnostic:
  6469                           	callstack 0
  6470   00008D                     ?_ackGetDiagnostic:
  6471                           	callstack 0
  6472   00008D                     ?_findService:
  6473                           	callstack 0
  6474   00008D                     ?_producerGetDiagnostic:
  6475                           	callstack 0
  6476   00008D                     ?_teachGetDiagnostic:
  6477                           	callstack 0
  6478   00008D                     ?_mnsGetDiagnostic:
  6479                           	callstack 0
  6480   00008D                     ?_nvGetDiagnostic:
  6481                           	callstack 0
  6482   00008D                     ?_getNextWriteMessage:
  6483                           	callstack 0
  6484   00008D                     ?_pop:
  6485                           	callstack 0
  6486   00008D                     ?_canGetDiagnostic:
  6487                           	callstack 0
  6488   00008D                     ?_getBufferPointer:
  6489                           	callstack 0
  6490   00008D                     ?___awmod:
  6491                           	callstack 0
  6492   00008D                     ?_tickGet:
  6493                           	callstack 0
  6494   00008D                     initOutputs@io:
  6495                           	callstack 0
  6496   00008D                     pushTwoAction@a:
  6497                           	callstack 0
  6498   00008D                     peekTwoActionQueue@qty:
  6499                           	callstack 0
  6500   00008D                     deleteTwoActionQueue@qty:
  6501                           	callstack 0
  6502   00008D                     needsStarting@act:
  6503                           	callstack 0
  6504   00008D                     completed@action:
  6505                           	callstack 0
  6506   00008D                     startBounceOutput@action:
  6507                           	callstack 0
  6508   00008D                     initBounce@io:
  6509                           	callstack 0
  6510   00008D                     ackPowerUp@i:
  6511                           	callstack 0
  6512   00008D                     teachGetESDdata@id:
  6513                           	callstack 0
  6514   00008D                     evtIdxToTableIndex@evtIdx:
  6515                           	callstack 0
  6516   00008D                     tableIndexToEvtIdx@tableIndex:
  6517                           	callstack 0
  6518   00008D                     nvGetESDdata@id:
  6519                           	callstack 0
  6520   00008D                     initTicker@priority:
  6521                           	callstack 0
  6522   00008D                     setTimedResponseDelay@delay:
  6523                           	callstack 0
  6524   00008D                     _isEvent$5817:
  6525                           	callstack 0
  6526   00008D                     getNextWriteMessage@q:
  6527                           	callstack 0
  6528   00008D                     eraseFlashBlock@interruptEnabled:
  6529                           	callstack 0
  6530   00008D                     loadFlashBlock@i:
  6531                           	callstack 0
  6532   00008D                     canEsdData@id:
  6533                           	callstack 0
  6534   00008D                     APP_preProcessMessage@m:
  6535                           	callstack 0
  6536   00008D                     APP_postProcessMessage@m:
  6537                           	callstack 0
  6538   00008D                     push@q:
  6539                           	callstack 0
  6540   00008D                     pop@q:
  6541                           	callstack 0
  6542   00008D                     quantity@q:
  6543                           	callstack 0
  6544   00008D                     EEPROM_Read@index:
  6545                           	callstack 0
  6546   00008D                     FLASH_Read@address:
  6547                           	callstack 0
  6548   00008D                     ___awmod@dividend:
  6549                           	callstack 0
  6550   00008D                     memcpy@d1:
  6551                           	callstack 0
  6552                           
  6553                           ; 2 bytes @ 0x2D
  6554   00008D                     	ds	1
  6555   00008E                     peekTwoActionQueue@index:
  6556                           	callstack 0
  6557   00008E                     deleteTwoActionQueue@index:
  6558                           	callstack 0
  6559   00008E                     needsStarting@type:
  6560                           	callstack 0
  6561   00008E                     completed@type:
  6562                           	callstack 0
  6563   00008E                     startBounceOutput@io:
  6564                           	callstack 0
  6565   00008E                     initTicker@divider:
  6566                           	callstack 0
  6567   00008E                     isEvent@opc:
  6568                           	callstack 0
  6569   00008E                     flushFlashBlock@interruptEnabled:
  6570                           	callstack 0
  6571                           
  6572                           ; 1 bytes @ 0x2E
  6573   00008E                     	ds	1
  6574   00008F                     ??_getNV:
  6575   00008F                     ??_consumer2QGetDiagnostic:
  6576   00008F                     ??_ackGetDiagnostic:
  6577   00008F                     ??_findService:
  6578   00008F                     ??_producerGetDiagnostic:
  6579   00008F                     ??_teachGetDiagnostic:
  6580   00008F                     ??_mnsGetDiagnostic:
  6581   00008F                     ??_nvGetDiagnostic:
  6582   00008F                     ??_getNextWriteMessage:
  6583   00008F                     ??_pop:
  6584   00008F                     ??_canGetDiagnostic:
  6585   00008F                     ??_quantity:
  6586   00008F                     ??_FLASH_Read:
  6587   00008F                     showStatus@s:
  6588                           	callstack 0
  6589   00008F                     initTicker@i:
  6590                           	callstack 0
  6591   00008F                     findServiceIndex@serviceType:
  6592                           	callstack 0
  6593   00008F                     have@id:
  6594                           	callstack 0
  6595   00008F                     flushFlashBlock@i:
  6596                           	callstack 0
  6597   00008F                     getBufferPointer@b:
  6598                           	callstack 0
  6599   00008F                     push@m:
  6600                           	callstack 0
  6601   00008F                     EEPROM_Write@index:
  6602                           	callstack 0
  6603   00008F                     ___awmod@divisor:
  6604                           	callstack 0
  6605   00008F                     memcpy@s1:
  6606                           	callstack 0
  6607                           
  6608                           ; 2 bytes @ 0x2F
  6609   00008F                     	ds	1
  6610   000090                     ackGetDiagnostic@index:
  6611                           	callstack 0
  6612   000090                     nvGetDiagnostic@index:
  6613                           	callstack 0
  6614   000090                     getNV@index:
  6615                           	callstack 0
  6616   000090                     findServiceIndex@i:
  6617                           	callstack 0
  6618   000090                     have@i:
  6619                           	callstack 0
  6620   000090                     FLASH_Write@index:
  6621                           	callstack 0
  6622                           
  6623                           ; 2 bytes @ 0x30
  6624   000090                     	ds	1
  6625   000091                     ??_readInput:
  6626   000091                     ??_push:
  6627   000091                     ?_readNVM:
  6628                           	callstack 0
  6629   000091                     ?___wmul:
  6630                           	callstack 0
  6631   000091                     ?___lmul:
  6632                           	callstack 0
  6633   000091                     setOutputPin@state:
  6634                           	callstack 0
  6635   000091                     consumer2QGetDiagnostic@index:
  6636                           	callstack 0
  6637   000091                     needsStarting@io:
  6638                           	callstack 0
  6639   000091                     _completed$1459:
  6640                           	callstack 0
  6641   000091                     startServoOutput@action:
  6642                           	callstack 0
  6643   000091                     startMultiOutput@action:
  6644                           	callstack 0
  6645   000091                     setServoState@action:
  6646                           	callstack 0
  6647   000091                     setBounceState@action:
  6648                           	callstack 0
  6649   000091                     setMultiState@action:
  6650                           	callstack 0
  6651   000091                     producerGetDiagnostic@index:
  6652                           	callstack 0
  6653   000091                     teachGetDiagnostic@index:
  6654                           	callstack 0
  6655   000091                     getParameterFlags@flags:
  6656                           	callstack 0
  6657   000091                     mnsGetDiagnostic@index:
  6658                           	callstack 0
  6659   000091                     tickGet@IntFlag2:
  6660                           	callstack 0
  6661   000091                     startTimedResponse@serviceIndex:
  6662                           	callstack 0
  6663   000091                     findService@id:
  6664                           	callstack 0
  6665   000091                     EEPROM_Write@value:
  6666                           	callstack 0
  6667   000091                     canGetDiagnostic@index:
  6668                           	callstack 0
  6669   000091                     ___awmod@counter:
  6670                           	callstack 0
  6671   000091                     ___wmul@multiplier:
  6672                           	callstack 0
  6673   000091                     memcpy@n:
  6674                           	callstack 0
  6675   000091                     readNVM@index:
  6676                           	callstack 0
  6677   000091                     ___lmul@multiplier:
  6678                           	callstack 0
  6679                           
  6680                           ; 4 bytes @ 0x31
  6681   000091                     	ds	1
  6682   000092                     ??_setOutputPin:
  6683   000092                     ??_startServoOutput:
  6684   000092                     ??_startMultiOutput:
  6685   000092                     completed@io:
  6686                           	callstack 0
  6687   000092                     setServoState@io:
  6688                           	callstack 0
  6689   000092                     setBounceState@io:
  6690                           	callstack 0
  6691   000092                     setMultiState@io:
  6692                           	callstack 0
  6693   000092                     getParameter@idx:
  6694                           	callstack 0
  6695   000092                     tickGet@IntFlag1:
  6696                           	callstack 0
  6697   000092                     findService@i:
  6698                           	callstack 0
  6699   000092                     EEPROM_Write@interruptEnabled:
  6700                           	callstack 0
  6701   000092                     FLASH_Write@value:
  6702                           	callstack 0
  6703   000092                     ___awmod@sign:
  6704                           	callstack 0
  6705   000092                     startTimedResponse@callback:
  6706                           	callstack 0
  6707                           
  6708                           ; 2 bytes @ 0x32
  6709   000092                     	ds	1
  6710   000093                     ??_FLASH_Write:
  6711   000093                     readInput@io:
  6712                           	callstack 0
  6713   000093                     APP_nvValidate@value:
  6714                           	callstack 0
  6715   000093                     setOutputState@act:
  6716                           	callstack 0
  6717   000093                     startServoOutput@io:
  6718                           	callstack 0
  6719   000093                     startMultiOutput@io:
  6720                           	callstack 0
  6721   000093                     memcpy@tmp:
  6722                           	callstack 0
  6723   000093                     ___wmul@multiplicand:
  6724                           	callstack 0
  6725   000093                     tickGet@currentTime:
  6726                           	callstack 0
  6727                           
  6728                           ; 4 bytes @ 0x33
  6729   000093                     	ds	1
  6730   000094                     ??_readNVM:
  6731   000094                     setOutputPin@io:
  6732                           	callstack 0
  6733   000094                     APP_nvValidate@index:
  6734                           	callstack 0
  6735   000094                     setOutputState@type:
  6736                           	callstack 0
  6737   000094                     startTimedResponse@type:
  6738                           	callstack 0
  6739   000094                     pop@ret:
  6740                           	callstack 0
  6741   000094                     memcpy@d:
  6742                           	callstack 0
  6743                           
  6744                           ; 2 bytes @ 0x34
  6745   000094                     	ds	1
  6746   000095                     ??_setupTimer1:
  6747   000095                     ??_setupTimer3:
  6748   000095                     setOutputState@io:
  6749                           	callstack 0
  6750   000095                     ___wmul@product:
  6751                           	callstack 0
  6752   000095                     ___lmul@multiplicand:
  6753                           	callstack 0
  6754                           
  6755                           ; 4 bytes @ 0x35
  6756   000095                     	ds	1
  6757   000096                     readNVM@type:
  6758                           	callstack 0
  6759   000096                     memcpy@s:
  6760                           	callstack 0
  6761                           
  6762                           ; 2 bytes @ 0x36
  6763   000096                     	ds	1
  6764   000097                     ??_initInputScan:
  6765   000097                     ??_validStart:
  6766   000097                     ??_loadNvCache:
  6767   000097                     ??_canPowerUp:
  6768   000097                     ?_getNN:
  6769                           	callstack 0
  6770   000097                     ?_getEN:
  6771                           	callstack 0
  6772   000097                     ?___awdiv:
  6773                           	callstack 0
  6774   000097                     ?___lldiv:
  6775                           	callstack 0
  6776   000097                     setDigitalOutput@state:
  6777                           	callstack 0
  6778   000097                     mnsPowerUp@i:
  6779                           	callstack 0
  6780   000097                     handleSelfEnumeration@p:
  6781                           	callstack 0
  6782   000097                     ___awdiv@dividend:
  6783                           	callstack 0
  6784   000097                     ___lldiv@dividend:
  6785                           	callstack 0
  6786                           
  6787                           ; 4 bytes @ 0x37
  6788   000097                     	ds	1
  6789   000098                     setDigitalOutput@pinState:
  6790                           	callstack 0
  6791   000098                     getNextWriteMessage@wr:
  6792                           	callstack 0
  6793   000098                     _setupTimer1$1841:
  6794                           	callstack 0
  6795   000098                     _setupTimer3$1845:
  6796                           	callstack 0
  6797   000098                     mnsPowerUp@temp:
  6798                           	callstack 0
  6799   000098                     canPowerUp@temp:
  6800                           	callstack 0
  6801                           
  6802                           ; 2 bytes @ 0x38
  6803   000098                     	ds	1
  6804   000099                     ??_getNN:
  6805   000099                     ??_getEN:
  6806   000099                     ??_handleSelfEnumeration:
  6807   000099                     setDigitalOutput@io:
  6808                           	callstack 0
  6809   000099                     initInputScan@input:
  6810                           	callstack 0
  6811   000099                     loadNvCache@temp:
  6812                           	callstack 0
  6813   000099                     ___awdiv@divisor:
  6814                           	callstack 0
  6815   000099                     ___lmul@product:
  6816                           	callstack 0
  6817                           
  6818                           ; 4 bytes @ 0x39
  6819   000099                     	ds	1
  6820   00009A                     setupTimer1@ticks:
  6821                           	callstack 0
  6822   00009A                     setupTimer3@ticks:
  6823                           	callstack 0
  6824   00009A                     canSendMessage@mp:
  6825                           	callstack 0
  6826                           
  6827                           ; 2 bytes @ 0x3A
  6828   00009A                     	ds	1
  6829   00009B                     validStart@tableIndex:
  6830                           	callstack 0
  6831   00009B                     loadNvCache@i:
  6832                           	callstack 0
  6833   00009B                     ___awdiv@counter:
  6834                           	callstack 0
  6835   00009B                     ___lldiv@divisor:
  6836                           	callstack 0
  6837                           
  6838                           ; 4 bytes @ 0x3B
  6839   00009B                     	ds	1
  6840   00009C                     ??_canSendMessage:
  6841   00009C                     setupTimer1@io:
  6842                           	callstack 0
  6843   00009C                     setupTimer3@io:
  6844                           	callstack 0
  6845   00009C                     validStart@f:
  6846                           	callstack 0
  6847   00009C                     nvPowerUp@i:
  6848                           	callstack 0
  6849   00009C                     ___awdiv@sign:
  6850                           	callstack 0
  6851                           
  6852                           ; 1 bytes @ 0x3C
  6853   00009C                     	ds	1
  6854   00009D                     ??_getEVs:
  6855   00009D                     ??_numEv:
  6856   00009D                     ?_getEv:
  6857                           	callstack 0
  6858   00009D                     getEv@evNum:
  6859                           	callstack 0
  6860   00009D                     handleSelfEnumeration@incomingCanId:
  6861                           	callstack 0
  6862   00009D                     doWait@duration:
  6863                           	callstack 0
  6864   00009D                     getNN@hi:
  6865                           	callstack 0
  6866   00009D                     getEN@hi:
  6867                           	callstack 0
  6868   00009D                     ___awdiv@quotient:
  6869                           	callstack 0
  6870                           
  6871                           ; 2 bytes @ 0x3D
  6872   00009D                     	ds	2
  6873   00009F                     ??_doWait:
  6874   00009F                     ??_bounceUp:
  6875   00009F                     ??_bounceDown:
  6876   00009F                     ??_getEv:
  6877   00009F                     ??_APP_nvDefault:
  6878   00009F                     ??_leds_poll:
  6879   00009F                     setServoPosition@pos:
  6880                           	callstack 0
  6881   00009F                     getNN@lo:
  6882                           	callstack 0
  6883   00009F                     getEN@lo:
  6884                           	callstack 0
  6885   00009F                     ___lldiv@quotient:
  6886                           	callstack 0
  6887                           
  6888                           ; 4 bytes @ 0x3F
  6889   00009F                     	ds	1
  6890   0000A0                     setServoPosition@io:
  6891                           	callstack 0
  6892                           
  6893                           ; 1 bytes @ 0x40
  6894   0000A0                     	ds	1
  6895   0000A1                     setOutputPosition@pos:
  6896                           	callstack 0
  6897   0000A1                     numEv@num:
  6898                           	callstack 0
  6899   0000A1                     getEVs@f:
  6900                           	callstack 0
  6901   0000A1                     getNN@f:
  6902                           	callstack 0
  6903   0000A1                     getEN@tableIndex:
  6904                           	callstack 0
  6905   0000A1                     canSendMessage@m:
  6906                           	callstack 0
  6907                           
  6908                           ; 2 bytes @ 0x41
  6909   0000A1                     	ds	1
  6910   0000A2                     setOutputPosition@type:
  6911                           	callstack 0
  6912   0000A2                     numEv@f:
  6913                           	callstack 0
  6914   0000A2                     getEVs@evIdx:
  6915                           	callstack 0
  6916   0000A2                     getNN@tableIndex:
  6917                           	callstack 0
  6918                           
  6919                           ; 1 bytes @ 0x42
  6920   0000A2                     	ds	1
  6921   0000A3                     ??_sendMessage:
  6922   0000A3                     APP_nvDefault@index:
  6923                           	callstack 0
  6924   0000A3                     setOutputPosition@io:
  6925                           	callstack 0
  6926   0000A3                     numEv@tableIndex:
  6927                           	callstack 0
  6928   0000A3                     getEVs@tableIndex:
  6929                           	callstack 0
  6930   0000A3                     ___lldiv@counter:
  6931                           	callstack 0
  6932   0000A3                     getHash@nn:
  6933                           	callstack 0
  6934                           
  6935                           ; 2 bytes @ 0x43
  6936   0000A3                     	ds	1
  6937   0000A4                     ??_initServos:
  6938   0000A4                     ??_pbDownTimer:
  6939   0000A4                     ??_pbUpTimer:
  6940   0000A4                     getEv@f:
  6941                           	callstack 0
  6942   0000A4                     getEVs@evNum:
  6943                           	callstack 0
  6944   0000A4                     writeNVM@index:
  6945                           	callstack 0
  6946                           
  6947                           ; 3 bytes @ 0x44
  6948   0000A4                     	ds	1
  6949   0000A5                     bounceUp@reversed:
  6950                           	callstack 0
  6951   0000A5                     getEv@tableIndex:
  6952                           	callstack 0
  6953   0000A5                     sendMessage@opc:
  6954                           	callstack 0
  6955   0000A5                     getHash@en:
  6956                           	callstack 0
  6957                           
  6958                           ; 2 bytes @ 0x45
  6959   0000A5                     	ds	1
  6960   0000A6                     bounceDown@reversed:
  6961                           	callstack 0
  6962   0000A6                     bounceUp@midway:
  6963                           	callstack 0
  6964   0000A6                     sendMessage2@data1:
  6965                           	callstack 0
  6966   0000A6                     sendMessage3@data1:
  6967                           	callstack 0
  6968   0000A6                     sendMessage4@data1:
  6969                           	callstack 0
  6970   0000A6                     sendMessage5@opc:
  6971                           	callstack 0
  6972   0000A6                     sendMessage6@opc:
  6973                           	callstack 0
  6974   0000A6                     sendMessage7@opc:
  6975                           	callstack 0
  6976   0000A6                     _initServos$7957:
  6977                           	callstack 0
  6978                           
  6979                           ; 1 bytes @ 0x46
  6980   0000A6                     	ds	1
  6981   0000A7                     ??_getHash:
  6982   0000A7                     bounceUp@io:
  6983                           	callstack 0
  6984   0000A7                     sendMessage2@data2:
  6985                           	callstack 0
  6986   0000A7                     sendMessage3@data2:
  6987                           	callstack 0
  6988   0000A7                     sendMessage4@data2:
  6989                           	callstack 0
  6990   0000A7                     writeNVM@value:
  6991                           	callstack 0
  6992   0000A7                     _initServos$7956:
  6993                           	callstack 0
  6994   0000A7                     bounceDown@tmp:
  6995                           	callstack 0
  6996                           
  6997                           ; 2 bytes @ 0x47
  6998   0000A7                     	ds	1
  6999   0000A8                     ??_writeNVM:
  7000   0000A8                     initServos@io:
  7001                           	callstack 0
  7002   0000A8                     getHash@hash:
  7003                           	callstack 0
  7004   0000A8                     pbDownTimer@timeout:
  7005                           	callstack 0
  7006   0000A8                     pbUpTimer@timeout:
  7007                           	callstack 0
  7008   0000A8                     sendMessage2@opc:
  7009                           	callstack 0
  7010   0000A8                     sendMessage3@data3:
  7011                           	callstack 0
  7012   0000A8                     sendMessage4@data3:
  7013                           	callstack 0
  7014                           
  7015                           ; 1 bytes @ 0x48
  7016   0000A8                     	ds	1
  7017   0000A9                     bounceDown@io:
  7018                           	callstack 0
  7019   0000A9                     teachPowerUp@i:
  7020                           	callstack 0
  7021   0000A9                     sendMessage3@opc:
  7022                           	callstack 0
  7023   0000A9                     sendMessage4@data4:
  7024                           	callstack 0
  7025                           
  7026                           ; 1 bytes @ 0x49
  7027   0000A9                     	ds	1
  7028   0000AA                     
  7029                           ; 1 bytes @ 0x4A
  7030                           
  7031                           	psect	cstackCOMRAM
  7032   00002B                     __pcstackCOMRAM:
  7033                           	callstack 0
  7034   00002B                     ?i2_getNV:
  7035                           	callstack 0
  7036   00002B                     ?i2_getNextWriteMessage:
  7037                           	callstack 0
  7038   00002B                     ?i2_pop:
  7039                           	callstack 0
  7040   00002B                     ?i2_getBufferPointer:
  7041                           	callstack 0
  7042   00002B                     ?i2_tickGet:
  7043                           	callstack 0
  7044   00002B                     i2_isEvent$5817:
  7045                           	callstack 0
  7046   00002B                     i2getNextWriteMessage@q:
  7047                           	callstack 0
  7048   00002B                     i2pop@q:
  7049                           	callstack 0
  7050                           
  7051                           ; 2 bytes @ 0x0
  7052   00002B                     	ds	1
  7053   00002C                     i2isEvent@opc:
  7054                           	callstack 0
  7055                           
  7056                           ; 1 bytes @ 0x1
  7057   00002C                     	ds	1
  7058   00002D                     ??i2_getNV:
  7059   00002D                     ??i2_getNextWriteMessage:
  7060   00002D                     ??i2_pop:
  7061   00002D                     i2getBufferPointer@b:
  7062                           	callstack 0
  7063                           
  7064                           ; 1 bytes @ 0x2
  7065   00002D                     	ds	1
  7066   00002E                     i2getNV@index:
  7067                           	callstack 0
  7068                           
  7069                           ; 1 bytes @ 0x3
  7070   00002E                     	ds	1
  7071   00002F                     i2setOutputPin@state:
  7072                           	callstack 0
  7073   00002F                     i2tickGet@IntFlag2:
  7074                           	callstack 0
  7075                           
  7076                           ; 1 bytes @ 0x4
  7077   00002F                     	ds	1
  7078   000030                     ??i2_setOutputPin:
  7079   000030                     i2tickGet@IntFlag1:
  7080                           	callstack 0
  7081                           
  7082                           ; 1 bytes @ 0x5
  7083   000030                     	ds	1
  7084   000031                     i2tickGet@currentTime:
  7085                           	callstack 0
  7086                           
  7087                           ; 4 bytes @ 0x6
  7088   000031                     	ds	1
  7089   000032                     i2setOutputPin@io:
  7090                           	callstack 0
  7091   000032                     i2pop@ret:
  7092                           	callstack 0
  7093                           
  7094                           ; 2 bytes @ 0x7
  7095   000032                     	ds	1
  7096   000033                     
  7097                           ; 1 bytes @ 0x8
  7098   000033                     	ds	3
  7099   000036                     i2getNextWriteMessage@wr:
  7100                           	callstack 0
  7101                           
  7102                           ; 1 bytes @ 0xB
  7103   000036                     	ds	1
  7104   000037                     ??i2_checkTxFifo:
  7105   000037                     i2canFillRxFifo@ptr:
  7106                           	callstack 0
  7107                           
  7108                           ; 2 bytes @ 0xC
  7109   000037                     	ds	2
  7110   000039                     i2canFillRxFifo@m:
  7111                           	callstack 0
  7112                           
  7113                           ; 2 bytes @ 0xE
  7114   000039                     	ds	3
  7115   00003C                     i2checkTxFifo@m:
  7116                           	callstack 0
  7117                           
  7118                           ; 2 bytes @ 0x11
  7119   00003C                     	ds	2
  7120   00003E                     i2checkTxFifo@mp:
  7121                           	callstack 0
  7122                           
  7123                           ; 2 bytes @ 0x13
  7124   00003E                     	ds	2
  7125   000040                     ??i2_checkCANTimeout:
  7126   000040                     
  7127                           ; 1 bytes @ 0x15
  7128   000040                     	ds	4
  7129   000044                     ??_highIsr:
  7130   000044                     
  7131                           ; 1 bytes @ 0x19
  7132   000044                     	ds	4
  7133   000048                     highIsr@i:
  7134                           	callstack 0
  7135                           
  7136                           ; 1 bytes @ 0x1D
  7137   000048                     	ds	1
  7138   000049                     ??_isrHigh:
  7139                           
  7140                           ; 1 bytes @ 0x1E
  7141   000049                     	ds	12
  7142                           
  7143 ;;
  7144 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7145 ;;
  7146 ;; *************** function _main *****************
  7147 ;; Defined at:
  7148 ;;		line 1245 in file "../../VLCBlib_PIC/vlcb.c"
  7149 ;; Parameters:    Size  Location     Type
  7150 ;;		None
  7151 ;; Auto vars:     Size  Location     Type
  7152 ;;  i               1    0        unsigned char 
  7153 ;; Return value:  Size  Location     Type
  7154 ;;                  1    wreg      void 
  7155 ;; Registers used:
  7156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7157 ;; Tracked objects:
  7158 ;;		On entry : 0/0
  7159 ;;		On exit  : 0/0
  7160 ;;		Unchanged: 0/0
  7161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7166 ;;Total ram usage:        0 bytes
  7167 ;; Hardware stack levels required when called: 29
  7168 ;; This function calls:
  7169 ;;		_checkPowerOnPb
  7170 ;;		_factoryReset
  7171 ;;		_initRomOps
  7172 ;;		_loop
  7173 ;;		_poll
  7174 ;;		_powerUp
  7175 ;;		_readNVM
  7176 ;;		_setup
  7177 ;; This function is called by:
  7178 ;;		Startup code after reset
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text0
  7183   00B806                     __ptext0:
  7184                           	callstack 0
  7185   00B806                     _main:
  7186                           	callstack 2
  7187                           
  7188                           ;../../VLCBlib_PIC/vlcb.c: 1246:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1252:     OSCT
      +                          UNEbits.PLLEN = 1;
  7189                           
  7190                           ;incstack = 0
  7191   00B806  8C9B               	bsf	155,6,c	;volatile
  7192                           
  7193                           ;../../VLCBlib_PIC/vlcb.c: 1267:     RCONbits.IPEN = 1;
  7194   00B808  8ED0               	bsf	208,7,c	;volatile
  7195                           
  7196                           ;../../VLCBlib_PIC/vlcb.c: 1289:     initRomOps();
  7197   00B80A  ECA4  F061         	call	_initRomOps	;wreg free
  7198                           
  7199                           ;../../VLCBlib_PIC/vlcb.c: 1291:     if (readNVM(FLASH_NVM_TYPE, 0xFF80) != 1) {
  7200   00B80E  0E80               	movlw	128
  7201   00B810  0100               	movlb	0	; () banked
  7202   00B812  6F91               	movwf	readNVM@index& (0+255),b
  7203   00B814  0EFF               	movlw	255
  7204   00B816  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7205   00B818  0E00               	movlw	0
  7206   00B81A  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7207   00B81C  0E01               	movlw	1
  7208   00B81E  ECD9  F058         	call	_readNVM
  7209   00B822  0100               	movlb	0	; () banked
  7210   00B824  0591               	decf	?_readNVM& (0+255),w,b
  7211   00B826  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7212   00B828  A4D8               	btfss	status,2,c
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;../../VLCBlib_PIC/vlcb.c: 1292:         factoryReset();
  7216   00B82A  ECDE  F042         	call	_factoryReset	;wreg free
  7217                           
  7218                           ;../../VLCBlib_PIC/vlcb.c: 1296:     powerUp();
  7219                           
  7220                           ;../../VLCBlib_PIC/vlcb.c: 1293:     }
  7221   00B82E  ECC1  F043         	call	_powerUp	;wreg free
  7222                           
  7223                           ;../../VLCBlib_PIC/vlcb.c: 1299:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7224   00B832  8EF2               	bsf	242,7,c	;volatile
  7225   00B834  8CF2               	bsf	242,6,c	;volatile
  7226                           
  7227                           ;../../VLCBlib_PIC/vlcb.c: 1300:     checkPowerOnPb();
  7228   00B836  EC38  F059         	call	_checkPowerOnPb	;wreg free
  7229                           
  7230                           ;../../VLCBlib_PIC/vlcb.c: 1303:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7231   00B83A  9EF2               	bcf	242,7,c	;volatile
  7232   00B83C  9CF2               	bcf	242,6,c	;volatile
  7233                           
  7234                           ;../../VLCBlib_PIC/vlcb.c: 1304:     setup();
  7235   00B83E  EC31  F04D         	call	_setup	;wreg free
  7236                           
  7237                           ;../../VLCBlib_PIC/vlcb.c: 1307:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7238   00B842  8EF2               	bsf	242,7,c	;volatile
  7239   00B844  8CF2               	bsf	242,6,c	;volatile
  7240   00B846                     l24108:
  7241                           
  7242                           ;../../VLCBlib_PIC/vlcb.c: 1311:         poll();
  7243   00B846  EC9C  F020         	call	_poll	;wreg free
  7244                           
  7245                           ;../../VLCBlib_PIC/vlcb.c: 1312:         loop();
  7246   00B84A  ECA7  F036         	call	_loop	;wreg free
  7247   00B84E  D7FB               	goto	l24108
  7248   00B850                     __end_of_main:
  7249                           	callstack 0
  7250                           
  7251 ;; *************** function _setup *****************
  7252 ;; Defined at:
  7253 ;;		line 228 in file "../main.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 19
  7274 ;; This function calls:
  7275 ;;		_configIO
  7276 ;;		_getNV
  7277 ;;		_initInputScan
  7278 ;;		_initOutputs
  7279 ;;		_initServos
  7280 ;;		_setTimedResponseDelay
  7281 ;;		_tickGet
  7282 ;;		_universalEventsInit
  7283 ;; This function is called by:
  7284 ;;		_main
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text1
  7289   009A62                     __ptext1:
  7290                           	callstack 0
  7291   009A62                     _setup:
  7292                           	callstack 11
  7293                           
  7294                           ;../main.c: 233:     transport = &canTransport;
  7295                           
  7296                           ;incstack = 0
  7297   009A62  0E7B               	movlw	low _canTransport
  7298   009A64  0101               	movlb	1	; () banked
  7299   009A66  6F7A               	movwf	_transport& (0+255),b
  7300   009A68  0EEF               	movlw	high _canTransport
  7301   009A6A  6F7B               	movwf	(_transport+1)& (0+255),b
  7302                           
  7303                           ; BSR set to: 1
  7304                           ;../main.c: 240:     INTCON2bits.RBPU = 0;
  7305   009A6C  9EF1               	bcf	241,7,c	;volatile
  7306                           
  7307                           ; BSR set to: 1
  7308                           ;../main.c: 242:     WPUB = (uint8_t)getNV(4);
  7309   009A6E  0E04               	movlw	4
  7310   009A70  EC7F  F05D         	call	_getNV
  7311   009A74  0100               	movlb	0	; () banked
  7312   009A76  518D               	movf	?_getNV& (0+255),w,b
  7313   009A78  010F               	movlb	15	; () banked
  7314   009A7A  6F5B               	movwf	91,b	;volatile
  7315                           
  7316                           ; BSR set to: 15
  7317                           ;../main.c: 293:     setTimedResponseDelay((uint8_t)getNV(5));
  7318   009A7C  0E05               	movlw	5
  7319   009A7E  EC7F  F05D         	call	_getNV
  7320   009A82  0100               	movlb	0	; () banked
  7321   009A84  518D               	movf	?_getNV& (0+255),w,b
  7322   009A86  ECEE  F061         	call	_setTimedResponseDelay
  7323                           
  7324                           ;../main.c: 294:     universalEventsInit();
  7325   009A8A  ECB8  F061         	call	_universalEventsInit	;wreg free
  7326                           
  7327                           ;../main.c: 301:     ANCON0 = 0x00;
  7328   009A8E  0E00               	movlw	0
  7329   009A90  010F               	movlb	15	; () banked
  7330   009A92  6F5D               	movwf	93,b	;volatile
  7331                           
  7332                           ; BSR set to: 15
  7333                           ;../main.c: 302:     ANCON1 = 0x00;
  7334   009A94  0E00               	movlw	0
  7335   009A96  6F5C               	movwf	92,b	;volatile
  7336                           
  7337                           ; BSR set to: 15
  7338                           ;../main.c: 315:     initServos();
  7339   009A98  ECC3  F03E         	call	_initServos	;wreg free
  7340                           
  7341                           ;../main.c: 317:     initOutputs();
  7342   009A9C  ECCC  F05F         	call	_initOutputs	;wreg free
  7343                           
  7344                           ;../main.c: 320:     for (io=0; io< 16; io++) {
  7345   009AA0  0E00               	movlw	0
  7346   009AA2  0100               	movlb	0	; () banked
  7347   009AA4  6FCB               	movwf	_io& (0+255),b
  7348   009AA6                     l23872:
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;../main.c: 321:         configIO(io);
  7352   009AA6  51CB               	movf	_io& (0+255),w,b
  7353   009AA8  EC70  F028         	call	_configIO
  7354                           
  7355                           ;../main.c: 322:     }
  7356   009AAC  0100               	movlb	0	; () banked
  7357   009AAE  2BCB               	incf	_io& (0+255),f,b
  7358                           
  7359                           ; BSR set to: 0
  7360   009AB0  0E0F               	movlw	15
  7361   009AB2  65CB               	cpfsgt	_io& (0+255),b
  7362   009AB4  D7F8               	goto	l23872
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;../main.c: 323:     initInputScan();
  7366   009AB6  ECDE  F04B         	call	_initInputScan	;wreg free
  7367                           
  7368                           ;../main.c: 326:     (INTCONbits.GIE = 1);
  7369   009ABA  8EF2               	bsf	242,7,c	;volatile
  7370                           
  7371                           ;../main.c: 328:     startTime.val = tickGet();
  7372   009ABC  ECED  F059         	call	_tickGet	;wreg free
  7373   009AC0  C08D  F01D         	movff	?_tickGet,_startTime
  7374   009AC4  C08E  F01E         	movff	?_tickGet+1,_startTime+1
  7375   009AC8  C08F  F01F         	movff	?_tickGet+2,_startTime+2
  7376   009ACC  C090  F020         	movff	?_tickGet+3,_startTime+3
  7377                           
  7378                           ;../main.c: 329:     lastServoStartTime.val = startTime.val;
  7379   009AD0  C01D  F174         	movff	_startTime,_lastServoStartTime
  7380   009AD4  C01E  F175         	movff	_startTime+1,_lastServoStartTime+1
  7381   009AD8  C01F  F176         	movff	_startTime+2,_lastServoStartTime+2
  7382   009ADC  C020  F177         	movff	_startTime+3,_lastServoStartTime+3
  7383                           
  7384                           ;../main.c: 330:     lastInputScanTime.val = startTime.val;
  7385   009AE0  C01D  F170         	movff	_startTime,_lastInputScanTime
  7386   009AE4  C01E  F171         	movff	_startTime+1,_lastInputScanTime+1
  7387   009AE8  C01F  F172         	movff	_startTime+2,_lastInputScanTime+2
  7388   009AEC  C020  F173         	movff	_startTime+3,_lastInputScanTime+3
  7389                           
  7390                           ;../main.c: 331:     lastActionPollTime.val = startTime.val;
  7391   009AF0  C01D  F16C         	movff	_startTime,_lastActionPollTime
  7392   009AF4  C01E  F16D         	movff	_startTime+1,_lastActionPollTime+1
  7393   009AF8  C01F  F16E         	movff	_startTime+2,_lastActionPollTime+2
  7394   009AFC  C020  F16F         	movff	_startTime+3,_lastActionPollTime+3
  7395                           
  7396                           ;../main.c: 333:     started = FALSE;
  7397   009B00  0E00               	movlw	0
  7398   009B02  0100               	movlb	0	; () banked
  7399   009B04  6FCC               	movwf	_started& (0+255),b
  7400                           
  7401                           ; BSR set to: 0
  7402   009B06  0012               	return		;funcret
  7403   009B08                     __end_of_setup:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function _universalEventsInit *****************
  7407 ;; Defined at:
  7408 ;;		line 90 in file "../universalEvents.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;		None
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  1    wreg      void 
  7415 ;; Registers used:
  7416 ;;		wreg, status,2
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7426 ;;Total ram usage:        0 bytes
  7427 ;; Hardware stack levels used: 1
  7428 ;; Hardware stack levels required when called: 12
  7429 ;; This function calls:
  7430 ;;		Nothing
  7431 ;; This function is called by:
  7432 ;;		_setup
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           
  7436                           	psect	text2
  7437   00C370                     __ptext2:
  7438                           	callstack 0
  7439   00C370                     _universalEventsInit:
  7440                           	callstack 17
  7441                           
  7442                           ;../universalEvents.c: 91:     startWait.val = 0;
  7443                           
  7444                           ; BSR set to: 0
  7445                           ;incstack = 0
  7446   00C370  0E00               	movlw	0
  7447   00C372  6E19               	movwf	_startWait^0,c
  7448   00C374  0E00               	movlw	0
  7449   00C376  6E1A               	movwf	(_startWait+1)^0,c
  7450   00C378  0E00               	movlw	0
  7451   00C37A  6E1B               	movwf	(_startWait+2)^0,c
  7452   00C37C  0E00               	movlw	0
  7453   00C37E  6E1C               	movwf	(_startWait+3)^0,c
  7454   00C380  0012               	return		;funcret
  7455   00C382                     __end_of_universalEventsInit:
  7456                           	callstack 0
  7457                           
  7458 ;; *************** function _initServos *****************
  7459 ;; Defined at:
  7460 ;;		line 123 in file "../servo.c"
  7461 ;; Parameters:    Size  Location     Type
  7462 ;;		None
  7463 ;; Auto vars:     Size  Location     Type
  7464 ;;  io              1   72[BANK0 ] unsigned char 
  7465 ;; Return value:  Size  Location     Type
  7466 ;;                  1    wreg      void 
  7467 ;; Registers used:
  7468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7469 ;; Tracked objects:
  7470 ;;		On entry : 0/0
  7471 ;;		On exit  : 0/0
  7472 ;;		Unchanged: 0/0
  7473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7475 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7477 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7478 ;;Total ram usage:        5 bytes
  7479 ;; Hardware stack levels used: 1
  7480 ;; Hardware stack levels required when called: 15
  7481 ;; This function calls:
  7482 ;;		_getNV
  7483 ;;		_readNVM
  7484 ;;		_setOutputPosition
  7485 ;;		_tickGet
  7486 ;; This function is called by:
  7487 ;;		_setup
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text3
  7492   007D86                     __ptext3:
  7493                           	callstack 0
  7494   007D86                     _initServos:
  7495                           	callstack 14
  7496                           
  7497                           ;incstack = 0
  7498   007D86  0E00               	movlw	0
  7499   007D88  0100               	movlb	0	; () banked
  7500   007D8A  6FA8               	movwf	initServos@io& (0+255),b
  7501   007D8C                     l21904:
  7502                           
  7503                           ; BSR set to: 0
  7504   007D8C  51A8               	movf	initServos@io& (0+255),w,b
  7505   007D8E  0D07               	mullw	7
  7506   007D90  50F3               	movf	243,w,c
  7507   007D92  0F11               	addlw	17
  7508   007D94  EC7F  F05D         	call	_getNV
  7509   007D98  0100               	movlb	0	; () banked
  7510   007D9A  A58D               	btfss	?_getNV& (0+255),2,b
  7511   007D9C  D009               	goto	l21908
  7512                           
  7513                           ; BSR set to: 0
  7514   007D9E  0E30               	movlw	low _servoState
  7515   007DA0  25A8               	addwf	initServos@io& (0+255),w,b
  7516   007DA2  6ED9               	movwf	fsr2l,c
  7517   007DA4  6ADA               	clrf	fsr2h,c
  7518   007DA6  0E01               	movlw	high _servoState
  7519   007DA8  22DA               	addwfc	fsr2h,f,c
  7520   007DAA  0E01               	movlw	1
  7521   007DAC  6EDF               	movwf	indf2,c
  7522   007DAE  D007               	goto	l21910
  7523   007DB0                     l21908:
  7524                           
  7525                           ; BSR set to: 0
  7526   007DB0  0E30               	movlw	low _servoState
  7527   007DB2  25A8               	addwf	initServos@io& (0+255),w,b
  7528   007DB4  6ED9               	movwf	fsr2l,c
  7529   007DB6  6ADA               	clrf	fsr2h,c
  7530   007DB8  0E01               	movlw	high _servoState
  7531   007DBA  22DA               	addwfc	fsr2h,f,c
  7532   007DBC  6ADF               	clrf	indf2,c
  7533   007DBE                     l21910:
  7534                           
  7535                           ; BSR set to: 0
  7536   007DBE  ECED  F059         	call	_tickGet	;wreg free
  7537   007DC2  0100               	movlb	0	; () banked
  7538   007DC4  51A8               	movf	initServos@io& (0+255),w,b
  7539   007DC6  0D04               	mullw	4
  7540   007DC8  0E00               	movlw	low _ticksWhenStopped
  7541   007DCA  24F3               	addwf	243,w,c
  7542   007DCC  6ED9               	movwf	fsr2l,c
  7543   007DCE  0E02               	movlw	high _ticksWhenStopped
  7544   007DD0  20F4               	addwfc	prodh,w,c
  7545   007DD2  6EDA               	movwf	fsr2h,c
  7546   007DD4  C08D  FFDE         	movff	?_tickGet,postinc2
  7547   007DD8  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7548   007DDC  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7549   007DE0  C090  FFDE         	movff	?_tickGet+3,postinc2
  7550                           
  7551                           ; BSR set to: 0
  7552   007DE4  51A8               	movf	initServos@io& (0+255),w,b
  7553   007DE6  0D07               	mullw	7
  7554   007DE8  50F3               	movf	243,w,c
  7555   007DEA  0F11               	addlw	17
  7556   007DEC  EC7F  F05D         	call	_getNV
  7557   007DF0  0100               	movlb	0	; () banked
  7558   007DF2  A58D               	btfss	?_getNV& (0+255),2,b
  7559   007DF4  D020               	goto	l21918
  7560                           
  7561                           ; BSR set to: 0
  7562   007DF6  51A8               	movf	initServos@io& (0+255),w,b
  7563   007DF8  0D07               	mullw	7
  7564   007DFA  50F3               	movf	243,w,c
  7565   007DFC  0F10               	addlw	16
  7566   007DFE  EC7F  F05D         	call	_getNV
  7567   007E02  0100               	movlb	0	; () banked
  7568   007E04  518D               	movf	?_getNV& (0+255),w,b
  7569   007E06  6FA7               	movwf	_initServos$7956& (0+255),b
  7570                           
  7571                           ; BSR set to: 0
  7572   007E08  0EDE               	movlw	222
  7573   007E0A  25A8               	addwf	initServos@io& (0+255),w,b
  7574   007E0C  6FA4               	movwf	??_initServos& (0+255),b
  7575   007E0E  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7576   007E10  0E03               	movlw	3
  7577   007E12  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7578   007E14  C0A4  F091         	movff	??_initServos,readNVM@index
  7579   007E18  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7580   007E1C  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7581   007E1E  0E00               	movlw	0
  7582   007E20  ECD9  F058         	call	_readNVM
  7583   007E24  0100               	movlb	0	; () banked
  7584   007E26  5191               	movf	?_readNVM& (0+255),w,b
  7585   007E28  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7586   007E2A  C0A7  F0A2         	movff	_initServos$7956,setOutputPosition@type
  7587   007E2E  51A8               	movf	initServos@io& (0+255),w,b
  7588   007E30  ECC6  F055         	call	_setOutputPosition
  7589   007E34  D019               	goto	l21922
  7590   007E36                     l21918:
  7591                           
  7592                           ; BSR set to: 0
  7593   007E36  51A8               	movf	initServos@io& (0+255),w,b
  7594   007E38  0D07               	mullw	7
  7595   007E3A  50F3               	movf	243,w,c
  7596   007E3C  0F12               	addlw	18
  7597   007E3E  EC7F  F05D         	call	_getNV
  7598   007E42  0100               	movlb	0	; () banked
  7599   007E44  518D               	movf	?_getNV& (0+255),w,b
  7600   007E46  6FA7               	movwf	_initServos$7956& (0+255),b
  7601   007E48  51A8               	movf	initServos@io& (0+255),w,b
  7602   007E4A  0D07               	mullw	7
  7603   007E4C  50F3               	movf	243,w,c
  7604   007E4E  0F10               	addlw	16
  7605   007E50  EC7F  F05D         	call	_getNV
  7606   007E54  0100               	movlb	0	; () banked
  7607   007E56  518D               	movf	?_getNV& (0+255),w,b
  7608   007E58  6FA6               	movwf	_initServos$7957& (0+255),b
  7609                           
  7610                           ; BSR set to: 0
  7611   007E5A  C0A7  F0A1         	movff	_initServos$7956,setOutputPosition@pos
  7612   007E5E  C0A6  F0A2         	movff	_initServos$7957,setOutputPosition@type
  7613   007E62  51A8               	movf	initServos@io& (0+255),w,b
  7614   007E64  ECC6  F055         	call	_setOutputPosition
  7615   007E68                     l21922:
  7616   007E68  0E20               	movlw	low _stepsPerPollSpeed
  7617   007E6A  0100               	movlb	0	; () banked
  7618   007E6C  25A8               	addwf	initServos@io& (0+255),w,b
  7619   007E6E  6ED9               	movwf	fsr2l,c
  7620   007E70  6ADA               	clrf	fsr2h,c
  7621   007E72  0E01               	movlw	high _stepsPerPollSpeed
  7622   007E74  22DA               	addwfc	fsr2h,f,c
  7623   007E76  6ADF               	clrf	indf2,c
  7624                           
  7625                           ; BSR set to: 0
  7626   007E78  2BA8               	incf	initServos@io& (0+255),f,b
  7627                           
  7628                           ; BSR set to: 0
  7629   007E7A  0E0F               	movlw	15
  7630   007E7C  65A8               	cpfsgt	initServos@io& (0+255),b
  7631   007E7E  D786               	goto	l21904
  7632                           
  7633                           ; BSR set to: 0
  7634   007E80  9EAA               	bcf	170,7,c	;volatile
  7635                           
  7636                           ; BSR set to: 0
  7637   007E82  0E3F               	movlw	-193
  7638   007E84  16CD               	andwf	205,f,c	;volatile
  7639   007E86  50CD               	movf	205,w,c	;volatile
  7640   007E88  0BCF               	andlw	-49
  7641   007E8A  0920               	iorlw	32
  7642   007E8C  6ECD               	movwf	205,c	;volatile
  7643                           
  7644                           ; BSR set to: 0
  7645   007E8E  86CD               	bsf	205,3,c	;volatile
  7646                           
  7647                           ; BSR set to: 0
  7648   007E90  82CD               	bsf	205,1,c	;volatile
  7649                           
  7650                           ; BSR set to: 0
  7651   007E92  809D               	bsf	157,0,c	;volatile
  7652                           
  7653                           ; BSR set to: 0
  7654   007E94  9EB0               	bcf	176,7,c	;volatile
  7655   007E96  0E3F               	movlw	-193
  7656   007E98  16B1               	andwf	177,f,c	;volatile
  7657   007E9A  50B1               	movf	177,w,c	;volatile
  7658   007E9C  0BCF               	andlw	-49
  7659   007E9E  0920               	iorlw	32
  7660   007EA0  6EB1               	movwf	177,c	;volatile
  7661                           
  7662                           ; BSR set to: 0
  7663   007EA2  86B1               	bsf	177,3,c	;volatile
  7664                           
  7665                           ; BSR set to: 0
  7666   007EA4  82B1               	bsf	177,1,c	;volatile
  7667                           
  7668                           ; BSR set to: 0
  7669   007EA6  82A0               	bsf	160,1,c	;volatile
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;../servo.c: 175:     servoInBlock = io -1;
  7673   007EA8  05A8               	decf	initServos@io& (0+255),w,b
  7674   007EAA  6FC5               	movwf	_servoInBlock& (0+255),b
  7675                           
  7676                           ; BSR set to: 0
  7677   007EAC  0012               	return		;funcret
  7678   007EAE                     __end_of_initServos:
  7679                           	callstack 0
  7680                           
  7681 ;; *************** function _setOutputPosition *****************
  7682 ;; Defined at:
  7683 ;;		line 137 in file "../outputs.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  io              1    wreg     unsigned char 
  7686 ;;  pos             1   65[BANK0 ] unsigned char 
  7687 ;;  type            1   66[BANK0 ] unsigned char 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  io              1   67[BANK0 ] unsigned char 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  1    wreg      void 
  7692 ;; Registers used:
  7693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7700 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7703 ;;Total ram usage:        3 bytes
  7704 ;; Hardware stack levels used: 1
  7705 ;; Hardware stack levels required when called: 14
  7706 ;; This function calls:
  7707 ;;		_getNV
  7708 ;;		_setDigitalOutput
  7709 ;;		_setOutputPin
  7710 ;;		_setServoPosition
  7711 ;; This function is called by:
  7712 ;;		_initServos
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text4
  7717   00AB8C                     __ptext4:
  7718                           	callstack 0
  7719   00AB8C                     _setOutputPosition:
  7720                           	callstack 14
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;incstack = 0
  7724                           ;setOutputPosition@io stored from wreg
  7725   00AB8C  0100               	movlb	0	; () banked
  7726   00AB8E  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7727                           
  7728                           ;../outputs.c: 138:     switch(type) {
  7729   00AB90  D020               	goto	l20786
  7730   00AB92                     l20774:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;../outputs.c: 145:             setDigitalOutput(io, pos);
  7734   00AB92  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7735   00AB96  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7736   00AB98  ECFC  F051         	call	_setDigitalOutput
  7737   00AB9C  0012               	return	
  7738   00AB9E                     l20778:
  7739                           
  7740                           ; BSR set to: 0
  7741                           ;../outputs.c: 155:             setServoPosition(io, pos);
  7742   00AB9E  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7743   00ABA2  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7744   00ABA4  EC86  F060         	call	_setServoPosition
  7745                           
  7746                           ;../outputs.c: 156:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7747   00ABA8  0100               	movlb	0	; () banked
  7748   00ABAA  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7749   00ABAC  0D07               	mullw	7
  7750   00ABAE  50F3               	movf	243,w,c
  7751   00ABB0  0F11               	addlw	17
  7752   00ABB2  0B20               	andlw	32
  7753   00ABB4  EC7F  F05D         	call	_getNV
  7754   00ABB8  0100               	movlb	0	; () banked
  7755   00ABBA  518D               	movf	?_getNV& (0+255),w,b
  7756   00ABBC  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7757   00ABBE  B4D8               	btfsc	status,2,c
  7758   00ABC0  D002               	goto	u21540
  7759   00ABC2  0E01               	movlw	1
  7760   00ABC4  D001               	goto	u21550
  7761   00ABC6                     u21540:
  7762   00ABC6  0E00               	movlw	0
  7763   00ABC8                     u21550:
  7764   00ABC8  6F91               	movwf	setOutputPin@state& (0+255),b
  7765   00ABCA  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7766   00ABCC  EC89  F037         	call	_setOutputPin
  7767   00ABD0  0012               	return	
  7768   00ABD2                     l20786:
  7769   00ABD2  0100               	movlb	0	; () banked
  7770   00ABD4  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7771                           
  7772                           ; Switch size 1, requested type "simple"
  7773                           ; Number of cases is 7, Range of values is 0 to 6
  7774                           ; switch strategies available:
  7775                           ; Name         Instructions Cycles
  7776                           ; simple_byte           22    12 (average)
  7777                           ;	Chosen strategy is simple_byte
  7778   00ABD6  0A00               	xorlw	0	; case 0
  7779   00ABD8  B4D8               	btfsc	status,2,c
  7780   00ABDA  0012               	return	
  7781   00ABDC  0A01               	xorlw	1	; case 1
  7782   00ABDE  B4D8               	btfsc	status,2,c
  7783   00ABE0  D7D8               	goto	l20774
  7784   00ABE2  0A03               	xorlw	3	; case 2
  7785   00ABE4  B4D8               	btfsc	status,2,c
  7786   00ABE6  D7DB               	goto	l20778
  7787   00ABE8  0A01               	xorlw	1	; case 3
  7788   00ABEA  B4D8               	btfsc	status,2,c
  7789   00ABEC  D7D8               	goto	l20778
  7790   00ABEE  0A07               	xorlw	7	; case 4
  7791   00ABF0  B4D8               	btfsc	status,2,c
  7792   00ABF2  D7D5               	goto	l20778
  7793   00ABF4  0A01               	xorlw	1	; case 5
  7794   00ABF6  B4D8               	btfsc	status,2,c
  7795   00ABF8  0012               	return	
  7796   00ABFA  0A03               	xorlw	3	; case 6
  7797   00ABFC  0012               	return	
  7798   00ABFE                     __end_of_setOutputPosition:
  7799                           	callstack 0
  7800                           
  7801 ;; *************** function _initOutputs *****************
  7802 ;; Defined at:
  7803 ;;		line 84 in file "../digitalOut.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;		None
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;  io              1   45[BANK0 ] unsigned char 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7820 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7821 ;;Total ram usage:        1 bytes
  7822 ;; Hardware stack levels used: 1
  7823 ;; Hardware stack levels required when called: 12
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_setup
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           	psect	text5
  7832   00BF98                     __ptext5:
  7833                           	callstack 0
  7834   00BF98                     _initOutputs:
  7835                           	callstack 17
  7836                           
  7837                           ;../digitalOut.c: 86:     uint8_t io;;../digitalOut.c: 87:     for (io=0; io<16; io++) {
  7838                           
  7839                           ;incstack = 0
  7840   00BF98  0E00               	movlw	0
  7841   00BF9A  0100               	movlb	0	; () banked
  7842   00BF9C  6F8D               	movwf	initOutputs@io& (0+255),b
  7843   00BF9E                     l15010:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;../digitalOut.c: 88:        pulseDelays[io] = 0;
  7847   00BF9E  0EE4               	movlw	low _pulseDelays
  7848   00BFA0  258D               	addwf	initOutputs@io& (0+255),w,b
  7849   00BFA2  6ED9               	movwf	fsr2l,c
  7850   00BFA4  6ADA               	clrf	fsr2h,c
  7851   00BFA6  0E02               	movlw	high _pulseDelays
  7852   00BFA8  22DA               	addwfc	fsr2h,f,c
  7853   00BFAA  6ADF               	clrf	indf2,c
  7854                           
  7855                           ;../digitalOut.c: 89:        flashDelays[io] = 0;
  7856   00BFAC  0ED4               	movlw	low _flashDelays
  7857   00BFAE  258D               	addwf	initOutputs@io& (0+255),w,b
  7858   00BFB0  6ED9               	movwf	fsr2l,c
  7859   00BFB2  6ADA               	clrf	fsr2h,c
  7860   00BFB4  0E02               	movlw	high _flashDelays
  7861   00BFB6  22DA               	addwfc	fsr2h,f,c
  7862   00BFB8  6ADF               	clrf	indf2,c
  7863                           
  7864                           ; BSR set to: 0
  7865                           ;../digitalOut.c: 90:     }
  7866   00BFBA  2B8D               	incf	initOutputs@io& (0+255),f,b
  7867                           
  7868                           ; BSR set to: 0
  7869   00BFBC  0E0F               	movlw	15
  7870   00BFBE  658D               	cpfsgt	initOutputs@io& (0+255),b
  7871   00BFC0  D7EE               	goto	l15010
  7872   00BFC2  0012               	return	
  7873   00BFC4                     __end_of_initOutputs:
  7874                           	callstack 0
  7875                           
  7876 ;; *************** function _initInputScan *****************
  7877 ;; Defined at:
  7878 ;;		line 76 in file "../inputs.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;		None
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  input           1   57[BANK0 ] unsigned char 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      void 
  7885 ;; Registers used:
  7886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7894 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7895 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7896 ;;Total ram usage:        3 bytes
  7897 ;; Hardware stack levels used: 1
  7898 ;; Hardware stack levels required when called: 14
  7899 ;; This function calls:
  7900 ;;		_getNV
  7901 ;;		_readInput
  7902 ;;		_readNVM
  7903 ;; This function is called by:
  7904 ;;		_setup
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text6
  7909   0097BC                     __ptext6:
  7910                           	callstack 0
  7911   0097BC                     _initInputScan:
  7912                           	callstack 15
  7913                           
  7914                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;incstack = 0
  7918   0097BC  0E00               	movlw	0
  7919   0097BE  0100               	movlb	0	; () banked
  7920   0097C0  6FCA               	movwf	_io@inputs$F843& (0+255),b
  7921   0097C2                     l21948:
  7922                           
  7923                           ; BSR set to: 0
  7924   0097C2  0E0F               	movlw	15
  7925   0097C4  65CA               	cpfsgt	_io@inputs$F843& (0+255),b
  7926   0097C6  D001               	goto	l21952
  7927   0097C8  0012               	return	
  7928   0097CA                     l21952:
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7932   0097CA  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7933   0097CC  EC6B  F040         	call	_readInput
  7934   0097D0  0100               	movlb	0	; () banked
  7935   0097D2  6F99               	movwf	initInputScan@input& (0+255),b
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;../inputs.c: 79:         inputState[io] = input;
  7939   0097D4  0EC4               	movlw	low _inputState
  7940   0097D6  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  7941   0097D8  6ED9               	movwf	fsr2l,c
  7942   0097DA  6ADA               	clrf	fsr2h,c
  7943   0097DC  0E02               	movlw	high _inputState
  7944   0097DE  22DA               	addwfc	fsr2h,f,c
  7945   0097E0  C099  FFDF         	movff	initInputScan@input,indf2
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  7949   0097E4  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7950   0097E6  0D07               	mullw	7
  7951   0097E8  50F3               	movf	243,w,c
  7952   0097EA  0F11               	addlw	17
  7953   0097EC  EC7F  F05D         	call	_getNV
  7954   0097F0  0100               	movlb	0	; () banked
  7955   0097F2  B18D               	btfsc	?_getNV& (0+255),0,b
  7956   0097F4  D007               	goto	l21960
  7957                           
  7958                           ; BSR set to: 0
  7959                           ;../inputs.c: 81:             input = !input;
  7960   0097F6  5199               	movf	initInputScan@input& (0+255),w,b
  7961   0097F8  A4D8               	btfss	status,2,c
  7962   0097FA  D002               	goto	u23230
  7963   0097FC  0E01               	movlw	1
  7964   0097FE  D001               	goto	u23240
  7965   009800                     u23230:
  7966   009800  0E00               	movlw	0
  7967   009802                     u23240:
  7968   009802  6F99               	movwf	initInputScan@input& (0+255),b
  7969   009804                     l21960:
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;../inputs.c: 83:         outputState[io] = input;
  7973   009804  0EB4               	movlw	low _outputState
  7974   009806  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  7975   009808  6ED9               	movwf	fsr2l,c
  7976   00980A  6ADA               	clrf	fsr2h,c
  7977   00980C  0E02               	movlw	high _outputState
  7978   00980E  22DA               	addwfc	fsr2h,f,c
  7979   009810  C099  FFDF         	movff	initInputScan@input,indf2
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  7983   009814  51CA               	movf	_io@inputs$F843& (0+255),w,b
  7984   009816  0D07               	mullw	7
  7985   009818  50F3               	movf	243,w,c
  7986   00981A  0F11               	addlw	17
  7987   00981C  EC7F  F05D         	call	_getNV
  7988   009820  0100               	movlb	0	; () banked
  7989   009822  A98D               	btfss	?_getNV& (0+255),4,b
  7990   009824  D017               	goto	l21966
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  7994   009826  0EDE               	movlw	222
  7995   009828  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  7996   00982A  6F97               	movwf	??_initInputScan& (0+255),b
  7997   00982C  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  7998   00982E  0E03               	movlw	3
  7999   009830  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8000   009832  C097  F091         	movff	??_initInputScan,readNVM@index
  8001   009836  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8002   00983A  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8003   00983C  0E00               	movlw	0
  8004   00983E  ECD9  F058         	call	_readNVM
  8005   009842  0EB4               	movlw	low _outputState
  8006   009844  0100               	movlb	0	; () banked
  8007   009846  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  8008   009848  6ED9               	movwf	fsr2l,c
  8009   00984A  6ADA               	clrf	fsr2h,c
  8010   00984C  0E02               	movlw	high _outputState
  8011   00984E  22DA               	addwfc	fsr2h,f,c
  8012   009850  C091  FFDF         	movff	?_readNVM,indf2
  8013   009854                     l21966:
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;../inputs.c: 87:         delayCount[io] = 0;
  8017   009854  0EA4               	movlw	low _delayCount
  8018   009856  25CA               	addwf	_io@inputs$F843& (0+255),w,b
  8019   009858  6ED9               	movwf	fsr2l,c
  8020   00985A  6ADA               	clrf	fsr2h,c
  8021   00985C  0E02               	movlw	high _delayCount
  8022   00985E  22DA               	addwfc	fsr2h,f,c
  8023   009860  6ADF               	clrf	indf2,c
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;../inputs.c: 88:     }
  8027   009862  2BCA               	incf	_io@inputs$F843& (0+255),f,b
  8028   009864  D7AE               	goto	l21948
  8029   009866                     __end_of_initInputScan:
  8030                           	callstack 0
  8031                           
  8032 ;; *************** function _powerUp *****************
  8033 ;; Defined at:
  8034 ;;		line 875 in file "../../VLCBlib_PIC/vlcb.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;		None
  8037 ;; Auto vars:     Size  Location     Type
  8038 ;;  i               1   13[BANK1 ] unsigned char 
  8039 ;;  divider         1    0        unsigned char 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  1    wreg      void 
  8042 ;; Registers used:
  8043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;Total ram usage:        5 bytes
  8054 ;; Hardware stack levels used: 1
  8055 ;; Hardware stack levels required when called: 18
  8056 ;; This function calls:
  8057 ;;		NULL
  8058 ;;		_ackPowerUp
  8059 ;;		_canPowerUp
  8060 ;;		_consumer2QPowerUp
  8061 ;;		_initTicker
  8062 ;;		_initTimedResponse
  8063 ;;		_leds_powerUp
  8064 ;;		_mnsPowerUp
  8065 ;;		_nvPowerUp
  8066 ;;		_teachPowerUp
  8067 ;; This function is called by:
  8068 ;;		_main
  8069 ;; This function uses a non-reentrant model
  8070 ;;
  8071                           
  8072                           	psect	text7
  8073   008782                     __ptext7:
  8074                           	callstack 0
  8075   008782                     _powerUp:
  8076                           	callstack 12
  8077                           
  8078                           ;../../VLCBlib_PIC/vlcb.c: 876:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 877:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 880:     initTicker(0);
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;incstack = 0
  8082   008782  0E00               	movlw	0
  8083   008784  ECBB  F05C         	call	_initTicker
  8084                           
  8085                           ;../../VLCBlib_PIC/vlcb.c: 881:     initTimedResponse();
  8086   008788  ECF7  F061         	call	_initTimedResponse	;wreg free
  8087                           
  8088                           ;../../VLCBlib_PIC/vlcb.c: 882:     leds_powerUp();
  8089   00878C  EC99  F05E         	call	_leds_powerUp	;wreg free
  8090                           
  8091                           ;../../VLCBlib_PIC/vlcb.c: 883:     timedResponseDelay = 5;
  8092   008790  0E05               	movlw	5
  8093   008792  0101               	movlb	1	; () banked
  8094   008794  6F7C               	movwf	_timedResponseDelay& (0+255),b
  8095                           
  8096                           ; BSR set to: 1
  8097                           ;../../VLCBlib_PIC/vlcb.c: 885:     for (i=0; i<9; i++) {
  8098   008796  0E00               	movlw	0
  8099   008798  6FCB               	movwf	powerUp@i& (0+255),b
  8100   00879A                     l23934:
  8101                           
  8102                           ; BSR set to: 1
  8103                           ;../../VLCBlib_PIC/vlcb.c: 886:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8104   00879A  51CB               	movf	powerUp@i& (0+255),w,b
  8105   00879C  0D02               	mullw	2
  8106   00879E  0E75               	movlw	low _services
  8107   0087A0  24F3               	addwf	243,w,c
  8108   0087A2  6EF6               	movwf	tblptrl,c
  8109   0087A4  0EEE               	movlw	high _services
  8110   0087A6  20F4               	addwfc	244,w,c
  8111   0087A8  6EF7               	movwf	tblptrh,c
  8112   0087AA                     	if	1	;There are 3 active tblptr bytes
  8113   0087AA  6AF8               	clrf	tblptru,c
  8114   0087AC  0E00               	movlw	low (__mediumconst shr (0+16))
  8115   0087AE  22F8               	addwfc	tblptru,f,c
  8116   0087B0                     	endif
  8117   0087B0  0009               	tblrd		*+
  8118   0087B2  50F5               	movf	tablat,w,c
  8119   0087B4  0009               	tblrd		*+
  8120   0087B6  10F5               	iorwf	tablat,w,c
  8121   0087B8  B4D8               	btfsc	status,2,c
  8122   0087BA  D04B               	goto	u25789
  8123                           
  8124                           ; BSR set to: 1
  8125   0087BC  51CB               	movf	powerUp@i& (0+255),w,b
  8126   0087BE  0D02               	mullw	2
  8127   0087C0  0E75               	movlw	low _services
  8128   0087C2  24F3               	addwf	243,w,c
  8129   0087C4  6EF6               	movwf	tblptrl,c
  8130   0087C6  0EEE               	movlw	high _services
  8131   0087C8  20F4               	addwfc	244,w,c
  8132   0087CA  6EF7               	movwf	tblptrh,c
  8133   0087CC                     	if	1	;There are 3 active tblptr bytes
  8134   0087CC  6AF8               	clrf	tblptru,c
  8135   0087CE  0E00               	movlw	low (__mediumconst shr (0+16))
  8136   0087D0  22F8               	addwfc	tblptru,f,c
  8137   0087D2                     	endif
  8138   0087D2  0009               	tblrd		*+
  8139   0087D4  CFF5 F1C7          	movff	tablat,??_powerUp
  8140   0087D8  0009               	tblrd		*+
  8141   0087DA  CFF5 F1C8          	movff	tablat,??_powerUp+1
  8142   0087DE  0E04               	movlw	4
  8143   0087E0  27C7               	addwf	??_powerUp& (0+255),f,b
  8144   0087E2  0E00               	movlw	0
  8145   0087E4  23C8               	addwfc	(??_powerUp+1)& (0+255),f,b
  8146   0087E6  C1C7  FFF6         	movff	??_powerUp,tblptrl
  8147   0087EA  C1C8  FFF7         	movff	??_powerUp+1,tblptrh
  8148   0087EE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8149   0087EE  6AF8               	clrf	tblptru,c
  8150   0087F0                     	endif
  8151   0087F0                     	if	0	;tblptru may be non-zero
  8152   0087F0                     	endif
  8153   0087F0  0009               	tblrd		*+
  8154   0087F2  50F5               	movf	tablat,w,c
  8155   0087F4  0009               	tblrd		*+
  8156   0087F6  10F5               	iorwf	tablat,w,c
  8157   0087F8  B4D8               	btfsc	status,2,c
  8158   0087FA  D02B               	goto	u25789
  8159                           
  8160                           ; BSR set to: 1
  8161                           ;../../VLCBlib_PIC/vlcb.c: 887:             services[i]->powerUp();
  8162   0087FC  51CB               	movf	powerUp@i& (0+255),w,b
  8163   0087FE  0D02               	mullw	2
  8164   008800  0E75               	movlw	low _services
  8165   008802  24F3               	addwf	243,w,c
  8166   008804  6EF6               	movwf	tblptrl,c
  8167   008806  0EEE               	movlw	high _services
  8168   008808  20F4               	addwfc	244,w,c
  8169   00880A  6EF7               	movwf	tblptrh,c
  8170   00880C                     	if	1	;There are 3 active tblptr bytes
  8171   00880C  6AF8               	clrf	tblptru,c
  8172   00880E  0E00               	movlw	low (__mediumconst shr (0+16))
  8173   008810  22F8               	addwfc	tblptru,f,c
  8174   008812                     	endif
  8175   008812  0009               	tblrd		*+
  8176   008814  CFF5 F1C7          	movff	tablat,??_powerUp
  8177   008818  0009               	tblrd		*+
  8178   00881A  CFF5 F1C8          	movff	tablat,??_powerUp+1
  8179   00881E  0E04               	movlw	4
  8180   008820  27C7               	addwf	??_powerUp& (0+255),f,b
  8181   008822  0E00               	movlw	0
  8182   008824  23C8               	addwfc	(??_powerUp+1)& (0+255),f,b
  8183   008826  C1C7  FFF6         	movff	??_powerUp,tblptrl
  8184   00882A  C1C8  FFF7         	movff	??_powerUp+1,tblptrh
  8185   00882E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8186   00882E  6AF8               	clrf	tblptru,c
  8187   008830                     	endif
  8188   008830                     	if	0	;tblptru may be non-zero
  8189   008830                     	endif
  8190   008830  0009               	tblrd		*+
  8191   008832  CFF5 F1C9          	movff	tablat,??_powerUp+2
  8192   008836  0009               	tblrd		*+
  8193   008838  CFF5 F1CA          	movff	tablat,??_powerUp+3
  8194   00883C  D801               	call	u25788
  8195   00883E  D009               	goto	u25789
  8196   008840                     u25788:
  8197   008840  0005               	push	
  8198   008842  6EFA               	movwf	pclath,c
  8199   008844  51C9               	movf	(??_powerUp+2)& (0+255),w,b
  8200   008846  6EFD               	movwf	tosl,c
  8201   008848  51CA               	movf	(??_powerUp+3)& (0+255),w,b
  8202   00884A  6EFE               	movwf	tosh,c
  8203   00884C  6AFF               	clrf	tosu,c
  8204   00884E  50FA               	movf	pclath,w,c
  8205   008850  0012               	return		;indir
  8206   008852                     u25789:
  8207                           
  8208                           ;../../VLCBlib_PIC/vlcb.c: 889:     }
  8209   008852  0101               	movlb	1	; () banked
  8210   008854  2BCB               	incf	powerUp@i& (0+255),f,b
  8211                           
  8212                           ; BSR set to: 1
  8213   008856  0E08               	movlw	8
  8214   008858  65CB               	cpfsgt	powerUp@i& (0+255),b
  8215   00885A  D79F               	goto	l23934
  8216   00885C  0012               	return	
  8217   00885E                     __end_of_powerUp:
  8218                           	callstack 0
  8219                           
  8220 ;; *************** function _canPowerUp *****************
  8221 ;; Defined at:
  8222 ;;		line 206 in file "../../VLCBlib_PIC/can18_ecan.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  temp            2   56[BANK0 ] int 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1    wreg      void 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8237 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8238 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8239 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8240 ;;Total ram usage:        3 bytes
  8241 ;; Hardware stack levels used: 1
  8242 ;; Hardware stack levels required when called: 14
  8243 ;; This function calls:
  8244 ;;		_readNVM
  8245 ;;		_tickGet
  8246 ;; This function is called by:
  8247 ;;		_powerUp
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text8
  8252   00699C                     __ptext8:
  8253                           	callstack 0
  8254   00699C                     _canPowerUp:
  8255                           	callstack 15
  8256                           
  8257                           ;../../VLCBlib_PIC/can18_ecan.c: 207:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 210:
      +                               rxQueue.readIndex = 0;
  8258                           
  8259                           ; BSR set to: 1
  8260                           ;incstack = 0
  8261   00699C  0E00               	movlw	0
  8262   00699E  6E28               	movwf	(_rxQueue+2)^0,c
  8263                           
  8264                           ;../../VLCBlib_PIC/can18_ecan.c: 211:     rxQueue.writeIndex = 0;
  8265   0069A0  0E00               	movlw	0
  8266   0069A2  6E29               	movwf	(_rxQueue+3)^0,c
  8267                           
  8268                           ;../../VLCBlib_PIC/can18_ecan.c: 212:     rxQueue.messages = rxBuffers;
  8269   0069A4  0E48               	movlw	low _rxBuffers
  8270   0069A6  6E26               	movwf	_rxQueue^0,c
  8271   0069A8  0E07               	movlw	high _rxBuffers
  8272   0069AA  6E27               	movwf	(_rxQueue+1)^0,c
  8273                           
  8274                           ;../../VLCBlib_PIC/can18_ecan.c: 213:     rxQueue.size = 32;
  8275   0069AC  0E20               	movlw	32
  8276   0069AE  6E2A               	movwf	(_rxQueue+4)^0,c
  8277                           
  8278                           ;../../VLCBlib_PIC/can18_ecan.c: 215:     txQueue.readIndex = 0;
  8279   0069B0  0E00               	movlw	0
  8280   0069B2  0101               	movlb	1	; () banked
  8281   0069B4  6FB5               	movwf	(_txQueue+2)& (0+255),b
  8282                           
  8283                           ; BSR set to: 1
  8284                           ;../../VLCBlib_PIC/can18_ecan.c: 216:     txQueue.writeIndex = 0;
  8285   0069B6  0E00               	movlw	0
  8286   0069B8  6FB6               	movwf	(_txQueue+3)& (0+255),b
  8287                           
  8288                           ;../../VLCBlib_PIC/can18_ecan.c: 217:     txQueue.messages = txBuffers;
  8289   0069BA  0E80               	movlw	low _txBuffers
  8290   0069BC  6FB3               	movwf	_txQueue& (0+255),b
  8291   0069BE  0E04               	movlw	high _txBuffers
  8292   0069C0  6FB4               	movwf	(_txQueue+1)& (0+255),b
  8293                           
  8294                           ; BSR set to: 1
  8295                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     txQueue.size = 8;
  8296   0069C2  0E08               	movlw	8
  8297   0069C4  6FB7               	movwf	(_txQueue+4)& (0+255),b
  8298                           
  8299                           ; BSR set to: 1
  8300                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8301   0069C6  0EFE               	movlw	254
  8302   0069C8  0100               	movlb	0	; () banked
  8303   0069CA  6F91               	movwf	readNVM@index& (0+255),b
  8304   0069CC  0E03               	movlw	3
  8305   0069CE  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8306   0069D0  0E00               	movlw	0
  8307   0069D2  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8308   0069D4  0E00               	movlw	0
  8309   0069D6  ECD9  F058         	call	_readNVM
  8310   0069DA  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8311   0069DE  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8312                           
  8313                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     if (temp < 0) {
  8314   0069E2  0100               	movlb	0	; () banked
  8315   0069E4  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8316   0069E6  D003               	goto	l2845
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;../../VLCBlib_PIC/can18_ecan.c: 225:         canId = 0;
  8320   0069E8  0E00               	movlw	0
  8321   0069EA  6FB8               	movwf	_canId& (0+255),b
  8322                           
  8323                           ;../../VLCBlib_PIC/can18_ecan.c: 226:     } else {
  8324   0069EC  D002               	goto	l23644
  8325   0069EE                     l2845:
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;../../VLCBlib_PIC/can18_ecan.c: 227:         canId = (uint8_t)temp;
  8329   0069EE  C098  F0B8         	movff	canPowerUp@temp,_canId
  8330   0069F2                     l23644:
  8331                           
  8332                           ; BSR set to: 0
  8333                           ;../../VLCBlib_PIC/can18_ecan.c: 230:     for (temp=0; temp<16; temp++) {
  8334   0069F2  0E00               	movlw	0
  8335   0069F4  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8336   0069F6  0E00               	movlw	0
  8337   0069F8  6F98               	movwf	canPowerUp@temp& (0+255),b
  8338   0069FA                     l23650:
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;../../VLCBlib_PIC/can18_ecan.c: 231:         canDiagnostics[temp].asInt = 0;
  8342   0069FA  90D8               	bcf	status,0,c
  8343   0069FC  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8344   0069FE  6ED9               	movwf	fsr2l,c
  8345   006A00  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8346   006A02  6EDA               	movwf	fsr2h,c
  8347   006A04  0E7E               	movlw	low _canDiagnostics
  8348   006A06  26D9               	addwf	fsr2l,f,c
  8349   006A08  0E01               	movlw	high _canDiagnostics
  8350   006A0A  22DA               	addwfc	fsr2h,f,c
  8351   006A0C  6ADE               	clrf	postinc2,c
  8352   006A0E  6ADD               	clrf	postdec2,c
  8353                           
  8354                           ; BSR set to: 0
  8355                           ;../../VLCBlib_PIC/can18_ecan.c: 232:     }
  8356   006A10  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8357   006A12  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8358                           
  8359                           ; BSR set to: 0
  8360   006A14  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8361   006A16  D7F1               	goto	l23650
  8362   006A18  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8363   006A1A  E104               	bnz	u25510
  8364   006A1C  0E10               	movlw	16
  8365   006A1E  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8366   006A20  A0D8               	btfss	status,0,c
  8367   006A22  D7EB               	goto	l23650
  8368   006A24                     u25510:
  8369                           
  8370                           ; BSR set to: 0
  8371                           ;../../VLCBlib_PIC/can18_ecan.c: 234:     canTransmitFailed=0;
  8372   006A24  0E00               	movlw	0
  8373   006A26  6FB7               	movwf	_canTransmitFailed& (0+255),b
  8374                           
  8375                           ;../../VLCBlib_PIC/can18_ecan.c: 235:     IPR5 = 0;
  8376   006A28  0E00               	movlw	0
  8377   006A2A  6E78               	movwf	120,c	;volatile
  8378                           
  8379                           ;../../VLCBlib_PIC/can18_ecan.c: 238:     CANCON = 0b10000000;
  8380   006A2C  0E80               	movlw	128
  8381   006A2E  6E6F               	movwf	111,c	;volatile
  8382   006A30                     l2849:
  8383   006A30  AE6E               	btfss	110,7,c	;volatile
  8384   006A32  D7FE               	goto	l2849
  8385                           
  8386                           ;../../VLCBlib_PIC/can18_ecan.c: 242:     ECANCON = 0b10110000;
  8387   006A34  0EB0               	movlw	176
  8388   006A36  6E72               	movwf	114,c	;volatile
  8389                           
  8390                           ;../../VLCBlib_PIC/can18_ecan.c: 243:     BSEL0 = 0;
  8391   006A38  0E00               	movlw	0
  8392   006A3A  010E               	movlb	14	; () banked
  8393   006A3C  6F7D               	movwf	125,b	;volatile
  8394                           
  8395                           ;../../VLCBlib_PIC/can18_ecan.c: 267:       BRGCON1 = 0b00001111;
  8396   006A3E  0E0F               	movlw	15
  8397   006A40  6F43               	movwf	67,b	;volatile
  8398                           
  8399                           ;../../VLCBlib_PIC/can18_ecan.c: 270:     BRGCON2 = 0b10011110;
  8400   006A42  0E9E               	movlw	158
  8401   006A44  6F44               	movwf	68,b	;volatile
  8402                           
  8403                           ;../../VLCBlib_PIC/can18_ecan.c: 271:     BRGCON3 = 0b00000011;
  8404   006A46  0E03               	movlw	3
  8405   006A48  6F45               	movwf	69,b	;volatile
  8406                           
  8407                           ;../../VLCBlib_PIC/can18_ecan.c: 272:     CIOCON = 0b00100000;
  8408   006A4A  0E20               	movlw	32
  8409   006A4C  6E70               	movwf	112,c	;volatile
  8410                           
  8411                           ;../../VLCBlib_PIC/can18_ecan.c: 275:     RXM0SIDH = 0;
  8412   006A4E  0E00               	movlw	0
  8413   006A50  6FF8               	movwf	248,b	;volatile
  8414                           
  8415                           ;../../VLCBlib_PIC/can18_ecan.c: 276:     RXM0SIDL = 0x08;
  8416   006A52  0E08               	movlw	8
  8417   006A54  6FF9               	movwf	249,b	;volatile
  8418                           
  8419                           ;../../VLCBlib_PIC/can18_ecan.c: 277:     RXM0EIDH = 0;
  8420   006A56  0E00               	movlw	0
  8421   006A58  6FFA               	movwf	250,b	;volatile
  8422                           
  8423                           ;../../VLCBlib_PIC/can18_ecan.c: 278:     RXM0EIDL = 0;
  8424   006A5A  0E00               	movlw	0
  8425   006A5C  6FFB               	movwf	251,b	;volatile
  8426                           
  8427                           ;../../VLCBlib_PIC/can18_ecan.c: 279:     RXM1SIDH = 0;
  8428   006A5E  0E00               	movlw	0
  8429   006A60  6FFC               	movwf	252,b	;volatile
  8430                           
  8431                           ;../../VLCBlib_PIC/can18_ecan.c: 280:     RXM1SIDL = 0x08;
  8432   006A62  0E08               	movlw	8
  8433   006A64  6FFD               	movwf	253,b	;volatile
  8434                           
  8435                           ;../../VLCBlib_PIC/can18_ecan.c: 281:     RXM1EIDH = 0;
  8436   006A66  0E00               	movlw	0
  8437   006A68  6FFE               	movwf	254,b	;volatile
  8438                           
  8439                           ;../../VLCBlib_PIC/can18_ecan.c: 282:     RXM1EIDL = 0;
  8440   006A6A  0E00               	movlw	0
  8441   006A6C  6FFF               	movwf	255,b	;volatile
  8442                           
  8443                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     RXF0SIDL = 0x80;
  8444   006A6E  0E80               	movlw	128
  8445   006A70  6FE1               	movwf	225,b	;volatile
  8446                           
  8447                           ;../../VLCBlib_PIC/can18_ecan.c: 288:     RXFBCON0 = 0;
  8448   006A72  0E00               	movlw	0
  8449   006A74  6F71               	movwf	113,b	;volatile
  8450                           
  8451                           ;../../VLCBlib_PIC/can18_ecan.c: 289:     RXFBCON1 = 0;
  8452   006A76  0E00               	movlw	0
  8453   006A78  6F72               	movwf	114,b	;volatile
  8454                           
  8455                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXFBCON2 = 0;
  8456   006A7A  0E00               	movlw	0
  8457   006A7C  6F73               	movwf	115,b	;volatile
  8458                           
  8459                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXFBCON3 = 0;
  8460   006A7E  0E00               	movlw	0
  8461   006A80  6F74               	movwf	116,b	;volatile
  8462                           
  8463                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXFBCON4 = 0;
  8464   006A82  0E00               	movlw	0
  8465   006A84  6F75               	movwf	117,b	;volatile
  8466                           
  8467                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXFBCON5 = 0;
  8468   006A86  0E00               	movlw	0
  8469   006A88  6F76               	movwf	118,b	;volatile
  8470                           
  8471                           ;../../VLCBlib_PIC/can18_ecan.c: 294:     RXFBCON6 = 0;
  8472   006A8A  0E00               	movlw	0
  8473   006A8C  6F77               	movwf	119,b	;volatile
  8474                           
  8475                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXFBCON7 = 0;
  8476   006A8E  0E00               	movlw	0
  8477   006A90  6F78               	movwf	120,b	;volatile
  8478                           
  8479                           ;../../VLCBlib_PIC/can18_ecan.c: 298:     MSEL0 = 0;
  8480   006A92  0E00               	movlw	0
  8481   006A94  6F79               	movwf	121,b	;volatile
  8482                           
  8483                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL1 = 0;
  8484   006A96  0E00               	movlw	0
  8485   006A98  6F7A               	movwf	122,b	;volatile
  8486                           
  8487                           ;../../VLCBlib_PIC/can18_ecan.c: 300:     MSEL2 = 0;
  8488   006A9A  0E00               	movlw	0
  8489   006A9C  6F7B               	movwf	123,b	;volatile
  8490                           
  8491                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     MSEL3 = 0;
  8492   006A9E  0E00               	movlw	0
  8493   006AA0  6F7C               	movwf	124,b	;volatile
  8494                           
  8495                           ;../../VLCBlib_PIC/can18_ecan.c: 307:     RXB0CON = 0x20;
  8496   006AA2  0E20               	movlw	32
  8497   006AA4  6E60               	movwf	96,c	;volatile
  8498                           
  8499                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB1CON = 0x20;
  8500   006AA6  0E20               	movlw	32
  8501   006AA8  010F               	movlb	15	; () banked
  8502   006AAA  6F30               	movwf	48,b	;volatile
  8503                           
  8504                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     B0CON = 0;
  8505   006AAC  0E00               	movlw	0
  8506   006AAE  010E               	movlb	14	; () banked
  8507   006AB0  6F80               	movwf	128,b	;volatile
  8508                           
  8509                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B1CON = 0;
  8510   006AB2  0E00               	movlw	0
  8511   006AB4  6F90               	movwf	144,b	;volatile
  8512                           
  8513                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B2CON = 0;
  8514   006AB6  0E00               	movlw	0
  8515   006AB8  6FA0               	movwf	160,b	;volatile
  8516                           
  8517                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B3CON = 0;
  8518   006ABA  0E00               	movlw	0
  8519   006ABC  6FB0               	movwf	176,b	;volatile
  8520                           
  8521                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B4CON = 0;
  8522   006ABE  0E00               	movlw	0
  8523   006AC0  6FC0               	movwf	192,b	;volatile
  8524                           
  8525                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B5CON = 0;
  8526   006AC2  0E00               	movlw	0
  8527   006AC4  6FD0               	movwf	208,b	;volatile
  8528                           
  8529                           ;../../VLCBlib_PIC/can18_ecan.c: 316:     BIE0 = 0;
  8530   006AC6  0E00               	movlw	0
  8531   006AC8  6F7E               	movwf	126,b	;volatile
  8532                           
  8533                           ; BSR set to: 14
  8534                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     TXBIEbits.TXB0IE = 1;
  8535   006ACA  857F               	bsf	127,2,b	;volatile
  8536                           
  8537                           ; BSR set to: 14
  8538                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB1IE = 0;
  8539   006ACC  977F               	bcf	127,3,b	;volatile
  8540                           
  8541                           ; BSR set to: 14
  8542                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB2IE = 0;
  8543   006ACE  997F               	bcf	127,4,b	;volatile
  8544                           
  8545                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     CANCON = 0;
  8546   006AD0  0E00               	movlw	0
  8547   006AD2  6E6F               	movwf	111,c	;volatile
  8548                           
  8549                           ;../../VLCBlib_PIC/can18_ecan.c: 324:     TXB0CON = 0;
  8550   006AD4  0E00               	movlw	0
  8551   006AD6  010F               	movlb	15	; () banked
  8552   006AD8  6F20               	movwf	32,b	;volatile
  8553                           
  8554                           ; BSR set to: 15
  8555                           ;../../VLCBlib_PIC/can18_ecan.c: 325:     TXB0CONbits.TXPRI0 = 0;
  8556   006ADA  9120               	bcf	32,0,b	;volatile
  8557                           
  8558                           ; BSR set to: 15
  8559                           ;../../VLCBlib_PIC/can18_ecan.c: 326:     TXB0CONbits.TXPRI1 = 0;
  8560   006ADC  9320               	bcf	32,1,b	;volatile
  8561                           
  8562                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0DLC = 0;
  8563   006ADE  0E00               	movlw	0
  8564   006AE0  6F25               	movwf	37,b	;volatile
  8565                           
  8566                           ;../../VLCBlib_PIC/can18_ecan.c: 329:     TXB0SIDH = 0;
  8567   006AE2  0E00               	movlw	0
  8568   006AE4  6F21               	movwf	33,b	;volatile
  8569                           
  8570                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0SIDL = 0;
  8571   006AE6  0E00               	movlw	0
  8572   006AE8  6F22               	movwf	34,b	;volatile
  8573                           
  8574                           ;../../VLCBlib_PIC/can18_ecan.c: 334:     TXB1CON = 0;
  8575   006AEA  0E00               	movlw	0
  8576   006AEC  6F10               	movwf	16,b	;volatile
  8577                           
  8578                           ; BSR set to: 15
  8579                           ;../../VLCBlib_PIC/can18_ecan.c: 335:     TXB1CONbits.TXPRI0 = 0;
  8580   006AEE  9110               	bcf	16,0,b	;volatile
  8581                           
  8582                           ; BSR set to: 15
  8583                           ;../../VLCBlib_PIC/can18_ecan.c: 336:     TXB1CONbits.TXPRI1 = 1;
  8584   006AF0  8310               	bsf	16,1,b	;volatile
  8585                           
  8586                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1DLC = 0x40;
  8587   006AF2  0E40               	movlw	64
  8588   006AF4  6F15               	movwf	21,b	;volatile
  8589                           
  8590                           ; BSR set to: 15
  8591                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8592   006AF6  0E8B               	movlw	low (_canPri+4)
  8593   006AF8  6EF6               	movwf	tblptrl,c
  8594   006AFA  0EEE               	movlw	high (_canPri+4)
  8595   006AFC  6EF7               	movwf	tblptrh,c
  8596   006AFE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8597   006AFE  6AF8               	clrf	tblptru,c
  8598   006B00                     	endif
  8599   006B00                     	if	0	;tblptru may be non-zero
  8600   006B00                     	endif
  8601   006B00  0008               	tblrd		*
  8602   006B02  CFF5 F097          	movff	tablat,??_canPowerUp
  8603   006B06  0100               	movlb	0	; () banked
  8604   006B08  39B8               	swapf	_canId& (0+255),w,b
  8605   006B0A  46E8               	rlncf	wreg,f,c
  8606   006B0C  0B1F               	andlw	31
  8607   006B0E  0B0F               	andlw	15
  8608   006B10  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8609   006B12  010F               	movlb	15	; () banked
  8610   006B14  6F11               	movwf	17,b	;volatile
  8611                           
  8612                           ; BSR set to: 15
  8613                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1SIDL = TXB0SIDL;
  8614   006B16  CF22 FF12          	movff	3874,3858	;volatile
  8615                           
  8616                           ; BSR set to: 15
  8617                           ;../../VLCBlib_PIC/can18_ecan.c: 343:     TXB2CON = 0;
  8618   006B1A  0E00               	movlw	0
  8619   006B1C  6F00               	movwf	0,b	;volatile
  8620                           
  8621                           ; BSR set to: 15
  8622                           ;../../VLCBlib_PIC/can18_ecan.c: 344:     TXB2CONbits.TXPRI0 = 1;
  8623   006B1E  8100               	bsf	0,0,b	;volatile
  8624                           
  8625                           ; BSR set to: 15
  8626                           ;../../VLCBlib_PIC/can18_ecan.c: 345:     TXB2CONbits.TXPRI1 = 1;
  8627   006B20  8300               	bsf	0,1,b	;volatile
  8628                           
  8629                           ; BSR set to: 15
  8630                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2DLC = 0;
  8631   006B22  0E00               	movlw	0
  8632   006B24  6F05               	movwf	5,b	;volatile
  8633                           
  8634                           ; BSR set to: 15
  8635                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8636   006B26  0E8B               	movlw	low (_canPri+4)
  8637   006B28  6EF6               	movwf	tblptrl,c
  8638   006B2A  0EEE               	movlw	high (_canPri+4)
  8639   006B2C  6EF7               	movwf	tblptrh,c
  8640   006B2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8641   006B2E  6AF8               	clrf	tblptru,c
  8642   006B30                     	endif
  8643   006B30                     	if	0	;tblptru may be non-zero
  8644   006B30                     	endif
  8645   006B30  0008               	tblrd		*
  8646   006B32  CFF5 F097          	movff	tablat,??_canPowerUp
  8647   006B36  0100               	movlb	0	; () banked
  8648   006B38  39B8               	swapf	_canId& (0+255),w,b
  8649   006B3A  46E8               	rlncf	wreg,f,c
  8650   006B3C  0B1F               	andlw	31
  8651   006B3E  0B0F               	andlw	15
  8652   006B40  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8653   006B42  010F               	movlb	15	; () banked
  8654   006B44  6F01               	movwf	1,b	;volatile
  8655                           
  8656                           ; BSR set to: 15
  8657                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2SIDL = TXB0SIDL;
  8658   006B46  CF22 FF02          	movff	3874,3842	;volatile
  8659                           
  8660                           ;../../VLCBlib_PIC/can18_ecan.c: 352:     enumerationState = NO_ENUMERATION;
  8661   006B4A  0E00               	movlw	0
  8662   006B4C  0100               	movlb	0	; () banked
  8663   006B4E  6FB6               	movwf	_enumerationState& (0+255),b
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;../../VLCBlib_PIC/can18_ecan.c: 353:     enumerationStartTime.val = tickGet();
  8667   006B50  ECED  F059         	call	_tickGet	;wreg free
  8668   006B54  C08D  F011         	movff	?_tickGet,_enumerationStartTime
  8669   006B58  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
  8670   006B5C  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
  8671   006B60  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
  8672                           
  8673                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8674   006B64  C011  F015         	movff	_enumerationStartTime,_canTransmitTimeout
  8675   006B68  C012  F016         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8676   006B6C  C013  F017         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8677   006B70  C014  F018         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8678                           
  8679                           ;../../VLCBlib_PIC/can18_ecan.c: 358:     PIE5bits.FIFOWMIE = 1;
  8680   006B74  8076               	bsf	118,0,c	;volatile
  8681                           
  8682                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     PIE5bits.TXBnIE = 1;
  8683   006B76  8876               	bsf	118,4,c	;volatile
  8684                           
  8685                           ;../../VLCBlib_PIC/can18_ecan.c: 360:     PIE5bits.ERRIE = 1;
  8686   006B78  8A76               	bsf	118,5,c	;volatile
  8687   006B7A  0012               	return		;funcret
  8688   006B7C                     __end_of_canPowerUp:
  8689                           	callstack 0
  8690                           
  8691 ;; *************** function _nvPowerUp *****************
  8692 ;; Defined at:
  8693 ;;		line 129 in file "../../VLCBlib_PIC/nv.c"
  8694 ;; Parameters:    Size  Location     Type
  8695 ;;		None
  8696 ;; Auto vars:     Size  Location     Type
  8697 ;;  i               1   60[BANK0 ] unsigned char 
  8698 ;; Return value:  Size  Location     Type
  8699 ;;                  1    wreg      void 
  8700 ;; Registers used:
  8701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8702 ;; Tracked objects:
  8703 ;;		On entry : 0/0
  8704 ;;		On exit  : 0/0
  8705 ;;		Unchanged: 0/0
  8706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8708 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8711 ;;Total ram usage:        1 bytes
  8712 ;; Hardware stack levels used: 1
  8713 ;; Hardware stack levels required when called: 15
  8714 ;; This function calls:
  8715 ;;		_loadNvCache
  8716 ;; This function is called by:
  8717 ;;		_powerUp
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           	psect	text9
  8722   00C0E8                     __ptext9:
  8723                           	callstack 0
  8724   00C0E8                     _nvPowerUp:
  8725                           	callstack 14
  8726                           
  8727                           ;../../VLCBlib_PIC/nv.c: 130:     uint8_t i;;../../VLCBlib_PIC/nv.c: 131:     for (i=0; 
      +                          i<2; i++) {
  8728                           
  8729                           ;incstack = 0
  8730   00C0E8  0E00               	movlw	0
  8731   00C0EA  0100               	movlb	0	; () banked
  8732   00C0EC  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8733   00C0EE                     l23396:
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;../../VLCBlib_PIC/nv.c: 132:         nvDiagnostics[i].asUint = 0;
  8737   00C0EE  519C               	movf	nvPowerUp@i& (0+255),w,b
  8738   00C0F0  0D02               	mullw	2
  8739   00C0F2  50F3               	movf	243,w,c
  8740   00C0F4  0FCD               	addlw	low _nvDiagnostics
  8741   00C0F6  6ED9               	movwf	fsr2l,c
  8742   00C0F8  6ADA               	clrf	fsr2h,c
  8743   00C0FA  6ADE               	clrf	postinc2,c
  8744   00C0FC  6ADD               	clrf	postdec2,c
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;../../VLCBlib_PIC/nv.c: 133:     }
  8748   00C0FE  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8749                           
  8750                           ; BSR set to: 0
  8751   00C100  0E01               	movlw	1
  8752   00C102  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8753   00C104  D7F4               	goto	l23396
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;../../VLCBlib_PIC/nv.c: 135:     loadNvCache();
  8757   00C106  EC4D  F05C         	call	_loadNvCache	;wreg free
  8758   00C10A  0012               	return		;funcret
  8759   00C10C                     __end_of_nvPowerUp:
  8760                           	callstack 0
  8761                           
  8762 ;; *************** function _mnsPowerUp *****************
  8763 ;; Defined at:
  8764 ;;		line 277 in file "../../VLCBlib_PIC/mns.c"
  8765 ;; Parameters:    Size  Location     Type
  8766 ;;		None
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;  temp            2   56[BANK0 ] int 
  8769 ;;  i               1   55[BANK0 ] unsigned char 
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8780 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8782 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;Total ram usage:        3 bytes
  8784 ;; Hardware stack levels used: 1
  8785 ;; Hardware stack levels required when called: 14
  8786 ;; This function calls:
  8787 ;;		_readNVM
  8788 ;;		_setLEDsByMode
  8789 ;;		_tickGet
  8790 ;; This function is called by:
  8791 ;;		_powerUp
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           	psect	text10
  8796   007FCC                     __ptext10:
  8797                           	callstack 0
  8798   007FCC                     _mnsPowerUp:
  8799                           	callstack 15
  8800                           
  8801                           ;../../VLCBlib_PIC/mns.c: 278:     int temp;;../../VLCBlib_PIC/mns.c: 279:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 281:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8802                           
  8803                           ;incstack = 0
  8804   007FCC  0EFC               	movlw	252
  8805   007FCE  0100               	movlb	0	; () banked
  8806   007FD0  6F91               	movwf	readNVM@index& (0+255),b
  8807   007FD2  0E03               	movlw	3
  8808   007FD4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8809   007FD6  0E00               	movlw	0
  8810   007FD8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8811   007FDA  0E00               	movlw	0
  8812   007FDC  ECD9  F058         	call	_readNVM
  8813   007FE0  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8814   007FE4  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8815                           
  8816                           ;../../VLCBlib_PIC/mns.c: 282:     if (temp < 0) {
  8817   007FE8  0100               	movlb	0	; () banked
  8818   007FEA  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8819   007FEC  D005               	goto	l1829
  8820   007FEE                     u24700:
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;../../VLCBlib_PIC/mns.c: 283:         nn.bytes.hi = 0;
  8824   007FEE  0E00               	movlw	0
  8825   007FF0  6FB5               	movwf	(_nn+1)& (0+255),b
  8826                           
  8827                           ;../../VLCBlib_PIC/mns.c: 284:         nn.bytes.lo = 0;
  8828   007FF2  0E00               	movlw	0
  8829   007FF4  6FB4               	movwf	_nn& (0+255),b
  8830                           
  8831                           ;../../VLCBlib_PIC/mns.c: 285:     } else {
  8832   007FF6  D014               	goto	l22916
  8833   007FF8                     l1829:
  8834                           
  8835                           ; BSR set to: 0
  8836                           ;../../VLCBlib_PIC/mns.c: 286:         nn.bytes.hi = (uint8_t)temp;
  8837   007FF8  C098  F0B5         	movff	mnsPowerUp@temp,_nn+1
  8838                           
  8839                           ; BSR set to: 0
  8840                           ;../../VLCBlib_PIC/mns.c: 287:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8841   007FFC  0EFD               	movlw	253
  8842   007FFE  6F91               	movwf	readNVM@index& (0+255),b
  8843   008000  0E03               	movlw	3
  8844   008002  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8845   008004  0E00               	movlw	0
  8846   008006  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8847   008008  0E00               	movlw	0
  8848   00800A  ECD9  F058         	call	_readNVM
  8849   00800E  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8850   008012  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8851                           
  8852                           ;../../VLCBlib_PIC/mns.c: 288:         if (temp < 0) {
  8853   008016  0100               	movlb	0	; () banked
  8854   008018  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8855   00801A  D7E9               	goto	u24700
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;../../VLCBlib_PIC/mns.c: 292:             nn.bytes.lo = (uint8_t)temp;
  8859   00801C  C098  F0B4         	movff	mnsPowerUp@temp,_nn
  8860   008020                     l22916:
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;../../VLCBlib_PIC/mns.c: 295:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8864   008020  0EFB               	movlw	251
  8865   008022  6F91               	movwf	readNVM@index& (0+255),b
  8866   008024  0E03               	movlw	3
  8867   008026  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8868   008028  0E00               	movlw	0
  8869   00802A  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8870   00802C  0E00               	movlw	0
  8871   00802E  ECD9  F058         	call	_readNVM
  8872   008032  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8873   008036  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8874                           
  8875                           ;../../VLCBlib_PIC/mns.c: 296:     if (temp < 0) {
  8876   00803A  0100               	movlb	0	; () banked
  8877   00803C  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8878   00803E  D002               	goto	l1833
  8879                           
  8880                           ; BSR set to: 0
  8881                           ;../../VLCBlib_PIC/mns.c: 297:         mode_state = MODE_UNINITIALISED;
  8882   008040  69C2               	setf	_mode_state& (0+255),b
  8883                           
  8884                           ;../../VLCBlib_PIC/mns.c: 298:     } else {
  8885   008042  D002               	goto	l22922
  8886   008044                     l1833:
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;../../VLCBlib_PIC/mns.c: 299:         mode_state = (uint8_t)temp;
  8890   008044  C098  F0C2         	movff	mnsPowerUp@temp,_mode_state
  8891   008048                     l22922:
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;../../VLCBlib_PIC/mns.c: 301:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FA);
  8895   008048  0EFA               	movlw	250
  8896   00804A  6F91               	movwf	readNVM@index& (0+255),b
  8897   00804C  0E03               	movlw	3
  8898   00804E  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8899   008050  0E00               	movlw	0
  8900   008052  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8901   008054  0E00               	movlw	0
  8902   008056  ECD9  F058         	call	_readNVM
  8903   00805A  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8904   00805E  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8905                           
  8906                           ;../../VLCBlib_PIC/mns.c: 302:     if (temp < 0) {
  8907   008062  0100               	movlb	0	; () banked
  8908   008064  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8909   008066  D004               	goto	l1835
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;../../VLCBlib_PIC/mns.c: 303:         mode_flags = 4;
  8913   008068  0E04               	movlw	4
  8914   00806A  0101               	movlb	1	; () banked
  8915   00806C  6F7D               	movwf	_mode_flags& (0+255),b
  8916                           
  8917                           ;../../VLCBlib_PIC/mns.c: 304:     } else {
  8918   00806E  D002               	goto	l22928
  8919   008070                     l1835:
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;../../VLCBlib_PIC/mns.c: 305:         mode_flags = (uint8_t)temp;
  8923   008070  C098  F17D         	movff	mnsPowerUp@temp,_mode_flags
  8924   008074                     l22928:
  8925                           
  8926                           ;../../VLCBlib_PIC/mns.c: 308:     setLEDsByMode();
  8927   008074  ECF8  F05F         	call	_setLEDsByMode	;wreg free
  8928                           
  8929                           ;../../VLCBlib_PIC/mns.c: 310:     pbTimer.val = tickGet();
  8930   008078  ECED  F059         	call	_tickGet	;wreg free
  8931   00807C  C08D  F0AA         	movff	?_tickGet,_pbTimer
  8932   008080  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
  8933   008084  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
  8934   008088  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
  8935                           
  8936                           ;../../VLCBlib_PIC/mns.c: 313:     for (i=0; i< 6; i++) {
  8937   00808C  0E00               	movlw	0
  8938   00808E  0100               	movlb	0	; () banked
  8939   008090  6F97               	movwf	mnsPowerUp@i& (0+255),b
  8940   008092                     l22936:
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;../../VLCBlib_PIC/mns.c: 314:         mnsDiagnostics[i].asInt = 0;
  8944   008092  5197               	movf	mnsPowerUp@i& (0+255),w,b
  8945   008094  0D02               	mullw	2
  8946   008096  0E9E               	movlw	low _mnsDiagnostics
  8947   008098  24F3               	addwf	243,w,c
  8948   00809A  6ED9               	movwf	fsr2l,c
  8949   00809C  0E01               	movlw	high _mnsDiagnostics
  8950   00809E  20F4               	addwfc	prodh,w,c
  8951   0080A0  6EDA               	movwf	fsr2h,c
  8952   0080A2  6ADE               	clrf	postinc2,c
  8953   0080A4  6ADD               	clrf	postdec2,c
  8954                           
  8955                           ; BSR set to: 0
  8956                           ;../../VLCBlib_PIC/mns.c: 315:     }
  8957   0080A6  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  8958                           
  8959                           ; BSR set to: 0
  8960   0080A8  0E05               	movlw	5
  8961   0080AA  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  8962   0080AC  D7F2               	goto	l22936
  8963                           
  8964                           ; BSR set to: 0
  8965                           ;../../VLCBlib_PIC/mns.c: 316:     heartbeatSequence = 0;
  8966   0080AE  0E00               	movlw	0
  8967   0080B0  6FBE               	movwf	_heartbeatSequence& (0+255),b
  8968                           
  8969                           ;../../VLCBlib_PIC/mns.c: 317:     heartbeatTimer.val = 0;
  8970   0080B2  0E00               	movlw	0
  8971   0080B4  0101               	movlb	1	; () banked
  8972   0080B6  6F68               	movwf	_heartbeatTimer& (0+255),b
  8973   0080B8  0E00               	movlw	0
  8974   0080BA  6F69               	movwf	(_heartbeatTimer+1)& (0+255),b
  8975   0080BC  0E00               	movlw	0
  8976   0080BE  6F6A               	movwf	(_heartbeatTimer+2)& (0+255),b
  8977   0080C0  0E00               	movlw	0
  8978   0080C2  6F6B               	movwf	(_heartbeatTimer+3)& (0+255),b
  8979                           
  8980                           ;../../VLCBlib_PIC/mns.c: 318:     uptimeTimer.val = 0;
  8981   0080C4  0E00               	movlw	0
  8982   0080C6  6F64               	movwf	_uptimeTimer& (0+255),b
  8983   0080C8  0E00               	movlw	0
  8984   0080CA  6F65               	movwf	(_uptimeTimer+1)& (0+255),b
  8985   0080CC  0E00               	movlw	0
  8986   0080CE  6F66               	movwf	(_uptimeTimer+2)& (0+255),b
  8987   0080D0  0E00               	movlw	0
  8988   0080D2  6F67               	movwf	(_uptimeTimer+3)& (0+255),b
  8989                           
  8990                           ; BSR set to: 1
  8991   0080D4  0012               	return		;funcret
  8992   0080D6                     __end_of_mnsPowerUp:
  8993                           	callstack 0
  8994                           
  8995 ;; *************** function _ackPowerUp *****************
  8996 ;; Defined at:
  8997 ;;		line 85 in file "../../VLCBlib_PIC/event_acknowledge.c"
  8998 ;; Parameters:    Size  Location     Type
  8999 ;;		None
  9000 ;; Auto vars:     Size  Location     Type
  9001 ;;  i               1   45[BANK0 ] unsigned char 
  9002 ;; Return value:  Size  Location     Type
  9003 ;;                  1    wreg      void 
  9004 ;; Registers used:
  9005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9006 ;; Tracked objects:
  9007 ;;		On entry : 0/0
  9008 ;;		On exit  : 0/0
  9009 ;;		Unchanged: 0/0
  9010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9014 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9015 ;;Total ram usage:        1 bytes
  9016 ;; Hardware stack levels used: 1
  9017 ;; Hardware stack levels required when called: 12
  9018 ;; This function calls:
  9019 ;;		Nothing
  9020 ;; This function is called by:
  9021 ;;		_powerUp
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text11
  9026   00C1E0                     __ptext11:
  9027                           	callstack 0
  9028   00C1E0                     _ackPowerUp:
  9029                           	callstack 17
  9030                           
  9031                           ;../../VLCBlib_PIC/event_acknowledge.c: 86:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 89:     for (i=0; i< 1; i++) {
  9032                           
  9033                           ; BSR set to: 1
  9034                           ;incstack = 0
  9035   00C1E0  0E00               	movlw	0
  9036   00C1E2  0100               	movlb	0	; () banked
  9037   00C1E4  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9038   00C1E6                     l22456:
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;../../VLCBlib_PIC/event_acknowledge.c: 90:         ackDiagnostics[i].asInt = 0;
  9042   00C1E6  518D               	movf	ackPowerUp@i& (0+255),w,b
  9043   00C1E8  0D02               	mullw	2
  9044   00C1EA  50F3               	movf	243,w,c
  9045   00C1EC  0FD1               	addlw	low _ackDiagnostics
  9046   00C1EE  6ED9               	movwf	fsr2l,c
  9047   00C1F0  6ADA               	clrf	fsr2h,c
  9048   00C1F2  6ADE               	clrf	postinc2,c
  9049   00C1F4  6ADD               	clrf	postdec2,c
  9050                           
  9051                           ; BSR set to: 0
  9052                           ;../../VLCBlib_PIC/event_acknowledge.c: 91:     }
  9053   00C1F6  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9054                           
  9055                           ; BSR set to: 0
  9056   00C1F8  518D               	movf	ackPowerUp@i& (0+255),w,b
  9057   00C1FA  A4D8               	btfss	status,2,c
  9058   00C1FC  0012               	return	
  9059   00C1FE  D7F3               	goto	l22456
  9060   00C200                     __end_of_ackPowerUp:
  9061                           	callstack 0
  9062                           
  9063 ;; *************** function _consumer2QPowerUp *****************
  9064 ;; Defined at:
  9065 ;;		line 99 in file "../event_consumerDualActionQueue.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;		None
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  1    wreg      void 
  9072 ;; Registers used:
  9073 ;;		wreg, status,2
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9083 ;;Total ram usage:        0 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; Hardware stack levels required when called: 12
  9086 ;; This function calls:
  9087 ;;		Nothing
  9088 ;; This function is called by:
  9089 ;;		_powerUp
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text12
  9094   00C2EA                     __ptext12:
  9095                           	callstack 0
  9096   00C2EA                     _consumer2QPowerUp:
  9097                           	callstack 17
  9098                           
  9099                           ;../event_consumerDualActionQueue.c: 100:     normalReadIndex = 0;
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;incstack = 0
  9103   00C2EA  0E00               	movlw	0
  9104   00C2EC  0100               	movlb	0	; () banked
  9105   00C2EE  6FC9               	movwf	_normalReadIndex& (0+255),b
  9106                           
  9107                           ;../event_consumerDualActionQueue.c: 101:     normalWriteIndex = 0;
  9108   00C2F0  0E00               	movlw	0
  9109   00C2F2  6FC8               	movwf	_normalWriteIndex& (0+255),b
  9110                           
  9111                           ;../event_consumerDualActionQueue.c: 102:     expeditedReadIndex = 0;
  9112   00C2F4  0E00               	movlw	0
  9113   00C2F6  6FC7               	movwf	_expeditedReadIndex& (0+255),b
  9114                           
  9115                           ;../event_consumerDualActionQueue.c: 103:     expeditedWriteIndex = 0;
  9116   00C2F8  0E00               	movlw	0
  9117   00C2FA  6FC6               	movwf	_expeditedWriteIndex& (0+255),b
  9118                           
  9119                           ;../event_consumerDualActionQueue.c: 105:     expedited = FALSE;
  9120   00C2FC  0E00               	movlw	0
  9121   00C2FE  6E25               	movwf	_expedited^0,c
  9122                           
  9123                           ; BSR set to: 0
  9124   00C300  0012               	return		;funcret
  9125   00C302                     __end_of_consumer2QPowerUp:
  9126                           	callstack 0
  9127                           
  9128 ;; *************** function _teachPowerUp *****************
  9129 ;; Defined at:
  9130 ;;		line 289 in file "../../VLCBlib_PIC/event_teach.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  i               1   73[BANK0 ] unsigned char 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9145 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9147 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9148 ;;Total ram usage:        1 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; Hardware stack levels required when called: 17
  9151 ;; This function calls:
  9152 ;;		_rebuildHashtable
  9153 ;; This function is called by:
  9154 ;;		_powerUp
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158                           	psect	text13
  9159   00BFC4                     __ptext13:
  9160                           	callstack 0
  9161   00BFC4                     _teachPowerUp:
  9162                           	callstack 12
  9163                           
  9164                           ;../../VLCBlib_PIC/event_teach.c: 290:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 2
      +                          92:     rebuildHashtable();
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;incstack = 0
  9168   00BFC4  EC57  F03F         	call	_rebuildHashtable	;wreg free
  9169                           
  9170                           ;../../VLCBlib_PIC/event_teach.c: 295:     for (i=0; i< 1; i++) {
  9171   00BFC8  0E00               	movlw	0
  9172   00BFCA  0100               	movlb	0	; () banked
  9173   00BFCC  6FA9               	movwf	teachPowerUp@i& (0+255),b
  9174   00BFCE                     l22616:
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;../../VLCBlib_PIC/event_teach.c: 296:         teachDiagnostics[i].asInt = 0;
  9178   00BFCE  51A9               	movf	teachPowerUp@i& (0+255),w,b
  9179   00BFD0  0D02               	mullw	2
  9180   00BFD2  0EB8               	movlw	low _teachDiagnostics
  9181   00BFD4  24F3               	addwf	243,w,c
  9182   00BFD6  6ED9               	movwf	fsr2l,c
  9183   00BFD8  0E01               	movlw	high _teachDiagnostics
  9184   00BFDA  20F4               	addwfc	prodh,w,c
  9185   00BFDC  6EDA               	movwf	fsr2h,c
  9186   00BFDE  6ADE               	clrf	postinc2,c
  9187   00BFE0  6ADD               	clrf	postdec2,c
  9188                           
  9189                           ; BSR set to: 0
  9190                           ;../../VLCBlib_PIC/event_teach.c: 297:     }
  9191   00BFE2  2BA9               	incf	teachPowerUp@i& (0+255),f,b
  9192                           
  9193                           ; BSR set to: 0
  9194   00BFE4  51A9               	movf	teachPowerUp@i& (0+255),w,b
  9195   00BFE6  B4D8               	btfsc	status,2,c
  9196   00BFE8  D7F2               	goto	l22616
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;../../VLCBlib_PIC/event_teach.c: 298:     mode_flags &= ~1;
  9200   00BFEA  0101               	movlb	1	; () banked
  9201   00BFEC  917D               	bcf	_mode_flags& (0+255),0,b
  9202                           
  9203                           ; BSR set to: 1
  9204   00BFEE  0012               	return		;funcret
  9205   00BFF0                     __end_of_teachPowerUp:
  9206                           	callstack 0
  9207                           
  9208 ;; *************** function _leds_powerUp *****************
  9209 ;; Defined at:
  9210 ;;		line 76 in file "../../VLCBlib_PIC/statusLeds2.c"
  9211 ;; Parameters:    Size  Location     Type
  9212 ;;		None
  9213 ;; Auto vars:     Size  Location     Type
  9214 ;;		None
  9215 ;; Return value:  Size  Location     Type
  9216 ;;                  1    wreg      void 
  9217 ;; Registers used:
  9218 ;;		wreg, status,2, status,0, cstack
  9219 ;; Tracked objects:
  9220 ;;		On entry : 0/0
  9221 ;;		On exit  : 0/0
  9222 ;;		Unchanged: 0/0
  9223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9228 ;;Total ram usage:        0 bytes
  9229 ;; Hardware stack levels used: 1
  9230 ;; Hardware stack levels required when called: 13
  9231 ;; This function calls:
  9232 ;;		_tickGet
  9233 ;; This function is called by:
  9234 ;;		_powerUp
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text14
  9239   00BD32                     __ptext14:
  9240                           	callstack 0
  9241   00BD32                     _leds_powerUp:
  9242                           	callstack 16
  9243                           
  9244                           ;../../VLCBlib_PIC/statusLeds2.c: 78:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9245                           
  9246                           ; BSR set to: 1
  9247                           ;incstack = 0
  9248   00BD32  0E00               	movlw	0
  9249   00BD34  010F               	movlb	15	; () banked
  9250   00BD36  6F5C               	movwf	92,b	;volatile
  9251   00BD38  CF5C FF5D          	movff	3932,3933	;volatile
  9252                           
  9253                           ; BSR set to: 15
  9254   00BD3C  9E93               	bcf	147,7,c	;volatile
  9255   00BD3E  9C93               	bcf	147,6,c	;volatile
  9256                           
  9257                           ; BSR set to: 15
  9258   00BD40  8492               	bsf	146,2,c	;volatile
  9259                           
  9260                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     flashCounter[0] = 0;
  9261   00BD42  0E00               	movlw	0
  9262   00BD44  0100               	movlb	0	; () banked
  9263   00BD46  6FB0               	movwf	_flashCounter& (0+255),b
  9264                           
  9265                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[1] = 0;
  9266   00BD48  0E00               	movlw	0
  9267   00BD4A  6FB1               	movwf	(_flashCounter+1)& (0+255),b
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     ledTimer.val = tickGet();
  9271   00BD4C  ECED  F059         	call	_tickGet	;wreg free
  9272   00BD50  C08D  F160         	movff	?_tickGet,_ledTimer
  9273   00BD54  C08E  F161         	movff	?_tickGet+1,_ledTimer+1
  9274   00BD58  C08F  F162         	movff	?_tickGet+2,_ledTimer+2
  9275   00BD5C  C090  F163         	movff	?_tickGet+3,_ledTimer+3
  9276   00BD60  0012               	return		;funcret
  9277   00BD62                     __end_of_leds_powerUp:
  9278                           	callstack 0
  9279                           
  9280 ;; *************** function _initTimedResponse *****************
  9281 ;; Defined at:
  9282 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		None
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used: 1
  9302 ;; Hardware stack levels required when called: 12
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		_powerUp
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text15
  9311   00C3EE                     __ptext15:
  9312                           	callstack 0
  9313   00C3EE                     _initTimedResponse:
  9314                           	callstack 17
  9315                           
  9316                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9317                           
  9318                           ;incstack = 0
  9319   00C3EE  0100               	movlb	0	; () banked
  9320   00C3F0  69BB               	setf	_timedResponseType& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323   00C3F2  0012               	return		;funcret
  9324   00C3F4                     __end_of_initTimedResponse:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function _initTicker *****************
  9328 ;; Defined at:
  9329 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  priority        1    wreg     unsigned char 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;  priority        1   45[BANK0 ] unsigned char 
  9334 ;;  i               1   47[BANK0 ] unsigned char 
  9335 ;;  divider         1   46[BANK0 ] unsigned char 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  1    wreg      void 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9349 ;;Total ram usage:        3 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; Hardware stack levels required when called: 12
  9352 ;; This function calls:
  9353 ;;		Nothing
  9354 ;; This function is called by:
  9355 ;;		_powerUp
  9356 ;; This function uses a non-reentrant model
  9357 ;;
  9358                           
  9359                           	psect	text16
  9360   00B976                     __ptext16:
  9361                           	callstack 0
  9362   00B976                     _initTicker:
  9363                           	callstack 17
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;incstack = 0
  9367                           ;initTicker@priority stored from wreg
  9368   00B976  0100               	movlb	0	; () banked
  9369   00B978  6F8D               	movwf	initTicker@priority& (0+255),b
  9370                           
  9371                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9372   00B97A  0E00               	movlw	0
  9373   00B97C  0100               	movlb	0	; () banked
  9374   00B97E  6F8E               	movwf	initTicker@divider& (0+255),b
  9375                           
  9376                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9377   00B980  0E40               	movlw	64
  9378   00B982  6F8F               	movwf	initTicker@i& (0+255),b
  9379   00B984                     l23554:
  9380                           
  9381                           ; BSR set to: 0
  9382                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9383   00B984  2B8E               	incf	initTicker@divider& (0+255),f,b
  9384                           
  9385                           ; BSR set to: 0
  9386   00B986  90D8               	bcf	status,0,c
  9387   00B988  338F               	rrcf	initTicker@i& (0+255),f,b
  9388                           
  9389                           ; BSR set to: 0
  9390   00B98A  518F               	movf	initTicker@i& (0+255),w,b
  9391   00B98C  A4D8               	btfss	status,2,c
  9392   00B98E  D7FA               	goto	l23554
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9396   00B990  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9397                           
  9398                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9399   00B994  9CD5               	bcf	213,6,c	;volatile
  9400                           
  9401                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9402   00B996  9AD5               	bcf	213,5,c	;volatile
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9406   00B998  0E00               	movlw	0
  9407   00B99A  6ED7               	movwf	215,c	;volatile
  9408                           
  9409                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9410   00B99C  0E00               	movlw	0
  9411   00B99E  6ED6               	movwf	214,c	;volatile
  9412                           
  9413                           ; BSR set to: 0
  9414                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9415   00B9A0  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9416   00B9A2  D002               	bra	u25405
  9417   00B9A4  94F1               	bcf	241,2,c	;volatile
  9418   00B9A6  D001               	bra	u25406
  9419   00B9A8                     u25405:
  9420   00B9A8  84F1               	bsf	241,2,c	;volatile
  9421   00B9AA                     u25406:
  9422                           
  9423                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9424   00B9AA  94F2               	bcf	242,2,c	;volatile
  9425                           
  9426                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9427   00B9AC  8AF2               	bsf	242,5,c	;volatile
  9428                           
  9429                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9430   00B9AE  8ED5               	bsf	213,7,c	;volatile
  9431                           
  9432                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9433   00B9B0  0E00               	movlw	0
  9434   00B9B2  0100               	movlb	0	; () banked
  9435   00B9B4  6FC4               	movwf	_timerExtension1& (0+255),b	;volatile
  9436                           
  9437                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9438   00B9B6  0E00               	movlw	0
  9439   00B9B8  6FC3               	movwf	_timerExtension2& (0+255),b	;volatile
  9440                           
  9441                           ; BSR set to: 0
  9442   00B9BA  0012               	return		;funcret
  9443   00B9BC                     __end_of_initTicker:
  9444                           	callstack 0
  9445                           
  9446 ;; *************** function _poll *****************
  9447 ;; Defined at:
  9448 ;;		line 992 in file "../../VLCBlib_PIC/vlcb.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;		None
  9451 ;; Auto vars:     Size  Location     Type
  9452 ;;  m               9   36[BANK3 ] struct Message
  9453 ;;  i               1   35[BANK3 ] unsigned char 
  9454 ;;  handled         1   34[BANK3 ] enum E12732
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9465 ;;      Locals:         0       0       0       0      11       0       0       0       0       0       0       0       
      +0       0       0       0
  9466 ;;      Temps:          0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0
  9467 ;;      Totals:         0       0       0       0      15       0       0       0       0       0       0       0       
      +0       0       0       0
  9468 ;;Total ram usage:       15 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; Hardware stack levels required when called: 28
  9471 ;; This function calls:
  9472 ;;		NULL
  9473 ;;		_APP_postProcessMessage
  9474 ;;		_APP_preProcessMessage
  9475 ;;		___lmul
  9476 ;;		_ackEventProcessMessage
  9477 ;;		_bootProcessMessage
  9478 ;;		_canProcessMessage
  9479 ;;		_canReceiveMessage
  9480 ;;		_consumer2QProcessMessage
  9481 ;;		_flushFlashBlock
  9482 ;;		_leds_poll
  9483 ;;		_mnsPoll
  9484 ;;		_mnsProcessMessage
  9485 ;;		_nvProcessMessage
  9486 ;;		_pollTimedResponse
  9487 ;;		_producerProcessMessage
  9488 ;;		_showStatus
  9489 ;;		_teachProcessMessage
  9490 ;;		_tickGet
  9491 ;; This function is called by:
  9492 ;;		_main
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text17
  9497   004138                     __ptext17:
  9498                           	callstack 0
  9499   004138                     _poll:
  9500                           	callstack 2
  9501                           
  9502                           ;../../VLCBlib_PIC/vlcb.c: 993:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 994:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 995:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 998
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9503                           
  9504                           ; BSR set to: 0
  9505                           ;incstack = 0
  9506   004138  ECED  F059         	call	_tickGet	;wreg free
  9507   00413C  0101               	movlb	1	; () banked
  9508   00413E  515C               	movf	_timedResponseTime& (0+255),w,b
  9509   004140  0100               	movlb	0	; () banked
  9510   004142  5D8D               	subwf	?_tickGet& (0+255),w,b
  9511   004144  0103               	movlb	3	; () banked
  9512   004146  6FE6               	movwf	??_poll& (0+255),b
  9513   004148  0101               	movlb	1	; () banked
  9514   00414A  515D               	movf	(_timedResponseTime+1)& (0+255),w,b
  9515   00414C  0100               	movlb	0	; () banked
  9516   00414E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9517   004150  0103               	movlb	3	; () banked
  9518   004152  6FE7               	movwf	(??_poll+1)& (0+255),b
  9519   004154  0101               	movlb	1	; () banked
  9520   004156  515E               	movf	(_timedResponseTime+2)& (0+255),w,b
  9521   004158  0100               	movlb	0	; () banked
  9522   00415A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9523   00415C  0103               	movlb	3	; () banked
  9524   00415E  6FE8               	movwf	(??_poll+2)& (0+255),b
  9525   004160  0101               	movlb	1	; () banked
  9526   004162  515F               	movf	(_timedResponseTime+3)& (0+255),w,b
  9527   004164  0100               	movlb	0	; () banked
  9528   004166  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9529   004168  0103               	movlb	3	; () banked
  9530   00416A  6FE9               	movwf	(??_poll+3)& (0+255),b
  9531   00416C  0101               	movlb	1	; () banked
  9532   00416E  517C               	movf	_timedResponseDelay& (0+255),w,b
  9533   004170  0100               	movlb	0	; () banked
  9534   004172  6F91               	movwf	___lmul@multiplier& (0+255),b
  9535   004174  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9536   004176  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9537   004178  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9538   00417A  0E3E               	movlw	62
  9539   00417C  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9540   00417E  0E00               	movlw	0
  9541   004180  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9542   004182  0E00               	movlw	0
  9543   004184  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9544   004186  0E00               	movlw	0
  9545   004188  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9546   00418A  EC19  F05A         	call	___lmul	;wreg free
  9547   00418E  0103               	movlb	3	; () banked
  9548   004190  51E6               	movf	??_poll& (0+255),w,b
  9549   004192  0100               	movlb	0	; () banked
  9550   004194  5D91               	subwf	?___lmul& (0+255),w,b
  9551   004196  0103               	movlb	3	; () banked
  9552   004198  51E7               	movf	(??_poll+1)& (0+255),w,b
  9553   00419A  0100               	movlb	0	; () banked
  9554   00419C  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9555   00419E  0103               	movlb	3	; () banked
  9556   0041A0  51E8               	movf	(??_poll+2)& (0+255),w,b
  9557   0041A2  0100               	movlb	0	; () banked
  9558   0041A4  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9559   0041A6  0103               	movlb	3	; () banked
  9560   0041A8  51E9               	movf	(??_poll+3)& (0+255),w,b
  9561   0041AA  0100               	movlb	0	; () banked
  9562   0041AC  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9563   0041AE  B0D8               	btfsc	status,0,c
  9564   0041B0  D00C               	goto	l23982
  9565                           
  9566                           ; BSR set to: 0
  9567                           ;../../VLCBlib_PIC/vlcb.c: 999:         pollTimedResponse();
  9568   0041B2  EC94  F054         	call	_pollTimedResponse	;wreg free
  9569                           
  9570                           ;../../VLCBlib_PIC/vlcb.c: 1000:         timedResponseTime.val = tickGet();
  9571   0041B6  ECED  F059         	call	_tickGet	;wreg free
  9572   0041BA  C08D  F15C         	movff	?_tickGet,_timedResponseTime
  9573   0041BE  C08E  F15D         	movff	?_tickGet+1,_timedResponseTime+1
  9574   0041C2  C08F  F15E         	movff	?_tickGet+2,_timedResponseTime+2
  9575   0041C6  C090  F15F         	movff	?_tickGet+3,_timedResponseTime+3
  9576   0041CA                     l23982:
  9577                           
  9578                           ;../../VLCBlib_PIC/vlcb.c: 1002:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9579   0041CA  ECED  F059         	call	_tickGet	;wreg free
  9580   0041CE  0101               	movlb	1	; () banked
  9581   0041D0  5158               	movf	_flashFlushTime& (0+255),w,b
  9582   0041D2  0100               	movlb	0	; () banked
  9583   0041D4  5D8D               	subwf	?_tickGet& (0+255),w,b
  9584   0041D6  0103               	movlb	3	; () banked
  9585   0041D8  6FE6               	movwf	??_poll& (0+255),b
  9586   0041DA  0101               	movlb	1	; () banked
  9587   0041DC  5159               	movf	(_flashFlushTime+1)& (0+255),w,b
  9588   0041DE  0100               	movlb	0	; () banked
  9589   0041E0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9590   0041E2  0103               	movlb	3	; () banked
  9591   0041E4  6FE7               	movwf	(??_poll+1)& (0+255),b
  9592   0041E6  0101               	movlb	1	; () banked
  9593   0041E8  515A               	movf	(_flashFlushTime+2)& (0+255),w,b
  9594   0041EA  0100               	movlb	0	; () banked
  9595   0041EC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9596   0041EE  0103               	movlb	3	; () banked
  9597   0041F0  6FE8               	movwf	(??_poll+2)& (0+255),b
  9598   0041F2  0101               	movlb	1	; () banked
  9599   0041F4  515B               	movf	(_flashFlushTime+3)& (0+255),w,b
  9600   0041F6  0100               	movlb	0	; () banked
  9601   0041F8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9602   0041FA  0103               	movlb	3	; () banked
  9603   0041FC  6FE9               	movwf	(??_poll+3)& (0+255),b
  9604   0041FE  51E9               	movf	(??_poll+3)& (0+255),w,b
  9605   004200  11E8               	iorwf	(??_poll+2)& (0+255),w,b
  9606   004202  E106               	bnz	u25890
  9607   004204  0E25               	movlw	37
  9608   004206  5DE6               	subwf	??_poll& (0+255),w,b
  9609   004208  0EF4               	movlw	244
  9610   00420A  59E7               	subwfb	(??_poll+1)& (0+255),w,b
  9611   00420C  A0D8               	btfss	status,0,c
  9612   00420E  D00C               	goto	l23988
  9613   004210                     u25890:
  9614                           
  9615                           ; BSR set to: 3
  9616                           ;../../VLCBlib_PIC/vlcb.c: 1003:         flushFlashBlock();
  9617   004210  EC11  F053         	call	_flushFlashBlock	;wreg free
  9618                           
  9619                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flashFlushTime.val = tickGet();
  9620   004214  ECED  F059         	call	_tickGet	;wreg free
  9621   004218  C08D  F158         	movff	?_tickGet,_flashFlushTime
  9622   00421C  C08E  F159         	movff	?_tickGet+1,_flashFlushTime+1
  9623   004220  C08F  F15A         	movff	?_tickGet+2,_flashFlushTime+2
  9624   004224  C090  F15B         	movff	?_tickGet+3,_flashFlushTime+3
  9625   004228                     l23988:
  9626                           
  9627                           ;../../VLCBlib_PIC/vlcb.c: 1007:     for (i=0; i<9; i++) {
  9628   004228  0E00               	movlw	0
  9629   00422A  0103               	movlb	3	; () banked
  9630   00422C  6FEB               	movwf	poll@i& (0+255),b
  9631   00422E                     l23994:
  9632                           
  9633                           ; BSR set to: 3
  9634                           ;../../VLCBlib_PIC/vlcb.c: 1008:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
  9635   00422E  51EB               	movf	poll@i& (0+255),w,b
  9636   004230  0D02               	mullw	2
  9637   004232  0E75               	movlw	low _services
  9638   004234  24F3               	addwf	243,w,c
  9639   004236  6EF6               	movwf	tblptrl,c
  9640   004238  0EEE               	movlw	high _services
  9641   00423A  20F4               	addwfc	244,w,c
  9642   00423C  6EF7               	movwf	tblptrh,c
  9643   00423E                     	if	1	;There are 3 active tblptr bytes
  9644   00423E  6AF8               	clrf	tblptru,c
  9645   004240  0E00               	movlw	low (__mediumconst shr (0+16))
  9646   004242  22F8               	addwfc	tblptru,f,c
  9647   004244                     	endif
  9648   004244  0009               	tblrd		*+
  9649   004246  50F5               	movf	tablat,w,c
  9650   004248  0009               	tblrd		*+
  9651   00424A  10F5               	iorwf	tablat,w,c
  9652   00424C  B4D8               	btfsc	status,2,c
  9653   00424E  D04B               	goto	u25929
  9654                           
  9655                           ; BSR set to: 3
  9656   004250  51EB               	movf	poll@i& (0+255),w,b
  9657   004252  0D02               	mullw	2
  9658   004254  0E75               	movlw	low _services
  9659   004256  24F3               	addwf	243,w,c
  9660   004258  6EF6               	movwf	tblptrl,c
  9661   00425A  0EEE               	movlw	high _services
  9662   00425C  20F4               	addwfc	244,w,c
  9663   00425E  6EF7               	movwf	tblptrh,c
  9664   004260                     	if	1	;There are 3 active tblptr bytes
  9665   004260  6AF8               	clrf	tblptru,c
  9666   004262  0E00               	movlw	low (__mediumconst shr (0+16))
  9667   004264  22F8               	addwfc	tblptru,f,c
  9668   004266                     	endif
  9669   004266  0009               	tblrd		*+
  9670   004268  CFF5 F3E6          	movff	tablat,??_poll
  9671   00426C  0009               	tblrd		*+
  9672   00426E  CFF5 F3E7          	movff	tablat,??_poll+1
  9673   004272  0E08               	movlw	8
  9674   004274  27E6               	addwf	??_poll& (0+255),f,b
  9675   004276  0E00               	movlw	0
  9676   004278  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9677   00427A  C3E6  FFF6         	movff	??_poll,tblptrl
  9678   00427E  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9679   004282                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9680   004282  6AF8               	clrf	tblptru,c
  9681   004284                     	endif
  9682   004284                     	if	0	;tblptru may be non-zero
  9683   004284                     	endif
  9684   004284  0009               	tblrd		*+
  9685   004286  50F5               	movf	tablat,w,c
  9686   004288  0009               	tblrd		*+
  9687   00428A  10F5               	iorwf	tablat,w,c
  9688   00428C  B4D8               	btfsc	status,2,c
  9689   00428E  D02B               	goto	u25929
  9690                           
  9691                           ; BSR set to: 3
  9692                           ;../../VLCBlib_PIC/vlcb.c: 1009:             services[i]->poll();
  9693   004290  51EB               	movf	poll@i& (0+255),w,b
  9694   004292  0D02               	mullw	2
  9695   004294  0E75               	movlw	low _services
  9696   004296  24F3               	addwf	243,w,c
  9697   004298  6EF6               	movwf	tblptrl,c
  9698   00429A  0EEE               	movlw	high _services
  9699   00429C  20F4               	addwfc	244,w,c
  9700   00429E  6EF7               	movwf	tblptrh,c
  9701   0042A0                     	if	1	;There are 3 active tblptr bytes
  9702   0042A0  6AF8               	clrf	tblptru,c
  9703   0042A2  0E00               	movlw	low (__mediumconst shr (0+16))
  9704   0042A4  22F8               	addwfc	tblptru,f,c
  9705   0042A6                     	endif
  9706   0042A6  0009               	tblrd		*+
  9707   0042A8  CFF5 F3E6          	movff	tablat,??_poll
  9708   0042AC  0009               	tblrd		*+
  9709   0042AE  CFF5 F3E7          	movff	tablat,??_poll+1
  9710   0042B2  0E08               	movlw	8
  9711   0042B4  27E6               	addwf	??_poll& (0+255),f,b
  9712   0042B6  0E00               	movlw	0
  9713   0042B8  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9714   0042BA  C3E6  FFF6         	movff	??_poll,tblptrl
  9715   0042BE  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9716   0042C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9717   0042C2  6AF8               	clrf	tblptru,c
  9718   0042C4                     	endif
  9719   0042C4                     	if	0	;tblptru may be non-zero
  9720   0042C4                     	endif
  9721   0042C4  0009               	tblrd		*+
  9722   0042C6  CFF5 F3E8          	movff	tablat,??_poll+2
  9723   0042CA  0009               	tblrd		*+
  9724   0042CC  CFF5 F3E9          	movff	tablat,??_poll+3
  9725   0042D0  D801               	call	u25928
  9726   0042D2  D009               	goto	u25929
  9727   0042D4                     u25928:
  9728   0042D4  0005               	push	
  9729   0042D6  6EFA               	movwf	pclath,c
  9730   0042D8  51E8               	movf	(??_poll+2)& (0+255),w,b
  9731   0042DA  6EFD               	movwf	tosl,c
  9732   0042DC  51E9               	movf	(??_poll+3)& (0+255),w,b
  9733   0042DE  6EFE               	movwf	tosh,c
  9734   0042E0  6AFF               	clrf	tosu,c
  9735   0042E2  50FA               	movf	pclath,w,c
  9736   0042E4  0012               	return		;indir
  9737   0042E6                     u25929:
  9738                           
  9739                           ;../../VLCBlib_PIC/vlcb.c: 1011:     }
  9740   0042E6  0103               	movlb	3	; () banked
  9741   0042E8  2BEB               	incf	poll@i& (0+255),f,b
  9742                           
  9743                           ; BSR set to: 3
  9744   0042EA  0E08               	movlw	8
  9745   0042EC  65EB               	cpfsgt	poll@i& (0+255),b
  9746   0042EE  D79F               	goto	l23994
  9747                           
  9748                           ; BSR set to: 3
  9749                           ;../../VLCBlib_PIC/vlcb.c: 1013:     leds_poll();
  9750   0042F0  EC87  F030         	call	_leds_poll	;wreg free
  9751                           
  9752                           ;../../VLCBlib_PIC/vlcb.c: 1016:     handled = NOT_PROCESSED;
  9753   0042F4  0E00               	movlw	0
  9754   0042F6  0103               	movlb	3	; () banked
  9755   0042F8  6FEA               	movwf	poll@handled& (0+255),b
  9756                           
  9757                           ; BSR set to: 3
  9758                           ;../../VLCBlib_PIC/vlcb.c: 1017:     if (transport != ((void*)0)) {
  9759   0042FA  0101               	movlb	1	; () banked
  9760   0042FC  517A               	movf	_transport& (0+255),w,b
  9761   0042FE  117B               	iorwf	(_transport+1)& (0+255),w,b
  9762   004300  B4D8               	btfsc	status,2,c
  9763   004302  D0CA               	goto	l2398
  9764                           
  9765                           ; BSR set to: 1
  9766                           ;../../VLCBlib_PIC/vlcb.c: 1018:         if (transport->receiveMessage != ((void*)0)) {
  9767   004304  0E02               	movlw	2
  9768   004306  257A               	addwf	_transport& (0+255),w,b
  9769   004308  0103               	movlb	3	; () banked
  9770   00430A  6FE6               	movwf	??_poll& (0+255),b
  9771   00430C  0E00               	movlw	0
  9772   00430E  0101               	movlb	1	; () banked
  9773   004310  217B               	addwfc	(_transport+1)& (0+255),w,b
  9774   004312  0103               	movlb	3	; () banked
  9775   004314  6FE7               	movwf	(??_poll+1)& (0+255),b
  9776   004316  C3E6  FFF6         	movff	??_poll,tblptrl
  9777   00431A  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9778   00431E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9779   00431E  6AF8               	clrf	tblptru,c
  9780   004320                     	endif
  9781   004320                     	if	0	;tblptru may be non-zero
  9782   004320                     	endif
  9783   004320  0009               	tblrd		*+
  9784   004322  50F5               	movf	tablat,w,c
  9785   004324  0009               	tblrd		*+
  9786   004326  10F5               	iorwf	tablat,w,c
  9787   004328  B4D8               	btfsc	status,2,c
  9788   00432A  D0B6               	goto	l2398
  9789                           
  9790                           ; BSR set to: 3
  9791                           ;../../VLCBlib_PIC/vlcb.c: 1019:             if (transport->receiveMessage(&m)) {
  9792   00432C  0EEC               	movlw	low poll@m
  9793   00432E  0101               	movlb	1	; () banked
  9794   004330  6FC7               	movwf	canReceiveMessage@m& (0+255),b
  9795   004332  0E03               	movlw	high poll@m
  9796   004334  6FC8               	movwf	(canReceiveMessage@m+1)& (0+255),b
  9797   004336  0E02               	movlw	2
  9798   004338  257A               	addwf	_transport& (0+255),w,b
  9799   00433A  0103               	movlb	3	; () banked
  9800   00433C  6FE6               	movwf	??_poll& (0+255),b
  9801   00433E  0E00               	movlw	0
  9802   004340  0101               	movlb	1	; () banked
  9803   004342  217B               	addwfc	(_transport+1)& (0+255),w,b
  9804   004344  0103               	movlb	3	; () banked
  9805   004346  6FE7               	movwf	(??_poll+1)& (0+255),b
  9806   004348  C3E6  FFF6         	movff	??_poll,tblptrl
  9807   00434C  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9808   004350                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9809   004350  6AF8               	clrf	tblptru,c
  9810   004352                     	endif
  9811   004352                     	if	0	;tblptru may be non-zero
  9812   004352                     	endif
  9813   004352  0009               	tblrd		*+
  9814   004354  CFF5 F3E8          	movff	tablat,??_poll+2
  9815   004358  0009               	tblrd		*+
  9816   00435A  CFF5 F3E9          	movff	tablat,??_poll+3
  9817   00435E  D801               	call	u25968
  9818   004360  D009               	goto	u25969
  9819   004362                     u25968:
  9820   004362  0005               	push	
  9821   004364  6EFA               	movwf	pclath,c
  9822   004366  51E8               	movf	(??_poll+2)& (0+255),w,b
  9823   004368  6EFD               	movwf	tosl,c
  9824   00436A  51E9               	movf	(??_poll+3)& (0+255),w,b
  9825   00436C  6EFE               	movwf	tosh,c
  9826   00436E  6AFF               	clrf	tosu,c
  9827   004370  50FA               	movf	pclath,w,c
  9828   004372  0012               	return		;indir
  9829   004374                     u25969:
  9830   004374  0900               	iorlw	0
  9831   004376  B4D8               	btfsc	status,2,c
  9832   004378  D08F               	goto	l2398
  9833                           
  9834                           ;../../VLCBlib_PIC/vlcb.c: 1020:                 if (m.len > 0) {
  9835   00437A  0103               	movlb	3	; () banked
  9836   00437C  51EC               	movf	poll@m& (0+255),w,b
  9837   00437E  B4D8               	btfsc	status,2,c
  9838   004380  D08B               	goto	l2398
  9839                           
  9840                           ; BSR set to: 3
  9841                           ;../../VLCBlib_PIC/vlcb.c: 1021:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
  9842   004382  0E07               	movlw	7
  9843   004384  ECDE  F047         	call	_showStatus
  9844                           
  9845                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     handled = APP_preProcessMessage(&m)
      +                          ;
  9846   004388  0EEC               	movlw	low poll@m
  9847   00438A  0100               	movlb	0	; () banked
  9848   00438C  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
  9849   00438E  0E03               	movlw	high poll@m
  9850   004390  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
  9851   004392  EC08  F062         	call	_APP_preProcessMessage	;wreg free
  9852   004396  0103               	movlb	3	; () banked
  9853   004398  6FEA               	movwf	poll@handled& (0+255),b
  9854                           
  9855                           ; BSR set to: 3
  9856                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     if (handled == NOT_PROCESSED) {
  9857   00439A  51EA               	movf	poll@handled& (0+255),w,b
  9858   00439C  A4D8               	btfss	status,2,c
  9859   00439E  D07C               	goto	l2398
  9860                           
  9861                           ; BSR set to: 3
  9862                           ;../../VLCBlib_PIC/vlcb.c: 1024:                         for (i=0; i<9; i++) {
  9863   0043A0  0E00               	movlw	0
  9864   0043A2  6FEB               	movwf	poll@i& (0+255),b
  9865   0043A4                     l24026:
  9866                           
  9867                           ; BSR set to: 3
  9868                           ;../../VLCBlib_PIC/vlcb.c: 1025:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
  9869   0043A4  51EB               	movf	poll@i& (0+255),w,b
  9870   0043A6  0D02               	mullw	2
  9871   0043A8  0E75               	movlw	low _services
  9872   0043AA  24F3               	addwf	243,w,c
  9873   0043AC  6EF6               	movwf	tblptrl,c
  9874   0043AE  0EEE               	movlw	high _services
  9875   0043B0  20F4               	addwfc	244,w,c
  9876   0043B2  6EF7               	movwf	tblptrh,c
  9877   0043B4                     	if	1	;There are 3 active tblptr bytes
  9878   0043B4  6AF8               	clrf	tblptru,c
  9879   0043B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9880   0043B8  22F8               	addwfc	tblptru,f,c
  9881   0043BA                     	endif
  9882   0043BA  0009               	tblrd		*+
  9883   0043BC  50F5               	movf	tablat,w,c
  9884   0043BE  0009               	tblrd		*+
  9885   0043C0  10F5               	iorwf	tablat,w,c
  9886   0043C2  B4D8               	btfsc	status,2,c
  9887   0043C4  D058               	goto	l24034
  9888                           
  9889                           ; BSR set to: 3
  9890   0043C6  51EB               	movf	poll@i& (0+255),w,b
  9891   0043C8  0D02               	mullw	2
  9892   0043CA  0E75               	movlw	low _services
  9893   0043CC  24F3               	addwf	243,w,c
  9894   0043CE  6EF6               	movwf	tblptrl,c
  9895   0043D0  0EEE               	movlw	high _services
  9896   0043D2  20F4               	addwfc	244,w,c
  9897   0043D4  6EF7               	movwf	tblptrh,c
  9898   0043D6                     	if	1	;There are 3 active tblptr bytes
  9899   0043D6  6AF8               	clrf	tblptru,c
  9900   0043D8  0E00               	movlw	low (__mediumconst shr (0+16))
  9901   0043DA  22F8               	addwfc	tblptru,f,c
  9902   0043DC                     	endif
  9903   0043DC  0009               	tblrd		*+
  9904   0043DE  CFF5 F3E6          	movff	tablat,??_poll
  9905   0043E2  0009               	tblrd		*+
  9906   0043E4  CFF5 F3E7          	movff	tablat,??_poll+1
  9907   0043E8  0E06               	movlw	6
  9908   0043EA  27E6               	addwf	??_poll& (0+255),f,b
  9909   0043EC  0E00               	movlw	0
  9910   0043EE  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9911   0043F0  C3E6  FFF6         	movff	??_poll,tblptrl
  9912   0043F4  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9913   0043F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9914   0043F8  6AF8               	clrf	tblptru,c
  9915   0043FA                     	endif
  9916   0043FA                     	if	0	;tblptru may be non-zero
  9917   0043FA                     	endif
  9918   0043FA  0009               	tblrd		*+
  9919   0043FC  50F5               	movf	tablat,w,c
  9920   0043FE  0009               	tblrd		*+
  9921   004400  10F5               	iorwf	tablat,w,c
  9922   004402  B4D8               	btfsc	status,2,c
  9923   004404  D038               	goto	l24034
  9924                           
  9925                           ; BSR set to: 3
  9926                           ;../../VLCBlib_PIC/vlcb.c: 1026:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
  9927   004406  0EEC               	movlw	low poll@m
  9928   004408  0101               	movlb	1	; () banked
  9929   00440A  6FFD               	movwf	canProcessMessage@m& (0+255),b
  9930   00440C  0E03               	movlw	high poll@m
  9931   00440E  6FFE               	movwf	(canProcessMessage@m+1)& (0+255),b
  9932   004410  0103               	movlb	3	; () banked
  9933   004412  51EB               	movf	poll@i& (0+255),w,b
  9934   004414  0D02               	mullw	2
  9935   004416  0E75               	movlw	low _services
  9936   004418  24F3               	addwf	243,w,c
  9937   00441A  6EF6               	movwf	tblptrl,c
  9938   00441C  0EEE               	movlw	high _services
  9939   00441E  20F4               	addwfc	244,w,c
  9940   004420  6EF7               	movwf	tblptrh,c
  9941   004422                     	if	1	;There are 3 active tblptr bytes
  9942   004422  6AF8               	clrf	tblptru,c
  9943   004424  0E00               	movlw	low (__mediumconst shr (0+16))
  9944   004426  22F8               	addwfc	tblptru,f,c
  9945   004428                     	endif
  9946   004428  0009               	tblrd		*+
  9947   00442A  CFF5 F3E6          	movff	tablat,??_poll
  9948   00442E  0009               	tblrd		*+
  9949   004430  CFF5 F3E7          	movff	tablat,??_poll+1
  9950   004434  0E06               	movlw	6
  9951   004436  27E6               	addwf	??_poll& (0+255),f,b
  9952   004438  0E00               	movlw	0
  9953   00443A  23E7               	addwfc	(??_poll+1)& (0+255),f,b
  9954   00443C  C3E6  FFF6         	movff	??_poll,tblptrl
  9955   004440  C3E7  FFF7         	movff	??_poll+1,tblptrh
  9956   004444                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9957   004444  6AF8               	clrf	tblptru,c
  9958   004446                     	endif
  9959   004446                     	if	0	;tblptru may be non-zero
  9960   004446                     	endif
  9961   004446  0009               	tblrd		*+
  9962   004448  CFF5 F3E8          	movff	tablat,??_poll+2
  9963   00444C  0009               	tblrd		*+
  9964   00444E  CFF5 F3E9          	movff	tablat,??_poll+3
  9965   004452  D801               	call	u26028
  9966   004454  D009               	goto	u26029
  9967   004456                     u26028:
  9968   004456  0005               	push	
  9969   004458  6EFA               	movwf	pclath,c
  9970   00445A  51E8               	movf	(??_poll+2)& (0+255),w,b
  9971   00445C  6EFD               	movwf	tosl,c
  9972   00445E  51E9               	movf	(??_poll+3)& (0+255),w,b
  9973   004460  6EFE               	movwf	tosh,c
  9974   004462  6AFF               	clrf	tosu,c
  9975   004464  50FA               	movf	pclath,w,c
  9976   004466  0012               	return		;indir
  9977   004468                     u26029:
  9978   004468  06E8               	decf	wreg,f,c
  9979   00446A  A4D8               	btfss	status,2,c
  9980   00446C  D004               	goto	l24034
  9981                           
  9982                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                     handled = PROCESSED
      +                          ;
  9983   00446E  0E01               	movlw	1
  9984   004470  0103               	movlb	3	; () banked
  9985   004472  6FEA               	movwf	poll@handled& (0+255),b
  9986                           
  9987                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     break;
  9988   004474  D005               	goto	u26040
  9989   004476                     l24034:
  9990                           
  9991                           ;../../VLCBlib_PIC/vlcb.c: 1031:                         }
  9992   004476  0103               	movlb	3	; () banked
  9993   004478  2BEB               	incf	poll@i& (0+255),f,b
  9994                           
  9995                           ; BSR set to: 3
  9996   00447A  0E08               	movlw	8
  9997   00447C  65EB               	cpfsgt	poll@i& (0+255),b
  9998   00447E  D792               	goto	l24026
  9999   004480                     u26040:
 10000                           
 10001                           ; BSR set to: 3
 10002                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         if (handled == NOT_PROCESSED) {
 10003   004480  51EA               	movf	poll@handled& (0+255),w,b
 10004   004482  A4D8               	btfss	status,2,c
 10005   004484  D009               	goto	l2398
 10006                           
 10007                           ; BSR set to: 3
 10008                           ;../../VLCBlib_PIC/vlcb.c: 1033:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10009   004486  0EEC               	movlw	low poll@m
 10010   004488  0100               	movlb	0	; () banked
 10011   00448A  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10012   00448C  0E03               	movlw	high poll@m
 10013   00448E  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10014   004490  EC0A  F062         	call	_APP_postProcessMessage	;wreg free
 10015   004494  0103               	movlb	3	; () banked
 10016   004496  6FEA               	movwf	poll@handled& (0+255),b
 10017   004498                     l2398:
 10018                           
 10019                           ;../../VLCBlib_PIC/vlcb.c: 1040:     if (handled) {
 10020                           
 10021                           ; BSR set to: 3
 10022   004498  0103               	movlb	3	; () banked
 10023   00449A  51EA               	movf	poll@handled& (0+255),w,b
 10024   00449C  B4D8               	btfsc	status,2,c
 10025   00449E  0012               	return	
 10026                           
 10027                           ; BSR set to: 3
 10028                           ;../../VLCBlib_PIC/vlcb.c: 1041:         showStatus(STATUS_MESSAGE_ACTED);
 10029   0044A0  0E08               	movlw	8
 10030   0044A2  ECDE  F047         	call	_showStatus
 10031   0044A6  0012               	return		;funcret
 10032   0044A8                     __end_of_poll:
 10033                           	callstack 0
 10034                           
 10035 ;; *************** function _canProcessMessage *****************
 10036 ;; Defined at:
 10037 ;;		line 370 in file "../../VLCBlib_PIC/can18_ecan.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  m               2   63[BANK1 ] PTR struct Message
 10040 ;;		 -> poll@m(9), 
 10041 ;; Auto vars:     Size  Location     Type
 10042 ;;		None
 10043 ;; Return value:  Size  Location     Type
 10044 ;;                  1    wreg      enum E12899
 10045 ;; Registers used:
 10046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10047 ;; Tracked objects:
 10048 ;;		On entry : 0/0
 10049 ;;		On exit  : 0/0
 10050 ;;		Unchanged: 0/0
 10051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10052 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10054 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10055 ;;      Totals:         0       0       2       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10056 ;;Total ram usage:        4 bytes
 10057 ;; Hardware stack levels used: 1
 10058 ;; Hardware stack levels required when called: 16
 10059 ;; This function calls:
 10060 ;;		_sendMessage5
 10061 ;; This function is called by:
 10062 ;;		_poll
 10063 ;; This function uses a non-reentrant model
 10064 ;;
 10065                           
 10066                           	psect	text18
 10067   009BAE                     __ptext18:
 10068                           	callstack 0
 10069   009BAE                     _canProcessMessage:
 10070                           	callstack 13
 10071                           
 10072                           ;../../VLCBlib_PIC/can18_ecan.c: 372:     if (m->len < 3) return NOT_PROCESSED;
 10073                           
 10074                           ;incstack = 0
 10075   009BAE  C1FD  FFD9         	movff	canProcessMessage@m,fsr2l
 10076   009BB2  C1FE  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10077   009BB6  0E03               	movlw	3
 10078   009BB8  60DF               	cpfslt	indf2,c
 10079   009BBA  D002               	goto	l23706
 10080   009BBC                     u25530:
 10081   009BBC  0E00               	movlw	0
 10082   009BBE  0012               	return	
 10083   009BC0                     l23706:
 10084                           
 10085                           ;../../VLCBlib_PIC/can18_ecan.c: 373:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10086   009BC0  0101               	movlb	1	; () banked
 10087   009BC2  EE20 F002          	lfsr	2,2
 10088   009BC6  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10089   009BC8  26D9               	addwf	fsr2l,f,c
 10090   009BCA  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10091   009BCC  22DA               	addwfc	fsr2h,f,c
 10092   009BCE  50DE               	movf	postinc2,w,c
 10093   009BD0  0100               	movlb	0	; () banked
 10094   009BD2  19B5               	xorwf	(_nn+1)& (0+255),w,b
 10095   009BD4  A4D8               	btfss	status,2,c
 10096   009BD6  D7F2               	goto	u25530
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;../../VLCBlib_PIC/can18_ecan.c: 374:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10100   009BD8  0101               	movlb	1	; () banked
 10101   009BDA  EE20 F003          	lfsr	2,3
 10102   009BDE  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10103   009BE0  26D9               	addwf	fsr2l,f,c
 10104   009BE2  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10105   009BE4  22DA               	addwfc	fsr2h,f,c
 10106   009BE6  0100               	movlb	0	; () banked
 10107   009BE8  51B4               	movf	_nn& (0+255),w,b
 10108   009BEA  18DE               	xorwf	postinc2,w,c
 10109   009BEC  A4D8               	btfss	status,2,c
 10110   009BEE  D7E6               	goto	u25530
 10111   009BF0  D018               	goto	l23736
 10112   009BF2                     l23718:
 10113                           
 10114                           ;../../VLCBlib_PIC/can18_ecan.c: 380:             return PROCESSED;
 10115   009BF2  0E01               	movlw	1
 10116   009BF4  0012               	return	
 10117   009BF6                     l23722:
 10118                           
 10119                           ; BSR set to: 2
 10120                           ;../../VLCBlib_PIC/can18_ecan.c: 382:             if (m->len < 4) {
 10121   009BF6  C1FD  FFD9         	movff	canProcessMessage@m,fsr2l
 10122   009BFA  C1FE  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10123   009BFE  0E04               	movlw	4
 10124   009C00  60DF               	cpfslt	indf2,c
 10125   009C02  D7F7               	goto	l23718
 10126                           
 10127                           ; BSR set to: 2
 10128                           ;../../VLCBlib_PIC/can18_ecan.c: 383:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10129   009C04  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10130   009C08  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10131   009C0C  0E71               	movlw	113
 10132   009C0E  0101               	movlb	1	; () banked
 10133   009C10  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10134   009C12  0E01               	movlw	1
 10135   009C14  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10136   009C16  0E01               	movlw	1
 10137   009C18  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10138   009C1A  0EAF               	movlw	175
 10139   009C1C  EC41  F05F         	call	_sendMessage5
 10140   009C20  D7E8               	goto	l23718
 10141   009C22                     l23736:
 10142                           
 10143                           ; BSR set to: 0
 10144   009C22  0101               	movlb	1	; () banked
 10145   009C24  EE20 F001          	lfsr	2,1
 10146   009C28  51FD               	movf	canProcessMessage@m& (0+255),w,b
 10147   009C2A  26D9               	addwf	fsr2l,f,c
 10148   009C2C  51FE               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10149   009C2E  22DA               	addwfc	fsr2h,f,c
 10150   009C30  50DF               	movf	indf2,w,c
 10151   009C32  0102               	movlb	2	; () banked
 10152   009C34  6FF4               	movwf	??_canProcessMessage& (0+255),b
 10153   009C36  6BF5               	clrf	(??_canProcessMessage+1)& (0+255),b
 10154                           
 10155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10156                           ; Switch size 1, requested type "simple"
 10157                           ; Number of cases is 1, Range of values is 0 to 0
 10158                           ; switch strategies available:
 10159                           ; Name         Instructions Cycles
 10160                           ; simple_byte            4     3 (average)
 10161                           ;	Chosen strategy is simple_byte
 10162   009C38  51F5               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10163   009C3A  0A00               	xorlw	0	; case 0
 10164   009C3C  A4D8               	btfss	status,2,c
 10165   009C3E  D7BE               	goto	u25530
 10166                           
 10167                           ; BSR set to: 2
 10168                           ; Switch size 1, requested type "simple"
 10169                           ; Number of cases is 2, Range of values is 93 to 117
 10170                           ; switch strategies available:
 10171                           ; Name         Instructions Cycles
 10172                           ; simple_byte            7     4 (average)
 10173                           ;	Chosen strategy is simple_byte
 10174   009C40  51F4               	movf	??_canProcessMessage& (0+255),w,b
 10175   009C42  0A5D               	xorlw	93	; case 93
 10176   009C44  B4D8               	btfsc	status,2,c
 10177   009C46  D7D5               	goto	l23718
 10178   009C48  0A28               	xorlw	40	; case 117
 10179   009C4A  B4D8               	btfsc	status,2,c
 10180   009C4C  D7D4               	goto	l23722
 10181   009C4E  D7B6               	goto	u25530
 10182   009C50                     __end_of_canProcessMessage:
 10183                           	callstack 0
 10184                           
 10185 ;; *************** function _nvProcessMessage *****************
 10186 ;; Defined at:
 10187 ;;		line 229 in file "../../VLCBlib_PIC/nv.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;  m               2   63[BANK1 ] PTR struct Message
 10190 ;;		 -> poll@m(9), 
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;  valueOrError    2    2[BANK2 ] short 
 10193 ;; Return value:  Size  Location     Type
 10194 ;;                  1    wreg      enum E12732
 10195 ;; Registers used:
 10196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10197 ;; Tracked objects:
 10198 ;;		On entry : 0/0
 10199 ;;		On exit  : 0/0
 10200 ;;		Unchanged: 0/0
 10201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10202 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10203 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10204 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10205 ;;      Totals:         0       0       2       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10206 ;;Total ram usage:        6 bytes
 10207 ;; Hardware stack levels used: 1
 10208 ;; Hardware stack levels required when called: 27
 10209 ;; This function calls:
 10210 ;;		_findServiceIndex
 10211 ;;		_getNV
 10212 ;;		_sendMessage2
 10213 ;;		_sendMessage3
 10214 ;;		_sendMessage4
 10215 ;;		_sendMessage5
 10216 ;;		_setNV
 10217 ;;		_startTimedResponse
 10218 ;; This function is called by:
 10219 ;;		_poll
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           	psect	text19
 10224   0044A8                     __ptext19:
 10225                           	callstack 0
 10226   0044A8                     _nvProcessMessage:
 10227                           	callstack 2
 10228                           
 10229                           ;../../VLCBlib_PIC/nv.c: 230:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 232:    
      +                           if (m->len < 3) {
 10230                           
 10231                           ;incstack = 0
 10232   0044A8  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 10233   0044AC  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10234   0044B0  0E03               	movlw	3
 10235   0044B2  60DF               	cpfslt	indf2,c
 10236   0044B4  D002               	goto	l23410
 10237   0044B6                     u25280:
 10238                           
 10239                           ;../../VLCBlib_PIC/nv.c: 233:         return NOT_PROCESSED;
 10240   0044B6  0E00               	movlw	0
 10241   0044B8  0012               	return	
 10242   0044BA                     l23410:
 10243                           
 10244                           ;../../VLCBlib_PIC/nv.c: 236:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 10245   0044BA  0101               	movlb	1	; () banked
 10246   0044BC  EE20 F002          	lfsr	2,2
 10247   0044C0  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10248   0044C2  26D9               	addwf	fsr2l,f,c
 10249   0044C4  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10250   0044C6  22DA               	addwfc	fsr2h,f,c
 10251   0044C8  50DE               	movf	postinc2,w,c
 10252   0044CA  0100               	movlb	0	; () banked
 10253   0044CC  19B5               	xorwf	(_nn+1)& (0+255),w,b
 10254   0044CE  A4D8               	btfss	status,2,c
 10255   0044D0  D7F2               	goto	u25280
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;../../VLCBlib_PIC/nv.c: 237:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 10259   0044D2  0101               	movlb	1	; () banked
 10260   0044D4  EE20 F003          	lfsr	2,3
 10261   0044D8  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10262   0044DA  26D9               	addwf	fsr2l,f,c
 10263   0044DC  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10264   0044DE  22DA               	addwfc	fsr2h,f,c
 10265   0044E0  0100               	movlb	0	; () banked
 10266   0044E2  51B4               	movf	_nn& (0+255),w,b
 10267   0044E4  18DE               	xorwf	postinc2,w,c
 10268   0044E6  A4D8               	btfss	status,2,c
 10269   0044E8  D7E6               	goto	u25280
 10270   0044EA  D164               	goto	l23532
 10271   0044EC                     l23422:
 10272                           
 10273                           ; BSR set to: 2
 10274                           ;../../VLCBlib_PIC/nv.c: 241:             if (m->len < 4) {
 10275   0044EC  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 10276   0044F0  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10277   0044F4  0E04               	movlw	4
 10278   0044F6  60DF               	cpfslt	indf2,c
 10279   0044F8  D01D               	goto	l23432
 10280                           
 10281                           ; BSR set to: 2
 10282                           ;../../VLCBlib_PIC/nv.c: 242:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 10283   0044FA  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 10284   0044FE  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 10285   004502  0E01               	movlw	1
 10286   004504  0100               	movlb	0	; () banked
 10287   004506  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10288   004508  0E6F               	movlw	111
 10289   00450A  ECF9  F05E         	call	_sendMessage3
 10290                           
 10291                           ;../../VLCBlib_PIC/nv.c: 243:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10292   00450E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10293   004512  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10294   004516  0E71               	movlw	113
 10295   004518  0101               	movlb	1	; () banked
 10296   00451A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10297   00451C  0E01               	movlw	1
 10298   00451E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10299   004520  0E01               	movlw	1
 10300   004522  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10301   004524  0EAF               	movlw	175
 10302   004526  EC41  F05F         	call	_sendMessage5
 10303   00452A                     l23426:
 10304                           
 10305                           ;../../VLCBlib_PIC/nv.c: 244:                 nvDiagnostics[0x01].asUint++;
 10306   00452A  0100               	movlb	0	; () banked
 10307   00452C  4BCF               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 10308   00452E  2BD0               	incf	(_nvDiagnostics+3)& (0+255),f,b
 10309   004530                     l23428:
 10310                           
 10311                           ;../../VLCBlib_PIC/nv.c: 245:                 return PROCESSED;
 10312   004530  0E01               	movlw	1
 10313   004532  0012               	return	
 10314   004534                     l23432:
 10315                           
 10316                           ; BSR set to: 2
 10317                           ;../../VLCBlib_PIC/nv.c: 247:             valueOrError = getNV(m->bytes[2]);
 10318   004534  0101               	movlb	1	; () banked
 10319   004536  EE20 F004          	lfsr	2,4
 10320   00453A  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10321   00453C  26D9               	addwf	fsr2l,f,c
 10322   00453E  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10323   004540  22DA               	addwfc	fsr2h,f,c
 10324   004542  50DF               	movf	indf2,w,c
 10325   004544  EC7F  F05D         	call	_getNV
 10326   004548  C08D  F2F6         	movff	?_getNV,nvProcessMessage@valueOrError
 10327   00454C  C08E  F2F7         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10328                           
 10329                           ;../../VLCBlib_PIC/nv.c: 248:             if (valueOrError < 0) {
 10330   004550  0102               	movlb	2	; () banked
 10331   004552  AFF7               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10332   004554  D01D               	goto	l23444
 10333                           
 10334                           ; BSR set to: 2
 10335                           ;../../VLCBlib_PIC/nv.c: 249:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10336   004556  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 10337   00455A  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 10338   00455E  51F6               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10339   004560  0800               	sublw	0
 10340   004562  0100               	movlb	0	; () banked
 10341   004564  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10342   004566  0E6F               	movlw	111
 10343   004568  ECF9  F05E         	call	_sendMessage3
 10344                           
 10345                           ;../../VLCBlib_PIC/nv.c: 250:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10346   00456C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10347   004570  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10348   004574  0E71               	movlw	113
 10349   004576  0101               	movlb	1	; () banked
 10350   004578  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10351   00457A  0E01               	movlw	1
 10352   00457C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10353   00457E  0102               	movlb	2	; () banked
 10354   004580  51F6               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10355   004582  0800               	sublw	0
 10356   004584  0101               	movlb	1	; () banked
 10357   004586  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10358   004588  0EAF               	movlw	175
 10359   00458A  EC41  F05F         	call	_sendMessage5
 10360   00458E  D7CD               	goto	l23426
 10361   004590                     l23444:
 10362                           
 10363                           ; BSR set to: 2
 10364                           ;../../VLCBlib_PIC/nv.c: 254:             nvDiagnostics[0x00].asUint++;
 10365   004590  0100               	movlb	0	; () banked
 10366   004592  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 10367   004594  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;../../VLCBlib_PIC/nv.c: 255:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10371   004596  C0B5  F0A6         	movff	_nn+1,sendMessage4@data1
 10372   00459A  C0B4  F0A7         	movff	_nn,sendMessage4@data2
 10373   00459E  0101               	movlb	1	; () banked
 10374   0045A0  EE20 F004          	lfsr	2,4
 10375   0045A4  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10376   0045A6  26D9               	addwf	fsr2l,f,c
 10377   0045A8  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10378   0045AA  22DA               	addwfc	fsr2h,f,c
 10379   0045AC  50DF               	movf	indf2,w,c
 10380   0045AE  0100               	movlb	0	; () banked
 10381   0045B0  6FA8               	movwf	sendMessage4@data3& (0+255),b
 10382   0045B2  C2F6  F0A9         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10383   0045B6  0E97               	movlw	151
 10384   0045B8  ECB5  F05F         	call	_sendMessage4
 10385                           
 10386                           ;../../VLCBlib_PIC/nv.c: 256:             if (m->bytes[2] == 0) {
 10387   0045BC  0101               	movlb	1	; () banked
 10388   0045BE  EE20 F004          	lfsr	2,4
 10389   0045C2  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10390   0045C4  26D9               	addwf	fsr2l,f,c
 10391   0045C6  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10392   0045C8  22DA               	addwfc	fsr2h,f,c
 10393   0045CA  50DF               	movf	indf2,w,c
 10394   0045CC  A4D8               	btfss	status,2,c
 10395   0045CE  D7B0               	goto	l23428
 10396                           
 10397                           ; BSR set to: 1
 10398                           ;../../VLCBlib_PIC/nv.c: 258:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 10399   0045D0  0E02               	movlw	2
 10400   0045D2  ECFF  F055         	call	_findServiceIndex
 10401   0045D6  0100               	movlb	0	; () banked
 10402   0045D8  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 10403   0045DA  0E02               	movlw	low _nvTRnvrdCallback
 10404   0045DC  6F92               	movwf	startTimedResponse@callback& (0+255),b
 10405   0045DE  0EBA               	movlw	high _nvTRnvrdCallback
 10406   0045E0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 10407   0045E2  0E06               	movlw	6
 10408   0045E4  EC22  F05D         	call	_startTimedResponse
 10409   0045E8  D7A3               	goto	l23428
 10410   0045EA                     l23456:
 10411                           
 10412                           ; BSR set to: 2
 10413                           ;../../VLCBlib_PIC/nv.c: 262:             if (m->len < 5) {
 10414   0045EA  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 10415   0045EE  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10416   0045F2  0E05               	movlw	5
 10417   0045F4  60DF               	cpfslt	indf2,c
 10418   0045F6  D00F               	goto	l23466
 10419                           
 10420                           ; BSR set to: 2
 10421                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10422   0045F8  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10423   0045FC  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10424   004600  0E96               	movlw	150
 10425   004602  0101               	movlb	1	; () banked
 10426   004604  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10427   004606  0E01               	movlw	1
 10428   004608  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10429   00460A  0E01               	movlw	1
 10430   00460C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10431   00460E  0EAF               	movlw	175
 10432   004610  EC41  F05F         	call	_sendMessage5
 10433   004614  D78A               	goto	l23426
 10434   004616                     l23466:
 10435                           
 10436                           ; BSR set to: 2
 10437                           ;../../VLCBlib_PIC/nv.c: 268:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10438   004616  0101               	movlb	1	; () banked
 10439   004618  EE20 F005          	lfsr	2,5
 10440   00461C  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10441   00461E  26D9               	addwf	fsr2l,f,c
 10442   004620  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10443   004622  22DA               	addwfc	fsr2h,f,c
 10444   004624  50DF               	movf	indf2,w,c
 10445   004626  6FF8               	movwf	setNV@value& (0+255),b
 10446   004628  EE20 F004          	lfsr	2,4
 10447   00462C  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10448   00462E  26D9               	addwf	fsr2l,f,c
 10449   004630  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10450   004632  22DA               	addwfc	fsr2h,f,c
 10451   004634  50DF               	movf	indf2,w,c
 10452   004636  ECD2  F054         	call	_setNV
 10453   00463A  0102               	movlb	2	; () banked
 10454   00463C  6FF4               	movwf	??_nvProcessMessage& (0+255),b
 10455   00463E  51F4               	movf	??_nvProcessMessage& (0+255),w,b
 10456   004640  6FF6               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10457   004642  6BF7               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10458                           
 10459                           ; BSR set to: 2
 10460                           ;../../VLCBlib_PIC/nv.c: 269:             if (valueOrError >0) {
 10461   004644  BFF7               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10462   004646  D00F               	goto	l23478
 10463   004648  51F7               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10464   00464A  E103               	bnz	u25350
 10465   00464C  05F6               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10466   00464E  A0D8               	btfss	status,0,c
 10467   004650  D00A               	goto	l23478
 10468   004652                     u25350:
 10469                           
 10470                           ; BSR set to: 2
 10471                           ;../../VLCBlib_PIC/nv.c: 270:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10472   004652  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 10473   004656  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 10474   00465A  C2F6  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10475   00465E  0E6F               	movlw	111
 10476   004660  ECF9  F05E         	call	_sendMessage3
 10477   004664  D762               	goto	l23426
 10478   004666                     l23478:
 10479                           
 10480                           ; BSR set to: 2
 10481                           ;../../VLCBlib_PIC/nv.c: 275:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 10482   004666  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 10483   00466A  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 10484   00466E  0E59               	movlw	89
 10485   004670  EC11  F05F         	call	_sendMessage2
 10486                           
 10487                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 10488   004674  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10489   004678  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10490   00467C  0E96               	movlw	150
 10491   00467E  0101               	movlb	1	; () banked
 10492   004680  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10493   004682  0E01               	movlw	1
 10494   004684  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10495   004686  0E00               	movlw	0
 10496   004688  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10497   00468A  0EAF               	movlw	175
 10498   00468C  EC41  F05F         	call	_sendMessage5
 10499   004690  D74F               	goto	l23428
 10500   004692                     l23484:
 10501                           
 10502                           ; BSR set to: 2
 10503                           ;../../VLCBlib_PIC/nv.c: 279:             if (m->len < 5) {
 10504   004692  C1FD  FFD9         	movff	nvProcessMessage@m,fsr2l
 10505   004696  C1FE  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10506   00469A  0E05               	movlw	5
 10507   00469C  60DF               	cpfslt	indf2,c
 10508   00469E  D00F               	goto	l23494
 10509                           
 10510                           ; BSR set to: 2
 10511                           ;../../VLCBlib_PIC/nv.c: 281:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10512   0046A0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10513   0046A4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10514   0046A8  0E8E               	movlw	142
 10515   0046AA  0101               	movlb	1	; () banked
 10516   0046AC  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10517   0046AE  0E01               	movlw	1
 10518   0046B0  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10519   0046B2  0E01               	movlw	1
 10520   0046B4  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10521   0046B6  0EAF               	movlw	175
 10522   0046B8  EC41  F05F         	call	_sendMessage5
 10523   0046BC  D736               	goto	l23426
 10524   0046BE                     l23494:
 10525                           
 10526                           ; BSR set to: 2
 10527                           ;../../VLCBlib_PIC/nv.c: 285:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10528   0046BE  0101               	movlb	1	; () banked
 10529   0046C0  EE20 F005          	lfsr	2,5
 10530   0046C4  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10531   0046C6  26D9               	addwf	fsr2l,f,c
 10532   0046C8  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10533   0046CA  22DA               	addwfc	fsr2h,f,c
 10534   0046CC  50DF               	movf	indf2,w,c
 10535   0046CE  6FF8               	movwf	setNV@value& (0+255),b
 10536   0046D0  EE20 F004          	lfsr	2,4
 10537   0046D4  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10538   0046D6  26D9               	addwf	fsr2l,f,c
 10539   0046D8  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10540   0046DA  22DA               	addwfc	fsr2h,f,c
 10541   0046DC  50DF               	movf	indf2,w,c
 10542   0046DE  ECD2  F054         	call	_setNV
 10543   0046E2  0102               	movlb	2	; () banked
 10544   0046E4  6FF4               	movwf	??_nvProcessMessage& (0+255),b
 10545   0046E6  51F4               	movf	??_nvProcessMessage& (0+255),w,b
 10546   0046E8  6FF6               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10547   0046EA  6BF7               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10548                           
 10549                           ; BSR set to: 2
 10550                           ;../../VLCBlib_PIC/nv.c: 286:             if (valueOrError >0) {
 10551   0046EC  BFF7               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10552   0046EE  D01D               	goto	l23506
 10553   0046F0  51F7               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10554   0046F2  E103               	bnz	u25370
 10555   0046F4  05F6               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10556   0046F6  A0D8               	btfss	status,0,c
 10557   0046F8  D018               	goto	l23506
 10558   0046FA                     u25370:
 10559                           
 10560                           ; BSR set to: 2
 10561                           ;../../VLCBlib_PIC/nv.c: 287:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10562   0046FA  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 10563   0046FE  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 10564   004702  C2F6  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10565   004706  0E6F               	movlw	111
 10566   004708  ECF9  F05E         	call	_sendMessage3
 10567                           
 10568                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 10569   00470C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10570   004710  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10571   004714  0E8E               	movlw	142
 10572   004716  0101               	movlb	1	; () banked
 10573   004718  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10574   00471A  0E01               	movlw	1
 10575   00471C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10576   00471E  C2F6  F1CA         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 10577   004722  0EAF               	movlw	175
 10578   004724  EC41  F05F         	call	_sendMessage5
 10579   004728  D700               	goto	l23426
 10580   00472A                     l23506:
 10581                           
 10582                           ; BSR set to: 2
 10583                           ;../../VLCBlib_PIC/nv.c: 292:             valueOrError = getNV(m->bytes[2]);
 10584   00472A  0101               	movlb	1	; () banked
 10585   00472C  EE20 F004          	lfsr	2,4
 10586   004730  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10587   004732  26D9               	addwf	fsr2l,f,c
 10588   004734  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10589   004736  22DA               	addwfc	fsr2h,f,c
 10590   004738  50DF               	movf	indf2,w,c
 10591   00473A  EC7F  F05D         	call	_getNV
 10592   00473E  C08D  F2F6         	movff	?_getNV,nvProcessMessage@valueOrError
 10593   004742  C08E  F2F7         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10594                           
 10595                           ;../../VLCBlib_PIC/nv.c: 293:             if (valueOrError < 0) {
 10596   004746  0102               	movlb	2	; () banked
 10597   004748  AFF7               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10598   00474A  D01D               	goto	l23518
 10599                           
 10600                           ; BSR set to: 2
 10601                           ;../../VLCBlib_PIC/nv.c: 294:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10602   00474C  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 10603   004750  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 10604   004754  51F6               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10605   004756  0800               	sublw	0
 10606   004758  0100               	movlb	0	; () banked
 10607   00475A  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10608   00475C  0E6F               	movlw	111
 10609   00475E  ECF9  F05E         	call	_sendMessage3
 10610                           
 10611                           ;../../VLCBlib_PIC/nv.c: 295:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10612   004762  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10613   004766  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10614   00476A  0E8E               	movlw	142
 10615   00476C  0101               	movlb	1	; () banked
 10616   00476E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10617   004770  0E01               	movlw	1
 10618   004772  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10619   004774  0102               	movlb	2	; () banked
 10620   004776  51F6               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10621   004778  0800               	sublw	0
 10622   00477A  0101               	movlb	1	; () banked
 10623   00477C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10624   00477E  0EAF               	movlw	175
 10625   004780  EC41  F05F         	call	_sendMessage5
 10626   004784  D6D2               	goto	l23426
 10627   004786                     l23518:
 10628                           
 10629                           ; BSR set to: 2
 10630                           ;../../VLCBlib_PIC/nv.c: 299:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10631   004786  C0B5  F0A6         	movff	_nn+1,sendMessage4@data1
 10632   00478A  C0B4  F0A7         	movff	_nn,sendMessage4@data2
 10633   00478E  0101               	movlb	1	; () banked
 10634   004790  EE20 F004          	lfsr	2,4
 10635   004794  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10636   004796  26D9               	addwf	fsr2l,f,c
 10637   004798  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10638   00479A  22DA               	addwfc	fsr2h,f,c
 10639   00479C  50DF               	movf	indf2,w,c
 10640   00479E  0100               	movlb	0	; () banked
 10641   0047A0  6FA8               	movwf	sendMessage4@data3& (0+255),b
 10642   0047A2  C2F6  F0A9         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10643   0047A6  0E97               	movlw	151
 10644   0047A8  ECB5  F05F         	call	_sendMessage4
 10645                           
 10646                           ;../../VLCBlib_PIC/nv.c: 300:             nvDiagnostics[0x00].asUint++;
 10647   0047AC  0100               	movlb	0	; () banked
 10648   0047AE  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 10649   0047B0  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 10650   0047B2  D6BE               	goto	l23428
 10651   0047B4                     l23532:
 10652                           
 10653                           ; BSR set to: 0
 10654   0047B4  0101               	movlb	1	; () banked
 10655   0047B6  EE20 F001          	lfsr	2,1
 10656   0047BA  51FD               	movf	nvProcessMessage@m& (0+255),w,b
 10657   0047BC  26D9               	addwf	fsr2l,f,c
 10658   0047BE  51FE               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10659   0047C0  22DA               	addwfc	fsr2h,f,c
 10660   0047C2  50DF               	movf	indf2,w,c
 10661   0047C4  0102               	movlb	2	; () banked
 10662   0047C6  6FF4               	movwf	??_nvProcessMessage& (0+255),b
 10663   0047C8  6BF5               	clrf	(??_nvProcessMessage+1)& (0+255),b
 10664                           
 10665                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10666                           ; Switch size 1, requested type "simple"
 10667                           ; Number of cases is 1, Range of values is 0 to 0
 10668                           ; switch strategies available:
 10669                           ; Name         Instructions Cycles
 10670                           ; simple_byte            4     3 (average)
 10671                           ;	Chosen strategy is simple_byte
 10672   0047CA  51F5               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 10673   0047CC  0A00               	xorlw	0	; case 0
 10674   0047CE  A4D8               	btfss	status,2,c
 10675   0047D0  D672               	goto	u25280
 10676                           
 10677                           ; BSR set to: 2
 10678                           ; Switch size 1, requested type "simple"
 10679                           ; Number of cases is 3, Range of values is 113 to 150
 10680                           ; switch strategies available:
 10681                           ; Name         Instructions Cycles
 10682                           ; simple_byte           10     6 (average)
 10683                           ;	Chosen strategy is simple_byte
 10684   0047D2  51F4               	movf	??_nvProcessMessage& (0+255),w,b
 10685   0047D4  0A71               	xorlw	113	; case 113
 10686   0047D6  B4D8               	btfsc	status,2,c
 10687   0047D8  D689               	goto	l23422
 10688   0047DA  0AFF               	xorlw	255	; case 142
 10689   0047DC  B4D8               	btfsc	status,2,c
 10690   0047DE  D759               	goto	l23484
 10691   0047E0  0A18               	xorlw	24	; case 150
 10692   0047E2  B4D8               	btfsc	status,2,c
 10693   0047E4  D702               	goto	l23456
 10694   0047E6  D667               	goto	u25280
 10695   0047E8                     __end_of_nvProcessMessage:
 10696                           	callstack 0
 10697                           
 10698 ;; *************** function _mnsProcessMessage *****************
 10699 ;; Defined at:
 10700 ;;		line 329 in file "../../VLCBlib_PIC/mns.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  m               2   63[BANK1 ] PTR struct Message
 10703 ;;		 -> poll@m(9), 
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;  d               2    1[BANK2 ] PTR struct DiagnosticVal
 10706 ;;		 -> canDiagnostics(32), nvDiagnostics(4), mnsDiagnostics(12), teachDiagnostics(2), 
 10707 ;;		 -> producerDiagnostics(2), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 10708 ;;  newMode         1    3[BANK2 ] unsigned char 
 10709 ;;  i               1    0[BANK2 ] unsigned char 
 10710 ;;  flags           1    0        unsigned char 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      enum E12732
 10713 ;; Registers used:
 10714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10720 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10721 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10722 ;;      Temps:          0       0       0       0      30       0       0       0       0       0       0       0       
      +0       0       0       0
 10723 ;;      Totals:         0       0       2       4      30       0       0       0       0       0       0       0       
      +0       0       0       0
 10724 ;;Total ram usage:       36 bytes
 10725 ;; Hardware stack levels used: 1
 10726 ;; Hardware stack levels required when called: 27
 10727 ;; This function calls:
 10728 ;;		NULL
 10729 ;;		_ackGetDiagnostic
 10730 ;;		_canEsdData
 10731 ;;		_canGetDiagnostic
 10732 ;;		_consumer2QGetDiagnostic
 10733 ;;		_factoryReset
 10734 ;;		_findServiceIndex
 10735 ;;		_getParameter
 10736 ;;		_getParameterFlags
 10737 ;;		_mnsGetDiagnostic
 10738 ;;		_nvGetDiagnostic
 10739 ;;		_nvGetESDdata
 10740 ;;		_producerGetDiagnostic
 10741 ;;		_sendMessage2
 10742 ;;		_sendMessage3
 10743 ;;		_sendMessage4
 10744 ;;		_sendMessage5
 10745 ;;		_sendMessage6
 10746 ;;		_sendMessage7
 10747 ;;		_setLEDsByMode
 10748 ;;		_startTimedResponse
 10749 ;;		_teachGetDiagnostic
 10750 ;;		_teachGetESDdata
 10751 ;;		_writeNVM
 10752 ;; This function is called by:
 10753 ;;		_poll
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           	psect	text20
 10758   001766                     __ptext20:
 10759                           	callstack 0
 10760   001766                     _mnsProcessMessage:
 10761                           	callstack 2
 10762                           
 10763                           ;../../VLCBlib_PIC/mns.c: 330:     uint8_t i;;../../VLCBlib_PIC/mns.c: 331:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 333:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 338: 
      +                              if (mode_state == MODE_SETUP) {
 10764                           
 10765                           ;incstack = 0
 10766   001766  0100               	movlb	0	; () banked
 10767   001768  51C2               	movf	_mode_state& (0+255),w,b
 10768   00176A  B4D8               	btfsc	status,2,c
 10769   00176C  D0BA               	goto	l22990
 10770   00176E  D128               	goto	l23036
 10771   001770                     l22948:
 10772                           
 10773                           ; BSR set to: 3
 10774                           ;../../VLCBlib_PIC/mns.c: 341:                 if (m->len < 3) {
 10775   001770  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 10776   001774  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 10777   001778  0E03               	movlw	3
 10778   00177A  60DF               	cpfslt	indf2,c
 10779   00177C  D00F               	goto	l22952
 10780                           
 10781                           ; BSR set to: 3
 10782                           ;../../VLCBlib_PIC/mns.c: 342:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10783   00177E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 10784   001782  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 10785   001786  0E71               	movlw	113
 10786   001788  0101               	movlb	1	; () banked
 10787   00178A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10788   00178C  0E01               	movlw	1
 10789   00178E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10790   001790  0E01               	movlw	1
 10791   001792  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10792   001794  0EAF               	movlw	175
 10793   001796  EC41  F05F         	call	_sendMessage5
 10794                           
 10795                           ;../../VLCBlib_PIC/mns.c: 343:                 } else {
 10796   00179A  D03A               	goto	l22966
 10797   00179C                     l22952:
 10798                           
 10799                           ; BSR set to: 3
 10800                           ;../../VLCBlib_PIC/mns.c: 344:                     nn.bytes.hi = m->bytes[0];
 10801   00179C  0101               	movlb	1	; () banked
 10802   00179E  EE20 F002          	lfsr	2,2
 10803   0017A2  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 10804   0017A4  26D9               	addwf	fsr2l,f,c
 10805   0017A6  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10806   0017A8  22DA               	addwfc	fsr2h,f,c
 10807   0017AA  50DF               	movf	indf2,w,c
 10808   0017AC  0100               	movlb	0	; () banked
 10809   0017AE  6FB5               	movwf	(_nn+1)& (0+255),b
 10810                           
 10811                           ;../../VLCBlib_PIC/mns.c: 345:                     nn.bytes.lo = m->bytes[1];
 10812   0017B0  0101               	movlb	1	; () banked
 10813   0017B2  EE20 F003          	lfsr	2,3
 10814   0017B6  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 10815   0017B8  26D9               	addwf	fsr2l,f,c
 10816   0017BA  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10817   0017BC  22DA               	addwfc	fsr2h,f,c
 10818   0017BE  50DF               	movf	indf2,w,c
 10819   0017C0  0100               	movlb	0	; () banked
 10820   0017C2  6FB4               	movwf	_nn& (0+255),b
 10821                           
 10822                           ; BSR set to: 0
 10823                           ;../../VLCBlib_PIC/mns.c: 346:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.hi);
 10824   0017C4  0EFC               	movlw	252
 10825   0017C6  6FA4               	movwf	writeNVM@index& (0+255),b
 10826   0017C8  0E03               	movlw	3
 10827   0017CA  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 10828   0017CC  0E00               	movlw	0
 10829   0017CE  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 10830   0017D0  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 10831   0017D4  0E00               	movlw	0
 10832   0017D6  EC91  F05B         	call	_writeNVM
 10833                           
 10834                           ;../../VLCBlib_PIC/mns.c: 347:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.lo);
 10835   0017DA  0EFD               	movlw	253
 10836   0017DC  0100               	movlb	0	; () banked
 10837   0017DE  6FA4               	movwf	writeNVM@index& (0+255),b
 10838   0017E0  0E03               	movlw	3
 10839   0017E2  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 10840   0017E4  0E00               	movlw	0
 10841   0017E6  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 10842   0017E8  C0B4  F0A7         	movff	_nn,writeNVM@value
 10843   0017EC  0E00               	movlw	0
 10844   0017EE  EC91  F05B         	call	_writeNVM
 10845                           
 10846                           ;../../VLCBlib_PIC/mns.c: 349:                     mode_state = MODE_NORMAL;
 10847   0017F2  0E01               	movlw	1
 10848   0017F4  0100               	movlb	0	; () banked
 10849   0017F6  6FC2               	movwf	_mode_state& (0+255),b
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;../../VLCBlib_PIC/mns.c: 352:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 10853   0017F8  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 10854   0017FC  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 10855   001800  0E52               	movlw	82
 10856   001802  EC11  F05F         	call	_sendMessage2
 10857                           
 10858                           ;../../VLCBlib_PIC/mns.c: 353:                     mnsDiagnostics[0x04].asUint++;
 10859   001806  0101               	movlb	1	; () banked
 10860   001808  4BA6               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 10861   00180A  2BA7               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 10862   00180C                     l22964:
 10863                           
 10864                           ;../../VLCBlib_PIC/mns.c: 355:                     setLEDsByMode();
 10865   00180C  ECF8  F05F         	call	_setLEDsByMode	;wreg free
 10866   001810                     l22966:
 10867                           
 10868                           ;../../VLCBlib_PIC/mns.c: 357:                 return PROCESSED;
 10869   001810  0E01               	movlw	1
 10870   001812  0012               	return	
 10871   001814                     l22970:
 10872                           
 10873                           ; BSR set to: 3
 10874                           ;../../VLCBlib_PIC/mns.c: 359:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'e',
 10875   001814  0EA5               	movlw	165
 10876   001816  0101               	movlb	1	; () banked
 10877   001818  6FC6               	movwf	sendMessage7@data1& (0+255),b
 10878   00181A  0E65               	movlw	101
 10879   00181C  6FC7               	movwf	sendMessage7@data2& (0+255),b
 10880   00181E  0E20               	movlw	32
 10881   001820  6FC8               	movwf	sendMessage7@data3& (0+255),b
 10882   001822  0EFF               	movlw	255
 10883   001824  6FC9               	movwf	sendMessage7@data4& (0+255),b
 10884   001826  0E14               	movlw	20
 10885   001828  6FCA               	movwf	sendMessage7@data5& (0+255),b
 10886   00182A  0E7F               	movlw	127
 10887   00182C  6FCB               	movwf	sendMessage7@data6& (0+255),b
 10888   00182E  0E03               	movlw	3
 10889   001830  6FCC               	movwf	sendMessage7@data7& (0+255),b
 10890   001832  0EEF               	movlw	239
 10891   001834  EC29  F05F         	call	_sendMessage7
 10892   001838  D7EB               	goto	l22966
 10893   00183A                     l22976:
 10894                           
 10895                           ; BSR set to: 3
 10896                           ;../../VLCBlib_PIC/mns.c: 364:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 10897   00183A  0E48               	movlw	72
 10898   00183C  6EF6               	movwf	tblptrl,c
 10899   00183E                     	if	1	;There is more than 1 active tblptr byte
 10900   00183E  0E08               	movlw	8
 10901   001840  6EF7               	movwf	tblptrh,c
 10902   001842                     	endif
 10903   001842                     	if	1	;There are 3 active tblptr bytes
 10904   001842  0E00               	movlw	0
 10905   001844  6EF8               	movwf	tblptru,c
 10906   001846                     	endif
 10907   001846  0008               	tblrd		*
 10908   001848  CFF5 F1C6          	movff	tablat,sendMessage7@data1
 10909   00184C  0E49               	movlw	73
 10910   00184E  6EF6               	movwf	tblptrl,c
 10911   001850  0E08               	movlw	8
 10912   001852  6EF7               	movwf	tblptrh,c
 10913   001854  0E00               	movlw	0
 10914   001856  6EF8               	movwf	tblptru,c
 10915   001858  0008               	tblrd		*
 10916   00185A  CFF5 F1C7          	movff	tablat,sendMessage7@data2
 10917   00185E  0E4A               	movlw	74
 10918   001860  6EF6               	movwf	tblptrl,c
 10919   001862  0E08               	movlw	8
 10920   001864  6EF7               	movwf	tblptrh,c
 10921   001866  0E00               	movlw	0
 10922   001868  6EF8               	movwf	tblptru,c
 10923   00186A  0008               	tblrd		*
 10924   00186C  CFF5 F1C8          	movff	tablat,sendMessage7@data3
 10925   001870  0E4B               	movlw	75
 10926   001872  6EF6               	movwf	tblptrl,c
 10927   001874  0E08               	movlw	8
 10928   001876  6EF7               	movwf	tblptrh,c
 10929   001878  0E00               	movlw	0
 10930   00187A  6EF8               	movwf	tblptru,c
 10931   00187C  0008               	tblrd		*
 10932   00187E  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 10933   001882  0E4C               	movlw	76
 10934   001884  6EF6               	movwf	tblptrl,c
 10935   001886  0E08               	movlw	8
 10936   001888  6EF7               	movwf	tblptrh,c
 10937   00188A  0E00               	movlw	0
 10938   00188C  6EF8               	movwf	tblptru,c
 10939   00188E  0008               	tblrd		*
 10940   001890  CFF5 F1CA          	movff	tablat,sendMessage7@data5
 10941   001894  0E4D               	movlw	77
 10942   001896  6EF6               	movwf	tblptrl,c
 10943   001898  0E08               	movlw	8
 10944   00189A  6EF7               	movwf	tblptrh,c
 10945   00189C  0E00               	movlw	0
 10946   00189E  6EF8               	movwf	tblptru,c
 10947   0018A0  0008               	tblrd		*
 10948   0018A2  CFF5 F1CB          	movff	tablat,sendMessage7@data6
 10949   0018A6  0E4E               	movlw	78
 10950   0018A8  6EF6               	movwf	tblptrl,c
 10951   0018AA  0E08               	movlw	8
 10952   0018AC  6EF7               	movwf	tblptrh,c
 10953   0018AE  0E00               	movlw	0
 10954   0018B0  6EF8               	movwf	tblptru,c
 10955   0018B2  0008               	tblrd		*
 10956   0018B4  CFF5 F1CC          	movff	tablat,sendMessage7@data7
 10957   0018B8  0EE2               	movlw	226
 10958   0018BA  EC29  F05F         	call	_sendMessage7
 10959   0018BE  D7A8               	goto	l22966
 10960   0018C0                     l22982:
 10961                           
 10962                           ; BSR set to: 3
 10963                           ;../../VLCBlib_PIC/mns.c: 368:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 10964   0018C0  0E00               	movlw	0
 10965   0018C2  0101               	movlb	1	; () banked
 10966   0018C4  6FC6               	movwf	sendMessage5@data1& (0+255),b
 10967   0018C6  0E00               	movlw	0
 10968   0018C8  6FC7               	movwf	sendMessage5@data2& (0+255),b
 10969   0018CA  0EA5               	movlw	165
 10970   0018CC  6FC8               	movwf	sendMessage5@data3& (0+255),b
 10971   0018CE  0E20               	movlw	32
 10972   0018D0  6FC9               	movwf	sendMessage5@data4& (0+255),b
 10973   0018D2  EC1A  F05B         	call	_getParameterFlags	;wreg free
 10974   0018D6  0101               	movlb	1	; () banked
 10975   0018D8  6FCA               	movwf	sendMessage5@data5& (0+255),b
 10976   0018DA  0EB6               	movlw	182
 10977   0018DC  EC41  F05F         	call	_sendMessage5
 10978   0018E0  D797               	goto	l22966
 10979   0018E2                     l22990:
 10980                           
 10981                           ; BSR set to: 0
 10982   0018E2  0101               	movlb	1	; () banked
 10983   0018E4  EE20 F001          	lfsr	2,1
 10984   0018E8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 10985   0018EA  26D9               	addwf	fsr2l,f,c
 10986   0018EC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 10987   0018EE  22DA               	addwfc	fsr2h,f,c
 10988   0018F0  50DF               	movf	indf2,w,c
 10989   0018F2  0103               	movlb	3	; () banked
 10990   0018F4  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 10991   0018F6  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 10992                           
 10993                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10994                           ; Switch size 1, requested type "simple"
 10995                           ; Number of cases is 1, Range of values is 0 to 0
 10996                           ; switch strategies available:
 10997                           ; Name         Instructions Cycles
 10998                           ; simple_byte            4     3 (average)
 10999                           ;	Chosen strategy is simple_byte
 11000   0018F8  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11001   0018FA  0A00               	xorlw	0	; case 0
 11002   0018FC  A4D8               	btfss	status,2,c
 11003   0018FE  D00D               	goto	l22992
 11004                           
 11005                           ; BSR set to: 3
 11006                           ; Switch size 1, requested type "simple"
 11007                           ; Number of cases is 4, Range of values is 13 to 66
 11008                           ; switch strategies available:
 11009                           ; Name         Instructions Cycles
 11010                           ; simple_byte           13     7 (average)
 11011                           ;	Chosen strategy is simple_byte
 11012   001900  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 11013   001902  0A0D               	xorlw	13	; case 13
 11014   001904  B4D8               	btfsc	status,2,c
 11015   001906  D7DC               	goto	l22982
 11016   001908  0A1D               	xorlw	29	; case 16
 11017   00190A  B4D8               	btfsc	status,2,c
 11018   00190C  D783               	goto	l22970
 11019   00190E  0A01               	xorlw	1	; case 17
 11020   001910  B4D8               	btfsc	status,2,c
 11021   001912  D793               	goto	l22976
 11022   001914  0A53               	xorlw	83	; case 66
 11023   001916  B4D8               	btfsc	status,2,c
 11024   001918  D72B               	goto	l22948
 11025   00191A                     l22992:
 11026                           
 11027                           ;../../VLCBlib_PIC/mns.c: 373:         return NOT_PROCESSED;
 11028   00191A  0E00               	movlw	0
 11029   00191C  0012               	return	
 11030   00191E                     l22996:
 11031                           
 11032                           ; BSR set to: 3
 11033                           ;../../VLCBlib_PIC/mns.c: 378:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11034   00191E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11035   001922  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11036   001926  0EA5               	movlw	165
 11037   001928  0101               	movlb	1	; () banked
 11038   00192A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11039   00192C  0E20               	movlw	32
 11040   00192E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11041   001930  EC1A  F05B         	call	_getParameterFlags	;wreg free
 11042   001934  0101               	movlb	1	; () banked
 11043   001936  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11044   001938  0EB6               	movlw	182
 11045   00193A  EC41  F05F         	call	_sendMessage5
 11046   00193E  D768               	goto	l22966
 11047   001940                     l23002:
 11048                           
 11049                           ; BSR set to: 3
 11050                           ;../../VLCBlib_PIC/mns.c: 381:             if (m->len < 4) {
 11051   001940  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11052   001944  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11053   001948  0E04               	movlw	4
 11054   00194A  60DF               	cpfslt	indf2,c
 11055   00194C  D00F               	goto	l23010
 11056                           
 11057                           ; BSR set to: 3
 11058                           ;../../VLCBlib_PIC/mns.c: 382:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11059   00194E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11060   001952  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11061   001956  0E76               	movlw	118
 11062   001958  0101               	movlb	1	; () banked
 11063   00195A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11064   00195C  0E01               	movlw	1
 11065   00195E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11066   001960  0E01               	movlw	1
 11067   001962  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11068   001964  0EAF               	movlw	175
 11069   001966  EC41  F05F         	call	_sendMessage5
 11070   00196A  D752               	goto	l22966
 11071   00196C                     l23010:
 11072                           
 11073                           ; BSR set to: 3
 11074                           ;../../VLCBlib_PIC/mns.c: 385:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11075   00196C  0101               	movlb	1	; () banked
 11076   00196E  EE20 F002          	lfsr	2,2
 11077   001972  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11078   001974  26D9               	addwf	fsr2l,f,c
 11079   001976  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11080   001978  22DA               	addwfc	fsr2h,f,c
 11081   00197A  50DF               	movf	indf2,w,c
 11082   00197C  A4D8               	btfss	status,2,c
 11083   00197E  D036               	goto	l23038
 11084                           
 11085                           ; BSR set to: 1
 11086   001980  EE20 F003          	lfsr	2,3
 11087   001984  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11088   001986  26D9               	addwf	fsr2l,f,c
 11089   001988  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11090   00198A  22DA               	addwfc	fsr2h,f,c
 11091   00198C  50DF               	movf	indf2,w,c
 11092   00198E  A4D8               	btfss	status,2,c
 11093   001990  D02D               	goto	l23038
 11094                           
 11095                           ; BSR set to: 1
 11096                           ;../../VLCBlib_PIC/mns.c: 386:                 newMode = m->bytes[2];
 11097   001992  EE20 F004          	lfsr	2,4
 11098   001996  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11099   001998  26D9               	addwf	fsr2l,f,c
 11100   00199A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11101   00199C  22DA               	addwfc	fsr2h,f,c
 11102   00199E  50DF               	movf	indf2,w,c
 11103   0019A0  0102               	movlb	2	; () banked
 11104   0019A2  6FF7               	movwf	mnsProcessMessage@newMode& (0+255),b
 11105                           
 11106                           ; BSR set to: 2
 11107                           ;../../VLCBlib_PIC/mns.c: 388:                 if (newMode == MODE_HEARTBEAT_ON) {
 11108   0019A4  0E0C               	movlw	12
 11109   0019A6  19F7               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11110   0019A8  A4D8               	btfss	status,2,c
 11111   0019AA  D003               	goto	l23026
 11112                           
 11113                           ; BSR set to: 2
 11114                           ;../../VLCBlib_PIC/mns.c: 389:                     mode_flags |= 4;
 11115   0019AC  0101               	movlb	1	; () banked
 11116   0019AE  857D               	bsf	_mode_flags& (0+255),2,b
 11117   0019B0  D72F               	goto	l22966
 11118   0019B2                     l23026:
 11119                           
 11120                           ; BSR set to: 2
 11121   0019B2  0E0D               	movlw	13
 11122   0019B4  19F7               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11123   0019B6  A4D8               	btfss	status,2,c
 11124   0019B8  D019               	goto	l23038
 11125                           
 11126                           ; BSR set to: 2
 11127                           ;../../VLCBlib_PIC/mns.c: 393:                     mode_flags &= ~4;
 11128   0019BA  0101               	movlb	1	; () banked
 11129   0019BC  957D               	bcf	_mode_flags& (0+255),2,b
 11130   0019BE  D728               	goto	l22966
 11131   0019C0                     l23036:
 11132                           
 11133                           ; BSR set to: 0
 11134   0019C0  0101               	movlb	1	; () banked
 11135   0019C2  EE20 F001          	lfsr	2,1
 11136   0019C6  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11137   0019C8  26D9               	addwf	fsr2l,f,c
 11138   0019CA  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11139   0019CC  22DA               	addwfc	fsr2h,f,c
 11140   0019CE  50DF               	movf	indf2,w,c
 11141   0019D0  0103               	movlb	3	; () banked
 11142   0019D2  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11143   0019D4  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11144                           
 11145                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11146                           ; Switch size 1, requested type "simple"
 11147                           ; Number of cases is 1, Range of values is 0 to 0
 11148                           ; switch strategies available:
 11149                           ; Name         Instructions Cycles
 11150                           ; simple_byte            4     3 (average)
 11151                           ;	Chosen strategy is simple_byte
 11152   0019D6  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11153   0019D8  0A00               	xorlw	0	; case 0
 11154   0019DA  A4D8               	btfss	status,2,c
 11155   0019DC  D007               	goto	l23038
 11156                           
 11157                           ; BSR set to: 3
 11158                           ; Switch size 1, requested type "simple"
 11159                           ; Number of cases is 2, Range of values is 13 to 118
 11160                           ; switch strategies available:
 11161                           ; Name         Instructions Cycles
 11162                           ; simple_byte            7     4 (average)
 11163                           ;	Chosen strategy is simple_byte
 11164   0019DE  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 11165   0019E0  0A0D               	xorlw	13	; case 13
 11166   0019E2  B4D8               	btfsc	status,2,c
 11167   0019E4  D79C               	goto	l22996
 11168   0019E6  0A7B               	xorlw	123	; case 118
 11169   0019E8  B4D8               	btfsc	status,2,c
 11170   0019EA  D7AA               	goto	l23002
 11171   0019EC                     l23038:
 11172                           
 11173                           ;../../VLCBlib_PIC/mns.c: 402:     if (m->len < 3) {
 11174   0019EC  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11175   0019F0  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11176   0019F4  0E03               	movlw	3
 11177   0019F6  60DF               	cpfslt	indf2,c
 11178   0019F8  D001               	goto	l23044
 11179   0019FA  D78F               	goto	l22992
 11180   0019FC                     l23044:
 11181                           
 11182                           ;../../VLCBlib_PIC/mns.c: 406:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11183   0019FC  0101               	movlb	1	; () banked
 11184   0019FE  EE20 F002          	lfsr	2,2
 11185   001A02  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11186   001A04  26D9               	addwf	fsr2l,f,c
 11187   001A06  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11188   001A08  22DA               	addwfc	fsr2h,f,c
 11189   001A0A  50DE               	movf	postinc2,w,c
 11190   001A0C  0100               	movlb	0	; () banked
 11191   001A0E  19B5               	xorwf	(_nn+1)& (0+255),w,b
 11192   001A10  A4D8               	btfss	status,2,c
 11193   001A12  D783               	goto	l22992
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;../../VLCBlib_PIC/mns.c: 407:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11197   001A14  0101               	movlb	1	; () banked
 11198   001A16  EE20 F003          	lfsr	2,3
 11199   001A1A  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11200   001A1C  26D9               	addwf	fsr2l,f,c
 11201   001A1E  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11202   001A20  22DA               	addwfc	fsr2h,f,c
 11203   001A22  0100               	movlb	0	; () banked
 11204   001A24  51B4               	movf	_nn& (0+255),w,b
 11205   001A26  18DE               	xorwf	postinc2,w,c
 11206   001A28  A4D8               	btfss	status,2,c
 11207   001A2A  D777               	goto	l22992
 11208   001A2C  EF2F  F011         	goto	l23258
 11209   001A30                     l23056:
 11210                           
 11211                           ; BSR set to: 3
 11212                           ;../../VLCBlib_PIC/mns.c: 411:             if (m->len < 4) {
 11213   001A30  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11214   001A34  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11215   001A38  0E04               	movlw	4
 11216   001A3A  60DF               	cpfslt	indf2,c
 11217   001A3C  D00F               	goto	l23064
 11218                           
 11219                           ; BSR set to: 3
 11220                           ;../../VLCBlib_PIC/mns.c: 412:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11221   001A3E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11222   001A42  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11223   001A46  0E73               	movlw	115
 11224   001A48  0101               	movlb	1	; () banked
 11225   001A4A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11226   001A4C  0E01               	movlw	1
 11227   001A4E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11228   001A50  0E01               	movlw	1
 11229   001A52  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11230   001A54  0EAF               	movlw	175
 11231   001A56  EC41  F05F         	call	_sendMessage5
 11232   001A5A  D6DA               	goto	l22966
 11233   001A5C                     l23064:
 11234                           
 11235                           ; BSR set to: 3
 11236                           ;../../VLCBlib_PIC/mns.c: 415:             if (m->bytes[2] > 20) {
 11237   001A5C  0101               	movlb	1	; () banked
 11238   001A5E  EE20 F004          	lfsr	2,4
 11239   001A62  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11240   001A64  26D9               	addwf	fsr2l,f,c
 11241   001A66  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11242   001A68  22DA               	addwfc	fsr2h,f,c
 11243   001A6A  0E14               	movlw	20
 11244   001A6C  64DF               	cpfsgt	indf2,c
 11245   001A6E  D019               	goto	l23072
 11246                           
 11247                           ; BSR set to: 1
 11248                           ;../../VLCBlib_PIC/mns.c: 416:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 11249   001A70  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 11250   001A74  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 11251   001A78  0E09               	movlw	9
 11252   001A7A  0100               	movlb	0	; () banked
 11253   001A7C  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11254   001A7E  0E6F               	movlw	111
 11255   001A80  ECF9  F05E         	call	_sendMessage3
 11256                           
 11257                           ;../../VLCBlib_PIC/mns.c: 417:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 11258   001A84  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11259   001A88  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11260   001A8C  0E73               	movlw	115
 11261   001A8E  0101               	movlb	1	; () banked
 11262   001A90  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11263   001A92  0E01               	movlw	1
 11264   001A94  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11265   001A96  0E09               	movlw	9
 11266   001A98  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11267   001A9A  0EAF               	movlw	175
 11268   001A9C  EC41  F05F         	call	_sendMessage5
 11269   001AA0  D6B7               	goto	l22966
 11270   001AA2                     l23072:
 11271                           
 11272                           ; BSR set to: 1
 11273                           ;../../VLCBlib_PIC/mns.c: 420:             i = getParameter(m->bytes[2]);
 11274   001AA2  EE20 F004          	lfsr	2,4
 11275   001AA6  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11276   001AA8  26D9               	addwf	fsr2l,f,c
 11277   001AAA  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11278   001AAC  22DA               	addwfc	fsr2h,f,c
 11279   001AAE  50DF               	movf	indf2,w,c
 11280   001AB0  EC51  F043         	call	_getParameter
 11281   001AB4  0102               	movlb	2	; () banked
 11282   001AB6  6FF4               	movwf	mnsProcessMessage@i& (0+255),b
 11283                           
 11284                           ; BSR set to: 2
 11285                           ;../../VLCBlib_PIC/mns.c: 421:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 11286   001AB8  C0B5  F0A6         	movff	_nn+1,sendMessage4@data1
 11287   001ABC  C0B4  F0A7         	movff	_nn,sendMessage4@data2
 11288   001AC0  0101               	movlb	1	; () banked
 11289   001AC2  EE20 F004          	lfsr	2,4
 11290   001AC6  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11291   001AC8  26D9               	addwf	fsr2l,f,c
 11292   001ACA  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11293   001ACC  22DA               	addwfc	fsr2h,f,c
 11294   001ACE  50DF               	movf	indf2,w,c
 11295   001AD0  0100               	movlb	0	; () banked
 11296   001AD2  6FA8               	movwf	sendMessage4@data3& (0+255),b
 11297   001AD4  C2F4  F0A9         	movff	mnsProcessMessage@i,sendMessage4@data4
 11298   001AD8  0E9B               	movlw	155
 11299   001ADA  ECB5  F05F         	call	_sendMessage4
 11300                           
 11301                           ;../../VLCBlib_PIC/mns.c: 422:             if (m->bytes[2] == 0) {
 11302   001ADE  0101               	movlb	1	; () banked
 11303   001AE0  EE20 F004          	lfsr	2,4
 11304   001AE4  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11305   001AE6  26D9               	addwf	fsr2l,f,c
 11306   001AE8  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11307   001AEA  22DA               	addwfc	fsr2h,f,c
 11308   001AEC  50DF               	movf	indf2,w,c
 11309   001AEE  A4D8               	btfss	status,2,c
 11310   001AF0  D68F               	goto	l22966
 11311                           
 11312                           ; BSR set to: 1
 11313                           ;../../VLCBlib_PIC/mns.c: 423:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 11314   001AF2  0E01               	movlw	1
 11315   001AF4  ECFF  F055         	call	_findServiceIndex
 11316   001AF8  0100               	movlb	0	; () banked
 11317   001AFA  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11318   001AFC  0E92               	movlw	low _mnsTRrqnpnCallback
 11319   001AFE  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11320   001B00  0EBD               	movlw	high _mnsTRrqnpnCallback
 11321   001B02  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11322   001B04  0E07               	movlw	7
 11323   001B06  EC22  F05D         	call	_startTimedResponse
 11324   001B0A  D682               	goto	l22966
 11325   001B0C                     l1871:
 11326                           
 11327                           ; BSR set to: 3
 11328                           ;../../VLCBlib_PIC/mns.c: 427:             previousNN.word = nn.word;
 11329   001B0C  C0B4  F178         	movff	_nn,_previousNN
 11330   001B10  C0B5  F179         	movff	_nn+1,_previousNN+1
 11331                           
 11332                           ; BSR set to: 3
 11333                           ;../../VLCBlib_PIC/mns.c: 428:             factoryReset();
 11334   001B14  ECDE  F042         	call	_factoryReset	;wreg free
 11335                           
 11336                           ;../../VLCBlib_PIC/mns.c: 429:             if (previousNN.word != 0) {
 11337   001B18  0101               	movlb	1	; () banked
 11338   001B1A  5178               	movf	_previousNN& (0+255),w,b
 11339   001B1C  1179               	iorwf	(_previousNN+1)& (0+255),w,b
 11340   001B1E  B4D8               	btfsc	status,2,c
 11341   001B20  D677               	goto	l22966
 11342                           
 11343                           ; BSR set to: 1
 11344                           ;../../VLCBlib_PIC/mns.c: 430:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 11345   001B22  C179  F0A6         	movff	_previousNN+1,sendMessage2@data1
 11346   001B26  C178  F0A7         	movff	_previousNN,sendMessage2@data2
 11347   001B2A  0E51               	movlw	81
 11348   001B2C  EC11  F05F         	call	_sendMessage2
 11349   001B30  D66F               	goto	l22966
 11350   001B32                     l23094:
 11351                           
 11352                           ; BSR set to: 3
 11353                           ;../../VLCBlib_PIC/mns.c: 434:             if (m->len < 5) {
 11354   001B32  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11355   001B36  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11356   001B3A  0E05               	movlw	5
 11357   001B3C  60DF               	cpfslt	indf2,c
 11358   001B3E  D00F               	goto	l23102
 11359                           
 11360                           ; BSR set to: 3
 11361                           ;../../VLCBlib_PIC/mns.c: 435:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11362   001B40  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11363   001B44  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11364   001B48  0E87               	movlw	135
 11365   001B4A  0101               	movlb	1	; () banked
 11366   001B4C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11367   001B4E  0E01               	movlw	1
 11368   001B50  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11369   001B52  0E01               	movlw	1
 11370   001B54  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11371   001B56  0EAF               	movlw	175
 11372   001B58  EC41  F05F         	call	_sendMessage5
 11373   001B5C  D659               	goto	l22966
 11374   001B5E                     l23102:
 11375                           
 11376                           ; BSR set to: 3
 11377                           ;../../VLCBlib_PIC/mns.c: 438:             if (m->bytes[2] == 0) {
 11378   001B5E  0101               	movlb	1	; () banked
 11379   001B60  EE20 F004          	lfsr	2,4
 11380   001B64  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11381   001B66  26D9               	addwf	fsr2l,f,c
 11382   001B68  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11383   001B6A  22DA               	addwfc	fsr2h,f,c
 11384   001B6C  50DF               	movf	indf2,w,c
 11385   001B6E  A4D8               	btfss	status,2,c
 11386   001B70  D00B               	goto	l23106
 11387                           
 11388                           ; BSR set to: 1
 11389                           ;../../VLCBlib_PIC/mns.c: 440:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 11390   001B72  0E00               	movlw	0
 11391   001B74  0100               	movlb	0	; () banked
 11392   001B76  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11393   001B78  0ED6               	movlw	low _mnsTRallDiagnosticsCallback
 11394   001B7A  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11395   001B7C  0E84               	movlw	high _mnsTRallDiagnosticsCallback
 11396   001B7E  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11397   001B80  0E04               	movlw	4
 11398   001B82  EC22  F05D         	call	_startTimedResponse
 11399                           
 11400                           ;../../VLCBlib_PIC/mns.c: 441:             } else {
 11401   001B86  D644               	goto	l22966
 11402   001B88                     l23106:
 11403                           
 11404                           ; BSR set to: 1
 11405                           ;../../VLCBlib_PIC/mns.c: 443:                 if (m->bytes[2] > 9) {
 11406   001B88  EE20 F004          	lfsr	2,4
 11407   001B8C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11408   001B8E  26D9               	addwf	fsr2l,f,c
 11409   001B90  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11410   001B92  22DA               	addwfc	fsr2h,f,c
 11411   001B94  0E09               	movlw	9
 11412   001B96  64DF               	cpfsgt	indf2,c
 11413   001B98  D00E               	goto	l23114
 11414                           
 11415                           ; BSR set to: 1
 11416                           ;../../VLCBlib_PIC/mns.c: 444:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 11417   001B9A  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11418   001B9E  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11419   001BA2  0E87               	movlw	135
 11420   001BA4  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11421   001BA6  0E01               	movlw	1
 11422   001BA8  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11423   001BAA  0EFC               	movlw	252
 11424   001BAC  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11425   001BAE  0EAF               	movlw	175
 11426   001BB0  EC41  F05F         	call	_sendMessage5
 11427   001BB4  D62D               	goto	l22966
 11428   001BB6                     l23114:
 11429                           
 11430                           ; BSR set to: 1
 11431                           ;../../VLCBlib_PIC/mns.c: 447:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 11432   001BB6  EE20 F004          	lfsr	2,4
 11433   001BBA  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11434   001BBC  26D9               	addwf	fsr2l,f,c
 11435   001BBE  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11436   001BC0  22DA               	addwfc	fsr2h,f,c
 11437   001BC2  50DF               	movf	indf2,w,c
 11438   001BC4  0103               	movlb	3	; () banked
 11439   001BC6  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11440   001BC8  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11441   001BCA  90D8               	bcf	status,0,c
 11442   001BCC  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11443   001BCE  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11444   001BD0  0EFE               	movlw	254
 11445   001BD2  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11446   001BD4  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11447   001BD6  0EFF               	movlw	255
 11448   001BD8  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11449   001BDA  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11450   001BDC  0E75               	movlw	low _services
 11451   001BDE  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11452   001BE0  6EF6               	movwf	tblptrl,c
 11453   001BE2  0EEE               	movlw	high _services
 11454   001BE4  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11455   001BE6  6EF7               	movwf	tblptrh,c
 11456   001BE8                     	if	1	;There are 3 active tblptr bytes
 11457   001BE8  6AF8               	clrf	tblptru,c
 11458   001BEA  0E00               	movlw	low (__mediumconst shr (0+16))
 11459   001BEC  22F8               	addwfc	tblptru,f,c
 11460   001BEE                     	endif
 11461   001BEE  0009               	tblrd		*+
 11462   001BF0  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11463   001BF4  0009               	tblrd		*+
 11464   001BF6  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11465   001BFA  0E10               	movlw	16
 11466   001BFC  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11467   001BFE  0E00               	movlw	0
 11468   001C00  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11469   001C02  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11470   001C06  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11471   001C0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11472   001C0A  6AF8               	clrf	tblptru,c
 11473   001C0C                     	endif
 11474   001C0C                     	if	0	;tblptru may be non-zero
 11475   001C0C                     	endif
 11476   001C0C  0009               	tblrd		*+
 11477   001C0E  50F5               	movf	tablat,w,c
 11478   001C10  0009               	tblrd		*+
 11479   001C12  10F5               	iorwf	tablat,w,c
 11480   001C14  A4D8               	btfss	status,2,c
 11481   001C16  D00E               	goto	l23118
 11482                           
 11483                           ; BSR set to: 3
 11484                           ;../../VLCBlib_PIC/mns.c: 449:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11485   001C18  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11486   001C1C  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11487   001C20  0E87               	movlw	135
 11488   001C22  0101               	movlb	1	; () banked
 11489   001C24  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11490   001C26  0E01               	movlw	1
 11491   001C28  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11492   001C2A  0EFD               	movlw	253
 11493   001C2C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11494   001C2E  0EAF               	movlw	175
 11495   001C30  EC41  F05F         	call	_sendMessage5
 11496   001C34                     l23118:
 11497                           
 11498                           ;../../VLCBlib_PIC/mns.c: 451:                 if (m->bytes[3] == 0) {
 11499   001C34  0101               	movlb	1	; () banked
 11500   001C36  EE20 F005          	lfsr	2,5
 11501   001C3A  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11502   001C3C  26D9               	addwf	fsr2l,f,c
 11503   001C3E  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11504   001C40  22DA               	addwfc	fsr2h,f,c
 11505   001C42  50DF               	movf	indf2,w,c
 11506   001C44  A4D8               	btfss	status,2,c
 11507   001C46  D011               	goto	l23128
 11508                           
 11509                           ; BSR set to: 1
 11510                           ;../../VLCBlib_PIC/mns.c: 453:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 11511   001C48  EE20 F004          	lfsr	2,4
 11512   001C4C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11513   001C4E  26D9               	addwf	fsr2l,f,c
 11514   001C50  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11515   001C52  22DA               	addwfc	fsr2h,f,c
 11516   001C54  50DF               	movf	indf2,w,c
 11517   001C56  0100               	movlb	0	; () banked
 11518   001C58  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11519   001C5A  0ED6               	movlw	low _mnsTRallDiagnosticsCallback
 11520   001C5C  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11521   001C5E  0E84               	movlw	high _mnsTRallDiagnosticsCallback
 11522   001C60  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11523   001C62  0E04               	movlw	4
 11524   001C64  EC22  F05D         	call	_startTimedResponse
 11525   001C68  D5D3               	goto	l22966
 11526   001C6A                     l23128:
 11527                           
 11528                           ; BSR set to: 1
 11529                           ;../../VLCBlib_PIC/mns.c: 456:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 11530   001C6A  EE20 F004          	lfsr	2,4
 11531   001C6E  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11532   001C70  26D9               	addwf	fsr2l,f,c
 11533   001C72  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11534   001C74  22DA               	addwfc	fsr2h,f,c
 11535   001C76  50DF               	movf	indf2,w,c
 11536   001C78  0103               	movlb	3	; () banked
 11537   001C7A  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11538   001C7C  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11539   001C7E  90D8               	bcf	status,0,c
 11540   001C80  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11541   001C82  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11542   001C84  0EFE               	movlw	254
 11543   001C86  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11544   001C88  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11545   001C8A  0EFF               	movlw	255
 11546   001C8C  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11547   001C8E  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11548   001C90  0E75               	movlw	low _services
 11549   001C92  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11550   001C94  6EF6               	movwf	tblptrl,c
 11551   001C96  0EEE               	movlw	high _services
 11552   001C98  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11553   001C9A  6EF7               	movwf	tblptrh,c
 11554   001C9C                     	if	1	;There are 3 active tblptr bytes
 11555   001C9C  6AF8               	clrf	tblptru,c
 11556   001C9E  0E00               	movlw	low (__mediumconst shr (0+16))
 11557   001CA0  22F8               	addwfc	tblptru,f,c
 11558   001CA2                     	endif
 11559   001CA2  0009               	tblrd		*+
 11560   001CA4  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11561   001CA8  0009               	tblrd		*+
 11562   001CAA  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11563   001CAE  0E10               	movlw	16
 11564   001CB0  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11565   001CB2  0E00               	movlw	0
 11566   001CB4  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11567   001CB6  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11568   001CBA  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11569   001CBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11570   001CBE  6AF8               	clrf	tblptru,c
 11571   001CC0                     	endif
 11572   001CC0                     	if	0	;tblptru may be non-zero
 11573   001CC0                     	endif
 11574   001CC0  0009               	tblrd		*+
 11575   001CC2  CFF5 F3CE          	movff	tablat,??_mnsProcessMessage+6
 11576   001CC6  0009               	tblrd		*+
 11577   001CC8  CFF5 F3CF          	movff	tablat,??_mnsProcessMessage+7
 11578   001CCC  D801               	call	u24948
 11579   001CCE  D011               	goto	u24949
 11580   001CD0                     u24948:
 11581   001CD0  0005               	push	
 11582   001CD2  6EFA               	movwf	pclath,c
 11583   001CD4  51CE               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 11584   001CD6  6EFD               	movwf	tosl,c
 11585   001CD8  51CF               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 11586   001CDA  6EFE               	movwf	tosh,c
 11587   001CDC  6AFF               	clrf	tosu,c
 11588   001CDE  50FA               	movf	pclath,w,c
 11589   001CE0  0101               	movlb	1	; () banked
 11590   001CE2  EE20 F005          	lfsr	2,5
 11591   001CE6  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11592   001CE8  26D9               	addwf	fsr2l,f,c
 11593   001CEA  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11594   001CEC  22DA               	addwfc	fsr2h,f,c
 11595   001CEE  50DF               	movf	indf2,w,c
 11596   001CF0  0012               	return		;indir
 11597   001CF2                     u24949:
 11598   001CF2  C08D  F2F5         	movff	?_canGetDiagnostic,mnsProcessMessage@d
 11599   001CF6  C08E  F2F6         	movff	?_canGetDiagnostic+1,mnsProcessMessage@d+1
 11600                           
 11601                           ;../../VLCBlib_PIC/mns.c: 457:                     if (d == ((void*)0)) {
 11602   001CFA  0102               	movlb	2	; () banked
 11603   001CFC  51F5               	movf	mnsProcessMessage@d& (0+255),w,b
 11604   001CFE  11F6               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 11605   001D00  A4D8               	btfss	status,2,c
 11606   001D02  D00F               	goto	l23134
 11607                           
 11608                           ; BSR set to: 2
 11609                           ;../../VLCBlib_PIC/mns.c: 459:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 11610   001D04  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11611   001D08  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11612   001D0C  0E87               	movlw	135
 11613   001D0E  0101               	movlb	1	; () banked
 11614   001D10  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11615   001D12  0E01               	movlw	1
 11616   001D14  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11617   001D16  0EFD               	movlw	253
 11618   001D18  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11619   001D1A  0EAF               	movlw	175
 11620   001D1C  EC41  F05F         	call	_sendMessage5
 11621                           
 11622                           ;../../VLCBlib_PIC/mns.c: 460:                     } else {
 11623   001D20  D577               	goto	l22966
 11624   001D22                     l23134:
 11625                           
 11626                           ; BSR set to: 2
 11627                           ;../../VLCBlib_PIC/mns.c: 462:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 11628   001D22  C0B5  F1C6         	movff	_nn+1,sendMessage6@data1
 11629   001D26  C0B4  F1C7         	movff	_nn,sendMessage6@data2
 11630   001D2A  0101               	movlb	1	; () banked
 11631   001D2C  EE20 F004          	lfsr	2,4
 11632   001D30  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11633   001D32  26D9               	addwf	fsr2l,f,c
 11634   001D34  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11635   001D36  22DA               	addwfc	fsr2h,f,c
 11636   001D38  50DF               	movf	indf2,w,c
 11637   001D3A  6FC8               	movwf	sendMessage6@data3& (0+255),b
 11638   001D3C  EE20 F005          	lfsr	2,5
 11639   001D40  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11640   001D42  26D9               	addwf	fsr2l,f,c
 11641   001D44  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11642   001D46  22DA               	addwfc	fsr2h,f,c
 11643   001D48  50DF               	movf	indf2,w,c
 11644   001D4A  6FC9               	movwf	sendMessage6@data4& (0+255),b
 11645   001D4C  0102               	movlb	2	; () banked
 11646   001D4E  EE20 F001          	lfsr	2,1
 11647   001D52  51F5               	movf	mnsProcessMessage@d& (0+255),w,b
 11648   001D54  26D9               	addwf	fsr2l,f,c
 11649   001D56  51F6               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 11650   001D58  22DA               	addwfc	fsr2h,f,c
 11651   001D5A  50DF               	movf	indf2,w,c
 11652   001D5C  0101               	movlb	1	; () banked
 11653   001D5E  6FCA               	movwf	sendMessage6@data5& (0+255),b
 11654   001D60  C2F5  FFD9         	movff	mnsProcessMessage@d,fsr2l
 11655   001D64  C2F6  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 11656   001D68  50DF               	movf	indf2,w,c
 11657   001D6A  6FCB               	movwf	sendMessage6@data6& (0+255),b
 11658   001D6C  0EC7               	movlw	199
 11659   001D6E  ECE1  F05E         	call	_sendMessage6
 11660   001D72  D54E               	goto	l22966
 11661   001D74                     l23140:
 11662                           
 11663                           ; BSR set to: 3
 11664                           ;../../VLCBlib_PIC/mns.c: 468:             if (m->len < 4) {
 11665   001D74  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11666   001D78  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11667   001D7C  0E04               	movlw	4
 11668   001D7E  60DF               	cpfslt	indf2,c
 11669   001D80  D00F               	goto	l23148
 11670                           
 11671                           ; BSR set to: 3
 11672                           ;../../VLCBlib_PIC/mns.c: 469:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11673   001D82  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11674   001D86  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11675   001D8A  0E78               	movlw	120
 11676   001D8C  0101               	movlb	1	; () banked
 11677   001D8E  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11678   001D90  0E01               	movlw	1
 11679   001D92  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11680   001D94  0E01               	movlw	1
 11681   001D96  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11682   001D98  0EAF               	movlw	175
 11683   001D9A  EC41  F05F         	call	_sendMessage5
 11684   001D9E  D538               	goto	l22966
 11685   001DA0                     l23148:
 11686                           
 11687                           ; BSR set to: 3
 11688                           ;../../VLCBlib_PIC/mns.c: 472:             if (m->bytes[2] == 0) {
 11689   001DA0  0101               	movlb	1	; () banked
 11690   001DA2  EE20 F004          	lfsr	2,4
 11691   001DA6  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11692   001DA8  26D9               	addwf	fsr2l,f,c
 11693   001DAA  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11694   001DAC  22DA               	addwfc	fsr2h,f,c
 11695   001DAE  50DF               	movf	indf2,w,c
 11696   001DB0  A4D8               	btfss	status,2,c
 11697   001DB2  D018               	goto	l23154
 11698                           
 11699                           ; BSR set to: 1
 11700                           ;../../VLCBlib_PIC/mns.c: 474:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 11701   001DB4  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11702   001DB8  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11703   001DBC  0E00               	movlw	0
 11704   001DBE  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11705   001DC0  0E00               	movlw	0
 11706   001DC2  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11707   001DC4  0E09               	movlw	9
 11708   001DC6  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11709   001DC8  0EAC               	movlw	172
 11710   001DCA  EC41  F05F         	call	_sendMessage5
 11711                           
 11712                           ;../../VLCBlib_PIC/mns.c: 476:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 11713   001DCE  0E01               	movlw	1
 11714   001DD0  0100               	movlb	0	; () banked
 11715   001DD2  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11716   001DD4  0E6A               	movlw	low _mnsTRserviceDiscoveryCallback
 11717   001DD6  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11718   001DD8  0EA3               	movlw	high _mnsTRserviceDiscoveryCallback
 11719   001DDA  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11720   001DDC  0E03               	movlw	3
 11721   001DDE  EC22  F05D         	call	_startTimedResponse
 11722                           
 11723                           ;../../VLCBlib_PIC/mns.c: 477:             } else if (m->bytes[2] > 9) {
 11724   001DE2  D516               	goto	l22966
 11725   001DE4                     l23154:
 11726                           
 11727                           ; BSR set to: 1
 11728   001DE4  EE20 F004          	lfsr	2,4
 11729   001DE8  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11730   001DEA  26D9               	addwf	fsr2l,f,c
 11731   001DEC  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11732   001DEE  22DA               	addwfc	fsr2h,f,c
 11733   001DF0  0E09               	movlw	9
 11734   001DF2  64DF               	cpfsgt	indf2,c
 11735   001DF4  D00E               	goto	l23164
 11736                           
 11737                           ; BSR set to: 1
 11738                           ;../../VLCBlib_PIC/mns.c: 478:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 11739   001DF6  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 11740   001DFA  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 11741   001DFE  0E78               	movlw	120
 11742   001E00  6FC8               	movwf	sendMessage5@data3& (0+255),b
 11743   001E02  0E01               	movlw	1
 11744   001E04  6FC9               	movwf	sendMessage5@data4& (0+255),b
 11745   001E06  0EFC               	movlw	252
 11746   001E08  6FCA               	movwf	sendMessage5@data5& (0+255),b
 11747   001E0A  0EAF               	movlw	175
 11748   001E0C  EC41  F05F         	call	_sendMessage5
 11749   001E10  D4FF               	goto	l22966
 11750   001E12                     l23164:
 11751                           
 11752                           ; BSR set to: 1
 11753                           ;../../VLCBlib_PIC/mns.c: 482:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 11754   001E12  EE20 F004          	lfsr	2,4
 11755   001E16  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11756   001E18  26D9               	addwf	fsr2l,f,c
 11757   001E1A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11758   001E1C  22DA               	addwfc	fsr2h,f,c
 11759   001E1E  50DF               	movf	indf2,w,c
 11760   001E20  0103               	movlb	3	; () banked
 11761   001E22  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11762   001E24  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11763   001E26  90D8               	bcf	status,0,c
 11764   001E28  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11765   001E2A  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11766   001E2C  0EFE               	movlw	254
 11767   001E2E  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11768   001E30  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11769   001E32  0EFF               	movlw	255
 11770   001E34  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11771   001E36  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11772   001E38  0E75               	movlw	low _services
 11773   001E3A  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11774   001E3C  6EF6               	movwf	tblptrl,c
 11775   001E3E  0EEE               	movlw	high _services
 11776   001E40  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11777   001E42  6EF7               	movwf	tblptrh,c
 11778   001E44                     	if	1	;There are 3 active tblptr bytes
 11779   001E44  6AF8               	clrf	tblptru,c
 11780   001E46  0E00               	movlw	low (__mediumconst shr (0+16))
 11781   001E48  22F8               	addwfc	tblptru,f,c
 11782   001E4A                     	endif
 11783   001E4A  0009               	tblrd		*+
 11784   001E4C  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11785   001E50  0009               	tblrd		*+
 11786   001E52  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11787   001E56  0E0E               	movlw	14
 11788   001E58  27CC               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11789   001E5A  0E00               	movlw	0
 11790   001E5C  23CD               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11791   001E5E  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11792   001E62  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11793   001E66                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11794   001E66  6AF8               	clrf	tblptru,c
 11795   001E68                     	endif
 11796   001E68                     	if	0	;tblptru may be non-zero
 11797   001E68                     	endif
 11798   001E68  0009               	tblrd		*+
 11799   001E6A  50F5               	movf	tablat,w,c
 11800   001E6C  0009               	tblrd		*+
 11801   001E6E  10F5               	iorwf	tablat,w,c
 11802   001E70  A4D8               	btfss	status,2,c
 11803   001E72  D042               	goto	l23168
 11804                           
 11805                           ; BSR set to: 3
 11806                           ;../../VLCBlib_PIC/mns.c: 483:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 11807   001E74  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 11808   001E78  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 11809   001E7C  0101               	movlb	1	; () banked
 11810   001E7E  EE20 F004          	lfsr	2,4
 11811   001E82  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11812   001E84  26D9               	addwf	fsr2l,f,c
 11813   001E86  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11814   001E88  22DA               	addwfc	fsr2h,f,c
 11815   001E8A  50DF               	movf	indf2,w,c
 11816   001E8C  6FC8               	movwf	sendMessage7@data3& (0+255),b
 11817   001E8E  EE20 F004          	lfsr	2,4
 11818   001E92  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11819   001E94  26D9               	addwf	fsr2l,f,c
 11820   001E96  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11821   001E98  22DA               	addwfc	fsr2h,f,c
 11822   001E9A  50DF               	movf	indf2,w,c
 11823   001E9C  0103               	movlb	3	; () banked
 11824   001E9E  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11825   001EA0  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11826   001EA2  90D8               	bcf	status,0,c
 11827   001EA4  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11828   001EA6  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11829   001EA8  0EFE               	movlw	254
 11830   001EAA  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11831   001EAC  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11832   001EAE  0EFF               	movlw	255
 11833   001EB0  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11834   001EB2  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11835   001EB4  0E75               	movlw	low _services
 11836   001EB6  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11837   001EB8  6EF6               	movwf	tblptrl,c
 11838   001EBA  0EEE               	movlw	high _services
 11839   001EBC  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11840   001EBE  6EF7               	movwf	tblptrh,c
 11841   001EC0                     	if	1	;There are 3 active tblptr bytes
 11842   001EC0  6AF8               	clrf	tblptru,c
 11843   001EC2  0E00               	movlw	low (__mediumconst shr (0+16))
 11844   001EC4  22F8               	addwfc	tblptru,f,c
 11845   001EC6                     	endif
 11846   001EC6  0009               	tblrd		*+
 11847   001EC8  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11848   001ECC  0009               	tblrd		*+
 11849   001ECE  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11850   001ED2  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11851   001ED6  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11852   001EDA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11853   001EDA  6AF8               	clrf	tblptru,c
 11854   001EDC                     	endif
 11855   001EDC                     	if	0	;tblptru may be non-zero
 11856   001EDC                     	endif
 11857   001EDC  0008               	tblrd		*
 11858   001EDE  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 11859   001EE2  0E00               	movlw	0
 11860   001EE4  0101               	movlb	1	; () banked
 11861   001EE6  6FCA               	movwf	sendMessage7@data5& (0+255),b
 11862   001EE8  0E00               	movlw	0
 11863   001EEA  6FCB               	movwf	sendMessage7@data6& (0+255),b
 11864   001EEC  0E00               	movlw	0
 11865   001EEE  6FCC               	movwf	sendMessage7@data7& (0+255),b
 11866   001EF0  0EE7               	movlw	231
 11867   001EF2  EC29  F05F         	call	_sendMessage7
 11868                           
 11869                           ;../../VLCBlib_PIC/mns.c: 484:                 } else {
 11870   001EF6  D48C               	goto	l22966
 11871   001EF8                     l23168:
 11872                           
 11873                           ; BSR set to: 3
 11874                           ;../../VLCBlib_PIC/mns.c: 485:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 11875   001EF8  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 11876   001EFC  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 11877   001F00  0101               	movlb	1	; () banked
 11878   001F02  EE20 F004          	lfsr	2,4
 11879   001F06  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11880   001F08  26D9               	addwf	fsr2l,f,c
 11881   001F0A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11882   001F0C  22DA               	addwfc	fsr2h,f,c
 11883   001F0E  50DF               	movf	indf2,w,c
 11884   001F10  6FC8               	movwf	sendMessage7@data3& (0+255),b
 11885   001F12  EE20 F004          	lfsr	2,4
 11886   001F16  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11887   001F18  26D9               	addwf	fsr2l,f,c
 11888   001F1A  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11889   001F1C  22DA               	addwfc	fsr2h,f,c
 11890   001F1E  50DF               	movf	indf2,w,c
 11891   001F20  0103               	movlb	3	; () banked
 11892   001F22  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 11893   001F24  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11894   001F26  90D8               	bcf	status,0,c
 11895   001F28  37C8               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11896   001F2A  37C9               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11897   001F2C  0EFE               	movlw	254
 11898   001F2E  25C8               	addwf	??_mnsProcessMessage& (0+255),w,b
 11899   001F30  6FCA               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11900   001F32  0EFF               	movlw	255
 11901   001F34  21C9               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11902   001F36  6FCB               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11903   001F38  0E75               	movlw	low _services
 11904   001F3A  25CA               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11905   001F3C  6EF6               	movwf	tblptrl,c
 11906   001F3E  0EEE               	movlw	high _services
 11907   001F40  21CB               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11908   001F42  6EF7               	movwf	tblptrh,c
 11909   001F44                     	if	1	;There are 3 active tblptr bytes
 11910   001F44  6AF8               	clrf	tblptru,c
 11911   001F46  0E00               	movlw	low (__mediumconst shr (0+16))
 11912   001F48  22F8               	addwfc	tblptru,f,c
 11913   001F4A                     	endif
 11914   001F4A  0009               	tblrd		*+
 11915   001F4C  CFF5 F3CC          	movff	tablat,??_mnsProcessMessage+4
 11916   001F50  0009               	tblrd		*+
 11917   001F52  CFF5 F3CD          	movff	tablat,??_mnsProcessMessage+5
 11918   001F56  C3CC  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11919   001F5A  C3CD  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11920   001F5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11921   001F5E  6AF8               	clrf	tblptru,c
 11922   001F60                     	endif
 11923   001F60                     	if	0	;tblptru may be non-zero
 11924   001F60                     	endif
 11925   001F60  0008               	tblrd		*
 11926   001F62  CFF5 F1C9          	movff	tablat,sendMessage7@data4
 11927   001F66  0101               	movlb	1	; () banked
 11928   001F68  EE20 F004          	lfsr	2,4
 11929   001F6C  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11930   001F6E  26D9               	addwf	fsr2l,f,c
 11931   001F70  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11932   001F72  22DA               	addwfc	fsr2h,f,c
 11933   001F74  50DF               	movf	indf2,w,c
 11934   001F76  0103               	movlb	3	; () banked
 11935   001F78  6FCE               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 11936   001F7A  6BCF               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 11937   001F7C  90D8               	bcf	status,0,c
 11938   001F7E  37CE               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 11939   001F80  37CF               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 11940   001F82  0EFE               	movlw	254
 11941   001F84  25CE               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 11942   001F86  6FD0               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 11943   001F88  0EFF               	movlw	255
 11944   001F8A  21CF               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 11945   001F8C  6FD1               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 11946   001F8E  0E75               	movlw	low _services
 11947   001F90  25D0               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 11948   001F92  6EF6               	movwf	tblptrl,c
 11949   001F94  0EEE               	movlw	high _services
 11950   001F96  21D1               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 11951   001F98  6EF7               	movwf	tblptrh,c
 11952   001F9A                     	if	1	;There are 3 active tblptr bytes
 11953   001F9A  6AF8               	clrf	tblptru,c
 11954   001F9C  0E00               	movlw	low (__mediumconst shr (0+16))
 11955   001F9E  22F8               	addwfc	tblptru,f,c
 11956   001FA0                     	endif
 11957   001FA0  0009               	tblrd		*+
 11958   001FA2  CFF5 F3D2          	movff	tablat,??_mnsProcessMessage+10
 11959   001FA6  0009               	tblrd		*+
 11960   001FA8  CFF5 F3D3          	movff	tablat,??_mnsProcessMessage+11
 11961   001FAC  0E0E               	movlw	14
 11962   001FAE  27D2               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 11963   001FB0  0E00               	movlw	0
 11964   001FB2  23D3               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 11965   001FB4  C3D2  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 11966   001FB8  C3D3  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 11967   001FBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11968   001FBC  6AF8               	clrf	tblptru,c
 11969   001FBE                     	endif
 11970   001FBE                     	if	0	;tblptru may be non-zero
 11971   001FBE                     	endif
 11972   001FBE  0009               	tblrd		*+
 11973   001FC0  CFF5 F3D4          	movff	tablat,??_mnsProcessMessage+12
 11974   001FC4  0009               	tblrd		*+
 11975   001FC6  CFF5 F3D5          	movff	tablat,??_mnsProcessMessage+13
 11976   001FCA  D801               	call	u25008
 11977   001FCC  D00A               	goto	u25009
 11978   001FCE                     u25008:
 11979   001FCE  0005               	push	
 11980   001FD0  6EFA               	movwf	pclath,c
 11981   001FD2  51D4               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 11982   001FD4  6EFD               	movwf	tosl,c
 11983   001FD6  51D5               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 11984   001FD8  6EFE               	movwf	tosh,c
 11985   001FDA  6AFF               	clrf	tosu,c
 11986   001FDC  50FA               	movf	pclath,w,c
 11987   001FDE  0E01               	movlw	1
 11988   001FE0  0012               	return		;indir
 11989   001FE2                     u25009:
 11990   001FE2  0101               	movlb	1	; () banked
 11991   001FE4  6FCA               	movwf	sendMessage7@data5& (0+255),b
 11992   001FE6  EE20 F004          	lfsr	2,4
 11993   001FEA  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 11994   001FEC  26D9               	addwf	fsr2l,f,c
 11995   001FEE  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11996   001FF0  22DA               	addwfc	fsr2h,f,c
 11997   001FF2  50DF               	movf	indf2,w,c
 11998   001FF4  0103               	movlb	3	; () banked
 11999   001FF6  6FD6               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12000   001FF8  6BD7               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12001   001FFA  90D8               	bcf	status,0,c
 12002   001FFC  37D6               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12003   001FFE  37D7               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12004   002000  0EFE               	movlw	254
 12005   002002  25D6               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12006   002004  6FD8               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12007   002006  0EFF               	movlw	255
 12008   002008  21D7               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12009   00200A  6FD9               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12010   00200C  0E75               	movlw	low _services
 12011   00200E  25D8               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12012   002010  6EF6               	movwf	tblptrl,c
 12013   002012  0EEE               	movlw	high _services
 12014   002014  21D9               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12015   002016  6EF7               	movwf	tblptrh,c
 12016   002018                     	if	1	;There are 3 active tblptr bytes
 12017   002018  6AF8               	clrf	tblptru,c
 12018   00201A  0E00               	movlw	low (__mediumconst shr (0+16))
 12019   00201C  22F8               	addwfc	tblptru,f,c
 12020   00201E                     	endif
 12021   00201E  0009               	tblrd		*+
 12022   002020  CFF5 F3DA          	movff	tablat,??_mnsProcessMessage+18
 12023   002024  0009               	tblrd		*+
 12024   002026  CFF5 F3DB          	movff	tablat,??_mnsProcessMessage+19
 12025   00202A  0E0E               	movlw	14
 12026   00202C  27DA               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12027   00202E  0E00               	movlw	0
 12028   002030  23DB               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12029   002032  C3DA  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12030   002036  C3DB  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12031   00203A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12032   00203A  6AF8               	clrf	tblptru,c
 12033   00203C                     	endif
 12034   00203C                     	if	0	;tblptru may be non-zero
 12035   00203C                     	endif
 12036   00203C  0009               	tblrd		*+
 12037   00203E  CFF5 F3DC          	movff	tablat,??_mnsProcessMessage+20
 12038   002042  0009               	tblrd		*+
 12039   002044  CFF5 F3DD          	movff	tablat,??_mnsProcessMessage+21
 12040   002048  D801               	call	u25018
 12041   00204A  D00A               	goto	u25019
 12042   00204C                     u25018:
 12043   00204C  0005               	push	
 12044   00204E  6EFA               	movwf	pclath,c
 12045   002050  51DC               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12046   002052  6EFD               	movwf	tosl,c
 12047   002054  51DD               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12048   002056  6EFE               	movwf	tosh,c
 12049   002058  6AFF               	clrf	tosu,c
 12050   00205A  50FA               	movf	pclath,w,c
 12051   00205C  0E02               	movlw	2
 12052   00205E  0012               	return		;indir
 12053   002060                     u25019:
 12054   002060  0101               	movlb	1	; () banked
 12055   002062  6FCB               	movwf	sendMessage7@data6& (0+255),b
 12056   002064  EE20 F004          	lfsr	2,4
 12057   002068  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12058   00206A  26D9               	addwf	fsr2l,f,c
 12059   00206C  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12060   00206E  22DA               	addwfc	fsr2h,f,c
 12061   002070  50DF               	movf	indf2,w,c
 12062   002072  0103               	movlb	3	; () banked
 12063   002074  6FDE               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12064   002076  6BDF               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12065   002078  90D8               	bcf	status,0,c
 12066   00207A  37DE               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12067   00207C  37DF               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12068   00207E  0EFE               	movlw	254
 12069   002080  25DE               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12070   002082  6FE0               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12071   002084  0EFF               	movlw	255
 12072   002086  21DF               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12073   002088  6FE1               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12074   00208A  0E75               	movlw	low _services
 12075   00208C  25E0               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12076   00208E  6EF6               	movwf	tblptrl,c
 12077   002090  0EEE               	movlw	high _services
 12078   002092  21E1               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12079   002094  6EF7               	movwf	tblptrh,c
 12080   002096                     	if	1	;There are 3 active tblptr bytes
 12081   002096  6AF8               	clrf	tblptru,c
 12082   002098  0E00               	movlw	low (__mediumconst shr (0+16))
 12083   00209A  22F8               	addwfc	tblptru,f,c
 12084   00209C                     	endif
 12085   00209C  0009               	tblrd		*+
 12086   00209E  CFF5 F3E2          	movff	tablat,??_mnsProcessMessage+26
 12087   0020A2  0009               	tblrd		*+
 12088   0020A4  CFF5 F3E3          	movff	tablat,??_mnsProcessMessage+27
 12089   0020A8  0E0E               	movlw	14
 12090   0020AA  27E2               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12091   0020AC  0E00               	movlw	0
 12092   0020AE  23E3               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12093   0020B0  C3E2  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12094   0020B4  C3E3  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12095   0020B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12096   0020B8  6AF8               	clrf	tblptru,c
 12097   0020BA                     	endif
 12098   0020BA                     	if	0	;tblptru may be non-zero
 12099   0020BA                     	endif
 12100   0020BA  0009               	tblrd		*+
 12101   0020BC  CFF5 F3E4          	movff	tablat,??_mnsProcessMessage+28
 12102   0020C0  0009               	tblrd		*+
 12103   0020C2  CFF5 F3E5          	movff	tablat,??_mnsProcessMessage+29
 12104   0020C6  D801               	call	u25028
 12105   0020C8  D00A               	goto	u25029
 12106   0020CA                     u25028:
 12107   0020CA  0005               	push	
 12108   0020CC  6EFA               	movwf	pclath,c
 12109   0020CE  51E4               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12110   0020D0  6EFD               	movwf	tosl,c
 12111   0020D2  51E5               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12112   0020D4  6EFE               	movwf	tosh,c
 12113   0020D6  6AFF               	clrf	tosu,c
 12114   0020D8  50FA               	movf	pclath,w,c
 12115   0020DA  0E03               	movlw	3
 12116   0020DC  0012               	return		;indir
 12117   0020DE                     u25029:
 12118   0020DE  0101               	movlb	1	; () banked
 12119   0020E0  6FCC               	movwf	sendMessage7@data7& (0+255),b
 12120   0020E2  0EE7               	movlw	231
 12121   0020E4  EC29  F05F         	call	_sendMessage7
 12122   0020E8  EF08  F00C         	goto	l22966
 12123   0020EC                     l23174:
 12124                           
 12125                           ; BSR set to: 3
 12126                           ;../../VLCBlib_PIC/mns.c: 493:             if (m->len < 4) {
 12127   0020EC  C1FD  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12128   0020F0  C1FE  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12129   0020F4  0E04               	movlw	4
 12130   0020F6  60DF               	cpfslt	indf2,c
 12131   0020F8  D010               	goto	l23182
 12132                           
 12133                           ; BSR set to: 3
 12134                           ;../../VLCBlib_PIC/mns.c: 494:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12135   0020FA  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12136   0020FE  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12137   002102  0E76               	movlw	118
 12138   002104  0101               	movlb	1	; () banked
 12139   002106  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12140   002108  0E01               	movlw	1
 12141   00210A  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12142   00210C  0E01               	movlw	1
 12143   00210E  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12144   002110  0EAF               	movlw	175
 12145   002112  EC41  F05F         	call	_sendMessage5
 12146   002116  EF08  F00C         	goto	l22966
 12147   00211A                     l23182:
 12148                           
 12149                           ; BSR set to: 3
 12150                           ;../../VLCBlib_PIC/mns.c: 497:             newMode = m->bytes[2];
 12151   00211A  0101               	movlb	1	; () banked
 12152   00211C  EE20 F004          	lfsr	2,4
 12153   002120  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12154   002122  26D9               	addwf	fsr2l,f,c
 12155   002124  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12156   002126  22DA               	addwfc	fsr2h,f,c
 12157   002128  50DF               	movf	indf2,w,c
 12158   00212A  0102               	movlb	2	; () banked
 12159   00212C  6FF7               	movwf	mnsProcessMessage@newMode& (0+255),b
 12160                           
 12161                           ; BSR set to: 2
 12162                           ;../../VLCBlib_PIC/mns.c: 498:             previousNN.word = nn.word;
 12163   00212E  C0B4  F178         	movff	_nn,_previousNN
 12164   002132  C0B5  F179         	movff	_nn+1,_previousNN+1
 12165                           
 12166                           ;../../VLCBlib_PIC/mns.c: 500:             switch (mode_state) {
 12167   002136  D05B               	goto	l23224
 12168   002138                     l23186:
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;../../VLCBlib_PIC/mns.c: 502:                     if (newMode == MODE_SETUP) {
 12172   002138  0102               	movlb	2	; () banked
 12173   00213A  51F7               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12174   00213C  A4D8               	btfss	status,2,c
 12175   00213E  D060               	goto	l23226
 12176                           
 12177                           ; BSR set to: 2
 12178                           ;../../VLCBlib_PIC/mns.c: 503:                         mode_state = MODE_SETUP;
 12179   002140  0E00               	movlw	0
 12180   002142  0100               	movlb	0	; () banked
 12181   002144  6FC2               	movwf	_mode_state& (0+255),b
 12182                           
 12183                           ; BSR set to: 0
 12184                           ;../../VLCBlib_PIC/mns.c: 504:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12185   002146  69BF               	setf	_setupModePreviousMode& (0+255),b
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;../../VLCBlib_PIC/mns.c: 505:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12189   002148  C179  F1C6         	movff	_previousNN+1,sendMessage5@data1
 12190   00214C  C178  F1C7         	movff	_previousNN,sendMessage5@data2
 12191   002150  0E76               	movlw	118
 12192   002152  0101               	movlb	1	; () banked
 12193   002154  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12194   002156  0E01               	movlw	1
 12195   002158  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12196   00215A  0E00               	movlw	0
 12197   00215C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12198   00215E  0EAF               	movlw	175
 12199   002160  EC41  F05F         	call	_sendMessage5
 12200                           
 12201                           ;../../VLCBlib_PIC/mns.c: 507:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12202   002164  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 12203   002168  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 12204   00216C  0E50               	movlw	80
 12205   00216E  EC11  F05F         	call	_sendMessage2
 12206   002172  EF06  F00C         	goto	l22964
 12207   002176                     l23202:
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;../../VLCBlib_PIC/mns.c: 516:                     if (newMode == MODE_SETUP) {
 12211   002176  0102               	movlb	2	; () banked
 12212   002178  51F7               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12213   00217A  A4D8               	btfss	status,2,c
 12214   00217C  D041               	goto	l23226
 12215                           
 12216                           ; BSR set to: 2
 12217                           ;../../VLCBlib_PIC/mns.c: 517:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12218   00217E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12219   002182  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12220   002186  0E76               	movlw	118
 12221   002188  0101               	movlb	1	; () banked
 12222   00218A  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12223   00218C  0E01               	movlw	1
 12224   00218E  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12225   002190  0E00               	movlw	0
 12226   002192  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12227   002194  0EAF               	movlw	175
 12228   002196  EC41  F05F         	call	_sendMessage5
 12229                           
 12230                           ;../../VLCBlib_PIC/mns.c: 520:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12231   00219A  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 12232   00219E  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 12233   0021A2  0E50               	movlw	80
 12234   0021A4  EC11  F05F         	call	_sendMessage2
 12235                           
 12236                           ;../../VLCBlib_PIC/mns.c: 522:                         nn.bytes.lo = nn.bytes.hi = 0;
 12237   0021A8  0E00               	movlw	0
 12238   0021AA  0100               	movlb	0	; () banked
 12239   0021AC  6FB5               	movwf	(_nn+1)& (0+255),b
 12240   0021AE  C0B5  F0B4         	movff	_nn+1,_nn
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;../../VLCBlib_PIC/mns.c: 523:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.hi);
 12244   0021B2  0EFC               	movlw	252
 12245   0021B4  6FA4               	movwf	writeNVM@index& (0+255),b
 12246   0021B6  0E03               	movlw	3
 12247   0021B8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12248   0021BA  0E00               	movlw	0
 12249   0021BC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12250   0021BE  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 12251   0021C2  0E00               	movlw	0
 12252   0021C4  EC91  F05B         	call	_writeNVM
 12253                           
 12254                           ;../../VLCBlib_PIC/mns.c: 524:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.lo);
 12255   0021C8  0EFD               	movlw	253
 12256   0021CA  0100               	movlb	0	; () banked
 12257   0021CC  6FA4               	movwf	writeNVM@index& (0+255),b
 12258   0021CE  0E03               	movlw	3
 12259   0021D0  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12260   0021D2  0E00               	movlw	0
 12261   0021D4  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12262   0021D6  C0B4  F0A7         	movff	_nn,writeNVM@value
 12263   0021DA  0E00               	movlw	0
 12264   0021DC  EC91  F05B         	call	_writeNVM
 12265                           
 12266                           ;../../VLCBlib_PIC/mns.c: 526:                         mode_state = MODE_SETUP;
 12267   0021E0  0E00               	movlw	0
 12268   0021E2  0100               	movlb	0	; () banked
 12269   0021E4  6FC2               	movwf	_mode_state& (0+255),b
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;../../VLCBlib_PIC/mns.c: 527:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 12273   0021E6  0E01               	movlw	1
 12274   0021E8  6FBF               	movwf	_setupModePreviousMode& (0+255),b
 12275   0021EA  EF06  F00C         	goto	l22964
 12276   0021EE                     l23224:
 12277                           
 12278                           ; BSR set to: 2
 12279   0021EE  0100               	movlb	0	; () banked
 12280   0021F0  51C2               	movf	_mode_state& (0+255),w,b
 12281                           
 12282                           ; Switch size 1, requested type "simple"
 12283                           ; Number of cases is 2, Range of values is 0 to 255
 12284                           ; switch strategies available:
 12285                           ; Name         Instructions Cycles
 12286                           ; simple_byte            7     4 (average)
 12287                           ;	Chosen strategy is simple_byte
 12288   0021F2  0A00               	xorlw	0	; case 0
 12289   0021F4  B4D8               	btfsc	status,2,c
 12290   0021F6  D004               	goto	l23226
 12291   0021F8  0AFF               	xorlw	255	; case 255
 12292   0021FA  B4D8               	btfsc	status,2,c
 12293   0021FC  D79D               	goto	l23186
 12294   0021FE  D7BB               	goto	l23202
 12295   002200                     l23226:
 12296                           
 12297                           ;../../VLCBlib_PIC/mns.c: 536:             if (newMode == MODE_HEARTBEAT_ON) {
 12298   002200  0E0C               	movlw	12
 12299   002202  0102               	movlb	2	; () banked
 12300   002204  19F7               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12301   002206  A4D8               	btfss	status,2,c
 12302   002208  D011               	goto	l23238
 12303                           
 12304                           ; BSR set to: 2
 12305                           ;../../VLCBlib_PIC/mns.c: 537:                 mode_flags |= 4;
 12306   00220A  0101               	movlb	1	; () banked
 12307   00220C  857D               	bsf	_mode_flags& (0+255),2,b
 12308                           
 12309                           ; BSR set to: 1
 12310                           ;../../VLCBlib_PIC/mns.c: 538:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12311   00220E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12312   002212  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12313   002216  0E76               	movlw	118
 12314   002218  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12315   00221A  0E01               	movlw	1
 12316   00221C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12317   00221E  0E00               	movlw	0
 12318   002220  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12319   002222  0EAF               	movlw	175
 12320   002224  EC41  F05F         	call	_sendMessage5
 12321   002228  EF08  F00C         	goto	l22966
 12322   00222C                     l23238:
 12323                           
 12324                           ; BSR set to: 2
 12325   00222C  0E0D               	movlw	13
 12326   00222E  19F7               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12327   002230  A4D8               	btfss	status,2,c
 12328   002232  EF8D  F00C         	goto	l22992
 12329                           
 12330                           ; BSR set to: 2
 12331                           ;../../VLCBlib_PIC/mns.c: 541:                 mode_flags &= ~4;
 12332   002236  0101               	movlb	1	; () banked
 12333   002238  957D               	bcf	_mode_flags& (0+255),2,b
 12334                           
 12335                           ; BSR set to: 1
 12336                           ;../../VLCBlib_PIC/mns.c: 542:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12337   00223A  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 12338   00223E  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 12339   002242  0E76               	movlw	118
 12340   002244  6FC8               	movwf	sendMessage5@data3& (0+255),b
 12341   002246  0E01               	movlw	1
 12342   002248  6FC9               	movwf	sendMessage5@data4& (0+255),b
 12343   00224A  0E00               	movlw	0
 12344   00224C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 12345   00224E  0EAF               	movlw	175
 12346   002250  EC41  F05F         	call	_sendMessage5
 12347   002254  EF08  F00C         	goto	l22966
 12348   002258                     l1903:
 12349                           
 12350                           ; BSR set to: 3
 12351   002258  00FF               	reset		;# 
 12352   00225A  EF08  F00C         	goto	l22966
 12353   00225E                     l23258:
 12354                           
 12355                           ; BSR set to: 0
 12356   00225E  0101               	movlb	1	; () banked
 12357   002260  EE20 F001          	lfsr	2,1
 12358   002264  51FD               	movf	mnsProcessMessage@m& (0+255),w,b
 12359   002266  26D9               	addwf	fsr2l,f,c
 12360   002268  51FE               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12361   00226A  22DA               	addwfc	fsr2h,f,c
 12362   00226C  50DF               	movf	indf2,w,c
 12363   00226E  0103               	movlb	3	; () banked
 12364   002270  6FC8               	movwf	??_mnsProcessMessage& (0+255),b
 12365   002272  6BC9               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12366                           
 12367                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12368                           ; Switch size 1, requested type "simple"
 12369                           ; Number of cases is 1, Range of values is 0 to 0
 12370                           ; switch strategies available:
 12371                           ; Name         Instructions Cycles
 12372                           ; simple_byte            4     3 (average)
 12373                           ;	Chosen strategy is simple_byte
 12374   002274  51C9               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 12375   002276  0A00               	xorlw	0	; case 0
 12376   002278  A4D8               	btfss	status,2,c
 12377   00227A  EF8D  F00C         	goto	l22992
 12378                           
 12379                           ; BSR set to: 3
 12380                           ; Switch size 1, requested type "simple"
 12381                           ; Number of cases is 6, Range of values is 79 to 135
 12382                           ; switch strategies available:
 12383                           ; Name         Instructions Cycles
 12384                           ; simple_byte           19    10 (average)
 12385                           ;	Chosen strategy is simple_byte
 12386   00227E  51C8               	movf	??_mnsProcessMessage& (0+255),w,b
 12387   002280  0A4F               	xorlw	79	; case 79
 12388   002282  B4D8               	btfsc	status,2,c
 12389   002284  D443               	goto	l1871
 12390   002286  0A11               	xorlw	17	; case 94
 12391   002288  B4D8               	btfsc	status,2,c
 12392   00228A  D7E6               	goto	l1903
 12393   00228C  0A2D               	xorlw	45	; case 115
 12394   00228E  B4D8               	btfsc	status,2,c
 12395   002290  EF18  F00D         	goto	l23056
 12396   002294  0A05               	xorlw	5	; case 118
 12397   002296  B4D8               	btfsc	status,2,c
 12398   002298  D729               	goto	l23174
 12399   00229A  0A0E               	xorlw	14	; case 120
 12400   00229C  B4D8               	btfsc	status,2,c
 12401   00229E  D56A               	goto	l23140
 12402   0022A0  0AFF               	xorlw	255	; case 135
 12403   0022A2  B4D8               	btfsc	status,2,c
 12404   0022A4  D446               	goto	l23094
 12405   0022A6  EF8D  F00C         	goto	l22992
 12406   0022AA                     __end_of_mnsProcessMessage:
 12407                           	callstack 0
 12408                           
 12409 ;; *************** function _producerProcessMessage *****************
 12410 ;; Defined at:
 12411 ;;		line 100 in file "../../VLCBlib_PIC/event_producer.c"
 12412 ;; Parameters:    Size  Location     Type
 12413 ;;  m               2   63[BANK1 ] PTR struct Message
 12414 ;;		 -> poll@m(9), 
 12415 ;; Auto vars:     Size  Location     Type
 12416 ;;  ev              2    8[BANK2 ] short 
 12417 ;;  index           1   11[BANK2 ] unsigned char 
 12418 ;;  h               1   10[BANK2 ] unsigned char 
 12419 ;; Return value:  Size  Location     Type
 12420 ;;                  1    wreg      enum E12732
 12421 ;; Registers used:
 12422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12423 ;; Tracked objects:
 12424 ;;		On entry : 0/0
 12425 ;;		On exit  : 0/0
 12426 ;;		Unchanged: 0/0
 12427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12428 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12429 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12430 ;;      Temps:          0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12431 ;;      Totals:         0       0       2      12       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12432 ;;Total ram usage:       14 bytes
 12433 ;; Hardware stack levels used: 1
 12434 ;; Hardware stack levels required when called: 16
 12435 ;; This function calls:
 12436 ;;		_APP_GetEventState
 12437 ;;		_findEvent
 12438 ;;		_getEv
 12439 ;;		_sendMessage3
 12440 ;;		_sendMessage4
 12441 ;; This function is called by:
 12442 ;;		_poll
 12443 ;; This function uses a non-reentrant model
 12444 ;;
 12445                           
 12446                           	psect	text21
 12447   005684                     __ptext21:
 12448                           	callstack 0
 12449   005684                     _producerProcessMessage:
 12450                           	callstack 13
 12451                           
 12452                           ;../../VLCBlib_PIC/event_producer.c: 101:     uint8_t index;;../../VLCBlib_PIC/event_pro
      +                          ducer.c: 102:     Happening h;;../../VLCBlib_PIC/event_producer.c: 103:     int16_t ev;;
      +                          ../../VLCBlib_PIC/event_producer.c: 105:     switch (m->opc) {
 12453                           
 12454                           ;incstack = 0
 12455   005684  D142               	goto	l22596
 12456   005686                     l22548:
 12457                           
 12458                           ; BSR set to: 2
 12459                           ;../../VLCBlib_PIC/event_producer.c: 108:             if (m->len < 5) {
 12460   005686  C1FD  FFD9         	movff	producerProcessMessage@m,fsr2l
 12461   00568A  C1FE  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 12462   00568E  0E05               	movlw	5
 12463   005690  60DF               	cpfslt	indf2,c
 12464   005692  D00C               	goto	l22556
 12465                           
 12466                           ; BSR set to: 2
 12467                           ;../../VLCBlib_PIC/event_producer.c: 109:                 sendMessage3(OPC_CMDERR, nn.by
      +                          tes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 12468   005694  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 12469   005698  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 12470   00569C  0E01               	movlw	1
 12471   00569E  0100               	movlb	0	; () banked
 12472   0056A0  6FA8               	movwf	sendMessage3@data3& (0+255),b
 12473   0056A2  0E6F               	movlw	111
 12474   0056A4  ECF9  F05E         	call	_sendMessage3
 12475   0056A8                     l22552:
 12476                           
 12477                           ;../../VLCBlib_PIC/event_producer.c: 110:                 return PROCESSED;
 12478   0056A8  0E01               	movlw	1
 12479   0056AA  0012               	return	
 12480   0056AC                     l22556:
 12481                           
 12482                           ; BSR set to: 2
 12483                           ;../../VLCBlib_PIC/event_producer.c: 112:             if (m->opc == OPC_AREQ) {
 12484   0056AC  0101               	movlb	1	; () banked
 12485   0056AE  EE20 F001          	lfsr	2,1
 12486   0056B2  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12487   0056B4  26D9               	addwf	fsr2l,f,c
 12488   0056B6  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12489   0056B8  22DA               	addwfc	fsr2h,f,c
 12490   0056BA  0E92               	movlw	146
 12491   0056BC  18DE               	xorwf	postinc2,w,c
 12492   0056BE  A4D8               	btfss	status,2,c
 12493   0056C0  D041               	goto	l22560
 12494                           
 12495                           ; BSR set to: 1
 12496                           ;../../VLCBlib_PIC/event_producer.c: 113:                 index = findEvent((m->bytes[0]
      +                          <<8)&(m->bytes[1]), (m->bytes[2]<<8)&(m->bytes[3]));
 12497   0056C2  EE20 F003          	lfsr	2,3
 12498   0056C6  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12499   0056C8  26D9               	addwf	fsr2l,f,c
 12500   0056CA  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12501   0056CC  22DA               	addwfc	fsr2h,f,c
 12502   0056CE  50DF               	movf	indf2,w,c
 12503   0056D0  0102               	movlb	2	; () banked
 12504   0056D2  6FF4               	movwf	??_producerProcessMessage& (0+255),b
 12505   0056D4  0101               	movlb	1	; () banked
 12506   0056D6  EE20 F002          	lfsr	2,2
 12507   0056DA  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12508   0056DC  26D9               	addwf	fsr2l,f,c
 12509   0056DE  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12510   0056E0  22DA               	addwfc	fsr2h,f,c
 12511   0056E2  50DF               	movf	indf2,w,c
 12512   0056E4  0102               	movlb	2	; () banked
 12513   0056E6  6FF5               	movwf	(??_producerProcessMessage+1)& (0+255),b
 12514   0056E8  51F5               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12515   0056EA  6FF7               	movwf	(??_producerProcessMessage+3)& (0+255),b
 12516   0056EC  6BF6               	clrf	(??_producerProcessMessage+2)& (0+255),b
 12517   0056EE  51F4               	movf	??_producerProcessMessage& (0+255),w,b
 12518   0056F0  15F6               	andwf	(??_producerProcessMessage+2)& (0+255),w,b
 12519   0056F2  0101               	movlb	1	; () banked
 12520   0056F4  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 12521   0056F6  0102               	movlb	2	; () banked
 12522   0056F8  0E00               	movlw	0
 12523   0056FA  15F7               	andwf	(??_producerProcessMessage+3)& (0+255),w,b
 12524   0056FC  0101               	movlb	1	; () banked
 12525   0056FE  6FBF               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 12526   005700  EE20 F005          	lfsr	2,5
 12527   005704  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12528   005706  26D9               	addwf	fsr2l,f,c
 12529   005708  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12530   00570A  22DA               	addwfc	fsr2h,f,c
 12531   00570C  50DF               	movf	indf2,w,c
 12532   00570E  0102               	movlb	2	; () banked
 12533   005710  6FF8               	movwf	(??_producerProcessMessage+4)& (0+255),b
 12534   005712  0101               	movlb	1	; () banked
 12535   005714  EE20 F004          	lfsr	2,4
 12536   005718  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12537   00571A  26D9               	addwf	fsr2l,f,c
 12538   00571C  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12539   00571E  22DA               	addwfc	fsr2h,f,c
 12540   005720  50DF               	movf	indf2,w,c
 12541   005722  0102               	movlb	2	; () banked
 12542   005724  6FF9               	movwf	(??_producerProcessMessage+5)& (0+255),b
 12543   005726  51F9               	movf	(??_producerProcessMessage+5)& (0+255),w,b
 12544   005728  6FFB               	movwf	(??_producerProcessMessage+7)& (0+255),b
 12545   00572A  6BFA               	clrf	(??_producerProcessMessage+6)& (0+255),b
 12546   00572C  51F8               	movf	(??_producerProcessMessage+4)& (0+255),w,b
 12547   00572E  15FA               	andwf	(??_producerProcessMessage+6)& (0+255),w,b
 12548   005730  0101               	movlb	1	; () banked
 12549   005732  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 12550   005734  0102               	movlb	2	; () banked
 12551   005736  0E00               	movlw	0
 12552   005738  15FB               	andwf	(??_producerProcessMessage+7)& (0+255),w,b
 12553   00573A  0101               	movlb	1	; () banked
 12554   00573C  6FC1               	movwf	(findEvent@eventNumber+1)& (0+255),b
 12555   00573E  EC6D  F051         	call	_findEvent	;wreg free
 12556   005742  D025               	goto	L1
 12557   005744                     l22560:
 12558                           
 12559                           ; BSR set to: 1
 12560                           ;../../VLCBlib_PIC/event_producer.c: 115:                 index = findEvent(0, (m->bytes
      +                          [2]<<8)&(m->bytes[3]));
 12561   005744  0E00               	movlw	0
 12562   005746  6FBF               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 12563   005748  0E00               	movlw	0
 12564   00574A  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 12565   00574C  EE20 F005          	lfsr	2,5
 12566   005750  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12567   005752  26D9               	addwf	fsr2l,f,c
 12568   005754  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12569   005756  22DA               	addwfc	fsr2h,f,c
 12570   005758  50DF               	movf	indf2,w,c
 12571   00575A  0102               	movlb	2	; () banked
 12572   00575C  6FF4               	movwf	??_producerProcessMessage& (0+255),b
 12573   00575E  0101               	movlb	1	; () banked
 12574   005760  EE20 F004          	lfsr	2,4
 12575   005764  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12576   005766  26D9               	addwf	fsr2l,f,c
 12577   005768  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12578   00576A  22DA               	addwfc	fsr2h,f,c
 12579   00576C  50DF               	movf	indf2,w,c
 12580   00576E  0102               	movlb	2	; () banked
 12581   005770  6FF5               	movwf	(??_producerProcessMessage+1)& (0+255),b
 12582   005772  51F5               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12583   005774  6FF7               	movwf	(??_producerProcessMessage+3)& (0+255),b
 12584   005776  6BF6               	clrf	(??_producerProcessMessage+2)& (0+255),b
 12585   005778  51F4               	movf	??_producerProcessMessage& (0+255),w,b
 12586   00577A  15F6               	andwf	(??_producerProcessMessage+2)& (0+255),w,b
 12587   00577C  0101               	movlb	1	; () banked
 12588   00577E  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 12589   005780  0102               	movlb	2	; () banked
 12590   005782  0E00               	movlw	0
 12591   005784  15F7               	andwf	(??_producerProcessMessage+3)& (0+255),w,b
 12592   005786  0101               	movlb	1	; () banked
 12593   005788  6FC1               	movwf	(findEvent@eventNumber+1)& (0+255),b
 12594   00578A  EC6D  F051         	call	_findEvent	;wreg free
 12595   00578E                     L1:
 12596   00578E  0102               	movlb	2	; () banked
 12597   005790  6FFF               	movwf	producerProcessMessage@index& (0+255),b
 12598                           
 12599                           ; BSR set to: 2
 12600                           ;../../VLCBlib_PIC/event_producer.c: 117:             if (index == 0xff) return PROCESSE
      +                          D;
 12601   005792  29FF               	incf	producerProcessMessage@index& (0+255),w,b
 12602   005794  B4D8               	btfsc	status,2,c
 12603   005796  D788               	goto	l22552
 12604                           
 12605                           ; BSR set to: 2
 12606                           ;../../VLCBlib_PIC/event_producer.c: 119:             ev = getEv(index, 0);
 12607   005798  0E00               	movlw	0
 12608   00579A  0100               	movlb	0	; () banked
 12609   00579C  6F9D               	movwf	getEv@evNum& (0+255),b
 12610   00579E  0102               	movlb	2	; () banked
 12611   0057A0  51FF               	movf	producerProcessMessage@index& (0+255),w,b
 12612   0057A2  EC24  F03C         	call	_getEv
 12613   0057A6  C09D  F2FC         	movff	?_getEv,producerProcessMessage@ev
 12614   0057AA  C09E  F2FD         	movff	?_getEv+1,producerProcessMessage@ev+1
 12615                           
 12616                           ;../../VLCBlib_PIC/event_producer.c: 120:             if (ev < 0) return PROCESSED;
 12617   0057AE  0102               	movlb	2	; () banked
 12618   0057B0  BFFD               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 12619   0057B2  D77A               	goto	l22552
 12620                           
 12621                           ; BSR set to: 2
 12622                           ;../../VLCBlib_PIC/event_producer.c: 122:             h = (uint8_t)ev;
 12623   0057B4  C2FC  F2FE         	movff	producerProcessMessage@ev,producerProcessMessage@h
 12624                           
 12625                           ; BSR set to: 2
 12626                           ;../../VLCBlib_PIC/event_producer.c: 130:             if (m->opc == OPC_AREQ) {
 12627   0057B8  0101               	movlb	1	; () banked
 12628   0057BA  EE20 F001          	lfsr	2,1
 12629   0057BE  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12630   0057C0  26D9               	addwf	fsr2l,f,c
 12631   0057C2  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12632   0057C4  22DA               	addwfc	fsr2h,f,c
 12633   0057C6  0E92               	movlw	146
 12634   0057C8  18DE               	xorwf	postinc2,w,c
 12635   0057CA  A4D8               	btfss	status,2,c
 12636   0057CC  D05F               	goto	l22584
 12637                           
 12638                           ; BSR set to: 1
 12639                           ;../../VLCBlib_PIC/event_producer.c: 131:                 if (APP_GetEventState(h) == EV
      +                          ENT_ON) {
 12640   0057CE  0102               	movlb	2	; () banked
 12641   0057D0  51FE               	movf	producerProcessMessage@h& (0+255),w,b
 12642   0057D2  EC06  F062         	call	_APP_GetEventState
 12643   0057D6  06E8               	decf	wreg,f,c
 12644   0057D8  A4D8               	btfss	status,2,c
 12645   0057DA  D02C               	goto	l22582
 12646                           
 12647                           ;../../VLCBlib_PIC/event_producer.c: 132:                     sendMessage4(OPC_ARON, m->
      +                          bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 12648   0057DC  0101               	movlb	1	; () banked
 12649   0057DE  EE20 F002          	lfsr	2,2
 12650   0057E2  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12651   0057E4  26D9               	addwf	fsr2l,f,c
 12652   0057E6  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12653   0057E8  22DA               	addwfc	fsr2h,f,c
 12654   0057EA  50DF               	movf	indf2,w,c
 12655   0057EC  0100               	movlb	0	; () banked
 12656   0057EE  6FA6               	movwf	sendMessage4@data1& (0+255),b
 12657   0057F0  0101               	movlb	1	; () banked
 12658   0057F2  EE20 F003          	lfsr	2,3
 12659   0057F6  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12660   0057F8  26D9               	addwf	fsr2l,f,c
 12661   0057FA  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12662   0057FC  22DA               	addwfc	fsr2h,f,c
 12663   0057FE  50DF               	movf	indf2,w,c
 12664   005800  0100               	movlb	0	; () banked
 12665   005802  6FA7               	movwf	sendMessage4@data2& (0+255),b
 12666   005804  0101               	movlb	1	; () banked
 12667   005806  EE20 F004          	lfsr	2,4
 12668   00580A  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12669   00580C  26D9               	addwf	fsr2l,f,c
 12670   00580E  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12671   005810  22DA               	addwfc	fsr2h,f,c
 12672   005812  50DF               	movf	indf2,w,c
 12673   005814  0100               	movlb	0	; () banked
 12674   005816  6FA8               	movwf	sendMessage4@data3& (0+255),b
 12675   005818  0101               	movlb	1	; () banked
 12676   00581A  EE20 F005          	lfsr	2,5
 12677   00581E  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12678   005820  26D9               	addwf	fsr2l,f,c
 12679   005822  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12680   005824  22DA               	addwfc	fsr2h,f,c
 12681   005826  50DF               	movf	indf2,w,c
 12682   005828  0100               	movlb	0	; () banked
 12683   00582A  6FA9               	movwf	sendMessage4@data4& (0+255),b
 12684   00582C  0E93               	movlw	147
 12685   00582E  ECB5  F05F         	call	_sendMessage4
 12686                           
 12687                           ;../../VLCBlib_PIC/event_producer.c: 133:                 } else {
 12688   005832  D73A               	goto	l22552
 12689   005834                     l22582:
 12690                           
 12691                           ;../../VLCBlib_PIC/event_producer.c: 134:                     sendMessage4(OPC_AROF, m->
      +                          bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 12692   005834  0101               	movlb	1	; () banked
 12693   005836  EE20 F002          	lfsr	2,2
 12694   00583A  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12695   00583C  26D9               	addwf	fsr2l,f,c
 12696   00583E  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12697   005840  22DA               	addwfc	fsr2h,f,c
 12698   005842  50DF               	movf	indf2,w,c
 12699   005844  0100               	movlb	0	; () banked
 12700   005846  6FA6               	movwf	sendMessage4@data1& (0+255),b
 12701   005848  0101               	movlb	1	; () banked
 12702   00584A  EE20 F003          	lfsr	2,3
 12703   00584E  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12704   005850  26D9               	addwf	fsr2l,f,c
 12705   005852  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12706   005854  22DA               	addwfc	fsr2h,f,c
 12707   005856  50DF               	movf	indf2,w,c
 12708   005858  0100               	movlb	0	; () banked
 12709   00585A  6FA7               	movwf	sendMessage4@data2& (0+255),b
 12710   00585C  0101               	movlb	1	; () banked
 12711   00585E  EE20 F004          	lfsr	2,4
 12712   005862  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12713   005864  26D9               	addwf	fsr2l,f,c
 12714   005866  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12715   005868  22DA               	addwfc	fsr2h,f,c
 12716   00586A  50DF               	movf	indf2,w,c
 12717   00586C  0100               	movlb	0	; () banked
 12718   00586E  6FA8               	movwf	sendMessage4@data3& (0+255),b
 12719   005870  0101               	movlb	1	; () banked
 12720   005872  EE20 F005          	lfsr	2,5
 12721   005876  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12722   005878  26D9               	addwf	fsr2l,f,c
 12723   00587A  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12724   00587C  22DA               	addwfc	fsr2h,f,c
 12725   00587E  50DF               	movf	indf2,w,c
 12726   005880  0100               	movlb	0	; () banked
 12727   005882  6FA9               	movwf	sendMessage4@data4& (0+255),b
 12728   005884  0E94               	movlw	148
 12729   005886  ECB5  F05F         	call	_sendMessage4
 12730   00588A  D70E               	goto	l22552
 12731   00588C                     l22584:
 12732                           
 12733                           ; BSR set to: 1
 12734                           ;../../VLCBlib_PIC/event_producer.c: 137:                 if (APP_GetEventState(h) == EV
      +                          ENT_ON) {
 12735   00588C  0102               	movlb	2	; () banked
 12736   00588E  51FE               	movf	producerProcessMessage@h& (0+255),w,b
 12737   005890  EC06  F062         	call	_APP_GetEventState
 12738   005894  06E8               	decf	wreg,f,c
 12739   005896  A4D8               	btfss	status,2,c
 12740   005898  D01C               	goto	l22588
 12741                           
 12742                           ;../../VLCBlib_PIC/event_producer.c: 138:                     sendMessage4(OPC_ARSON, nn
      +                          .bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 12743   00589A  C0B5  F0A6         	movff	_nn+1,sendMessage4@data1
 12744   00589E  C0B4  F0A7         	movff	_nn,sendMessage4@data2
 12745   0058A2  0101               	movlb	1	; () banked
 12746   0058A4  EE20 F004          	lfsr	2,4
 12747   0058A8  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12748   0058AA  26D9               	addwf	fsr2l,f,c
 12749   0058AC  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12750   0058AE  22DA               	addwfc	fsr2h,f,c
 12751   0058B0  50DF               	movf	indf2,w,c
 12752   0058B2  0100               	movlb	0	; () banked
 12753   0058B4  6FA8               	movwf	sendMessage4@data3& (0+255),b
 12754   0058B6  0101               	movlb	1	; () banked
 12755   0058B8  EE20 F005          	lfsr	2,5
 12756   0058BC  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12757   0058BE  26D9               	addwf	fsr2l,f,c
 12758   0058C0  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12759   0058C2  22DA               	addwfc	fsr2h,f,c
 12760   0058C4  50DF               	movf	indf2,w,c
 12761   0058C6  0100               	movlb	0	; () banked
 12762   0058C8  6FA9               	movwf	sendMessage4@data4& (0+255),b
 12763   0058CA  0E9D               	movlw	157
 12764   0058CC  ECB5  F05F         	call	_sendMessage4
 12765                           
 12766                           ;../../VLCBlib_PIC/event_producer.c: 139:                 } else {
 12767   0058D0  D6EB               	goto	l22552
 12768   0058D2                     l22588:
 12769                           
 12770                           ;../../VLCBlib_PIC/event_producer.c: 140:                     sendMessage4(OPC_ARSOF, nn
      +                          .bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 12771   0058D2  C0B5  F0A6         	movff	_nn+1,sendMessage4@data1
 12772   0058D6  C0B4  F0A7         	movff	_nn,sendMessage4@data2
 12773   0058DA  0101               	movlb	1	; () banked
 12774   0058DC  EE20 F004          	lfsr	2,4
 12775   0058E0  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12776   0058E2  26D9               	addwf	fsr2l,f,c
 12777   0058E4  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12778   0058E6  22DA               	addwfc	fsr2h,f,c
 12779   0058E8  50DF               	movf	indf2,w,c
 12780   0058EA  0100               	movlb	0	; () banked
 12781   0058EC  6FA8               	movwf	sendMessage4@data3& (0+255),b
 12782   0058EE  0101               	movlb	1	; () banked
 12783   0058F0  EE20 F005          	lfsr	2,5
 12784   0058F4  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12785   0058F6  26D9               	addwf	fsr2l,f,c
 12786   0058F8  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12787   0058FA  22DA               	addwfc	fsr2h,f,c
 12788   0058FC  50DF               	movf	indf2,w,c
 12789   0058FE  0100               	movlb	0	; () banked
 12790   005900  6FA9               	movwf	sendMessage4@data4& (0+255),b
 12791   005902  0E9E               	movlw	158
 12792   005904  ECB5  F05F         	call	_sendMessage4
 12793   005908  D6CF               	goto	l22552
 12794   00590A                     l22596:
 12795   00590A  0101               	movlb	1	; () banked
 12796   00590C  EE20 F001          	lfsr	2,1
 12797   005910  51FD               	movf	producerProcessMessage@m& (0+255),w,b
 12798   005912  26D9               	addwf	fsr2l,f,c
 12799   005914  51FE               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 12800   005916  22DA               	addwfc	fsr2h,f,c
 12801   005918  50DF               	movf	indf2,w,c
 12802   00591A  0102               	movlb	2	; () banked
 12803   00591C  6FF4               	movwf	??_producerProcessMessage& (0+255),b
 12804   00591E  6BF5               	clrf	(??_producerProcessMessage+1)& (0+255),b
 12805                           
 12806                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12807                           ; Switch size 1, requested type "simple"
 12808                           ; Number of cases is 1, Range of values is 0 to 0
 12809                           ; switch strategies available:
 12810                           ; Name         Instructions Cycles
 12811                           ; simple_byte            4     3 (average)
 12812                           ;	Chosen strategy is simple_byte
 12813   005920  51F5               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 12814   005922  0A00               	xorlw	0	; case 0
 12815   005924  A4D8               	btfss	status,2,c
 12816   005926  D007               	goto	l22598
 12817                           
 12818                           ; BSR set to: 2
 12819                           ; Switch size 1, requested type "simple"
 12820                           ; Number of cases is 2, Range of values is 146 to 154
 12821                           ; switch strategies available:
 12822                           ; Name         Instructions Cycles
 12823                           ; simple_byte            7     4 (average)
 12824                           ;	Chosen strategy is simple_byte
 12825   005928  51F4               	movf	??_producerProcessMessage& (0+255),w,b
 12826   00592A  0A92               	xorlw	146	; case 146
 12827   00592C  B4D8               	btfsc	status,2,c
 12828   00592E  D6AB               	goto	l22548
 12829   005930  0A08               	xorlw	8	; case 154
 12830   005932  B4D8               	btfsc	status,2,c
 12831   005934  D6A8               	goto	l22548
 12832   005936                     l22598:
 12833                           
 12834                           ; BSR set to: 2
 12835                           ;../../VLCBlib_PIC/event_producer.c: 147:     return NOT_PROCESSED;
 12836   005936  0E00               	movlw	0
 12837   005938  0012               	return		;funcret
 12838   00593A                     __end_of_producerProcessMessage:
 12839                           	callstack 0
 12840                           
 12841 ;; *************** function _ackEventProcessMessage *****************
 12842 ;; Defined at:
 12843 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
 12844 ;; Parameters:    Size  Location     Type
 12845 ;;  m               2   63[BANK1 ] PTR struct Message
 12846 ;;		 -> poll@m(9), 
 12847 ;; Auto vars:     Size  Location     Type
 12848 ;;  eventNN         2    7[BANK2 ] struct Word
 12849 ;;  eventEN         2    4[BANK2 ] struct Word
 12850 ;;  ev              2    2[BANK2 ] short 
 12851 ;;  eventIndex      1    6[BANK2 ] unsigned char 
 12852 ;; Return value:  Size  Location     Type
 12853 ;;                  1    wreg      enum E12732
 12854 ;; Registers used:
 12855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12856 ;; Tracked objects:
 12857 ;;		On entry : 0/0
 12858 ;;		On exit  : 0/0
 12859 ;;		Unchanged: 0/0
 12860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12861 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12862 ;;      Locals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12863 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12864 ;;      Totals:         0       0       2       9       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12865 ;;Total ram usage:       11 bytes
 12866 ;; Hardware stack levels used: 1
 12867 ;; Hardware stack levels required when called: 18
 12868 ;; This function calls:
 12869 ;;		_ackEventCheckLen
 12870 ;;		_findEvent
 12871 ;;		_findService
 12872 ;;		_getEv
 12873 ;;		_sendMessage7
 12874 ;; This function is called by:
 12875 ;;		_poll
 12876 ;; This function uses a non-reentrant model
 12877 ;;
 12878                           
 12879                           	psect	text22
 12880   00679A                     __ptext22:
 12881                           	callstack 0
 12882   00679A                     _ackEventProcessMessage:
 12883                           	callstack 11
 12884                           
 12885                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     Word eventNN, eventEN;;../../VLCBlib_PIC
      +                          /event_acknowledge.c: 99:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.c:
      +                           100:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 102:     if (m->opc == OPC_
      +                          MODE) {
 12886                           
 12887                           ;incstack = 0
 12888   00679A  0101               	movlb	1	; () banked
 12889   00679C  EE20 F001          	lfsr	2,1
 12890   0067A0  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 12891   0067A2  26D9               	addwf	fsr2l,f,c
 12892   0067A4  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12893   0067A6  22DA               	addwfc	fsr2h,f,c
 12894   0067A8  0E76               	movlw	118
 12895   0067AA  18DE               	xorwf	postinc2,w,c
 12896   0067AC  A4D8               	btfss	status,2,c
 12897   0067AE  D040               	goto	l1232
 12898                           
 12899                           ; BSR set to: 1
 12900                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 12901   0067B0  C1FD  F1CF         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 12902   0067B4  C1FE  F1D0         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 12903   0067B8  0E04               	movlw	4
 12904   0067BA  6FD1               	movwf	ackEventCheckLen@needed& (0+255),b
 12905   0067BC  EC81  F061         	call	_ackEventCheckLen	;wreg free
 12906   0067C0  06E8               	decf	wreg,f,c
 12907   0067C2  A4D8               	btfss	status,2,c
 12908   0067C4  D002               	goto	l22470
 12909   0067C6                     u24130:
 12910   0067C6  0E01               	movlw	1
 12911   0067C8  0012               	return	
 12912   0067CA                     l22470:
 12913                           
 12914                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 12915   0067CA  0101               	movlb	1	; () banked
 12916   0067CC  EE20 F002          	lfsr	2,2
 12917   0067D0  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 12918   0067D2  26D9               	addwf	fsr2l,f,c
 12919   0067D4  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12920   0067D6  22DA               	addwfc	fsr2h,f,c
 12921   0067D8  50DE               	movf	postinc2,w,c
 12922   0067DA  0100               	movlb	0	; () banked
 12923   0067DC  19B5               	xorwf	(_nn+1)& (0+255),w,b
 12924   0067DE  A4D8               	btfss	status,2,c
 12925   0067E0  D025               	goto	l22492
 12926                           
 12927                           ; BSR set to: 0
 12928   0067E2  0101               	movlb	1	; () banked
 12929   0067E4  EE20 F003          	lfsr	2,3
 12930   0067E8  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 12931   0067EA  26D9               	addwf	fsr2l,f,c
 12932   0067EC  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12933   0067EE  22DA               	addwfc	fsr2h,f,c
 12934   0067F0  0100               	movlb	0	; () banked
 12935   0067F2  51B4               	movf	_nn& (0+255),w,b
 12936   0067F4  18DE               	xorwf	postinc2,w,c
 12937   0067F6  A4D8               	btfss	status,2,c
 12938   0067F8  D019               	goto	l22492
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;../../VLCBlib_PIC/event_acknowledge.c: 105:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 12942   0067FA  0101               	movlb	1	; () banked
 12943   0067FC  EE20 F004          	lfsr	2,4
 12944   006800  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 12945   006802  26D9               	addwf	fsr2l,f,c
 12946   006804  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12947   006806  22DA               	addwfc	fsr2h,f,c
 12948   006808  0E0A               	movlw	10
 12949   00680A  18DE               	xorwf	postinc2,w,c
 12950   00680C  A4D8               	btfss	status,2,c
 12951   00680E  D002               	goto	l22484
 12952                           
 12953                           ; BSR set to: 1
 12954                           ;../../VLCBlib_PIC/event_acknowledge.c: 107:                 mode_flags |= 1;
 12955   006810  817D               	bsf	_mode_flags& (0+255),0,b
 12956   006812  D7D9               	goto	u24130
 12957   006814                     l22484:
 12958                           
 12959                           ; BSR set to: 1
 12960   006814  EE20 F004          	lfsr	2,4
 12961   006818  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 12962   00681A  26D9               	addwf	fsr2l,f,c
 12963   00681C  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12964   00681E  22DA               	addwfc	fsr2h,f,c
 12965   006820  0E0B               	movlw	11
 12966   006822  18DE               	xorwf	postinc2,w,c
 12967   006824  A4D8               	btfss	status,2,c
 12968   006826  D002               	goto	l22492
 12969                           
 12970                           ; BSR set to: 1
 12971                           ;../../VLCBlib_PIC/event_acknowledge.c: 111:                 mode_flags &= ~1;
 12972   006828  917D               	bcf	_mode_flags& (0+255),0,b
 12973   00682A  D7CD               	goto	u24130
 12974   00682C                     l22492:
 12975                           
 12976                           ;../../VLCBlib_PIC/event_acknowledge.c: 115:         return NOT_PROCESSED;
 12977   00682C  0E00               	movlw	0
 12978   00682E  0012               	return	
 12979   006830                     l1232:
 12980                           
 12981                           ; BSR set to: 1
 12982                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:     if (! (mode_flags & 2)) {
 12983   006830  A37D               	btfss	_mode_flags& (0+255),1,b
 12984   006832  D7FC               	goto	l22492
 12985                           
 12986                           ; BSR set to: 1
 12987                           ;../../VLCBlib_PIC/event_acknowledge.c: 123:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 12988   006834  0E06               	movlw	6
 12989   006836  ECAD  F04F         	call	_findService
 12990   00683A  0100               	movlb	0	; () banked
 12991   00683C  518D               	movf	?_findService& (0+255),w,b
 12992   00683E  118E               	iorwf	(?_findService+1)& (0+255),w,b
 12993   006840  B4D8               	btfsc	status,2,c
 12994   006842  D7F4               	goto	l22492
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:     if (m->len < 5) {
 12998   006844  C1FD  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 12999   006848  C1FE  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 13000   00684C  0E05               	movlw	5
 13001   00684E  60DF               	cpfslt	indf2,c
 13002   006850  D001               	goto	l22512
 13003   006852  D7EC               	goto	l22492
 13004   006854                     l22512:
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;../../VLCBlib_PIC/event_acknowledge.c: 129:     eventNN.bytes.hi = m->bytes[0];
 13008   006854  0101               	movlb	1	; () banked
 13009   006856  EE20 F002          	lfsr	2,2
 13010   00685A  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13011   00685C  26D9               	addwf	fsr2l,f,c
 13012   00685E  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13013   006860  22DA               	addwfc	fsr2h,f,c
 13014   006862  50DF               	movf	indf2,w,c
 13015   006864  0102               	movlb	2	; () banked
 13016   006866  6FFC               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 13017                           
 13018                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:     eventNN.bytes.lo = m->bytes[1];
 13019   006868  0101               	movlb	1	; () banked
 13020   00686A  EE20 F003          	lfsr	2,3
 13021   00686E  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13022   006870  26D9               	addwf	fsr2l,f,c
 13023   006872  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13024   006874  22DA               	addwfc	fsr2h,f,c
 13025   006876  50DF               	movf	indf2,w,c
 13026   006878  0102               	movlb	2	; () banked
 13027   00687A  6FFB               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 13028                           
 13029                           ;../../VLCBlib_PIC/event_acknowledge.c: 131:     eventEN.bytes.hi = m->bytes[2];
 13030   00687C  0101               	movlb	1	; () banked
 13031   00687E  EE20 F004          	lfsr	2,4
 13032   006882  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13033   006884  26D9               	addwf	fsr2l,f,c
 13034   006886  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13035   006888  22DA               	addwfc	fsr2h,f,c
 13036   00688A  50DF               	movf	indf2,w,c
 13037   00688C  0102               	movlb	2	; () banked
 13038   00688E  6FF9               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13039                           
 13040                           ;../../VLCBlib_PIC/event_acknowledge.c: 132:     eventEN.bytes.lo = m->bytes[3];
 13041   006890  0101               	movlb	1	; () banked
 13042   006892  EE20 F005          	lfsr	2,5
 13043   006896  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13044   006898  26D9               	addwf	fsr2l,f,c
 13045   00689A  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13046   00689C  22DA               	addwfc	fsr2h,f,c
 13047   00689E  50DF               	movf	indf2,w,c
 13048   0068A0  0102               	movlb	2	; () banked
 13049   0068A2  6FF8               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13050                           
 13051                           ;../../VLCBlib_PIC/event_acknowledge.c: 134:     switch (m->opc) {
 13052   0068A4  D019               	goto	l22524
 13053   0068A6                     l22514:
 13054                           
 13055                           ; BSR set to: 2
 13056                           ;../../VLCBlib_PIC/event_acknowledge.c: 138:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13057   0068A6  C2FB  F1BE         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13058   0068AA  C2FC  F1BF         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13059   0068AE  C2FB  F1C0         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13060   0068B2  C2FC  F1C1         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13061   0068B6  EC6D  F051         	call	_findEvent	;wreg free
 13062   0068BA  D00B               	goto	L2
 13063   0068BC                     l22516:
 13064                           
 13065                           ; BSR set to: 2
 13066                           ;../../VLCBlib_PIC/event_acknowledge.c: 143:             eventIndex = findEvent(0, event
      +                          NN.word);
 13067   0068BC  0E00               	movlw	0
 13068   0068BE  0101               	movlb	1	; () banked
 13069   0068C0  6FBF               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13070   0068C2  0E00               	movlw	0
 13071   0068C4  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 13072   0068C6  C2FB  F1C0         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13073   0068CA  C2FC  F1C1         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13074   0068CE  EC6D  F051         	call	_findEvent	;wreg free
 13075   0068D2                     L2:
 13076   0068D2  0102               	movlb	2	; () banked
 13077   0068D4  6FFA               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13078                           
 13079                           ;../../VLCBlib_PIC/event_acknowledge.c: 144:             break;
 13080   0068D6  D01D               	goto	l22526
 13081   0068D8                     l22524:
 13082                           
 13083                           ; BSR set to: 2
 13084   0068D8  0101               	movlb	1	; () banked
 13085   0068DA  EE20 F001          	lfsr	2,1
 13086   0068DE  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13087   0068E0  26D9               	addwf	fsr2l,f,c
 13088   0068E2  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13089   0068E4  22DA               	addwfc	fsr2h,f,c
 13090   0068E6  50DF               	movf	indf2,w,c
 13091   0068E8  0102               	movlb	2	; () banked
 13092   0068EA  6FF4               	movwf	??_ackEventProcessMessage& (0+255),b
 13093   0068EC  6BF5               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13094                           
 13095                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13096                           ; Switch size 1, requested type "simple"
 13097                           ; Number of cases is 1, Range of values is 0 to 0
 13098                           ; switch strategies available:
 13099                           ; Name         Instructions Cycles
 13100                           ; simple_byte            4     3 (average)
 13101                           ;	Chosen strategy is simple_byte
 13102   0068EE  51F5               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13103   0068F0  0A00               	xorlw	0	; case 0
 13104   0068F2  A4D8               	btfss	status,2,c
 13105   0068F4  D79B               	goto	l22492
 13106                           
 13107                           ; BSR set to: 2
 13108                           ; Switch size 1, requested type "simple"
 13109                           ; Number of cases is 4, Range of values is 144 to 153
 13110                           ; switch strategies available:
 13111                           ; Name         Instructions Cycles
 13112                           ; simple_byte           13     7 (average)
 13113                           ;	Chosen strategy is simple_byte
 13114   0068F6  51F4               	movf	??_ackEventProcessMessage& (0+255),w,b
 13115   0068F8  0A90               	xorlw	144	; case 144
 13116   0068FA  B4D8               	btfsc	status,2,c
 13117   0068FC  D7D4               	goto	l22514
 13118   0068FE  0A01               	xorlw	1	; case 145
 13119   006900  B4D8               	btfsc	status,2,c
 13120   006902  D7D1               	goto	l22514
 13121   006904  0A09               	xorlw	9	; case 152
 13122   006906  B4D8               	btfsc	status,2,c
 13123   006908  D7D9               	goto	l22516
 13124   00690A  0A01               	xorlw	1	; case 153
 13125   00690C  B4D8               	btfsc	status,2,c
 13126   00690E  D7D6               	goto	l22516
 13127   006910  D78D               	goto	l22492
 13128   006912                     l22526:
 13129                           
 13130                           ; BSR set to: 2
 13131                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     if (eventIndex != 0xff) {
 13132   006912  29FA               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13133   006914  B4D8               	btfsc	status,2,c
 13134   006916  D78A               	goto	l22492
 13135                           
 13136                           ; BSR set to: 2
 13137                           ;../../VLCBlib_PIC/event_acknowledge.c: 151:         ev = getEv(eventIndex, 1);
 13138   006918  0E01               	movlw	1
 13139   00691A  0100               	movlb	0	; () banked
 13140   00691C  6F9D               	movwf	getEv@evNum& (0+255),b
 13141   00691E  0102               	movlb	2	; () banked
 13142   006920  51FA               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13143   006922  EC24  F03C         	call	_getEv
 13144   006926  C09D  F2F6         	movff	?_getEv,ackEventProcessMessage@ev
 13145   00692A  C09E  F2F7         	movff	?_getEv+1,ackEventProcessMessage@ev+1
 13146                           
 13147                           ;../../VLCBlib_PIC/event_acknowledge.c: 152:         if (ev >= 0) {
 13148   00692E  0102               	movlb	2	; () banked
 13149   006930  BFF7               	btfsc	(ackEventProcessMessage@ev+1)& (0+255),7,b
 13150   006932  D77C               	goto	l22492
 13151                           
 13152                           ; BSR set to: 2
 13153                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13154   006934  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 13155   006938  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 13156   00693C  0101               	movlb	1	; () banked
 13157   00693E  EE20 F001          	lfsr	2,1
 13158   006942  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13159   006944  26D9               	addwf	fsr2l,f,c
 13160   006946  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13161   006948  22DA               	addwfc	fsr2h,f,c
 13162   00694A  50DF               	movf	indf2,w,c
 13163   00694C  6FC8               	movwf	sendMessage7@data3& (0+255),b
 13164   00694E  EE20 F002          	lfsr	2,2
 13165   006952  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13166   006954  26D9               	addwf	fsr2l,f,c
 13167   006956  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13168   006958  22DA               	addwfc	fsr2h,f,c
 13169   00695A  50DF               	movf	indf2,w,c
 13170   00695C  6FC9               	movwf	sendMessage7@data4& (0+255),b
 13171   00695E  EE20 F003          	lfsr	2,3
 13172   006962  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13173   006964  26D9               	addwf	fsr2l,f,c
 13174   006966  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13175   006968  22DA               	addwfc	fsr2h,f,c
 13176   00696A  50DF               	movf	indf2,w,c
 13177   00696C  6FCA               	movwf	sendMessage7@data5& (0+255),b
 13178   00696E  EE20 F004          	lfsr	2,4
 13179   006972  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13180   006974  26D9               	addwf	fsr2l,f,c
 13181   006976  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13182   006978  22DA               	addwfc	fsr2h,f,c
 13183   00697A  50DF               	movf	indf2,w,c
 13184   00697C  6FCB               	movwf	sendMessage7@data6& (0+255),b
 13185   00697E  EE20 F005          	lfsr	2,5
 13186   006982  51FD               	movf	ackEventProcessMessage@m& (0+255),w,b
 13187   006984  26D9               	addwf	fsr2l,f,c
 13188   006986  51FE               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13189   006988  22DA               	addwfc	fsr2h,f,c
 13190   00698A  50DF               	movf	indf2,w,c
 13191   00698C  6FCC               	movwf	sendMessage7@data7& (0+255),b
 13192   00698E  0EE6               	movlw	230
 13193   006990  EC29  F05F         	call	_sendMessage7
 13194                           
 13195                           ;../../VLCBlib_PIC/event_acknowledge.c: 155:             ackDiagnostics[0x00].asInt++;
 13196   006994  0100               	movlb	0	; () banked
 13197   006996  4BD1               	infsnz	_ackDiagnostics& (0+255),f,b
 13198   006998  2BD2               	incf	(_ackDiagnostics+1)& (0+255),f,b
 13199   00699A  D748               	goto	l22492
 13200   00699C                     __end_of_ackEventProcessMessage:
 13201                           	callstack 0
 13202                           
 13203 ;; *************** function _bootProcessMessage *****************
 13204 ;; Defined at:
 13205 ;;		line 176 in file "../../VLCBlib_PIC/boot.c"
 13206 ;; Parameters:    Size  Location     Type
 13207 ;;  m               2   63[BANK1 ] PTR struct Message
 13208 ;;		 -> poll@m(9), 
 13209 ;; Auto vars:     Size  Location     Type
 13210 ;;		None
 13211 ;; Return value:  Size  Location     Type
 13212 ;;                  1    wreg      enum E12732
 13213 ;; Registers used:
 13214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13215 ;; Tracked objects:
 13216 ;;		On entry : 0/0
 13217 ;;		On exit  : 0/0
 13218 ;;		Unchanged: 0/0
 13219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13220 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13222 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13223 ;;      Totals:         0       0       2       2       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13224 ;;Total ram usage:        4 bytes
 13225 ;; Hardware stack levels used: 1
 13226 ;; Hardware stack levels required when called: 18
 13227 ;; This function calls:
 13228 ;;		_writeNVM
 13229 ;; This function is called by:
 13230 ;;		_poll
 13231 ;; This function uses a non-reentrant model
 13232 ;;
 13233                           
 13234                           	psect	text23
 13235   009EC2                     __ptext23:
 13236                           	callstack 0
 13237   009EC2                     _bootProcessMessage:
 13238                           	callstack 11
 13239                           
 13240                           ;../../VLCBlib_PIC/boot.c: 178:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13241                           
 13242                           ;incstack = 0
 13243   009EC2  0101               	movlb	1	; () banked
 13244   009EC4  EE20 F002          	lfsr	2,2
 13245   009EC8  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13246   009ECA  26D9               	addwf	fsr2l,f,c
 13247   009ECC  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13248   009ECE  22DA               	addwfc	fsr2h,f,c
 13249   009ED0  50DE               	movf	postinc2,w,c
 13250   009ED2  0100               	movlb	0	; () banked
 13251   009ED4  19B5               	xorwf	(_nn+1)& (0+255),w,b
 13252   009ED6  B4D8               	btfsc	status,2,c
 13253   009ED8  D002               	goto	l22420
 13254   009EDA                     u24080:
 13255   009EDA  0E00               	movlw	0
 13256   009EDC  0012               	return	
 13257   009EDE                     l22420:
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;../../VLCBlib_PIC/boot.c: 179:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13261   009EDE  0101               	movlb	1	; () banked
 13262   009EE0  EE20 F003          	lfsr	2,3
 13263   009EE4  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13264   009EE6  26D9               	addwf	fsr2l,f,c
 13265   009EE8  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13266   009EEA  22DA               	addwfc	fsr2h,f,c
 13267   009EEC  0100               	movlb	0	; () banked
 13268   009EEE  51B4               	movf	_nn& (0+255),w,b
 13269   009EF0  18DE               	xorwf	postinc2,w,c
 13270   009EF2  A4D8               	btfss	status,2,c
 13271   009EF4  D7F2               	goto	u24080
 13272   009EF6  D01A               	goto	l22444
 13273   009EF8                     l22426:
 13274                           
 13275                           ; BSR set to: 2
 13276                           ;../../VLCBlib_PIC/boot.c: 183:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13277   009EF8  0101               	movlb	1	; () banked
 13278   009EFA  EE20 F004          	lfsr	2,4
 13279   009EFE  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13280   009F00  26D9               	addwf	fsr2l,f,c
 13281   009F02  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13282   009F04  22DA               	addwfc	fsr2h,f,c
 13283   009F06  0E0E               	movlw	14
 13284   009F08  18DE               	xorwf	postinc2,w,c
 13285   009F0A  A4D8               	btfss	status,2,c
 13286   009F0C  D7E6               	goto	u24080
 13287   009F0E                     l22432:
 13288                           
 13289                           ;../../VLCBlib_PIC/boot.c: 187:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13290   009F0E  0EFF               	movlw	255
 13291   009F10  0100               	movlb	0	; () banked
 13292   009F12  6FA4               	movwf	writeNVM@index& (0+255),b
 13293   009F14  0E03               	movlw	3
 13294   009F16  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13295   009F18  0E00               	movlw	0
 13296   009F1A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13297   009F1C  0EFF               	movlw	255
 13298   009F1E  6FA7               	movwf	writeNVM@value& (0+255),b
 13299   009F20  0E00               	movlw	0
 13300   009F22  EC91  F05B         	call	_writeNVM
 13301   009F26  00FF               	reset		;# 
 13302                           
 13303                           ;../../VLCBlib_PIC/boot.c: 189:             return PROCESSED;
 13304   009F28  0E01               	movlw	1
 13305   009F2A  0012               	return	
 13306   009F2C                     l22444:
 13307                           
 13308                           ; BSR set to: 0
 13309   009F2C  0101               	movlb	1	; () banked
 13310   009F2E  EE20 F001          	lfsr	2,1
 13311   009F32  51FD               	movf	bootProcessMessage@m& (0+255),w,b
 13312   009F34  26D9               	addwf	fsr2l,f,c
 13313   009F36  51FE               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13314   009F38  22DA               	addwfc	fsr2h,f,c
 13315   009F3A  50DF               	movf	indf2,w,c
 13316   009F3C  0102               	movlb	2	; () banked
 13317   009F3E  6FF4               	movwf	??_bootProcessMessage& (0+255),b
 13318   009F40  6BF5               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13319                           
 13320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13321                           ; Switch size 1, requested type "simple"
 13322                           ; Number of cases is 1, Range of values is 0 to 0
 13323                           ; switch strategies available:
 13324                           ; Name         Instructions Cycles
 13325                           ; simple_byte            4     3 (average)
 13326                           ;	Chosen strategy is simple_byte
 13327   009F42  51F5               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13328   009F44  0A00               	xorlw	0	; case 0
 13329   009F46  A4D8               	btfss	status,2,c
 13330   009F48  D7C8               	goto	u24080
 13331                           
 13332                           ; BSR set to: 2
 13333                           ; Switch size 1, requested type "simple"
 13334                           ; Number of cases is 2, Range of values is 92 to 118
 13335                           ; switch strategies available:
 13336                           ; Name         Instructions Cycles
 13337                           ; simple_byte            7     4 (average)
 13338                           ;	Chosen strategy is simple_byte
 13339   009F4A  51F4               	movf	??_bootProcessMessage& (0+255),w,b
 13340   009F4C  0A5C               	xorlw	92	; case 92
 13341   009F4E  B4D8               	btfsc	status,2,c
 13342   009F50  D7DE               	goto	l22432
 13343   009F52  0A2A               	xorlw	42	; case 118
 13344   009F54  B4D8               	btfsc	status,2,c
 13345   009F56  D7D0               	goto	l22426
 13346   009F58  D7C0               	goto	u24080
 13347   009F5A                     __end_of_bootProcessMessage:
 13348                           	callstack 0
 13349                           
 13350 ;; *************** function _consumer2QProcessMessage *****************
 13351 ;; Defined at:
 13352 ;;		line 127 in file "../event_consumerDualActionQueue.c"
 13353 ;; Parameters:    Size  Location     Type
 13354 ;;  m               2   63[BANK1 ] PTR struct Message
 13355 ;;		 -> poll@m(9), 
 13356 ;; Auto vars:     Size  Location     Type
 13357 ;;  nextSimultan    1    6[BANK3 ] unsigned char 
 13358 ;;  firstAction     1    4[BANK3 ] unsigned char 
 13359 ;;  nextAction      1    3[BANK3 ] unsigned char 
 13360 ;;  action          1   11[BANK3 ] unsigned char 
 13361 ;;  e               1   10[BANK3 ] unsigned char 
 13362 ;;  ca              1    9[BANK3 ] unsigned char 
 13363 ;;  masked_actio    1    8[BANK3 ] unsigned char 
 13364 ;;  io              1    7[BANK3 ] unsigned char 
 13365 ;;  tableIndex      1    5[BANK3 ] unsigned char 
 13366 ;;  opc             1    2[BANK3 ] unsigned char 
 13367 ;;  change          1    1[BANK3 ] char 
 13368 ;;  end             1    0[BANK3 ] unsigned char 
 13369 ;;  start           1    0        unsigned char 
 13370 ;; Return value:  Size  Location     Type
 13371 ;;                  1    wreg      enum E12732
 13372 ;; Registers used:
 13373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13374 ;; Tracked objects:
 13375 ;;		On entry : 0/0
 13376 ;;		On exit  : 0/0
 13377 ;;		Unchanged: 0/0
 13378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13379 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13380 ;;      Locals:         0       0       0       0      12       0       0       0       0       0       0       0       
      +0       0       0       0
 13381 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13382 ;;      Totals:         0       0       2       6      12       0       0       0       0       0       0       0       
      +0       0       0       0
 13383 ;;Total ram usage:       20 bytes
 13384 ;; Hardware stack levels used: 1
 13385 ;; Hardware stack levels required when called: 16
 13386 ;; This function calls:
 13387 ;;		___awdiv
 13388 ;;		___awmod
 13389 ;;		_findEvent
 13390 ;;		_getEVs
 13391 ;;		_getNV
 13392 ;;		_pushTwoAction
 13393 ;;		_setExpeditedActions
 13394 ;;		_setNormalActions
 13395 ;; This function is called by:
 13396 ;;		_poll
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           	psect	text24
 13401   003254                     __ptext24:
 13402                           	callstack 0
 13403   003254                     _consumer2QProcessMessage:
 13404                           	callstack 13
 13405                           
 13406                           ;../event_consumerDualActionQueue.c: 128:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 129:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 130:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 131:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 132:     uint8_t action;;../event_consumerDualActionQueue.c: 133:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 134:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 135:     uint8_t io;;../event_consumerDualActionQueue.c: 13
      +                          7:     if (m->len < 5) return NOT_PROCESSED;
 13407                           
 13408                           ;incstack = 0
 13409   003254  C1FD  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13410   003258  C1FE  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13411   00325C  0E05               	movlw	5
 13412   00325E  60DF               	cpfslt	indf2,c
 13413   003260  D002               	goto	l22234
 13414   003262                     u23840:
 13415   003262  0E00               	movlw	0
 13416   003264  0012               	return	
 13417   003266                     l22234:
 13418                           
 13419                           ;../event_consumerDualActionQueue.c: 139:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13420   003266  0101               	movlb	1	; () banked
 13421   003268  EE20 F003          	lfsr	2,3
 13422   00326C  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13423   00326E  26D9               	addwf	fsr2l,f,c
 13424   003270  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13425   003272  22DA               	addwfc	fsr2h,f,c
 13426   003274  50DF               	movf	indf2,w,c
 13427   003276  0102               	movlb	2	; () banked
 13428   003278  6FF4               	movwf	??_consumer2QProcessMessage& (0+255),b
 13429   00327A  0101               	movlb	1	; () banked
 13430   00327C  EE20 F002          	lfsr	2,2
 13431   003280  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13432   003282  26D9               	addwf	fsr2l,f,c
 13433   003284  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13434   003286  22DA               	addwfc	fsr2h,f,c
 13435   003288  50DF               	movf	indf2,w,c
 13436   00328A  0102               	movlb	2	; () banked
 13437   00328C  6FF5               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13438   00328E  51F4               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13439   003290  0101               	movlb	1	; () banked
 13440   003292  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 13441   003294  C2F5  F1BF         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13442   003298  EE20 F005          	lfsr	2,5
 13443   00329C  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13444   00329E  26D9               	addwf	fsr2l,f,c
 13445   0032A0  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13446   0032A2  22DA               	addwfc	fsr2h,f,c
 13447   0032A4  50DF               	movf	indf2,w,c
 13448   0032A6  0102               	movlb	2	; () banked
 13449   0032A8  6FF7               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13450   0032AA  0101               	movlb	1	; () banked
 13451   0032AC  EE20 F004          	lfsr	2,4
 13452   0032B0  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13453   0032B2  26D9               	addwf	fsr2l,f,c
 13454   0032B4  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13455   0032B6  22DA               	addwfc	fsr2h,f,c
 13456   0032B8  50DF               	movf	indf2,w,c
 13457   0032BA  0102               	movlb	2	; () banked
 13458   0032BC  6FF8               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13459   0032BE  51F7               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13460   0032C0  0101               	movlb	1	; () banked
 13461   0032C2  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 13462   0032C4  C2F8  F1C1         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13463   0032C8  EC6D  F051         	call	_findEvent	;wreg free
 13464   0032CC  0103               	movlb	3	; () banked
 13465   0032CE  6FCD               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13466                           
 13467                           ; BSR set to: 3
 13468                           ;../event_consumerDualActionQueue.c: 140:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13469   0032D0  29CD               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13470   0032D2  B4D8               	btfsc	status,2,c
 13471   0032D4  D7C6               	goto	u23840
 13472   0032D6  D00A               	goto	l22254
 13473   0032D8                     l408:
 13474                           
 13475                           ; BSR set to: 2
 13476                           ;../event_consumerDualActionQueue.c: 156:             end = 20;
 13477                           
 13478                           ; BSR set to: 2
 13479   0032D8  0E14               	movlw	20
 13480   0032DA  0103               	movlb	3	; () banked
 13481   0032DC  6FC8               	movwf	consumer2QProcessMessage@end& (0+255),b
 13482                           
 13483                           ;../event_consumerDualActionQueue.c: 157:             change = 1;
 13484   0032DE  0E01               	movlw	1
 13485   0032E0  6FC9               	movwf	consumer2QProcessMessage@change& (0+255),b
 13486                           
 13487                           ;../event_consumerDualActionQueue.c: 158:             break;
 13488   0032E2  D045               	goto	l22256
 13489   0032E4                     l417:
 13490                           
 13491                           ; BSR set to: 2
 13492                           ;../event_consumerDualActionQueue.c: 172:             end = 1 -1;
 13493                           
 13494                           ; BSR set to: 2
 13495   0032E4  0E00               	movlw	0
 13496   0032E6  0103               	movlb	3	; () banked
 13497   0032E8  6FC8               	movwf	consumer2QProcessMessage@end& (0+255),b
 13498                           
 13499                           ; BSR set to: 3
 13500                           ;../event_consumerDualActionQueue.c: 174:             break;
 13501   0032EA  D041               	goto	l22256
 13502   0032EC                     l22254:
 13503                           
 13504                           ; BSR set to: 3
 13505   0032EC  0101               	movlb	1	; () banked
 13506   0032EE  EE20 F001          	lfsr	2,1
 13507   0032F2  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13508   0032F4  26D9               	addwf	fsr2l,f,c
 13509   0032F6  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13510   0032F8  22DA               	addwfc	fsr2h,f,c
 13511   0032FA  50DF               	movf	indf2,w,c
 13512   0032FC  0102               	movlb	2	; () banked
 13513   0032FE  6FF4               	movwf	??_consumer2QProcessMessage& (0+255),b
 13514   003300  6BF5               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13515                           
 13516                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13517                           ; Switch size 1, requested type "simple"
 13518                           ; Number of cases is 1, Range of values is 0 to 0
 13519                           ; switch strategies available:
 13520                           ; Name         Instructions Cycles
 13521                           ; simple_byte            4     3 (average)
 13522                           ;	Chosen strategy is simple_byte
 13523   003302  51F5               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13524   003304  0A00               	xorlw	0	; case 0
 13525   003306  A4D8               	btfss	status,2,c
 13526   003308  D7AC               	goto	u23840
 13527                           
 13528                           ; BSR set to: 2
 13529                           ; Switch size 1, requested type "simple"
 13530                           ; Number of cases is 16, Range of values is 144 to 249
 13531                           ; switch strategies available:
 13532                           ; Name         Instructions Cycles
 13533                           ; simple_byte           49    25 (average)
 13534                           ;	Chosen strategy is simple_byte
 13535   00330A  51F4               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13536   00330C  0A90               	xorlw	144	; case 144
 13537   00330E  B4D8               	btfsc	status,2,c
 13538   003310  D7E3               	goto	l408
 13539   003312  0A01               	xorlw	1	; case 145
 13540   003314  B4D8               	btfsc	status,2,c
 13541   003316  D7E6               	goto	l417
 13542   003318  0A09               	xorlw	9	; case 152
 13543   00331A  B4D8               	btfsc	status,2,c
 13544   00331C  D7DD               	goto	l408
 13545   00331E  0A01               	xorlw	1	; case 153
 13546   003320  B4D8               	btfsc	status,2,c
 13547   003322  D7E0               	goto	l417
 13548   003324  0A29               	xorlw	41	; case 176
 13549   003326  B4D8               	btfsc	status,2,c
 13550   003328  D7D7               	goto	l408
 13551   00332A  0A01               	xorlw	1	; case 177
 13552   00332C  B4D8               	btfsc	status,2,c
 13553   00332E  D7DA               	goto	l417
 13554   003330  0A09               	xorlw	9	; case 184
 13555   003332  B4D8               	btfsc	status,2,c
 13556   003334  D7D1               	goto	l408
 13557   003336  0A01               	xorlw	1	; case 185
 13558   003338  B4D8               	btfsc	status,2,c
 13559   00333A  D7D4               	goto	l417
 13560   00333C  0A69               	xorlw	105	; case 208
 13561   00333E  B4D8               	btfsc	status,2,c
 13562   003340  D7CB               	goto	l408
 13563   003342  0A01               	xorlw	1	; case 209
 13564   003344  B4D8               	btfsc	status,2,c
 13565   003346  D7CE               	goto	l417
 13566   003348  0A09               	xorlw	9	; case 216
 13567   00334A  B4D8               	btfsc	status,2,c
 13568   00334C  D7C5               	goto	l408
 13569   00334E  0A01               	xorlw	1	; case 217
 13570   003350  B4D8               	btfsc	status,2,c
 13571   003352  D7C8               	goto	l417
 13572   003354  0A29               	xorlw	41	; case 240
 13573   003356  B4D8               	btfsc	status,2,c
 13574   003358  D7BF               	goto	l408
 13575   00335A  0A01               	xorlw	1	; case 241
 13576   00335C  B4D8               	btfsc	status,2,c
 13577   00335E  D7C2               	goto	l417
 13578   003360  0A09               	xorlw	9	; case 248
 13579   003362  B4D8               	btfsc	status,2,c
 13580   003364  D7B9               	goto	l408
 13581   003366  0A01               	xorlw	1	; case 249
 13582   003368  B4D8               	btfsc	status,2,c
 13583   00336A  D7BC               	goto	l417
 13584   00336C  D77A               	goto	u23840
 13585   00336E                     l22256:
 13586                           
 13587                           ; BSR set to: 3
 13588                           ;../event_consumerDualActionQueue.c: 180:     tableIndex = findEvent(((uint16_t)m->bytes
      +                          [0])*256+m->bytes[1], ((uint16_t)m->bytes[2])*256+m->bytes[3]);
 13589   00336E  0101               	movlb	1	; () banked
 13590   003370  EE20 F003          	lfsr	2,3
 13591   003374  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13592   003376  26D9               	addwf	fsr2l,f,c
 13593   003378  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13594   00337A  22DA               	addwfc	fsr2h,f,c
 13595   00337C  50DF               	movf	indf2,w,c
 13596   00337E  0102               	movlb	2	; () banked
 13597   003380  6FF4               	movwf	??_consumer2QProcessMessage& (0+255),b
 13598   003382  0101               	movlb	1	; () banked
 13599   003384  EE20 F002          	lfsr	2,2
 13600   003388  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13601   00338A  26D9               	addwf	fsr2l,f,c
 13602   00338C  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13603   00338E  22DA               	addwfc	fsr2h,f,c
 13604   003390  50DF               	movf	indf2,w,c
 13605   003392  0102               	movlb	2	; () banked
 13606   003394  6FF5               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13607   003396  51F4               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13608   003398  0101               	movlb	1	; () banked
 13609   00339A  6FBE               	movwf	findEvent@nodeNumber& (0+255),b
 13610   00339C  C2F5  F1BF         	movff	??_consumer2QProcessMessage+1,findEvent@nodeNumber+1
 13611   0033A0  EE20 F005          	lfsr	2,5
 13612   0033A4  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13613   0033A6  26D9               	addwf	fsr2l,f,c
 13614   0033A8  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13615   0033AA  22DA               	addwfc	fsr2h,f,c
 13616   0033AC  50DF               	movf	indf2,w,c
 13617   0033AE  0102               	movlb	2	; () banked
 13618   0033B0  6FF7               	movwf	(??_consumer2QProcessMessage+3)& (0+255),b
 13619   0033B2  0101               	movlb	1	; () banked
 13620   0033B4  EE20 F004          	lfsr	2,4
 13621   0033B8  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13622   0033BA  26D9               	addwf	fsr2l,f,c
 13623   0033BC  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13624   0033BE  22DA               	addwfc	fsr2h,f,c
 13625   0033C0  50DF               	movf	indf2,w,c
 13626   0033C2  0102               	movlb	2	; () banked
 13627   0033C4  6FF8               	movwf	(??_consumer2QProcessMessage+4)& (0+255),b
 13628   0033C6  51F7               	movf	(??_consumer2QProcessMessage+3)& (0+255),w,b
 13629   0033C8  0101               	movlb	1	; () banked
 13630   0033CA  6FC0               	movwf	findEvent@eventNumber& (0+255),b
 13631   0033CC  C2F8  F1C1         	movff	??_consumer2QProcessMessage+4,findEvent@eventNumber+1
 13632   0033D0  EC6D  F051         	call	_findEvent	;wreg free
 13633   0033D4  0103               	movlb	3	; () banked
 13634   0033D6  6FCD               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13635                           
 13636                           ; BSR set to: 3
 13637                           ;../event_consumerDualActionQueue.c: 181:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13638   0033D8  29CD               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13639   0033DA  B4D8               	btfsc	status,2,c
 13640   0033DC  D742               	goto	u23840
 13641                           
 13642                           ; BSR set to: 3
 13643   0033DE  51CD               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13644   0033E0  EC73  F041         	call	_getEVs
 13645                           
 13646                           ;../event_consumerDualActionQueue.c: 189:     opc=m->opc;
 13647   0033E4  0101               	movlb	1	; () banked
 13648   0033E6  EE20 F001          	lfsr	2,1
 13649   0033EA  51FD               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13650   0033EC  26D9               	addwf	fsr2l,f,c
 13651   0033EE  51FE               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13652   0033F0  22DA               	addwfc	fsr2h,f,c
 13653   0033F2  50DF               	movf	indf2,w,c
 13654   0033F4  0103               	movlb	3	; () banked
 13655   0033F6  6FCA               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13656                           
 13657                           ; BSR set to: 3
 13658                           ;../event_consumerDualActionQueue.c: 191:     if ( ! (opc&0b00000001)) {
 13659   0033F8  B1CA               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13660   0033FA  D07F               	goto	l424
 13661                           
 13662                           ; BSR set to: 3
 13663                           ;../event_consumerDualActionQueue.c: 195:         for (e=1; e<20 ;e++) {
 13664   0033FC  0E01               	movlw	1
 13665   0033FE  6FD2               	movwf	consumer2QProcessMessage@e& (0+255),b
 13666   003400                     l22276:
 13667                           
 13668                           ; BSR set to: 3
 13669                           ;../event_consumerDualActionQueue.c: 196:             action = evs[e];
 13670   003400  0E40               	movlw	low _evs
 13671   003402  25D2               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13672   003404  6ED9               	movwf	fsr2l,c
 13673   003406  6ADA               	clrf	fsr2h,c
 13674   003408  0E02               	movlw	high _evs
 13675   00340A  22DA               	addwfc	fsr2h,f,c
 13676   00340C  50DF               	movf	indf2,w,c
 13677   00340E  6FD3               	movwf	consumer2QProcessMessage@action& (0+255),b
 13678                           
 13679                           ; BSR set to: 3
 13680                           ;../event_consumerDualActionQueue.c: 197:             if (action != 0) {
 13681   003410  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13682   003412  B4D8               	btfsc	status,2,c
 13683   003414  D06C               	goto	l428
 13684                           
 13685                           ; BSR set to: 3
 13686                           ;../event_consumerDualActionQueue.c: 199:                 masked_action = action&0x7F;
 13687   003416  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13688   003418  0B7F               	andlw	127
 13689   00341A  6FD0               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13690                           
 13691                           ;../event_consumerDualActionQueue.c: 200:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13692   00341C  0E59               	movlw	89
 13693   00341E  61D0               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13694   003420  D066               	goto	l428
 13695                           
 13696                           ; BSR set to: 3
 13697                           ;../event_consumerDualActionQueue.c: 202:                     if ((masked_action) == 7) 
      +                          {
 13698   003422  0E07               	movlw	7
 13699   003424  19D0               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13700   003426  B4D8               	btfsc	status,2,c
 13701   003428  D106               	goto	u24070
 13702                           
 13703                           ; BSR set to: 3
 13704                           ;../event_consumerDualActionQueue.c: 205:                     if ((masked_action) < 8) {
 13705   00342A  0E08               	movlw	8
 13706   00342C  61D0               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13707   00342E  D004               	goto	l22290
 13708                           
 13709                           ; BSR set to: 3
 13710                           ;../event_consumerDualActionQueue.c: 206:                         pushTwoAction(action);
 13711   003430  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13712   003432  EC09  F059         	call	_pushTwoAction
 13713                           
 13714                           ;../event_consumerDualActionQueue.c: 207:                     } else {
 13715   003436  D05B               	goto	l428
 13716   003438                     l22290:
 13717                           
 13718                           ; BSR set to: 3
 13719                           ;../event_consumerDualActionQueue.c: 208:                         io = (((masked_action)
      +                          -8)/5);
 13720   003438  0EF8               	movlw	248
 13721   00343A  25D0               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13722   00343C  0100               	movlb	0	; () banked
 13723   00343E  6F97               	movwf	___awdiv@dividend& (0+255),b
 13724   003440  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13725   003442  0EFF               	movlw	255
 13726   003444  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13727   003446  0E00               	movlw	0
 13728   003448  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13729   00344A  0E05               	movlw	5
 13730   00344C  6F99               	movwf	___awdiv@divisor& (0+255),b
 13731   00344E  ECCE  F052         	call	___awdiv	;wreg free
 13732   003452  0100               	movlb	0	; () banked
 13733   003454  5197               	movf	?___awdiv& (0+255),w,b
 13734   003456  0103               	movlb	3	; () banked
 13735   003458  6FCF               	movwf	consumer2QProcessMessage@io& (0+255),b
 13736                           
 13737                           ;../event_consumerDualActionQueue.c: 209:                         ca = (((masked_action)
      +                          -8)%5);
 13738   00345A  0EF8               	movlw	248
 13739   00345C  25D0               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13740   00345E  0100               	movlb	0	; () banked
 13741   003460  6F8D               	movwf	___awmod@dividend& (0+255),b
 13742   003462  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13743   003464  0EFF               	movlw	255
 13744   003466  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13745   003468  0E00               	movlw	0
 13746   00346A  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13747   00346C  0E05               	movlw	5
 13748   00346E  6F8F               	movwf	___awmod@divisor& (0+255),b
 13749   003470  EC71  F056         	call	___awmod	;wreg free
 13750   003474  0100               	movlb	0	; () banked
 13751   003476  518D               	movf	?___awmod& (0+255),w,b
 13752   003478  0103               	movlb	3	; () banked
 13753   00347A  6FD1               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13754                           
 13755                           ;../event_consumerDualActionQueue.c: 210:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13756   00347C  D020               	goto	l22312
 13757   00347E                     l22292:
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;../event_consumerDualActionQueue.c: 212:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13761   00347E  0103               	movlb	3	; () banked
 13762   003480  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13763   003482  0D07               	mullw	7
 13764   003484  50F3               	movf	243,w,c
 13765   003486  0F11               	addlw	17
 13766   003488  EC7F  F05D         	call	_getNV
 13767   00348C  0100               	movlb	0	; () banked
 13768   00348E  BF8D               	btfsc	?_getNV& (0+255),7,b
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;../event_consumerDualActionQueue.c: 213:                                     setExpedit
      +                          edActions();
 13772   003490  ECFD  F061         	call	_setExpeditedActions	;wreg free
 13773   003494                     l22296:
 13774                           
 13775                           ;../event_consumerDualActionQueue.c: 218:                                 if (ca == 0) {
 13776   003494  0103               	movlb	3	; () banked
 13777   003496  51D1               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13778   003498  B4D8               	btfsc	status,2,c
 13779                           
 13780                           ; BSR set to: 3
 13781                           ;../event_consumerDualActionQueue.c: 220:                                     action++;
 13782   00349A  2BD3               	incf	consumer2QProcessMessage@action& (0+255),f,b
 13783                           
 13784                           ; BSR set to: 3
 13785                           ;../event_consumerDualActionQueue.c: 222:                                 if (ca == 4) {
 13786   00349C  0E04               	movlw	4
 13787   00349E  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13788   0034A0  A4D8               	btfss	status,2,c
 13789   0034A2  D002               	goto	l22304
 13790                           
 13791                           ; BSR set to: 3
 13792                           ;../event_consumerDualActionQueue.c: 224:                                     action-=2;
 13793   0034A4  0E02               	movlw	2
 13794   0034A6  5FD3               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 13795   0034A8                     l22304:
 13796                           
 13797                           ; BSR set to: 3
 13798                           ;../event_consumerDualActionQueue.c: 226:                                 pushTwoAction(
      +                          action);
 13799   0034A8  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13800   0034AA  EC09  F059         	call	_pushTwoAction
 13801                           
 13802                           ;../event_consumerDualActionQueue.c: 227:                                 setNormalActio
      +                          ns();
 13803   0034AE  ECFA  F061         	call	_setNormalActions	;wreg free
 13804                           
 13805                           ;../event_consumerDualActionQueue.c: 228:                                 break;
 13806   0034B2  D01D               	goto	l428
 13807   0034B4                     l22308:
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;../event_consumerDualActionQueue.c: 230:                                 pushTwoAction(
      +                          action);
 13811   0034B4  0103               	movlb	3	; () banked
 13812   0034B6  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13813   0034B8  EC09  F059         	call	_pushTwoAction
 13814                           
 13815                           ;../event_consumerDualActionQueue.c: 231:                                 break;
 13816   0034BC  D018               	goto	l428
 13817   0034BE                     l22312:
 13818                           
 13819                           ; BSR set to: 3
 13820   0034BE  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13821   0034C0  0D07               	mullw	7
 13822   0034C2  50F3               	movf	243,w,c
 13823   0034C4  0F10               	addlw	16
 13824   0034C6  EC7F  F05D         	call	_getNV
 13825                           
 13826                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13827                           ; Switch size 1, requested type "simple"
 13828                           ; Number of cases is 1, Range of values is 0 to 0
 13829                           ; switch strategies available:
 13830                           ; Name         Instructions Cycles
 13831                           ; simple_byte            4     3 (average)
 13832                           ;	Chosen strategy is simple_byte
 13833   0034CA  0100               	movlb	0	; () banked
 13834   0034CC  518E               	movf	(?_getNV+1)& (0+255),w,b
 13835   0034CE  0A00               	xorlw	0	; case 0
 13836   0034D0  A4D8               	btfss	status,2,c
 13837   0034D2  D00D               	goto	l428
 13838                           
 13839                           ; BSR set to: 0
 13840                           ; Switch size 1, requested type "simple"
 13841                           ; Number of cases is 4, Range of values is 1 to 4
 13842                           ; switch strategies available:
 13843                           ; Name         Instructions Cycles
 13844                           ; simple_byte           13     7 (average)
 13845                           ;	Chosen strategy is simple_byte
 13846   0034D4  518D               	movf	?_getNV& (0+255),w,b
 13847   0034D6  0A01               	xorlw	1	; case 1
 13848   0034D8  B4D8               	btfsc	status,2,c
 13849   0034DA  D7D1               	goto	l22292
 13850   0034DC  0A03               	xorlw	3	; case 2
 13851   0034DE  B4D8               	btfsc	status,2,c
 13852   0034E0  D7D9               	goto	l22296
 13853   0034E2  0A01               	xorlw	1	; case 3
 13854   0034E4  B4D8               	btfsc	status,2,c
 13855   0034E6  D7D6               	goto	l22296
 13856   0034E8  0A07               	xorlw	7	; case 4
 13857   0034EA  B4D8               	btfsc	status,2,c
 13858   0034EC  D7E3               	goto	l22308
 13859   0034EE                     l428:
 13860                           
 13861                           ;../event_consumerDualActionQueue.c: 239:         }
 13862                           
 13863                           ; BSR set to: 0
 13864   0034EE  0103               	movlb	3	; () banked
 13865   0034F0  2BD2               	incf	consumer2QProcessMessage@e& (0+255),f,b
 13866                           
 13867                           ; BSR set to: 3
 13868   0034F2  0E13               	movlw	19
 13869   0034F4  65D2               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13870   0034F6  D784               	goto	l22276
 13871   0034F8  D09E               	goto	u24070
 13872   0034FA                     l424:
 13873                           
 13874                           ; BSR set to: 3
 13875                           ;../event_consumerDualActionQueue.c: 243:         uint8_t nextAction = evs[20 -1];
 13876   0034FA  C253  F3CB         	movff	_evs+19,consumer2QProcessMessage@nextAction
 13877                           
 13878                           ; BSR set to: 3
 13879                           ;../event_consumerDualActionQueue.c: 245:         for (e=20 -1; e>=1 ;e--) {
 13880   0034FE  0E13               	movlw	19
 13881   003500  6FD2               	movwf	consumer2QProcessMessage@e& (0+255),b
 13882   003502                     l22322:
 13883                           
 13884                           ; BSR set to: 3
 13885                           ;../event_consumerDualActionQueue.c: 246:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 247:             uint8_t firstAction = 0;
 13886   003502  0E00               	movlw	0
 13887   003504  6FCC               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 13888                           
 13889                           ; BSR set to: 3
 13890                           ;../event_consumerDualActionQueue.c: 248:             action = nextAction;
 13891   003506  C3CB  F3D3         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 13892                           
 13893                           ; BSR set to: 3
 13894                           ;../event_consumerDualActionQueue.c: 252:             if (e > 1) {
 13895   00350A  0E01               	movlw	1
 13896   00350C  65D2               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13897   00350E  D00A               	goto	l22332
 13898                           
 13899                           ; BSR set to: 3
 13900                           ;../event_consumerDualActionQueue.c: 253:                 nextAction = evs[e-1];
 13901   003510  0E3F               	movlw	low (_evs+65535)
 13902   003512  25D2               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13903   003514  6ED9               	movwf	fsr2l,c
 13904   003516  6ADA               	clrf	fsr2h,c
 13905   003518  0E02               	movlw	high (_evs+65535)
 13906   00351A  22DA               	addwfc	fsr2h,f,c
 13907   00351C  50DF               	movf	indf2,w,c
 13908   00351E  6FCB               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 13909                           
 13910                           ; BSR set to: 3
 13911                           ;../event_consumerDualActionQueue.c: 254:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 13912   003520  51CB               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 13913   003522  D001               	goto	L3
 13914   003524                     l22332:
 13915                           
 13916                           ; BSR set to: 3
 13917                           ;../event_consumerDualActionQueue.c: 256:                 nextSimultaneous = firstAction
      +                           & 0x80;
 13918   003524  51CC               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13919   003526                     L3:
 13920   003526  0B80               	andlw	128
 13921   003528  6FCE               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 13922                           
 13923                           ; BSR set to: 3
 13924                           ;../event_consumerDualActionQueue.c: 258:             if (action != 0) {
 13925   00352A  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13926   00352C  B4D8               	btfsc	status,2,c
 13927   00352E  D07E               	goto	l449
 13928                           
 13929                           ; BSR set to: 3
 13930                           ;../event_consumerDualActionQueue.c: 260:                 if (firstAction == 0) {
 13931   003530  51CC               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13932   003532  B4D8               	btfsc	status,2,c
 13933                           
 13934                           ; BSR set to: 3
 13935                           ;../event_consumerDualActionQueue.c: 261:                     firstAction = action;
 13936   003534  C3D3  F3CC         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 13937                           
 13938                           ; BSR set to: 3
 13939                           ;../event_consumerDualActionQueue.c: 263:                 action &= 0x7F;
 13940   003538  9FD3               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 13941                           
 13942                           ; BSR set to: 3
 13943                           ;../event_consumerDualActionQueue.c: 264:                 if (action <= (8 + 5 * 16)) {
 13944   00353A  0E59               	movlw	89
 13945   00353C  61D3               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13946   00353E  D076               	goto	l449
 13947                           
 13948                           ; BSR set to: 3
 13949                           ;../event_consumerDualActionQueue.c: 266:                     if ((action) == 7) {
 13950   003540  0E07               	movlw	7
 13951   003542  19D3               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 13952   003544  B4D8               	btfsc	status,2,c
 13953   003546  D077               	goto	u24070
 13954                           
 13955                           ; BSR set to: 3
 13956                           ;../event_consumerDualActionQueue.c: 269:                     if ((action < 8) && (actio
      +                          n != 1)) {
 13957   003548  0E08               	movlw	8
 13958   00354A  61D3               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13959   00354C  D009               	goto	l22356
 13960                           
 13961                           ; BSR set to: 3
 13962   00354E  05D3               	decf	consumer2QProcessMessage@action& (0+255),w,b
 13963   003550  B4D8               	btfsc	status,2,c
 13964   003552  D006               	goto	l22356
 13965                           
 13966                           ; BSR set to: 3
 13967                           ;../event_consumerDualActionQueue.c: 270:                         action |= nextSimultan
      +                          eous;
 13968   003554  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 13969   003556  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 13970                           
 13971                           ; BSR set to: 3
 13972                           ;../event_consumerDualActionQueue.c: 271:                         pushTwoAction(action);
 13973   003558  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13974   00355A  EC09  F059         	call	_pushTwoAction
 13975                           
 13976                           ;../event_consumerDualActionQueue.c: 272:                     } else {
 13977   00355E  D066               	goto	l449
 13978   003560                     l22356:
 13979                           
 13980                           ; BSR set to: 3
 13981                           ;../event_consumerDualActionQueue.c: 273:                         io = (((action)-8)/5);
 13982   003560  0EF8               	movlw	248
 13983   003562  25D3               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 13984   003564  0100               	movlb	0	; () banked
 13985   003566  6F97               	movwf	___awdiv@dividend& (0+255),b
 13986   003568  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13987   00356A  0EFF               	movlw	255
 13988   00356C  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13989   00356E  0E00               	movlw	0
 13990   003570  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13991   003572  0E05               	movlw	5
 13992   003574  6F99               	movwf	___awdiv@divisor& (0+255),b
 13993   003576  ECCE  F052         	call	___awdiv	;wreg free
 13994   00357A  0100               	movlb	0	; () banked
 13995   00357C  5197               	movf	?___awdiv& (0+255),w,b
 13996   00357E  0103               	movlb	3	; () banked
 13997   003580  6FCF               	movwf	consumer2QProcessMessage@io& (0+255),b
 13998                           
 13999                           ;../event_consumerDualActionQueue.c: 274:                         ca = (((action)-8)%5);
 14000   003582  0EF8               	movlw	248
 14001   003584  25D3               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14002   003586  0100               	movlb	0	; () banked
 14003   003588  6F8D               	movwf	___awmod@dividend& (0+255),b
 14004   00358A  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14005   00358C  0EFF               	movlw	255
 14006   00358E  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14007   003590  0E00               	movlw	0
 14008   003592  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14009   003594  0E05               	movlw	5
 14010   003596  6F8F               	movwf	___awmod@divisor& (0+255),b
 14011   003598  EC71  F056         	call	___awmod	;wreg free
 14012   00359C  0100               	movlb	0	; () banked
 14013   00359E  518D               	movf	?___awmod& (0+255),w,b
 14014   0035A0  0103               	movlb	3	; () banked
 14015   0035A2  6FD1               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14016                           
 14017                           ;../event_consumerDualActionQueue.c: 275:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14018   0035A4  D02B               	goto	l22384
 14019   0035A6                     l22358:
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;../event_consumerDualActionQueue.c: 277:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14023   0035A6  0103               	movlb	3	; () banked
 14024   0035A8  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14025   0035AA  0D07               	mullw	7
 14026   0035AC  50F3               	movf	243,w,c
 14027   0035AE  0F11               	addlw	17
 14028   0035B0  EC7F  F05D         	call	_getNV
 14029   0035B4  0100               	movlb	0	; () banked
 14030   0035B6  BF8D               	btfsc	?_getNV& (0+255),7,b
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;../event_consumerDualActionQueue.c: 278:                                     setExpedit
      +                          edActions();
 14034   0035B8  ECFD  F061         	call	_setExpeditedActions	;wreg free
 14035                           
 14036                           ;../event_consumerDualActionQueue.c: 280:                                 if (ca == 3) {
 14037   0035BC  0E03               	movlw	3
 14038   0035BE  0103               	movlb	3	; () banked
 14039   0035C0  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14040   0035C2  B4D8               	btfsc	status,2,c
 14041                           
 14042                           ; BSR set to: 3
 14043                           ;../event_consumerDualActionQueue.c: 282:                                     action--;
 14044   0035C4  07D3               	decf	consumer2QProcessMessage@action& (0+255),f,b
 14045   0035C6                     l22366:
 14046                           
 14047                           ;../event_consumerDualActionQueue.c: 287:                                 if (ca == 0) {
 14048   0035C6  0103               	movlb	3	; () banked
 14049   0035C8  51D1               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14050   0035CA  A4D8               	btfss	status,2,c
 14051   0035CC  D002               	goto	l459
 14052                           
 14053                           ; BSR set to: 3
 14054                           ;../event_consumerDualActionQueue.c: 289:                                     action += 
      +                          2;
 14055   0035CE  0E02               	movlw	2
 14056   0035D0  27D3               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14057   0035D2                     l459:
 14058                           
 14059                           ; BSR set to: 3
 14060                           ;../event_consumerDualActionQueue.c: 291:                                 if (ca == 4) {
 14061   0035D2  0E04               	movlw	4
 14062   0035D4  19D1               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14063   0035D6  A4D8               	btfss	status,2,c
 14064   0035D8  D002               	goto	l460
 14065                           
 14066                           ; BSR set to: 3
 14067                           ;../event_consumerDualActionQueue.c: 293:                                     action -= 
      +                          3;
 14068   0035DA  0E03               	movlw	3
 14069   0035DC  5FD3               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14070   0035DE                     l460:
 14071                           
 14072                           ; BSR set to: 3
 14073                           ;../event_consumerDualActionQueue.c: 295:                                 action |= next
      +                          Simultaneous;
 14074   0035DE  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14075   0035E0  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14076                           
 14077                           ; BSR set to: 3
 14078                           ;../event_consumerDualActionQueue.c: 296:                                 pushTwoAction(
      +                          action);
 14079   0035E2  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14080   0035E4  EC09  F059         	call	_pushTwoAction
 14081   0035E8                     l22374:
 14082                           
 14083                           ;../event_consumerDualActionQueue.c: 297:                                 setNormalActio
      +                          ns();
 14084   0035E8  ECFA  F061         	call	_setNormalActions	;wreg free
 14085                           
 14086                           ;../event_consumerDualActionQueue.c: 298:                                 break;
 14087   0035EC  D01F               	goto	l449
 14088   0035EE                     l22376:
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;../event_consumerDualActionQueue.c: 300:                                 action |= next
      +                          Simultaneous;
 14092   0035EE  0103               	movlb	3	; () banked
 14093   0035F0  51CE               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14094   0035F2  13D3               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14095                           
 14096                           ; BSR set to: 3
 14097                           ;../event_consumerDualActionQueue.c: 301:                                 pushTwoAction(
      +                          action);
 14098   0035F4  51D3               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14099   0035F6  EC09  F059         	call	_pushTwoAction
 14100   0035FA  D7F6               	goto	l22374
 14101   0035FC                     l22384:
 14102                           
 14103                           ; BSR set to: 3
 14104   0035FC  51CF               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14105   0035FE  0D07               	mullw	7
 14106   003600  50F3               	movf	243,w,c
 14107   003602  0F10               	addlw	16
 14108   003604  EC7F  F05D         	call	_getNV
 14109                           
 14110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14111                           ; Switch size 1, requested type "simple"
 14112                           ; Number of cases is 1, Range of values is 0 to 0
 14113                           ; switch strategies available:
 14114                           ; Name         Instructions Cycles
 14115                           ; simple_byte            4     3 (average)
 14116                           ;	Chosen strategy is simple_byte
 14117   003608  0100               	movlb	0	; () banked
 14118   00360A  518E               	movf	(?_getNV+1)& (0+255),w,b
 14119   00360C  0A00               	xorlw	0	; case 0
 14120   00360E  A4D8               	btfss	status,2,c
 14121   003610  D00D               	goto	l449
 14122                           
 14123                           ; BSR set to: 0
 14124                           ; Switch size 1, requested type "simple"
 14125                           ; Number of cases is 4, Range of values is 1 to 4
 14126                           ; switch strategies available:
 14127                           ; Name         Instructions Cycles
 14128                           ; simple_byte           13     7 (average)
 14129                           ;	Chosen strategy is simple_byte
 14130   003612  518D               	movf	?_getNV& (0+255),w,b
 14131   003614  0A01               	xorlw	1	; case 1
 14132   003616  B4D8               	btfsc	status,2,c
 14133   003618  D7C6               	goto	l22358
 14134   00361A  0A03               	xorlw	3	; case 2
 14135   00361C  B4D8               	btfsc	status,2,c
 14136   00361E  D7D3               	goto	l22366
 14137   003620  0A01               	xorlw	1	; case 3
 14138   003622  B4D8               	btfsc	status,2,c
 14139   003624  D7D0               	goto	l22366
 14140   003626  0A07               	xorlw	7	; case 4
 14141   003628  B4D8               	btfsc	status,2,c
 14142   00362A  D7E1               	goto	l22376
 14143   00362C                     l449:
 14144                           
 14145                           ;../event_consumerDualActionQueue.c: 311:         }
 14146                           
 14147                           ; BSR set to: 0
 14148   00362C  0103               	movlb	3	; () banked
 14149   00362E  07D2               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14150                           
 14151                           ; BSR set to: 3
 14152   003630  51D2               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14153   003632  A4D8               	btfss	status,2,c
 14154   003634  D766               	goto	l22322
 14155   003636                     u24070:
 14156                           
 14157                           ; BSR set to: 3
 14158                           ;../event_consumerDualActionQueue.c: 313:     consumer2QDiagnostics[0].asUint++;
 14159   003636  0101               	movlb	1	; () banked
 14160   003638  4BBC               	infsnz	_consumer2QDiagnostics& (0+255),f,b
 14161   00363A  2BBD               	incf	(_consumer2QDiagnostics+1)& (0+255),f,b
 14162                           
 14163                           ; BSR set to: 1
 14164                           ;../event_consumerDualActionQueue.c: 314:     return PROCESSED;
 14165   00363C  0E01               	movlw	1
 14166   00363E  0012               	return		;funcret
 14167   003640                     __end_of_consumer2QProcessMessage:
 14168                           	callstack 0
 14169                           
 14170 ;; *************** function _teachProcessMessage *****************
 14171 ;; Defined at:
 14172 ;;		line 308 in file "../../VLCBlib_PIC/event_teach.c"
 14173 ;; Parameters:    Size  Location     Type
 14174 ;;  m               2   63[BANK1 ] PTR struct Message
 14175 ;;		 -> poll@m(9), 
 14176 ;; Auto vars:     Size  Location     Type
 14177 ;;		None
 14178 ;; Return value:  Size  Location     Type
 14179 ;;                  1    wreg      enum E12732
 14180 ;; Registers used:
 14181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14182 ;; Tracked objects:
 14183 ;;		On entry : 0/0
 14184 ;;		On exit  : 0/0
 14185 ;;		Unchanged: 0/0
 14186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14187 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14189 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14190 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14191 ;;Total ram usage:        8 bytes
 14192 ;; Hardware stack levels used: 1
 14193 ;; Hardware stack levels required when called: 24
 14194 ;; This function calls:
 14195 ;;		_doEvlrn
 14196 ;;		_doEvuln
 14197 ;;		_doNenrd
 14198 ;;		_doNerd
 14199 ;;		_doNnclr
 14200 ;;		_doNnevn
 14201 ;;		_doReqev
 14202 ;;		_doReval
 14203 ;;		_doRqevn
 14204 ;;		_sendMessage3
 14205 ;;		_sendMessage5
 14206 ;;		_teachCheckLen
 14207 ;; This function is called by:
 14208 ;;		_poll
 14209 ;; This function uses a non-reentrant model
 14210 ;;
 14211                           
 14212                           	psect	text25
 14213   0022AA                     __ptext25:
 14214                           	callstack 0
 14215   0022AA                     _teachProcessMessage:
 14216                           	callstack 5
 14217                           
 14218                           ;../../VLCBlib_PIC/event_teach.c: 309:     switch(m->opc) {
 14219                           
 14220                           ;incstack = 0
 14221   0022AA  D318               	goto	l22892
 14222   0022AC                     l22626:
 14223                           
 14224                           ; BSR set to: 2
 14225                           ;../../VLCBlib_PIC/event_teach.c: 312:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14226   0022AC  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14227   0022B0  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14228   0022B4  0E03               	movlw	3
 14229   0022B6  0101               	movlb	1	; () banked
 14230   0022B8  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14231   0022BA  0E00               	movlw	0
 14232   0022BC  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14233   0022BE  ECA9  F058         	call	_teachCheckLen	;wreg free
 14234   0022C2  06E8               	decf	wreg,f,c
 14235   0022C4  A4D8               	btfss	status,2,c
 14236   0022C6  D002               	goto	l22632
 14237   0022C8                     u24310:
 14238   0022C8  0E01               	movlw	1
 14239   0022CA  0012               	return	
 14240   0022CC                     l22632:
 14241                           
 14242                           ;../../VLCBlib_PIC/event_teach.c: 313:             if ((m->bytes[0] == nn.bytes.hi) && (
      +                          m->bytes[1] == nn.bytes.lo)) {
 14243   0022CC  0101               	movlb	1	; () banked
 14244   0022CE  EE20 F002          	lfsr	2,2
 14245   0022D2  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14246   0022D4  26D9               	addwf	fsr2l,f,c
 14247   0022D6  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14248   0022D8  22DA               	addwfc	fsr2h,f,c
 14249   0022DA  50DE               	movf	postinc2,w,c
 14250   0022DC  0100               	movlb	0	; () banked
 14251   0022DE  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14252   0022E0  A4D8               	btfss	status,2,c
 14253   0022E2  D00F               	goto	l22638
 14254                           
 14255                           ; BSR set to: 0
 14256   0022E4  0101               	movlb	1	; () banked
 14257   0022E6  EE20 F003          	lfsr	2,3
 14258   0022EA  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14259   0022EC  26D9               	addwf	fsr2l,f,c
 14260   0022EE  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14261   0022F0  22DA               	addwfc	fsr2h,f,c
 14262   0022F2  0100               	movlb	0	; () banked
 14263   0022F4  51B4               	movf	_nn& (0+255),w,b
 14264   0022F6  18DE               	xorwf	postinc2,w,c
 14265   0022F8  A4D8               	btfss	status,2,c
 14266   0022FA  D003               	goto	l22638
 14267   0022FC                     u24330:
 14268                           
 14269                           ;../../VLCBlib_PIC/event_teach.c: 314:                 mode_flags |= 1;
 14270   0022FC  0101               	movlb	1	; () banked
 14271   0022FE  817D               	bsf	_mode_flags& (0+255),0,b
 14272                           
 14273                           ;../../VLCBlib_PIC/event_teach.c: 315:             } else {
 14274   002300  D7E3               	goto	u24310
 14275   002302                     l22638:
 14276                           
 14277                           ;../../VLCBlib_PIC/event_teach.c: 316:                 mode_flags &= ~1;
 14278   002302  0101               	movlb	1	; () banked
 14279   002304  917D               	bcf	_mode_flags& (0+255),0,b
 14280   002306  D7E0               	goto	u24310
 14281   002308                     l22644:
 14282                           
 14283                           ; BSR set to: 2
 14284                           ;../../VLCBlib_PIC/event_teach.c: 320:             if (teachCheckLen(m, 4, 0) == PROCESS
      +                          ED) return PROCESSED;
 14285   002308  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14286   00230C  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14287   002310  0E04               	movlw	4
 14288   002312  0101               	movlb	1	; () banked
 14289   002314  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14290   002316  0E00               	movlw	0
 14291   002318  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14292   00231A  ECA9  F058         	call	_teachCheckLen	;wreg free
 14293   00231E  06E8               	decf	wreg,f,c
 14294   002320  B4D8               	btfsc	status,2,c
 14295   002322  D7D2               	goto	u24310
 14296                           
 14297                           ;../../VLCBlib_PIC/event_teach.c: 321:             if ((m->bytes[0] == nn.bytes.hi) && (
      +                          m->bytes[1] == nn.bytes.lo)) {
 14298   002324  0101               	movlb	1	; () banked
 14299   002326  EE20 F002          	lfsr	2,2
 14300   00232A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14301   00232C  26D9               	addwf	fsr2l,f,c
 14302   00232E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14303   002330  22DA               	addwfc	fsr2h,f,c
 14304   002332  50DE               	movf	postinc2,w,c
 14305   002334  0100               	movlb	0	; () banked
 14306   002336  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14307   002338  A4D8               	btfss	status,2,c
 14308   00233A  D022               	goto	l22672
 14309                           
 14310                           ; BSR set to: 0
 14311   00233C  0101               	movlb	1	; () banked
 14312   00233E  EE20 F003          	lfsr	2,3
 14313   002342  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14314   002344  26D9               	addwf	fsr2l,f,c
 14315   002346  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14316   002348  22DA               	addwfc	fsr2h,f,c
 14317   00234A  0100               	movlb	0	; () banked
 14318   00234C  51B4               	movf	_nn& (0+255),w,b
 14319   00234E  18DE               	xorwf	postinc2,w,c
 14320   002350  A4D8               	btfss	status,2,c
 14321   002352  D016               	goto	l22672
 14322                           
 14323                           ; BSR set to: 0
 14324                           ;../../VLCBlib_PIC/event_teach.c: 322:                 if (m->bytes[2] == MODE_LEARN_ON)
      +                           {
 14325   002354  0101               	movlb	1	; () banked
 14326   002356  EE20 F004          	lfsr	2,4
 14327   00235A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14328   00235C  26D9               	addwf	fsr2l,f,c
 14329   00235E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14330   002360  22DA               	addwfc	fsr2h,f,c
 14331   002362  0E08               	movlw	8
 14332   002364  18DE               	xorwf	postinc2,w,c
 14333   002366  B4D8               	btfsc	status,2,c
 14334   002368  D7C9               	goto	u24330
 14335                           
 14336                           ; BSR set to: 1
 14337   00236A  EE20 F004          	lfsr	2,4
 14338   00236E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14339   002370  26D9               	addwf	fsr2l,f,c
 14340   002372  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14341   002374  22DA               	addwfc	fsr2h,f,c
 14342   002376  0E09               	movlw	9
 14343   002378  18DE               	xorwf	postinc2,w,c
 14344   00237A  B4D8               	btfsc	status,2,c
 14345   00237C  D7C2               	goto	l22638
 14346   00237E  D002               	goto	l22674
 14347   002380                     l22672:
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;../../VLCBlib_PIC/event_teach.c: 333:                 mode_flags &= ~1;
 14351   002380  0101               	movlb	1	; () banked
 14352   002382  917D               	bcf	_mode_flags& (0+255),0,b
 14353   002384                     l22674:
 14354                           
 14355                           ;../../VLCBlib_PIC/event_teach.c: 335:             return NOT_PROCESSED;
 14356   002384  0E00               	movlw	0
 14357   002386  0012               	return	
 14358   002388                     l22678:
 14359                           
 14360                           ; BSR set to: 2
 14361                           ;../../VLCBlib_PIC/event_teach.c: 338:             if (teachCheckLen(m, 7, 1) == PROCESS
      +                          ED) {
 14362   002388  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14363   00238C  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14364   002390  0E07               	movlw	7
 14365   002392  0101               	movlb	1	; () banked
 14366   002394  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14367   002396  0E01               	movlw	1
 14368   002398  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14369   00239A  ECA9  F058         	call	_teachCheckLen	;wreg free
 14370   00239E  06E8               	decf	wreg,f,c
 14371   0023A0  A4D8               	btfss	status,2,c
 14372   0023A2  D00B               	goto	l1470
 14373                           
 14374                           ;../../VLCBlib_PIC/event_teach.c: 339:                 sendMessage3(OPC_CMDERR, nn.bytes
      +                          .hi, nn.bytes.lo, CMDERR_INV_CMD);
 14375   0023A4  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 14376   0023A8  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 14377   0023AC  0E01               	movlw	1
 14378   0023AE  0100               	movlb	0	; () banked
 14379   0023B0  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14380   0023B2  0E6F               	movlw	111
 14381   0023B4  ECF9  F05E         	call	_sendMessage3
 14382   0023B8  D787               	goto	u24310
 14383   0023BA                     l1470:
 14384                           
 14385                           ;../../VLCBlib_PIC/event_teach.c: 343:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14386   0023BA  0101               	movlb	1	; () banked
 14387   0023BC  A17D               	btfss	_mode_flags& (0+255),0,b
 14388   0023BE  D784               	goto	u24310
 14389                           
 14390                           ; BSR set to: 1
 14391                           ;../../VLCBlib_PIC/event_teach.c: 345:             doEvlrn((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5]);
 14392   0023C0  EE20 F003          	lfsr	2,3
 14393   0023C4  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14394   0023C6  26D9               	addwf	fsr2l,f,c
 14395   0023C8  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14396   0023CA  22DA               	addwfc	fsr2h,f,c
 14397   0023CC  50DF               	movf	indf2,w,c
 14398   0023CE  0102               	movlb	2	; () banked
 14399   0023D0  6FF4               	movwf	??_teachProcessMessage& (0+255),b
 14400   0023D2  0101               	movlb	1	; () banked
 14401   0023D4  EE20 F002          	lfsr	2,2
 14402   0023D8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14403   0023DA  26D9               	addwf	fsr2l,f,c
 14404   0023DC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14405   0023DE  22DA               	addwfc	fsr2h,f,c
 14406   0023E0  50DF               	movf	indf2,w,c
 14407   0023E2  0102               	movlb	2	; () banked
 14408   0023E4  6FF5               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14409   0023E6  51F4               	movf	??_teachProcessMessage& (0+255),w,b
 14410   0023E8  0101               	movlb	1	; () banked
 14411   0023EA  6FF1               	movwf	doEvlrn@nodeNumber& (0+255),b
 14412   0023EC  C2F5  F1F2         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14413   0023F0  EE20 F005          	lfsr	2,5
 14414   0023F4  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14415   0023F6  26D9               	addwf	fsr2l,f,c
 14416   0023F8  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14417   0023FA  22DA               	addwfc	fsr2h,f,c
 14418   0023FC  50DF               	movf	indf2,w,c
 14419   0023FE  0102               	movlb	2	; () banked
 14420   002400  6FF7               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14421   002402  0101               	movlb	1	; () banked
 14422   002404  EE20 F004          	lfsr	2,4
 14423   002408  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14424   00240A  26D9               	addwf	fsr2l,f,c
 14425   00240C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14426   00240E  22DA               	addwfc	fsr2h,f,c
 14427   002410  50DF               	movf	indf2,w,c
 14428   002412  0102               	movlb	2	; () banked
 14429   002414  6FF8               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14430   002416  51F7               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14431   002418  0101               	movlb	1	; () banked
 14432   00241A  6FF3               	movwf	doEvlrn@eventNumber& (0+255),b
 14433   00241C  C2F8  F1F4         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14434   002420  EE20 F006          	lfsr	2,6
 14435   002424  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14436   002426  26D9               	addwf	fsr2l,f,c
 14437   002428  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14438   00242A  22DA               	addwfc	fsr2h,f,c
 14439   00242C  50DF               	movf	indf2,w,c
 14440   00242E  6FF5               	movwf	doEvlrn@evNum& (0+255),b
 14441   002430  EE20 F007          	lfsr	2,7
 14442   002434  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14443   002436  26D9               	addwf	fsr2l,f,c
 14444   002438  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14445   00243A  22DA               	addwfc	fsr2h,f,c
 14446   00243C  50DF               	movf	indf2,w,c
 14447   00243E  6FF6               	movwf	doEvlrn@evVal& (0+255),b
 14448   002440  ECA6  F048         	call	_doEvlrn	;wreg free
 14449   002444  D741               	goto	u24310
 14450   002446                     l22696:
 14451                           
 14452                           ; BSR set to: 2
 14453                           ;../../VLCBlib_PIC/event_teach.c: 348:             if (teachCheckLen(m, 5, 1) == PROCESS
      +                          ED) return PROCESSED;
 14454   002446  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14455   00244A  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14456   00244E  0E05               	movlw	5
 14457   002450  0101               	movlb	1	; () banked
 14458   002452  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14459   002454  0E01               	movlw	1
 14460   002456  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14461   002458  ECA9  F058         	call	_teachCheckLen	;wreg free
 14462   00245C  06E8               	decf	wreg,f,c
 14463   00245E  B4D8               	btfsc	status,2,c
 14464   002460  D733               	goto	u24310
 14465                           
 14466                           ;../../VLCBlib_PIC/event_teach.c: 349:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14467   002462  0101               	movlb	1	; () banked
 14468   002464  A17D               	btfss	_mode_flags& (0+255),0,b
 14469   002466  D730               	goto	u24310
 14470                           
 14471                           ; BSR set to: 1
 14472                           ;../../VLCBlib_PIC/event_teach.c: 351:             doEvuln((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14473   002468  EE20 F003          	lfsr	2,3
 14474   00246C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14475   00246E  26D9               	addwf	fsr2l,f,c
 14476   002470  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14477   002472  22DA               	addwfc	fsr2h,f,c
 14478   002474  50DF               	movf	indf2,w,c
 14479   002476  0102               	movlb	2	; () banked
 14480   002478  6FF4               	movwf	??_teachProcessMessage& (0+255),b
 14481   00247A  0101               	movlb	1	; () banked
 14482   00247C  EE20 F002          	lfsr	2,2
 14483   002480  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14484   002482  26D9               	addwf	fsr2l,f,c
 14485   002484  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14486   002486  22DA               	addwfc	fsr2h,f,c
 14487   002488  50DF               	movf	indf2,w,c
 14488   00248A  0102               	movlb	2	; () banked
 14489   00248C  6FF5               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14490   00248E  51F4               	movf	??_teachProcessMessage& (0+255),w,b
 14491   002490  0101               	movlb	1	; () banked
 14492   002492  6FD2               	movwf	doEvuln@nodeNumber& (0+255),b
 14493   002494  C2F5  F1D3         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14494   002498  EE20 F005          	lfsr	2,5
 14495   00249C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14496   00249E  26D9               	addwf	fsr2l,f,c
 14497   0024A0  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14498   0024A2  22DA               	addwfc	fsr2h,f,c
 14499   0024A4  50DF               	movf	indf2,w,c
 14500   0024A6  0102               	movlb	2	; () banked
 14501   0024A8  6FF7               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14502   0024AA  0101               	movlb	1	; () banked
 14503   0024AC  EE20 F004          	lfsr	2,4
 14504   0024B0  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14505   0024B2  26D9               	addwf	fsr2l,f,c
 14506   0024B4  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14507   0024B6  22DA               	addwfc	fsr2h,f,c
 14508   0024B8  50DF               	movf	indf2,w,c
 14509   0024BA  0102               	movlb	2	; () banked
 14510   0024BC  6FF8               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14511   0024BE  51F7               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14512   0024C0  0101               	movlb	1	; () banked
 14513   0024C2  6FD4               	movwf	doEvuln@eventNumber& (0+255),b
 14514   0024C4  C2F8  F1D5         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14515   0024C8  EC10  F055         	call	_doEvuln	;wreg free
 14516   0024CC  D6FD               	goto	u24310
 14517   0024CE                     l22712:
 14518                           
 14519                           ; BSR set to: 2
 14520                           ;../../VLCBlib_PIC/event_teach.c: 354:             if (teachCheckLen(m, 6, 1) == PROCESS
      +                          ED) return PROCESSED;
 14521   0024CE  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14522   0024D2  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14523   0024D6  0E06               	movlw	6
 14524   0024D8  0101               	movlb	1	; () banked
 14525   0024DA  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14526   0024DC  0E01               	movlw	1
 14527   0024DE  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14528   0024E0  ECA9  F058         	call	_teachCheckLen	;wreg free
 14529   0024E4  06E8               	decf	wreg,f,c
 14530   0024E6  B4D8               	btfsc	status,2,c
 14531   0024E8  D6EF               	goto	u24310
 14532                           
 14533                           ;../../VLCBlib_PIC/event_teach.c: 355:             if (! (mode_flags & 1)) return PROCES
      +                          SED;
 14534   0024EA  0101               	movlb	1	; () banked
 14535   0024EC  A17D               	btfss	_mode_flags& (0+255),0,b
 14536   0024EE  D6EC               	goto	u24310
 14537                           
 14538                           ; BSR set to: 1
 14539                           ;../../VLCBlib_PIC/event_teach.c: 357:             doReqev((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14540   0024F0  EE20 F003          	lfsr	2,3
 14541   0024F4  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14542   0024F6  26D9               	addwf	fsr2l,f,c
 14543   0024F8  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14544   0024FA  22DA               	addwfc	fsr2h,f,c
 14545   0024FC  50DF               	movf	indf2,w,c
 14546   0024FE  0102               	movlb	2	; () banked
 14547   002500  6FF4               	movwf	??_teachProcessMessage& (0+255),b
 14548   002502  0101               	movlb	1	; () banked
 14549   002504  EE20 F002          	lfsr	2,2
 14550   002508  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14551   00250A  26D9               	addwf	fsr2l,f,c
 14552   00250C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14553   00250E  22DA               	addwfc	fsr2h,f,c
 14554   002510  50DF               	movf	indf2,w,c
 14555   002512  0102               	movlb	2	; () banked
 14556   002514  6FF5               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14557   002516  51F4               	movf	??_teachProcessMessage& (0+255),w,b
 14558   002518  0101               	movlb	1	; () banked
 14559   00251A  6FCC               	movwf	doReqev@nodeNumber& (0+255),b
 14560   00251C  C2F5  F1CD         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14561   002520  EE20 F005          	lfsr	2,5
 14562   002524  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14563   002526  26D9               	addwf	fsr2l,f,c
 14564   002528  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14565   00252A  22DA               	addwfc	fsr2h,f,c
 14566   00252C  50DF               	movf	indf2,w,c
 14567   00252E  0102               	movlb	2	; () banked
 14568   002530  6FF7               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14569   002532  0101               	movlb	1	; () banked
 14570   002534  EE20 F004          	lfsr	2,4
 14571   002538  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14572   00253A  26D9               	addwf	fsr2l,f,c
 14573   00253C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14574   00253E  22DA               	addwfc	fsr2h,f,c
 14575   002540  50DF               	movf	indf2,w,c
 14576   002542  0102               	movlb	2	; () banked
 14577   002544  6FF8               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14578   002546  51F7               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14579   002548  0101               	movlb	1	; () banked
 14580   00254A  6FCE               	movwf	doReqev@eventNumber& (0+255),b
 14581   00254C  C2F8  F1CF         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14582   002550  EE20 F006          	lfsr	2,6
 14583   002554  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14584   002556  26D9               	addwf	fsr2l,f,c
 14585   002558  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14586   00255A  22DA               	addwfc	fsr2h,f,c
 14587   00255C  50DF               	movf	indf2,w,c
 14588   00255E  6FD0               	movwf	doReqev@evNum& (0+255),b
 14589   002560  EC23  F03E         	call	_doReqev	;wreg free
 14590   002564  D6B1               	goto	u24310
 14591   002566                     l22728:
 14592                           
 14593                           ; BSR set to: 2
 14594                           ;../../VLCBlib_PIC/event_teach.c: 361:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14595   002566  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14596   00256A  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14597   00256E  0E03               	movlw	3
 14598   002570  0101               	movlb	1	; () banked
 14599   002572  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14600   002574  0E00               	movlw	0
 14601   002576  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14602   002578  ECA9  F058         	call	_teachCheckLen	;wreg free
 14603   00257C  06E8               	decf	wreg,f,c
 14604   00257E  B4D8               	btfsc	status,2,c
 14605   002580  D6A3               	goto	u24310
 14606                           
 14607                           ;../../VLCBlib_PIC/event_teach.c: 362:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14608   002582  0101               	movlb	1	; () banked
 14609   002584  EE20 F002          	lfsr	2,2
 14610   002588  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14611   00258A  26D9               	addwf	fsr2l,f,c
 14612   00258C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14613   00258E  22DA               	addwfc	fsr2h,f,c
 14614   002590  50DE               	movf	postinc2,w,c
 14615   002592  0100               	movlb	0	; () banked
 14616   002594  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14617   002596  A4D8               	btfss	status,2,c
 14618   002598  D697               	goto	u24310
 14619                           
 14620                           ; BSR set to: 0
 14621   00259A  0101               	movlb	1	; () banked
 14622   00259C  EE20 F003          	lfsr	2,3
 14623   0025A0  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14624   0025A2  26D9               	addwf	fsr2l,f,c
 14625   0025A4  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14626   0025A6  22DA               	addwfc	fsr2h,f,c
 14627   0025A8  0100               	movlb	0	; () banked
 14628   0025AA  51B4               	movf	_nn& (0+255),w,b
 14629   0025AC  18DE               	xorwf	postinc2,w,c
 14630   0025AE  A4D8               	btfss	status,2,c
 14631   0025B0  D68B               	goto	u24310
 14632   0025B2  D6A7               	goto	l22638
 14633   0025B4                     l22748:
 14634                           
 14635                           ; BSR set to: 2
 14636                           ;../../VLCBlib_PIC/event_teach.c: 367:             if (teachCheckLen(m, 3, 1) == PROCESS
      +                          ED) return PROCESSED;
 14637   0025B4  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14638   0025B8  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14639   0025BC  0E03               	movlw	3
 14640   0025BE  0101               	movlb	1	; () banked
 14641   0025C0  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14642   0025C2  0E01               	movlw	1
 14643   0025C4  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14644   0025C6  ECA9  F058         	call	_teachCheckLen	;wreg free
 14645   0025CA  06E8               	decf	wreg,f,c
 14646   0025CC  B4D8               	btfsc	status,2,c
 14647   0025CE  D67C               	goto	u24310
 14648                           
 14649                           ;../../VLCBlib_PIC/event_teach.c: 368:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14650   0025D0  0101               	movlb	1	; () banked
 14651   0025D2  EE20 F002          	lfsr	2,2
 14652   0025D6  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14653   0025D8  26D9               	addwf	fsr2l,f,c
 14654   0025DA  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14655   0025DC  22DA               	addwfc	fsr2h,f,c
 14656   0025DE  50DE               	movf	postinc2,w,c
 14657   0025E0  0100               	movlb	0	; () banked
 14658   0025E2  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14659   0025E4  A4D8               	btfss	status,2,c
 14660   0025E6  D670               	goto	u24310
 14661                           
 14662                           ; BSR set to: 0
 14663   0025E8  0101               	movlb	1	; () banked
 14664   0025EA  EE20 F003          	lfsr	2,3
 14665   0025EE  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14666   0025F0  26D9               	addwf	fsr2l,f,c
 14667   0025F2  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14668   0025F4  22DA               	addwfc	fsr2h,f,c
 14669   0025F6  0100               	movlb	0	; () banked
 14670   0025F8  51B4               	movf	_nn& (0+255),w,b
 14671   0025FA  18DE               	xorwf	postinc2,w,c
 14672   0025FC  A4D8               	btfss	status,2,c
 14673   0025FE  D664               	goto	u24310
 14674                           
 14675                           ; BSR set to: 0
 14676                           ;../../VLCBlib_PIC/event_teach.c: 370:             if (! (mode_flags & 1)) {
 14677   002600  0101               	movlb	1	; () banked
 14678   002602  B17D               	btfsc	_mode_flags& (0+255),0,b
 14679   002604  D019               	goto	l22768
 14680                           
 14681                           ; BSR set to: 1
 14682                           ;../../VLCBlib_PIC/event_teach.c: 371:                 sendMessage3(OPC_CMDERR, nn.bytes
      +                          .hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14683   002606  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 14684   00260A  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 14685   00260E  0E02               	movlw	2
 14686   002610  0100               	movlb	0	; () banked
 14687   002612  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14688   002614  0E6F               	movlw	111
 14689   002616  ECF9  F05E         	call	_sendMessage3
 14690                           
 14691                           ;../../VLCBlib_PIC/event_teach.c: 372:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14692   00261A  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 14693   00261E  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 14694   002622  0E55               	movlw	85
 14695   002624  0101               	movlb	1	; () banked
 14696   002626  6FC8               	movwf	sendMessage5@data3& (0+255),b
 14697   002628  0E04               	movlw	4
 14698   00262A  6FC9               	movwf	sendMessage5@data4& (0+255),b
 14699   00262C  0E02               	movlw	2
 14700   00262E  6FCA               	movwf	sendMessage5@data5& (0+255),b
 14701   002630  0EAF               	movlw	175
 14702   002632  EC41  F05F         	call	_sendMessage5
 14703   002636  D648               	goto	u24310
 14704   002638                     l22768:
 14705                           
 14706                           ; BSR set to: 1
 14707                           ;../../VLCBlib_PIC/event_teach.c: 376:             doNnclr();
 14708   002638  ECB1  F05E         	call	_doNnclr	;wreg free
 14709                           
 14710                           ;../../VLCBlib_PIC/event_teach.c: 377:             break;
 14711   00263C  D6A3               	goto	l22674
 14712   00263E                     l22770:
 14713                           
 14714                           ; BSR set to: 2
 14715                           ;../../VLCBlib_PIC/event_teach.c: 379:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14716   00263E  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14717   002642  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14718   002646  0E03               	movlw	3
 14719   002648  0101               	movlb	1	; () banked
 14720   00264A  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14721   00264C  0E00               	movlw	0
 14722   00264E  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14723   002650  ECA9  F058         	call	_teachCheckLen	;wreg free
 14724   002654  06E8               	decf	wreg,f,c
 14725   002656  B4D8               	btfsc	status,2,c
 14726   002658  D637               	goto	u24310
 14727                           
 14728                           ;../../VLCBlib_PIC/event_teach.c: 380:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14729   00265A  0101               	movlb	1	; () banked
 14730   00265C  EE20 F002          	lfsr	2,2
 14731   002660  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14732   002662  26D9               	addwf	fsr2l,f,c
 14733   002664  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14734   002666  22DA               	addwfc	fsr2h,f,c
 14735   002668  50DE               	movf	postinc2,w,c
 14736   00266A  0100               	movlb	0	; () banked
 14737   00266C  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14738   00266E  A4D8               	btfss	status,2,c
 14739   002670  D62B               	goto	u24310
 14740                           
 14741                           ; BSR set to: 0
 14742   002672  0101               	movlb	1	; () banked
 14743   002674  EE20 F003          	lfsr	2,3
 14744   002678  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14745   00267A  26D9               	addwf	fsr2l,f,c
 14746   00267C  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14747   00267E  22DA               	addwfc	fsr2h,f,c
 14748   002680  0100               	movlb	0	; () banked
 14749   002682  51B4               	movf	_nn& (0+255),w,b
 14750   002684  18DE               	xorwf	postinc2,w,c
 14751   002686  A4D8               	btfss	status,2,c
 14752   002688  D61F               	goto	u24310
 14753                           
 14754                           ; BSR set to: 0
 14755                           ;../../VLCBlib_PIC/event_teach.c: 382:             doNerd();
 14756   00268A  EC4E  F061         	call	_doNerd	;wreg free
 14757   00268E  D61C               	goto	u24310
 14758   002690                     l22790:
 14759                           
 14760                           ; BSR set to: 2
 14761                           ;../../VLCBlib_PIC/event_teach.c: 385:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14762   002690  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14763   002694  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14764   002698  0E03               	movlw	3
 14765   00269A  0101               	movlb	1	; () banked
 14766   00269C  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14767   00269E  0E00               	movlw	0
 14768   0026A0  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14769   0026A2  ECA9  F058         	call	_teachCheckLen	;wreg free
 14770   0026A6  06E8               	decf	wreg,f,c
 14771   0026A8  B4D8               	btfsc	status,2,c
 14772   0026AA  D60E               	goto	u24310
 14773                           
 14774                           ;../../VLCBlib_PIC/event_teach.c: 386:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14775   0026AC  0101               	movlb	1	; () banked
 14776   0026AE  EE20 F002          	lfsr	2,2
 14777   0026B2  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14778   0026B4  26D9               	addwf	fsr2l,f,c
 14779   0026B6  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14780   0026B8  22DA               	addwfc	fsr2h,f,c
 14781   0026BA  50DE               	movf	postinc2,w,c
 14782   0026BC  0100               	movlb	0	; () banked
 14783   0026BE  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14784   0026C0  A4D8               	btfss	status,2,c
 14785   0026C2  D602               	goto	u24310
 14786                           
 14787                           ; BSR set to: 0
 14788   0026C4  0101               	movlb	1	; () banked
 14789   0026C6  EE20 F003          	lfsr	2,3
 14790   0026CA  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14791   0026CC  26D9               	addwf	fsr2l,f,c
 14792   0026CE  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14793   0026D0  22DA               	addwfc	fsr2h,f,c
 14794   0026D2  0100               	movlb	0	; () banked
 14795   0026D4  51B4               	movf	_nn& (0+255),w,b
 14796   0026D6  18DE               	xorwf	postinc2,w,c
 14797   0026D8  A4D8               	btfss	status,2,c
 14798   0026DA  D5F6               	goto	u24310
 14799                           
 14800                           ; BSR set to: 0
 14801                           ;../../VLCBlib_PIC/event_teach.c: 388:             doNnevn();
 14802   0026DC  ECE2  F056         	call	_doNnevn	;wreg free
 14803   0026E0  D5F3               	goto	u24310
 14804   0026E2                     l22810:
 14805                           
 14806                           ; BSR set to: 2
 14807                           ;../../VLCBlib_PIC/event_teach.c: 391:             if (teachCheckLen(m, 3, 0) == PROCESS
      +                          ED) return PROCESSED;
 14808   0026E2  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14809   0026E6  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14810   0026EA  0E03               	movlw	3
 14811   0026EC  0101               	movlb	1	; () banked
 14812   0026EE  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14813   0026F0  0E00               	movlw	0
 14814   0026F2  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14815   0026F4  ECA9  F058         	call	_teachCheckLen	;wreg free
 14816   0026F8  06E8               	decf	wreg,f,c
 14817   0026FA  B4D8               	btfsc	status,2,c
 14818   0026FC  D5E5               	goto	u24310
 14819                           
 14820                           ;../../VLCBlib_PIC/event_teach.c: 392:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14821   0026FE  0101               	movlb	1	; () banked
 14822   002700  EE20 F002          	lfsr	2,2
 14823   002704  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14824   002706  26D9               	addwf	fsr2l,f,c
 14825   002708  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14826   00270A  22DA               	addwfc	fsr2h,f,c
 14827   00270C  50DE               	movf	postinc2,w,c
 14828   00270E  0100               	movlb	0	; () banked
 14829   002710  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14830   002712  A4D8               	btfss	status,2,c
 14831   002714  D5D9               	goto	u24310
 14832                           
 14833                           ; BSR set to: 0
 14834   002716  0101               	movlb	1	; () banked
 14835   002718  EE20 F003          	lfsr	2,3
 14836   00271C  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14837   00271E  26D9               	addwf	fsr2l,f,c
 14838   002720  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14839   002722  22DA               	addwfc	fsr2h,f,c
 14840   002724  0100               	movlb	0	; () banked
 14841   002726  51B4               	movf	_nn& (0+255),w,b
 14842   002728  18DE               	xorwf	postinc2,w,c
 14843   00272A  A4D8               	btfss	status,2,c
 14844   00272C  D5CD               	goto	u24310
 14845                           
 14846                           ; BSR set to: 0
 14847                           ;../../VLCBlib_PIC/event_teach.c: 394:             doRqevn();
 14848   00272E  ECF6  F05D         	call	_doRqevn	;wreg free
 14849   002732  D5CA               	goto	u24310
 14850   002734                     l22830:
 14851                           
 14852                           ; BSR set to: 2
 14853                           ;../../VLCBlib_PIC/event_teach.c: 397:             if (teachCheckLen(m, 4, 0) == PROCESS
      +                          ED) return PROCESSED;
 14854   002734  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14855   002738  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14856   00273C  0E04               	movlw	4
 14857   00273E  0101               	movlb	1	; () banked
 14858   002740  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14859   002742  0E00               	movlw	0
 14860   002744  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14861   002746  ECA9  F058         	call	_teachCheckLen	;wreg free
 14862   00274A  06E8               	decf	wreg,f,c
 14863   00274C  B4D8               	btfsc	status,2,c
 14864   00274E  D5BC               	goto	u24310
 14865                           
 14866                           ;../../VLCBlib_PIC/event_teach.c: 398:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14867   002750  0101               	movlb	1	; () banked
 14868   002752  EE20 F002          	lfsr	2,2
 14869   002756  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14870   002758  26D9               	addwf	fsr2l,f,c
 14871   00275A  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14872   00275C  22DA               	addwfc	fsr2h,f,c
 14873   00275E  50DE               	movf	postinc2,w,c
 14874   002760  0100               	movlb	0	; () banked
 14875   002762  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14876   002764  A4D8               	btfss	status,2,c
 14877   002766  D5B0               	goto	u24310
 14878                           
 14879                           ; BSR set to: 0
 14880   002768  0101               	movlb	1	; () banked
 14881   00276A  EE20 F003          	lfsr	2,3
 14882   00276E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14883   002770  26D9               	addwf	fsr2l,f,c
 14884   002772  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14885   002774  22DA               	addwfc	fsr2h,f,c
 14886   002776  0100               	movlb	0	; () banked
 14887   002778  51B4               	movf	_nn& (0+255),w,b
 14888   00277A  18DE               	xorwf	postinc2,w,c
 14889   00277C  A4D8               	btfss	status,2,c
 14890   00277E  D5A4               	goto	u24310
 14891                           
 14892                           ; BSR set to: 0
 14893                           ;../../VLCBlib_PIC/event_teach.c: 400:             doNenrd(m->bytes[2]);
 14894   002780  0101               	movlb	1	; () banked
 14895   002782  EE20 F004          	lfsr	2,4
 14896   002786  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14897   002788  26D9               	addwf	fsr2l,f,c
 14898   00278A  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14899   00278C  22DA               	addwfc	fsr2h,f,c
 14900   00278E  50DF               	movf	indf2,w,c
 14901   002790  ECAA  F056         	call	_doNenrd
 14902   002794  D599               	goto	u24310
 14903   002796                     l22850:
 14904                           
 14905                           ; BSR set to: 2
 14906                           ;../../VLCBlib_PIC/event_teach.c: 403:             if (teachCheckLen(m, 5, 0) == PROCESS
      +                          ED) return PROCESSED;
 14907   002796  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14908   00279A  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14909   00279E  0E05               	movlw	5
 14910   0027A0  0101               	movlb	1	; () banked
 14911   0027A2  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14912   0027A4  0E00               	movlw	0
 14913   0027A6  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14914   0027A8  ECA9  F058         	call	_teachCheckLen	;wreg free
 14915   0027AC  06E8               	decf	wreg,f,c
 14916   0027AE  B4D8               	btfsc	status,2,c
 14917   0027B0  D58B               	goto	u24310
 14918                           
 14919                           ;../../VLCBlib_PIC/event_teach.c: 404:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14920   0027B2  0101               	movlb	1	; () banked
 14921   0027B4  EE20 F002          	lfsr	2,2
 14922   0027B8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14923   0027BA  26D9               	addwf	fsr2l,f,c
 14924   0027BC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14925   0027BE  22DA               	addwfc	fsr2h,f,c
 14926   0027C0  50DE               	movf	postinc2,w,c
 14927   0027C2  0100               	movlb	0	; () banked
 14928   0027C4  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14929   0027C6  A4D8               	btfss	status,2,c
 14930   0027C8  D57F               	goto	u24310
 14931                           
 14932                           ; BSR set to: 0
 14933   0027CA  0101               	movlb	1	; () banked
 14934   0027CC  EE20 F003          	lfsr	2,3
 14935   0027D0  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14936   0027D2  26D9               	addwf	fsr2l,f,c
 14937   0027D4  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14938   0027D6  22DA               	addwfc	fsr2h,f,c
 14939   0027D8  0100               	movlb	0	; () banked
 14940   0027DA  51B4               	movf	_nn& (0+255),w,b
 14941   0027DC  18DE               	xorwf	postinc2,w,c
 14942   0027DE  A4D8               	btfss	status,2,c
 14943   0027E0  D573               	goto	u24310
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;../../VLCBlib_PIC/event_teach.c: 406:             doReval(m->bytes[2], m->bytes[3]);
 14947   0027E2  0101               	movlb	1	; () banked
 14948   0027E4  EE20 F005          	lfsr	2,5
 14949   0027E8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14950   0027EA  26D9               	addwf	fsr2l,f,c
 14951   0027EC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14952   0027EE  22DA               	addwfc	fsr2h,f,c
 14953   0027F0  50DF               	movf	indf2,w,c
 14954   0027F2  6FCB               	movwf	doReval@evNum& (0+255),b
 14955   0027F4  EE20 F004          	lfsr	2,4
 14956   0027F8  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14957   0027FA  26D9               	addwf	fsr2l,f,c
 14958   0027FC  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14959   0027FE  22DA               	addwfc	fsr2h,f,c
 14960   002800  50DF               	movf	indf2,w,c
 14961   002802  ECCC  F049         	call	_doReval
 14962   002806  D560               	goto	u24310
 14963   002808                     l22870:
 14964                           
 14965                           ; BSR set to: 2
 14966                           ;../../VLCBlib_PIC/event_teach.c: 409:             if (teachCheckLen(m, 8, 1) == PROCESS
      +                          ED) return PROCESSED;
 14967   002808  C1FD  F1CF         	movff	teachProcessMessage@m,teachCheckLen@m
 14968   00280C  C1FE  F1D0         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14969   002810  0E08               	movlw	8
 14970   002812  0101               	movlb	1	; () banked
 14971   002814  6FD1               	movwf	teachCheckLen@needed& (0+255),b
 14972   002816  0E01               	movlw	1
 14973   002818  6FD2               	movwf	teachCheckLen@learn& (0+255),b
 14974   00281A  ECA9  F058         	call	_teachCheckLen	;wreg free
 14975   00281E  06E8               	decf	wreg,f,c
 14976   002820  B4D8               	btfsc	status,2,c
 14977   002822  D552               	goto	u24310
 14978                           
 14979                           ;../../VLCBlib_PIC/event_teach.c: 410:             if ((m->bytes[0] != nn.bytes.hi) || (
      +                          m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14980   002824  0101               	movlb	1	; () banked
 14981   002826  EE20 F002          	lfsr	2,2
 14982   00282A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14983   00282C  26D9               	addwf	fsr2l,f,c
 14984   00282E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14985   002830  22DA               	addwfc	fsr2h,f,c
 14986   002832  50DE               	movf	postinc2,w,c
 14987   002834  0100               	movlb	0	; () banked
 14988   002836  19B5               	xorwf	(_nn+1)& (0+255),w,b
 14989   002838  A4D8               	btfss	status,2,c
 14990   00283A  D546               	goto	u24310
 14991                           
 14992                           ; BSR set to: 0
 14993   00283C  0101               	movlb	1	; () banked
 14994   00283E  EE20 F003          	lfsr	2,3
 14995   002842  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 14996   002844  26D9               	addwf	fsr2l,f,c
 14997   002846  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14998   002848  22DA               	addwfc	fsr2h,f,c
 14999   00284A  0100               	movlb	0	; () banked
 15000   00284C  51B4               	movf	_nn& (0+255),w,b
 15001   00284E  18DE               	xorwf	postinc2,w,c
 15002   002850  A4D8               	btfss	status,2,c
 15003   002852  D53A               	goto	u24310
 15004                           
 15005                           ; BSR set to: 0
 15006                           ;../../VLCBlib_PIC/event_teach.c: 412:             doEvlrn((uint16_t)(m->bytes[0]<<8) | 
      +                          (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6]);
 15007   002854  0101               	movlb	1	; () banked
 15008   002856  EE20 F003          	lfsr	2,3
 15009   00285A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15010   00285C  26D9               	addwf	fsr2l,f,c
 15011   00285E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15012   002860  22DA               	addwfc	fsr2h,f,c
 15013   002862  50DF               	movf	indf2,w,c
 15014   002864  0102               	movlb	2	; () banked
 15015   002866  6FF4               	movwf	??_teachProcessMessage& (0+255),b
 15016   002868  0101               	movlb	1	; () banked
 15017   00286A  EE20 F002          	lfsr	2,2
 15018   00286E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15019   002870  26D9               	addwf	fsr2l,f,c
 15020   002872  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15021   002874  22DA               	addwfc	fsr2h,f,c
 15022   002876  50DF               	movf	indf2,w,c
 15023   002878  0102               	movlb	2	; () banked
 15024   00287A  6FF5               	movwf	(??_teachProcessMessage+1)& (0+255),b
 15025   00287C  51F4               	movf	??_teachProcessMessage& (0+255),w,b
 15026   00287E  0101               	movlb	1	; () banked
 15027   002880  6FF1               	movwf	doEvlrn@nodeNumber& (0+255),b
 15028   002882  C2F5  F1F2         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 15029   002886  EE20 F005          	lfsr	2,5
 15030   00288A  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15031   00288C  26D9               	addwf	fsr2l,f,c
 15032   00288E  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15033   002890  22DA               	addwfc	fsr2h,f,c
 15034   002892  50DF               	movf	indf2,w,c
 15035   002894  0102               	movlb	2	; () banked
 15036   002896  6FF7               	movwf	(??_teachProcessMessage+3)& (0+255),b
 15037   002898  0101               	movlb	1	; () banked
 15038   00289A  EE20 F004          	lfsr	2,4
 15039   00289E  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15040   0028A0  26D9               	addwf	fsr2l,f,c
 15041   0028A2  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15042   0028A4  22DA               	addwfc	fsr2h,f,c
 15043   0028A6  50DF               	movf	indf2,w,c
 15044   0028A8  0102               	movlb	2	; () banked
 15045   0028AA  6FF8               	movwf	(??_teachProcessMessage+4)& (0+255),b
 15046   0028AC  51F7               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 15047   0028AE  0101               	movlb	1	; () banked
 15048   0028B0  6FF3               	movwf	doEvlrn@eventNumber& (0+255),b
 15049   0028B2  C2F8  F1F4         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 15050   0028B6  EE20 F007          	lfsr	2,7
 15051   0028BA  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15052   0028BC  26D9               	addwf	fsr2l,f,c
 15053   0028BE  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15054   0028C0  22DA               	addwfc	fsr2h,f,c
 15055   0028C2  50DF               	movf	indf2,w,c
 15056   0028C4  6FF5               	movwf	doEvlrn@evNum& (0+255),b
 15057   0028C6  EE20 F008          	lfsr	2,8
 15058   0028CA  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15059   0028CC  26D9               	addwf	fsr2l,f,c
 15060   0028CE  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15061   0028D0  22DA               	addwfc	fsr2h,f,c
 15062   0028D2  50DF               	movf	indf2,w,c
 15063   0028D4  6FF6               	movwf	doEvlrn@evVal& (0+255),b
 15064   0028D6  ECA6  F048         	call	_doEvlrn	;wreg free
 15065   0028DA  D4F6               	goto	u24310
 15066   0028DC                     l22892:
 15067   0028DC  0101               	movlb	1	; () banked
 15068   0028DE  EE20 F001          	lfsr	2,1
 15069   0028E2  51FD               	movf	teachProcessMessage@m& (0+255),w,b
 15070   0028E4  26D9               	addwf	fsr2l,f,c
 15071   0028E6  51FE               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15072   0028E8  22DA               	addwfc	fsr2h,f,c
 15073   0028EA  50DF               	movf	indf2,w,c
 15074   0028EC  0102               	movlb	2	; () banked
 15075   0028EE  6FF4               	movwf	??_teachProcessMessage& (0+255),b
 15076   0028F0  6BF5               	clrf	(??_teachProcessMessage+1)& (0+255),b
 15077                           
 15078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15079                           ; Switch size 1, requested type "simple"
 15080                           ; Number of cases is 1, Range of values is 0 to 0
 15081                           ; switch strategies available:
 15082                           ; Name         Instructions Cycles
 15083                           ; simple_byte            4     3 (average)
 15084                           ;	Chosen strategy is simple_byte
 15085   0028F2  51F5               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 15086   0028F4  0A00               	xorlw	0	; case 0
 15087   0028F6  A4D8               	btfss	status,2,c
 15088   0028F8  D545               	goto	l22674
 15089                           
 15090                           ; BSR set to: 2
 15091                           ; Switch size 1, requested type "simple"
 15092                           ; Number of cases is 13, Range of values is 83 to 245
 15093                           ; switch strategies available:
 15094                           ; Name         Instructions Cycles
 15095                           ; simple_byte           40    21 (average)
 15096                           ;	Chosen strategy is simple_byte
 15097   0028FA  51F4               	movf	??_teachProcessMessage& (0+255),w,b
 15098   0028FC  0A53               	xorlw	83	; case 83
 15099   0028FE  B4D8               	btfsc	status,2,c
 15100   002900  D4D5               	goto	l22626
 15101   002902  0A07               	xorlw	7	; case 84
 15102   002904  B4D8               	btfsc	status,2,c
 15103   002906  D62F               	goto	l22728
 15104   002908  0A01               	xorlw	1	; case 85
 15105   00290A  B4D8               	btfsc	status,2,c
 15106   00290C  D653               	goto	l22748
 15107   00290E  0A03               	xorlw	3	; case 86
 15108   002910  B4D8               	btfsc	status,2,c
 15109   002912  D6BE               	goto	l22790
 15110   002914  0A01               	xorlw	1	; case 87
 15111   002916  B4D8               	btfsc	status,2,c
 15112   002918  D692               	goto	l22770
 15113   00291A  0A0F               	xorlw	15	; case 88
 15114   00291C  B4D8               	btfsc	status,2,c
 15115   00291E  D6E1               	goto	l22810
 15116   002920  0A2A               	xorlw	42	; case 114
 15117   002922  B4D8               	btfsc	status,2,c
 15118   002924  D707               	goto	l22830
 15119   002926  0A04               	xorlw	4	; case 118
 15120   002928  B4D8               	btfsc	status,2,c
 15121   00292A  D4EE               	goto	l22644
 15122   00292C  0AE3               	xorlw	227	; case 149
 15123   00292E  B4D8               	btfsc	status,2,c
 15124   002930  D58A               	goto	l22696
 15125   002932  0A09               	xorlw	9	; case 156
 15126   002934  B4D8               	btfsc	status,2,c
 15127   002936  D72F               	goto	l22850
 15128   002938  0A2E               	xorlw	46	; case 178
 15129   00293A  B4D8               	btfsc	status,2,c
 15130   00293C  D5C8               	goto	l22712
 15131   00293E  0A60               	xorlw	96	; case 210
 15132   002940  B4D8               	btfsc	status,2,c
 15133   002942  D522               	goto	l22678
 15134   002944  0A27               	xorlw	39	; case 245
 15135   002946  B4D8               	btfsc	status,2,c
 15136   002948  D75F               	goto	l22870
 15137   00294A  D51C               	goto	l22674
 15138   00294C                     __end_of_teachProcessMessage:
 15139                           	callstack 0
 15140                           
 15141 ;; *************** function _teachCheckLen *****************
 15142 ;; Defined at:
 15143 ;;		line 427 in file "../../VLCBlib_PIC/event_teach.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;  m               2   17[BANK1 ] PTR struct Message
 15146 ;;		 -> poll@m(9), 
 15147 ;;  needed          1   19[BANK1 ] unsigned char 
 15148 ;;  learn           1   20[BANK1 ] unsigned char 
 15149 ;; Auto vars:     Size  Location     Type
 15150 ;;		None
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  1    wreg      enum E12732
 15153 ;; Registers used:
 15154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15155 ;; Tracked objects:
 15156 ;;		On entry : 0/0
 15157 ;;		On exit  : 0/0
 15158 ;;		Unchanged: 0/0
 15159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15160 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15162 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15163 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15164 ;;Total ram usage:        5 bytes
 15165 ;; Hardware stack levels used: 1
 15166 ;; Hardware stack levels required when called: 17
 15167 ;; This function calls:
 15168 ;;		_checkLen
 15169 ;;		_sendMessage5
 15170 ;; This function is called by:
 15171 ;;		_teachProcessMessage
 15172 ;; This function uses a non-reentrant model
 15173 ;;
 15174                           
 15175                           	psect	text26
 15176   00B152                     __ptext26:
 15177                           	callstack 0
 15178   00B152                     _teachCheckLen:
 15179                           	callstack 11
 15180                           
 15181                           ;../../VLCBlib_PIC/event_teach.c: 428:     if (learn) {
 15182                           
 15183                           ;incstack = 0
 15184   00B152  0101               	movlb	1	; () banked
 15185   00B154  51D2               	movf	teachCheckLen@learn& (0+255),w,b
 15186   00B156  B4D8               	btfsc	status,2,c
 15187   00B158  D021               	goto	l21142
 15188                           
 15189                           ; BSR set to: 1
 15190                           ;../../VLCBlib_PIC/event_teach.c: 430:         if (m->len < needed) {
 15191   00B15A  C1CF  FFD9         	movff	teachCheckLen@m,fsr2l
 15192   00B15E  C1D0  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15193   00B162  51D1               	movf	teachCheckLen@needed& (0+255),w,b
 15194   00B164  5CDE               	subwf	postinc2,w,c
 15195   00B166  B0D8               	btfsc	status,0,c
 15196   00B168  D017               	goto	l21138
 15197                           
 15198                           ; BSR set to: 1
 15199                           ;../../VLCBlib_PIC/event_teach.c: 432:             if (mode_flags & 1) {
 15200   00B16A  A17D               	btfss	_mode_flags& (0+255),0,b
 15201   00B16C  D013               	goto	l21134
 15202                           
 15203                           ; BSR set to: 1
 15204                           ;../../VLCBlib_PIC/event_teach.c: 434:                 sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15205   00B16E  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15206   00B172  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15207   00B176  EE20 F001          	lfsr	2,1
 15208   00B17A  51CF               	movf	teachCheckLen@m& (0+255),w,b
 15209   00B17C  26D9               	addwf	fsr2l,f,c
 15210   00B17E  51D0               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15211   00B180  22DA               	addwfc	fsr2h,f,c
 15212   00B182  50DF               	movf	indf2,w,c
 15213   00B184  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15214   00B186  0E04               	movlw	4
 15215   00B188  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15216   00B18A  0E01               	movlw	1
 15217   00B18C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15218   00B18E  0EAF               	movlw	175
 15219   00B190  EC41  F05F         	call	_sendMessage5
 15220   00B194                     l21134:
 15221                           
 15222                           ;../../VLCBlib_PIC/event_teach.c: 436:             return PROCESSED;
 15223   00B194  0E01               	movlw	1
 15224   00B196  0012               	return	
 15225   00B198                     l21138:
 15226                           
 15227                           ; BSR set to: 1
 15228                           ;../../VLCBlib_PIC/event_teach.c: 438:         return NOT_PROCESSED;
 15229   00B198  0E00               	movlw	0
 15230   00B19A  0012               	return	
 15231   00B19C                     l21142:
 15232                           
 15233                           ; BSR set to: 1
 15234                           ;../../VLCBlib_PIC/event_teach.c: 440:     return checkLen(m, needed, SERVICE_ID_OLD_TEA
      +                          CH);
 15235   00B19C  C1CF  F1CB         	movff	teachCheckLen@m,checkLen@m
 15236   00B1A0  C1D0  F1CC         	movff	teachCheckLen@m+1,checkLen@m+1
 15237   00B1A4  C1D1  F1CD         	movff	teachCheckLen@needed,checkLen@needed
 15238   00B1A8  0E04               	movlw	4
 15239   00B1AA  6FCE               	movwf	checkLen@service& (0+255),b
 15240   00B1AC  ECD7  F053         	call	_checkLen	;wreg free
 15241   00B1B0  0012               	return		;funcret
 15242   00B1B2                     __end_of_teachCheckLen:
 15243                           	callstack 0
 15244                           
 15245 ;; *************** function _doRqevn *****************
 15246 ;; Defined at:
 15247 ;;		line 566 in file "../../VLCBlib_PIC/event_teach.c"
 15248 ;; Parameters:    Size  Location     Type
 15249 ;;		None
 15250 ;; Auto vars:     Size  Location     Type
 15251 ;;  i               1    9[BANK1 ] unsigned char 
 15252 ;;  count           1    8[BANK1 ] unsigned char 
 15253 ;; Return value:  Size  Location     Type
 15254 ;;                  1    wreg      void 
 15255 ;; Registers used:
 15256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15257 ;; Tracked objects:
 15258 ;;		On entry : 0/0
 15259 ;;		On exit  : 0/0
 15260 ;;		Unchanged: 0/0
 15261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15263 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15265 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15266 ;;Total ram usage:        2 bytes
 15267 ;; Hardware stack levels used: 1
 15268 ;; Hardware stack levels required when called: 16
 15269 ;; This function calls:
 15270 ;;		_sendMessage3
 15271 ;;		_validStart
 15272 ;; This function is called by:
 15273 ;;		_teachProcessMessage
 15274 ;; This function uses a non-reentrant model
 15275 ;;
 15276                           
 15277                           	psect	text27
 15278   00BBEC                     __ptext27:
 15279                           	callstack 0
 15280   00BBEC                     _doRqevn:
 15281                           	callstack 12
 15282                           
 15283                           ;../../VLCBlib_PIC/event_teach.c: 568:     uint8_t count = 0;
 15284                           
 15285                           ;incstack = 0
 15286   00BBEC  0E00               	movlw	0
 15287   00BBEE  0101               	movlb	1	; () banked
 15288   00BBF0  6FC6               	movwf	doRqevn@count& (0+255),b
 15289                           
 15290                           ;../../VLCBlib_PIC/event_teach.c: 569:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 5
      +                          70:     for (i=0; i<255; i++) {
 15291   00BBF2  0E00               	movlw	0
 15292   00BBF4  6FC7               	movwf	doRqevn@i& (0+255),b
 15293   00BBF6                     l21246:
 15294                           
 15295                           ; BSR set to: 1
 15296                           ;../../VLCBlib_PIC/event_teach.c: 571:         if (validStart(i)) {
 15297   00BBF6  51C7               	movf	doRqevn@i& (0+255),w,b
 15298   00BBF8  EC6A  F05B         	call	_validStart
 15299   00BBFC  0900               	iorlw	0
 15300   00BBFE  B4D8               	btfsc	status,2,c
 15301   00BC00  D002               	goto	l1568
 15302                           
 15303                           ;../../VLCBlib_PIC/event_teach.c: 572:             count++;
 15304   00BC02  0101               	movlb	1	; () banked
 15305   00BC04  2BC6               	incf	doRqevn@count& (0+255),f,b
 15306   00BC06                     l1568:
 15307                           
 15308                           ;../../VLCBlib_PIC/event_teach.c: 574:     }
 15309   00BC06  0101               	movlb	1	; () banked
 15310   00BC08  2BC7               	incf	doRqevn@i& (0+255),f,b
 15311                           
 15312                           ; BSR set to: 1
 15313   00BC0A  29C7               	incf	doRqevn@i& (0+255),w,b
 15314   00BC0C  A4D8               	btfss	status,2,c
 15315   00BC0E  D7F3               	goto	l21246
 15316                           
 15317                           ; BSR set to: 1
 15318                           ;../../VLCBlib_PIC/event_teach.c: 575:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn.bytes
      +                          .lo, count);
 15319   00BC10  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 15320   00BC14  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 15321   00BC18  C1C6  F0A8         	movff	doRqevn@count,sendMessage3@data3
 15322   00BC1C  0E74               	movlw	116
 15323   00BC1E  ECF9  F05E         	call	_sendMessage3
 15324   00BC22  0012               	return		;funcret
 15325   00BC24                     __end_of_doRqevn:
 15326                           	callstack 0
 15327                           
 15328 ;; *************** function _doReval *****************
 15329 ;; Defined at:
 15330 ;;		line 623 in file "../../VLCBlib_PIC/event_teach.c"
 15331 ;; Parameters:    Size  Location     Type
 15332 ;;  enNum           1    wreg     unsigned char 
 15333 ;;  evNum           1   13[BANK1 ] unsigned char 
 15334 ;; Auto vars:     Size  Location     Type
 15335 ;;  enNum           1   16[BANK1 ] unsigned char 
 15336 ;;  evVal           2   17[BANK1 ] int 
 15337 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15338 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15339 ;; Return value:  Size  Location     Type
 15340 ;;                  1    wreg      void 
 15341 ;; Registers used:
 15342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15343 ;; Tracked objects:
 15344 ;;		On entry : 0/0
 15345 ;;		On exit  : 0/0
 15346 ;;		Unchanged: 0/0
 15347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15348 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15349 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15350 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15351 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15352 ;;Total ram usage:        7 bytes
 15353 ;; Hardware stack levels used: 1
 15354 ;; Hardware stack levels required when called: 16
 15355 ;; This function calls:
 15356 ;;		_evtIdxToTableIndex
 15357 ;;		_getEv
 15358 ;;		_numEv
 15359 ;;		_sendMessage3
 15360 ;;		_sendMessage5
 15361 ;;		_validStart
 15362 ;; This function is called by:
 15363 ;;		_teachProcessMessage
 15364 ;; This function uses a non-reentrant model
 15365 ;;
 15366                           
 15367                           	psect	text28
 15368   009398                     __ptext28:
 15369                           	callstack 0
 15370   009398                     _doReval:
 15371                           	callstack 12
 15372                           
 15373                           ;incstack = 0
 15374                           ;doReval@enNum stored from wreg
 15375   009398  0101               	movlb	1	; () banked
 15376   00939A  6FCE               	movwf	doReval@enNum& (0+255),b
 15377                           
 15378                           ;../../VLCBlib_PIC/event_teach.c: 626:     uint8_t evIndex;;../../VLCBlib_PIC/event_teac
      +                          h.c: 627:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15379   00939C  0101               	movlb	1	; () banked
 15380   00939E  51CE               	movf	doReval@enNum& (0+255),w,b
 15381   0093A0  ECE4  F061         	call	_evtIdxToTableIndex
 15382   0093A4  0101               	movlb	1	; () banked
 15383   0093A6  6FD1               	movwf	doReval@tableIndex& (0+255),b
 15384                           
 15385                           ; BSR set to: 1
 15386                           ;../../VLCBlib_PIC/event_teach.c: 629:     if (evNum > 20) {
 15387   0093A8  0E14               	movlw	20
 15388   0093AA  65CB               	cpfsgt	doReval@evNum& (0+255),b
 15389   0093AC  D00B               	goto	l21274
 15390                           
 15391                           ; BSR set to: 1
 15392                           ;../../VLCBlib_PIC/event_teach.c: 630:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 15393   0093AE  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 15394   0093B2  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 15395   0093B6  0E06               	movlw	6
 15396   0093B8  0100               	movlb	0	; () banked
 15397   0093BA  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15398   0093BC  0E6F               	movlw	111
 15399   0093BE  ECF9  F05E         	call	_sendMessage3
 15400   0093C2  0012               	return	
 15401   0093C4                     l21274:
 15402                           
 15403                           ; BSR set to: 1
 15404                           ;../../VLCBlib_PIC/event_teach.c: 634:     evIndex = evNum-1U;
 15405   0093C4  05CB               	decf	doReval@evNum& (0+255),w,b
 15406   0093C6  6FCD               	movwf	doReval@evIndex& (0+255),b
 15407                           
 15408                           ;../../VLCBlib_PIC/event_teach.c: 637:     if (tableIndex < 255) {
 15409   0093C8  29D1               	incf	doReval@tableIndex& (0+255),w,b
 15410   0093CA  B4D8               	btfsc	status,2,c
 15411   0093CC  D039               	goto	l21294
 15412                           
 15413                           ; BSR set to: 1
 15414                           ;../../VLCBlib_PIC/event_teach.c: 638:         if (validStart(tableIndex)) {
 15415   0093CE  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15416   0093D0  EC6A  F05B         	call	_validStart
 15417   0093D4  0900               	iorlw	0
 15418   0093D6  B4D8               	btfsc	status,2,c
 15419   0093D8  D033               	goto	l21294
 15420                           
 15421                           ;../../VLCBlib_PIC/event_teach.c: 639:             int evVal;;../../VLCBlib_PIC/event_te
      +                          ach.c: 640:             if (evNum == 0) {
 15422   0093DA  0101               	movlb	1	; () banked
 15423   0093DC  51CB               	movf	doReval@evNum& (0+255),w,b
 15424   0093DE  A4D8               	btfss	status,2,c
 15425   0093E0  D009               	goto	l21282
 15426                           
 15427                           ; BSR set to: 1
 15428                           ;../../VLCBlib_PIC/event_teach.c: 641:                 evVal = numEv(tableIndex);
 15429   0093E2  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15430   0093E4  EC9D  F044         	call	_numEv
 15431   0093E8  0101               	movlb	1	; () banked
 15432   0093EA  6FCC               	movwf	??_doReval& (0+255),b
 15433   0093EC  51CC               	movf	??_doReval& (0+255),w,b
 15434   0093EE  6FCF               	movwf	doReval@evVal& (0+255),b
 15435   0093F0  6BD0               	clrf	(doReval@evVal+1)& (0+255),b
 15436                           
 15437                           ;../../VLCBlib_PIC/event_teach.c: 642:             } else {
 15438   0093F2  D009               	goto	l21284
 15439   0093F4                     l21282:
 15440                           
 15441                           ; BSR set to: 1
 15442                           ;../../VLCBlib_PIC/event_teach.c: 643:                 evVal = getEv(tableIndex, evIndex
      +                          );
 15443   0093F4  C1CD  F09D         	movff	doReval@evIndex,getEv@evNum
 15444   0093F8  51D1               	movf	doReval@tableIndex& (0+255),w,b
 15445   0093FA  EC24  F03C         	call	_getEv
 15446   0093FE  C09D  F1CF         	movff	?_getEv,doReval@evVal
 15447   009402  C09E  F1D0         	movff	?_getEv+1,doReval@evVal+1
 15448   009406                     l21284:
 15449                           
 15450                           ;../../VLCBlib_PIC/event_teach.c: 645:             if (evVal >= 0) {
 15451   009406  0101               	movlb	1	; () banked
 15452   009408  BFD0               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15453   00940A  D00E               	goto	l21290
 15454                           
 15455                           ; BSR set to: 1
 15456                           ;../../VLCBlib_PIC/event_teach.c: 646:                 sendMessage5(OPC_NEVAL, nn.bytes.
      +                          hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15457   00940C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15458   009410  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15459   009414  C1CE  F1C8         	movff	doReval@enNum,sendMessage5@data3
 15460   009418  C1CB  F1C9         	movff	doReval@evNum,sendMessage5@data4
 15461   00941C  C1CF  F1CA         	movff	doReval@evVal,sendMessage5@data5
 15462   009420  0EB5               	movlw	181
 15463   009422  EC41  F05F         	call	_sendMessage5
 15464   009426  0012               	return	
 15465   009428                     l21290:
 15466                           
 15467                           ; BSR set to: 1
 15468                           ;../../VLCBlib_PIC/event_teach.c: 650:             sendMessage3(OPC_CMDERR, nn.bytes.hi,
      +                           nn.bytes.lo, (uint8_t)(-evVal));
 15469   009428  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 15470   00942C  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 15471   009430  51CF               	movf	doReval@evVal& (0+255),w,b
 15472   009432  0800               	sublw	0
 15473   009434  0100               	movlb	0	; () banked
 15474   009436  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15475   009438  0E6F               	movlw	111
 15476   00943A  ECF9  F05E         	call	_sendMessage3
 15477   00943E  0012               	return	
 15478   009440                     l21294:
 15479                           
 15480                           ;../../VLCBlib_PIC/event_teach.c: 654:     sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.byte
      +                          s.lo, CMDERR_INVALID_EVENT);
 15481   009440  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 15482   009444  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 15483   009448  0E07               	movlw	7
 15484   00944A  0100               	movlb	0	; () banked
 15485   00944C  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15486   00944E  0E6F               	movlw	111
 15487   009450  ECF9  F05E         	call	_sendMessage3
 15488   009454  0012               	return		;funcret
 15489   009456                     __end_of_doReval:
 15490                           	callstack 0
 15491                           
 15492 ;; *************** function _doReqev *****************
 15493 ;; Defined at:
 15494 ;;		line 681 in file "../../VLCBlib_PIC/event_teach.c"
 15495 ;; Parameters:    Size  Location     Type
 15496 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15497 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15498 ;;  evNum           1   18[BANK1 ] unsigned char 
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;  evVal           2   19[BANK1 ] short 
 15501 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15502 ;; Return value:  Size  Location     Type
 15503 ;;                  1    wreg      void 
 15504 ;; Registers used:
 15505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15506 ;; Tracked objects:
 15507 ;;		On entry : 0/0
 15508 ;;		On exit  : 0/0
 15509 ;;		Unchanged: 0/0
 15510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15511 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15512 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15514 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15515 ;;Total ram usage:        8 bytes
 15516 ;; Hardware stack levels used: 1
 15517 ;; Hardware stack levels required when called: 16
 15518 ;; This function calls:
 15519 ;;		_findEvent
 15520 ;;		_findServiceIndex
 15521 ;;		_getEv
 15522 ;;		_numEv
 15523 ;;		_sendMessage3
 15524 ;;		_sendMessage5
 15525 ;;		_sendMessage6
 15526 ;;		_startTimedResponse
 15527 ;; This function is called by:
 15528 ;;		_teachProcessMessage
 15529 ;; This function uses a non-reentrant model
 15530 ;;
 15531                           
 15532                           	psect	text29
 15533   007C46                     __ptext29:
 15534                           	callstack 0
 15535   007C46                     _doReqev:
 15536                           	callstack 12
 15537                           
 15538                           ;../../VLCBlib_PIC/event_teach.c: 682:     int16_t evVal;;../../VLCBlib_PIC/event_teach.
      +                          c: 684:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15539                           
 15540                           ;incstack = 0
 15541   007C46  C1CC  F1BE         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15542   007C4A  C1CD  F1BF         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15543   007C4E  C1CE  F1C0         	movff	doReqev@eventNumber,findEvent@eventNumber
 15544   007C52  C1CF  F1C1         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15545   007C56  EC6D  F051         	call	_findEvent	;wreg free
 15546   007C5A  0101               	movlb	1	; () banked
 15547   007C5C  6FD3               	movwf	doReqev@tableIndex& (0+255),b
 15548                           
 15549                           ; BSR set to: 1
 15550                           ;../../VLCBlib_PIC/event_teach.c: 685:     if (tableIndex == 0xff) {
 15551   007C5E  29D3               	incf	doReqev@tableIndex& (0+255),w,b
 15552   007C60  A4D8               	btfss	status,2,c
 15553   007C62  D019               	goto	l21188
 15554                           
 15555                           ; BSR set to: 1
 15556                           ;../../VLCBlib_PIC/event_teach.c: 686:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INVALID_EVENT);
 15557   007C64  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 15558   007C68  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 15559   007C6C  0E07               	movlw	7
 15560   007C6E  0100               	movlb	0	; () banked
 15561   007C70  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15562   007C72  0E6F               	movlw	111
 15563   007C74  ECF9  F05E         	call	_sendMessage3
 15564                           
 15565                           ;../../VLCBlib_PIC/event_teach.c: 687:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15566   007C78  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15567   007C7C  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15568   007C80  0EB2               	movlw	178
 15569   007C82  0101               	movlb	1	; () banked
 15570   007C84  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15571   007C86  0E04               	movlw	4
 15572   007C88  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15573   007C8A  0E07               	movlw	7
 15574   007C8C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15575   007C8E  0EAF               	movlw	175
 15576   007C90  EC41  F05F         	call	_sendMessage5
 15577   007C94  0012               	return	
 15578   007C96                     l21188:
 15579                           
 15580                           ; BSR set to: 1
 15581                           ;../../VLCBlib_PIC/event_teach.c: 690:     if (evNum > 20) {
 15582   007C96  0E14               	movlw	20
 15583   007C98  65D0               	cpfsgt	doReqev@evNum& (0+255),b
 15584   007C9A  D019               	goto	l21194
 15585                           
 15586                           ; BSR set to: 1
 15587                           ;../../VLCBlib_PIC/event_teach.c: 691:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 15588   007C9C  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 15589   007CA0  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 15590   007CA4  0E06               	movlw	6
 15591   007CA6  0100               	movlb	0	; () banked
 15592   007CA8  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15593   007CAA  0E6F               	movlw	111
 15594   007CAC  ECF9  F05E         	call	_sendMessage3
 15595                           
 15596                           ;../../VLCBlib_PIC/event_teach.c: 692:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15597   007CB0  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15598   007CB4  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15599   007CB8  0EB2               	movlw	178
 15600   007CBA  0101               	movlb	1	; () banked
 15601   007CBC  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15602   007CBE  0E04               	movlw	4
 15603   007CC0  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15604   007CC2  0E06               	movlw	6
 15605   007CC4  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15606   007CC6  0EAF               	movlw	175
 15607   007CC8  EC41  F05F         	call	_sendMessage5
 15608   007CCC  0012               	return	
 15609   007CCE                     l21194:
 15610                           
 15611                           ; BSR set to: 1
 15612                           ;../../VLCBlib_PIC/event_teach.c: 695:     if (evNum == 0) {
 15613   007CCE  51D0               	movf	doReqev@evNum& (0+255),w,b
 15614   007CD0  A4D8               	btfss	status,2,c
 15615   007CD2  D020               	goto	l21204
 15616                           
 15617                           ; BSR set to: 1
 15618                           ;../../VLCBlib_PIC/event_teach.c: 696:         sendMessage6(OPC_EVANS, nodeNumber>>8, no
      +                          deNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15619   007CD4  51CD               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15620   007CD6  6FC6               	movwf	sendMessage6@data1& (0+255),b
 15621   007CD8  C1CC  F1C7         	movff	doReqev@nodeNumber,sendMessage6@data2
 15622   007CDC  51CF               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15623   007CDE  6FC8               	movwf	sendMessage6@data3& (0+255),b
 15624   007CE0  C1CE  F1C9         	movff	doReqev@eventNumber,sendMessage6@data4
 15625   007CE4  0E00               	movlw	0
 15626   007CE6  6FCA               	movwf	sendMessage6@data5& (0+255),b
 15627   007CE8  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 15628   007CEA  EC9D  F044         	call	_numEv
 15629   007CEE  0101               	movlb	1	; () banked
 15630   007CF0  6FCB               	movwf	sendMessage6@data6& (0+255),b
 15631   007CF2  0ED3               	movlw	211
 15632   007CF4  ECE1  F05E         	call	_sendMessage6
 15633                           
 15634                           ;../../VLCBlib_PIC/event_teach.c: 699:         startTimedResponse(tableIndex, findServic
      +                          eIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15635   007CF8  0E04               	movlw	4
 15636   007CFA  ECFF  F055         	call	_findServiceIndex
 15637   007CFE  0100               	movlb	0	; () banked
 15638   007D00  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15639   007D02  0EF2               	movlw	low _reqevCallback
 15640   007D04  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15641   007D06  0E9F               	movlw	high _reqevCallback
 15642   007D08  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15643   007D0A  0101               	movlb	1	; () banked
 15644   007D0C  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 15645   007D0E  EC22  F05D         	call	_startTimedResponse
 15646   007D12  0012               	return	
 15647   007D14                     l21204:
 15648                           
 15649                           ; BSR set to: 1
 15650                           ;../../VLCBlib_PIC/event_teach.c: 702:         evVal = getEv(tableIndex, evNum-1);
 15651   007D14  05D0               	decf	doReqev@evNum& (0+255),w,b
 15652   007D16  0100               	movlb	0	; () banked
 15653   007D18  6F9D               	movwf	getEv@evNum& (0+255),b
 15654   007D1A  0101               	movlb	1	; () banked
 15655   007D1C  51D3               	movf	doReqev@tableIndex& (0+255),w,b
 15656   007D1E  EC24  F03C         	call	_getEv
 15657   007D22  C09D  F1D1         	movff	?_getEv,doReqev@evVal
 15658   007D26  C09E  F1D2         	movff	?_getEv+1,doReqev@evVal+1
 15659                           
 15660                           ;../../VLCBlib_PIC/event_teach.c: 704:     if (evVal < 0) {
 15661   007D2A  0101               	movlb	1	; () banked
 15662   007D2C  AFD2               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15663   007D2E  D01B               	goto	l21212
 15664                           
 15665                           ; BSR set to: 1
 15666                           ;../../VLCBlib_PIC/event_teach.c: 706:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, (uint8_t)(-evVal));
 15667   007D30  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 15668   007D34  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 15669   007D38  51D1               	movf	doReqev@evVal& (0+255),w,b
 15670   007D3A  0800               	sublw	0
 15671   007D3C  0100               	movlb	0	; () banked
 15672   007D3E  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15673   007D40  0E6F               	movlw	111
 15674   007D42  ECF9  F05E         	call	_sendMessage3
 15675                           
 15676                           ;../../VLCBlib_PIC/event_teach.c: 707:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15677   007D46  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15678   007D4A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15679   007D4E  0EB2               	movlw	178
 15680   007D50  0101               	movlb	1	; () banked
 15681   007D52  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15682   007D54  0E04               	movlw	4
 15683   007D56  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15684   007D58  51D1               	movf	doReqev@evVal& (0+255),w,b
 15685   007D5A  0800               	sublw	0
 15686   007D5C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15687   007D5E  0EAF               	movlw	175
 15688   007D60  EC41  F05F         	call	_sendMessage5
 15689   007D64  0012               	return	
 15690   007D66                     l21212:
 15691                           
 15692                           ; BSR set to: 1
 15693                           ;../../VLCBlib_PIC/event_teach.c: 711:     sendMessage6(OPC_EVANS, nodeNumber>>8, nodeNu
      +                          mber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15694   007D66  51CD               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15695   007D68  6FC6               	movwf	sendMessage6@data1& (0+255),b
 15696   007D6A  C1CC  F1C7         	movff	doReqev@nodeNumber,sendMessage6@data2
 15697   007D6E  51CF               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15698   007D70  6FC8               	movwf	sendMessage6@data3& (0+255),b
 15699   007D72  C1CE  F1C9         	movff	doReqev@eventNumber,sendMessage6@data4
 15700   007D76  C1D0  F1CA         	movff	doReqev@evNum,sendMessage6@data5
 15701   007D7A  C1D1  F1CB         	movff	doReqev@evVal,sendMessage6@data6
 15702   007D7E  0ED3               	movlw	211
 15703   007D80  ECE1  F05E         	call	_sendMessage6
 15704   007D84  0012               	return		;funcret
 15705   007D86                     __end_of_doReqev:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function _doNnevn *****************
 15709 ;; Defined at:
 15710 ;;		line 491 in file "../../VLCBlib_PIC/event_teach.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;  f               1   12[BANK1 ] struct .
 15715 ;;  i               1   14[BANK1 ] unsigned char 
 15716 ;;  count           1   13[BANK1 ] unsigned char 
 15717 ;; Return value:  Size  Location     Type
 15718 ;;                  1    wreg      void 
 15719 ;; Registers used:
 15720 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15721 ;; Tracked objects:
 15722 ;;		On entry : 0/0
 15723 ;;		On exit  : 0/0
 15724 ;;		Unchanged: 0/0
 15725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15727 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15728 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15729 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15730 ;;Total ram usage:        7 bytes
 15731 ;; Hardware stack levels used: 1
 15732 ;; Hardware stack levels required when called: 16
 15733 ;; This function calls:
 15734 ;;		_readNVM
 15735 ;;		_sendMessage3
 15736 ;; This function is called by:
 15737 ;;		_teachProcessMessage
 15738 ;; This function uses a non-reentrant model
 15739 ;;
 15740                           
 15741                           	psect	text30
 15742   00ADC4                     __ptext30:
 15743                           	callstack 0
 15744   00ADC4                     _doNnevn:
 15745                           	callstack 12
 15746                           
 15747                           ;../../VLCBlib_PIC/event_teach.c: 493:     uint8_t count = 0;
 15748                           
 15749                           ;incstack = 0
 15750   00ADC4  0E00               	movlw	0
 15751   00ADC6  0101               	movlb	1	; () banked
 15752   00ADC8  6FCB               	movwf	doNnevn@count& (0+255),b
 15753                           
 15754                           ;../../VLCBlib_PIC/event_teach.c: 494:     uint8_t i;;../../VLCBlib_PIC/event_teach.c: 4
      +                          95:     for (i=0; i<255; i++) {
 15755   00ADCA  0E00               	movlw	0
 15756   00ADCC  6FCC               	movwf	doNnevn@i& (0+255),b
 15757   00ADCE                     l21230:
 15758                           
 15759                           ; BSR set to: 1
 15760                           ;../../VLCBlib_PIC/event_teach.c: 496:         EventTableFlags f;;../../VLCBlib_PIC/even
      +                          t_teach.c: 497:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*i+0);
 15761   00ADCE  51CC               	movf	doNnevn@i& (0+255),w,b
 15762   00ADD0  6FC6               	movwf	??_doNnevn& (0+255),b
 15763   00ADD2  6BC7               	clrf	(??_doNnevn+1)& (0+255),b
 15764   00ADD4  3BC6               	swapf	??_doNnevn& (0+255),f,b
 15765   00ADD6  3BC7               	swapf	(??_doNnevn+1)& (0+255),f,b
 15766   00ADD8  0EF0               	movlw	240
 15767   00ADDA  17C7               	andwf	(??_doNnevn+1)& (0+255),f,b
 15768   00ADDC  51C6               	movf	??_doNnevn& (0+255),w,b
 15769   00ADDE  0B0F               	andlw	15
 15770   00ADE0  13C7               	iorwf	(??_doNnevn+1)& (0+255),f,b
 15771   00ADE2  0EF0               	movlw	240
 15772   00ADE4  17C6               	andwf	??_doNnevn& (0+255),f,b
 15773   00ADE6  0E80               	movlw	128
 15774   00ADE8  25C6               	addwf	??_doNnevn& (0+255),w,b
 15775   00ADEA  6FC8               	movwf	(??_doNnevn+2)& (0+255),b
 15776   00ADEC  0EEF               	movlw	239
 15777   00ADEE  21C7               	addwfc	(??_doNnevn+1)& (0+255),w,b
 15778   00ADF0  6FC9               	movwf	(??_doNnevn+3)& (0+255),b
 15779   00ADF2  C1C8  F091         	movff	??_doNnevn+2,readNVM@index
 15780   00ADF6  C1C9  F092         	movff	??_doNnevn+3,readNVM@index+1
 15781   00ADFA  0100               	movlb	0	; () banked
 15782   00ADFC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 15783   00ADFE  0E01               	movlw	1
 15784   00AE00  ECD9  F058         	call	_readNVM
 15785   00AE04  0100               	movlb	0	; () banked
 15786   00AE06  5191               	movf	?_readNVM& (0+255),w,b
 15787   00AE08  0101               	movlb	1	; () banked
 15788   00AE0A  6FCA               	movwf	doNnevn@f& (0+255),b
 15789                           
 15790                           ; BSR set to: 1
 15791                           ;../../VLCBlib_PIC/event_teach.c: 498:         if (f.freeEntry) {
 15792   00AE0C  BFCA               	btfsc	doNnevn@f& (0+255),7,b
 15793                           
 15794                           ; BSR set to: 1
 15795                           ;../../VLCBlib_PIC/event_teach.c: 499:             count++;
 15796   00AE0E  2BCB               	incf	doNnevn@count& (0+255),f,b
 15797                           
 15798                           ; BSR set to: 1
 15799                           ;../../VLCBlib_PIC/event_teach.c: 501:     }
 15800                           
 15801                           ;../../VLCBlib_PIC/event_teach.c: 500:         }
 15802   00AE10  2BCC               	incf	doNnevn@i& (0+255),f,b
 15803                           
 15804                           ; BSR set to: 1
 15805   00AE12  29CC               	incf	doNnevn@i& (0+255),w,b
 15806   00AE14  A4D8               	btfss	status,2,c
 15807   00AE16  D7DB               	goto	l21230
 15808                           
 15809                           ; BSR set to: 1
 15810                           ;../../VLCBlib_PIC/event_teach.c: 502:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn.bytes
      +                          .lo, count);
 15811   00AE18  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 15812   00AE1C  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 15813   00AE20  C1CB  F0A8         	movff	doNnevn@count,sendMessage3@data3
 15814   00AE24  0E70               	movlw	112
 15815   00AE26  ECF9  F05E         	call	_sendMessage3
 15816   00AE2A  0012               	return		;funcret
 15817   00AE2C                     __end_of_doNnevn:
 15818                           	callstack 0
 15819                           
 15820 ;; *************** function _doNnclr *****************
 15821 ;; Defined at:
 15822 ;;		line 581 in file "../../VLCBlib_PIC/event_teach.c"
 15823 ;; Parameters:    Size  Location     Type
 15824 ;;		None
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;		None
 15827 ;; Return value:  Size  Location     Type
 15828 ;;                  1    wreg      void 
 15829 ;; Registers used:
 15830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15831 ;; Tracked objects:
 15832 ;;		On entry : 0/0
 15833 ;;		On exit  : 0/0
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15840 ;;Total ram usage:        0 bytes
 15841 ;; Hardware stack levels used: 1
 15842 ;; Hardware stack levels required when called: 19
 15843 ;; This function calls:
 15844 ;;		_clearAllEvents
 15845 ;;		_sendMessage2
 15846 ;;		_sendMessage5
 15847 ;; This function is called by:
 15848 ;;		_teachProcessMessage
 15849 ;; This function uses a non-reentrant model
 15850 ;;
 15851                           
 15852                           	psect	text31
 15853   00BD62                     __ptext31:
 15854                           	callstack 0
 15855   00BD62                     _doNnclr:
 15856                           	callstack 9
 15857                           
 15858                           ;../../VLCBlib_PIC/event_teach.c: 582:     clearAllEvents();
 15859                           
 15860                           ;incstack = 0
 15861   00BD62  EC9C  F05A         	call	_clearAllEvents	;wreg free
 15862                           
 15863                           ;../../VLCBlib_PIC/event_teach.c: 583:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 15864   00BD66  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 15865   00BD6A  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 15866   00BD6E  0E59               	movlw	89
 15867   00BD70  EC11  F05F         	call	_sendMessage2
 15868                           
 15869                           ;../../VLCBlib_PIC/event_teach.c: 584:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 15870   00BD74  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 15871   00BD78  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 15872   00BD7C  0EB2               	movlw	178
 15873   00BD7E  0101               	movlb	1	; () banked
 15874   00BD80  6FC8               	movwf	sendMessage5@data3& (0+255),b
 15875   00BD82  0E04               	movlw	4
 15876   00BD84  6FC9               	movwf	sendMessage5@data4& (0+255),b
 15877   00BD86  0E00               	movlw	0
 15878   00BD88  6FCA               	movwf	sendMessage5@data5& (0+255),b
 15879   00BD8A  0EAF               	movlw	175
 15880   00BD8C  EC41  F05F         	call	_sendMessage5
 15881   00BD90  0012               	return		;funcret
 15882   00BD92                     __end_of_doNnclr:
 15883                           	callstack 0
 15884                           
 15885 ;; *************** function _doNerd *****************
 15886 ;; Defined at:
 15887 ;;		line 510 in file "../../VLCBlib_PIC/event_teach.c"
 15888 ;; Parameters:    Size  Location     Type
 15889 ;;		None
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;		None
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      void 
 15894 ;; Registers used:
 15895 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15905 ;;Total ram usage:        0 bytes
 15906 ;; Hardware stack levels used: 1
 15907 ;; Hardware stack levels required when called: 13
 15908 ;; This function calls:
 15909 ;;		_findServiceIndex
 15910 ;;		_startTimedResponse
 15911 ;; This function is called by:
 15912 ;;		_teachProcessMessage
 15913 ;; This function uses a non-reentrant model
 15914 ;;
 15915                           
 15916                           	psect	text32
 15917   00C29C                     __ptext32:
 15918                           	callstack 0
 15919   00C29C                     _doNerd:
 15920                           	callstack 15
 15921                           
 15922                           ;../../VLCBlib_PIC/event_teach.c: 511:     startTimedResponse(2, findServiceIndex(SERVIC
      +                          E_ID_OLD_TEACH), nerdCallback);
 15923                           
 15924                           ;incstack = 0
 15925   00C29C  0E04               	movlw	4
 15926   00C29E  ECFF  F055         	call	_findServiceIndex
 15927   00C2A2  0100               	movlb	0	; () banked
 15928   00C2A4  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15929   00C2A6  0EFA               	movlw	low _nerdCallback
 15930   00C2A8  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15931   00C2AA  0EAE               	movlw	high _nerdCallback
 15932   00C2AC  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15933   00C2AE  0E02               	movlw	2
 15934   00C2B0  EC22  F05D         	call	_startTimedResponse
 15935   00C2B4  0012               	return		;funcret
 15936   00C2B6                     __end_of_doNerd:
 15937                           	callstack 0
 15938                           
 15939 ;; *************** function _doNenrd *****************
 15940 ;; Defined at:
 15941 ;;		line 542 in file "../../VLCBlib_PIC/event_teach.c"
 15942 ;; Parameters:    Size  Location     Type
 15943 ;;  index           1    wreg     unsigned char 
 15944 ;; Auto vars:     Size  Location     Type
 15945 ;;  index           1   13[BANK1 ] unsigned char 
 15946 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15947 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15948 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 15949 ;; Return value:  Size  Location     Type
 15950 ;;                  1    wreg      void 
 15951 ;; Registers used:
 15952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15953 ;; Tracked objects:
 15954 ;;		On entry : 0/0
 15955 ;;		On exit  : 0/0
 15956 ;;		Unchanged: 0/0
 15957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15959 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15961 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15962 ;;Total ram usage:        6 bytes
 15963 ;; Hardware stack levels used: 1
 15964 ;; Hardware stack levels required when called: 16
 15965 ;; This function calls:
 15966 ;;		_evtIdxToTableIndex
 15967 ;;		_getEN
 15968 ;;		_getNN
 15969 ;;		_sendMessage3
 15970 ;;		_sendMessage5
 15971 ;;		_validStart
 15972 ;; This function is called by:
 15973 ;;		_teachProcessMessage
 15974 ;; This function uses a non-reentrant model
 15975 ;;
 15976                           
 15977                           	psect	text33
 15978   00AD54                     __ptext33:
 15979                           	callstack 0
 15980   00AD54                     _doNenrd:
 15981                           	callstack 12
 15982                           
 15983                           ;incstack = 0
 15984                           ;doNenrd@index stored from wreg
 15985   00AD54  0101               	movlb	1	; () banked
 15986   00AD56  6FCB               	movwf	doNenrd@index& (0+255),b
 15987                           
 15988                           ;../../VLCBlib_PIC/event_teach.c: 543:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 544:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_teach.c: 546:
      +                               tableIndex = evtIdxToTableIndex(index);
 15989   00AD58  0101               	movlb	1	; () banked
 15990   00AD5A  51CB               	movf	doNenrd@index& (0+255),w,b
 15991   00AD5C  ECE4  F061         	call	_evtIdxToTableIndex
 15992   00AD60  0101               	movlb	1	; () banked
 15993   00AD62  6FD0               	movwf	doNenrd@tableIndex& (0+255),b
 15994                           
 15995                           ; BSR set to: 1
 15996                           ;../../VLCBlib_PIC/event_teach.c: 548:     if ( ! validStart(tableIndex)) {
 15997   00AD64  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 15998   00AD66  EC6A  F05B         	call	_validStart
 15999   00AD6A  0900               	iorlw	0
 16000   00AD6C  A4D8               	btfss	status,2,c
 16001   00AD6E  D00B               	goto	l21262
 16002                           
 16003                           ;../../VLCBlib_PIC/event_teach.c: 549:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EN_IDX);
 16004   00AD70  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 16005   00AD74  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 16006   00AD78  0E08               	movlw	8
 16007   00AD7A  0100               	movlb	0	; () banked
 16008   00AD7C  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16009   00AD7E  0E6F               	movlw	111
 16010   00AD80  ECF9  F05E         	call	_sendMessage3
 16011   00AD84  0012               	return	
 16012   00AD86                     l21262:
 16013                           
 16014                           ;../../VLCBlib_PIC/event_teach.c: 555:     nodeNumber = getNN(tableIndex);
 16015   00AD86  0101               	movlb	1	; () banked
 16016   00AD88  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 16017   00AD8A  EC6B  F049         	call	_getNN
 16018   00AD8E  C097  F1CC         	movff	?_getNN,doNenrd@nodeNumber
 16019   00AD92  C098  F1CD         	movff	?_getNN+1,doNenrd@nodeNumber+1
 16020                           
 16021                           ;../../VLCBlib_PIC/event_teach.c: 556:     eventNumber = getEN(tableIndex);
 16022   00AD96  0101               	movlb	1	; () banked
 16023   00AD98  51D0               	movf	doNenrd@tableIndex& (0+255),w,b
 16024   00AD9A  EC4D  F055         	call	_getEN
 16025   00AD9E  C097  F1CE         	movff	?_getEN,doNenrd@eventNumber
 16026   00ADA2  C098  F1CF         	movff	?_getEN+1,doNenrd@eventNumber+1
 16027                           
 16028                           ;../../VLCBlib_PIC/event_teach.c: 557:     sendMessage5(OPC_ENRSP, nodeNumber>>8, nodeNu
      +                          mber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 16029   00ADA6  0101               	movlb	1	; () banked
 16030   00ADA8  51CD               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 16031   00ADAA  6FC6               	movwf	sendMessage5@data1& (0+255),b
 16032   00ADAC  C1CC  F1C7         	movff	doNenrd@nodeNumber,sendMessage5@data2
 16033   00ADB0  51CF               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 16034   00ADB2  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16035   00ADB4  C1CE  F1C9         	movff	doNenrd@eventNumber,sendMessage5@data4
 16036   00ADB8  C1CB  F1CA         	movff	doNenrd@index,sendMessage5@data5
 16037   00ADBC  0EF2               	movlw	242
 16038   00ADBE  EC41  F05F         	call	_sendMessage5
 16039   00ADC2  0012               	return		;funcret
 16040   00ADC4                     __end_of_doNenrd:
 16041                           	callstack 0
 16042                           
 16043 ;; *************** function _evtIdxToTableIndex *****************
 16044 ;; Defined at:
 16045 ;;		line 1152 in file "../../VLCBlib_PIC/event_teach.c"
 16046 ;; Parameters:    Size  Location     Type
 16047 ;;  evtIdx          1    wreg     unsigned char 
 16048 ;; Auto vars:     Size  Location     Type
 16049 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 16050 ;; Return value:  Size  Location     Type
 16051 ;;                  1    wreg      unsigned char 
 16052 ;; Registers used:
 16053 ;;		wreg, status,2, status,0
 16054 ;; Tracked objects:
 16055 ;;		On entry : 0/0
 16056 ;;		On exit  : 0/0
 16057 ;;		Unchanged: 0/0
 16058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16062 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16063 ;;Total ram usage:        1 bytes
 16064 ;; Hardware stack levels used: 1
 16065 ;; Hardware stack levels required when called: 12
 16066 ;; This function calls:
 16067 ;;		Nothing
 16068 ;; This function is called by:
 16069 ;;		_doNenrd
 16070 ;;		_doReval
 16071 ;; This function uses a non-reentrant model
 16072 ;;
 16073                           
 16074                           	psect	text34
 16075   00C3C8                     __ptext34:
 16076                           	callstack 0
 16077   00C3C8                     _evtIdxToTableIndex:
 16078                           	callstack 15
 16079                           
 16080                           ;incstack = 0
 16081                           ;evtIdxToTableIndex@evtIdx stored from wreg
 16082   00C3C8  0100               	movlb	0	; () banked
 16083   00C3CA  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 16084                           
 16085                           ;../../VLCBlib_PIC/event_teach.c: 1153:     return evtIdx - 1;
 16086   00C3CC  0100               	movlb	0	; () banked
 16087   00C3CE  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 16088                           
 16089                           ; BSR set to: 0
 16090   00C3D0  0012               	return		;funcret
 16091   00C3D2                     __end_of_evtIdxToTableIndex:
 16092                           	callstack 0
 16093                           
 16094 ;; *************** function _doEvuln *****************
 16095 ;; Defined at:
 16096 ;;		line 662 in file "../../VLCBlib_PIC/event_teach.c"
 16097 ;; Parameters:    Size  Location     Type
 16098 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 16099 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 16100 ;; Auto vars:     Size  Location     Type
 16101 ;;  result          1   24[BANK1 ] unsigned char 
 16102 ;; Return value:  Size  Location     Type
 16103 ;;                  1    wreg      void 
 16104 ;; Registers used:
 16105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16106 ;; Tracked objects:
 16107 ;;		On entry : 0/0
 16108 ;;		On exit  : 0/0
 16109 ;;		Unchanged: 0/0
 16110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16111 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16112 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16114 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16115 ;;Total ram usage:        5 bytes
 16116 ;; Hardware stack levels used: 1
 16117 ;; Hardware stack levels required when called: 20
 16118 ;; This function calls:
 16119 ;;		_removeEvent
 16120 ;;		_sendMessage2
 16121 ;;		_sendMessage3
 16122 ;;		_sendMessage5
 16123 ;; This function is called by:
 16124 ;;		_teachProcessMessage
 16125 ;; This function uses a non-reentrant model
 16126 ;;
 16127                           
 16128                           	psect	text35
 16129   00AA20                     __ptext35:
 16130                           	callstack 0
 16131   00AA20                     _doEvuln:
 16132                           	callstack 8
 16133                           
 16134                           ;../../VLCBlib_PIC/event_teach.c: 663:     uint8_t result;;../../VLCBlib_PIC/event_teach
      +                          .c: 664:     result = removeEvent(nodeNumber, eventNumber);
 16135                           
 16136                           ; BSR set to: 0
 16137                           ;incstack = 0
 16138   00AA20  C1D2  F1CD         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16139   00AA24  C1D3  F1CE         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16140   00AA28  C1D4  F1CF         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16141   00AA2C  C1D5  F1D0         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16142   00AA30  EC0E  F060         	call	_removeEvent	;wreg free
 16143   00AA34  0101               	movlb	1	; () banked
 16144   00AA36  6FD6               	movwf	doEvuln@result& (0+255),b
 16145                           
 16146                           ; BSR set to: 1
 16147                           ;../../VLCBlib_PIC/event_teach.c: 665:     if (result) {
 16148   00AA38  51D6               	movf	doEvuln@result& (0+255),w,b
 16149   00AA3A  B4D8               	btfsc	status,2,c
 16150   00AA3C  D018               	goto	l21178
 16151                           
 16152                           ; BSR set to: 1
 16153                           ;../../VLCBlib_PIC/event_teach.c: 666:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, result);
 16154   00AA3E  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 16155   00AA42  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 16156   00AA46  C1D6  F0A8         	movff	doEvuln@result,sendMessage3@data3
 16157   00AA4A  0E6F               	movlw	111
 16158   00AA4C  ECF9  F05E         	call	_sendMessage3
 16159                           
 16160                           ;../../VLCBlib_PIC/event_teach.c: 667:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16161   00AA50  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16162   00AA54  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16163   00AA58  0E95               	movlw	149
 16164   00AA5A  0101               	movlb	1	; () banked
 16165   00AA5C  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16166   00AA5E  0E04               	movlw	4
 16167   00AA60  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16168   00AA62  C1D6  F1CA         	movff	doEvuln@result,sendMessage5@data5
 16169   00AA66  0EAF               	movlw	175
 16170   00AA68  EC41  F05F         	call	_sendMessage5
 16171   00AA6C  0012               	return	
 16172   00AA6E                     l21178:
 16173                           
 16174                           ; BSR set to: 1
 16175                           ;../../VLCBlib_PIC/event_teach.c: 671:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 16176   00AA6E  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 16177   00AA72  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 16178   00AA76  0E59               	movlw	89
 16179   00AA78  EC11  F05F         	call	_sendMessage2
 16180                           
 16181                           ;../../VLCBlib_PIC/event_teach.c: 672:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16182   00AA7C  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16183   00AA80  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16184   00AA84  0EB2               	movlw	178
 16185   00AA86  0101               	movlb	1	; () banked
 16186   00AA88  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16187   00AA8A  0E04               	movlw	4
 16188   00AA8C  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16189   00AA8E  0E00               	movlw	0
 16190   00AA90  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16191   00AA92  0EAF               	movlw	175
 16192   00AA94  EC41  F05F         	call	_sendMessage5
 16193   00AA98  0012               	return		;funcret
 16194   00AA9A                     __end_of_doEvuln:
 16195                           	callstack 0
 16196                           
 16197 ;; *************** function _removeEvent *****************
 16198 ;; Defined at:
 16199 ;;		line 748 in file "../../VLCBlib_PIC/event_teach.c"
 16200 ;; Parameters:    Size  Location     Type
 16201 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16202 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16203 ;; Auto vars:     Size  Location     Type
 16204 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16205 ;; Return value:  Size  Location     Type
 16206 ;;                  1    wreg      unsigned char 
 16207 ;; Registers used:
 16208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16209 ;; Tracked objects:
 16210 ;;		On entry : 0/0
 16211 ;;		On exit  : 0/0
 16212 ;;		Unchanged: 0/0
 16213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16214 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16215 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16217 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16218 ;;Total ram usage:        5 bytes
 16219 ;; Hardware stack levels used: 1
 16220 ;; Hardware stack levels required when called: 19
 16221 ;; This function calls:
 16222 ;;		_findEvent
 16223 ;;		_removeTableEntry
 16224 ;; This function is called by:
 16225 ;;		_doEvuln
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           	psect	text36
 16230   00C01C                     __ptext36:
 16231                           	callstack 0
 16232   00C01C                     _removeEvent:
 16233                           	callstack 8
 16234                           
 16235                           ;../../VLCBlib_PIC/event_teach.c: 750:     uint8_t tableIndex = findEvent(nodeNumber, ev
      +                          entNumber);
 16236                           
 16237                           ;incstack = 0
 16238   00C01C  C1CD  F1BE         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16239   00C020  C1CE  F1BF         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16240   00C024  C1CF  F1C0         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16241   00C028  C1D0  F1C1         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16242   00C02C  EC6D  F051         	call	_findEvent	;wreg free
 16243   00C030  0101               	movlb	1	; () banked
 16244   00C032  6FD1               	movwf	removeEvent@tableIndex& (0+255),b
 16245                           
 16246                           ; BSR set to: 1
 16247                           ;../../VLCBlib_PIC/event_teach.c: 751:     if (tableIndex == 0xff) return CMDERR_INVALID
      +                          _EVENT;
 16248   00C034  29D1               	incf	removeEvent@tableIndex& (0+255),w,b
 16249   00C036  A4D8               	btfss	status,2,c
 16250   00C038  D002               	goto	l20108
 16251                           
 16252                           ; BSR set to: 1
 16253   00C03A  0E07               	movlw	7
 16254   00C03C  0012               	return	
 16255   00C03E                     l20108:
 16256                           
 16257                           ; BSR set to: 1
 16258                           ;../../VLCBlib_PIC/event_teach.c: 753:     return removeTableEntry(tableIndex);
 16259   00C03E  51D1               	movf	removeEvent@tableIndex& (0+255),w,b
 16260   00C040  ECCF  F03C         	call	_removeTableEntry
 16261   00C044  0012               	return		;funcret
 16262   00C046                     __end_of_removeEvent:
 16263                           	callstack 0
 16264                           
 16265 ;; *************** function _doEvlrn *****************
 16266 ;; Defined at:
 16267 ;;		line 596 in file "../../VLCBlib_PIC/event_teach.c"
 16268 ;; Parameters:    Size  Location     Type
 16269 ;;  nodeNumber      2   51[BANK1 ] unsigned short 
 16270 ;;  eventNumber     2   53[BANK1 ] unsigned short 
 16271 ;;  evNum           1   55[BANK1 ] unsigned char 
 16272 ;;  evVal           1   56[BANK1 ] unsigned char 
 16273 ;; Auto vars:     Size  Location     Type
 16274 ;;  error           1   57[BANK1 ] unsigned char 
 16275 ;; Return value:  Size  Location     Type
 16276 ;;                  1    wreg      void 
 16277 ;; Registers used:
 16278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16279 ;; Tracked objects:
 16280 ;;		On entry : 0/0
 16281 ;;		On exit  : 0/0
 16282 ;;		Unchanged: 0/0
 16283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16284 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16285 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16287 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16288 ;;Total ram usage:        7 bytes
 16289 ;; Hardware stack levels used: 1
 16290 ;; Hardware stack levels required when called: 23
 16291 ;; This function calls:
 16292 ;;		_APP_addEvent
 16293 ;;		_sendMessage2
 16294 ;;		_sendMessage3
 16295 ;;		_sendMessage5
 16296 ;; This function is called by:
 16297 ;;		_teachProcessMessage
 16298 ;; This function uses a non-reentrant model
 16299 ;;
 16300                           
 16301                           	psect	text37
 16302   00914C                     __ptext37:
 16303                           	callstack 0
 16304   00914C                     _doEvlrn:
 16305                           	callstack 5
 16306                           
 16307                           ;../../VLCBlib_PIC/event_teach.c: 597:     uint8_t error;;../../VLCBlib_PIC/event_teach.
      +                          c: 598:     evNum--;
 16308                           
 16309                           ;incstack = 0
 16310   00914C  0101               	movlb	1	; () banked
 16311   00914E  07F5               	decf	doEvlrn@evNum& (0+255),f,b
 16312                           
 16313                           ; BSR set to: 1
 16314                           ;../../VLCBlib_PIC/event_teach.c: 599:     if (evNum >= 20) {
 16315   009150  0E13               	movlw	19
 16316   009152  65F5               	cpfsgt	doEvlrn@evNum& (0+255),b
 16317   009154  D019               	goto	l21154
 16318                           
 16319                           ; BSR set to: 1
 16320                           ;../../VLCBlib_PIC/event_teach.c: 600:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_EV_IDX);
 16321   009156  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 16322   00915A  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 16323   00915E  0E06               	movlw	6
 16324   009160  0100               	movlb	0	; () banked
 16325   009162  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16326   009164  0E6F               	movlw	111
 16327   009166  ECF9  F05E         	call	_sendMessage3
 16328                           
 16329                           ;../../VLCBlib_PIC/event_teach.c: 601:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16330   00916A  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16331   00916E  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16332   009172  0ED2               	movlw	210
 16333   009174  0101               	movlb	1	; () banked
 16334   009176  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16335   009178  0E04               	movlw	4
 16336   00917A  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16337   00917C  0E06               	movlw	6
 16338   00917E  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16339   009180  0EAF               	movlw	175
 16340   009182  EC41  F05F         	call	_sendMessage5
 16341   009186  0012               	return	
 16342   009188                     l21154:
 16343                           
 16344                           ; BSR set to: 1
 16345                           ;../../VLCBlib_PIC/event_teach.c: 604:     error = APP_addEvent(nodeNumber, eventNumber,
      +                           evNum, evVal, FALSE);
 16346   009188  C1F1  F1EA         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16347   00918C  C1F2  F1EB         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16348   009190  C1F3  F1EC         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16349   009194  C1F4  F1ED         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16350   009198  C1F5  F1EE         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16351   00919C  C1F6  F1EF         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16352   0091A0  0E00               	movlw	0
 16353   0091A2  6FF0               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16354   0091A4  ECCE  F060         	call	_APP_addEvent	;wreg free
 16355   0091A8  0101               	movlb	1	; () banked
 16356   0091AA  6FF7               	movwf	doEvlrn@error& (0+255),b
 16357                           
 16358                           ; BSR set to: 1
 16359                           ;../../VLCBlib_PIC/event_teach.c: 605:     if (error) {
 16360   0091AC  51F7               	movf	doEvlrn@error& (0+255),w,b
 16361   0091AE  B4D8               	btfsc	status,2,c
 16362   0091B0  D018               	goto	l21162
 16363                           
 16364                           ; BSR set to: 1
 16365                           ;../../VLCBlib_PIC/event_teach.c: 607:         sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, error);
 16366   0091B2  C0B5  F0A6         	movff	_nn+1,sendMessage3@data1
 16367   0091B6  C0B4  F0A7         	movff	_nn,sendMessage3@data2
 16368   0091BA  C1F7  F0A8         	movff	doEvlrn@error,sendMessage3@data3
 16369   0091BE  0E6F               	movlw	111
 16370   0091C0  ECF9  F05E         	call	_sendMessage3
 16371                           
 16372                           ;../../VLCBlib_PIC/event_teach.c: 608:         sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16373   0091C4  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16374   0091C8  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16375   0091CC  0ED2               	movlw	210
 16376   0091CE  0101               	movlb	1	; () banked
 16377   0091D0  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16378   0091D2  0E04               	movlw	4
 16379   0091D4  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16380   0091D6  C1F7  F1CA         	movff	doEvlrn@error,sendMessage5@data5
 16381   0091DA  0EAF               	movlw	175
 16382   0091DC  EC41  F05F         	call	_sendMessage5
 16383   0091E0  0012               	return	
 16384   0091E2                     l21162:
 16385                           
 16386                           ; BSR set to: 1
 16387                           ;../../VLCBlib_PIC/event_teach.c: 611:     teachDiagnostics[0x00].asUint++;
 16388   0091E2  4BB8               	infsnz	_teachDiagnostics& (0+255),f,b
 16389   0091E4  2BB9               	incf	(_teachDiagnostics+1)& (0+255),f,b
 16390                           
 16391                           ; BSR set to: 1
 16392                           ;../../VLCBlib_PIC/event_teach.c: 612:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes
      +                          .lo);
 16393   0091E6  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 16394   0091EA  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 16395   0091EE  0E59               	movlw	89
 16396   0091F0  EC11  F05F         	call	_sendMessage2
 16397                           
 16398                           ;../../VLCBlib_PIC/event_teach.c: 613:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.
      +                          lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16399   0091F4  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16400   0091F8  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16401   0091FC  0EB2               	movlw	178
 16402   0091FE  0101               	movlb	1	; () banked
 16403   009200  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16404   009202  0E04               	movlw	4
 16405   009204  6FC9               	movwf	sendMessage5@data4& (0+255),b
 16406   009206  0E00               	movlw	0
 16407   009208  6FCA               	movwf	sendMessage5@data5& (0+255),b
 16408   00920A  0EAF               	movlw	175
 16409   00920C  EC41  F05F         	call	_sendMessage5
 16410   009210  0012               	return		;funcret
 16411   009212                     __end_of_doEvlrn:
 16412                           	callstack 0
 16413                           
 16414 ;; *************** function _APP_addEvent *****************
 16415 ;; Defined at:
 16416 ;;		line 170 in file "../universalEvents.c"
 16417 ;; Parameters:    Size  Location     Type
 16418 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16419 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16420 ;;  evNum           1   48[BANK1 ] unsigned char 
 16421 ;;  evVal           1   49[BANK1 ] unsigned char 
 16422 ;;  forceOwnNN      1   50[BANK1 ] enum E12701
 16423 ;; Auto vars:     Size  Location     Type
 16424 ;;		None
 16425 ;; Return value:  Size  Location     Type
 16426 ;;                  1    wreg      unsigned char 
 16427 ;; Registers used:
 16428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16429 ;; Tracked objects:
 16430 ;;		On entry : 0/0
 16431 ;;		On exit  : 0/0
 16432 ;;		Unchanged: 0/0
 16433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16434 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16437 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16438 ;;Total ram usage:        7 bytes
 16439 ;; Hardware stack levels used: 1
 16440 ;; Hardware stack levels required when called: 22
 16441 ;; This function calls:
 16442 ;;		_addEvent
 16443 ;; This function is called by:
 16444 ;;		_doEvlrn
 16445 ;; This function uses a non-reentrant model
 16446 ;;
 16447                           
 16448                           	psect	text38
 16449   00C19C                     __ptext38:
 16450                           	callstack 0
 16451   00C19C                     _APP_addEvent:
 16452                           	callstack 5
 16453                           
 16454                           ;../universalEvents.c: 186:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16455                           
 16456                           ;incstack = 0
 16457   00C19C  C1EA  F1DB         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16458   00C1A0  C1EB  F1DC         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16459   00C1A4  C1EC  F1DD         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16460   00C1A8  C1ED  F1DE         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16461   00C1AC  C1EE  F1DF         	movff	APP_addEvent@evNum,addEvent@evNum
 16462   00C1B0  C1EF  F1E0         	movff	APP_addEvent@evVal,addEvent@evVal
 16463   00C1B4  C1F0  F1E1         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16464   00C1B8  ECCB  F032         	call	_addEvent	;wreg free
 16465   00C1BC  0012               	return		;funcret
 16466   00C1BE                     __end_of_APP_addEvent:
 16467                           	callstack 0
 16468                           
 16469 ;; *************** function _APP_GetEventState *****************
 16470 ;; Defined at:
 16471 ;;		line 402 in file "../main.c"
 16472 ;; Parameters:    Size  Location     Type
 16473 ;;  h               1    wreg     unsigned char 
 16474 ;; Auto vars:     Size  Location     Type
 16475 ;;  h               1    0[COMRAM] unsigned char 
 16476 ;; Return value:  Size  Location     Type
 16477 ;;                  1    wreg      enum E12720
 16478 ;; Registers used:
 16479 ;;		wreg
 16480 ;; Tracked objects:
 16481 ;;		On entry : 0/0
 16482 ;;		On exit  : 0/0
 16483 ;;		Unchanged: 0/0
 16484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16489 ;;Total ram usage:        0 bytes
 16490 ;; Hardware stack levels used: 1
 16491 ;; Hardware stack levels required when called: 12
 16492 ;; This function calls:
 16493 ;;		Nothing
 16494 ;; This function is called by:
 16495 ;;		_producerProcessMessage
 16496 ;; This function uses a non-reentrant model
 16497 ;;
 16498                           
 16499                           	psect	text39
 16500   00C40C                     __ptext39:
 16501                           	callstack 0
 16502   00C40C                     _APP_GetEventState:
 16503                           	callstack 16
 16504                           
 16505                           ;../main.c: 403:     return EVENT_OFF;
 16506                           
 16507                           ;incstack = 0
 16508   00C40C  0E00               	movlw	0
 16509   00C40E  0012               	return		;funcret
 16510   00C410                     __end_of_APP_GetEventState:
 16511                           	callstack 0
 16512                           
 16513 ;; *************** function _pollTimedResponse *****************
 16514 ;; Defined at:
 16515 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16516 ;; Parameters:    Size  Location     Type
 16517 ;;		None
 16518 ;; Auto vars:     Size  Location     Type
 16519 ;;  result          1   32[BANK1 ] enum E12937
 16520 ;; Return value:  Size  Location     Type
 16521 ;;                  1    wreg      void 
 16522 ;; Registers used:
 16523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16524 ;; Tracked objects:
 16525 ;;		On entry : 0/0
 16526 ;;		On exit  : 0/0
 16527 ;;		Unchanged: 0/0
 16528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16530 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16531 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16532 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16533 ;;Total ram usage:        3 bytes
 16534 ;; Hardware stack levels used: 1
 16535 ;; Hardware stack levels required when called: 17
 16536 ;; This function calls:
 16537 ;;		NULL
 16538 ;;		_mnsTRallDiagnosticsCallback
 16539 ;;		_mnsTRrqnpnCallback
 16540 ;;		_mnsTRserviceDiscoveryCallback
 16541 ;;		_nerdCallback
 16542 ;;		_nvTRnvrdCallback
 16543 ;;		_reqevCallback
 16544 ;; This function is called by:
 16545 ;;		_poll
 16546 ;; This function uses a non-reentrant model
 16547 ;;
 16548                           
 16549                           	psect	text40
 16550   00A928                     __ptext40:
 16551                           	callstack 0
 16552   00A928                     _pollTimedResponse:
 16553                           	callstack 12
 16554                           
 16555                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16556                           
 16557                           ;incstack = 0
 16558   00A928  0100               	movlb	0	; () banked
 16559   00A92A  29BB               	incf	_timedResponseType& (0+255),w,b
 16560   00A92C  B4D8               	btfsc	status,2,c
 16561   00A92E  0012               	return	
 16562                           
 16563                           ; BSR set to: 0
 16564                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16565   00A930  5021               	movf	_timedResponseCallback^0,w,c
 16566   00A932  1022               	iorwf	(_timedResponseCallback+1)^0,w,c
 16567   00A934  A4D8               	btfss	status,2,c
 16568   00A936  D002               	goto	l23580
 16569   00A938                     u25420:
 16570                           
 16571                           ; BSR set to: 0
 16572                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16573   00A938  69BB               	setf	_timedResponseType& (0+255),b
 16574                           
 16575                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16576   00A93A  0012               	return	
 16577   00A93C                     l23580:
 16578                           
 16579                           ; BSR set to: 0
 16580                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16581   00A93C  D801               	call	u25438
 16582   00A93E  D00E               	goto	u25439
 16583   00A940                     u25438:
 16584   00A940  0005               	push	
 16585   00A942  6EFA               	movwf	pclath,c
 16586   00A944  5021               	movf	_timedResponseCallback^0,w,c
 16587   00A946  6EFD               	movwf	tosl,c
 16588   00A948  5022               	movf	(_timedResponseCallback+1)^0,w,c
 16589   00A94A  6EFE               	movwf	tosh,c
 16590   00A94C  6AFF               	clrf	tosu,c
 16591   00A94E  50FA               	movf	pclath,w,c
 16592   00A950  C0BD  F1CD         	movff	_timedResponseServiceIndex,nvTRnvrdCallback@serviceIndex
 16593   00A954  C0BA  F1CE         	movff	_timedResponseStep,nvTRnvrdCallback@step
 16594   00A958  51BB               	movf	_timedResponseType& (0+255),w,b
 16595   00A95A  0012               	return		;indir
 16596   00A95C                     u25439:
 16597   00A95C  0101               	movlb	1	; () banked
 16598   00A95E  6FDE               	movwf	pollTimedResponse@result& (0+255),b
 16599                           
 16600                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16601   00A960  D00F               	goto	l23596
 16602   00A962                     l23582:
 16603                           
 16604                           ; BSR set to: 1
 16605                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16606   00A962  0100               	movlb	0	; () banked
 16607   00A964  51BC               	movf	_timedResponseAllServicesFlag& (0+255),w,b
 16608   00A966  B4D8               	btfsc	status,2,c
 16609   00A968  D7E7               	goto	u25420
 16610                           
 16611                           ; BSR set to: 0
 16612                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16613   00A96A  2BBD               	incf	_timedResponseServiceIndex& (0+255),f,b
 16614                           
 16615                           ; BSR set to: 0
 16616                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16617   00A96C  0E08               	movlw	8
 16618   00A96E  65BD               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16619   00A970  D001               	goto	l23590
 16620   00A972  D7E2               	goto	u25420
 16621   00A974                     l23590:
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16625   00A974  0E00               	movlw	0
 16626   00A976  6FBA               	movwf	_timedResponseStep& (0+255),b
 16627   00A978  0012               	return	
 16628   00A97A                     l23592:
 16629                           
 16630                           ; BSR set to: 1
 16631                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16632   00A97A  0100               	movlb	0	; () banked
 16633   00A97C  2BBA               	incf	_timedResponseStep& (0+255),f,b
 16634                           
 16635                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16636   00A97E  0012               	return	
 16637   00A980                     l23596:
 16638                           
 16639                           ; BSR set to: 1
 16640   00A980  51DE               	movf	pollTimedResponse@result& (0+255),w,b
 16641   00A982  6FDC               	movwf	??_pollTimedResponse& (0+255),b
 16642   00A984  6BDD               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16643                           
 16644                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16645                           ; Switch size 1, requested type "simple"
 16646                           ; Number of cases is 1, Range of values is 0 to 0
 16647                           ; switch strategies available:
 16648                           ; Name         Instructions Cycles
 16649                           ; simple_byte            4     3 (average)
 16650                           ;	Chosen strategy is simple_byte
 16651   00A986  51DD               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16652   00A988  0A00               	xorlw	0	; case 0
 16653   00A98A  A4D8               	btfss	status,2,c
 16654   00A98C  0012               	return	
 16655                           
 16656                           ; BSR set to: 1
 16657                           ; Switch size 1, requested type "simple"
 16658                           ; Number of cases is 3, Range of values is 0 to 2
 16659                           ; switch strategies available:
 16660                           ; Name         Instructions Cycles
 16661                           ; simple_byte           10     6 (average)
 16662                           ;	Chosen strategy is simple_byte
 16663   00A98E  51DC               	movf	??_pollTimedResponse& (0+255),w,b
 16664   00A990  0A00               	xorlw	0	; case 0
 16665   00A992  B4D8               	btfsc	status,2,c
 16666   00A994  D7E6               	goto	l23582
 16667   00A996  0A01               	xorlw	1	; case 1
 16668   00A998  B4D8               	btfsc	status,2,c
 16669   00A99A  0012               	return	
 16670   00A99C  0A03               	xorlw	3	; case 2
 16671   00A99E  A4D8               	btfss	status,2,c
 16672   00A9A0  0012               	return	
 16673   00A9A2  D7EB               	goto	l23592
 16674   00A9A4                     __end_of_pollTimedResponse:
 16675                           	callstack 0
 16676                           
 16677 ;; *************** function _nvTRnvrdCallback *****************
 16678 ;; Defined at:
 16679 ;;		line 327 in file "../../VLCBlib_PIC/nv.c"
 16680 ;; Parameters:    Size  Location     Type
 16681 ;;  type            1    wreg     unsigned char 
 16682 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16683 ;;  step            1   16[BANK1 ] unsigned char 
 16684 ;; Auto vars:     Size  Location     Type
 16685 ;;  type            1    0[COMRAM] unsigned char 
 16686 ;;  valueOrError    2   17[BANK1 ] short 
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1    wreg      enum E12944
 16689 ;; Registers used:
 16690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16691 ;; Tracked objects:
 16692 ;;		On entry : 0/0
 16693 ;;		On exit  : 0/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16696 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16697 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16699 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16700 ;;Total ram usage:        4 bytes
 16701 ;; Hardware stack levels used: 1
 16702 ;; Hardware stack levels required when called: 16
 16703 ;; This function calls:
 16704 ;;		_getNV
 16705 ;;		_sendMessage4
 16706 ;; This function is called by:
 16707 ;;		_nvProcessMessage
 16708 ;;		_pollTimedResponse
 16709 ;; This function uses a non-reentrant model
 16710 ;;
 16711                           
 16712                           	psect	text41
 16713   00BA02                     __ptext41:
 16714                           	callstack 0
 16715   00BA02                     _nvTRnvrdCallback:
 16716                           	callstack 12
 16717                           
 16718                           ;../../VLCBlib_PIC/nv.c: 328:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 329:    
      +                           if (step > 127) {
 16719                           
 16720                           ;incstack = 0
 16721   00BA02  0E7F               	movlw	127
 16722   00BA04  0101               	movlb	1	; () banked
 16723   00BA06  65CE               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 16724   00BA08  D002               	goto	l21466
 16725   00BA0A                     u22630:
 16726                           
 16727                           ; BSR set to: 1
 16728                           ;../../VLCBlib_PIC/nv.c: 330:         return TIMED_RESPONSE_RESULT_FINISHED;
 16729   00BA0A  0E00               	movlw	0
 16730   00BA0C  0012               	return	
 16731   00BA0E                     l21466:
 16732                           
 16733                           ; BSR set to: 1
 16734                           ;../../VLCBlib_PIC/nv.c: 332:     valueOrError = getNV(step+1);
 16735   00BA0E  29CE               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16736   00BA10  EC7F  F05D         	call	_getNV
 16737   00BA14  C08D  F1CF         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 16738   00BA18  C08E  F1D0         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 16739                           
 16740                           ;../../VLCBlib_PIC/nv.c: 333:     if (valueOrError < 0) {
 16741   00BA1C  0101               	movlb	1	; () banked
 16742   00BA1E  BFD0               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 16743   00BA20  D7F4               	goto	u22630
 16744                           
 16745                           ; BSR set to: 1
 16746                           ;../../VLCBlib_PIC/nv.c: 336:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 16747   00BA22  C0B5  F0A6         	movff	_nn+1,sendMessage4@data1
 16748   00BA26  C0B4  F0A7         	movff	_nn,sendMessage4@data2
 16749   00BA2A  29CE               	incf	nvTRnvrdCallback@step& (0+255),w,b
 16750   00BA2C  0100               	movlb	0	; () banked
 16751   00BA2E  6FA8               	movwf	sendMessage4@data3& (0+255),b
 16752   00BA30  C1CF  F0A9         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 16753   00BA34  0E97               	movlw	151
 16754   00BA36  ECB5  F05F         	call	_sendMessage4
 16755                           
 16756                           ;../../VLCBlib_PIC/nv.c: 337:     nvDiagnostics[0x00].asUint++;
 16757   00BA3A  0100               	movlb	0	; () banked
 16758   00BA3C  4BCD               	infsnz	_nvDiagnostics& (0+255),f,b
 16759   00BA3E  2BCE               	incf	(_nvDiagnostics+1)& (0+255),f,b
 16760                           
 16761                           ; BSR set to: 0
 16762                           ;../../VLCBlib_PIC/nv.c: 338:     return TIMED_RESPONSE_RESULT_NEXT;
 16763   00BA40  0E02               	movlw	2
 16764   00BA42  0012               	return		;funcret
 16765   00BA44                     __end_of_nvTRnvrdCallback:
 16766                           	callstack 0
 16767                           
 16768 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 16769 ;; Defined at:
 16770 ;;		line 823 in file "../../VLCBlib_PIC/mns.c"
 16771 ;; Parameters:    Size  Location     Type
 16772 ;;  type            1    wreg     unsigned char 
 16773 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16774 ;;  step            1   16[BANK1 ] unsigned char 
 16775 ;; Auto vars:     Size  Location     Type
 16776 ;;  type            1    0[COMRAM] unsigned char 
 16777 ;; Return value:  Size  Location     Type
 16778 ;;                  1    wreg      enum E12944
 16779 ;; Registers used:
 16780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16781 ;; Tracked objects:
 16782 ;;		On entry : 0/0
 16783 ;;		On exit  : 0/0
 16784 ;;		Unchanged: 0/0
 16785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16786 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16788 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16789 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16790 ;;Total ram usage:        6 bytes
 16791 ;; Hardware stack levels used: 1
 16792 ;; Hardware stack levels required when called: 16
 16793 ;; This function calls:
 16794 ;;		_sendMessage5
 16795 ;; This function is called by:
 16796 ;;		_mnsProcessMessage
 16797 ;;		_pollTimedResponse
 16798 ;; This function uses a non-reentrant model
 16799 ;;
 16800                           
 16801                           	psect	text42
 16802   00A36A                     __ptext42:
 16803                           	callstack 0
 16804   00A36A                     _mnsTRserviceDiscoveryCallback:
 16805                           	callstack 12
 16806                           
 16807                           ;../../VLCBlib_PIC/mns.c: 824:     if (step >= 9) {
 16808                           
 16809                           ;incstack = 0
 16810   00A36A  0E08               	movlw	8
 16811   00A36C  0101               	movlb	1	; () banked
 16812   00A36E  65CE               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 16813   00A370  D002               	goto	l21386
 16814                           
 16815                           ; BSR set to: 1
 16816                           ;../../VLCBlib_PIC/mns.c: 825:         return TIMED_RESPONSE_RESULT_FINISHED;
 16817   00A372  0E00               	movlw	0
 16818   00A374  0012               	return	
 16819   00A376                     l21386:
 16820                           
 16821                           ; BSR set to: 1
 16822                           ;../../VLCBlib_PIC/mns.c: 828:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 16823   00A376  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 16824   00A37A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 16825   00A37E  29CE               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16826   00A380  6FC8               	movwf	sendMessage5@data3& (0+255),b
 16827   00A382  51CE               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16828   00A384  0D02               	mullw	2
 16829   00A386  0E75               	movlw	low _services
 16830   00A388  24F3               	addwf	243,w,c
 16831   00A38A  6EF6               	movwf	tblptrl,c
 16832   00A38C  0EEE               	movlw	high _services
 16833   00A38E  20F4               	addwfc	244,w,c
 16834   00A390  6EF7               	movwf	tblptrh,c
 16835   00A392                     	if	1	;There are 3 active tblptr bytes
 16836   00A392  6AF8               	clrf	tblptru,c
 16837   00A394  0E00               	movlw	low (__mediumconst shr (0+16))
 16838   00A396  22F8               	addwfc	tblptru,f,c
 16839   00A398                     	endif
 16840   00A398  0009               	tblrd		*+
 16841   00A39A  CFF5 F1CF          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 16842   00A39E  0009               	tblrd		*+
 16843   00A3A0  CFF5 F1D0          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 16844   00A3A4  C1CF  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 16845   00A3A8  C1D0  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 16846   00A3AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16847   00A3AC  6AF8               	clrf	tblptru,c
 16848   00A3AE                     	endif
 16849   00A3AE                     	if	0	;tblptru may be non-zero
 16850   00A3AE                     	endif
 16851   00A3AE  0008               	tblrd		*
 16852   00A3B0  CFF5 F1C9          	movff	tablat,sendMessage5@data4
 16853   00A3B4  51CE               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 16854   00A3B6  0D02               	mullw	2
 16855   00A3B8  0E75               	movlw	low _services
 16856   00A3BA  24F3               	addwf	243,w,c
 16857   00A3BC  6EF6               	movwf	tblptrl,c
 16858   00A3BE  0EEE               	movlw	high _services
 16859   00A3C0  20F4               	addwfc	244,w,c
 16860   00A3C2  6EF7               	movwf	tblptrh,c
 16861   00A3C4                     	if	1	;There are 3 active tblptr bytes
 16862   00A3C4  6AF8               	clrf	tblptru,c
 16863   00A3C6  0E00               	movlw	low (__mediumconst shr (0+16))
 16864   00A3C8  22F8               	addwfc	tblptru,f,c
 16865   00A3CA                     	endif
 16866   00A3CA  0009               	tblrd		*+
 16867   00A3CC  CFF5 F1D1          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 16868   00A3D0  0009               	tblrd		*+
 16869   00A3D2  CFF5 F1D2          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 16870   00A3D6  0E01               	movlw	1
 16871   00A3D8  27D1               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 16872   00A3DA  0E00               	movlw	0
 16873   00A3DC  23D2               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 16874   00A3DE  C1D1  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 16875   00A3E2  C1D2  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 16876   00A3E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16877   00A3E6  6AF8               	clrf	tblptru,c
 16878   00A3E8                     	endif
 16879   00A3E8                     	if	0	;tblptru may be non-zero
 16880   00A3E8                     	endif
 16881   00A3E8  0008               	tblrd		*
 16882   00A3EA  CFF5 F1CA          	movff	tablat,sendMessage5@data5
 16883   00A3EE  0EAC               	movlw	172
 16884   00A3F0  EC41  F05F         	call	_sendMessage5
 16885                           
 16886                           ;../../VLCBlib_PIC/mns.c: 830:     return TIMED_RESPONSE_RESULT_NEXT;
 16887   00A3F4  0E02               	movlw	2
 16888   00A3F6  0012               	return		;funcret
 16889   00A3F8                     __end_of_mnsTRserviceDiscoveryCallback:
 16890                           	callstack 0
 16891                           
 16892 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 16893 ;; Defined at:
 16894 ;;		line 840 in file "../../VLCBlib_PIC/mns.c"
 16895 ;; Parameters:    Size  Location     Type
 16896 ;;  type            1    wreg     unsigned char 
 16897 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 16898 ;;  step            1   16[BANK1 ] unsigned char 
 16899 ;; Auto vars:     Size  Location     Type
 16900 ;;  type            1    0[COMRAM] unsigned char 
 16901 ;;  d               2   21[BANK1 ] PTR struct DiagnosticVal
 16902 ;;		 -> canDiagnostics(32), nvDiagnostics(4), mnsDiagnostics(12), teachDiagnostics(2), 
 16903 ;;		 -> producerDiagnostics(2), ackDiagnostics(2), consumer2QDiagnostics(2), NULL(0), 
 16904 ;; Return value:  Size  Location     Type
 16905 ;;                  1    wreg      enum E12944
 16906 ;; Registers used:
 16907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16908 ;; Tracked objects:
 16909 ;;		On entry : 0/0
 16910 ;;		On exit  : 0/0
 16911 ;;		Unchanged: 0/0
 16912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16913 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16914 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16915 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16916 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16917 ;;Total ram usage:        8 bytes
 16918 ;; Hardware stack levels used: 1
 16919 ;; Hardware stack levels required when called: 16
 16920 ;; This function calls:
 16921 ;;		NULL
 16922 ;;		_ackGetDiagnostic
 16923 ;;		_canGetDiagnostic
 16924 ;;		_consumer2QGetDiagnostic
 16925 ;;		_mnsGetDiagnostic
 16926 ;;		_nvGetDiagnostic
 16927 ;;		_producerGetDiagnostic
 16928 ;;		_sendMessage6
 16929 ;;		_teachGetDiagnostic
 16930 ;; This function is called by:
 16931 ;;		_mnsProcessMessage
 16932 ;;		_pollTimedResponse
 16933 ;; This function uses a non-reentrant model
 16934 ;;
 16935                           
 16936                           	psect	text43
 16937   0084D6                     __ptext43:
 16938                           	callstack 0
 16939   0084D6                     _mnsTRallDiagnosticsCallback:
 16940                           	callstack 12
 16941                           
 16942                           ;../../VLCBlib_PIC/mns.c: 841:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 16943                           
 16944                           ;incstack = 0
 16945   0084D6  0101               	movlb	1	; () banked
 16946   0084D8  51CD               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16947   0084DA  0D02               	mullw	2
 16948   0084DC  0E75               	movlw	low _services
 16949   0084DE  24F3               	addwf	243,w,c
 16950   0084E0  6EF6               	movwf	tblptrl,c
 16951   0084E2  0EEE               	movlw	high _services
 16952   0084E4  20F4               	addwfc	244,w,c
 16953   0084E6  6EF7               	movwf	tblptrh,c
 16954   0084E8                     	if	1	;There are 3 active tblptr bytes
 16955   0084E8  6AF8               	clrf	tblptru,c
 16956   0084EA  0E00               	movlw	low (__mediumconst shr (0+16))
 16957   0084EC  22F8               	addwfc	tblptru,f,c
 16958   0084EE                     	endif
 16959   0084EE  0009               	tblrd		*+
 16960   0084F0  CFF5 F1CF          	movff	tablat,??_mnsTRallDiagnosticsCallback
 16961   0084F4  0009               	tblrd		*+
 16962   0084F6  CFF5 F1D0          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 16963   0084FA  0E10               	movlw	16
 16964   0084FC  27CF               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 16965   0084FE  0E00               	movlw	0
 16966   008500  23D0               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 16967   008502  C1CF  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 16968   008506  C1D0  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 16969   00850A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 16970   00850A  6AF8               	clrf	tblptru,c
 16971   00850C                     	endif
 16972   00850C                     	if	0	;tblptru may be non-zero
 16973   00850C                     	endif
 16974   00850C  0009               	tblrd		*+
 16975   00850E  50F5               	movf	tablat,w,c
 16976   008510  0009               	tblrd		*+
 16977   008512  10F5               	iorwf	tablat,w,c
 16978   008514  A4D8               	btfss	status,2,c
 16979   008516  D002               	goto	l21398
 16980   008518                     u22570:
 16981                           
 16982                           ; BSR set to: 1
 16983                           ;../../VLCBlib_PIC/mns.c: 842:         return TIMED_RESPONSE_RESULT_FINISHED;
 16984   008518  0E00               	movlw	0
 16985   00851A  0012               	return	
 16986   00851C                     l21398:
 16987                           
 16988                           ; BSR set to: 1
 16989                           ;../../VLCBlib_PIC/mns.c: 844:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step+1);
 16990   00851C  51CD               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 16991   00851E  0D02               	mullw	2
 16992   008520  0E75               	movlw	low _services
 16993   008522  24F3               	addwf	243,w,c
 16994   008524  6EF6               	movwf	tblptrl,c
 16995   008526  0EEE               	movlw	high _services
 16996   008528  20F4               	addwfc	244,w,c
 16997   00852A  6EF7               	movwf	tblptrh,c
 16998   00852C                     	if	1	;There are 3 active tblptr bytes
 16999   00852C  6AF8               	clrf	tblptru,c
 17000   00852E  0E00               	movlw	low (__mediumconst shr (0+16))
 17001   008530  22F8               	addwfc	tblptru,f,c
 17002   008532                     	endif
 17003   008532  0009               	tblrd		*+
 17004   008534  CFF5 F1CF          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17005   008538  0009               	tblrd		*+
 17006   00853A  CFF5 F1D0          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17007   00853E  0E10               	movlw	16
 17008   008540  27CF               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17009   008542  0E00               	movlw	0
 17010   008544  23D0               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17011   008546  C1CF  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17012   00854A  C1D0  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17013   00854E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17014   00854E  6AF8               	clrf	tblptru,c
 17015   008550                     	endif
 17016   008550                     	if	0	;tblptru may be non-zero
 17017   008550                     	endif
 17018   008550  0009               	tblrd		*+
 17019   008552  CFF5 F1D1          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17020   008556  0009               	tblrd		*+
 17021   008558  CFF5 F1D2          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17022   00855C  D801               	call	u22588
 17023   00855E  D00A               	goto	u22589
 17024   008560                     u22588:
 17025   008560  0005               	push	
 17026   008562  6EFA               	movwf	pclath,c
 17027   008564  51D1               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17028   008566  6EFD               	movwf	tosl,c
 17029   008568  51D2               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17030   00856A  6EFE               	movwf	tosh,c
 17031   00856C  6AFF               	clrf	tosu,c
 17032   00856E  50FA               	movf	pclath,w,c
 17033   008570  29CE               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17034   008572  0012               	return		;indir
 17035   008574                     u22589:
 17036   008574  C08D  F1D3         	movff	?_canGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17037   008578  C08E  F1D4         	movff	?_canGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17038                           
 17039                           ;../../VLCBlib_PIC/mns.c: 845:     if (d == ((void*)0)) {
 17040   00857C  0101               	movlb	1	; () banked
 17041   00857E  51D3               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17042   008580  11D4               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17043   008582  B4D8               	btfsc	status,2,c
 17044   008584  D7C9               	goto	u22570
 17045                           
 17046                           ; BSR set to: 1
 17047                           ;../../VLCBlib_PIC/mns.c: 850:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step+1, d->asBytes.hi, d->asBytes.lo);
 17048   008586  C0B5  F1C6         	movff	_nn+1,sendMessage6@data1
 17049   00858A  C0B4  F1C7         	movff	_nn,sendMessage6@data2
 17050   00858E  29CD               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17051   008590  6FC8               	movwf	sendMessage6@data3& (0+255),b
 17052   008592  29CE               	incf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17053   008594  6FC9               	movwf	sendMessage6@data4& (0+255),b
 17054   008596  EE20 F001          	lfsr	2,1
 17055   00859A  51D3               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17056   00859C  26D9               	addwf	fsr2l,f,c
 17057   00859E  51D4               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17058   0085A0  22DA               	addwfc	fsr2h,f,c
 17059   0085A2  50DF               	movf	indf2,w,c
 17060   0085A4  6FCA               	movwf	sendMessage6@data5& (0+255),b
 17061   0085A6  C1D3  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17062   0085AA  C1D4  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17063   0085AE  50DF               	movf	indf2,w,c
 17064   0085B0  6FCB               	movwf	sendMessage6@data6& (0+255),b
 17065   0085B2  0EC7               	movlw	199
 17066   0085B4  ECE1  F05E         	call	_sendMessage6
 17067                           
 17068                           ;../../VLCBlib_PIC/mns.c: 851:     return TIMED_RESPONSE_RESULT_NEXT;
 17069   0085B8  0E02               	movlw	2
 17070   0085BA  0012               	return		;funcret
 17071   0085BC                     __end_of_mnsTRallDiagnosticsCallback:
 17072                           	callstack 0
 17073                           
 17074 ;; *************** function _mnsTRrqnpnCallback *****************
 17075 ;; Defined at:
 17076 ;;		line 861 in file "../../VLCBlib_PIC/mns.c"
 17077 ;; Parameters:    Size  Location     Type
 17078 ;;  type            1    wreg     unsigned char 
 17079 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 17080 ;;  step            1   16[BANK1 ] unsigned char 
 17081 ;; Auto vars:     Size  Location     Type
 17082 ;;  type            1    0[COMRAM] unsigned char 
 17083 ;; Return value:  Size  Location     Type
 17084 ;;                  1    wreg      enum E12944
 17085 ;; Registers used:
 17086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17087 ;; Tracked objects:
 17088 ;;		On entry : 0/0
 17089 ;;		On exit  : 0/0
 17090 ;;		Unchanged: 0/0
 17091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17092 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17095 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17096 ;;Total ram usage:        2 bytes
 17097 ;; Hardware stack levels used: 1
 17098 ;; Hardware stack levels required when called: 16
 17099 ;; This function calls:
 17100 ;;		_getParameter
 17101 ;;		_sendMessage4
 17102 ;; This function is called by:
 17103 ;;		_mnsProcessMessage
 17104 ;;		_pollTimedResponse
 17105 ;; This function uses a non-reentrant model
 17106 ;;
 17107                           
 17108                           	psect	text44
 17109   00BD92                     __ptext44:
 17110                           	callstack 0
 17111   00BD92                     _mnsTRrqnpnCallback:
 17112                           	callstack 12
 17113                           
 17114                           ;../../VLCBlib_PIC/mns.c: 862:     if (step >= 20) {
 17115                           
 17116                           ;incstack = 0
 17117   00BD92  0E13               	movlw	19
 17118   00BD94  0101               	movlb	1	; () banked
 17119   00BD96  65CE               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17120   00BD98  D002               	goto	l21418
 17121                           
 17122                           ; BSR set to: 1
 17123                           ;../../VLCBlib_PIC/mns.c: 863:         return TIMED_RESPONSE_RESULT_FINISHED;
 17124   00BD9A  0E00               	movlw	0
 17125   00BD9C  0012               	return	
 17126   00BD9E                     l21418:
 17127                           
 17128                           ; BSR set to: 1
 17129                           ;../../VLCBlib_PIC/mns.c: 865:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17130   00BD9E  C0B5  F0A6         	movff	_nn+1,sendMessage4@data1
 17131   00BDA2  C0B4  F0A7         	movff	_nn,sendMessage4@data2
 17132   00BDA6  29CE               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17133   00BDA8  0100               	movlb	0	; () banked
 17134   00BDAA  6FA8               	movwf	sendMessage4@data3& (0+255),b
 17135   00BDAC  0101               	movlb	1	; () banked
 17136   00BDAE  29CE               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17137   00BDB0  EC51  F043         	call	_getParameter
 17138   00BDB4  0100               	movlb	0	; () banked
 17139   00BDB6  6FA9               	movwf	sendMessage4@data4& (0+255),b
 17140   00BDB8  0E9B               	movlw	155
 17141   00BDBA  ECB5  F05F         	call	_sendMessage4
 17142                           
 17143                           ;../../VLCBlib_PIC/mns.c: 866:     return TIMED_RESPONSE_RESULT_NEXT;
 17144   00BDBE  0E02               	movlw	2
 17145   00BDC0  0012               	return		;funcret
 17146   00BDC2                     __end_of_mnsTRrqnpnCallback:
 17147                           	callstack 0
 17148                           
 17149 ;; *************** function _nerdCallback *****************
 17150 ;; Defined at:
 17151 ;;		line 521 in file "../../VLCBlib_PIC/event_teach.c"
 17152 ;; Parameters:    Size  Location     Type
 17153 ;;  type            1    wreg     unsigned char 
 17154 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 17155 ;;  step            1   16[BANK1 ] unsigned char 
 17156 ;; Auto vars:     Size  Location     Type
 17157 ;;  type            1    0[COMRAM] unsigned char 
 17158 ;;  eventNumber     2   19[BANK1 ] struct Word
 17159 ;;  nodeNumber      2   17[BANK1 ] struct Word
 17160 ;; Return value:  Size  Location     Type
 17161 ;;                  1    wreg      enum E12944
 17162 ;; Registers used:
 17163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17164 ;; Tracked objects:
 17165 ;;		On entry : 0/0
 17166 ;;		On exit  : 0/0
 17167 ;;		Unchanged: 0/0
 17168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17169 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17170 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17172 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17173 ;;Total ram usage:        6 bytes
 17174 ;; Hardware stack levels used: 1
 17175 ;; Hardware stack levels required when called: 16
 17176 ;; This function calls:
 17177 ;;		_getEN
 17178 ;;		_getNN
 17179 ;;		_sendMessage7
 17180 ;;		_tableIndexToEvtIdx
 17181 ;;		_validStart
 17182 ;; This function is called by:
 17183 ;;		_doNerd
 17184 ;;		_pollTimedResponse
 17185 ;; This function uses a non-reentrant model
 17186 ;;
 17187                           
 17188                           	psect	text45
 17189   00AEFA                     __ptext45:
 17190                           	callstack 0
 17191   00AEFA                     _nerdCallback:
 17192                           	callstack 12
 17193                           
 17194                           ;../../VLCBlib_PIC/event_teach.c: 522:     Word nodeNumber, eventNumber;;../../VLCBlib_P
      +                          IC/event_teach.c: 524:     if (step >= 255) {
 17195                           
 17196                           ;incstack = 0
 17197   00AEFA  0101               	movlb	1	; () banked
 17198   00AEFC  29CE               	incf	nerdCallback@step& (0+255),w,b
 17199   00AEFE  A4D8               	btfss	status,2,c
 17200   00AF00  D002               	goto	l21320
 17201                           
 17202                           ; BSR set to: 1
 17203                           ;../../VLCBlib_PIC/event_teach.c: 525:         return TIMED_RESPONSE_RESULT_FINISHED;
 17204   00AF02  0E00               	movlw	0
 17205   00AF04  0012               	return	
 17206   00AF06                     l21320:
 17207                           
 17208                           ; BSR set to: 1
 17209                           ;../../VLCBlib_PIC/event_teach.c: 528:     if (validStart(step)) {
 17210   00AF06  51CE               	movf	nerdCallback@step& (0+255),w,b
 17211   00AF08  EC6A  F05B         	call	_validStart
 17212   00AF0C  0900               	iorlw	0
 17213   00AF0E  B4D8               	btfsc	status,2,c
 17214   00AF10  D025               	goto	l21326
 17215                           
 17216                           ;../../VLCBlib_PIC/event_teach.c: 529:         nodeNumber.word = getNN(step);
 17217   00AF12  0101               	movlb	1	; () banked
 17218   00AF14  51CE               	movf	nerdCallback@step& (0+255),w,b
 17219   00AF16  EC6B  F049         	call	_getNN
 17220   00AF1A  C097  F1CF         	movff	?_getNN,nerdCallback@nodeNumber
 17221   00AF1E  C098  F1D0         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 17222                           
 17223                           ;../../VLCBlib_PIC/event_teach.c: 530:         eventNumber.word = getEN(step);
 17224   00AF22  0101               	movlb	1	; () banked
 17225   00AF24  51CE               	movf	nerdCallback@step& (0+255),w,b
 17226   00AF26  EC4D  F055         	call	_getEN
 17227   00AF2A  C097  F1D1         	movff	?_getEN,nerdCallback@eventNumber
 17228   00AF2E  C098  F1D2         	movff	?_getEN+1,nerdCallback@eventNumber+1
 17229                           
 17230                           ;../../VLCBlib_PIC/event_teach.c: 531:         sendMessage7(OPC_ENRSP, nn.bytes.hi, nn.b
      +                          ytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.byt
      +                          es.lo, tableIndexToEvtIdx(step));
 17231   00AF32  C0B5  F1C6         	movff	_nn+1,sendMessage7@data1
 17232   00AF36  C0B4  F1C7         	movff	_nn,sendMessage7@data2
 17233   00AF3A  C1D0  F1C8         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 17234   00AF3E  C1CF  F1C9         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 17235   00AF42  C1D2  F1CA         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 17236   00AF46  C1D1  F1CB         	movff	nerdCallback@eventNumber,sendMessage7@data6
 17237   00AF4A  0101               	movlb	1	; () banked
 17238   00AF4C  51CE               	movf	nerdCallback@step& (0+255),w,b
 17239   00AF4E  ECE9  F061         	call	_tableIndexToEvtIdx
 17240   00AF52  0101               	movlb	1	; () banked
 17241   00AF54  6FCC               	movwf	sendMessage7@data7& (0+255),b
 17242   00AF56  0EF2               	movlw	242
 17243   00AF58  EC29  F05F         	call	_sendMessage7
 17244   00AF5C                     l21326:
 17245                           
 17246                           ;../../VLCBlib_PIC/event_teach.c: 533:     return TIMED_RESPONSE_RESULT_NEXT;
 17247   00AF5C  0E02               	movlw	2
 17248   00AF5E  0012               	return		;funcret
 17249   00AF60                     __end_of_nerdCallback:
 17250                           	callstack 0
 17251                           
 17252 ;; *************** function _reqevCallback *****************
 17253 ;; Defined at:
 17254 ;;		line 721 in file "../../VLCBlib_PIC/event_teach.c"
 17255 ;; Parameters:    Size  Location     Type
 17256 ;;  tableIndex      1    wreg     unsigned char 
 17257 ;;  serviceIndex    1   15[BANK1 ] unsigned char 
 17258 ;;  step            1   16[BANK1 ] unsigned char 
 17259 ;; Auto vars:     Size  Location     Type
 17260 ;;  tableIndex      1   29[BANK1 ] unsigned char 
 17261 ;;  eventNumber     2   27[BANK1 ] struct Word
 17262 ;;  nodeNumber      2   25[BANK1 ] struct Word
 17263 ;;  ev              2   23[BANK1 ] short 
 17264 ;;  nEv             1   22[BANK1 ] unsigned char 
 17265 ;; Return value:  Size  Location     Type
 17266 ;;                  1    wreg      enum E12944
 17267 ;; Registers used:
 17268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17269 ;; Tracked objects:
 17270 ;;		On entry : 0/0
 17271 ;;		On exit  : 0/0
 17272 ;;		Unchanged: 0/0
 17273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17274 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17275 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17276 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17277 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17278 ;;Total ram usage:       15 bytes
 17279 ;; Hardware stack levels used: 1
 17280 ;; Hardware stack levels required when called: 16
 17281 ;; This function calls:
 17282 ;;		_getEN
 17283 ;;		_getEv
 17284 ;;		_getNN
 17285 ;;		_numEv
 17286 ;;		_sendMessage6
 17287 ;; This function is called by:
 17288 ;;		_doReqev
 17289 ;;		_pollTimedResponse
 17290 ;; This function uses a non-reentrant model
 17291 ;;
 17292                           
 17293                           	psect	text46
 17294   009FF2                     __ptext46:
 17295                           	callstack 0
 17296   009FF2                     _reqevCallback:
 17297                           	callstack 12
 17298                           
 17299                           ;incstack = 0
 17300                           ;reqevCallback@tableIndex stored from wreg
 17301   009FF2  0101               	movlb	1	; () banked
 17302   009FF4  6FDB               	movwf	reqevCallback@tableIndex& (0+255),b
 17303                           
 17304                           ;../../VLCBlib_PIC/event_teach.c: 722:     Word nodeNumber, eventNumber;;../../VLCBlib_P
      +                          IC/event_teach.c: 724:     uint8_t nEv = numEv(tableIndex);
 17305   009FF6  0101               	movlb	1	; () banked
 17306   009FF8  51DB               	movf	reqevCallback@tableIndex& (0+255),w,b
 17307   009FFA  EC9D  F044         	call	_numEv
 17308   009FFE  0101               	movlb	1	; () banked
 17309   00A000  6FD4               	movwf	reqevCallback@nEv& (0+255),b
 17310                           
 17311                           ; BSR set to: 1
 17312                           ;../../VLCBlib_PIC/event_teach.c: 725:     int16_t ev;;../../VLCBlib_PIC/event_teach.c: 
      +                          727:     if (step+1 > nEv) {
 17313   00A002  51CE               	movf	reqevCallback@step& (0+255),w,b
 17314   00A004  6FCF               	movwf	??_reqevCallback& (0+255),b
 17315   00A006  6BD0               	clrf	(??_reqevCallback+1)& (0+255),b
 17316   00A008  0E01               	movlw	1
 17317   00A00A  27CF               	addwf	??_reqevCallback& (0+255),f,b
 17318   00A00C  0E00               	movlw	0
 17319   00A00E  23D0               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 17320   00A010  51D4               	movf	reqevCallback@nEv& (0+255),w,b
 17321   00A012  6FD1               	movwf	(??_reqevCallback+2)& (0+255),b
 17322   00A014  6BD2               	clrf	(??_reqevCallback+3)& (0+255),b
 17323   00A016  51CF               	movf	??_reqevCallback& (0+255),w,b
 17324   00A018  5DD1               	subwf	(??_reqevCallback+2)& (0+255),w,b
 17325   00A01A  51D2               	movf	(??_reqevCallback+3)& (0+255),w,b
 17326   00A01C  0A80               	xorlw	128
 17327   00A01E  6FD3               	movwf	(??_reqevCallback+4)& (0+255),b
 17328   00A020  51D0               	movf	(??_reqevCallback+1)& (0+255),w,b
 17329   00A022  0A80               	xorlw	128
 17330   00A024  59D3               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 17331   00A026  B0D8               	btfsc	status,0,c
 17332   00A028  D002               	goto	l21338
 17333                           
 17334                           ; BSR set to: 1
 17335                           ;../../VLCBlib_PIC/event_teach.c: 728:         return TIMED_RESPONSE_RESULT_FINISHED;
 17336   00A02A  0E00               	movlw	0
 17337   00A02C  0012               	return	
 17338   00A02E                     l21338:
 17339                           
 17340                           ; BSR set to: 1
 17341                           ;../../VLCBlib_PIC/event_teach.c: 731:     nodeNumber.word = getNN(tableIndex);
 17342   00A02E  51DB               	movf	reqevCallback@tableIndex& (0+255),w,b
 17343   00A030  EC6B  F049         	call	_getNN
 17344   00A034  C097  F1D7         	movff	?_getNN,reqevCallback@nodeNumber
 17345   00A038  C098  F1D8         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 17346                           
 17347                           ;../../VLCBlib_PIC/event_teach.c: 732:     eventNumber.word = getEN(tableIndex);
 17348   00A03C  0101               	movlb	1	; () banked
 17349   00A03E  51DB               	movf	reqevCallback@tableIndex& (0+255),w,b
 17350   00A040  EC4D  F055         	call	_getEN
 17351   00A044  C097  F1D9         	movff	?_getEN,reqevCallback@eventNumber
 17352   00A048  C098  F1DA         	movff	?_getEN+1,reqevCallback@eventNumber+1
 17353                           
 17354                           ;../../VLCBlib_PIC/event_teach.c: 733:     ev = getEv(tableIndex, step);
 17355   00A04C  C1CE  F09D         	movff	reqevCallback@step,getEv@evNum
 17356   00A050  0101               	movlb	1	; () banked
 17357   00A052  51DB               	movf	reqevCallback@tableIndex& (0+255),w,b
 17358   00A054  EC24  F03C         	call	_getEv
 17359   00A058  C09D  F1D5         	movff	?_getEv,reqevCallback@ev
 17360   00A05C  C09E  F1D6         	movff	?_getEv+1,reqevCallback@ev+1
 17361                           
 17362                           ;../../VLCBlib_PIC/event_teach.c: 734:     if (ev >= 0) {
 17363   00A060  0101               	movlb	1	; () banked
 17364   00A062  BFD6               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 17365   00A064  D00F               	goto	l21344
 17366                           
 17367                           ; BSR set to: 1
 17368                           ;../../VLCBlib_PIC/event_teach.c: 735:         sendMessage6(OPC_EVANS, nodeNumber.bytes.
      +                          hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint8_t)ev
      +                          );
 17369   00A066  C1D8  F1C6         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 17370   00A06A  C1D7  F1C7         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 17371   00A06E  C1DA  F1C8         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 17372   00A072  C1D9  F1C9         	movff	reqevCallback@eventNumber,sendMessage6@data4
 17373   00A076  29CE               	incf	reqevCallback@step& (0+255),w,b
 17374   00A078  6FCA               	movwf	sendMessage6@data5& (0+255),b
 17375   00A07A  C1D5  F1CB         	movff	reqevCallback@ev,sendMessage6@data6
 17376   00A07E  0ED3               	movlw	211
 17377   00A080  ECE1  F05E         	call	_sendMessage6
 17378   00A084                     l21344:
 17379                           
 17380                           ;../../VLCBlib_PIC/event_teach.c: 737:     return TIMED_RESPONSE_RESULT_NEXT;
 17381   00A084  0E02               	movlw	2
 17382   00A086  0012               	return		;funcret
 17383   00A088                     __end_of_reqevCallback:
 17384                           	callstack 0
 17385                           
 17386 ;; *************** function _numEv *****************
 17387 ;; Defined at:
 17388 ;;		line 1043 in file "../../VLCBlib_PIC/event_teach.c"
 17389 ;; Parameters:    Size  Location     Type
 17390 ;;  tableIndex      1    wreg     unsigned char 
 17391 ;; Auto vars:     Size  Location     Type
 17392 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 17393 ;;  f               1   66[BANK0 ] struct .
 17394 ;;  num             1   65[BANK0 ] unsigned char 
 17395 ;; Return value:  Size  Location     Type
 17396 ;;                  1    wreg      unsigned char 
 17397 ;; Registers used:
 17398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17399 ;; Tracked objects:
 17400 ;;		On entry : 0/0
 17401 ;;		On exit  : 0/0
 17402 ;;		Unchanged: 0/0
 17403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17405 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17406 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17407 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17408 ;;Total ram usage:        7 bytes
 17409 ;; Hardware stack levels used: 1
 17410 ;; Hardware stack levels required when called: 15
 17411 ;; This function calls:
 17412 ;;		_readNVM
 17413 ;;		_validStart
 17414 ;; This function is called by:
 17415 ;;		_doReval
 17416 ;;		_doReqev
 17417 ;;		_reqevCallback
 17418 ;; This function uses a non-reentrant model
 17419 ;;
 17420                           
 17421                           	psect	text47
 17422   00893A                     __ptext47:
 17423                           	callstack 0
 17424   00893A                     _numEv:
 17425                           	callstack 12
 17426                           
 17427                           ;incstack = 0
 17428                           ;numEv@tableIndex stored from wreg
 17429   00893A  0100               	movlb	0	; () banked
 17430   00893C  6FA3               	movwf	numEv@tableIndex& (0+255),b
 17431                           
 17432                           ;../../VLCBlib_PIC/event_teach.c: 1044:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1045:     uint8_t num=0;
 17433   00893E  0E00               	movlw	0
 17434   008940  0100               	movlb	0	; () banked
 17435   008942  6FA1               	movwf	numEv@num& (0+255),b
 17436                           
 17437                           ; BSR set to: 0
 17438                           ;../../VLCBlib_PIC/event_teach.c: 1046:     if ( ! validStart(tableIndex)) {
 17439   008944  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17440   008946  EC6A  F05B         	call	_validStart
 17441   00894A  0900               	iorlw	0
 17442   00894C  A4D8               	btfss	status,2,c
 17443   00894E  D002               	goto	l20078
 17444   008950                     u20720:
 17445                           
 17446                           ;../../VLCBlib_PIC/event_teach.c: 1048:         return 0;
 17447   008950  0E00               	movlw	0
 17448   008952  0012               	return	
 17449   008954                     l20078:
 17450                           
 17451                           ;../../VLCBlib_PIC/event_teach.c: 1050:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 17452   008954  0100               	movlb	0	; () banked
 17453   008956  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17454   008958  6F9D               	movwf	??_numEv& (0+255),b
 17455   00895A  6B9E               	clrf	(??_numEv+1)& (0+255),b
 17456   00895C  3B9D               	swapf	??_numEv& (0+255),f,b
 17457   00895E  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 17458   008960  0EF0               	movlw	240
 17459   008962  179E               	andwf	(??_numEv+1)& (0+255),f,b
 17460   008964  519D               	movf	??_numEv& (0+255),w,b
 17461   008966  0B0F               	andlw	15
 17462   008968  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 17463   00896A  0EF0               	movlw	240
 17464   00896C  179D               	andwf	??_numEv& (0+255),f,b
 17465   00896E  0E80               	movlw	128
 17466   008970  259D               	addwf	??_numEv& (0+255),w,b
 17467   008972  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17468   008974  0EEF               	movlw	239
 17469   008976  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17470   008978  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17471   00897A  C09F  F091         	movff	??_numEv+2,readNVM@index
 17472   00897E  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17473   008982  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17474   008984  0E01               	movlw	1
 17475   008986  ECD9  F058         	call	_readNVM
 17476   00898A  0100               	movlb	0	; () banked
 17477   00898C  5191               	movf	?_readNVM& (0+255),w,b
 17478   00898E  6FA2               	movwf	numEv@f& (0+255),b
 17479                           
 17480                           ;../../VLCBlib_PIC/event_teach.c: 1051:     while (f.continued) {
 17481   008990  D039               	goto	l20092
 17482   008992                     l20080:
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;../../VLCBlib_PIC/event_teach.c: 1052:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 17486   008992  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17487   008994  0D10               	mullw	16
 17488   008996  CFF3 F09D          	movff	prodl,??_numEv
 17489   00899A  CFF4 F09E          	movff	prodh,??_numEv+1
 17490   00899E  0E81               	movlw	129
 17491   0089A0  259D               	addwf	??_numEv& (0+255),w,b
 17492   0089A2  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17493   0089A4  0EEF               	movlw	239
 17494   0089A6  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17495   0089A8  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17496   0089AA  C09F  F091         	movff	??_numEv+2,readNVM@index
 17497   0089AE  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17498   0089B2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17499   0089B4  0E01               	movlw	1
 17500   0089B6  ECD9  F058         	call	_readNVM
 17501   0089BA  0100               	movlb	0	; () banked
 17502   0089BC  5191               	movf	?_readNVM& (0+255),w,b
 17503   0089BE  6FA3               	movwf	numEv@tableIndex& (0+255),b
 17504                           
 17505                           ; BSR set to: 0
 17506                           ;../../VLCBlib_PIC/event_teach.c: 1053:         if (tableIndex == 0xff) {
 17507   0089C0  29A3               	incf	numEv@tableIndex& (0+255),w,b
 17508   0089C2  B4D8               	btfsc	status,2,c
 17509   0089C4  D7C5               	goto	u20720
 17510                           
 17511                           ; BSR set to: 0
 17512                           ;../../VLCBlib_PIC/event_teach.c: 1056:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 17513   0089C6  51A3               	movf	numEv@tableIndex& (0+255),w,b
 17514   0089C8  6F9D               	movwf	??_numEv& (0+255),b
 17515   0089CA  6B9E               	clrf	(??_numEv+1)& (0+255),b
 17516   0089CC  3B9D               	swapf	??_numEv& (0+255),f,b
 17517   0089CE  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 17518   0089D0  0EF0               	movlw	240
 17519   0089D2  179E               	andwf	(??_numEv+1)& (0+255),f,b
 17520   0089D4  519D               	movf	??_numEv& (0+255),w,b
 17521   0089D6  0B0F               	andlw	15
 17522   0089D8  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 17523   0089DA  0EF0               	movlw	240
 17524   0089DC  179D               	andwf	??_numEv& (0+255),f,b
 17525   0089DE  0E80               	movlw	128
 17526   0089E0  259D               	addwf	??_numEv& (0+255),w,b
 17527   0089E2  6F9F               	movwf	(??_numEv+2)& (0+255),b
 17528   0089E4  0EEF               	movlw	239
 17529   0089E6  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 17530   0089E8  6FA0               	movwf	(??_numEv+3)& (0+255),b
 17531   0089EA  C09F  F091         	movff	??_numEv+2,readNVM@index
 17532   0089EE  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 17533   0089F2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17534   0089F4  0E01               	movlw	1
 17535   0089F6  ECD9  F058         	call	_readNVM
 17536   0089FA  0100               	movlb	0	; () banked
 17537   0089FC  5191               	movf	?_readNVM& (0+255),w,b
 17538   0089FE  6FA2               	movwf	numEv@f& (0+255),b
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;../../VLCBlib_PIC/event_teach.c: 1057:         num += 10;
 17542   008A00  0E0A               	movlw	10
 17543   008A02  27A1               	addwf	numEv@num& (0+255),f,b
 17544   008A04                     l20092:
 17545                           
 17546                           ; BSR set to: 0
 17547                           ;../../VLCBlib_PIC/event_teach.c: 1051:     while (f.continued) {
 17548   008A04  B9A2               	btfsc	numEv@f& (0+255),4,b
 17549   008A06  D7C5               	goto	l20080
 17550                           
 17551                           ; BSR set to: 0
 17552                           ;../../VLCBlib_PIC/event_teach.c: 1059:     num += f.eVsUsed;
 17553   008A08  51A2               	movf	numEv@f& (0+255),w,b
 17554   008A0A  0B0F               	andlw	15
 17555   008A0C  27A1               	addwf	numEv@num& (0+255),f,b
 17556                           
 17557                           ; BSR set to: 0
 17558                           ;../../VLCBlib_PIC/event_teach.c: 1060:     return num;
 17559   008A0E  51A1               	movf	numEv@num& (0+255),w,b
 17560   008A10  0012               	return		;funcret
 17561   008A12                     __end_of_numEv:
 17562                           	callstack 0
 17563                           
 17564 ;; *************** function _tableIndexToEvtIdx *****************
 17565 ;; Defined at:
 17566 ;;		line 1162 in file "../../VLCBlib_PIC/event_teach.c"
 17567 ;; Parameters:    Size  Location     Type
 17568 ;;  tableIndex      1    wreg     unsigned char 
 17569 ;; Auto vars:     Size  Location     Type
 17570 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 17571 ;; Return value:  Size  Location     Type
 17572 ;;                  1    wreg      unsigned char 
 17573 ;; Registers used:
 17574 ;;		wreg, status,2, status,0
 17575 ;; Tracked objects:
 17576 ;;		On entry : 0/0
 17577 ;;		On exit  : 0/0
 17578 ;;		Unchanged: 0/0
 17579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17581 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17583 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17584 ;;Total ram usage:        1 bytes
 17585 ;; Hardware stack levels used: 1
 17586 ;; Hardware stack levels required when called: 12
 17587 ;; This function calls:
 17588 ;;		Nothing
 17589 ;; This function is called by:
 17590 ;;		_nerdCallback
 17591 ;; This function uses a non-reentrant model
 17592 ;;
 17593                           
 17594                           	psect	text48
 17595   00C3D2                     __ptext48:
 17596                           	callstack 0
 17597   00C3D2                     _tableIndexToEvtIdx:
 17598                           	callstack 15
 17599                           
 17600                           ;incstack = 0
 17601                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 17602   00C3D2  0100               	movlb	0	; () banked
 17603   00C3D4  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 17604                           
 17605                           ;../../VLCBlib_PIC/event_teach.c: 1163:     return tableIndex + 1;
 17606   00C3D6  0100               	movlb	0	; () banked
 17607   00C3D8  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 17608                           
 17609                           ; BSR set to: 0
 17610   00C3DA  0012               	return		;funcret
 17611   00C3DC                     __end_of_tableIndexToEvtIdx:
 17612                           	callstack 0
 17613                           
 17614 ;; *************** function _setNV *****************
 17615 ;; Defined at:
 17616 ;;		line 207 in file "../../VLCBlib_PIC/nv.c"
 17617 ;; Parameters:    Size  Location     Type
 17618 ;;  index           1    wreg     unsigned char 
 17619 ;;  value           1   58[BANK1 ] unsigned char 
 17620 ;; Auto vars:     Size  Location     Type
 17621 ;;  index           1   62[BANK1 ] unsigned char 
 17622 ;;  oldValue        1   61[BANK1 ] unsigned char 
 17623 ;; Return value:  Size  Location     Type
 17624 ;;                  1    wreg      unsigned char 
 17625 ;; Registers used:
 17626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17627 ;; Tracked objects:
 17628 ;;		On entry : 0/0
 17629 ;;		On exit  : 0/0
 17630 ;;		Unchanged: 0/0
 17631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17632 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17633 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17634 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17635 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17636 ;;Total ram usage:        5 bytes
 17637 ;; Hardware stack levels used: 1
 17638 ;; Hardware stack levels required when called: 26
 17639 ;; This function calls:
 17640 ;;		_APP_nvValidate
 17641 ;;		_APP_nvValueChanged
 17642 ;;		_writeNVM
 17643 ;; This function is called by:
 17644 ;;		_nvProcessMessage
 17645 ;; This function uses a non-reentrant model
 17646 ;;
 17647                           
 17648                           	psect	text49
 17649   00A9A4                     __ptext49:
 17650                           	callstack 0
 17651   00A9A4                     _setNV:
 17652                           	callstack 2
 17653                           
 17654                           ; BSR set to: 0
 17655                           ;incstack = 0
 17656                           ;setNV@index stored from wreg
 17657   00A9A4  0101               	movlb	1	; () banked
 17658   00A9A6  6FFC               	movwf	setNV@index& (0+255),b
 17659                           
 17660                           ;../../VLCBlib_PIC/nv.c: 208:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 210:     if 
      +                          (index > 127) return CMDERR_INV_NV_IDX;
 17661   00A9A8  0E7F               	movlw	127
 17662   00A9AA  0101               	movlb	1	; () banked
 17663   00A9AC  65FC               	cpfsgt	setNV@index& (0+255),b
 17664   00A9AE  D002               	goto	l21430
 17665                           
 17666                           ; BSR set to: 1
 17667   00A9B0  0E0A               	movlw	10
 17668   00A9B2  0012               	return	
 17669   00A9B4                     l21430:
 17670                           
 17671                           ; BSR set to: 1
 17672                           ;../../VLCBlib_PIC/nv.c: 211:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 17673   00A9B4  C1F8  F093         	movff	setNV@value,APP_nvValidate@value
 17674   00A9B8  51FC               	movf	setNV@index& (0+255),w,b
 17675   00A9BA  ECC1  F059         	call	_APP_nvValidate
 17676   00A9BE  0900               	iorlw	0
 17677   00A9C0  A4D8               	btfss	status,2,c
 17678   00A9C2  D002               	goto	l21436
 17679   00A9C4  0E0C               	movlw	12
 17680   00A9C6  0012               	return	
 17681   00A9C8                     l21436:
 17682                           
 17683                           ;../../VLCBlib_PIC/nv.c: 213:     oldValue = nvCache[index];
 17684   00A9C8  0E00               	movlw	low _nvCache
 17685   00A9CA  0101               	movlb	1	; () banked
 17686   00A9CC  25FC               	addwf	setNV@index& (0+255),w,b
 17687   00A9CE  6ED9               	movwf	fsr2l,c
 17688   00A9D0  6ADA               	clrf	fsr2h,c
 17689   00A9D2  0E04               	movlw	high _nvCache
 17690   00A9D4  22DA               	addwfc	fsr2h,f,c
 17691   00A9D6  50DF               	movf	indf2,w,c
 17692   00A9D8  6FFB               	movwf	setNV@oldValue& (0+255),b
 17693                           
 17694                           ;../../VLCBlib_PIC/nv.c: 214:     nvCache[index] = value;
 17695   00A9DA  0E00               	movlw	low _nvCache
 17696   00A9DC  25FC               	addwf	setNV@index& (0+255),w,b
 17697   00A9DE  6ED9               	movwf	fsr2l,c
 17698   00A9E0  6ADA               	clrf	fsr2h,c
 17699   00A9E2  0E04               	movlw	high _nvCache
 17700   00A9E4  22DA               	addwfc	fsr2h,f,c
 17701   00A9E6  C1F8  FFDF         	movff	setNV@value,indf2
 17702                           
 17703                           ; BSR set to: 1
 17704                           ;../../VLCBlib_PIC/nv.c: 215:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 17705   00A9EA  0E80               	movlw	128
 17706   00A9EC  25FC               	addwf	setNV@index& (0+255),w,b
 17707   00A9EE  6FF9               	movwf	??_setNV& (0+255),b
 17708   00A9F0  6BFA               	clrf	(??_setNV+1)& (0+255),b
 17709   00A9F2  0EFF               	movlw	255
 17710   00A9F4  23FA               	addwfc	(??_setNV+1)& (0+255),f,b
 17711   00A9F6  C1F9  F0A4         	movff	??_setNV,writeNVM@index
 17712   00A9FA  C1FA  F0A5         	movff	??_setNV+1,writeNVM@index+1
 17713   00A9FE  0100               	movlb	0	; () banked
 17714   00AA00  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 17715   00AA02  C1F8  F0A7         	movff	setNV@value,writeNVM@value
 17716   00AA06  0E01               	movlw	1
 17717   00AA08  EC91  F05B         	call	_writeNVM
 17718                           
 17719                           ;../../VLCBlib_PIC/nv.c: 220:     APP_nvValueChanged(index, value, oldValue);
 17720   00AA0C  C1F8  F1F1         	movff	setNV@value,APP_nvValueChanged@value
 17721   00AA10  C1FB  F1F2         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 17722   00AA14  0101               	movlb	1	; () banked
 17723   00AA16  51FC               	movf	setNV@index& (0+255),w,b
 17724   00AA18  ECA6  F014         	call	_APP_nvValueChanged
 17725                           
 17726                           ;../../VLCBlib_PIC/nv.c: 221:     return 0;
 17727   00AA1C  0E00               	movlw	0
 17728   00AA1E  0012               	return		;funcret
 17729   00AA20                     __end_of_setNV:
 17730                           	callstack 0
 17731                           
 17732 ;; *************** function _APP_nvValueChanged *****************
 17733 ;; Defined at:
 17734 ;;		line 104 in file "../universalNv.c"
 17735 ;; Parameters:    Size  Location     Type
 17736 ;;  index           1    wreg     unsigned char 
 17737 ;;  value           1   51[BANK1 ] unsigned char 
 17738 ;;  oldValue        1   52[BANK1 ] unsigned char 
 17739 ;; Auto vars:     Size  Location     Type
 17740 ;;  index           1   56[BANK1 ] unsigned char 
 17741 ;;  io              1   57[BANK1 ] unsigned char 
 17742 ;;  nv              1    0        unsigned char 
 17743 ;; Return value:  Size  Location     Type
 17744 ;;                  1    wreg      void 
 17745 ;; Registers used:
 17746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17747 ;; Tracked objects:
 17748 ;;		On entry : 0/0
 17749 ;;		On exit  : 0/0
 17750 ;;		Unchanged: 0/0
 17751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17752 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17753 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17754 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17755 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17756 ;;Total ram usage:        7 bytes
 17757 ;; Hardware stack levels used: 1
 17758 ;; Hardware stack levels required when called: 25
 17759 ;; This function calls:
 17760 ;;		___awdiv
 17761 ;;		___awmod
 17762 ;;		_getNV
 17763 ;;		_setBounceState
 17764 ;;		_setMultiState
 17765 ;;		_setServoPosition
 17766 ;;		_setServoState
 17767 ;;		_setTimedResponseDelay
 17768 ;;		_setType
 17769 ;;		_startBounceOutput
 17770 ;;		_startMultiOutput
 17771 ;;		_startServoOutput
 17772 ;; This function is called by:
 17773 ;;		_setNV
 17774 ;; This function uses a non-reentrant model
 17775 ;;
 17776                           
 17777                           	psect	text50
 17778   00294C                     __ptext50:
 17779                           	callstack 0
 17780   00294C                     _APP_nvValueChanged:
 17781                           	callstack 2
 17782                           
 17783                           ;incstack = 0
 17784                           ;APP_nvValueChanged@index stored from wreg
 17785   00294C  0101               	movlb	1	; () banked
 17786   00294E  6FF6               	movwf	APP_nvValueChanged@index& (0+255),b
 17787                           
 17788                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 17789   002950  0EF0               	movlw	240
 17790   002952  0101               	movlb	1	; () banked
 17791   002954  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17792   002956  0100               	movlb	0	; () banked
 17793   002958  6F8D               	movwf	___awmod@dividend& (0+255),b
 17794   00295A  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 17795   00295C  0EFF               	movlw	255
 17796   00295E  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 17797   002960  0E00               	movlw	0
 17798   002962  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 17799   002964  0E07               	movlw	7
 17800   002966  6F8F               	movwf	___awmod@divisor& (0+255),b
 17801   002968  EC71  F056         	call	___awmod	;wreg free
 17802   00296C  0100               	movlb	0	; () banked
 17803   00296E  518D               	movf	?___awmod& (0+255),w,b
 17804   002970  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 17805   002972  A4D8               	btfss	status,2,c
 17806   002974  D01B               	goto	l19748
 17807                           
 17808                           ; BSR set to: 0
 17809                           ;../universalNv.c: 110:         io = index-16;
 17810   002976  0101               	movlb	1	; () banked
 17811   002978  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 17812   00297A  0FF0               	addlw	240
 17813   00297C  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 17814                           
 17815                           ; BSR set to: 1
 17816                           ;../universalNv.c: 111:         io /= 7;
 17817   00297E  C1F7  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 17818   002982  0100               	movlb	0	; () banked
 17819   002984  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17820   002986  0E00               	movlw	0
 17821   002988  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17822   00298A  0E07               	movlw	7
 17823   00298C  6F99               	movwf	___awdiv@divisor& (0+255),b
 17824   00298E  ECCE  F052         	call	___awdiv	;wreg free
 17825   002992  0100               	movlb	0	; () banked
 17826   002994  5197               	movf	?___awdiv& (0+255),w,b
 17827   002996  0101               	movlb	1	; () banked
 17828   002998  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 17829                           
 17830                           ; BSR set to: 1
 17831                           ;../universalNv.c: 112:         if (oldValue != value) {
 17832   00299A  51F1               	movf	APP_nvValueChanged@value& (0+255),w,b
 17833   00299C  19F2               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 17834   00299E  B4D8               	btfsc	status,2,c
 17835   0029A0  D005               	goto	l19748
 17836                           
 17837                           ; BSR set to: 1
 17838                           ;../universalNv.c: 113:             setType(io, value);
 17839   0029A2  C1F1  F1EE         	movff	APP_nvValueChanged@value,setType@type
 17840   0029A6  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 17841   0029A8  EC15  F058         	call	_setType
 17842   0029AC                     l19748:
 17843                           
 17844                           ;../universalNv.c: 116:     if (index == 5) {
 17845   0029AC  0E05               	movlw	5
 17846   0029AE  0101               	movlb	1	; () banked
 17847   0029B0  19F6               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 17848   0029B2  A4D8               	btfss	status,2,c
 17849   0029B4  D003               	goto	l19752
 17850                           
 17851                           ; BSR set to: 1
 17852                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 17853   0029B6  51F1               	movf	APP_nvValueChanged@value& (0+255),w,b
 17854   0029B8  ECEE  F061         	call	_setTimedResponseDelay
 17855   0029BC                     l19752:
 17856                           
 17857                           ;../universalNv.c: 121:     if (index == 4) {
 17858   0029BC  0E04               	movlw	4
 17859   0029BE  0101               	movlb	1	; () banked
 17860   0029C0  19F6               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 17861   0029C2  B4D8               	btfsc	status,2,c
 17862                           
 17863                           ; BSR set to: 1
 17864                           ;../universalNv.c: 122:         WPUB = value;
 17865   0029C4  C1F1  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 17866                           
 17867                           ; BSR set to: 1
 17868                           ;../universalNv.c: 215:     if (index >= 16) {
 17869   0029C8  0E0F               	movlw	15
 17870   0029CA  65F6               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 17871   0029CC  0012               	return	
 17872                           
 17873                           ; BSR set to: 1
 17874                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 17875   0029CE  0EF0               	movlw	240
 17876   0029D0  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17877   0029D2  0100               	movlb	0	; () banked
 17878   0029D4  6F97               	movwf	___awdiv@dividend& (0+255),b
 17879   0029D6  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17880   0029D8  0EFF               	movlw	255
 17881   0029DA  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17882   0029DC  0E00               	movlw	0
 17883   0029DE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17884   0029E0  0E07               	movlw	7
 17885   0029E2  6F99               	movwf	___awdiv@divisor& (0+255),b
 17886   0029E4  ECCE  F052         	call	___awdiv	;wreg free
 17887   0029E8  0100               	movlb	0	; () banked
 17888   0029EA  5197               	movf	?___awdiv& (0+255),w,b
 17889   0029EC  0101               	movlb	1	; () banked
 17890   0029EE  6FF7               	movwf	APP_nvValueChanged@io& (0+255),b
 17891   0029F0  0EF0               	movlw	240
 17892   0029F2  25F6               	addwf	APP_nvValueChanged@index& (0+255),w,b
 17893   0029F4  0100               	movlb	0	; () banked
 17894   0029F6  6F8D               	movwf	___awmod@dividend& (0+255),b
 17895   0029F8  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 17896   0029FA  0EFF               	movlw	255
 17897   0029FC  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 17898   0029FE  0E00               	movlw	0
 17899   002A00  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 17900   002A02  0E07               	movlw	7
 17901   002A04  6F8F               	movwf	___awmod@divisor& (0+255),b
 17902   002A06  EC71  F056         	call	___awmod	;wreg free
 17903                           
 17904                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 17905   002A0A  D1D3               	goto	l19830
 17906   002A0C                     l19760:
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 17910   002A0C  0101               	movlb	1	; () banked
 17911   002A0E  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 17912   002A10  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 17913   002A12  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17914   002A14  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 17915   002A16  0D07               	mullw	7
 17916   002A18  0E12               	movlw	18
 17917   002A1A  26F3               	addwf	243,f,c
 17918   002A1C  0E00               	movlw	0
 17919   002A1E  22F4               	addwfc	244,f,c
 17920   002A20  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 17921   002A22  18F3               	xorwf	243,w,c
 17922   002A24  E113               	bnz	l19766
 17923   002A26  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17924   002A28  18F4               	xorwf	244,w,c
 17925   002A2A  A4D8               	btfss	status,2,c
 17926   002A2C  D00F               	goto	l19766
 17927                           
 17928                           ; BSR set to: 1
 17929                           ;../universalNv.c: 233:                     setServoState(io, 2);
 17930   002A2E  0E02               	movlw	2
 17931   002A30  0100               	movlb	0	; () banked
 17932   002A32  6F91               	movwf	setServoState@action& (0+255),b
 17933   002A34  0101               	movlb	1	; () banked
 17934   002A36  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 17935   002A38  EC32  F04B         	call	_setServoState
 17936                           
 17937                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 17938   002A3C  0E02               	movlw	2
 17939   002A3E  0100               	movlb	0	; () banked
 17940   002A40  6F91               	movwf	startServoOutput@action& (0+255),b
 17941   002A42  0101               	movlb	1	; () banked
 17942   002A44  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 17943   002A46  EC09  F049         	call	_startServoOutput
 17944                           
 17945                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 17946   002A4A  0012               	return	
 17947   002A4C                     l19766:
 17948                           
 17949                           ; BSR set to: 1
 17950   002A4C  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 17951   002A4E  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 17952   002A50  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17953   002A52  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 17954   002A54  0D07               	mullw	7
 17955   002A56  0E13               	movlw	19
 17956   002A58  26F3               	addwf	243,f,c
 17957   002A5A  0E00               	movlw	0
 17958   002A5C  22F4               	addwfc	244,f,c
 17959   002A5E  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 17960   002A60  18F3               	xorwf	243,w,c
 17961   002A62  E113               	bnz	l19772
 17962   002A64  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 17963   002A66  18F4               	xorwf	244,w,c
 17964   002A68  A4D8               	btfss	status,2,c
 17965   002A6A  D00F               	goto	l19772
 17966                           
 17967                           ; BSR set to: 1
 17968                           ;../universalNv.c: 236:                     setServoState(io, 1);
 17969   002A6C  0E01               	movlw	1
 17970   002A6E  0100               	movlb	0	; () banked
 17971   002A70  6F91               	movwf	setServoState@action& (0+255),b
 17972   002A72  0101               	movlb	1	; () banked
 17973   002A74  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 17974   002A76  EC32  F04B         	call	_setServoState
 17975                           
 17976                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 17977   002A7A  0E01               	movlw	1
 17978   002A7C  0100               	movlb	0	; () banked
 17979   002A7E  6F91               	movwf	startServoOutput@action& (0+255),b
 17980   002A80  0101               	movlb	1	; () banked
 17981   002A82  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 17982   002A84  EC09  F049         	call	_startServoOutput
 17983                           
 17984                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 17985   002A88  0012               	return	
 17986   002A8A                     l19772:
 17987                           
 17988                           ; BSR set to: 1
 17989   002A8A  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 17990   002A8C  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 17991   002A8E  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 17992   002A90  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 17993   002A92  0D07               	mullw	7
 17994   002A94  0E11               	movlw	17
 17995   002A96  26F3               	addwf	243,f,c
 17996   002A98  0E00               	movlw	0
 17997   002A9A  22F4               	addwfc	244,f,c
 17998   002A9C  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 17999   002A9E  18F3               	xorwf	243,w,c
 18000   002AA0  E103               	bnz	u20211
 18001   002AA2  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18002   002AA4  18F4               	xorwf	244,w,c
 18003   002AA6  A4D8               	btfss	status,2,c
 18004   002AA8                     u20211:
 18005   002AA8  0012               	return	
 18006                           
 18007                           ; BSR set to: 1
 18008                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 18009   002AAA  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18010   002AAC  0012               	return	
 18011                           
 18012                           ; BSR set to: 1
 18013   002AAE  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18014   002AB0  0012               	return	
 18015                           
 18016                           ; BSR set to: 1
 18017                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 18018   002AB2  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18019   002AB4  0D07               	mullw	7
 18020   002AB6  50F3               	movf	243,w,c
 18021   002AB8  0F12               	addlw	18
 18022   002ABA  EC7F  F05D         	call	_getNV
 18023   002ABE  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18024   002AC2  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18025   002AC6  0E00               	movlw	0
 18026   002AC8  0100               	movlb	0	; () banked
 18027   002ACA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18028   002ACC  0E02               	movlw	2
 18029   002ACE  6F99               	movwf	___awdiv@divisor& (0+255),b
 18030   002AD0  ECCE  F052         	call	___awdiv	;wreg free
 18031   002AD4  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 18032   002AD8  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18033   002ADC  0101               	movlb	1	; () banked
 18034   002ADE  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18035   002AE0  0D07               	mullw	7
 18036   002AE2  50F3               	movf	243,w,c
 18037   002AE4  0F13               	addlw	19
 18038   002AE6  EC7F  F05D         	call	_getNV
 18039   002AEA  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18040   002AEE  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18041   002AF2  0E00               	movlw	0
 18042   002AF4  0100               	movlb	0	; () banked
 18043   002AF6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18044   002AF8  0E02               	movlw	2
 18045   002AFA  6F99               	movwf	___awdiv@divisor& (0+255),b
 18046   002AFC  ECCE  F052         	call	___awdiv	;wreg free
 18047   002B00  0100               	movlb	0	; () banked
 18048   002B02  5197               	movf	?___awdiv& (0+255),w,b
 18049   002B04  0101               	movlb	1	; () banked
 18050   002B06  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18051   002B08  0100               	movlb	0	; () banked
 18052   002B0A  6F9F               	movwf	setServoPosition@pos& (0+255),b
 18053   002B0C  0101               	movlb	1	; () banked
 18054   002B0E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18055   002B10  EC86  F060         	call	_setServoPosition
 18056                           
 18057                           ; BSR set to: 1
 18058                           
 18059                           ;../universalNv.c: 245:                 }
 18060   002B14  0012               	return	
 18061   002B16                     l19780:
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 18065   002B16  0101               	movlb	1	; () banked
 18066   002B18  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 18067   002B1A  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 18068   002B1C  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18069   002B1E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18070   002B20  0D07               	mullw	7
 18071   002B22  0E13               	movlw	19
 18072   002B24  26F3               	addwf	243,f,c
 18073   002B26  0E00               	movlw	0
 18074   002B28  22F4               	addwfc	244,f,c
 18075   002B2A  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 18076   002B2C  18F3               	xorwf	243,w,c
 18077   002B2E  E113               	bnz	l19784
 18078   002B30  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18079   002B32  18F4               	xorwf	244,w,c
 18080   002B34  A4D8               	btfss	status,2,c
 18081   002B36  D00F               	goto	l19784
 18082                           
 18083                           ; BSR set to: 1
 18084                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 18085   002B38  0E02               	movlw	2
 18086   002B3A  0100               	movlb	0	; () banked
 18087   002B3C  6F91               	movwf	setBounceState@action& (0+255),b
 18088   002B3E  0101               	movlb	1	; () banked
 18089   002B40  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18090   002B42  EC88  F04B         	call	_setBounceState
 18091                           
 18092                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 18093   002B46  0E02               	movlw	2
 18094   002B48  0100               	movlb	0	; () banked
 18095   002B4A  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18096   002B4C  0101               	movlb	1	; () banked
 18097   002B4E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18098   002B50  ECB0  F057         	call	_startBounceOutput
 18099                           
 18100                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 18101   002B54  0012               	return	
 18102   002B56                     l19784:
 18103                           
 18104                           ; BSR set to: 1
 18105   002B56  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 18106   002B58  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 18107   002B5A  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18108   002B5C  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18109   002B5E  0D07               	mullw	7
 18110   002B60  0E12               	movlw	18
 18111   002B62  26F3               	addwf	243,f,c
 18112   002B64  0E00               	movlw	0
 18113   002B66  22F4               	addwfc	244,f,c
 18114   002B68  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 18115   002B6A  18F3               	xorwf	243,w,c
 18116   002B6C  E113               	bnz	l19788
 18117   002B6E  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18118   002B70  18F4               	xorwf	244,w,c
 18119   002B72  A4D8               	btfss	status,2,c
 18120   002B74  D00F               	goto	l19788
 18121                           
 18122                           ; BSR set to: 1
 18123                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 18124   002B76  0E01               	movlw	1
 18125   002B78  0100               	movlb	0	; () banked
 18126   002B7A  6F91               	movwf	setBounceState@action& (0+255),b
 18127   002B7C  0101               	movlb	1	; () banked
 18128   002B7E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18129   002B80  EC88  F04B         	call	_setBounceState
 18130                           
 18131                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 18132   002B84  0E01               	movlw	1
 18133   002B86  0100               	movlb	0	; () banked
 18134   002B88  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18135   002B8A  0101               	movlb	1	; () banked
 18136   002B8C  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18137   002B8E  ECB0  F057         	call	_startBounceOutput
 18138                           
 18139                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 18140   002B92  0012               	return	
 18141   002B94                     l19788:
 18142                           
 18143                           ; BSR set to: 1
 18144   002B94  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 18145   002B96  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 18146   002B98  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18147   002B9A  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18148   002B9C  0D07               	mullw	7
 18149   002B9E  0E11               	movlw	17
 18150   002BA0  26F3               	addwf	243,f,c
 18151   002BA2  0E00               	movlw	0
 18152   002BA4  22F4               	addwfc	244,f,c
 18153   002BA6  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 18154   002BA8  18F3               	xorwf	243,w,c
 18155   002BAA  E103               	bnz	u20261
 18156   002BAC  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18157   002BAE  18F4               	xorwf	244,w,c
 18158   002BB0  A4D8               	btfss	status,2,c
 18159   002BB2                     u20261:
 18160   002BB2  0012               	return	
 18161                           
 18162                           ; BSR set to: 1
 18163                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 18164   002BB4  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18165   002BB6  0012               	return	
 18166                           
 18167                           ; BSR set to: 1
 18168   002BB8  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18169   002BBA  0012               	return	
 18170                           
 18171                           ; BSR set to: 1
 18172                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 18173   002BBC  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18174   002BBE  0D07               	mullw	7
 18175   002BC0  50F3               	movf	243,w,c
 18176   002BC2  0F12               	addlw	18
 18177   002BC4  EC7F  F05D         	call	_getNV
 18178   002BC8  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18179   002BCC  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18180   002BD0  0E00               	movlw	0
 18181   002BD2  0100               	movlb	0	; () banked
 18182   002BD4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18183   002BD6  0E02               	movlw	2
 18184   002BD8  6F99               	movwf	___awdiv@divisor& (0+255),b
 18185   002BDA  ECCE  F052         	call	___awdiv	;wreg free
 18186   002BDE  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 18187   002BE2  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18188   002BE6  0101               	movlb	1	; () banked
 18189   002BE8  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18190   002BEA  0D07               	mullw	7
 18191   002BEC  50F3               	movf	243,w,c
 18192   002BEE  0F13               	addlw	19
 18193   002BF0  EC7F  F05D         	call	_getNV
 18194   002BF4  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18195   002BF8  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18196   002BFC  0E00               	movlw	0
 18197   002BFE  0100               	movlb	0	; () banked
 18198   002C00  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18199   002C02  0E02               	movlw	2
 18200   002C04  6F99               	movwf	___awdiv@divisor& (0+255),b
 18201   002C06  ECCE  F052         	call	___awdiv	;wreg free
 18202   002C0A  0100               	movlb	0	; () banked
 18203   002C0C  5197               	movf	?___awdiv& (0+255),w,b
 18204   002C0E  0101               	movlb	1	; () banked
 18205   002C10  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18206   002C12  6FF5               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18207   002C14  0E40               	movlw	low _currentPos
 18208   002C16  25F7               	addwf	APP_nvValueChanged@io& (0+255),w,b
 18209   002C18  6ED9               	movwf	fsr2l,c
 18210   002C1A  6ADA               	clrf	fsr2h,c
 18211   002C1C  0E01               	movlw	high _currentPos
 18212   002C1E  22DA               	addwfc	fsr2h,f,c
 18213   002C20  C1F5  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18214   002C24  0012               	return	
 18215   002C26                     l19796:
 18216                           
 18217                           ; BSR set to: 0
 18218                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 18219   002C26  0101               	movlb	1	; () banked
 18220   002C28  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 18221   002C2A  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 18222   002C2C  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18223   002C2E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18224   002C30  0D07               	mullw	7
 18225   002C32  0E13               	movlw	19
 18226   002C34  26F3               	addwf	243,f,c
 18227   002C36  0E00               	movlw	0
 18228   002C38  22F4               	addwfc	244,f,c
 18229   002C3A  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 18230   002C3C  18F3               	xorwf	243,w,c
 18231   002C3E  E113               	bnz	l19802
 18232   002C40  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18233   002C42  18F4               	xorwf	244,w,c
 18234   002C44  A4D8               	btfss	status,2,c
 18235   002C46  D00F               	goto	l19802
 18236                           
 18237                           ; BSR set to: 1
 18238                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 18239   002C48  0E00               	movlw	0
 18240   002C4A  0100               	movlb	0	; () banked
 18241   002C4C  6F91               	movwf	setMultiState@action& (0+255),b
 18242   002C4E  0101               	movlb	1	; () banked
 18243   002C50  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18244   002C52  ECDB  F045         	call	_setMultiState
 18245                           
 18246                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 18247   002C56  0E00               	movlw	0
 18248   002C58  0100               	movlb	0	; () banked
 18249   002C5A  6F91               	movwf	startMultiOutput@action& (0+255),b
 18250   002C5C  0101               	movlb	1	; () banked
 18251   002C5E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18252   002C60  EC79  F04E         	call	_startMultiOutput
 18253                           
 18254                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 18255   002C64  0012               	return	
 18256   002C66                     l19802:
 18257                           
 18258                           ; BSR set to: 1
 18259   002C66  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 18260   002C68  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 18261   002C6A  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18262   002C6C  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18263   002C6E  0D07               	mullw	7
 18264   002C70  0E14               	movlw	20
 18265   002C72  26F3               	addwf	243,f,c
 18266   002C74  0E00               	movlw	0
 18267   002C76  22F4               	addwfc	244,f,c
 18268   002C78  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 18269   002C7A  18F3               	xorwf	243,w,c
 18270   002C7C  E113               	bnz	l19808
 18271   002C7E  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18272   002C80  18F4               	xorwf	244,w,c
 18273   002C82  A4D8               	btfss	status,2,c
 18274   002C84  D00F               	goto	l19808
 18275                           
 18276                           ; BSR set to: 1
 18277                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 18278   002C86  0E01               	movlw	1
 18279   002C88  0100               	movlb	0	; () banked
 18280   002C8A  6F91               	movwf	setMultiState@action& (0+255),b
 18281   002C8C  0101               	movlb	1	; () banked
 18282   002C8E  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18283   002C90  ECDB  F045         	call	_setMultiState
 18284                           
 18285                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 18286   002C94  0E01               	movlw	1
 18287   002C96  0100               	movlb	0	; () banked
 18288   002C98  6F91               	movwf	startMultiOutput@action& (0+255),b
 18289   002C9A  0101               	movlb	1	; () banked
 18290   002C9C  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18291   002C9E  EC79  F04E         	call	_startMultiOutput
 18292                           
 18293                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 18294   002CA2  0012               	return	
 18295   002CA4                     l19808:
 18296                           
 18297                           ; BSR set to: 1
 18298   002CA4  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 18299   002CA6  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 18300   002CA8  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18301   002CAA  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18302   002CAC  0D07               	mullw	7
 18303   002CAE  0E15               	movlw	21
 18304   002CB0  26F3               	addwf	243,f,c
 18305   002CB2  0E00               	movlw	0
 18306   002CB4  22F4               	addwfc	244,f,c
 18307   002CB6  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 18308   002CB8  18F3               	xorwf	243,w,c
 18309   002CBA  E113               	bnz	l19814
 18310   002CBC  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18311   002CBE  18F4               	xorwf	244,w,c
 18312   002CC0  A4D8               	btfss	status,2,c
 18313   002CC2  D00F               	goto	l19814
 18314                           
 18315                           ; BSR set to: 1
 18316                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 18317   002CC4  0E02               	movlw	2
 18318   002CC6  0100               	movlb	0	; () banked
 18319   002CC8  6F91               	movwf	setMultiState@action& (0+255),b
 18320   002CCA  0101               	movlb	1	; () banked
 18321   002CCC  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18322   002CCE  ECDB  F045         	call	_setMultiState
 18323                           
 18324                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 18325   002CD2  0E02               	movlw	2
 18326   002CD4  0100               	movlb	0	; () banked
 18327   002CD6  6F91               	movwf	startMultiOutput@action& (0+255),b
 18328   002CD8  0101               	movlb	1	; () banked
 18329   002CDA  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18330   002CDC  EC79  F04E         	call	_startMultiOutput
 18331                           
 18332                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 18333   002CE0  0012               	return	
 18334   002CE2                     l19814:
 18335                           
 18336                           ; BSR set to: 1
 18337   002CE2  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 18338   002CE4  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 18339   002CE6  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18340   002CE8  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18341   002CEA  0D07               	mullw	7
 18342   002CEC  0E16               	movlw	22
 18343   002CEE  26F3               	addwf	243,f,c
 18344   002CF0  0E00               	movlw	0
 18345   002CF2  22F4               	addwfc	244,f,c
 18346   002CF4  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 18347   002CF6  18F3               	xorwf	243,w,c
 18348   002CF8  E113               	bnz	l19820
 18349   002CFA  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18350   002CFC  18F4               	xorwf	244,w,c
 18351   002CFE  A4D8               	btfss	status,2,c
 18352   002D00  D00F               	goto	l19820
 18353                           
 18354                           ; BSR set to: 1
 18355                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 18356   002D02  0E03               	movlw	3
 18357   002D04  0100               	movlb	0	; () banked
 18358   002D06  6F91               	movwf	setMultiState@action& (0+255),b
 18359   002D08  0101               	movlb	1	; () banked
 18360   002D0A  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18361   002D0C  ECDB  F045         	call	_setMultiState
 18362                           
 18363                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 18364   002D10  0E03               	movlw	3
 18365   002D12  0100               	movlb	0	; () banked
 18366   002D14  6F91               	movwf	startMultiOutput@action& (0+255),b
 18367   002D16  0101               	movlb	1	; () banked
 18368   002D18  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18369   002D1A  EC79  F04E         	call	_startMultiOutput
 18370                           
 18371                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 18372   002D1E  0012               	return	
 18373   002D20                     l19820:
 18374                           
 18375                           ; BSR set to: 1
 18376   002D20  51F6               	movf	APP_nvValueChanged@index& (0+255),w,b
 18377   002D22  6FF3               	movwf	??_APP_nvValueChanged& (0+255),b
 18378   002D24  6BF4               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18379   002D26  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18380   002D28  0D07               	mullw	7
 18381   002D2A  0E11               	movlw	17
 18382   002D2C  26F3               	addwf	243,f,c
 18383   002D2E  0E00               	movlw	0
 18384   002D30  22F4               	addwfc	244,f,c
 18385   002D32  51F3               	movf	??_APP_nvValueChanged& (0+255),w,b
 18386   002D34  18F3               	xorwf	243,w,c
 18387   002D36  E154               	bnz	l772
 18388   002D38  51F4               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18389   002D3A  18F4               	xorwf	244,w,c
 18390   002D3C  A4D8               	btfss	status,2,c
 18391   002D3E  0012               	return	
 18392                           
 18393                           ; BSR set to: 1
 18394                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 18395   002D40  AFF1               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18396   002D42  0012               	return	
 18397                           
 18398                           ; BSR set to: 1
 18399   002D44  BFF2               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18400   002D46  0012               	return	
 18401                           
 18402                           ; BSR set to: 1
 18403                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 18404   002D48  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18405   002D4A  0D07               	mullw	7
 18406   002D4C  50F3               	movf	243,w,c
 18407   002D4E  0F12               	addlw	18
 18408   002D50  EC7F  F05D         	call	_getNV
 18409   002D54  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18410   002D58  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18411   002D5C  0E00               	movlw	0
 18412   002D5E  0100               	movlb	0	; () banked
 18413   002D60  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18414   002D62  0E02               	movlw	2
 18415   002D64  6F99               	movwf	___awdiv@divisor& (0+255),b
 18416   002D66  ECCE  F052         	call	___awdiv	;wreg free
 18417   002D6A  C097  F1F3         	movff	?___awdiv,??_APP_nvValueChanged
 18418   002D6E  C098  F1F4         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18419   002D72  0101               	movlb	1	; () banked
 18420   002D74  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18421   002D76  0D07               	mullw	7
 18422   002D78  50F3               	movf	243,w,c
 18423   002D7A  0F13               	addlw	19
 18424   002D7C  EC7F  F05D         	call	_getNV
 18425   002D80  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18426   002D84  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18427   002D88  0E00               	movlw	0
 18428   002D8A  0100               	movlb	0	; () banked
 18429   002D8C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18430   002D8E  0E02               	movlw	2
 18431   002D90  6F99               	movwf	___awdiv@divisor& (0+255),b
 18432   002D92  ECCE  F052         	call	___awdiv	;wreg free
 18433   002D96  0100               	movlb	0	; () banked
 18434   002D98  5197               	movf	?___awdiv& (0+255),w,b
 18435   002D9A  0101               	movlb	1	; () banked
 18436   002D9C  25F3               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18437   002D9E  6FF5               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 18438   002DA0  0E40               	movlw	low _currentPos
 18439   002DA2  25F7               	addwf	APP_nvValueChanged@io& (0+255),w,b
 18440   002DA4  6ED9               	movwf	fsr2l,c
 18441   002DA6  6ADA               	clrf	fsr2h,c
 18442   002DA8  0E01               	movlw	high _currentPos
 18443   002DAA  22DA               	addwfc	fsr2h,f,c
 18444   002DAC  C1F5  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 18445   002DB0  0012               	return	
 18446   002DB2                     l19830:
 18447   002DB2  0101               	movlb	1	; () banked
 18448   002DB4  51F7               	movf	APP_nvValueChanged@io& (0+255),w,b
 18449   002DB6  0D07               	mullw	7
 18450   002DB8  50F3               	movf	243,w,c
 18451   002DBA  0F10               	addlw	16
 18452   002DBC  EC7F  F05D         	call	_getNV
 18453                           
 18454                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18455                           ; Switch size 1, requested type "simple"
 18456                           ; Number of cases is 1, Range of values is 0 to 0
 18457                           ; switch strategies available:
 18458                           ; Name         Instructions Cycles
 18459                           ; simple_byte            4     3 (average)
 18460                           ;	Chosen strategy is simple_byte
 18461   002DC0  0100               	movlb	0	; () banked
 18462   002DC2  518E               	movf	(?_getNV+1)& (0+255),w,b
 18463   002DC4  0A00               	xorlw	0	; case 0
 18464   002DC6  A4D8               	btfss	status,2,c
 18465   002DC8  0012               	return	
 18466                           
 18467                           ; BSR set to: 0
 18468                           ; Switch size 1, requested type "simple"
 18469                           ; Number of cases is 3, Range of values is 2 to 4
 18470                           ; switch strategies available:
 18471                           ; Name         Instructions Cycles
 18472                           ; simple_byte           10     6 (average)
 18473                           ;	Chosen strategy is simple_byte
 18474   002DCA  518D               	movf	?_getNV& (0+255),w,b
 18475   002DCC  0A02               	xorlw	2	; case 2
 18476   002DCE  B4D8               	btfsc	status,2,c
 18477   002DD0  D61D               	goto	l19760
 18478   002DD2  0A01               	xorlw	1	; case 3
 18479   002DD4  B4D8               	btfsc	status,2,c
 18480   002DD6  D69F               	goto	l19780
 18481   002DD8  0A07               	xorlw	7	; case 4
 18482   002DDA  A4D8               	btfss	status,2,c
 18483   002DDC  0012               	return	
 18484   002DDE  D723               	goto	l19796
 18485   002DE0                     l772:
 18486   002DE0  0012               	return		;funcret
 18487   002DE2                     __end_of_APP_nvValueChanged:
 18488                           	callstack 0
 18489                           
 18490 ;; *************** function _setTimedResponseDelay *****************
 18491 ;; Defined at:
 18492 ;;		line 900 in file "../../VLCBlib_PIC/vlcb.c"
 18493 ;; Parameters:    Size  Location     Type
 18494 ;;  delay           1    wreg     unsigned char 
 18495 ;; Auto vars:     Size  Location     Type
 18496 ;;  delay           1   45[BANK0 ] unsigned char 
 18497 ;; Return value:  Size  Location     Type
 18498 ;;                  1    wreg      void 
 18499 ;; Registers used:
 18500 ;;		wreg
 18501 ;; Tracked objects:
 18502 ;;		On entry : 0/0
 18503 ;;		On exit  : 0/0
 18504 ;;		Unchanged: 0/0
 18505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18507 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18509 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18510 ;;Total ram usage:        1 bytes
 18511 ;; Hardware stack levels used: 1
 18512 ;; Hardware stack levels required when called: 12
 18513 ;; This function calls:
 18514 ;;		Nothing
 18515 ;; This function is called by:
 18516 ;;		_setup
 18517 ;;		_APP_nvValueChanged
 18518 ;; This function uses a non-reentrant model
 18519 ;;
 18520                           
 18521                           	psect	text51
 18522   00C3DC                     __ptext51:
 18523                           	callstack 0
 18524   00C3DC                     _setTimedResponseDelay:
 18525                           	callstack 17
 18526                           
 18527                           ;incstack = 0
 18528                           ;setTimedResponseDelay@delay stored from wreg
 18529   00C3DC  0100               	movlb	0	; () banked
 18530   00C3DE  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 18531                           
 18532                           ;../../VLCBlib_PIC/vlcb.c: 901:     timedResponseDelay = delay;
 18533   00C3E0  C08D  F17C         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 18534   00C3E4  0012               	return		;funcret
 18535   00C3E6                     __end_of_setTimedResponseDelay:
 18536                           	callstack 0
 18537                           
 18538 ;; *************** function _setServoPosition *****************
 18539 ;; Defined at:
 18540 ;;		line 683 in file "../servo.c"
 18541 ;; Parameters:    Size  Location     Type
 18542 ;;  io              1    wreg     unsigned char 
 18543 ;;  pos             1   63[BANK0 ] unsigned char 
 18544 ;; Auto vars:     Size  Location     Type
 18545 ;;  io              1   64[BANK0 ] unsigned char 
 18546 ;; Return value:  Size  Location     Type
 18547 ;;                  1    wreg      void 
 18548 ;; Registers used:
 18549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18550 ;; Tracked objects:
 18551 ;;		On entry : 0/0
 18552 ;;		On exit  : 0/0
 18553 ;;		Unchanged: 0/0
 18554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18555 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18558 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18559 ;;Total ram usage:        2 bytes
 18560 ;; Hardware stack levels used: 1
 18561 ;; Hardware stack levels required when called: 12
 18562 ;; This function calls:
 18563 ;;		Nothing
 18564 ;; This function is called by:
 18565 ;;		_APP_nvValueChanged
 18566 ;;		_setOutputPosition
 18567 ;; This function uses a non-reentrant model
 18568 ;;
 18569                           
 18570                           	psect	text52
 18571   00C10C                     __ptext52:
 18572                           	callstack 0
 18573   00C10C                     _setServoPosition:
 18574                           	callstack 15
 18575                           
 18576                           ;incstack = 0
 18577                           ;setServoPosition@io stored from wreg
 18578   00C10C  0100               	movlb	0	; () banked
 18579   00C10E  6FA0               	movwf	setServoPosition@io& (0+255),b
 18580                           
 18581                           ;../servo.c: 684:     targetPos[io] = pos;
 18582   00C110  0100               	movlb	0	; () banked
 18583   00C112  51A0               	movf	setServoPosition@io& (0+255),w,b
 18584   00C114  0F01               	addlw	low _targetPos
 18585   00C116  6ED9               	movwf	fsr2l,c
 18586   00C118  6ADA               	clrf	fsr2h,c
 18587   00C11A  C09F  FFDF         	movff	setServoPosition@pos,indf2
 18588                           
 18589                           ;../servo.c: 685:     currentPos[io] = pos;
 18590   00C11E  0E40               	movlw	low _currentPos
 18591   00C120  25A0               	addwf	setServoPosition@io& (0+255),w,b
 18592   00C122  6ED9               	movwf	fsr2l,c
 18593   00C124  6ADA               	clrf	fsr2h,c
 18594   00C126  0E01               	movlw	high _currentPos
 18595   00C128  22DA               	addwfc	fsr2h,f,c
 18596   00C12A  C09F  FFDF         	movff	setServoPosition@pos,indf2
 18597                           
 18598                           ; BSR set to: 0
 18599   00C12E  0012               	return		;funcret
 18600   00C130                     __end_of_setServoPosition:
 18601                           	callstack 0
 18602                           
 18603 ;; *************** function _APP_nvValidate *****************
 18604 ;; Defined at:
 18605 ;;		line 299 in file "../universalNv.c"
 18606 ;; Parameters:    Size  Location     Type
 18607 ;;  index           1    wreg     unsigned char 
 18608 ;;  value           1   51[BANK0 ] unsigned char 
 18609 ;; Auto vars:     Size  Location     Type
 18610 ;;  index           1   52[BANK0 ] unsigned char 
 18611 ;;  io              1    0        unsigned char 
 18612 ;; Return value:  Size  Location     Type
 18613 ;;                  1    wreg      enum E12862
 18614 ;; Registers used:
 18615 ;;		wreg, status,2, status,0, cstack
 18616 ;; Tracked objects:
 18617 ;;		On entry : 0/0
 18618 ;;		On exit  : 0/0
 18619 ;;		Unchanged: 0/0
 18620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18621 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18622 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18624 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18625 ;;Total ram usage:        2 bytes
 18626 ;; Hardware stack levels used: 1
 18627 ;; Hardware stack levels required when called: 13
 18628 ;; This function calls:
 18629 ;;		___awmod
 18630 ;; This function is called by:
 18631 ;;		_setNV
 18632 ;; This function uses a non-reentrant model
 18633 ;;
 18634                           
 18635                           	psect	text53
 18636   00B382                     __ptext53:
 18637                           	callstack 0
 18638   00B382                     _APP_nvValidate:
 18639                           	callstack 14
 18640                           
 18641                           ; BSR set to: 0
 18642                           ;incstack = 0
 18643                           ;APP_nvValidate@index stored from wreg
 18644   00B382  0100               	movlb	0	; () banked
 18645   00B384  6F94               	movwf	APP_nvValidate@index& (0+255),b
 18646                           
 18647                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 18648   00B386  0E0F               	movlw	15
 18649   00B388  0100               	movlb	0	; () banked
 18650   00B38A  6594               	cpfsgt	APP_nvValidate@index& (0+255),b
 18651   00B38C  D024               	goto	l778
 18652                           
 18653                           ; BSR set to: 0
 18654   00B38E  0EF0               	movlw	240
 18655   00B390  2594               	addwf	APP_nvValidate@index& (0+255),w,b
 18656   00B392  6F8D               	movwf	___awmod@dividend& (0+255),b
 18657   00B394  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18658   00B396  0EFF               	movlw	255
 18659   00B398  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18660   00B39A  0E00               	movlw	0
 18661   00B39C  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18662   00B39E  0E07               	movlw	7
 18663   00B3A0  6F8F               	movwf	___awmod@divisor& (0+255),b
 18664   00B3A2  EC71  F056         	call	___awmod	;wreg free
 18665   00B3A6  0100               	movlb	0	; () banked
 18666   00B3A8  518D               	movf	?___awmod& (0+255),w,b
 18667   00B3AA  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18668   00B3AC  B4D8               	btfsc	status,2,c
 18669   00B3AE  D003               	goto	l19850
 18670   00B3B0  D012               	goto	l778
 18671   00B3B2                     l19844:
 18672                           
 18673                           ; BSR set to: 0
 18674                           ;../universalNv.c: 326:                 return INVALID;
 18675   00B3B2  0E00               	movlw	0
 18676   00B3B4  0012               	return	
 18677   00B3B6                     l19850:
 18678                           
 18679                           ; BSR set to: 0
 18680   00B3B6  5193               	movf	APP_nvValidate@value& (0+255),w,b
 18681                           
 18682                           ; Switch size 1, requested type "simple"
 18683                           ; Number of cases is 5, Range of values is 0 to 4
 18684                           ; switch strategies available:
 18685                           ; Name         Instructions Cycles
 18686                           ; simple_byte           16     9 (average)
 18687                           ;	Chosen strategy is simple_byte
 18688   00B3B8  0A00               	xorlw	0	; case 0
 18689   00B3BA  B4D8               	btfsc	status,2,c
 18690   00B3BC  D00C               	goto	l778
 18691   00B3BE  0A01               	xorlw	1	; case 1
 18692   00B3C0  B4D8               	btfsc	status,2,c
 18693   00B3C2  D009               	goto	l778
 18694   00B3C4  0A03               	xorlw	3	; case 2
 18695   00B3C6  B4D8               	btfsc	status,2,c
 18696   00B3C8  D006               	goto	l778
 18697   00B3CA  0A01               	xorlw	1	; case 3
 18698   00B3CC  B4D8               	btfsc	status,2,c
 18699   00B3CE  D003               	goto	l778
 18700   00B3D0  0A07               	xorlw	7	; case 4
 18701   00B3D2  A4D8               	btfss	status,2,c
 18702   00B3D4  D7EE               	goto	l19844
 18703   00B3D6                     l778:
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;../universalNv.c: 329:     return VALID;
 18707                           
 18708                           ; BSR set to: 0
 18709   00B3D6  0E01               	movlw	1
 18710                           
 18711                           ; BSR set to: 0
 18712   00B3D8  0012               	return		;funcret
 18713   00B3DA                     __end_of_APP_nvValidate:
 18714                           	callstack 0
 18715                           
 18716 ;; *************** function _canEsdData *****************
 18717 ;; Defined at:
 18718 ;;		line 416 in file "../../VLCBlib_PIC/can18_ecan.c"
 18719 ;; Parameters:    Size  Location     Type
 18720 ;;  id              1    wreg     unsigned char 
 18721 ;; Auto vars:     Size  Location     Type
 18722 ;;  id              1   45[BANK0 ] unsigned char 
 18723 ;; Return value:  Size  Location     Type
 18724 ;;                  1    wreg      unsigned char 
 18725 ;; Registers used:
 18726 ;;		wreg, status,2, status,0
 18727 ;; Tracked objects:
 18728 ;;		On entry : 0/0
 18729 ;;		On exit  : 0/0
 18730 ;;		Unchanged: 0/0
 18731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18735 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18736 ;;Total ram usage:        1 bytes
 18737 ;; Hardware stack levels used: 1
 18738 ;; Hardware stack levels required when called: 12
 18739 ;; This function calls:
 18740 ;;		Nothing
 18741 ;; This function is called by:
 18742 ;;		_mnsProcessMessage
 18743 ;; This function uses a non-reentrant model
 18744 ;;
 18745                           
 18746                           	psect	text54
 18747   00C2B6                     __ptext54:
 18748                           	callstack 0
 18749   00C2B6                     _canEsdData:
 18750                           	callstack 16
 18751                           
 18752                           ; BSR set to: 0
 18753                           ;incstack = 0
 18754                           ;canEsdData@id stored from wreg
 18755   00C2B6  0100               	movlb	0	; () banked
 18756   00C2B8  6F8D               	movwf	canEsdData@id& (0+255),b
 18757                           
 18758                           ;../../VLCBlib_PIC/can18_ecan.c: 417:     switch(id) {
 18759   00C2BA  D004               	goto	l21700
 18760   00C2BC                     l21690:
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;../../VLCBlib_PIC/can18_ecan.c: 419:             return CAN_HW_PIC_ECAN;
 18764   00C2BC  0E01               	movlw	1
 18765   00C2BE  0012               	return	
 18766   00C2C0                     l21694:
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;../../VLCBlib_PIC/can18_ecan.c: 421:             return 0;
 18770   00C2C0  0E00               	movlw	0
 18771   00C2C2  0012               	return	
 18772   00C2C4                     l21700:
 18773   00C2C4  0100               	movlb	0	; () banked
 18774   00C2C6  518D               	movf	canEsdData@id& (0+255),w,b
 18775                           
 18776                           ; Switch size 1, requested type "simple"
 18777                           ; Number of cases is 1, Range of values is 0 to 0
 18778                           ; switch strategies available:
 18779                           ; Name         Instructions Cycles
 18780                           ; simple_byte            4     3 (average)
 18781                           ;	Chosen strategy is simple_byte
 18782   00C2C8  0A00               	xorlw	0	; case 0
 18783   00C2CA  B4D8               	btfsc	status,2,c
 18784   00C2CC  D7F7               	goto	l21690
 18785   00C2CE  D7F8               	goto	l21694
 18786   00C2D0                     __end_of_canEsdData:
 18787                           	callstack 0
 18788                           
 18789 ;; *************** function _nvGetESDdata *****************
 18790 ;; Defined at:
 18791 ;;		line 313 in file "../../VLCBlib_PIC/nv.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;  id              1    wreg     unsigned char 
 18794 ;; Auto vars:     Size  Location     Type
 18795 ;;  id              1   45[BANK0 ] unsigned char 
 18796 ;; Return value:  Size  Location     Type
 18797 ;;                  1    wreg      unsigned char 
 18798 ;; Registers used:
 18799 ;;		wreg, status,2, status,0
 18800 ;; Tracked objects:
 18801 ;;		On entry : 0/0
 18802 ;;		On exit  : 0/0
 18803 ;;		Unchanged: 0/0
 18804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18808 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18809 ;;Total ram usage:        1 bytes
 18810 ;; Hardware stack levels used: 1
 18811 ;; Hardware stack levels required when called: 12
 18812 ;; This function calls:
 18813 ;;		Nothing
 18814 ;; This function is called by:
 18815 ;;		_mnsProcessMessage
 18816 ;; This function uses a non-reentrant model
 18817 ;;
 18818                           
 18819                           	psect	text55
 18820   00C2D0                     __ptext55:
 18821                           	callstack 0
 18822   00C2D0                     _nvGetESDdata:
 18823                           	callstack 16
 18824                           
 18825                           ; BSR set to: 0
 18826                           ;incstack = 0
 18827                           ;nvGetESDdata@id stored from wreg
 18828   00C2D0  0100               	movlb	0	; () banked
 18829   00C2D2  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 18830                           
 18831                           ;../../VLCBlib_PIC/nv.c: 314:     switch (id) {
 18832   00C2D4  D004               	goto	l21458
 18833   00C2D6                     l21448:
 18834                           
 18835                           ; BSR set to: 0
 18836   00C2D6  0E7F               	movlw	127
 18837   00C2D8  0012               	return	
 18838   00C2DA                     l21452:
 18839                           
 18840                           ; BSR set to: 0
 18841   00C2DA  0E00               	movlw	0
 18842   00C2DC  0012               	return	
 18843   00C2DE                     l21458:
 18844   00C2DE  0100               	movlb	0	; () banked
 18845   00C2E0  518D               	movf	nvGetESDdata@id& (0+255),w,b
 18846                           
 18847                           ; Switch size 1, requested type "simple"
 18848                           ; Number of cases is 1, Range of values is 1 to 1
 18849                           ; switch strategies available:
 18850                           ; Name         Instructions Cycles
 18851                           ; simple_byte            4     3 (average)
 18852                           ;	Chosen strategy is simple_byte
 18853   00C2E2  0A01               	xorlw	1	; case 1
 18854   00C2E4  B4D8               	btfsc	status,2,c
 18855   00C2E6  D7F7               	goto	l21448
 18856   00C2E8  D7F8               	goto	l21452
 18857   00C2EA                     __end_of_nvGetESDdata:
 18858                           	callstack 0
 18859                           
 18860 ;; *************** function _teachGetESDdata *****************
 18861 ;; Defined at:
 18862 ;;		line 448 in file "../../VLCBlib_PIC/event_teach.c"
 18863 ;; Parameters:    Size  Location     Type
 18864 ;;  id              1    wreg     unsigned char 
 18865 ;; Auto vars:     Size  Location     Type
 18866 ;;  id              1   45[BANK0 ] unsigned char 
 18867 ;; Return value:  Size  Location     Type
 18868 ;;                  1    wreg      unsigned char 
 18869 ;; Registers used:
 18870 ;;		wreg, status,2, status,0
 18871 ;; Tracked objects:
 18872 ;;		On entry : 0/0
 18873 ;;		On exit  : 0/0
 18874 ;;		Unchanged: 0/0
 18875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;Total ram usage:        1 bytes
 18881 ;; Hardware stack levels used: 1
 18882 ;; Hardware stack levels required when called: 12
 18883 ;; This function calls:
 18884 ;;		Nothing
 18885 ;; This function is called by:
 18886 ;;		_mnsProcessMessage
 18887 ;; This function uses a non-reentrant model
 18888 ;;
 18889                           
 18890                           	psect	text56
 18891   00C130                     __ptext56:
 18892                           	callstack 0
 18893   00C130                     _teachGetESDdata:
 18894                           	callstack 16
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;incstack = 0
 18898                           ;teachGetESDdata@id stored from wreg
 18899   00C130  0100               	movlb	0	; () banked
 18900   00C132  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 18901                           
 18902                           ;../../VLCBlib_PIC/event_teach.c: 449:     switch (id) {
 18903   00C134  D006               	goto	l21312
 18904   00C136                     l21298:
 18905                           
 18906                           ; BSR set to: 0
 18907   00C136  0EFF               	movlw	255
 18908   00C138  0012               	return	
 18909   00C13A                     l21302:
 18910                           
 18911                           ; BSR set to: 0
 18912   00C13A  0E14               	movlw	20
 18913   00C13C  0012               	return	
 18914   00C13E                     l21306:
 18915                           
 18916                           ; BSR set to: 0
 18917   00C13E  0E00               	movlw	0
 18918   00C140  0012               	return	
 18919   00C142                     l21312:
 18920   00C142  0100               	movlb	0	; () banked
 18921   00C144  518D               	movf	teachGetESDdata@id& (0+255),w,b
 18922                           
 18923                           ; Switch size 1, requested type "simple"
 18924                           ; Number of cases is 2, Range of values is 1 to 2
 18925                           ; switch strategies available:
 18926                           ; Name         Instructions Cycles
 18927                           ; simple_byte            7     4 (average)
 18928                           ;	Chosen strategy is simple_byte
 18929   00C146  0A01               	xorlw	1	; case 1
 18930   00C148  B4D8               	btfsc	status,2,c
 18931   00C14A  D7F5               	goto	l21298
 18932   00C14C  0A03               	xorlw	3	; case 2
 18933   00C14E  B4D8               	btfsc	status,2,c
 18934   00C150  D7F4               	goto	l21302
 18935   00C152  D7F5               	goto	l21306
 18936   00C154                     __end_of_teachGetESDdata:
 18937                           	callstack 0
 18938                           
 18939 ;; *************** function _canGetDiagnostic *****************
 18940 ;; Defined at:
 18941 ;;		line 430 in file "../../VLCBlib_PIC/can18_ecan.c"
 18942 ;; Parameters:    Size  Location     Type
 18943 ;;  index           1    wreg     unsigned char 
 18944 ;; Auto vars:     Size  Location     Type
 18945 ;;  index           1   49[BANK0 ] unsigned char 
 18946 ;; Return value:  Size  Location     Type
 18947 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 18948 ;; Registers used:
 18949 ;;		wreg, status,2, status,0
 18950 ;; Tracked objects:
 18951 ;;		On entry : 0/0
 18952 ;;		On exit  : 0/0
 18953 ;;		Unchanged: 0/0
 18954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18955 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18957 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18958 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18959 ;;Total ram usage:        5 bytes
 18960 ;; Hardware stack levels used: 1
 18961 ;; Hardware stack levels required when called: 12
 18962 ;; This function calls:
 18963 ;;		Nothing
 18964 ;; This function is called by:
 18965 ;;		_mnsTRallDiagnosticsCallback
 18966 ;;		_mnsProcessMessage
 18967 ;; This function uses a non-reentrant model
 18968 ;;
 18969                           
 18970                           	psect	text57
 18971   00BC24                     __ptext57:
 18972                           	callstack 0
 18973   00BC24                     _canGetDiagnostic:
 18974                           	callstack 15
 18975                           
 18976                           ; BSR set to: 0
 18977                           ;incstack = 0
 18978                           ;canGetDiagnostic@index stored from wreg
 18979   00BC24  0100               	movlb	0	; () banked
 18980   00BC26  6F91               	movwf	canGetDiagnostic@index& (0+255),b
 18981                           
 18982                           ;../../VLCBlib_PIC/can18_ecan.c: 431:     if ((index<1) || (index>16)) {
 18983   00BC28  0100               	movlb	0	; () banked
 18984   00BC2A  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 18985   00BC2C  B4D8               	btfsc	status,2,c
 18986   00BC2E  D003               	goto	u20880
 18987                           
 18988                           ; BSR set to: 0
 18989   00BC30  0E10               	movlw	16
 18990   00BC32  6591               	cpfsgt	canGetDiagnostic@index& (0+255),b
 18991   00BC34  D005               	goto	l20366
 18992   00BC36                     u20880:
 18993                           
 18994                           ; BSR set to: 0
 18995                           ;../../VLCBlib_PIC/can18_ecan.c: 432:         return ((void*)0);
 18996   00BC36  0E00               	movlw	0
 18997   00BC38  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 18998   00BC3A  0E00               	movlw	0
 18999   00BC3C  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 19000   00BC3E  0012               	return	
 19001   00BC40                     l20366:
 19002                           
 19003                           ; BSR set to: 0
 19004                           ;../../VLCBlib_PIC/can18_ecan.c: 434:     return &(canDiagnostics[index-1]);
 19005   00BC40  5191               	movf	canGetDiagnostic@index& (0+255),w,b
 19006   00BC42  6F8F               	movwf	??_canGetDiagnostic& (0+255),b
 19007   00BC44  6B90               	clrf	(??_canGetDiagnostic+1)& (0+255),b
 19008   00BC46  90D8               	bcf	status,0,c
 19009   00BC48  378F               	rlcf	??_canGetDiagnostic& (0+255),f,b
 19010   00BC4A  3790               	rlcf	(??_canGetDiagnostic+1)& (0+255),f,b
 19011   00BC4C  0E7C               	movlw	low (_canDiagnostics+65534)
 19012   00BC4E  258F               	addwf	??_canGetDiagnostic& (0+255),w,b
 19013   00BC50  6F8D               	movwf	?_canGetDiagnostic& (0+255),b
 19014   00BC52  0E01               	movlw	high (_canDiagnostics+65534)
 19015   00BC54  2190               	addwfc	(??_canGetDiagnostic+1)& (0+255),w,b
 19016   00BC56  6F8E               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 19017                           
 19018                           ; BSR set to: 0
 19019   00BC58  0012               	return		;funcret
 19020   00BC5A                     __end_of_canGetDiagnostic:
 19021                           	callstack 0
 19022                           
 19023 ;; *************** function _nvGetDiagnostic *****************
 19024 ;; Defined at:
 19025 ;;		line 139 in file "../../VLCBlib_PIC/nv.c"
 19026 ;; Parameters:    Size  Location     Type
 19027 ;;  index           1    wreg     unsigned char 
 19028 ;; Auto vars:     Size  Location     Type
 19029 ;;  index           1   48[BANK0 ] unsigned char 
 19030 ;; Return value:  Size  Location     Type
 19031 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19032 ;; Registers used:
 19033 ;;		wreg, status,2, status,0, prodl, prodh
 19034 ;; Tracked objects:
 19035 ;;		On entry : 0/0
 19036 ;;		On exit  : 0/0
 19037 ;;		Unchanged: 0/0
 19038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19040 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19043 ;;Total ram usage:        4 bytes
 19044 ;; Hardware stack levels used: 1
 19045 ;; Hardware stack levels required when called: 12
 19046 ;; This function calls:
 19047 ;;		Nothing
 19048 ;; This function is called by:
 19049 ;;		_mnsTRallDiagnosticsCallback
 19050 ;;		_mnsProcessMessage
 19051 ;; This function uses a non-reentrant model
 19052 ;;
 19053                           
 19054                           	psect	text58
 19055   00BEB2                     __ptext58:
 19056                           	callstack 0
 19057   00BEB2                     _nvGetDiagnostic:
 19058                           	callstack 15
 19059                           
 19060                           ; BSR set to: 0
 19061                           ;incstack = 0
 19062                           ;nvGetDiagnostic@index stored from wreg
 19063   00BEB2  0100               	movlb	0	; () banked
 19064   00BEB4  6F90               	movwf	nvGetDiagnostic@index& (0+255),b
 19065                           
 19066                           ;../../VLCBlib_PIC/nv.c: 140:     if ((index<1) || (index>2)) {
 19067   00BEB6  0100               	movlb	0	; () banked
 19068   00BEB8  5190               	movf	nvGetDiagnostic@index& (0+255),w,b
 19069   00BEBA  B4D8               	btfsc	status,2,c
 19070   00BEBC  D003               	goto	u20810
 19071                           
 19072                           ; BSR set to: 0
 19073   00BEBE  0E02               	movlw	2
 19074   00BEC0  6590               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 19075   00BEC2  D005               	goto	l20278
 19076   00BEC4                     u20810:
 19077                           
 19078                           ; BSR set to: 0
 19079                           ;../../VLCBlib_PIC/nv.c: 141:         return ((void*)0);
 19080   00BEC4  0E00               	movlw	0
 19081   00BEC6  6F8D               	movwf	?_nvGetDiagnostic& (0+255),b
 19082   00BEC8  0E00               	movlw	0
 19083   00BECA  6F8E               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 19084   00BECC  0012               	return	
 19085   00BECE                     l20278:
 19086                           
 19087                           ; BSR set to: 0
 19088                           ;../../VLCBlib_PIC/nv.c: 143:     return &(nvDiagnostics[index-1]);
 19089   00BECE  5190               	movf	nvGetDiagnostic@index& (0+255),w,b
 19090   00BED0  0D02               	mullw	2
 19091   00BED2  50F3               	movf	243,w,c
 19092   00BED4  0FCB               	addlw	low (_nvDiagnostics+254)
 19093   00BED6  6F8F               	movwf	??_nvGetDiagnostic& (0+255),b
 19094   00BED8  C08F  F08D         	movff	??_nvGetDiagnostic,?_nvGetDiagnostic
 19095   00BEDC  6B8E               	clrf	(?_nvGetDiagnostic+1)& (0+255),b
 19096                           
 19097                           ; BSR set to: 0
 19098   00BEDE  0012               	return		;funcret
 19099   00BEE0                     __end_of_nvGetDiagnostic:
 19100                           	callstack 0
 19101                           
 19102 ;; *************** function _mnsGetDiagnostic *****************
 19103 ;; Defined at:
 19104 ;;		line 732 in file "../../VLCBlib_PIC/mns.c"
 19105 ;; Parameters:    Size  Location     Type
 19106 ;;  index           1    wreg     unsigned char 
 19107 ;; Auto vars:     Size  Location     Type
 19108 ;;  index           1   49[BANK0 ] unsigned char 
 19109 ;; Return value:  Size  Location     Type
 19110 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19111 ;; Registers used:
 19112 ;;		wreg, status,2, status,0
 19113 ;; Tracked objects:
 19114 ;;		On entry : 0/0
 19115 ;;		On exit  : 0/0
 19116 ;;		Unchanged: 0/0
 19117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19120 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19121 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19122 ;;Total ram usage:        5 bytes
 19123 ;; Hardware stack levels used: 1
 19124 ;; Hardware stack levels required when called: 12
 19125 ;; This function calls:
 19126 ;;		Nothing
 19127 ;; This function is called by:
 19128 ;;		_mnsTRallDiagnosticsCallback
 19129 ;;		_mnsProcessMessage
 19130 ;; This function uses a non-reentrant model
 19131 ;;
 19132                           
 19133                           	psect	text59
 19134   00BC5A                     __ptext59:
 19135                           	callstack 0
 19136   00BC5A                     _mnsGetDiagnostic:
 19137                           	callstack 15
 19138                           
 19139                           ; BSR set to: 0
 19140                           ;incstack = 0
 19141                           ;mnsGetDiagnostic@index stored from wreg
 19142   00BC5A  0100               	movlb	0	; () banked
 19143   00BC5C  6F91               	movwf	mnsGetDiagnostic@index& (0+255),b
 19144                           
 19145                           ;../../VLCBlib_PIC/mns.c: 733:     if ((index<1) || (index>6)) {
 19146   00BC5E  0100               	movlb	0	; () banked
 19147   00BC60  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 19148   00BC62  B4D8               	btfsc	status,2,c
 19149   00BC64  D003               	goto	u20780
 19150                           
 19151                           ; BSR set to: 0
 19152   00BC66  0E06               	movlw	6
 19153   00BC68  6591               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 19154   00BC6A  D005               	goto	l20226
 19155   00BC6C                     u20780:
 19156                           
 19157                           ; BSR set to: 0
 19158                           ;../../VLCBlib_PIC/mns.c: 734:         return ((void*)0);
 19159   00BC6C  0E00               	movlw	0
 19160   00BC6E  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 19161   00BC70  0E00               	movlw	0
 19162   00BC72  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 19163   00BC74  0012               	return	
 19164   00BC76                     l20226:
 19165                           
 19166                           ; BSR set to: 0
 19167                           ;../../VLCBlib_PIC/mns.c: 736:     return &(mnsDiagnostics[index-1]);
 19168   00BC76  5191               	movf	mnsGetDiagnostic@index& (0+255),w,b
 19169   00BC78  6F8F               	movwf	??_mnsGetDiagnostic& (0+255),b
 19170   00BC7A  6B90               	clrf	(??_mnsGetDiagnostic+1)& (0+255),b
 19171   00BC7C  90D8               	bcf	status,0,c
 19172   00BC7E  378F               	rlcf	??_mnsGetDiagnostic& (0+255),f,b
 19173   00BC80  3790               	rlcf	(??_mnsGetDiagnostic+1)& (0+255),f,b
 19174   00BC82  0E9C               	movlw	low (_mnsDiagnostics+65534)
 19175   00BC84  258F               	addwf	??_mnsGetDiagnostic& (0+255),w,b
 19176   00BC86  6F8D               	movwf	?_mnsGetDiagnostic& (0+255),b
 19177   00BC88  0E01               	movlw	high (_mnsDiagnostics+65534)
 19178   00BC8A  2190               	addwfc	(??_mnsGetDiagnostic+1)& (0+255),w,b
 19179   00BC8C  6F8E               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 19180                           
 19181                           ; BSR set to: 0
 19182   00BC8E  0012               	return		;funcret
 19183   00BC90                     __end_of_mnsGetDiagnostic:
 19184                           	callstack 0
 19185                           
 19186 ;; *************** function _producerGetDiagnostic *****************
 19187 ;; Defined at:
 19188 ;;		line 154 in file "../../VLCBlib_PIC/event_producer.c"
 19189 ;; Parameters:    Size  Location     Type
 19190 ;;  index           1    wreg     unsigned char 
 19191 ;; Auto vars:     Size  Location     Type
 19192 ;;  index           1   49[BANK0 ] unsigned char 
 19193 ;; Return value:  Size  Location     Type
 19194 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19195 ;; Registers used:
 19196 ;;		wreg, status,2, status,0
 19197 ;; Tracked objects:
 19198 ;;		On entry : 0/0
 19199 ;;		On exit  : 0/0
 19200 ;;		Unchanged: 0/0
 19201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19202 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19203 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19204 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19205 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19206 ;;Total ram usage:        5 bytes
 19207 ;; Hardware stack levels used: 1
 19208 ;; Hardware stack levels required when called: 12
 19209 ;; This function calls:
 19210 ;;		Nothing
 19211 ;; This function is called by:
 19212 ;;		_mnsTRallDiagnosticsCallback
 19213 ;;		_mnsProcessMessage
 19214 ;; This function uses a non-reentrant model
 19215 ;;
 19216                           
 19217                           	psect	text60
 19218   00BC90                     __ptext60:
 19219                           	callstack 0
 19220   00BC90                     _producerGetDiagnostic:
 19221                           	callstack 15
 19222                           
 19223                           ; BSR set to: 0
 19224                           ;incstack = 0
 19225                           ;producerGetDiagnostic@index stored from wreg
 19226   00BC90  0100               	movlb	0	; () banked
 19227   00BC92  6F91               	movwf	producerGetDiagnostic@index& (0+255),b
 19228                           
 19229                           ;../../VLCBlib_PIC/event_producer.c: 155:     if ((index<1) || (index>1)) {
 19230   00BC94  0100               	movlb	0	; () banked
 19231   00BC96  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19232   00BC98  B4D8               	btfsc	status,2,c
 19233   00BC9A  D003               	goto	u20630
 19234                           
 19235                           ; BSR set to: 0
 19236   00BC9C  0E01               	movlw	1
 19237   00BC9E  6591               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 19238   00BCA0  D005               	goto	l20004
 19239   00BCA2                     u20630:
 19240                           
 19241                           ; BSR set to: 0
 19242                           ;../../VLCBlib_PIC/event_producer.c: 156:         return ((void*)0);
 19243   00BCA2  0E00               	movlw	0
 19244   00BCA4  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19245   00BCA6  0E00               	movlw	0
 19246   00BCA8  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19247   00BCAA  0012               	return	
 19248   00BCAC                     l20004:
 19249                           
 19250                           ; BSR set to: 0
 19251                           ;../../VLCBlib_PIC/event_producer.c: 158:     return &(producerDiagnostics[index-1]);
 19252   00BCAC  5191               	movf	producerGetDiagnostic@index& (0+255),w,b
 19253   00BCAE  6F8F               	movwf	??_producerGetDiagnostic& (0+255),b
 19254   00BCB0  6B90               	clrf	(??_producerGetDiagnostic+1)& (0+255),b
 19255   00BCB2  90D8               	bcf	status,0,c
 19256   00BCB4  378F               	rlcf	??_producerGetDiagnostic& (0+255),f,b
 19257   00BCB6  3790               	rlcf	(??_producerGetDiagnostic+1)& (0+255),f,b
 19258   00BCB8  0EB8               	movlw	low (_producerDiagnostics+65534)
 19259   00BCBA  258F               	addwf	??_producerGetDiagnostic& (0+255),w,b
 19260   00BCBC  6F8D               	movwf	?_producerGetDiagnostic& (0+255),b
 19261   00BCBE  0E01               	movlw	high (_producerDiagnostics+65534)
 19262   00BCC0  2190               	addwfc	(??_producerGetDiagnostic+1)& (0+255),w,b
 19263   00BCC2  6F8E               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 19264                           
 19265                           ; BSR set to: 0
 19266   00BCC4  0012               	return		;funcret
 19267   00BCC6                     __end_of_producerGetDiagnostic:
 19268                           	callstack 0
 19269                           
 19270 ;; *************** function _ackGetDiagnostic *****************
 19271 ;; Defined at:
 19272 ;;		line 176 in file "../../VLCBlib_PIC/event_acknowledge.c"
 19273 ;; Parameters:    Size  Location     Type
 19274 ;;  index           1    wreg     unsigned char 
 19275 ;; Auto vars:     Size  Location     Type
 19276 ;;  index           1   48[BANK0 ] unsigned char 
 19277 ;; Return value:  Size  Location     Type
 19278 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19279 ;; Registers used:
 19280 ;;		wreg, status,2, status,0, prodl, prodh
 19281 ;; Tracked objects:
 19282 ;;		On entry : 0/0
 19283 ;;		On exit  : 0/0
 19284 ;;		Unchanged: 0/0
 19285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19287 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19288 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19289 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19290 ;;Total ram usage:        4 bytes
 19291 ;; Hardware stack levels used: 1
 19292 ;; Hardware stack levels required when called: 12
 19293 ;; This function calls:
 19294 ;;		Nothing
 19295 ;; This function is called by:
 19296 ;;		_mnsTRallDiagnosticsCallback
 19297 ;;		_mnsProcessMessage
 19298 ;; This function uses a non-reentrant model
 19299 ;;
 19300                           
 19301                           	psect	text61
 19302   00BEE0                     __ptext61:
 19303                           	callstack 0
 19304   00BEE0                     _ackGetDiagnostic:
 19305                           	callstack 15
 19306                           
 19307                           ; BSR set to: 0
 19308                           ;incstack = 0
 19309                           ;ackGetDiagnostic@index stored from wreg
 19310   00BEE0  0100               	movlb	0	; () banked
 19311   00BEE2  6F90               	movwf	ackGetDiagnostic@index& (0+255),b
 19312                           
 19313                           ;../../VLCBlib_PIC/event_acknowledge.c: 177:     if ((index<1) || (index>1)) {
 19314   00BEE4  0100               	movlb	0	; () banked
 19315   00BEE6  5190               	movf	ackGetDiagnostic@index& (0+255),w,b
 19316   00BEE8  B4D8               	btfsc	status,2,c
 19317   00BEEA  D003               	goto	u20610
 19318                           
 19319                           ; BSR set to: 0
 19320   00BEEC  0E01               	movlw	1
 19321   00BEEE  6590               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 19322   00BEF0  D005               	goto	l19990
 19323   00BEF2                     u20610:
 19324                           
 19325                           ; BSR set to: 0
 19326                           ;../../VLCBlib_PIC/event_acknowledge.c: 178:         return ((void*)0);
 19327   00BEF2  0E00               	movlw	0
 19328   00BEF4  6F8D               	movwf	?_ackGetDiagnostic& (0+255),b
 19329   00BEF6  0E00               	movlw	0
 19330   00BEF8  6F8E               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 19331   00BEFA  0012               	return	
 19332   00BEFC                     l19990:
 19333                           
 19334                           ; BSR set to: 0
 19335                           ;../../VLCBlib_PIC/event_acknowledge.c: 180:     return &(ackDiagnostics[index-1]);
 19336   00BEFC  5190               	movf	ackGetDiagnostic@index& (0+255),w,b
 19337   00BEFE  0D02               	mullw	2
 19338   00BF00  50F3               	movf	243,w,c
 19339   00BF02  0FCF               	addlw	low (_ackDiagnostics+254)
 19340   00BF04  6F8F               	movwf	??_ackGetDiagnostic& (0+255),b
 19341   00BF06  C08F  F08D         	movff	??_ackGetDiagnostic,?_ackGetDiagnostic
 19342   00BF0A  6B8E               	clrf	(?_ackGetDiagnostic+1)& (0+255),b
 19343                           
 19344                           ; BSR set to: 0
 19345   00BF0C  0012               	return		;funcret
 19346   00BF0E                     __end_of_ackGetDiagnostic:
 19347                           	callstack 0
 19348                           
 19349 ;; *************** function _consumer2QGetDiagnostic *****************
 19350 ;; Defined at:
 19351 ;;		line 323 in file "../event_consumerDualActionQueue.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;  index           1    wreg     unsigned char 
 19354 ;; Auto vars:     Size  Location     Type
 19355 ;;  index           1   49[BANK0 ] unsigned char 
 19356 ;; Return value:  Size  Location     Type
 19357 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19358 ;; Registers used:
 19359 ;;		wreg, status,2, status,0
 19360 ;; Tracked objects:
 19361 ;;		On entry : 0/0
 19362 ;;		On exit  : 0/0
 19363 ;;		Unchanged: 0/0
 19364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19368 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19369 ;;Total ram usage:        5 bytes
 19370 ;; Hardware stack levels used: 1
 19371 ;; Hardware stack levels required when called: 12
 19372 ;; This function calls:
 19373 ;;		Nothing
 19374 ;; This function is called by:
 19375 ;;		_mnsTRallDiagnosticsCallback
 19376 ;;		_mnsProcessMessage
 19377 ;; This function uses a non-reentrant model
 19378 ;;
 19379                           
 19380                           	psect	text62
 19381   00BCC6                     __ptext62:
 19382                           	callstack 0
 19383   00BCC6                     _consumer2QGetDiagnostic:
 19384                           	callstack 15
 19385                           
 19386                           ; BSR set to: 0
 19387                           ;incstack = 0
 19388                           ;consumer2QGetDiagnostic@index stored from wreg
 19389   00BCC6  0100               	movlb	0	; () banked
 19390   00BCC8  6F91               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 19391                           
 19392                           ;../event_consumerDualActionQueue.c: 324:     if ((index<1) || (index>1)) {
 19393   00BCCA  0100               	movlb	0	; () banked
 19394   00BCCC  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 19395   00BCCE  B4D8               	btfsc	status,2,c
 19396   00BCD0  D003               	goto	u20020
 19397                           
 19398                           ; BSR set to: 0
 19399   00BCD2  0E01               	movlw	1
 19400   00BCD4  6591               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 19401   00BCD6  D005               	goto	l19670
 19402   00BCD8                     u20020:
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;../event_consumerDualActionQueue.c: 325:         return ((void*)0);
 19406   00BCD8  0E00               	movlw	0
 19407   00BCDA  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 19408   00BCDC  0E00               	movlw	0
 19409   00BCDE  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 19410   00BCE0  0012               	return	
 19411   00BCE2                     l19670:
 19412                           
 19413                           ; BSR set to: 0
 19414                           ;../event_consumerDualActionQueue.c: 327:     return &(consumer2QDiagnostics[index-1]);
 19415   00BCE2  5191               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 19416   00BCE4  6F8F               	movwf	??_consumer2QGetDiagnostic& (0+255),b
 19417   00BCE6  6B90               	clrf	(??_consumer2QGetDiagnostic+1)& (0+255),b
 19418   00BCE8  90D8               	bcf	status,0,c
 19419   00BCEA  378F               	rlcf	??_consumer2QGetDiagnostic& (0+255),f,b
 19420   00BCEC  3790               	rlcf	(??_consumer2QGetDiagnostic+1)& (0+255),f,b
 19421   00BCEE  0EBA               	movlw	low (_consumer2QDiagnostics+65534)
 19422   00BCF0  258F               	addwf	??_consumer2QGetDiagnostic& (0+255),w,b
 19423   00BCF2  6F8D               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 19424   00BCF4  0E01               	movlw	high (_consumer2QDiagnostics+65534)
 19425   00BCF6  2190               	addwfc	(??_consumer2QGetDiagnostic+1)& (0+255),w,b
 19426   00BCF8  6F8E               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 19427                           
 19428                           ; BSR set to: 0
 19429   00BCFA  0012               	return		;funcret
 19430   00BCFC                     __end_of_consumer2QGetDiagnostic:
 19431                           	callstack 0
 19432                           
 19433 ;; *************** function _teachGetDiagnostic *****************
 19434 ;; Defined at:
 19435 ;;		line 461 in file "../../VLCBlib_PIC/event_teach.c"
 19436 ;; Parameters:    Size  Location     Type
 19437 ;;  index           1    wreg     unsigned char 
 19438 ;; Auto vars:     Size  Location     Type
 19439 ;;  index           1   49[BANK0 ] unsigned char 
 19440 ;; Return value:  Size  Location     Type
 19441 ;;                  2   45[BANK0 ] PTR struct DiagnosticVal
 19442 ;; Registers used:
 19443 ;;		wreg, status,2, status,0
 19444 ;; Tracked objects:
 19445 ;;		On entry : 0/0
 19446 ;;		On exit  : 0/0
 19447 ;;		Unchanged: 0/0
 19448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19450 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19451 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19452 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19453 ;;Total ram usage:        5 bytes
 19454 ;; Hardware stack levels used: 1
 19455 ;; Hardware stack levels required when called: 12
 19456 ;; This function calls:
 19457 ;;		Nothing
 19458 ;; This function is called by:
 19459 ;;		_mnsTRallDiagnosticsCallback
 19460 ;;		_mnsProcessMessage
 19461 ;; This function uses a non-reentrant model
 19462 ;;
 19463                           
 19464                           	psect	text63
 19465   00BCFC                     __ptext63:
 19466                           	callstack 0
 19467   00BCFC                     _teachGetDiagnostic:
 19468                           	callstack 15
 19469                           
 19470                           ; BSR set to: 0
 19471                           ;incstack = 0
 19472                           ;teachGetDiagnostic@index stored from wreg
 19473   00BCFC  0100               	movlb	0	; () banked
 19474   00BCFE  6F91               	movwf	teachGetDiagnostic@index& (0+255),b
 19475                           
 19476                           ;../../VLCBlib_PIC/event_teach.c: 462:     if ((index<1) || (index>1)) {
 19477   00BD00  0100               	movlb	0	; () banked
 19478   00BD02  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 19479   00BD04  B4D8               	btfsc	status,2,c
 19480   00BD06  D003               	goto	u20650
 19481                           
 19482                           ; BSR set to: 0
 19483   00BD08  0E01               	movlw	1
 19484   00BD0A  6591               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 19485   00BD0C  D005               	goto	l20018
 19486   00BD0E                     u20650:
 19487                           
 19488                           ; BSR set to: 0
 19489                           ;../../VLCBlib_PIC/event_teach.c: 463:         return ((void*)0);
 19490   00BD0E  0E00               	movlw	0
 19491   00BD10  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 19492   00BD12  0E00               	movlw	0
 19493   00BD14  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 19494   00BD16  0012               	return	
 19495   00BD18                     l20018:
 19496                           
 19497                           ; BSR set to: 0
 19498                           ;../../VLCBlib_PIC/event_teach.c: 465:     return &(teachDiagnostics[index-1]);
 19499   00BD18  5191               	movf	teachGetDiagnostic@index& (0+255),w,b
 19500   00BD1A  6F8F               	movwf	??_teachGetDiagnostic& (0+255),b
 19501   00BD1C  6B90               	clrf	(??_teachGetDiagnostic+1)& (0+255),b
 19502   00BD1E  90D8               	bcf	status,0,c
 19503   00BD20  378F               	rlcf	??_teachGetDiagnostic& (0+255),f,b
 19504   00BD22  3790               	rlcf	(??_teachGetDiagnostic+1)& (0+255),f,b
 19505   00BD24  0EB6               	movlw	low (_teachDiagnostics+65534)
 19506   00BD26  258F               	addwf	??_teachGetDiagnostic& (0+255),w,b
 19507   00BD28  6F8D               	movwf	?_teachGetDiagnostic& (0+255),b
 19508   00BD2A  0E01               	movlw	high (_teachDiagnostics+65534)
 19509   00BD2C  2190               	addwfc	(??_teachGetDiagnostic+1)& (0+255),w,b
 19510   00BD2E  6F8E               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 19511                           
 19512                           ; BSR set to: 0
 19513   00BD30  0012               	return		;funcret
 19514   00BD32                     __end_of_teachGetDiagnostic:
 19515                           	callstack 0
 19516                           
 19517 ;; *************** function _startTimedResponse *****************
 19518 ;; Defined at:
 19519 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 19520 ;; Parameters:    Size  Location     Type
 19521 ;;  type            1    wreg     unsigned char 
 19522 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 19523 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 19524 ;;		 -> nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), 
 19525 ;;		 -> reqevCallback(1), nerdCallback(1), 
 19526 ;; Auto vars:     Size  Location     Type
 19527 ;;  type            1   52[BANK0 ] unsigned char 
 19528 ;; Return value:  Size  Location     Type
 19529 ;;                  1    wreg      void 
 19530 ;; Registers used:
 19531 ;;		wreg, status,2, status,0
 19532 ;; Tracked objects:
 19533 ;;		On entry : 0/0
 19534 ;;		On exit  : 0/0
 19535 ;;		Unchanged: 0/0
 19536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19537 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19538 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19540 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19541 ;;Total ram usage:        4 bytes
 19542 ;; Hardware stack levels used: 1
 19543 ;; Hardware stack levels required when called: 12
 19544 ;; This function calls:
 19545 ;;		Nothing
 19546 ;; This function is called by:
 19547 ;;		_doNerd
 19548 ;;		_doReqev
 19549 ;;		_mnsProcessMessage
 19550 ;;		_nvProcessMessage
 19551 ;; This function uses a non-reentrant model
 19552 ;;
 19553                           
 19554                           	psect	text64
 19555   00BA44                     __ptext64:
 19556                           	callstack 0
 19557   00BA44                     _startTimedResponse:
 19558                           	callstack 15
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;incstack = 0
 19562                           ;startTimedResponse@type stored from wreg
 19563   00BA44  0100               	movlb	0	; () banked
 19564   00BA46  6F94               	movwf	startTimedResponse@type& (0+255),b
 19565                           
 19566                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 19567   00BA48  C094  F0BB         	movff	startTimedResponse@type,_timedResponseType
 19568                           
 19569                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 19570   00BA4C  0100               	movlb	0	; () banked
 19571   00BA4E  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 19572   00BA50  A4D8               	btfss	status,2,c
 19573   00BA52  D004               	goto	l20050
 19574                           
 19575                           ; BSR set to: 0
 19576                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 19577   00BA54  0E01               	movlw	1
 19578   00BA56  6FBC               	movwf	_timedResponseAllServicesFlag& (0+255),b
 19579                           
 19580                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 19581   00BA58  0E00               	movlw	0
 19582   00BA5A  D00B               	goto	L4
 19583   00BA5C                     l20050:
 19584                           
 19585                           ; BSR set to: 0
 19586                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 19587   00BA5C  0E00               	movlw	0
 19588   00BA5E  6FBC               	movwf	_timedResponseAllServicesFlag& (0+255),b
 19589                           
 19590                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 19591   00BA60  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 19592   00BA62  B4D8               	btfsc	status,2,c
 19593   00BA64  D003               	goto	u20710
 19594                           
 19595                           ; BSR set to: 0
 19596   00BA66  0E09               	movlw	9
 19597   00BA68  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 19598   00BA6A  D002               	goto	l20054
 19599   00BA6C                     u20710:
 19600                           
 19601                           ; BSR set to: 0
 19602                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 19603   00BA6C  69BB               	setf	_timedResponseType& (0+255),b
 19604                           
 19605                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 19606   00BA6E  0012               	return	
 19607   00BA70                     l20054:
 19608                           
 19609                           ; BSR set to: 0
 19610                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 19611   00BA70  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 19612   00BA72                     L4:
 19613   00BA72  6FBD               	movwf	_timedResponseServiceIndex& (0+255),b
 19614                           
 19615                           ; BSR set to: 0
 19616                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 19617   00BA74  0E00               	movlw	0
 19618   00BA76  6FBA               	movwf	_timedResponseStep& (0+255),b
 19619                           
 19620                           ; BSR set to: 0
 19621                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 19622   00BA78  C092  F021         	movff	startTimedResponse@callback,_timedResponseCallback
 19623   00BA7C  C093  F022         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 19624                           
 19625                           ; BSR set to: 0
 19626   00BA80  0012               	return		;funcret
 19627   00BA82                     __end_of_startTimedResponse:
 19628                           	callstack 0
 19629                           
 19630 ;; *************** function _sendMessage6 *****************
 19631 ;; Defined at:
 19632 ;;		line 1191 in file "../../VLCBlib_PIC/vlcb.c"
 19633 ;; Parameters:    Size  Location     Type
 19634 ;;  opc             1    wreg     enum E12342
 19635 ;;  data1           1    8[BANK1 ] unsigned char 
 19636 ;;  data2           1    9[BANK1 ] unsigned char 
 19637 ;;  data3           1   10[BANK1 ] unsigned char 
 19638 ;;  data4           1   11[BANK1 ] unsigned char 
 19639 ;;  data5           1   12[BANK1 ] unsigned char 
 19640 ;;  data6           1   13[BANK1 ] unsigned char 
 19641 ;; Auto vars:     Size  Location     Type
 19642 ;;  opc             1   70[BANK0 ] enum E12342
 19643 ;; Return value:  Size  Location     Type
 19644 ;;                  1    wreg      void 
 19645 ;; Registers used:
 19646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19647 ;; Tracked objects:
 19648 ;;		On entry : 0/0
 19649 ;;		On exit  : 0/0
 19650 ;;		Unchanged: 0/0
 19651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19652 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19655 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19656 ;;Total ram usage:        7 bytes
 19657 ;; Hardware stack levels used: 1
 19658 ;; Hardware stack levels required when called: 15
 19659 ;; This function calls:
 19660 ;;		_sendMessage
 19661 ;; This function is called by:
 19662 ;;		_doReqev
 19663 ;;		_reqevCallback
 19664 ;;		_mnsProcessMessage
 19665 ;;		_mnsTRallDiagnosticsCallback
 19666 ;; This function uses a non-reentrant model
 19667 ;;
 19668                           
 19669                           	psect	text65
 19670   00BDC2                     __ptext65:
 19671                           	callstack 0
 19672   00BDC2                     _sendMessage6:
 19673                           	callstack 12
 19674                           
 19675                           ; BSR set to: 0
 19676                           ;incstack = 0
 19677                           ;sendMessage6@opc stored from wreg
 19678   00BDC2  0100               	movlb	0	; () banked
 19679   00BDC4  6FA6               	movwf	sendMessage6@opc& (0+255),b
 19680                           
 19681                           ;../../VLCBlib_PIC/vlcb.c: 1192:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 19682   00BDC6  0E07               	movlw	7
 19683   00BDC8  0101               	movlb	1	; () banked
 19684   00BDCA  6FBE               	movwf	sendMessage@len& (0+255),b
 19685   00BDCC  C1C6  F1BF         	movff	sendMessage6@data1,sendMessage@data1
 19686   00BDD0  C1C7  F1C0         	movff	sendMessage6@data2,sendMessage@data2
 19687   00BDD4  C1C8  F1C1         	movff	sendMessage6@data3,sendMessage@data3
 19688   00BDD8  C1C9  F1C2         	movff	sendMessage6@data4,sendMessage@data4
 19689   00BDDC  C1CA  F1C3         	movff	sendMessage6@data5,sendMessage@data5
 19690   00BDE0  C1CB  F1C4         	movff	sendMessage6@data6,sendMessage@data6
 19691   00BDE4  0E00               	movlw	0
 19692   00BDE6  6FC5               	movwf	sendMessage@data7& (0+255),b
 19693   00BDE8  0100               	movlb	0	; () banked
 19694   00BDEA  51A6               	movf	sendMessage6@opc& (0+255),w,b
 19695   00BDEC  EC55  F054         	call	_sendMessage
 19696   00BDF0  0012               	return		;funcret
 19697   00BDF2                     __end_of_sendMessage6:
 19698                           	callstack 0
 19699                           
 19700 ;; *************** function _sendMessage3 *****************
 19701 ;; Defined at:
 19702 ;;		line 1152 in file "../../VLCBlib_PIC/vlcb.c"
 19703 ;; Parameters:    Size  Location     Type
 19704 ;;  opc             1    wreg     enum E12342
 19705 ;;  data1           1   70[BANK0 ] unsigned char 
 19706 ;;  data2           1   71[BANK0 ] unsigned char 
 19707 ;;  data3           1   72[BANK0 ] unsigned char 
 19708 ;; Auto vars:     Size  Location     Type
 19709 ;;  opc             1   73[BANK0 ] enum E12342
 19710 ;; Return value:  Size  Location     Type
 19711 ;;                  1    wreg      void 
 19712 ;; Registers used:
 19713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 19714 ;; Tracked objects:
 19715 ;;		On entry : 0/0
 19716 ;;		On exit  : 0/0
 19717 ;;		Unchanged: 0/0
 19718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19719 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19720 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19722 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19723 ;;Total ram usage:        4 bytes
 19724 ;; Hardware stack levels used: 1
 19725 ;; Hardware stack levels required when called: 15
 19726 ;; This function calls:
 19727 ;;		_sendMessage
 19728 ;; This function is called by:
 19729 ;;		_producerProcessMessage
 19730 ;;		_teachProcessMessage
 19731 ;;		_doNnevn
 19732 ;;		_doNenrd
 19733 ;;		_doRqevn
 19734 ;;		_doEvlrn
 19735 ;;		_doReval
 19736 ;;		_doEvuln
 19737 ;;		_doReqev
 19738 ;;		_mnsProcessMessage
 19739 ;;		_nvProcessMessage
 19740 ;; This function uses a non-reentrant model
 19741 ;;
 19742                           
 19743                           	psect	text66
 19744   00BDF2                     __ptext66:
 19745                           	callstack 0
 19746   00BDF2                     _sendMessage3:
 19747                           	callstack 13
 19748                           
 19749                           ;incstack = 0
 19750                           ;sendMessage3@opc stored from wreg
 19751   00BDF2  0100               	movlb	0	; () banked
 19752   00BDF4  6FA9               	movwf	sendMessage3@opc& (0+255),b
 19753                           
 19754                           ;../../VLCBlib_PIC/vlcb.c: 1153:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 19755   00BDF6  0E04               	movlw	4
 19756   00BDF8  0101               	movlb	1	; () banked
 19757   00BDFA  6FBE               	movwf	sendMessage@len& (0+255),b
 19758   00BDFC  C0A6  F1BF         	movff	sendMessage3@data1,sendMessage@data1
 19759   00BE00  C0A7  F1C0         	movff	sendMessage3@data2,sendMessage@data2
 19760   00BE04  C0A8  F1C1         	movff	sendMessage3@data3,sendMessage@data3
 19761   00BE08  0E00               	movlw	0
 19762   00BE0A  6FC2               	movwf	sendMessage@data4& (0+255),b
 19763   00BE0C  0E00               	movlw	0
 19764   00BE0E  6FC3               	movwf	sendMessage@data5& (0+255),b
 19765   00BE10  0E00               	movlw	0
 19766   00BE12  6FC4               	movwf	sendMessage@data6& (0+255),b
 19767   00BE14  0E00               	movlw	0
 19768   00BE16  6FC5               	movwf	sendMessage@data7& (0+255),b
 19769   00BE18  0100               	movlb	0	; () banked
 19770   00BE1A  51A9               	movf	sendMessage3@opc& (0+255),w,b
 19771   00BE1C  EC55  F054         	call	_sendMessage
 19772   00BE20  0012               	return		;funcret
 19773   00BE22                     __end_of_sendMessage3:
 19774                           	callstack 0
 19775                           
 19776 ;; *************** function _getParameter *****************
 19777 ;; Defined at:
 19778 ;;		line 761 in file "../../VLCBlib_PIC/mns.c"
 19779 ;; Parameters:    Size  Location     Type
 19780 ;;  idx             1    wreg     unsigned char 
 19781 ;; Auto vars:     Size  Location     Type
 19782 ;;  idx             1   50[BANK0 ] unsigned char 
 19783 ;;  i               1    0        unsigned char 
 19784 ;; Return value:  Size  Location     Type
 19785 ;;                  1    wreg      unsigned char 
 19786 ;; Registers used:
 19787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19788 ;; Tracked objects:
 19789 ;;		On entry : 0/0
 19790 ;;		On exit  : 0/0
 19791 ;;		Unchanged: 0/0
 19792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19797 ;;Total ram usage:        1 bytes
 19798 ;; Hardware stack levels used: 1
 19799 ;; Hardware stack levels required when called: 14
 19800 ;; This function calls:
 19801 ;;		_getParameterFlags
 19802 ;;		_have
 19803 ;; This function is called by:
 19804 ;;		_mnsProcessMessage
 19805 ;;		_mnsTRrqnpnCallback
 19806 ;; This function uses a non-reentrant model
 19807 ;;
 19808                           
 19809                           	psect	text67
 19810   0086A2                     __ptext67:
 19811                           	callstack 0
 19812   0086A2                     _getParameter:
 19813                           	callstack 13
 19814                           
 19815                           ;incstack = 0
 19816                           ;getParameter@idx stored from wreg
 19817   0086A2  0100               	movlb	0	; () banked
 19818   0086A4  6F92               	movwf	getParameter@idx& (0+255),b
 19819                           
 19820                           ;../../VLCBlib_PIC/mns.c: 762:     uint8_t i;;../../VLCBlib_PIC/mns.c: 763:     switch(i
      +                          dx) {
 19821   0086A6  D031               	goto	l20216
 19822   0086A8                     l20128:
 19823                           
 19824                           ; BSR set to: 0
 19825                           ;../../VLCBlib_PIC/mns.c: 765:         return 20;
 19826   0086A8  0E14               	movlw	20
 19827   0086AA  0012               	return	
 19828   0086AC                     l20132:
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;../../VLCBlib_PIC/mns.c: 767:         return MANU_MERG;
 19832   0086AC  0EA5               	movlw	165
 19833   0086AE  0012               	return	
 19834   0086B0                     l20136:
 19835                           
 19836                           ; BSR set to: 0
 19837                           ;../../VLCBlib_PIC/mns.c: 769:         return 'e';
 19838   0086B0  0E65               	movlw	101
 19839   0086B2  0012               	return	
 19840   0086B4                     l20140:
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;../../VLCBlib_PIC/mns.c: 771:         return MTYP_CANMIO;
 19844   0086B4  0E20               	movlw	32
 19845   0086B6  0012               	return	
 19846   0086B8                     l20144:
 19847                           
 19848                           ; BSR set to: 0
 19849                           ;../../VLCBlib_PIC/mns.c: 773:         return 255;
 19850   0086B8  0EFF               	movlw	255
 19851   0086BA  0012               	return	
 19852   0086BC                     l20152:
 19853                           
 19854                           ; BSR set to: 0
 19855                           ;../../VLCBlib_PIC/mns.c: 777:         return 127;
 19856   0086BC  0E7F               	movlw	127
 19857   0086BE  0012               	return	
 19858   0086C0                     l20156:
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;../../VLCBlib_PIC/mns.c: 779:         return 3;
 19862   0086C0  0E03               	movlw	3
 19863   0086C2  0012               	return	
 19864   0086C4                     l20160:
 19865                           
 19866                           ; BSR set to: 0
 19867                           ;../../VLCBlib_PIC/mns.c: 781:         return getParameterFlags();
 19868   0086C4  EC1A  F05B         	call	_getParameterFlags	;wreg free
 19869   0086C8  0012               	return	
 19870   0086CA                     l20164:
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;../../VLCBlib_PIC/mns.c: 783:         return P18F26K80;
 19874   0086CA  0E0F               	movlw	15
 19875   0086CC  0012               	return	
 19876   0086CE                     l20168:
 19877                           
 19878                           ; BSR set to: 0
 19879                           ;../../VLCBlib_PIC/mns.c: 785:         if (have(SERVICE_ID_CAN)) {
 19880   0086CE  0E03               	movlw	3
 19881   0086D0  EC38  F056         	call	_have
 19882   0086D4  0900               	iorlw	0
 19883   0086D6  B4D8               	btfsc	status,2,c
 19884   0086D8  D002               	goto	l20174
 19885   0086DA                     u20760:
 19886                           
 19887                           ;../../VLCBlib_PIC/mns.c: 786:             return PB_CAN;
 19888   0086DA  0E01               	movlw	1
 19889   0086DC  0012               	return	
 19890   0086DE                     l20174:
 19891                           
 19892                           ;../../VLCBlib_PIC/mns.c: 788:         return 0;
 19893   0086DE  0E00               	movlw	0
 19894   0086E0  0012               	return	
 19895   0086E2                     l20182:
 19896                           
 19897                           ; BSR set to: 0
 19898                           ;../../VLCBlib_PIC/mns.c: 792:         return 0x08;
 19899   0086E2  0E08               	movlw	8
 19900   0086E4  0012               	return	
 19901   0086E6                     l20194:
 19902                           
 19903                           ; BSR set to: 0
 19904                           ;../../VLCBlib_PIC/mns.c: 804:         return *(const uint8_t*)0x3FFFFE;
 19905   0086E6  0EFE               	movlw	254
 19906   0086E8  6EF6               	movwf	tblptrl,c
 19907   0086EA                     	if	1	;There is more than 1 active tblptr byte
 19908   0086EA  0EFF               	movlw	255
 19909   0086EC  6EF7               	movwf	tblptrh,c
 19910   0086EE                     	endif
 19911   0086EE                     	if	1	;There are 3 active tblptr bytes
 19912   0086EE  0E3F               	movlw	63
 19913   0086F0  6EF8               	movwf	tblptru,c
 19914   0086F2                     	endif
 19915   0086F2  0008               	tblrd		*
 19916   0086F4  50F5               	movf	tablat,w,c
 19917   0086F6  0012               	return	
 19918   0086F8                     l20198:
 19919                           
 19920                           ; BSR set to: 0
 19921                           ;../../VLCBlib_PIC/mns.c: 806:         return *(const uint8_t*)0x3FFFFF;
 19922   0086F8  0EFF               	movlw	255
 19923   0086FA  6EF6               	movwf	tblptrl,c
 19924   0086FC                     	if	1	;There is more than 1 active tblptr byte
 19925   0086FC  0EFF               	movlw	255
 19926   0086FE  6EF7               	movwf	tblptrh,c
 19927   008700                     	endif
 19928   008700                     	if	1	;There are 3 active tblptr bytes
 19929   008700  0E3F               	movlw	63
 19930   008702  6EF8               	movwf	tblptru,c
 19931   008704                     	endif
 19932   008704  0008               	tblrd		*
 19933   008706  50F5               	movf	tablat,w,c
 19934   008708  0012               	return	
 19935   00870A                     l20216:
 19936   00870A  0100               	movlb	0	; () banked
 19937   00870C  5192               	movf	getParameter@idx& (0+255),w,b
 19938                           
 19939                           ; Switch size 1, requested type "simple"
 19940                           ; Number of cases is 19, Range of values is 0 to 20
 19941                           ; switch strategies available:
 19942                           ; Name         Instructions Cycles
 19943                           ; simple_byte           58    30 (average)
 19944                           ;	Chosen strategy is simple_byte
 19945   00870E  0A00               	xorlw	0	; case 0
 19946   008710  B4D8               	btfsc	status,2,c
 19947   008712  D7CA               	goto	l20128
 19948   008714  0A01               	xorlw	1	; case 1
 19949   008716  B4D8               	btfsc	status,2,c
 19950   008718  D7C9               	goto	l20132
 19951   00871A  0A03               	xorlw	3	; case 2
 19952   00871C  B4D8               	btfsc	status,2,c
 19953   00871E  D7C8               	goto	l20136
 19954   008720  0A01               	xorlw	1	; case 3
 19955   008722  B4D8               	btfsc	status,2,c
 19956   008724  D7C7               	goto	l20140
 19957   008726  0A07               	xorlw	7	; case 4
 19958   008728  B4D8               	btfsc	status,2,c
 19959   00872A  D7C6               	goto	l20144
 19960   00872C  0A01               	xorlw	1	; case 5
 19961   00872E  B4D8               	btfsc	status,2,c
 19962   008730  D7BB               	goto	l20128
 19963   008732  0A03               	xorlw	3	; case 6
 19964   008734  B4D8               	btfsc	status,2,c
 19965   008736  D7C2               	goto	l20152
 19966   008738  0A01               	xorlw	1	; case 7
 19967   00873A  B4D8               	btfsc	status,2,c
 19968   00873C  D7C1               	goto	l20156
 19969   00873E  0A0F               	xorlw	15	; case 8
 19970   008740  B4D8               	btfsc	status,2,c
 19971   008742  D7C0               	goto	l20160
 19972   008744  0A01               	xorlw	1	; case 9
 19973   008746  B4D8               	btfsc	status,2,c
 19974   008748  D7C0               	goto	l20164
 19975   00874A  0A03               	xorlw	3	; case 10
 19976   00874C  B4D8               	btfsc	status,2,c
 19977   00874E  D7BF               	goto	l20168
 19978   008750  0A01               	xorlw	1	; case 11
 19979   008752  B4D8               	btfsc	status,2,c
 19980   008754  D7C4               	goto	l20174
 19981   008756  0A07               	xorlw	7	; case 12
 19982   008758  B4D8               	btfsc	status,2,c
 19983   00875A  D7C3               	goto	l20182
 19984   00875C  0A01               	xorlw	1	; case 13
 19985   00875E  B4D8               	btfsc	status,2,c
 19986   008760  D7BE               	goto	l20174
 19987   008762  0A03               	xorlw	3	; case 14
 19988   008764  B4D8               	btfsc	status,2,c
 19989   008766  D7BB               	goto	l20174
 19990   008768  0A1F               	xorlw	31	; case 17
 19991   00876A  B4D8               	btfsc	status,2,c
 19992   00876C  D7BC               	goto	l20194
 19993   00876E  0A03               	xorlw	3	; case 18
 19994   008770  B4D8               	btfsc	status,2,c
 19995   008772  D7C2               	goto	l20198
 19996   008774  0A01               	xorlw	1	; case 19
 19997   008776  B4D8               	btfsc	status,2,c
 19998   008778  D7B0               	goto	u20760
 19999   00877A  0A07               	xorlw	7	; case 20
 20000   00877C  B4D8               	btfsc	status,2,c
 20001   00877E  D7A0               	goto	l20156
 20002   008780  D7AE               	goto	l20174
 20003   008782                     __end_of_getParameter:
 20004                           	callstack 0
 20005                           
 20006 ;; *************** function _getParameterFlags *****************
 20007 ;; Defined at:
 20008 ;;		line 559 in file "../../VLCBlib_PIC/mns.c"
 20009 ;; Parameters:    Size  Location     Type
 20010 ;;		None
 20011 ;; Auto vars:     Size  Location     Type
 20012 ;;  flags           1   49[BANK0 ] unsigned char 
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  1    wreg      unsigned char 
 20015 ;; Registers used:
 20016 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20025 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20026 ;;Total ram usage:        1 bytes
 20027 ;; Hardware stack levels used: 1
 20028 ;; Hardware stack levels required when called: 13
 20029 ;; This function calls:
 20030 ;;		_have
 20031 ;; This function is called by:
 20032 ;;		_mnsProcessMessage
 20033 ;;		_getParameter
 20034 ;; This function uses a non-reentrant model
 20035 ;;
 20036                           
 20037                           	psect	text68
 20038   00B634                     __ptext68:
 20039                           	callstack 0
 20040   00B634                     _getParameterFlags:
 20041                           	callstack 13
 20042                           
 20043                           ;../../VLCBlib_PIC/mns.c: 560:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 561:     flag
      +                          s = 0;
 20044                           
 20045                           ;incstack = 0
 20046   00B634  0E00               	movlw	0
 20047   00B636  0100               	movlb	0	; () banked
 20048   00B638  6F91               	movwf	getParameterFlags@flags& (0+255),b
 20049                           
 20050                           ; BSR set to: 0
 20051                           ;../../VLCBlib_PIC/mns.c: 562:     if (have(SERVICE_ID_CONSUMER)) {
 20052   00B63A  0E06               	movlw	6
 20053   00B63C  EC38  F056         	call	_have
 20054   00B640  0900               	iorlw	0
 20055   00B642  B4D8               	btfsc	status,2,c
 20056   00B644  D002               	goto	l19424
 20057                           
 20058                           ;../../VLCBlib_PIC/mns.c: 563:         flags |= 1;
 20059   00B646  0100               	movlb	0	; () banked
 20060   00B648  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 20061   00B64A                     l19424:
 20062                           
 20063                           ;../../VLCBlib_PIC/mns.c: 565:     if (have(SERVICE_ID_PRODUCER)) {
 20064   00B64A  0E05               	movlw	5
 20065   00B64C  EC38  F056         	call	_have
 20066   00B650  0900               	iorlw	0
 20067   00B652  B4D8               	btfsc	status,2,c
 20068   00B654  D002               	goto	l19428
 20069                           
 20070                           ;../../VLCBlib_PIC/mns.c: 566:         flags |= 2;
 20071   00B656  0100               	movlb	0	; () banked
 20072   00B658  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 20073   00B65A                     l19428:
 20074                           
 20075                           ;../../VLCBlib_PIC/mns.c: 568:     if (flags == (2 & 1)) flags |= 16;
 20076   00B65A  0100               	movlb	0	; () banked
 20077   00B65C  5191               	movf	getParameterFlags@flags& (0+255),w,b
 20078   00B65E  B4D8               	btfsc	status,2,c
 20079                           
 20080                           ; BSR set to: 0
 20081   00B660  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 20082                           
 20083                           ; BSR set to: 0
 20084                           ;../../VLCBlib_PIC/mns.c: 569:     if (have(SERVICE_ID_BOOT)) {
 20085   00B662  0E0A               	movlw	10
 20086   00B664  EC38  F056         	call	_have
 20087   00B668  0900               	iorlw	0
 20088   00B66A  B4D8               	btfsc	status,2,c
 20089   00B66C  D002               	goto	l19436
 20090                           
 20091                           ;../../VLCBlib_PIC/mns.c: 570:         flags |= 8;
 20092   00B66E  0100               	movlb	0	; () banked
 20093   00B670  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 20094   00B672                     l19436:
 20095                           
 20096                           ;../../VLCBlib_PIC/mns.c: 572:     if (mode_flags & 1) {
 20097   00B672  0101               	movlb	1	; () banked
 20098   00B674  A17D               	btfss	_mode_flags& (0+255),0,b
 20099   00B676  D002               	goto	l1912
 20100                           
 20101                           ; BSR set to: 1
 20102                           ;../../VLCBlib_PIC/mns.c: 573:         flags |= 32;
 20103   00B678  0100               	movlb	0	; () banked
 20104   00B67A  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 20105   00B67C                     l1912:
 20106                           
 20107                           ;../../VLCBlib_PIC/mns.c: 575:     flags |= 64;
 20108   00B67C  0100               	movlb	0	; () banked
 20109   00B67E  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 20110                           
 20111                           ; BSR set to: 0
 20112                           ;../../VLCBlib_PIC/mns.c: 576:     return flags;
 20113   00B680  5191               	movf	getParameterFlags@flags& (0+255),w,b
 20114                           
 20115                           ; BSR set to: 0
 20116   00B682  0012               	return		;funcret
 20117   00B684                     __end_of_getParameterFlags:
 20118                           	callstack 0
 20119                           
 20120 ;; *************** function _findServiceIndex *****************
 20121 ;; Defined at:
 20122 ;;		line 822 in file "../../VLCBlib_PIC/vlcb.c"
 20123 ;; Parameters:    Size  Location     Type
 20124 ;;  serviceType     1    wreg     unsigned char 
 20125 ;; Auto vars:     Size  Location     Type
 20126 ;;  serviceType     1   47[BANK0 ] unsigned char 
 20127 ;;  i               1   48[BANK0 ] unsigned char 
 20128 ;; Return value:  Size  Location     Type
 20129 ;;                  1    wreg      unsigned char 
 20130 ;; Registers used:
 20131 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20132 ;; Tracked objects:
 20133 ;;		On entry : 0/0
 20134 ;;		On exit  : 0/0
 20135 ;;		Unchanged: 0/0
 20136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20139 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20140 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20141 ;;Total ram usage:        4 bytes
 20142 ;; Hardware stack levels used: 1
 20143 ;; Hardware stack levels required when called: 12
 20144 ;; This function calls:
 20145 ;;		Nothing
 20146 ;; This function is called by:
 20147 ;;		_doNerd
 20148 ;;		_doReqev
 20149 ;;		_mnsProcessMessage
 20150 ;;		_nvProcessMessage
 20151 ;; This function uses a non-reentrant model
 20152 ;;
 20153                           
 20154                           	psect	text69
 20155   00ABFE                     __ptext69:
 20156                           	callstack 0
 20157   00ABFE                     _findServiceIndex:
 20158                           	callstack 15
 20159                           
 20160                           ; BSR set to: 0
 20161                           ;incstack = 0
 20162                           ;findServiceIndex@serviceType stored from wreg
 20163   00ABFE  0100               	movlb	0	; () banked
 20164   00AC00  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 20165                           
 20166                           ;../../VLCBlib_PIC/vlcb.c: 823:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 824:     for (i
      +                          =0; i<9; i++) {
 20167   00AC02  0E00               	movlw	0
 20168   00AC04  0100               	movlb	0	; () banked
 20169   00AC06  6F90               	movwf	findServiceIndex@i& (0+255),b
 20170   00AC08                     l20028:
 20171                           
 20172                           ; BSR set to: 0
 20173                           ;../../VLCBlib_PIC/vlcb.c: 825:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 20174   00AC08  5190               	movf	findServiceIndex@i& (0+255),w,b
 20175   00AC0A  0D02               	mullw	2
 20176   00AC0C  0E75               	movlw	low _services
 20177   00AC0E  24F3               	addwf	243,w,c
 20178   00AC10  6EF6               	movwf	tblptrl,c
 20179   00AC12  0EEE               	movlw	high _services
 20180   00AC14  20F4               	addwfc	244,w,c
 20181   00AC16  6EF7               	movwf	tblptrh,c
 20182   00AC18                     	if	1	;There are 3 active tblptr bytes
 20183   00AC18  6AF8               	clrf	tblptru,c
 20184   00AC1A  0E00               	movlw	low (__mediumconst shr (0+16))
 20185   00AC1C  22F8               	addwfc	tblptru,f,c
 20186   00AC1E                     	endif
 20187   00AC1E  0009               	tblrd		*+
 20188   00AC20  50F5               	movf	tablat,w,c
 20189   00AC22  0009               	tblrd		*+
 20190   00AC24  10F5               	iorwf	tablat,w,c
 20191   00AC26  B4D8               	btfsc	status,2,c
 20192   00AC28  D01D               	goto	l20036
 20193                           
 20194                           ; BSR set to: 0
 20195   00AC2A  5190               	movf	findServiceIndex@i& (0+255),w,b
 20196   00AC2C  0D02               	mullw	2
 20197   00AC2E  0E75               	movlw	low _services
 20198   00AC30  24F3               	addwf	243,w,c
 20199   00AC32  6EF6               	movwf	tblptrl,c
 20200   00AC34  0EEE               	movlw	high _services
 20201   00AC36  20F4               	addwfc	244,w,c
 20202   00AC38  6EF7               	movwf	tblptrh,c
 20203   00AC3A                     	if	1	;There are 3 active tblptr bytes
 20204   00AC3A  6AF8               	clrf	tblptru,c
 20205   00AC3C  0E00               	movlw	low (__mediumconst shr (0+16))
 20206   00AC3E  22F8               	addwfc	tblptru,f,c
 20207   00AC40                     	endif
 20208   00AC40  0009               	tblrd		*+
 20209   00AC42  CFF5 F08D          	movff	tablat,??_findServiceIndex
 20210   00AC46  0009               	tblrd		*+
 20211   00AC48  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 20212   00AC4C  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 20213   00AC50  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 20214   00AC54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20215   00AC54  6AF8               	clrf	tblptru,c
 20216   00AC56                     	endif
 20217   00AC56                     	if	0	;tblptru may be non-zero
 20218   00AC56                     	endif
 20219   00AC56  0008               	tblrd		*
 20220   00AC58  50F5               	movf	tablat,w,c
 20221   00AC5A  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 20222   00AC5C  A4D8               	btfss	status,2,c
 20223   00AC5E  D002               	goto	l20036
 20224                           
 20225                           ; BSR set to: 0
 20226                           ;../../VLCBlib_PIC/vlcb.c: 826:             return i;
 20227   00AC60  5190               	movf	findServiceIndex@i& (0+255),w,b
 20228   00AC62  0012               	return	
 20229   00AC64                     l20036:
 20230                           
 20231                           ; BSR set to: 0
 20232                           ;../../VLCBlib_PIC/vlcb.c: 828:     }
 20233   00AC64  2B90               	incf	findServiceIndex@i& (0+255),f,b
 20234                           
 20235                           ; BSR set to: 0
 20236   00AC66  0E08               	movlw	8
 20237   00AC68  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 20238   00AC6A  D7CE               	goto	l20028
 20239                           
 20240                           ; BSR set to: 0
 20241                           ;../../VLCBlib_PIC/vlcb.c: 829:     return 0xFF;
 20242   00AC6C  0EFF               	movlw	255
 20243                           
 20244                           ; BSR set to: 0
 20245   00AC6E  0012               	return		;funcret
 20246   00AC70                     __end_of_findServiceIndex:
 20247                           	callstack 0
 20248                           
 20249 ;; *************** function _mnsPoll *****************
 20250 ;; Defined at:
 20251 ;;		line 593 in file "../../VLCBlib_PIC/mns.c"
 20252 ;; Parameters:    Size  Location     Type
 20253 ;;		None
 20254 ;; Auto vars:     Size  Location     Type
 20255 ;;		None
 20256 ;; Return value:  Size  Location     Type
 20257 ;;                  1    wreg      void 
 20258 ;; Registers used:
 20259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20260 ;; Tracked objects:
 20261 ;;		On entry : 0/0
 20262 ;;		On exit  : 0/0
 20263 ;;		Unchanged: 0/0
 20264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20267 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20268 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20269 ;;Total ram usage:        4 bytes
 20270 ;; Hardware stack levels used: 1
 20271 ;; Hardware stack levels required when called: 18
 20272 ;; This function calls:
 20273 ;;		_sendMessage2
 20274 ;;		_sendMessage5
 20275 ;;		_setLEDsByMode
 20276 ;;		_tickGet
 20277 ;;		_writeNVM
 20278 ;; This function is called by:
 20279 ;;		_poll
 20280 ;; This function uses a non-reentrant model
 20281 ;;
 20282                           
 20283                           	psect	text70
 20284   0047E8                     __ptext70:
 20285                           	callstack 0
 20286   0047E8                     _mnsPoll:
 20287                           	callstack 11
 20288                           
 20289                           ;../../VLCBlib_PIC/mns.c: 595:     if (mode_state == MODE_NORMAL) {
 20290                           
 20291                           ; BSR set to: 0
 20292                           ;incstack = 0
 20293   0047E8  0100               	movlb	0	; () banked
 20294   0047EA  05C2               	decf	_mode_state& (0+255),w,b
 20295   0047EC  A4D8               	btfss	status,2,c
 20296   0047EE  D040               	goto	l23298
 20297                           
 20298                           ; BSR set to: 0
 20299                           ;../../VLCBlib_PIC/mns.c: 596:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 20300   0047F0  ECED  F059         	call	_tickGet	;wreg free
 20301   0047F4  0101               	movlb	1	; () banked
 20302   0047F6  5168               	movf	_heartbeatTimer& (0+255),w,b
 20303   0047F8  0100               	movlb	0	; () banked
 20304   0047FA  5D8D               	subwf	?_tickGet& (0+255),w,b
 20305   0047FC  0101               	movlb	1	; () banked
 20306   0047FE  6FCB               	movwf	??_mnsPoll& (0+255),b
 20307   004800  5169               	movf	(_heartbeatTimer+1)& (0+255),w,b
 20308   004802  0100               	movlb	0	; () banked
 20309   004804  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20310   004806  0101               	movlb	1	; () banked
 20311   004808  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 20312   00480A  516A               	movf	(_heartbeatTimer+2)& (0+255),w,b
 20313   00480C  0100               	movlb	0	; () banked
 20314   00480E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20315   004810  0101               	movlb	1	; () banked
 20316   004812  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 20317   004814  516B               	movf	(_heartbeatTimer+3)& (0+255),w,b
 20318   004816  0100               	movlb	0	; () banked
 20319   004818  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20320   00481A  0101               	movlb	1	; () banked
 20321   00481C  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 20322   00481E  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 20323   004820  E108               	bnz	u25090
 20324   004822  0EB5               	movlw	181
 20325   004824  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 20326   004826  0EC4               	movlw	196
 20327   004828  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20328   00482A  0E04               	movlw	4
 20329   00482C  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20330   00482E  A0D8               	btfss	status,0,c
 20331   004830  D01F               	goto	l23298
 20332   004832                     u25090:
 20333                           
 20334                           ; BSR set to: 1
 20335                           ;../../VLCBlib_PIC/mns.c: 597:             if (mode_flags & 4) {
 20336   004832  A57D               	btfss	_mode_flags& (0+255),2,b
 20337   004834  D00F               	goto	l23292
 20338                           
 20339                           ; BSR set to: 1
 20340                           ;../../VLCBlib_PIC/mns.c: 598:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x00].asBytes.lo,0);
 20341   004836  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 20342   00483A  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 20343   00483E  C0BE  F1C8         	movff	_heartbeatSequence,sendMessage5@data3
 20344   004842  C19E  F1C9         	movff	_mnsDiagnostics,sendMessage5@data4
 20345   004846  0E00               	movlw	0
 20346   004848  6FCA               	movwf	sendMessage5@data5& (0+255),b
 20347   00484A  0EAB               	movlw	171
 20348   00484C  EC41  F05F         	call	_sendMessage5
 20349   004850  0100               	movlb	0	; () banked
 20350   004852  2BBE               	incf	_heartbeatSequence& (0+255),f,b
 20351   004854                     l23292:
 20352                           
 20353                           ;../../VLCBlib_PIC/mns.c: 600:             heartbeatTimer.val = tickGet();
 20354   004854  ECED  F059         	call	_tickGet	;wreg free
 20355   004858  C08D  F168         	movff	?_tickGet,_heartbeatTimer
 20356   00485C  C08E  F169         	movff	?_tickGet+1,_heartbeatTimer+1
 20357   004860  C08F  F16A         	movff	?_tickGet+2,_heartbeatTimer+2
 20358   004864  C090  F16B         	movff	?_tickGet+3,_heartbeatTimer+3
 20359                           
 20360                           ;../../VLCBlib_PIC/mns.c: 601:             if (mnsDiagnostics[0x00].asBytes.lo > 0) {
 20361   004868  0101               	movlb	1	; () banked
 20362   00486A  519E               	movf	_mnsDiagnostics& (0+255),w,b
 20363   00486C  A4D8               	btfss	status,2,c
 20364                           
 20365                           ; BSR set to: 1
 20366                           ;../../VLCBlib_PIC/mns.c: 602:                 mnsDiagnostics[0x00].asBytes.lo--;
 20367   00486E  079E               	decf	_mnsDiagnostics& (0+255),f,b
 20368   004870                     l23298:
 20369                           
 20370                           ;../../VLCBlib_PIC/mns.c: 608:     if (mode_flags != last_mode_flags) {
 20371   004870  0100               	movlb	0	; () banked
 20372   004872  51C0               	movf	_last_mode_flags& (0+255),w,b
 20373   004874  0101               	movlb	1	; () banked
 20374   004876  197D               	xorwf	_mode_flags& (0+255),w,b
 20375   004878  B4D8               	btfsc	status,2,c
 20376   00487A  D00E               	goto	l23304
 20377                           
 20378                           ; BSR set to: 1
 20379                           ;../../VLCBlib_PIC/mns.c: 609:         writeNVM(EEPROM_NVM_TYPE, 0x3FA, mode_flags);
 20380   00487C  0EFA               	movlw	250
 20381   00487E  0100               	movlb	0	; () banked
 20382   004880  6FA4               	movwf	writeNVM@index& (0+255),b
 20383   004882  0E03               	movlw	3
 20384   004884  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 20385   004886  0E00               	movlw	0
 20386   004888  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 20387   00488A  C17D  F0A7         	movff	_mode_flags,writeNVM@value
 20388   00488E  0E00               	movlw	0
 20389   004890  EC91  F05B         	call	_writeNVM
 20390                           
 20391                           ;../../VLCBlib_PIC/mns.c: 610:         last_mode_flags = mode_flags;
 20392   004894  C17D  F0C0         	movff	_mode_flags,_last_mode_flags
 20393   004898                     l23304:
 20394                           
 20395                           ;../../VLCBlib_PIC/mns.c: 612:     if (mode_state != last_mode_state) {
 20396   004898  0100               	movlb	0	; () banked
 20397   00489A  51C1               	movf	_last_mode_state& (0+255),w,b
 20398   00489C  19C2               	xorwf	_mode_state& (0+255),w,b
 20399   00489E  B4D8               	btfsc	status,2,c
 20400   0048A0  D00D               	goto	l23310
 20401                           
 20402                           ; BSR set to: 0
 20403                           ;../../VLCBlib_PIC/mns.c: 613:         writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 20404   0048A2  0EFB               	movlw	251
 20405   0048A4  6FA4               	movwf	writeNVM@index& (0+255),b
 20406   0048A6  0E03               	movlw	3
 20407   0048A8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 20408   0048AA  0E00               	movlw	0
 20409   0048AC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 20410   0048AE  C0C2  F0A7         	movff	_mode_state,writeNVM@value
 20411   0048B2  0E00               	movlw	0
 20412   0048B4  EC91  F05B         	call	_writeNVM
 20413                           
 20414                           ;../../VLCBlib_PIC/mns.c: 614:         last_mode_state = mode_state;
 20415   0048B8  C0C2  F0C1         	movff	_mode_state,_last_mode_state
 20416   0048BC                     l23310:
 20417                           
 20418                           ;../../VLCBlib_PIC/mns.c: 618:     if ((tickGet() - uptimeTimer.val) > 62500) {
 20419   0048BC  ECED  F059         	call	_tickGet	;wreg free
 20420   0048C0  0101               	movlb	1	; () banked
 20421   0048C2  5164               	movf	_uptimeTimer& (0+255),w,b
 20422   0048C4  0100               	movlb	0	; () banked
 20423   0048C6  5D8D               	subwf	?_tickGet& (0+255),w,b
 20424   0048C8  0101               	movlb	1	; () banked
 20425   0048CA  6FCB               	movwf	??_mnsPoll& (0+255),b
 20426   0048CC  5165               	movf	(_uptimeTimer+1)& (0+255),w,b
 20427   0048CE  0100               	movlb	0	; () banked
 20428   0048D0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20429   0048D2  0101               	movlb	1	; () banked
 20430   0048D4  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 20431   0048D6  5166               	movf	(_uptimeTimer+2)& (0+255),w,b
 20432   0048D8  0100               	movlb	0	; () banked
 20433   0048DA  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20434   0048DC  0101               	movlb	1	; () banked
 20435   0048DE  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 20436   0048E0  5167               	movf	(_uptimeTimer+3)& (0+255),w,b
 20437   0048E2  0100               	movlb	0	; () banked
 20438   0048E4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20439   0048E6  0101               	movlb	1	; () banked
 20440   0048E8  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 20441   0048EA  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 20442   0048EC  11CD               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 20443   0048EE  E106               	bnz	u25140
 20444   0048F0  0E25               	movlw	37
 20445   0048F2  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 20446   0048F4  0EF4               	movlw	244
 20447   0048F6  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20448   0048F8  A0D8               	btfss	status,0,c
 20449   0048FA  D105               	goto	l23376
 20450   0048FC                     u25140:
 20451                           
 20452                           ; BSR set to: 1
 20453                           ;../../VLCBlib_PIC/mns.c: 619:         uptimeTimer.val = tickGet();
 20454   0048FC  ECED  F059         	call	_tickGet	;wreg free
 20455   004900  C08D  F164         	movff	?_tickGet,_uptimeTimer
 20456   004904  C08E  F165         	movff	?_tickGet+1,_uptimeTimer+1
 20457   004908  C08F  F166         	movff	?_tickGet+2,_uptimeTimer+2
 20458   00490C  C090  F167         	movff	?_tickGet+3,_uptimeTimer+3
 20459                           
 20460                           ;../../VLCBlib_PIC/mns.c: 620:         mnsDiagnostics[0x02].asUint++;
 20461   004910  0101               	movlb	1	; () banked
 20462   004912  4BA2               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 20463   004914  2BA3               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 20464                           
 20465                           ; BSR set to: 1
 20466                           ;../../VLCBlib_PIC/mns.c: 621:         if (mnsDiagnostics[0x02].asUint == 0) {
 20467   004916  51A2               	movf	(_mnsDiagnostics+4)& (0+255),w,b
 20468   004918  11A3               	iorwf	(_mnsDiagnostics+5)& (0+255),w,b
 20469   00491A  A4D8               	btfss	status,2,c
 20470   00491C  D0F4               	goto	l23376
 20471                           
 20472                           ; BSR set to: 1
 20473                           ;../../VLCBlib_PIC/mns.c: 622:             mnsDiagnostics[0x01].asUint++;
 20474   00491E  4BA0               	infsnz	(_mnsDiagnostics+2)& (0+255),f,b
 20475   004920  2BA1               	incf	(_mnsDiagnostics+3)& (0+255),f,b
 20476   004922  D0F1               	goto	l23376
 20477   004924                     l1929:
 20478                           
 20479                           ; BSR set to: 0
 20480                           ;../../VLCBlib_PIC/mns.c: 630:             if ((!(PORTAbits.RA2)) == 0) {
 20481   004924  A480               	btfss	128,2,c	;volatile
 20482   004926  D00B               	goto	l23322
 20483   004928                     u25160:
 20484                           
 20485                           ;../../VLCBlib_PIC/mns.c: 632:                 pbTimer.val = tickGet();
 20486   004928  ECED  F059         	call	_tickGet	;wreg free
 20487   00492C  C08D  F0AA         	movff	?_tickGet,_pbTimer
 20488   004930  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 20489   004934  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 20490   004938  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 20491                           
 20492                           ;../../VLCBlib_PIC/mns.c: 633:             } else {
 20493   00493C  0012               	return	
 20494   00493E                     l23322:
 20495                           
 20496                           ; BSR set to: 0
 20497                           ;../../VLCBlib_PIC/mns.c: 635:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20498   00493E  ECED  F059         	call	_tickGet	;wreg free
 20499   004942  0100               	movlb	0	; () banked
 20500   004944  51AA               	movf	_pbTimer& (0+255),w,b
 20501   004946  5D8D               	subwf	?_tickGet& (0+255),w,b
 20502   004948  0101               	movlb	1	; () banked
 20503   00494A  6FCB               	movwf	??_mnsPoll& (0+255),b
 20504   00494C  0100               	movlb	0	; () banked
 20505   00494E  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 20506   004950  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20507   004952  0101               	movlb	1	; () banked
 20508   004954  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 20509   004956  0100               	movlb	0	; () banked
 20510   004958  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 20511   00495A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20512   00495C  0101               	movlb	1	; () banked
 20513   00495E  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 20514   004960  0100               	movlb	0	; () banked
 20515   004962  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 20516   004964  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20517   004966  0101               	movlb	1	; () banked
 20518   004968  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 20519   00496A  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 20520   00496C  E108               	bnz	u25170
 20521   00496E  0E91               	movlw	145
 20522   004970  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 20523   004972  0ED0               	movlw	208
 20524   004974  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20525   004976  0E03               	movlw	3
 20526   004978  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20527   00497A  A0D8               	btfss	status,0,c
 20528   00497C  0012               	return	
 20529   00497E                     u25170:
 20530                           
 20531                           ; BSR set to: 1
 20532                           ;../../VLCBlib_PIC/mns.c: 637:                     mode_state = MODE_SETUP;
 20533   00497E  0E00               	movlw	0
 20534   004980  0100               	movlb	0	; () banked
 20535   004982  6FC2               	movwf	_mode_state& (0+255),b
 20536                           
 20537                           ; BSR set to: 0
 20538                           ;../../VLCBlib_PIC/mns.c: 638:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 20539   004984  69BF               	setf	_setupModePreviousMode& (0+255),b
 20540                           
 20541                           ; BSR set to: 0
 20542                           ;../../VLCBlib_PIC/mns.c: 639:                     pbTimer.val = tickGet();
 20543   004986  ECED  F059         	call	_tickGet	;wreg free
 20544   00498A  C08D  F0AA         	movff	?_tickGet,_pbTimer
 20545   00498E  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 20546   004992  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 20547   004996  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 20548                           
 20549                           ;../../VLCBlib_PIC/mns.c: 641:                     sendMessage2(OPC_RQNN, nn.bytes.hi, n
      +                          n.bytes.lo);
 20550   00499A  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 20551   00499E  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 20552   0049A2  0E50               	movlw	80
 20553   0049A4  EC11  F05F         	call	_sendMessage2
 20554                           
 20555                           ;../../VLCBlib_PIC/mns.c: 642:                     setLEDsByMode();
 20556   0049A8  ECF8  F05F         	call	_setLEDsByMode	;wreg free
 20557   0049AC  0012               	return	
 20558   0049AE                     l1934:
 20559                           
 20560                           ; BSR set to: 0
 20561                           ;../../VLCBlib_PIC/mns.c: 660:             if ((!(PORTAbits.RA2)) == 0) {
 20562   0049AE  A480               	btfss	128,2,c	;volatile
 20563   0049B0  0012               	return	
 20564                           
 20565                           ; BSR set to: 0
 20566                           ;../../VLCBlib_PIC/mns.c: 663:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20567   0049B2  ECED  F059         	call	_tickGet	;wreg free
 20568   0049B6  0100               	movlb	0	; () banked
 20569   0049B8  51AA               	movf	_pbTimer& (0+255),w,b
 20570   0049BA  5D8D               	subwf	?_tickGet& (0+255),w,b
 20571   0049BC  0101               	movlb	1	; () banked
 20572   0049BE  6FCB               	movwf	??_mnsPoll& (0+255),b
 20573   0049C0  0100               	movlb	0	; () banked
 20574   0049C2  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 20575   0049C4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20576   0049C6  0101               	movlb	1	; () banked
 20577   0049C8  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 20578   0049CA  0100               	movlb	0	; () banked
 20579   0049CC  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 20580   0049CE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20581   0049D0  0101               	movlb	1	; () banked
 20582   0049D2  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 20583   0049D4  0100               	movlb	0	; () banked
 20584   0049D6  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 20585   0049D8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20586   0049DA  0101               	movlb	1	; () banked
 20587   0049DC  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 20588   0049DE  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 20589   0049E0  E108               	bnz	u25190
 20590   0049E2  0E91               	movlw	145
 20591   0049E4  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 20592   0049E6  0ED0               	movlw	208
 20593   0049E8  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20594   0049EA  0E03               	movlw	3
 20595   0049EC  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20596   0049EE  A0D8               	btfss	status,0,c
 20597   0049F0  D017               	goto	l23348
 20598   0049F2                     u25190:
 20599                           
 20600                           ; BSR set to: 1
 20601                           ;../../VLCBlib_PIC/mns.c: 666:                     mode_state = setupModePreviousMode;
 20602   0049F2  C0BF  F0C2         	movff	_setupModePreviousMode,_mode_state
 20603                           
 20604                           ; BSR set to: 1
 20605                           ;../../VLCBlib_PIC/mns.c: 667:                     if (mode_state == MODE_NORMAL) {
 20606   0049F6  0100               	movlb	0	; () banked
 20607   0049F8  05C2               	decf	_mode_state& (0+255),w,b
 20608   0049FA  A4D8               	btfss	status,2,c
 20609   0049FC  D00E               	goto	l23346
 20610                           
 20611                           ; BSR set to: 0
 20612                           ;../../VLCBlib_PIC/mns.c: 668:                         nn.word = previousNN.word;
 20613   0049FE  C178  F0B4         	movff	_previousNN,_nn
 20614   004A02  C179  F0B5         	movff	_previousNN+1,_nn+1
 20615                           
 20616                           ; BSR set to: 0
 20617                           ;../../VLCBlib_PIC/mns.c: 669:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 20618   004A06  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 20619   004A0A  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 20620   004A0E  0E52               	movlw	82
 20621   004A10  EC11  F05F         	call	_sendMessage2
 20622                           
 20623                           ;../../VLCBlib_PIC/mns.c: 670:                         mnsDiagnostics[0x04].asUint++;
 20624   004A14  0101               	movlb	1	; () banked
 20625   004A16  4BA6               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 20626   004A18  2BA7               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 20627   004A1A                     l23346:
 20628                           
 20629                           ;../../VLCBlib_PIC/mns.c: 672:                     setLEDsByMode();
 20630   004A1A  ECF8  F05F         	call	_setLEDsByMode	;wreg free
 20631                           
 20632                           ;../../VLCBlib_PIC/mns.c: 673:                 } else if ((tickGet() - pbTimer.val) > 62
      +                          500) {
 20633   004A1E  D784               	goto	u25160
 20634   004A20                     l23348:
 20635                           
 20636                           ; BSR set to: 1
 20637   004A20  ECED  F059         	call	_tickGet	;wreg free
 20638   004A24  0100               	movlb	0	; () banked
 20639   004A26  51AA               	movf	_pbTimer& (0+255),w,b
 20640   004A28  5D8D               	subwf	?_tickGet& (0+255),w,b
 20641   004A2A  0101               	movlb	1	; () banked
 20642   004A2C  6FCB               	movwf	??_mnsPoll& (0+255),b
 20643   004A2E  0100               	movlb	0	; () banked
 20644   004A30  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 20645   004A32  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20646   004A34  0101               	movlb	1	; () banked
 20647   004A36  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 20648   004A38  0100               	movlb	0	; () banked
 20649   004A3A  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 20650   004A3C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20651   004A3E  0101               	movlb	1	; () banked
 20652   004A40  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 20653   004A42  0100               	movlb	0	; () banked
 20654   004A44  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 20655   004A46  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20656   004A48  0101               	movlb	1	; () banked
 20657   004A4A  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 20658   004A4C  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 20659   004A4E  11CD               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 20660   004A50  E106               	bnz	u25210
 20661   004A52  0E25               	movlw	37
 20662   004A54  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 20663   004A56  0EF4               	movlw	244
 20664   004A58  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20665   004A5A  A0D8               	btfss	status,0,c
 20666   004A5C  D765               	goto	u25160
 20667   004A5E                     u25210:
 20668                           
 20669                           ; BSR set to: 1
 20670                           ;../../VLCBlib_PIC/mns.c: 675:                     if (nn.word != 0) {
 20671   004A5E  0100               	movlb	0	; () banked
 20672   004A60  51B4               	movf	_nn& (0+255),w,b
 20673   004A62  11B5               	iorwf	(_nn+1)& (0+255),w,b
 20674   004A64  B4D8               	btfsc	status,2,c
 20675   004A66  D007               	goto	l23354
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;../../VLCBlib_PIC/mns.c: 676:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 20679   004A68  C0B5  F0A6         	movff	_nn+1,sendMessage2@data1
 20680   004A6C  C0B4  F0A7         	movff	_nn,sendMessage2@data2
 20681   004A70  0E51               	movlw	81
 20682   004A72  EC11  F05F         	call	_sendMessage2
 20683   004A76                     l23354:
 20684                           
 20685                           ;../../VLCBlib_PIC/mns.c: 678:                     nn.word = 0;
 20686   004A76  0E00               	movlw	0
 20687   004A78  0100               	movlb	0	; () banked
 20688   004A7A  6FB5               	movwf	(_nn+1)& (0+255),b
 20689   004A7C  0E00               	movlw	0
 20690   004A7E  6FB4               	movwf	_nn& (0+255),b
 20691                           
 20692                           ; BSR set to: 0
 20693                           ;../../VLCBlib_PIC/mns.c: 679:                     mode_state = MODE_UNINITIALISED;
 20694   004A80  69C2               	setf	_mode_state& (0+255),b
 20695   004A82  D7CB               	goto	l23346
 20696   004A84                     l1941:
 20697                           
 20698                           ; BSR set to: 0
 20699                           ;../../VLCBlib_PIC/mns.c: 687:             if ((!(PORTAbits.RA2)) == 0) {
 20700   004A84  A480               	btfss	128,2,c	;volatile
 20701   004A86  0012               	return	
 20702                           
 20703                           ; BSR set to: 0
 20704                           ;../../VLCBlib_PIC/mns.c: 689:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 20705   004A88  ECED  F059         	call	_tickGet	;wreg free
 20706   004A8C  0100               	movlb	0	; () banked
 20707   004A8E  51AA               	movf	_pbTimer& (0+255),w,b
 20708   004A90  5D8D               	subwf	?_tickGet& (0+255),w,b
 20709   004A92  0101               	movlb	1	; () banked
 20710   004A94  6FCB               	movwf	??_mnsPoll& (0+255),b
 20711   004A96  0100               	movlb	0	; () banked
 20712   004A98  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 20713   004A9A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 20714   004A9C  0101               	movlb	1	; () banked
 20715   004A9E  6FCC               	movwf	(??_mnsPoll+1)& (0+255),b
 20716   004AA0  0100               	movlb	0	; () banked
 20717   004AA2  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 20718   004AA4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 20719   004AA6  0101               	movlb	1	; () banked
 20720   004AA8  6FCD               	movwf	(??_mnsPoll+2)& (0+255),b
 20721   004AAA  0100               	movlb	0	; () banked
 20722   004AAC  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 20723   004AAE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 20724   004AB0  0101               	movlb	1	; () banked
 20725   004AB2  6FCE               	movwf	(??_mnsPoll+3)& (0+255),b
 20726   004AB4  51CE               	movf	(??_mnsPoll+3)& (0+255),w,b
 20727   004AB6  E108               	bnz	u25240
 20728   004AB8  0E91               	movlw	145
 20729   004ABA  5DCB               	subwf	??_mnsPoll& (0+255),w,b
 20730   004ABC  0ED0               	movlw	208
 20731   004ABE  59CC               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 20732   004AC0  0E03               	movlw	3
 20733   004AC2  59CD               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 20734   004AC4  A0D8               	btfss	status,0,c
 20735   004AC6  D730               	goto	u25160
 20736   004AC8                     u25240:
 20737                           
 20738                           ; BSR set to: 1
 20739                           ;../../VLCBlib_PIC/mns.c: 692:                     previousNN.word = nn.word;
 20740   004AC8  C0B4  F178         	movff	_nn,_previousNN
 20741   004ACC  C0B5  F179         	movff	_nn+1,_previousNN+1
 20742                           
 20743                           ; BSR set to: 1
 20744                           ;../../VLCBlib_PIC/mns.c: 693:                     nn.bytes.lo = nn.bytes.hi = 0;
 20745   004AD0  0E00               	movlw	0
 20746   004AD2  0100               	movlb	0	; () banked
 20747   004AD4  6FB5               	movwf	(_nn+1)& (0+255),b
 20748   004AD6  C0B5  F0B4         	movff	_nn+1,_nn
 20749                           
 20750                           ;../../VLCBlib_PIC/mns.c: 695:                     mode_state = MODE_SETUP;
 20751   004ADA  0E00               	movlw	0
 20752   004ADC  6FC2               	movwf	_mode_state& (0+255),b
 20753                           
 20754                           ;../../VLCBlib_PIC/mns.c: 696:                     setupModePreviousMode = MODE_NORMAL;
 20755   004ADE  0E01               	movlw	1
 20756   004AE0  6FBF               	movwf	_setupModePreviousMode& (0+255),b
 20757                           
 20758                           ; BSR set to: 0
 20759                           ;../../VLCBlib_PIC/mns.c: 697:                     pbTimer.val = tickGet();
 20760   004AE2  ECED  F059         	call	_tickGet	;wreg free
 20761   004AE6  C08D  F0AA         	movff	?_tickGet,_pbTimer
 20762   004AEA  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 20763   004AEE  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 20764   004AF2  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 20765                           
 20766                           ;../../VLCBlib_PIC/mns.c: 699:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 20767   004AF6  C179  F0A6         	movff	_previousNN+1,sendMessage2@data1
 20768   004AFA  C178  F0A7         	movff	_previousNN,sendMessage2@data2
 20769   004AFE  0E50               	movlw	80
 20770   004B00  EC11  F05F         	call	_sendMessage2
 20771   004B04  D78A               	goto	l23346
 20772   004B06                     l23376:
 20773                           
 20774                           ; BSR set to: 1
 20775   004B06  0100               	movlb	0	; () banked
 20776   004B08  51C2               	movf	_mode_state& (0+255),w,b
 20777                           
 20778                           ; Switch size 1, requested type "simple"
 20779                           ; Number of cases is 2, Range of values is 0 to 255
 20780                           ; switch strategies available:
 20781                           ; Name         Instructions Cycles
 20782                           ; simple_byte            7     4 (average)
 20783                           ;	Chosen strategy is simple_byte
 20784   004B0A  0A00               	xorlw	0	; case 0
 20785   004B0C  B4D8               	btfsc	status,2,c
 20786   004B0E  D74F               	goto	l1934
 20787   004B10  0AFF               	xorlw	255	; case 255
 20788   004B12  B4D8               	btfsc	status,2,c
 20789   004B14  D707               	goto	l1929
 20790   004B16  D7B6               	goto	l1941
 20791   004B18                     __end_of_mnsPoll:
 20792                           	callstack 0
 20793                           
 20794 ;; *************** function _setLEDsByMode *****************
 20795 ;; Defined at:
 20796 ;;		line 742 in file "../../VLCBlib_PIC/mns.c"
 20797 ;; Parameters:    Size  Location     Type
 20798 ;;		None
 20799 ;; Auto vars:     Size  Location     Type
 20800 ;;		None
 20801 ;; Return value:  Size  Location     Type
 20802 ;;                  1    wreg      void 
 20803 ;; Registers used:
 20804 ;;		wreg, status,2, status,0, cstack
 20805 ;; Tracked objects:
 20806 ;;		On entry : 0/0
 20807 ;;		On exit  : 0/0
 20808 ;;		Unchanged: 0/0
 20809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20814 ;;Total ram usage:        0 bytes
 20815 ;; Hardware stack levels used: 1
 20816 ;; Hardware stack levels required when called: 13
 20817 ;; This function calls:
 20818 ;;		_showStatus
 20819 ;; This function is called by:
 20820 ;;		_mnsPowerUp
 20821 ;;		_mnsProcessMessage
 20822 ;;		_mnsPoll
 20823 ;; This function uses a non-reentrant model
 20824 ;;
 20825                           
 20826                           	psect	text71
 20827   00BFF0                     __ptext71:
 20828                           	callstack 0
 20829   00BFF0                     _setLEDsByMode:
 20830                           	callstack 15
 20831                           
 20832                           ;../../VLCBlib_PIC/mns.c: 743:        switch (mode_state) {
 20833                           
 20834                           ;incstack = 0
 20835   00BFF0  D00C               	goto	l21358
 20836   00BFF2                     l21350:
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;../../VLCBlib_PIC/mns.c: 745:             showStatus(STATUS_UNINITIALISED);
 20840   00BFF2  0E01               	movlw	1
 20841   00BFF4  ECDE  F047         	call	_showStatus
 20842                           
 20843                           ;../../VLCBlib_PIC/mns.c: 746:             break;
 20844   00BFF8  0012               	return	
 20845   00BFFA                     l21352:
 20846                           
 20847                           ; BSR set to: 0
 20848                           ;../../VLCBlib_PIC/mns.c: 748:             showStatus(STATUS_SETUP);
 20849   00BFFA  0E02               	movlw	2
 20850   00BFFC  ECDE  F047         	call	_showStatus
 20851                           
 20852                           ;../../VLCBlib_PIC/mns.c: 749:             break;
 20853   00C000  0012               	return	
 20854   00C002                     l21354:
 20855                           
 20856                           ; BSR set to: 0
 20857                           ;../../VLCBlib_PIC/mns.c: 751:             showStatus(STATUS_NORMAL);
 20858   00C002  0E03               	movlw	3
 20859   00C004  ECDE  F047         	call	_showStatus
 20860                           
 20861                           ;../../VLCBlib_PIC/mns.c: 752:             break;
 20862   00C008  0012               	return	
 20863   00C00A                     l21358:
 20864   00C00A  0100               	movlb	0	; () banked
 20865   00C00C  51C2               	movf	_mode_state& (0+255),w,b
 20866                           
 20867                           ; Switch size 1, requested type "simple"
 20868                           ; Number of cases is 2, Range of values is 0 to 255
 20869                           ; switch strategies available:
 20870                           ; Name         Instructions Cycles
 20871                           ; simple_byte            7     4 (average)
 20872                           ;	Chosen strategy is simple_byte
 20873   00C00E  0A00               	xorlw	0	; case 0
 20874   00C010  B4D8               	btfsc	status,2,c
 20875   00C012  D7F3               	goto	l21352
 20876   00C014  0AFF               	xorlw	255	; case 255
 20877   00C016  B4D8               	btfsc	status,2,c
 20878   00C018  D7EC               	goto	l21350
 20879   00C01A  D7F3               	goto	l21354
 20880   00C01C                     __end_of_setLEDsByMode:
 20881                           	callstack 0
 20882                           
 20883 ;; *************** function _sendMessage2 *****************
 20884 ;; Defined at:
 20885 ;;		line 1141 in file "../../VLCBlib_PIC/vlcb.c"
 20886 ;; Parameters:    Size  Location     Type
 20887 ;;  opc             1    wreg     enum E12342
 20888 ;;  data1           1   70[BANK0 ] unsigned char 
 20889 ;;  data2           1   71[BANK0 ] unsigned char 
 20890 ;; Auto vars:     Size  Location     Type
 20891 ;;  opc             1   72[BANK0 ] enum E12342
 20892 ;; Return value:  Size  Location     Type
 20893 ;;                  1    wreg      void 
 20894 ;; Registers used:
 20895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20896 ;; Tracked objects:
 20897 ;;		On entry : 0/0
 20898 ;;		On exit  : 0/0
 20899 ;;		Unchanged: 0/0
 20900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20904 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20905 ;;Total ram usage:        3 bytes
 20906 ;; Hardware stack levels used: 1
 20907 ;; Hardware stack levels required when called: 15
 20908 ;; This function calls:
 20909 ;;		_sendMessage
 20910 ;; This function is called by:
 20911 ;;		_doNnclr
 20912 ;;		_doEvlrn
 20913 ;;		_doEvuln
 20914 ;;		_mnsProcessMessage
 20915 ;;		_mnsPoll
 20916 ;;		_nvProcessMessage
 20917 ;; This function uses a non-reentrant model
 20918 ;;
 20919                           
 20920                           	psect	text72
 20921   00BE22                     __ptext72:
 20922                           	callstack 0
 20923   00BE22                     _sendMessage2:
 20924                           	callstack 12
 20925                           
 20926                           ;incstack = 0
 20927                           ;sendMessage2@opc stored from wreg
 20928   00BE22  0100               	movlb	0	; () banked
 20929   00BE24  6FA8               	movwf	sendMessage2@opc& (0+255),b
 20930                           
 20931                           ;../../VLCBlib_PIC/vlcb.c: 1142:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 20932   00BE26  0E03               	movlw	3
 20933   00BE28  0101               	movlb	1	; () banked
 20934   00BE2A  6FBE               	movwf	sendMessage@len& (0+255),b
 20935   00BE2C  C0A6  F1BF         	movff	sendMessage2@data1,sendMessage@data1
 20936   00BE30  C0A7  F1C0         	movff	sendMessage2@data2,sendMessage@data2
 20937   00BE34  0E00               	movlw	0
 20938   00BE36  6FC1               	movwf	sendMessage@data3& (0+255),b
 20939   00BE38  0E00               	movlw	0
 20940   00BE3A  6FC2               	movwf	sendMessage@data4& (0+255),b
 20941   00BE3C  0E00               	movlw	0
 20942   00BE3E  6FC3               	movwf	sendMessage@data5& (0+255),b
 20943   00BE40  0E00               	movlw	0
 20944   00BE42  6FC4               	movwf	sendMessage@data6& (0+255),b
 20945   00BE44  0E00               	movlw	0
 20946   00BE46  6FC5               	movwf	sendMessage@data7& (0+255),b
 20947   00BE48  0100               	movlb	0	; () banked
 20948   00BE4A  51A8               	movf	sendMessage2@opc& (0+255),w,b
 20949   00BE4C  EC55  F054         	call	_sendMessage
 20950   00BE50  0012               	return		;funcret
 20951   00BE52                     __end_of_sendMessage2:
 20952                           	callstack 0
 20953                           
 20954 ;; *************** function _setNormalActions *****************
 20955 ;; Defined at:
 20956 ;;		line 461 in file "../event_consumerDualActionQueue.c"
 20957 ;; Parameters:    Size  Location     Type
 20958 ;;		None
 20959 ;; Auto vars:     Size  Location     Type
 20960 ;;		None
 20961 ;; Return value:  Size  Location     Type
 20962 ;;                  1    wreg      void 
 20963 ;; Registers used:
 20964 ;;		wreg, status,2
 20965 ;; Tracked objects:
 20966 ;;		On entry : 0/0
 20967 ;;		On exit  : 0/0
 20968 ;;		Unchanged: 0/0
 20969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20974 ;;Total ram usage:        0 bytes
 20975 ;; Hardware stack levels used: 1
 20976 ;; Hardware stack levels required when called: 12
 20977 ;; This function calls:
 20978 ;;		Nothing
 20979 ;; This function is called by:
 20980 ;;		_consumer2QProcessMessage
 20981 ;; This function uses a non-reentrant model
 20982 ;;
 20983                           
 20984                           	psect	text73
 20985   00C3F4                     __ptext73:
 20986                           	callstack 0
 20987   00C3F4                     _setNormalActions:
 20988                           	callstack 16
 20989                           
 20990                           ;../event_consumerDualActionQueue.c: 462:     expedited = FALSE;
 20991                           
 20992                           ;incstack = 0
 20993   00C3F4  0E00               	movlw	0
 20994   00C3F6  6E25               	movwf	_expedited^0,c
 20995   00C3F8  0012               	return		;funcret
 20996   00C3FA                     __end_of_setNormalActions:
 20997                           	callstack 0
 20998                           
 20999 ;; *************** function _setExpeditedActions *****************
 21000 ;; Defined at:
 21001 ;;		line 454 in file "../event_consumerDualActionQueue.c"
 21002 ;; Parameters:    Size  Location     Type
 21003 ;;		None
 21004 ;; Auto vars:     Size  Location     Type
 21005 ;;		None
 21006 ;; Return value:  Size  Location     Type
 21007 ;;                  1    wreg      void 
 21008 ;; Registers used:
 21009 ;;		wreg, status,2
 21010 ;; Tracked objects:
 21011 ;;		On entry : 0/0
 21012 ;;		On exit  : 0/0
 21013 ;;		Unchanged: 0/0
 21014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21019 ;;Total ram usage:        0 bytes
 21020 ;; Hardware stack levels used: 1
 21021 ;; Hardware stack levels required when called: 12
 21022 ;; This function calls:
 21023 ;;		Nothing
 21024 ;; This function is called by:
 21025 ;;		_consumer2QProcessMessage
 21026 ;; This function uses a non-reentrant model
 21027 ;;
 21028                           
 21029                           	psect	text74
 21030   00C3FA                     __ptext74:
 21031                           	callstack 0
 21032   00C3FA                     _setExpeditedActions:
 21033                           	callstack 16
 21034                           
 21035                           ;../event_consumerDualActionQueue.c: 455:     expedited = TRUE;
 21036                           
 21037                           ;incstack = 0
 21038   00C3FA  0E01               	movlw	1
 21039   00C3FC  6E25               	movwf	_expedited^0,c
 21040   00C3FE  0012               	return		;funcret
 21041   00C400                     __end_of_setExpeditedActions:
 21042                           	callstack 0
 21043                           
 21044 ;; *************** function _pushTwoAction *****************
 21045 ;; Defined at:
 21046 ;;		line 335 in file "../event_consumerDualActionQueue.c"
 21047 ;; Parameters:    Size  Location     Type
 21048 ;;  a               1    wreg     unsigned char 
 21049 ;; Auto vars:     Size  Location     Type
 21050 ;;  a               1   45[BANK0 ] unsigned char 
 21051 ;; Return value:  Size  Location     Type
 21052 ;;                  1    wreg      enum E12700
 21053 ;; Registers used:
 21054 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21055 ;; Tracked objects:
 21056 ;;		On entry : 0/0
 21057 ;;		On exit  : 0/0
 21058 ;;		Unchanged: 0/0
 21059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21061 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21063 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21064 ;;Total ram usage:        1 bytes
 21065 ;; Hardware stack levels used: 1
 21066 ;; Hardware stack levels required when called: 12
 21067 ;; This function calls:
 21068 ;;		Nothing
 21069 ;; This function is called by:
 21070 ;;		_consumer2QProcessMessage
 21071 ;; This function uses a non-reentrant model
 21072 ;;
 21073                           
 21074                           	psect	text75
 21075   00B212                     __ptext75:
 21076                           	callstack 0
 21077   00B212                     _pushTwoAction:
 21078                           	callstack 16
 21079                           
 21080                           ;incstack = 0
 21081                           ;pushTwoAction@a stored from wreg
 21082   00B212  0100               	movlb	0	; () banked
 21083   00B214  6F8D               	movwf	pushTwoAction@a& (0+255),b
 21084                           
 21085                           ;../event_consumerDualActionQueue.c: 336:     if (expedited) {
 21086   00B216  5025               	movf	_expedited^0,w,c
 21087   00B218  B4D8               	btfsc	status,2,c
 21088   00B21A  D015               	goto	l20558
 21089                           
 21090                           ;../event_consumerDualActionQueue.c: 337:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 21091   00B21C  0100               	movlb	0	; () banked
 21092   00B21E  29C6               	incf	_expeditedWriteIndex& (0+255),w,b
 21093   00B220  0B07               	andlw	7
 21094   00B222  19C7               	xorwf	_expeditedReadIndex& (0+255),w,b
 21095   00B224  B4D8               	btfsc	status,2,c
 21096   00B226  0012               	return	
 21097                           
 21098                           ; BSR set to: 0
 21099                           ;../event_consumerDualActionQueue.c: 339:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 21100   00B228  0E50               	movlw	low _expeditedQueueBuf
 21101   00B22A  25C6               	addwf	_expeditedWriteIndex& (0+255),w,b
 21102   00B22C  6ED9               	movwf	fsr2l,c
 21103   00B22E  6ADA               	clrf	fsr2h,c
 21104   00B230  0E01               	movlw	high _expeditedQueueBuf
 21105   00B232  22DA               	addwfc	fsr2h,f,c
 21106   00B234  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21107                           
 21108                           ; BSR set to: 0
 21109   00B238  2BC6               	incf	_expeditedWriteIndex& (0+255),f,b
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;../event_consumerDualActionQueue.c: 340:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 21113   00B23A  0E07               	movlw	7
 21114   00B23C  65C6               	cpfsgt	_expeditedWriteIndex& (0+255),b
 21115   00B23E  0012               	return	
 21116                           
 21117                           ; BSR set to: 0
 21118   00B240  0E00               	movlw	0
 21119   00B242  6FC6               	movwf	_expeditedWriteIndex& (0+255),b
 21120   00B244  0012               	return	
 21121   00B246                     l20558:
 21122                           
 21123                           ;../event_consumerDualActionQueue.c: 343:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 21124   00B246  0100               	movlb	0	; () banked
 21125   00B248  29C8               	incf	_normalWriteIndex& (0+255),w,b
 21126   00B24A  0B3F               	andlw	63
 21127   00B24C  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 21128   00B24E  B4D8               	btfsc	status,2,c
 21129   00B250  0012               	return	
 21130                           
 21131                           ; BSR set to: 0
 21132                           ;../event_consumerDualActionQueue.c: 345:     normalQueueBuf[normalWriteIndex++] = a;
 21133   00B252  0E88               	movlw	low _normalQueueBuf
 21134   00B254  25C8               	addwf	_normalWriteIndex& (0+255),w,b
 21135   00B256  6ED9               	movwf	fsr2l,c
 21136   00B258  6ADA               	clrf	fsr2h,c
 21137   00B25A  0E03               	movlw	high _normalQueueBuf
 21138   00B25C  22DA               	addwfc	fsr2h,f,c
 21139   00B25E  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21140                           
 21141                           ; BSR set to: 0
 21142   00B262  2BC8               	incf	_normalWriteIndex& (0+255),f,b
 21143                           
 21144                           ; BSR set to: 0
 21145                           ;../event_consumerDualActionQueue.c: 346:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 21146   00B264  0E3F               	movlw	63
 21147   00B266  65C8               	cpfsgt	_normalWriteIndex& (0+255),b
 21148   00B268  0012               	return	
 21149                           
 21150                           ; BSR set to: 0
 21151   00B26A  0E00               	movlw	0
 21152   00B26C  6FC8               	movwf	_normalWriteIndex& (0+255),b
 21153                           
 21154                           ; BSR set to: 0
 21155   00B26E  0012               	return		;funcret
 21156   00B270                     __end_of_pushTwoAction:
 21157                           	callstack 0
 21158                           
 21159 ;; *************** function _canReceiveMessage *****************
 21160 ;; Defined at:
 21161 ;;		line 525 in file "../../VLCBlib_PIC/can18_ecan.c"
 21162 ;; Parameters:    Size  Location     Type
 21163 ;;  m               2    9[BANK1 ] PTR struct Message
 21164 ;;		 -> poll@m(9), 
 21165 ;; Auto vars:     Size  Location     Type
 21166 ;;  p               2   15[BANK1 ] PTR unsigned char 
 21167 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21168 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 21169 ;;		 -> NULL(0), 
 21170 ;;  mp              2   13[BANK1 ] PTR struct Message
 21171 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 21172 ;;  messageAvail    1   12[BANK1 ] enum E13010
 21173 ;;  incomingCanI    1    0        unsigned char 
 21174 ;; Return value:  Size  Location     Type
 21175 ;;                  1    wreg      enum E13010
 21176 ;; Registers used:
 21177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21178 ;; Tracked objects:
 21179 ;;		On entry : 0/0
 21180 ;;		On exit  : 0/0
 21181 ;;		Unchanged: 0/0
 21182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21183 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21184 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21185 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21186 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21187 ;;Total ram usage:        8 bytes
 21188 ;; Hardware stack levels used: 1
 21189 ;; Hardware stack levels required when called: 20
 21190 ;; This function calls:
 21191 ;;		_getBufferPointer
 21192 ;;		_handleSelfEnumeration
 21193 ;;		_memcpy
 21194 ;;		_pop
 21195 ;;		_processEnumeration
 21196 ;; This function is called by:
 21197 ;;		_poll
 21198 ;; This function uses a non-reentrant model
 21199 ;;
 21200                           
 21201                           	psect	text76
 21202   0070D0                     __ptext76:
 21203                           	callstack 0
 21204   0070D0                     _canReceiveMessage:
 21205                           	callstack 9
 21206                           
 21207                           ;../../VLCBlib_PIC/can18_ecan.c: 526:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          527:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 528:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 529:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 531:     PIE5bits.FIFOWMIE = 0;
 21208                           
 21209                           ; BSR set to: 0
 21210                           ;incstack = 0
 21211   0070D0  9076               	bcf	118,0,c	;volatile
 21212                           
 21213                           ;../../VLCBlib_PIC/can18_ecan.c: 532:     processEnumeration();
 21214   0070D2  ECCB  F03A         	call	_processEnumeration	;wreg free
 21215                           
 21216                           ;../../VLCBlib_PIC/can18_ecan.c: 535:     mp = pop(&rxQueue);
 21217   0070D6  0E26               	movlw	low _rxQueue
 21218   0070D8  0100               	movlb	0	; () banked
 21219   0070DA  6F8D               	movwf	pop@q& (0+255),b
 21220   0070DC  6B8E               	clrf	(pop@q+1)& (0+255),b
 21221   0070DE  EC33  F04C         	call	_pop	;wreg free
 21222   0070E2  C08D  F1CB         	movff	?_pop,canReceiveMessage@mp
 21223   0070E6  C08E  F1CC         	movff	?_pop+1,canReceiveMessage@mp+1
 21224                           
 21225                           ;../../VLCBlib_PIC/can18_ecan.c: 536:     if (mp != ((void*)0)) {
 21226   0070EA  0101               	movlb	1	; () banked
 21227   0070EC  51CB               	movf	canReceiveMessage@mp& (0+255),w,b
 21228   0070EE  11CC               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 21229   0070F0  B4D8               	btfsc	status,2,c
 21230   0070F2  D012               	goto	l2898
 21231                           
 21232                           ; BSR set to: 1
 21233                           ;../../VLCBlib_PIC/can18_ecan.c: 537:         memcpy(m, mp, sizeof(Message));
 21234   0070F4  C1C7  F08D         	movff	canReceiveMessage@m,memcpy@d1
 21235   0070F8  C1C8  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 21236   0070FC  C1CB  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 21237   007100  C1CC  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 21238   007104  0E00               	movlw	0
 21239   007106  0100               	movlb	0	; () banked
 21240   007108  6F92               	movwf	(memcpy@n+1)& (0+255),b
 21241   00710A  0E09               	movlw	9
 21242   00710C  6F91               	movwf	memcpy@n& (0+255),b
 21243   00710E  ECDE  F05C         	call	_memcpy	;wreg free
 21244                           
 21245                           ;../../VLCBlib_PIC/can18_ecan.c: 538:         PIE5bits.FIFOWMIE = 1;
 21246   007112  8076               	bsf	118,0,c	;volatile
 21247                           
 21248                           ;../../VLCBlib_PIC/can18_ecan.c: 539:         return RECEIVED;
 21249   007114  0E01               	movlw	1
 21250   007116  0012               	return	
 21251   007118                     l2898:
 21252                           
 21253                           ; BSR set to: 1
 21254                           ;../../VLCBlib_PIC/can18_ecan.c: 541:         if (COMSTATbits.NOT_FIFOEMPTY) {
 21255   007118  AE71               	btfss	113,7,c	;volatile
 21256   00711A  D00D               	goto	u25620
 21257                           
 21258                           ; BSR set to: 1
 21259                           ;../../VLCBlib_PIC/can18_ecan.c: 542:             p = getBufferPointer(CANCON & 0x07);
 21260   00711C  506F               	movf	111,w,c	;volatile
 21261   00711E  0B07               	andlw	7
 21262   007120  EC44  F050         	call	_getBufferPointer
 21263   007124  C08D  F1CD         	movff	?_getBufferPointer,canReceiveMessage@p
 21264   007128  C08E  F1CE         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 21265                           
 21266                           ;../../VLCBlib_PIC/can18_ecan.c: 543:             if (p == ((void*)0)) {
 21267   00712C  0101               	movlb	1	; () banked
 21268   00712E  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21269   007130  11CE               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 21270   007132  A4D8               	btfss	status,2,c
 21271   007134  D003               	goto	l2902
 21272   007136                     u25620:
 21273                           
 21274                           ; BSR set to: 1
 21275                           ;../../VLCBlib_PIC/can18_ecan.c: 545:                 PIE5bits.FIFOWMIE = 1;
 21276   007136  8076               	bsf	118,0,c	;volatile
 21277                           
 21278                           ; BSR set to: 1
 21279                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                 return NOT_RECEIVED;
 21280   007138  0E00               	movlw	0
 21281   00713A  0012               	return	
 21282   00713C                     l2902:
 21283                           
 21284                           ; BSR set to: 1
 21285                           ;../../VLCBlib_PIC/can18_ecan.c: 548:             PIR5bits.RXBnIF = 0;
 21286   00713C  9277               	bcf	119,1,c	;volatile
 21287                           
 21288                           ; BSR set to: 1
 21289                           ;../../VLCBlib_PIC/can18_ecan.c: 549:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 21290   00713E  C1CD  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 21291   007142  C1CE  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 21292   007146  ECF0  F040         	call	_handleSelfEnumeration	;wreg free
 21293   00714A  06E8               	decf	wreg,f,c
 21294   00714C  A4D8               	btfss	status,2,c
 21295   00714E  D08F               	goto	l23818
 21296                           
 21297                           ;../../VLCBlib_PIC/can18_ecan.c: 551:                 canDiagnostics[0x08].asUint++;
 21298   007150  0101               	movlb	1	; () banked
 21299   007152  4B8E               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 21300   007154  2B8F               	incf	(_canDiagnostics+17)& (0+255),f,b
 21301                           
 21302                           ; BSR set to: 1
 21303                           ;../../VLCBlib_PIC/can18_ecan.c: 555:                     m->opc = p[6];
 21304   007156  EE20 F006          	lfsr	2,6
 21305   00715A  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21306   00715C  26D9               	addwf	fsr2l,f,c
 21307   00715E  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21308   007160  22DA               	addwfc	fsr2h,f,c
 21309   007162  EE10 F001          	lfsr	1,1
 21310   007166  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 21311   007168  26E1               	addwf	fsr1l,f,c
 21312   00716A  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21313   00716C  22E2               	addwfc	fsr1h,f,c
 21314   00716E  CFDF FFE7          	movff	indf2,indf1
 21315                           
 21316                           ; BSR set to: 1
 21317                           ;../../VLCBlib_PIC/can18_ecan.c: 556:                     m->len = p[5] & 0xF;
 21318   007172  EE20 F005          	lfsr	2,5
 21319   007176  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21320   007178  26D9               	addwf	fsr2l,f,c
 21321   00717A  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21322   00717C  22DA               	addwfc	fsr2h,f,c
 21323   00717E  50DF               	movf	indf2,w,c
 21324   007180  0B0F               	andlw	15
 21325   007182  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 21326   007186  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21327   00718A  6EDF               	movwf	indf2,c
 21328                           
 21329                           ; BSR set to: 1
 21330                           ;../../VLCBlib_PIC/can18_ecan.c: 557:                     if (m->len > 8) {
 21331   00718C  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 21332   007190  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21333   007194  0E08               	movlw	8
 21334   007196  64DF               	cpfsgt	indf2,c
 21335   007198  D006               	goto	l23802
 21336                           
 21337                           ; BSR set to: 1
 21338                           ;../../VLCBlib_PIC/can18_ecan.c: 558:                         m->len = 8;
 21339   00719A  C1C7  FFD9         	movff	canReceiveMessage@m,fsr2l
 21340   00719E  C1C8  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 21341   0071A2  0E08               	movlw	8
 21342   0071A4  6EDF               	movwf	indf2,c
 21343   0071A6                     l23802:
 21344                           
 21345                           ; BSR set to: 1
 21346                           ;../../VLCBlib_PIC/can18_ecan.c: 560:                     m->bytes[0] = p[7];
 21347   0071A6  EE20 F007          	lfsr	2,7
 21348   0071AA  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21349   0071AC  26D9               	addwf	fsr2l,f,c
 21350   0071AE  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21351   0071B0  22DA               	addwfc	fsr2h,f,c
 21352   0071B2  EE10 F002          	lfsr	1,2
 21353   0071B6  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 21354   0071B8  26E1               	addwf	fsr1l,f,c
 21355   0071BA  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21356   0071BC  22E2               	addwfc	fsr1h,f,c
 21357   0071BE  CFDF FFE7          	movff	indf2,indf1
 21358                           
 21359                           ; BSR set to: 1
 21360                           ;../../VLCBlib_PIC/can18_ecan.c: 561:                     m->bytes[1] = p[8];
 21361   0071C2  EE20 F008          	lfsr	2,8
 21362   0071C6  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21363   0071C8  26D9               	addwf	fsr2l,f,c
 21364   0071CA  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21365   0071CC  22DA               	addwfc	fsr2h,f,c
 21366   0071CE  EE10 F003          	lfsr	1,3
 21367   0071D2  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 21368   0071D4  26E1               	addwf	fsr1l,f,c
 21369   0071D6  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21370   0071D8  22E2               	addwfc	fsr1h,f,c
 21371   0071DA  CFDF FFE7          	movff	indf2,indf1
 21372                           
 21373                           ; BSR set to: 1
 21374                           ;../../VLCBlib_PIC/can18_ecan.c: 562:                     m->bytes[2] = p[9];
 21375   0071DE  EE20 F009          	lfsr	2,9
 21376   0071E2  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21377   0071E4  26D9               	addwf	fsr2l,f,c
 21378   0071E6  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21379   0071E8  22DA               	addwfc	fsr2h,f,c
 21380   0071EA  EE10 F004          	lfsr	1,4
 21381   0071EE  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 21382   0071F0  26E1               	addwf	fsr1l,f,c
 21383   0071F2  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21384   0071F4  22E2               	addwfc	fsr1h,f,c
 21385   0071F6  CFDF FFE7          	movff	indf2,indf1
 21386                           
 21387                           ; BSR set to: 1
 21388                           ;../../VLCBlib_PIC/can18_ecan.c: 563:                     m->bytes[3] = p[10];
 21389   0071FA  EE20 F00A          	lfsr	2,10
 21390   0071FE  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21391   007200  26D9               	addwf	fsr2l,f,c
 21392   007202  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21393   007204  22DA               	addwfc	fsr2h,f,c
 21394   007206  EE10 F005          	lfsr	1,5
 21395   00720A  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 21396   00720C  26E1               	addwf	fsr1l,f,c
 21397   00720E  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21398   007210  22E2               	addwfc	fsr1h,f,c
 21399   007212  CFDF FFE7          	movff	indf2,indf1
 21400                           
 21401                           ; BSR set to: 1
 21402                           ;../../VLCBlib_PIC/can18_ecan.c: 564:                     m->bytes[4] = p[11];
 21403   007216  EE20 F00B          	lfsr	2,11
 21404   00721A  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21405   00721C  26D9               	addwf	fsr2l,f,c
 21406   00721E  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21407   007220  22DA               	addwfc	fsr2h,f,c
 21408   007222  EE10 F006          	lfsr	1,6
 21409   007226  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 21410   007228  26E1               	addwf	fsr1l,f,c
 21411   00722A  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21412   00722C  22E2               	addwfc	fsr1h,f,c
 21413   00722E  CFDF FFE7          	movff	indf2,indf1
 21414                           
 21415                           ; BSR set to: 1
 21416                           ;../../VLCBlib_PIC/can18_ecan.c: 565:                     m->bytes[5] = p[12];
 21417   007232  EE20 F00C          	lfsr	2,12
 21418   007236  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21419   007238  26D9               	addwf	fsr2l,f,c
 21420   00723A  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21421   00723C  22DA               	addwfc	fsr2h,f,c
 21422   00723E  EE10 F007          	lfsr	1,7
 21423   007242  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 21424   007244  26E1               	addwf	fsr1l,f,c
 21425   007246  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21426   007248  22E2               	addwfc	fsr1h,f,c
 21427   00724A  CFDF FFE7          	movff	indf2,indf1
 21428                           
 21429                           ; BSR set to: 1
 21430                           ;../../VLCBlib_PIC/can18_ecan.c: 566:                     m->bytes[6] = p[13];
 21431   00724E  EE20 F00D          	lfsr	2,13
 21432   007252  51CD               	movf	canReceiveMessage@p& (0+255),w,b
 21433   007254  26D9               	addwf	fsr2l,f,c
 21434   007256  51CE               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 21435   007258  22DA               	addwfc	fsr2h,f,c
 21436   00725A  EE10 F008          	lfsr	1,8
 21437   00725E  51C7               	movf	canReceiveMessage@m& (0+255),w,b
 21438   007260  26E1               	addwf	fsr1l,f,c
 21439   007262  51C8               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 21440   007264  22E2               	addwfc	fsr1h,f,c
 21441   007266  CFDF FFE7          	movff	indf2,indf1
 21442                           
 21443                           ; BSR set to: 1
 21444                           ;../../VLCBlib_PIC/can18_ecan.c: 567:                     messageAvailable = RECEIVED;
 21445   00726A  0E01               	movlw	1
 21446   00726C  6FCA               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 21447   00726E                     l23818:
 21448                           
 21449                           ;../../VLCBlib_PIC/can18_ecan.c: 570:             if (PIR5bits.IRXIF) {
 21450   00726E  BE77               	btfsc	119,7,c	;volatile
 21451                           
 21452                           ;../../VLCBlib_PIC/can18_ecan.c: 571:                 PIR5bits.IRXIF = 0;
 21453   007270  9E77               	bcf	119,7,c	;volatile
 21454                           
 21455                           ;../../VLCBlib_PIC/can18_ecan.c: 574:             p[0] &= 0x7f;
 21456   007272  C1CD  FFD9         	movff	canReceiveMessage@p,fsr2l
 21457   007276  C1CE  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 21458   00727A  0E7F               	movlw	127
 21459   00727C  16DF               	andwf	indf2,f,c
 21460                           
 21461                           ;../../VLCBlib_PIC/can18_ecan.c: 575:             PIE5bits.FIFOWMIE = 1;
 21462   00727E  8076               	bsf	118,0,c	;volatile
 21463                           
 21464                           ;../../VLCBlib_PIC/can18_ecan.c: 576:             return messageAvailable;
 21465   007280  0101               	movlb	1	; () banked
 21466   007282  51CA               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 21467   007284  0012               	return	
 21468   007286                     __end_of_canReceiveMessage:
 21469                           	callstack 0
 21470                           
 21471 ;; *************** function _processEnumeration *****************
 21472 ;; Defined at:
 21473 ;;		line 809 in file "../../VLCBlib_PIC/can18_ecan.c"
 21474 ;; Parameters:    Size  Location     Type
 21475 ;;		None
 21476 ;; Auto vars:     Size  Location     Type
 21477 ;;  i               1    8[BANK1 ] unsigned char 
 21478 ;;  newCanId        1    7[BANK1 ] unsigned char 
 21479 ;;  enumResult      1    6[BANK1 ] unsigned char 
 21480 ;; Return value:  Size  Location     Type
 21481 ;;                  1    wreg      void 
 21482 ;; Registers used:
 21483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21484 ;; Tracked objects:
 21485 ;;		On entry : 0/0
 21486 ;;		On exit  : 0/0
 21487 ;;		Unchanged: 0/0
 21488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21490 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21491 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21492 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21493 ;;Total ram usage:        7 bytes
 21494 ;; Hardware stack levels used: 1
 21495 ;; Hardware stack levels required when called: 19
 21496 ;; This function calls:
 21497 ;;		_setNewCanId
 21498 ;;		_tickGet
 21499 ;;		_updateModuleErrorStatus
 21500 ;; This function is called by:
 21501 ;;		_canReceiveMessage
 21502 ;; This function uses a non-reentrant model
 21503 ;;
 21504                           
 21505                           	psect	text77
 21506   007596                     __ptext77:
 21507                           	callstack 0
 21508   007596                     _processEnumeration:
 21509                           	callstack 9
 21510                           
 21511                           ;../../VLCBlib_PIC/can18_ecan.c: 810:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 812:     switch (enumerationState) {
 21512                           
 21513                           ;incstack = 0
 21514   007596  D09B               	goto	l21766
 21515   007598                     l21704:
 21516                           
 21517                           ; BSR set to: 1
 21518                           ;../../VLCBlib_PIC/can18_ecan.c: 814:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 21519   007598  ECED  F059         	call	_tickGet	;wreg free
 21520   00759C  5011               	movf	_enumerationStartTime^0,w,c
 21521   00759E  0100               	movlb	0	; () banked
 21522   0075A0  5D8D               	subwf	?_tickGet& (0+255),w,b
 21523   0075A2  0101               	movlb	1	; () banked
 21524   0075A4  6FC0               	movwf	??_processEnumeration& (0+255),b
 21525   0075A6  5012               	movf	(_enumerationStartTime+1)^0,w,c
 21526   0075A8  0100               	movlb	0	; () banked
 21527   0075AA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21528   0075AC  0101               	movlb	1	; () banked
 21529   0075AE  6FC1               	movwf	(??_processEnumeration+1)& (0+255),b
 21530   0075B0  5013               	movf	(_enumerationStartTime+2)^0,w,c
 21531   0075B2  0100               	movlb	0	; () banked
 21532   0075B4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21533   0075B6  0101               	movlb	1	; () banked
 21534   0075B8  6FC2               	movwf	(??_processEnumeration+2)& (0+255),b
 21535   0075BA  5014               	movf	(_enumerationStartTime+3)^0,w,c
 21536   0075BC  0100               	movlb	0	; () banked
 21537   0075BE  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21538   0075C0  0101               	movlb	1	; () banked
 21539   0075C2  6FC3               	movwf	(??_processEnumeration+3)& (0+255),b
 21540   0075C4  51C3               	movf	(??_processEnumeration+3)& (0+255),w,b
 21541   0075C6  11C2               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 21542   0075C8  E106               	bnz	u22940
 21543   0075CA  0ED5               	movlw	213
 21544   0075CC  5DC0               	subwf	??_processEnumeration& (0+255),w,b
 21545   0075CE  0E30               	movlw	48
 21546   0075D0  59C1               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 21547   0075D2  A0D8               	btfss	status,0,c
 21548   0075D4  0012               	return	
 21549   0075D6                     u22940:
 21550                           
 21551                           ; BSR set to: 1
 21552                           ;../../VLCBlib_PIC/can18_ecan.c: 816:                 for (i=1; i< (0x7F/8)+1; i++) {
 21553   0075D6  0E01               	movlw	1
 21554   0075D8  6FC6               	movwf	processEnumeration@i& (0+255),b
 21555   0075DA                     l21712:
 21556                           
 21557                           ; BSR set to: 1
 21558                           ;../../VLCBlib_PIC/can18_ecan.c: 817:                     enumerationResults[i] = 0;
 21559   0075DA  0E54               	movlw	low _enumerationResults
 21560   0075DC  25C6               	addwf	processEnumeration@i& (0+255),w,b
 21561   0075DE  6ED9               	movwf	fsr2l,c
 21562   0075E0  6ADA               	clrf	fsr2h,c
 21563   0075E2  0E02               	movlw	high _enumerationResults
 21564   0075E4  22DA               	addwfc	fsr2h,f,c
 21565   0075E6  6ADF               	clrf	indf2,c
 21566                           
 21567                           ; BSR set to: 1
 21568                           ;../../VLCBlib_PIC/can18_ecan.c: 818:                 }
 21569   0075E8  2BC6               	incf	processEnumeration@i& (0+255),f,b
 21570                           
 21571                           ; BSR set to: 1
 21572   0075EA  0E0F               	movlw	15
 21573   0075EC  65C6               	cpfsgt	processEnumeration@i& (0+255),b
 21574   0075EE  D7F5               	goto	l21712
 21575                           
 21576                           ; BSR set to: 1
 21577                           ;../../VLCBlib_PIC/can18_ecan.c: 819:                 enumerationResults[0] = 1;
 21578   0075F0  0E01               	movlw	1
 21579   0075F2  0102               	movlb	2	; () banked
 21580   0075F4  6F54               	movwf	_enumerationResults& (0+255),b
 21581                           
 21582                           ;../../VLCBlib_PIC/can18_ecan.c: 821:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 21583   0075F6  0E02               	movlw	2
 21584   0075F8  0100               	movlb	0	; () banked
 21585   0075FA  6FB6               	movwf	_enumerationState& (0+255),b
 21586                           
 21587                           ; BSR set to: 0
 21588                           ;../../VLCBlib_PIC/can18_ecan.c: 822:                 enumerationStartTime.val = tickGet
      +                          ();
 21589   0075FC  ECED  F059         	call	_tickGet	;wreg free
 21590   007600  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 21591   007604  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 21592   007608  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 21593   00760C  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 21594                           
 21595                           ;../../VLCBlib_PIC/can18_ecan.c: 823:                 canDiagnostics[0x0C].asUint++;
 21596   007610  0101               	movlb	1	; () banked
 21597   007612  4B96               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 21598   007614  2B97               	incf	(_canDiagnostics+25)& (0+255),f,b
 21599                           
 21600                           ; BSR set to: 1
 21601                           ;../../VLCBlib_PIC/can18_ecan.c: 824:                 TXB1CONbits.TXREQ = 1;
 21602   007616  010F               	movlb	15	; () banked
 21603   007618  8710               	bsf	16,3,b	;volatile
 21604   00761A  0012               	return	
 21605   00761C                     l21726:
 21606                           
 21607                           ; BSR set to: 1
 21608                           ;../../VLCBlib_PIC/can18_ecan.c: 828:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 21609   00761C  ECED  F059         	call	_tickGet	;wreg free
 21610   007620  5011               	movf	_enumerationStartTime^0,w,c
 21611   007622  0100               	movlb	0	; () banked
 21612   007624  5D8D               	subwf	?_tickGet& (0+255),w,b
 21613   007626  0101               	movlb	1	; () banked
 21614   007628  6FC0               	movwf	??_processEnumeration& (0+255),b
 21615   00762A  5012               	movf	(_enumerationStartTime+1)^0,w,c
 21616   00762C  0100               	movlb	0	; () banked
 21617   00762E  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21618   007630  0101               	movlb	1	; () banked
 21619   007632  6FC1               	movwf	(??_processEnumeration+1)& (0+255),b
 21620   007634  5013               	movf	(_enumerationStartTime+2)^0,w,c
 21621   007636  0100               	movlb	0	; () banked
 21622   007638  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21623   00763A  0101               	movlb	1	; () banked
 21624   00763C  6FC2               	movwf	(??_processEnumeration+2)& (0+255),b
 21625   00763E  5014               	movf	(_enumerationStartTime+3)^0,w,c
 21626   007640  0100               	movlb	0	; () banked
 21627   007642  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21628   007644  0101               	movlb	1	; () banked
 21629   007646  6FC3               	movwf	(??_processEnumeration+3)& (0+255),b
 21630   007648  51C3               	movf	(??_processEnumeration+3)& (0+255),w,b
 21631   00764A  11C2               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 21632   00764C  E106               	bnz	u22960
 21633   00764E  0E6B               	movlw	107
 21634   007650  5DC0               	subwf	??_processEnumeration& (0+255),w,b
 21635   007652  0E18               	movlw	24
 21636   007654  59C1               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 21637   007656  A0D8               	btfss	status,0,c
 21638   007658  0012               	return	
 21639   00765A                     u22960:
 21640                           
 21641                           ; BSR set to: 1
 21642                           ;../../VLCBlib_PIC/can18_ecan.c: 832:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 21643   00765A  0E00               	movlw	0
 21644   00765C  6FC6               	movwf	processEnumeration@i& (0+255),b
 21645   00765E  D001               	goto	l21732
 21646   007660                     l21730:
 21647                           
 21648                           ; BSR set to: 1
 21649                           ;../../VLCBlib_PIC/can18_ecan.c: 834:                 }
 21650   007660  2BC6               	incf	processEnumeration@i& (0+255),f,b
 21651   007662                     l21732:
 21652                           
 21653                           ; BSR set to: 1
 21654   007662  0E54               	movlw	low _enumerationResults
 21655   007664  25C6               	addwf	processEnumeration@i& (0+255),w,b
 21656   007666  6ED9               	movwf	fsr2l,c
 21657   007668  6ADA               	clrf	fsr2h,c
 21658   00766A  0E02               	movlw	high _enumerationResults
 21659   00766C  22DA               	addwfc	fsr2h,f,c
 21660   00766E  28DE               	incf	postinc2,w,c
 21661   007670  A4D8               	btfss	status,2,c
 21662   007672  D003               	goto	u22980
 21663                           
 21664                           ; BSR set to: 1
 21665   007674  0E0F               	movlw	15
 21666   007676  65C6               	cpfsgt	processEnumeration@i& (0+255),b
 21667   007678  D7F3               	goto	l21730
 21668   00767A                     u22980:
 21669                           
 21670                           ; BSR set to: 1
 21671                           ;../../VLCBlib_PIC/can18_ecan.c: 835:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 21672   00767A  0E54               	movlw	low _enumerationResults
 21673   00767C  25C6               	addwf	processEnumeration@i& (0+255),w,b
 21674   00767E  6ED9               	movwf	fsr2l,c
 21675   007680  6ADA               	clrf	fsr2h,c
 21676   007682  0E02               	movlw	high _enumerationResults
 21677   007684  22DA               	addwfc	fsr2h,f,c
 21678   007686  50DF               	movf	indf2,w,c
 21679   007688  6FC4               	movwf	processEnumeration@enumResult& (0+255),b
 21680   00768A  29C4               	incf	processEnumeration@enumResult& (0+255),w,b
 21681   00768C  B4D8               	btfsc	status,2,c
 21682   00768E  D017               	goto	l21754
 21683                           
 21684                           ; BSR set to: 1
 21685                           ;../../VLCBlib_PIC/can18_ecan.c: 836:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 21686   007690  51C6               	movf	processEnumeration@i& (0+255),w,b
 21687   007692  0D08               	mullw	8
 21688   007694  CFF3 F1C5          	movff	prodl,processEnumeration@newCanId
 21689   007698  D003               	goto	l21744
 21690   00769A                     l21740:
 21691                           
 21692                           ; BSR set to: 1
 21693                           ;../../VLCBlib_PIC/can18_ecan.c: 837:                         enumResult >>= 1;
 21694   00769A  90D8               	bcf	status,0,c
 21695   00769C  33C4               	rrcf	processEnumeration@enumResult& (0+255),f,b
 21696                           
 21697                           ; BSR set to: 1
 21698                           ;../../VLCBlib_PIC/can18_ecan.c: 838:                     }
 21699   00769E  2BC5               	incf	processEnumeration@newCanId& (0+255),f,b
 21700   0076A0                     l21744:
 21701                           
 21702                           ; BSR set to: 1
 21703   0076A0  B1C4               	btfsc	processEnumeration@enumResult& (0+255),0,b
 21704   0076A2  D7FB               	goto	l21740
 21705                           
 21706                           ; BSR set to: 1
 21707                           ;../../VLCBlib_PIC/can18_ecan.c: 839:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 21708   0076A4  51C5               	movf	processEnumeration@newCanId& (0+255),w,b
 21709   0076A6  B4D8               	btfsc	status,2,c
 21710   0076A8  D00A               	goto	l21754
 21711                           
 21712                           ; BSR set to: 1
 21713   0076AA  0E64               	movlw	100
 21714   0076AC  61C5               	cpfslt	processEnumeration@newCanId& (0+255),b
 21715   0076AE  D007               	goto	l21754
 21716                           
 21717                           ; BSR set to: 1
 21718                           ;../../VLCBlib_PIC/can18_ecan.c: 840:                         canId = newCanId;
 21719   0076B0  C1C5  F0B8         	movff	processEnumeration@newCanId,_canId
 21720                           
 21721                           ; BSR set to: 1
 21722                           ;../../VLCBlib_PIC/can18_ecan.c: 841:                         setNewCanId(canId);
 21723   0076B4  0100               	movlb	0	; () banked
 21724   0076B6  51B8               	movf	_canId& (0+255),w,b
 21725   0076B8  ECE3  F057         	call	_setNewCanId
 21726                           
 21727                           ;../../VLCBlib_PIC/can18_ecan.c: 842:                     } else {
 21728   0076BC  D004               	goto	l21762
 21729   0076BE                     l21754:
 21730                           
 21731                           ; BSR set to: 1
 21732                           ;../../VLCBlib_PIC/can18_ecan.c: 843:                         canDiagnostics[0x0F].asUin
      +                          t++;
 21733   0076BE  4B9C               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 21734   0076C0  2B9D               	incf	(_canDiagnostics+31)& (0+255),f,b
 21735                           
 21736                           ; BSR set to: 1
 21737                           ;../../VLCBlib_PIC/can18_ecan.c: 844:                         updateModuleErrorStatus();
 21738   0076C2  ECD2  F061         	call	_updateModuleErrorStatus	;wreg free
 21739   0076C6                     l21762:
 21740                           
 21741                           ;../../VLCBlib_PIC/can18_ecan.c: 853:                 enumerationState = NO_ENUMERATION;
 21742   0076C6  0E00               	movlw	0
 21743   0076C8  0100               	movlb	0	; () banked
 21744   0076CA  6FB6               	movwf	_enumerationState& (0+255),b
 21745   0076CC  0012               	return	
 21746   0076CE                     l21766:
 21747   0076CE  0100               	movlb	0	; () banked
 21748   0076D0  51B6               	movf	_enumerationState& (0+255),w,b
 21749   0076D2  0101               	movlb	1	; () banked
 21750   0076D4  6FC0               	movwf	??_processEnumeration& (0+255),b
 21751   0076D6  6BC1               	clrf	(??_processEnumeration+1)& (0+255),b
 21752                           
 21753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21754                           ; Switch size 1, requested type "simple"
 21755                           ; Number of cases is 1, Range of values is 0 to 0
 21756                           ; switch strategies available:
 21757                           ; Name         Instructions Cycles
 21758                           ; simple_byte            4     3 (average)
 21759                           ;	Chosen strategy is simple_byte
 21760   0076D8  51C1               	movf	(??_processEnumeration+1)& (0+255),w,b
 21761   0076DA  0A00               	xorlw	0	; case 0
 21762   0076DC  A4D8               	btfss	status,2,c
 21763   0076DE  0012               	return	
 21764                           
 21765                           ; BSR set to: 1
 21766                           ; Switch size 1, requested type "simple"
 21767                           ; Number of cases is 2, Range of values is 1 to 2
 21768                           ; switch strategies available:
 21769                           ; Name         Instructions Cycles
 21770                           ; simple_byte            7     4 (average)
 21771                           ;	Chosen strategy is simple_byte
 21772   0076E0  51C0               	movf	??_processEnumeration& (0+255),w,b
 21773   0076E2  0A01               	xorlw	1	; case 1
 21774   0076E4  B4D8               	btfsc	status,2,c
 21775   0076E6  D758               	goto	l21704
 21776   0076E8  0A03               	xorlw	3	; case 2
 21777   0076EA  A4D8               	btfss	status,2,c
 21778   0076EC  0012               	return	
 21779   0076EE  D796               	goto	l21726
 21780   0076F0                     __end_of_processEnumeration:
 21781                           	callstack 0
 21782                           
 21783 ;; *************** function _setNewCanId *****************
 21784 ;; Defined at:
 21785 ;;		line 866 in file "../../VLCBlib_PIC/can18_ecan.c"
 21786 ;; Parameters:    Size  Location     Type
 21787 ;;  newCanId        1    wreg     unsigned char 
 21788 ;; Auto vars:     Size  Location     Type
 21789 ;;  newCanId        1    1[BANK1 ] unsigned char 
 21790 ;; Return value:  Size  Location     Type
 21791 ;;                  1    wreg      enum E13106
 21792 ;; Registers used:
 21793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21794 ;; Tracked objects:
 21795 ;;		On entry : 0/0
 21796 ;;		On exit  : 0/0
 21797 ;;		Unchanged: 0/0
 21798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21800 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21802 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21803 ;;Total ram usage:        1 bytes
 21804 ;; Hardware stack levels used: 1
 21805 ;; Hardware stack levels required when called: 18
 21806 ;; This function calls:
 21807 ;;		_writeNVM
 21808 ;; This function is called by:
 21809 ;;		_processEnumeration
 21810 ;; This function uses a non-reentrant model
 21811 ;;
 21812                           
 21813                           	psect	text78
 21814   00AFC6                     __ptext78:
 21815                           	callstack 0
 21816   00AFC6                     _setNewCanId:
 21817                           	callstack 9
 21818                           
 21819                           ;incstack = 0
 21820                           ;setNewCanId@newCanId stored from wreg
 21821   00AFC6  0101               	movlb	1	; () banked
 21822   00AFC8  6FBF               	movwf	setNewCanId@newCanId& (0+255),b
 21823                           
 21824                           ;../../VLCBlib_PIC/can18_ecan.c: 867:     if ((newCanId >= 1) && (newCanId <= 99)) {
 21825   00AFCA  0101               	movlb	1	; () banked
 21826   00AFCC  51BF               	movf	setNewCanId@newCanId& (0+255),w,b
 21827   00AFCE  B4D8               	btfsc	status,2,c
 21828   00AFD0  0012               	return	
 21829                           
 21830                           ; BSR set to: 1
 21831   00AFD2  0E64               	movlw	100
 21832   00AFD4  61BF               	cpfslt	setNewCanId@newCanId& (0+255),b
 21833   00AFD6  0012               	return	
 21834                           
 21835                           ; BSR set to: 1
 21836                           ;../../VLCBlib_PIC/can18_ecan.c: 868:         canId = newCanId;
 21837   00AFD8  C1BF  F0B8         	movff	setNewCanId@newCanId,_canId
 21838                           
 21839                           ; BSR set to: 1
 21840                           ;../../VLCBlib_PIC/can18_ecan.c: 871:         TXB1SIDH &= 0b11110000;
 21841   00AFDC  0EF0               	movlw	240
 21842   00AFDE  010F               	movlb	15	; () banked
 21843   00AFE0  1711               	andwf	17,f,b	;volatile
 21844                           
 21845                           ;../../VLCBlib_PIC/can18_ecan.c: 872:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 21846   00AFE2  0101               	movlb	1	; () banked
 21847   00AFE4  39BF               	swapf	setNewCanId@newCanId& (0+255),w,b
 21848   00AFE6  46E8               	rlncf	wreg,f,c
 21849   00AFE8  0B1F               	andlw	31
 21850   00AFEA  0B0F               	andlw	15
 21851   00AFEC  010F               	movlb	15	; () banked
 21852   00AFEE  1311               	iorwf	17,f,b	;volatile
 21853                           
 21854                           ; BSR set to: 15
 21855                           ;../../VLCBlib_PIC/can18_ecan.c: 873:         TXB1SIDL = TXB0SIDL;
 21856   00AFF0  CF22 FF12          	movff	3874,3858	;volatile
 21857                           
 21858                           ;../../VLCBlib_PIC/can18_ecan.c: 875:         TXB2SIDH &= 0b11110000;
 21859   00AFF4  0EF0               	movlw	240
 21860   00AFF6  1701               	andwf	1,f,b	;volatile
 21861                           
 21862                           ;../../VLCBlib_PIC/can18_ecan.c: 876:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 21863   00AFF8  0101               	movlb	1	; () banked
 21864   00AFFA  39BF               	swapf	setNewCanId@newCanId& (0+255),w,b
 21865   00AFFC  46E8               	rlncf	wreg,f,c
 21866   00AFFE  0B1F               	andlw	31
 21867   00B000  0B0F               	andlw	15
 21868   00B002  010F               	movlb	15	; () banked
 21869   00B004  1301               	iorwf	1,f,b	;volatile
 21870                           
 21871                           ; BSR set to: 15
 21872                           ;../../VLCBlib_PIC/can18_ecan.c: 877:         TXB2SIDL = TXB0SIDL;
 21873   00B006  CF22 FF02          	movff	3874,3842	;volatile
 21874                           
 21875                           ; BSR set to: 15
 21876                           ;../../VLCBlib_PIC/can18_ecan.c: 879:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 21877   00B00A  0EFE               	movlw	254
 21878   00B00C  0100               	movlb	0	; () banked
 21879   00B00E  6FA4               	movwf	writeNVM@index& (0+255),b
 21880   00B010  0E03               	movlw	3
 21881   00B012  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21882   00B014  0E00               	movlw	0
 21883   00B016  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21884   00B018  C1BF  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 21885   00B01C  0E00               	movlw	0
 21886   00B01E  EC91  F05B         	call	_writeNVM
 21887                           
 21888                           ;../../VLCBlib_PIC/can18_ecan.c: 880:         canDiagnostics[0x0E].asUint++;
 21889   00B022  0101               	movlb	1	; () banked
 21890   00B024  4B9A               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 21891   00B026  2B9B               	incf	(_canDiagnostics+29)& (0+255),f,b
 21892                           
 21893                           ; BSR set to: 1
 21894   00B028  0012               	return		;funcret
 21895   00B02A                     __end_of_setNewCanId:
 21896                           	callstack 0
 21897                           
 21898 ;; *************** function _pop *****************
 21899 ;; Defined at:
 21900 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 21901 ;; Parameters:    Size  Location     Type
 21902 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 21903 ;;		 -> txQueue(5), rxQueue(5), 
 21904 ;; Auto vars:     Size  Location     Type
 21905 ;;  ret             2   52[BANK0 ] PTR struct Message
 21906 ;;		 -> txBuffers(72), rxBuffers(288), 
 21907 ;; Return value:  Size  Location     Type
 21908 ;;                  2   45[BANK0 ] PTR struct Message
 21909 ;; Registers used:
 21910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21911 ;; Tracked objects:
 21912 ;;		On entry : 0/0
 21913 ;;		On exit  : 0/0
 21914 ;;		Unchanged: 0/0
 21915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21916 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21917 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21918 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21919 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21920 ;;Total ram usage:        9 bytes
 21921 ;; Hardware stack levels used: 1
 21922 ;; Hardware stack levels required when called: 12
 21923 ;; This function calls:
 21924 ;;		Nothing
 21925 ;; This function is called by:
 21926 ;;		_canReceiveMessage
 21927 ;; This function uses a non-reentrant model
 21928 ;;
 21929                           
 21930                           	psect	text79
 21931   009866                     __ptext79:
 21932                           	callstack 0
 21933   009866                     _pop:
 21934                           	callstack 16
 21935                           
 21936                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 21937                           
 21938                           ; BSR set to: 1
 21939                           ;incstack = 0
 21940   009866  0100               	movlb	0	; () banked
 21941   009868  EE20 F002          	lfsr	2,2
 21942   00986C  518D               	movf	pop@q& (0+255),w,b
 21943   00986E  26D9               	addwf	fsr2l,f,c
 21944   009870  518E               	movf	(pop@q+1)& (0+255),w,b
 21945   009872  22DA               	addwfc	fsr2h,f,c
 21946   009874  EE10 F003          	lfsr	1,3
 21947   009878  518D               	movf	pop@q& (0+255),w,b
 21948   00987A  26E1               	addwf	fsr1l,f,c
 21949   00987C  518E               	movf	(pop@q+1)& (0+255),w,b
 21950   00987E  22E2               	addwfc	fsr1h,f,c
 21951   009880  50DE               	movf	postinc2,w,c
 21952   009882  18E6               	xorwf	postinc1,w,c
 21953   009884  A4D8               	btfss	status,2,c
 21954   009886  D005               	goto	l21598
 21955                           
 21956                           ; BSR set to: 0
 21957                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 21958   009888  0E00               	movlw	0
 21959   00988A  6F8D               	movwf	?_pop& (0+255),b
 21960   00988C  0E00               	movlw	0
 21961   00988E  6F8E               	movwf	(?_pop+1)& (0+255),b
 21962   009890  0012               	return	
 21963   009892                     l21598:
 21964                           
 21965                           ; BSR set to: 0
 21966                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 21967   009892  EE20 F002          	lfsr	2,2
 21968   009896  518D               	movf	pop@q& (0+255),w,b
 21969   009898  26D9               	addwf	fsr2l,f,c
 21970   00989A  518E               	movf	(pop@q+1)& (0+255),w,b
 21971   00989C  22DA               	addwfc	fsr2h,f,c
 21972   00989E  50DF               	movf	indf2,w,c
 21973   0098A0  6F8F               	movwf	??_pop& (0+255),b
 21974   0098A2  518F               	movf	??_pop& (0+255),w,b
 21975   0098A4  0D09               	mullw	9
 21976   0098A6  CFF3 F090          	movff	prodl,??_pop+1
 21977   0098AA  CFF4 F091          	movff	prodh,??_pop+2
 21978   0098AE  C08D  FFD9         	movff	pop@q,fsr2l
 21979   0098B2  C08E  FFDA         	movff	pop@q+1,fsr2h
 21980   0098B6  CFDE F092          	movff	postinc2,??_pop+3
 21981   0098BA  CFDD F093          	movff	postdec2,??_pop+4
 21982   0098BE  5190               	movf	(??_pop+1)& (0+255),w,b
 21983   0098C0  2592               	addwf	(??_pop+3)& (0+255),w,b
 21984   0098C2  6F94               	movwf	pop@ret& (0+255),b
 21985   0098C4  5191               	movf	(??_pop+2)& (0+255),w,b
 21986   0098C6  2193               	addwfc	(??_pop+4)& (0+255),w,b
 21987   0098C8  6F95               	movwf	(pop@ret+1)& (0+255),b
 21988                           
 21989                           ; BSR set to: 0
 21990   0098CA  EE20 F002          	lfsr	2,2
 21991   0098CE  518D               	movf	pop@q& (0+255),w,b
 21992   0098D0  26D9               	addwf	fsr2l,f,c
 21993   0098D2  518E               	movf	(pop@q+1)& (0+255),w,b
 21994   0098D4  22DA               	addwfc	fsr2h,f,c
 21995   0098D6  2ADF               	incf	indf2,f,c
 21996                           
 21997                           ; BSR set to: 0
 21998                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 21999   0098D8  EE20 F004          	lfsr	2,4
 22000   0098DC  518D               	movf	pop@q& (0+255),w,b
 22001   0098DE  26D9               	addwf	fsr2l,f,c
 22002   0098E0  518E               	movf	(pop@q+1)& (0+255),w,b
 22003   0098E2  22DA               	addwfc	fsr2h,f,c
 22004   0098E4  EE10 F002          	lfsr	1,2
 22005   0098E8  518D               	movf	pop@q& (0+255),w,b
 22006   0098EA  26E1               	addwf	fsr1l,f,c
 22007   0098EC  518E               	movf	(pop@q+1)& (0+255),w,b
 22008   0098EE  22E2               	addwfc	fsr1h,f,c
 22009   0098F0  50DE               	movf	postinc2,w,c
 22010   0098F2  5CE6               	subwf	postinc1,w,c
 22011   0098F4  A0D8               	btfss	status,0,c
 22012   0098F6  D007               	goto	l21606
 22013                           
 22014                           ; BSR set to: 0
 22015   0098F8  EE20 F002          	lfsr	2,2
 22016   0098FC  518D               	movf	pop@q& (0+255),w,b
 22017   0098FE  26D9               	addwf	fsr2l,f,c
 22018   009900  518E               	movf	(pop@q+1)& (0+255),w,b
 22019   009902  22DA               	addwfc	fsr2h,f,c
 22020   009904  6ADF               	clrf	indf2,c
 22021   009906                     l21606:
 22022                           
 22023                           ; BSR set to: 0
 22024                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 22025   009906  C094  F08D         	movff	pop@ret,?_pop
 22026   00990A  C095  F08E         	movff	pop@ret+1,?_pop+1
 22027                           
 22028                           ; BSR set to: 0
 22029   00990E  0012               	return		;funcret
 22030   009910                     __end_of_pop:
 22031                           	callstack 0
 22032                           
 22033 ;; *************** function _memcpy *****************
 22034 ;; Defined at:
 22035 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 22036 ;; Parameters:    Size  Location     Type
 22037 ;;  d1              2   45[BANK0 ] PTR void 
 22038 ;;		 -> poll@m(9), 
 22039 ;;  s1              2   47[BANK0 ] PTR const void 
 22040 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22041 ;;  n               2   49[BANK0 ] unsigned int 
 22042 ;; Auto vars:     Size  Location     Type
 22043 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 22044 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22045 ;;  d               2   52[BANK0 ] PTR unsigned char 
 22046 ;;		 -> poll@m(9), 
 22047 ;;  tmp             1   51[BANK0 ] unsigned char 
 22048 ;; Return value:  Size  Location     Type
 22049 ;;                  2   45[BANK0 ] PTR void 
 22050 ;; Registers used:
 22051 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22052 ;; Tracked objects:
 22053 ;;		On entry : 0/0
 22054 ;;		On exit  : 0/0
 22055 ;;		Unchanged: 0/0
 22056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22057 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22058 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22060 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22061 ;;Total ram usage:       11 bytes
 22062 ;; Hardware stack levels used: 1
 22063 ;; Hardware stack levels required when called: 12
 22064 ;; This function calls:
 22065 ;;		Nothing
 22066 ;; This function is called by:
 22067 ;;		_canReceiveMessage
 22068 ;; This function uses a non-reentrant model
 22069 ;;
 22070                           
 22071                           	psect	text80
 22072   00B9BC                     __ptext80:
 22073                           	callstack 0
 22074   00B9BC                     _memcpy:
 22075                           	callstack 16
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;incstack = 0
 22079   00B9BC  C08F  F096         	movff	memcpy@s1,memcpy@s
 22080   00B9C0  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 22081   00B9C4  C08D  F094         	movff	memcpy@d1,memcpy@d
 22082   00B9C8  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 22083   00B9CC  D010               	goto	l21782
 22084   00B9CE                     l21774:
 22085                           
 22086                           ; BSR set to: 0
 22087   00B9CE  C096  FFD9         	movff	memcpy@s,fsr2l
 22088   00B9D2  C097  FFDA         	movff	memcpy@s+1,fsr2h
 22089   00B9D6  50DF               	movf	indf2,w,c
 22090   00B9D8  6F93               	movwf	memcpy@tmp& (0+255),b
 22091                           
 22092                           ; BSR set to: 0
 22093   00B9DA  4B96               	infsnz	memcpy@s& (0+255),f,b
 22094   00B9DC  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 22095                           
 22096                           ; BSR set to: 0
 22097   00B9DE  C094  FFD9         	movff	memcpy@d,fsr2l
 22098   00B9E2  C095  FFDA         	movff	memcpy@d+1,fsr2h
 22099   00B9E6  C093  FFDF         	movff	memcpy@tmp,indf2
 22100                           
 22101                           ; BSR set to: 0
 22102   00B9EA  4B94               	infsnz	memcpy@d& (0+255),f,b
 22103   00B9EC  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 22104   00B9EE                     l21782:
 22105   00B9EE  0100               	movlb	0	; () banked
 22106   00B9F0  0791               	decf	memcpy@n& (0+255),f,b
 22107   00B9F2  A0D8               	btfss	status,0,c
 22108   00B9F4  0792               	decf	(memcpy@n+1)& (0+255),f,b
 22109   00B9F6  2991               	incf	memcpy@n& (0+255),w,b
 22110   00B9F8  E1EA               	bnz	l21774
 22111   00B9FA  2992               	incf	(memcpy@n+1)& (0+255),w,b
 22112   00B9FC  B4D8               	btfsc	status,2,c
 22113   00B9FE  0012               	return	
 22114   00BA00  D7E6               	goto	l21774
 22115   00BA02                     __end_of_memcpy:
 22116                           	callstack 0
 22117                           
 22118 ;; *************** function _handleSelfEnumeration *****************
 22119 ;; Defined at:
 22120 ;;		line 729 in file "../../VLCBlib_PIC/can18_ecan.c"
 22121 ;; Parameters:    Size  Location     Type
 22122 ;;  p               2   55[BANK0 ] PTR unsigned char 
 22123 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22124 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22125 ;;		 -> NULL(0), 
 22126 ;; Auto vars:     Size  Location     Type
 22127 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 22128 ;; Return value:  Size  Location     Type
 22129 ;;                  1    wreg      enum E13010
 22130 ;; Registers used:
 22131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22132 ;; Tracked objects:
 22133 ;;		On entry : 0/0
 22134 ;;		On exit  : 0/0
 22135 ;;		Unchanged: 0/0
 22136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22139 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22140 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22141 ;;Total ram usage:        7 bytes
 22142 ;; Hardware stack levels used: 1
 22143 ;; Hardware stack levels required when called: 13
 22144 ;; This function calls:
 22145 ;;		_tickGet
 22146 ;; This function is called by:
 22147 ;;		_canReceiveMessage
 22148 ;; This function uses a non-reentrant model
 22149 ;;
 22150                           
 22151                           	psect	text81
 22152   0081E0                     __ptext81:
 22153                           	callstack 0
 22154   0081E0                     _handleSelfEnumeration:
 22155                           	callstack 15
 22156                           
 22157                           ;../../VLCBlib_PIC/can18_ecan.c: 730:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 734:     if (p[5] & 0x40 ) {
 22158                           
 22159                           ; BSR set to: 0
 22160                           ;incstack = 0
 22161   0081E0  0100               	movlb	0	; () banked
 22162   0081E2  EE20 F005          	lfsr	2,5
 22163   0081E6  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22164   0081E8  26D9               	addwf	fsr2l,f,c
 22165   0081EA  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22166   0081EC  22DA               	addwfc	fsr2h,f,c
 22167   0081EE  ACDF               	btfss	indf2,6,c
 22168   0081F0  D00E               	goto	l21836
 22169                           
 22170                           ; BSR set to: 0
 22171                           ;../../VLCBlib_PIC/can18_ecan.c: 736:         TXB2CONbits.TXREQ = 1;
 22172   0081F2  010F               	movlb	15	; () banked
 22173   0081F4  8700               	bsf	0,3,b	;volatile
 22174                           
 22175                           ; BSR set to: 15
 22176                           ;../../VLCBlib_PIC/can18_ecan.c: 737:         enumerationStartTime.val = tickGet();
 22177   0081F6  ECED  F059         	call	_tickGet	;wreg free
 22178   0081FA  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 22179   0081FE  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 22180   008202  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 22181   008206  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 22182                           
 22183                           ;../../VLCBlib_PIC/can18_ecan.c: 738:         return NOT_RECEIVED;
 22184   00820A  0E00               	movlw	0
 22185   00820C  0012               	return	
 22186   00820E                     l21836:
 22187                           
 22188                           ; BSR set to: 0
 22189                           ;../../VLCBlib_PIC/can18_ecan.c: 740:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 22190   00820E  EE20 F002          	lfsr	2,2
 22191   008212  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22192   008214  26D9               	addwf	fsr2l,f,c
 22193   008216  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22194   008218  22DA               	addwfc	fsr2h,f,c
 22195   00821A  50DF               	movf	indf2,w,c
 22196   00821C  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22197   00821E  0E05               	movlw	5
 22198   008220  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22199   008222                     u23055:
 22200   008222  90D8               	bcf	status,0,c
 22201   008224  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 22202   008226  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 22203   008228  D7FC               	goto	u23055
 22204   00822A  EE20 F001          	lfsr	2,1
 22205   00822E  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22206   008230  26D9               	addwf	fsr2l,f,c
 22207   008232  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22208   008234  22DA               	addwfc	fsr2h,f,c
 22209   008236  50DF               	movf	indf2,w,c
 22210   008238  0D08               	mullw	8
 22211   00823A  50F3               	movf	243,w,c
 22212   00823C  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 22213   00823E  0B7F               	andlw	127
 22214   008240  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 22215                           
 22216                           ; BSR set to: 0
 22217                           ;../../VLCBlib_PIC/can18_ecan.c: 742:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 22218   008242  0E02               	movlw	2
 22219   008244  19B6               	xorwf	_enumerationState& (0+255),w,b
 22220   008246  B4D8               	btfsc	status,2,c
 22221   008248  D00C               	goto	u23070
 22222                           
 22223                           ; BSR set to: 0
 22224   00824A  EE20 F005          	lfsr	2,5
 22225   00824E  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22226   008250  26D9               	addwf	fsr2l,f,c
 22227   008252  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22228   008254  22DA               	addwfc	fsr2h,f,c
 22229   008256  50DF               	movf	indf2,w,c
 22230   008258  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22231   00825A  0E0F               	movlw	15
 22232   00825C  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22233   00825E  A4D8               	btfss	status,2,c
 22234   008260  D01B               	goto	l21844
 22235   008262                     u23070:
 22236                           
 22237                           ; BSR set to: 0
 22238                           ;../../VLCBlib_PIC/can18_ecan.c: 743:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 22239   008262  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 22240   008266  0E07               	movlw	7
 22241   008268  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22242   00826A  0E01               	movlw	1
 22243   00826C  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 22244   00826E  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 22245   008270  D002               	goto	u23084
 22246   008272                     u23085:
 22247   008272  90D8               	bcf	status,0,c
 22248   008274  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 22249   008276                     u23084:
 22250   008276  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 22251   008278  D7FC               	goto	u23085
 22252   00827A  0100               	movlb	0	; () banked
 22253   00827C  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22254   00827E  46E8               	rlncf	wreg,f,c
 22255   008280  0B1F               	andlw	31
 22256   008282  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 22257   008284  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 22258   008286  0E54               	movlw	low _enumerationResults
 22259   008288  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 22260   00828A  6ED9               	movwf	fsr2l,c
 22261   00828C  0E02               	movlw	high _enumerationResults
 22262   00828E  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 22263   008290  6EDA               	movwf	fsr2h,c
 22264   008292  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 22265   008294  12DF               	iorwf	indf2,f,c
 22266                           
 22267                           ;../../VLCBlib_PIC/can18_ecan.c: 744:     } else {
 22268   008296  D016               	goto	l21854
 22269   008298                     l21844:
 22270                           
 22271                           ; BSR set to: 0
 22272                           ;../../VLCBlib_PIC/can18_ecan.c: 745:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 22273   008298  51B6               	movf	_enumerationState& (0+255),w,b
 22274   00829A  A4D8               	btfss	status,2,c
 22275   00829C  D013               	goto	l21854
 22276                           
 22277                           ; BSR set to: 0
 22278   00829E  51B8               	movf	_canId& (0+255),w,b
 22279   0082A0  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 22280   0082A2  A4D8               	btfss	status,2,c
 22281   0082A4  D00F               	goto	l21854
 22282                           
 22283                           ; BSR set to: 0
 22284                           ;../../VLCBlib_PIC/can18_ecan.c: 748:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 22285   0082A6  0E01               	movlw	1
 22286   0082A8  6FB6               	movwf	_enumerationState& (0+255),b
 22287                           
 22288                           ; BSR set to: 0
 22289                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canDiagnostics[0x0D].asUint++;
 22290   0082AA  0101               	movlb	1	; () banked
 22291   0082AC  4B98               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 22292   0082AE  2B99               	incf	(_canDiagnostics+27)& (0+255),f,b
 22293                           
 22294                           ; BSR set to: 1
 22295                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             enumerationStartTime.val = tickGet();
 22296   0082B0  ECED  F059         	call	_tickGet	;wreg free
 22297   0082B4  C08D  F011         	movff	?_tickGet,_enumerationStartTime
 22298   0082B8  C08E  F012         	movff	?_tickGet+1,_enumerationStartTime+1
 22299   0082BC  C08F  F013         	movff	?_tickGet+2,_enumerationStartTime+2
 22300   0082C0  C090  F014         	movff	?_tickGet+3,_enumerationStartTime+3
 22301   0082C4                     l21854:
 22302                           
 22303                           ;../../VLCBlib_PIC/can18_ecan.c: 754:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 22304   0082C4  0100               	movlb	0	; () banked
 22305   0082C6  EE20 F005          	lfsr	2,5
 22306   0082CA  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 22307   0082CC  26D9               	addwf	fsr2l,f,c
 22308   0082CE  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 22309   0082D0  22DA               	addwfc	fsr2h,f,c
 22310   0082D2  50DF               	movf	indf2,w,c
 22311   0082D4  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 22312   0082D6  0E0F               	movlw	15
 22313   0082D8  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 22314   0082DA  B4D8               	btfsc	status,2,c
 22315   0082DC  D002               	goto	u23110
 22316   0082DE  0E01               	movlw	1
 22317   0082E0  0012               	return	
 22318   0082E2                     u23110:
 22319   0082E2  0E00               	movlw	0
 22320   0082E4  0012               	return		;funcret
 22321   0082E6                     __end_of_handleSelfEnumeration:
 22322                           	callstack 0
 22323                           
 22324 ;; *************** function _getBufferPointer *****************
 22325 ;; Defined at:
 22326 ;;		line 588 in file "../../VLCBlib_PIC/can18_ecan.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;  b               1    wreg     unsigned char 
 22329 ;; Auto vars:     Size  Location     Type
 22330 ;;  b               1   47[BANK0 ] unsigned char 
 22331 ;; Return value:  Size  Location     Type
 22332 ;;                  2   45[BANK0 ] PTR unsigned char 
 22333 ;; Registers used:
 22334 ;;		wreg, status,2, status,0
 22335 ;; Tracked objects:
 22336 ;;		On entry : 0/0
 22337 ;;		On exit  : 0/0
 22338 ;;		Unchanged: 0/0
 22339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22340 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22344 ;;Total ram usage:        3 bytes
 22345 ;; Hardware stack levels used: 1
 22346 ;; Hardware stack levels required when called: 12
 22347 ;; This function calls:
 22348 ;;		Nothing
 22349 ;; This function is called by:
 22350 ;;		_canReceiveMessage
 22351 ;; This function uses a non-reentrant model
 22352 ;;
 22353                           
 22354                           	psect	text82
 22355   00A088                     __ptext82:
 22356                           	callstack 0
 22357   00A088                     _getBufferPointer:
 22358                           	callstack 16
 22359                           
 22360                           ;incstack = 0
 22361                           ;getBufferPointer@b stored from wreg
 22362   00A088  0100               	movlb	0	; () banked
 22363   00A08A  6F8F               	movwf	getBufferPointer@b& (0+255),b
 22364                           
 22365                           ;../../VLCBlib_PIC/can18_ecan.c: 589:     switch (b) {
 22366   00A08C  D02D               	goto	l21824
 22367   00A08E                     l21786:
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;../../VLCBlib_PIC/can18_ecan.c: 591:             return (uint8_t*) & RXB0CON;
 22371   00A08E  0E60               	movlw	96
 22372   00A090  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22373   00A092  0E0F               	movlw	15
 22374   00A094  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22375   00A096  0012               	return	
 22376   00A098                     l21790:
 22377                           
 22378                           ; BSR set to: 0
 22379                           ;../../VLCBlib_PIC/can18_ecan.c: 593:             return (uint8_t*) & RXB1CON;
 22380   00A098  0E30               	movlw	48
 22381   00A09A  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22382   00A09C  0E0F               	movlw	15
 22383   00A09E  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22384   00A0A0  0012               	return	
 22385   00A0A2                     l21794:
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;../../VLCBlib_PIC/can18_ecan.c: 595:             return (uint8_t*) & B0CON;
 22389   00A0A2  0E80               	movlw	128
 22390   00A0A4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22391   00A0A6  0E0E               	movlw	14
 22392   00A0A8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22393   00A0AA  0012               	return	
 22394   00A0AC                     l21798:
 22395                           
 22396                           ; BSR set to: 0
 22397                           ;../../VLCBlib_PIC/can18_ecan.c: 597:             return (uint8_t*) & B1CON;
 22398   00A0AC  0E90               	movlw	144
 22399   00A0AE  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22400   00A0B0  0E0E               	movlw	14
 22401   00A0B2  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22402   00A0B4  0012               	return	
 22403   00A0B6                     l21802:
 22404                           
 22405                           ; BSR set to: 0
 22406                           ;../../VLCBlib_PIC/can18_ecan.c: 599:             return (uint8_t*) & B2CON;
 22407   00A0B6  0EA0               	movlw	160
 22408   00A0B8  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22409   00A0BA  0E0E               	movlw	14
 22410   00A0BC  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22411   00A0BE  0012               	return	
 22412   00A0C0                     l21806:
 22413                           
 22414                           ; BSR set to: 0
 22415                           ;../../VLCBlib_PIC/can18_ecan.c: 601:             return (uint8_t*) & B3CON;
 22416   00A0C0  0EB0               	movlw	176
 22417   00A0C2  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22418   00A0C4  0E0E               	movlw	14
 22419   00A0C6  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22420   00A0C8  0012               	return	
 22421   00A0CA                     l21810:
 22422                           
 22423                           ; BSR set to: 0
 22424                           ;../../VLCBlib_PIC/can18_ecan.c: 603:             return (uint8_t*) & B4CON;
 22425   00A0CA  0EC0               	movlw	192
 22426   00A0CC  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22427   00A0CE  0E0E               	movlw	14
 22428   00A0D0  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22429   00A0D2  0012               	return	
 22430   00A0D4                     l21814:
 22431                           
 22432                           ; BSR set to: 0
 22433                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & B5CON;
 22434   00A0D4  0ED0               	movlw	208
 22435   00A0D6  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22436   00A0D8  0E0E               	movlw	14
 22437   00A0DA  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22438   00A0DC  0012               	return	
 22439   00A0DE                     l21818:
 22440                           
 22441                           ; BSR set to: 0
 22442                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return ((void*)0);
 22443   00A0DE  0E00               	movlw	0
 22444   00A0E0  6F8D               	movwf	?_getBufferPointer& (0+255),b
 22445   00A0E2  0E00               	movlw	0
 22446   00A0E4  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 22447   00A0E6  0012               	return	
 22448   00A0E8                     l21824:
 22449   00A0E8  0100               	movlb	0	; () banked
 22450   00A0EA  518F               	movf	getBufferPointer@b& (0+255),w,b
 22451                           
 22452                           ; Switch size 1, requested type "simple"
 22453                           ; Number of cases is 8, Range of values is 0 to 7
 22454                           ; switch strategies available:
 22455                           ; Name         Instructions Cycles
 22456                           ; simple_byte           25    13 (average)
 22457                           ;	Chosen strategy is simple_byte
 22458   00A0EC  0A00               	xorlw	0	; case 0
 22459   00A0EE  B4D8               	btfsc	status,2,c
 22460   00A0F0  D7CE               	goto	l21786
 22461   00A0F2  0A01               	xorlw	1	; case 1
 22462   00A0F4  B4D8               	btfsc	status,2,c
 22463   00A0F6  D7D0               	goto	l21790
 22464   00A0F8  0A03               	xorlw	3	; case 2
 22465   00A0FA  B4D8               	btfsc	status,2,c
 22466   00A0FC  D7D2               	goto	l21794
 22467   00A0FE  0A01               	xorlw	1	; case 3
 22468   00A100  B4D8               	btfsc	status,2,c
 22469   00A102  D7D4               	goto	l21798
 22470   00A104  0A07               	xorlw	7	; case 4
 22471   00A106  B4D8               	btfsc	status,2,c
 22472   00A108  D7D6               	goto	l21802
 22473   00A10A  0A01               	xorlw	1	; case 5
 22474   00A10C  B4D8               	btfsc	status,2,c
 22475   00A10E  D7D8               	goto	l21806
 22476   00A110  0A03               	xorlw	3	; case 6
 22477   00A112  B4D8               	btfsc	status,2,c
 22478   00A114  D7DA               	goto	l21810
 22479   00A116  0A01               	xorlw	1	; case 7
 22480   00A118  B4D8               	btfsc	status,2,c
 22481   00A11A  D7DC               	goto	l21814
 22482   00A11C  D7E0               	goto	l21818
 22483   00A11E                     __end_of_getBufferPointer:
 22484                           	callstack 0
 22485                           
 22486 ;; *************** function _sendMessage7 *****************
 22487 ;; Defined at:
 22488 ;;		line 1206 in file "../../VLCBlib_PIC/vlcb.c"
 22489 ;; Parameters:    Size  Location     Type
 22490 ;;  opc             1    wreg     enum E12342
 22491 ;;  data1           1    8[BANK1 ] unsigned char 
 22492 ;;  data2           1    9[BANK1 ] unsigned char 
 22493 ;;  data3           1   10[BANK1 ] unsigned char 
 22494 ;;  data4           1   11[BANK1 ] unsigned char 
 22495 ;;  data5           1   12[BANK1 ] unsigned char 
 22496 ;;  data6           1   13[BANK1 ] unsigned char 
 22497 ;;  data7           1   14[BANK1 ] unsigned char 
 22498 ;; Auto vars:     Size  Location     Type
 22499 ;;  opc             1   70[BANK0 ] enum E12342
 22500 ;; Return value:  Size  Location     Type
 22501 ;;                  1    wreg      void 
 22502 ;; Registers used:
 22503 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22504 ;; Tracked objects:
 22505 ;;		On entry : 0/0
 22506 ;;		On exit  : 0/0
 22507 ;;		Unchanged: 0/0
 22508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22509 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22512 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22513 ;;Total ram usage:        8 bytes
 22514 ;; Hardware stack levels used: 1
 22515 ;; Hardware stack levels required when called: 15
 22516 ;; This function calls:
 22517 ;;		_sendMessage
 22518 ;; This function is called by:
 22519 ;;		_ackEventProcessMessage
 22520 ;;		_nerdCallback
 22521 ;;		_mnsProcessMessage
 22522 ;; This function uses a non-reentrant model
 22523 ;;
 22524                           
 22525                           	psect	text83
 22526   00BE52                     __ptext83:
 22527                           	callstack 0
 22528   00BE52                     _sendMessage7:
 22529                           	callstack 12
 22530                           
 22531                           ; BSR set to: 0
 22532                           ;incstack = 0
 22533                           ;sendMessage7@opc stored from wreg
 22534   00BE52  0100               	movlb	0	; () banked
 22535   00BE54  6FA6               	movwf	sendMessage7@opc& (0+255),b
 22536                           
 22537                           ;../../VLCBlib_PIC/vlcb.c: 1207:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 22538   00BE56  0E08               	movlw	8
 22539   00BE58  0101               	movlb	1	; () banked
 22540   00BE5A  6FBE               	movwf	sendMessage@len& (0+255),b
 22541   00BE5C  C1C6  F1BF         	movff	sendMessage7@data1,sendMessage@data1
 22542   00BE60  C1C7  F1C0         	movff	sendMessage7@data2,sendMessage@data2
 22543   00BE64  C1C8  F1C1         	movff	sendMessage7@data3,sendMessage@data3
 22544   00BE68  C1C9  F1C2         	movff	sendMessage7@data4,sendMessage@data4
 22545   00BE6C  C1CA  F1C3         	movff	sendMessage7@data5,sendMessage@data5
 22546   00BE70  C1CB  F1C4         	movff	sendMessage7@data6,sendMessage@data6
 22547   00BE74  C1CC  F1C5         	movff	sendMessage7@data7,sendMessage@data7
 22548   00BE78  0100               	movlb	0	; () banked
 22549   00BE7A  51A6               	movf	sendMessage7@opc& (0+255),w,b
 22550   00BE7C  EC55  F054         	call	_sendMessage
 22551   00BE80  0012               	return		;funcret
 22552   00BE82                     __end_of_sendMessage7:
 22553                           	callstack 0
 22554                           
 22555 ;; *************** function _findService *****************
 22556 ;; Defined at:
 22557 ;;		line 807 in file "../../VLCBlib_PIC/vlcb.c"
 22558 ;; Parameters:    Size  Location     Type
 22559 ;;  id              1    wreg     unsigned char 
 22560 ;; Auto vars:     Size  Location     Type
 22561 ;;  id              1   49[BANK0 ] unsigned char 
 22562 ;;  i               1   50[BANK0 ] unsigned char 
 22563 ;; Return value:  Size  Location     Type
 22564 ;;                  2   45[BANK0 ] PTR const struct Service
 22565 ;; Registers used:
 22566 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 22567 ;; Tracked objects:
 22568 ;;		On entry : 0/0
 22569 ;;		On exit  : 0/0
 22570 ;;		Unchanged: 0/0
 22571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22572 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22575 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22576 ;;Total ram usage:        6 bytes
 22577 ;; Hardware stack levels used: 1
 22578 ;; Hardware stack levels required when called: 12
 22579 ;; This function calls:
 22580 ;;		Nothing
 22581 ;; This function is called by:
 22582 ;;		_ackEventProcessMessage
 22583 ;; This function uses a non-reentrant model
 22584 ;;
 22585                           
 22586                           	psect	text84
 22587   009F5A                     __ptext84:
 22588                           	callstack 0
 22589   009F5A                     _findService:
 22590                           	callstack 16
 22591                           
 22592                           ;incstack = 0
 22593                           ;findService@id stored from wreg
 22594   009F5A  0100               	movlb	0	; () banked
 22595   009F5C  6F91               	movwf	findService@id& (0+255),b
 22596                           
 22597                           ;../../VLCBlib_PIC/vlcb.c: 808:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 809:     for (i
      +                          =0; i<9; i++) {
 22598   009F5E  0E00               	movlw	0
 22599   009F60  0100               	movlb	0	; () banked
 22600   009F62  6F92               	movwf	findService@i& (0+255),b
 22601   009F64                     l21110:
 22602                           
 22603                           ; BSR set to: 0
 22604                           ;../../VLCBlib_PIC/vlcb.c: 810:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 22605   009F64  5192               	movf	findService@i& (0+255),w,b
 22606   009F66  0D02               	mullw	2
 22607   009F68  0E75               	movlw	low _services
 22608   009F6A  24F3               	addwf	243,w,c
 22609   009F6C  6EF6               	movwf	tblptrl,c
 22610   009F6E  0EEE               	movlw	high _services
 22611   009F70  20F4               	addwfc	244,w,c
 22612   009F72  6EF7               	movwf	tblptrh,c
 22613   009F74                     	if	1	;There are 3 active tblptr bytes
 22614   009F74  6AF8               	clrf	tblptru,c
 22615   009F76  0E00               	movlw	low (__mediumconst shr (0+16))
 22616   009F78  22F8               	addwfc	tblptru,f,c
 22617   009F7A                     	endif
 22618   009F7A  0009               	tblrd		*+
 22619   009F7C  50F5               	movf	tablat,w,c
 22620   009F7E  0009               	tblrd		*+
 22621   009F80  10F5               	iorwf	tablat,w,c
 22622   009F82  B4D8               	btfsc	status,2,c
 22623   009F84  D02D               	goto	l21118
 22624                           
 22625                           ; BSR set to: 0
 22626   009F86  5192               	movf	findService@i& (0+255),w,b
 22627   009F88  0D02               	mullw	2
 22628   009F8A  0E75               	movlw	low _services
 22629   009F8C  24F3               	addwf	243,w,c
 22630   009F8E  6EF6               	movwf	tblptrl,c
 22631   009F90  0EEE               	movlw	high _services
 22632   009F92  20F4               	addwfc	244,w,c
 22633   009F94  6EF7               	movwf	tblptrh,c
 22634   009F96                     	if	1	;There are 3 active tblptr bytes
 22635   009F96  6AF8               	clrf	tblptru,c
 22636   009F98  0E00               	movlw	low (__mediumconst shr (0+16))
 22637   009F9A  22F8               	addwfc	tblptru,f,c
 22638   009F9C                     	endif
 22639   009F9C  0009               	tblrd		*+
 22640   009F9E  CFF5 F08F          	movff	tablat,??_findService
 22641   009FA2  0009               	tblrd		*+
 22642   009FA4  CFF5 F090          	movff	tablat,??_findService+1
 22643   009FA8  C08F  FFF6         	movff	??_findService,tblptrl
 22644   009FAC  C090  FFF7         	movff	??_findService+1,tblptrh
 22645   009FB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 22646   009FB0  6AF8               	clrf	tblptru,c
 22647   009FB2                     	endif
 22648   009FB2                     	if	0	;tblptru may be non-zero
 22649   009FB2                     	endif
 22650   009FB2  0008               	tblrd		*
 22651   009FB4  50F5               	movf	tablat,w,c
 22652   009FB6  1991               	xorwf	findService@id& (0+255),w,b
 22653   009FB8  A4D8               	btfss	status,2,c
 22654   009FBA  D012               	goto	l21118
 22655                           
 22656                           ; BSR set to: 0
 22657                           ;../../VLCBlib_PIC/vlcb.c: 811:             return services[i];
 22658   009FBC  5192               	movf	findService@i& (0+255),w,b
 22659   009FBE  0D02               	mullw	2
 22660   009FC0  0E75               	movlw	low _services
 22661   009FC2  24F3               	addwf	243,w,c
 22662   009FC4  6EF6               	movwf	tblptrl,c
 22663   009FC6  0EEE               	movlw	high _services
 22664   009FC8  20F4               	addwfc	244,w,c
 22665   009FCA  6EF7               	movwf	tblptrh,c
 22666   009FCC                     	if	1	;There are 3 active tblptr bytes
 22667   009FCC  6AF8               	clrf	tblptru,c
 22668   009FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 22669   009FD0  22F8               	addwfc	tblptru,f,c
 22670   009FD2                     	endif
 22671   009FD2  0009               	tblrd		*+
 22672   009FD4  CFF5 F08D          	movff	tablat,?_findService
 22673   009FD8  000A               	tblrd		*-
 22674   009FDA  CFF5 F08E          	movff	tablat,?_findService+1
 22675   009FDE  0012               	return	
 22676   009FE0                     l21118:
 22677                           
 22678                           ; BSR set to: 0
 22679                           ;../../VLCBlib_PIC/vlcb.c: 813:     }
 22680   009FE0  2B92               	incf	findService@i& (0+255),f,b
 22681                           
 22682                           ; BSR set to: 0
 22683   009FE2  0E08               	movlw	8
 22684   009FE4  6592               	cpfsgt	findService@i& (0+255),b
 22685   009FE6  D7BE               	goto	l21110
 22686                           
 22687                           ; BSR set to: 0
 22688                           ;../../VLCBlib_PIC/vlcb.c: 814:     return ((void*)0);
 22689   009FE8  0E00               	movlw	0
 22690   009FEA  6F8D               	movwf	?_findService& (0+255),b
 22691   009FEC  0E00               	movlw	0
 22692   009FEE  6F8E               	movwf	(?_findService+1)& (0+255),b
 22693                           
 22694                           ; BSR set to: 0
 22695   009FF0  0012               	return		;funcret
 22696   009FF2                     __end_of_findService:
 22697                           	callstack 0
 22698                           
 22699 ;; *************** function _ackEventCheckLen *****************
 22700 ;; Defined at:
 22701 ;;		line 167 in file "../../VLCBlib_PIC/event_acknowledge.c"
 22702 ;; Parameters:    Size  Location     Type
 22703 ;;  m               2   17[BANK1 ] PTR struct Message
 22704 ;;		 -> poll@m(9), 
 22705 ;;  needed          1   19[BANK1 ] unsigned char 
 22706 ;; Auto vars:     Size  Location     Type
 22707 ;;		None
 22708 ;; Return value:  Size  Location     Type
 22709 ;;                  1    wreg      enum E12732
 22710 ;; Registers used:
 22711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22712 ;; Tracked objects:
 22713 ;;		On entry : 0/0
 22714 ;;		On exit  : 0/0
 22715 ;;		Unchanged: 0/0
 22716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22717 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22720 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22721 ;;Total ram usage:        3 bytes
 22722 ;; Hardware stack levels used: 1
 22723 ;; Hardware stack levels required when called: 17
 22724 ;; This function calls:
 22725 ;;		_checkLen
 22726 ;; This function is called by:
 22727 ;;		_ackEventProcessMessage
 22728 ;; This function uses a non-reentrant model
 22729 ;;
 22730                           
 22731                           	psect	text85
 22732   00C302                     __ptext85:
 22733                           	callstack 0
 22734   00C302                     _ackEventCheckLen:
 22735                           	callstack 11
 22736                           
 22737                           ;../../VLCBlib_PIC/event_acknowledge.c: 168:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 22738                           
 22739                           ; BSR set to: 0
 22740                           ;incstack = 0
 22741   00C302  C1CF  F1CB         	movff	ackEventCheckLen@m,checkLen@m
 22742   00C306  C1D0  F1CC         	movff	ackEventCheckLen@m+1,checkLen@m+1
 22743   00C30A  C1D1  F1CD         	movff	ackEventCheckLen@needed,checkLen@needed
 22744   00C30E  0E09               	movlw	9
 22745   00C310  0101               	movlb	1	; () banked
 22746   00C312  6FCE               	movwf	checkLen@service& (0+255),b
 22747   00C314  ECD7  F053         	call	_checkLen	;wreg free
 22748   00C318  0012               	return		;funcret
 22749   00C31A                     __end_of_ackEventCheckLen:
 22750                           	callstack 0
 22751                           
 22752 ;; *************** function _checkLen *****************
 22753 ;; Defined at:
 22754 ;;		line 1094 in file "../../VLCBlib_PIC/vlcb.c"
 22755 ;; Parameters:    Size  Location     Type
 22756 ;;  m               2   13[BANK1 ] PTR struct Message
 22757 ;;		 -> poll@m(9), 
 22758 ;;  needed          1   15[BANK1 ] unsigned char 
 22759 ;;  service         1   16[BANK1 ] unsigned char 
 22760 ;; Auto vars:     Size  Location     Type
 22761 ;;		None
 22762 ;; Return value:  Size  Location     Type
 22763 ;;                  1    wreg      enum E12732
 22764 ;; Registers used:
 22765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22766 ;; Tracked objects:
 22767 ;;		On entry : 0/0
 22768 ;;		On exit  : 0/0
 22769 ;;		Unchanged: 0/0
 22770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22771 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22773 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22774 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22775 ;;Total ram usage:        5 bytes
 22776 ;; Hardware stack levels used: 1
 22777 ;; Hardware stack levels required when called: 16
 22778 ;; This function calls:
 22779 ;;		_sendMessage5
 22780 ;; This function is called by:
 22781 ;;		_ackEventCheckLen
 22782 ;;		_teachCheckLen
 22783 ;; This function uses a non-reentrant model
 22784 ;;
 22785                           
 22786                           	psect	text86
 22787   00A7AE                     __ptext86:
 22788                           	callstack 0
 22789   00A7AE                     _checkLen:
 22790                           	callstack 11
 22791                           
 22792                           ;../../VLCBlib_PIC/vlcb.c: 1095:     if (m->len < needed) {
 22793                           
 22794                           ;incstack = 0
 22795   00A7AE  C1CB  FFD9         	movff	checkLen@m,fsr2l
 22796   00A7B2  C1CC  FFDA         	movff	checkLen@m+1,fsr2h
 22797   00A7B6  0101               	movlb	1	; () banked
 22798   00A7B8  51CD               	movf	checkLen@needed& (0+255),w,b
 22799   00A7BA  5CDE               	subwf	postinc2,w,c
 22800   00A7BC  B0D8               	btfsc	status,0,c
 22801   00A7BE  D034               	goto	l19978
 22802                           
 22803                           ; BSR set to: 1
 22804                           ;../../VLCBlib_PIC/vlcb.c: 1096:         if (m->len > 2) {
 22805   00A7C0  C1CB  FFD9         	movff	checkLen@m,fsr2l
 22806   00A7C4  C1CC  FFDA         	movff	checkLen@m+1,fsr2h
 22807   00A7C8  0E02               	movlw	2
 22808   00A7CA  64DF               	cpfsgt	indf2,c
 22809   00A7CC  D02B               	goto	l19974
 22810                           
 22811                           ; BSR set to: 1
 22812                           ;../../VLCBlib_PIC/vlcb.c: 1097:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 22813   00A7CE  EE20 F002          	lfsr	2,2
 22814   00A7D2  51CB               	movf	checkLen@m& (0+255),w,b
 22815   00A7D4  26D9               	addwf	fsr2l,f,c
 22816   00A7D6  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 22817   00A7D8  22DA               	addwfc	fsr2h,f,c
 22818   00A7DA  50DE               	movf	postinc2,w,c
 22819   00A7DC  0100               	movlb	0	; () banked
 22820   00A7DE  19B5               	xorwf	(_nn+1)& (0+255),w,b
 22821   00A7E0  A4D8               	btfss	status,2,c
 22822   00A7E2  D020               	goto	l19974
 22823                           
 22824                           ; BSR set to: 0
 22825   00A7E4  0101               	movlb	1	; () banked
 22826   00A7E6  EE20 F003          	lfsr	2,3
 22827   00A7EA  51CB               	movf	checkLen@m& (0+255),w,b
 22828   00A7EC  26D9               	addwf	fsr2l,f,c
 22829   00A7EE  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 22830   00A7F0  22DA               	addwfc	fsr2h,f,c
 22831   00A7F2  0100               	movlb	0	; () banked
 22832   00A7F4  51B4               	movf	_nn& (0+255),w,b
 22833   00A7F6  18DE               	xorwf	postinc2,w,c
 22834   00A7F8  A4D8               	btfss	status,2,c
 22835   00A7FA  D014               	goto	l19974
 22836                           
 22837                           ; BSR set to: 0
 22838                           ;../../VLCBlib_PIC/vlcb.c: 1098:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 22839   00A7FC  C0B5  F1C6         	movff	_nn+1,sendMessage5@data1
 22840   00A800  C0B4  F1C7         	movff	_nn,sendMessage5@data2
 22841   00A804  0101               	movlb	1	; () banked
 22842   00A806  EE20 F001          	lfsr	2,1
 22843   00A80A  51CB               	movf	checkLen@m& (0+255),w,b
 22844   00A80C  26D9               	addwf	fsr2l,f,c
 22845   00A80E  51CC               	movf	(checkLen@m+1)& (0+255),w,b
 22846   00A810  22DA               	addwfc	fsr2h,f,c
 22847   00A812  50DF               	movf	indf2,w,c
 22848   00A814  6FC8               	movwf	sendMessage5@data3& (0+255),b
 22849   00A816  C1CE  F1C9         	movff	checkLen@service,sendMessage5@data4
 22850   00A81A  0E01               	movlw	1
 22851   00A81C  6FCA               	movwf	sendMessage5@data5& (0+255),b
 22852   00A81E  0EAF               	movlw	175
 22853   00A820  EC41  F05F         	call	_sendMessage5
 22854   00A824                     l19974:
 22855                           
 22856                           ;../../VLCBlib_PIC/vlcb.c: 1101:         return PROCESSED;
 22857   00A824  0E01               	movlw	1
 22858   00A826  0012               	return	
 22859   00A828                     l19978:
 22860                           
 22861                           ; BSR set to: 1
 22862                           ;../../VLCBlib_PIC/vlcb.c: 1103:     return NOT_PROCESSED;
 22863   00A828  0E00               	movlw	0
 22864   00A82A  0012               	return		;funcret
 22865   00A82C                     __end_of_checkLen:
 22866                           	callstack 0
 22867                           
 22868 ;; *************** function _sendMessage5 *****************
 22869 ;; Defined at:
 22870 ;;		line 1177 in file "../../VLCBlib_PIC/vlcb.c"
 22871 ;; Parameters:    Size  Location     Type
 22872 ;;  opc             1    wreg     enum E12342
 22873 ;;  data1           1    8[BANK1 ] unsigned char 
 22874 ;;  data2           1    9[BANK1 ] unsigned char 
 22875 ;;  data3           1   10[BANK1 ] unsigned char 
 22876 ;;  data4           1   11[BANK1 ] unsigned char 
 22877 ;;  data5           1   12[BANK1 ] unsigned char 
 22878 ;; Auto vars:     Size  Location     Type
 22879 ;;  opc             1   70[BANK0 ] enum E12342
 22880 ;; Return value:  Size  Location     Type
 22881 ;;                  1    wreg      void 
 22882 ;; Registers used:
 22883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 22884 ;; Tracked objects:
 22885 ;;		On entry : 0/0
 22886 ;;		On exit  : 0/0
 22887 ;;		Unchanged: 0/0
 22888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22889 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22892 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22893 ;;Total ram usage:        6 bytes
 22894 ;; Hardware stack levels used: 1
 22895 ;; Hardware stack levels required when called: 15
 22896 ;; This function calls:
 22897 ;;		_sendMessage
 22898 ;; This function is called by:
 22899 ;;		_teachProcessMessage
 22900 ;;		_teachCheckLen
 22901 ;;		_doNenrd
 22902 ;;		_doNnclr
 22903 ;;		_doEvlrn
 22904 ;;		_doReval
 22905 ;;		_doEvuln
 22906 ;;		_doReqev
 22907 ;;		_mnsProcessMessage
 22908 ;;		_mnsPoll
 22909 ;;		_mnsTRserviceDiscoveryCallback
 22910 ;;		_nvProcessMessage
 22911 ;;		_checkLen
 22912 ;;		_canProcessMessage
 22913 ;; This function uses a non-reentrant model
 22914 ;;
 22915                           
 22916                           	psect	text87
 22917   00BE82                     __ptext87:
 22918                           	callstack 0
 22919   00BE82                     _sendMessage5:
 22920                           	callstack 12
 22921                           
 22922                           ;incstack = 0
 22923                           ;sendMessage5@opc stored from wreg
 22924   00BE82  0100               	movlb	0	; () banked
 22925   00BE84  6FA6               	movwf	sendMessage5@opc& (0+255),b
 22926                           
 22927                           ;../../VLCBlib_PIC/vlcb.c: 1178:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 22928   00BE86  0E06               	movlw	6
 22929   00BE88  0101               	movlb	1	; () banked
 22930   00BE8A  6FBE               	movwf	sendMessage@len& (0+255),b
 22931   00BE8C  C1C6  F1BF         	movff	sendMessage5@data1,sendMessage@data1
 22932   00BE90  C1C7  F1C0         	movff	sendMessage5@data2,sendMessage@data2
 22933   00BE94  C1C8  F1C1         	movff	sendMessage5@data3,sendMessage@data3
 22934   00BE98  C1C9  F1C2         	movff	sendMessage5@data4,sendMessage@data4
 22935   00BE9C  C1CA  F1C3         	movff	sendMessage5@data5,sendMessage@data5
 22936   00BEA0  0E00               	movlw	0
 22937   00BEA2  6FC4               	movwf	sendMessage@data6& (0+255),b
 22938   00BEA4  0E00               	movlw	0
 22939   00BEA6  6FC5               	movwf	sendMessage@data7& (0+255),b
 22940   00BEA8  0100               	movlb	0	; () banked
 22941   00BEAA  51A6               	movf	sendMessage5@opc& (0+255),w,b
 22942   00BEAC  EC55  F054         	call	_sendMessage
 22943   00BEB0  0012               	return		;funcret
 22944   00BEB2                     __end_of_sendMessage5:
 22945                           	callstack 0
 22946                           
 22947 ;; *************** function _APP_preProcessMessage *****************
 22948 ;; Defined at:
 22949 ;;		line 388 in file "../main.c"
 22950 ;; Parameters:    Size  Location     Type
 22951 ;;  m               2   45[BANK0 ] PTR struct Message
 22952 ;;		 -> poll@m(9), 
 22953 ;; Auto vars:     Size  Location     Type
 22954 ;;		None
 22955 ;; Return value:  Size  Location     Type
 22956 ;;                  1    wreg      enum E12732
 22957 ;; Registers used:
 22958 ;;		wreg
 22959 ;; Tracked objects:
 22960 ;;		On entry : 0/0
 22961 ;;		On exit  : 0/0
 22962 ;;		Unchanged: 0/0
 22963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22967 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22968 ;;Total ram usage:        2 bytes
 22969 ;; Hardware stack levels used: 1
 22970 ;; Hardware stack levels required when called: 12
 22971 ;; This function calls:
 22972 ;;		Nothing
 22973 ;; This function is called by:
 22974 ;;		_poll
 22975 ;; This function uses a non-reentrant model
 22976 ;;
 22977                           
 22978                           	psect	text88
 22979   00C410                     __ptext88:
 22980                           	callstack 0
 22981   00C410                     _APP_preProcessMessage:
 22982                           	callstack 17
 22983                           
 22984                           ;../main.c: 389:     return NOT_PROCESSED;
 22985                           
 22986                           ;incstack = 0
 22987   00C410  0E00               	movlw	0
 22988   00C412  0012               	return		;funcret
 22989   00C414                     __end_of_APP_preProcessMessage:
 22990                           	callstack 0
 22991                           
 22992 ;; *************** function _APP_postProcessMessage *****************
 22993 ;; Defined at:
 22994 ;;		line 395 in file "../main.c"
 22995 ;; Parameters:    Size  Location     Type
 22996 ;;  m               2   45[BANK0 ] PTR struct Message
 22997 ;;		 -> poll@m(9), 
 22998 ;; Auto vars:     Size  Location     Type
 22999 ;;		None
 23000 ;; Return value:  Size  Location     Type
 23001 ;;                  1    wreg      enum E12732
 23002 ;; Registers used:
 23003 ;;		wreg
 23004 ;; Tracked objects:
 23005 ;;		On entry : 0/0
 23006 ;;		On exit  : 0/0
 23007 ;;		Unchanged: 0/0
 23008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23009 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23012 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23013 ;;Total ram usage:        2 bytes
 23014 ;; Hardware stack levels used: 1
 23015 ;; Hardware stack levels required when called: 12
 23016 ;; This function calls:
 23017 ;;		Nothing
 23018 ;; This function is called by:
 23019 ;;		_poll
 23020 ;; This function uses a non-reentrant model
 23021 ;;
 23022                           
 23023                           	psect	text89
 23024   00C414                     __ptext89:
 23025                           	callstack 0
 23026   00C414                     _APP_postProcessMessage:
 23027                           	callstack 17
 23028                           
 23029                           ;../main.c: 396:     return NOT_PROCESSED;
 23030                           
 23031                           ;incstack = 0
 23032   00C414  0E00               	movlw	0
 23033   00C416  0012               	return		;funcret
 23034   00C418                     __end_of_APP_postProcessMessage:
 23035                           	callstack 0
 23036                           
 23037 ;; *************** function _loop *****************
 23038 ;; Defined at:
 23039 ;;		line 336 in file "../main.c"
 23040 ;; Parameters:    Size  Location     Type
 23041 ;;		None
 23042 ;; Auto vars:     Size  Location     Type
 23043 ;;		None
 23044 ;; Return value:  Size  Location     Type
 23045 ;;                  1    wreg      void 
 23046 ;; Registers used:
 23047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23048 ;; Tracked objects:
 23049 ;;		On entry : 0/0
 23050 ;;		On exit  : 0/0
 23051 ;;		Unchanged: 0/0
 23052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23055 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23056 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23057 ;;Total ram usage:        8 bytes
 23058 ;; Hardware stack levels used: 1
 23059 ;; Hardware stack levels required when called: 21
 23060 ;; This function calls:
 23061 ;;		___lmul
 23062 ;;		_getNV
 23063 ;;		_inputScan
 23064 ;;		_processActions
 23065 ;;		_processOutputs
 23066 ;;		_sendProducedEvent
 23067 ;;		_startServos
 23068 ;;		_tickGet
 23069 ;; This function is called by:
 23070 ;;		_main
 23071 ;; This function uses a non-reentrant model
 23072 ;;
 23073                           
 23074                           	psect	text90
 23075   006D4E                     __ptext90:
 23076                           	callstack 0
 23077   006D4E                     _loop:
 23078                           	callstack 9
 23079                           
 23080                           ;../main.c: 338:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 23081                           
 23082                           ;incstack = 0
 23083   006D4E  0100               	movlb	0	; () banked
 23084   006D50  51CC               	movf	_started& (0+255),w,b
 23085   006D52  A4D8               	btfss	status,2,c
 23086   006D54  D054               	goto	l23900
 23087                           
 23088                           ; BSR set to: 0
 23089   006D56  ECED  F059         	call	_tickGet	;wreg free
 23090   006D5A  501D               	movf	_startTime^0,w,c
 23091   006D5C  0100               	movlb	0	; () banked
 23092   006D5E  5D8D               	subwf	?_tickGet& (0+255),w,b
 23093   006D60  0101               	movlb	1	; () banked
 23094   006D62  6FEB               	movwf	??_loop& (0+255),b
 23095   006D64  501E               	movf	(_startTime+1)^0,w,c
 23096   006D66  0100               	movlb	0	; () banked
 23097   006D68  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23098   006D6A  0101               	movlb	1	; () banked
 23099   006D6C  6FEC               	movwf	(??_loop+1)& (0+255),b
 23100   006D6E  501F               	movf	(_startTime+2)^0,w,c
 23101   006D70  0100               	movlb	0	; () banked
 23102   006D72  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23103   006D74  0101               	movlb	1	; () banked
 23104   006D76  6FED               	movwf	(??_loop+2)& (0+255),b
 23105   006D78  5020               	movf	(_startTime+3)^0,w,c
 23106   006D7A  0100               	movlb	0	; () banked
 23107   006D7C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23108   006D7E  0101               	movlb	1	; () banked
 23109   006D80  6FEE               	movwf	(??_loop+3)& (0+255),b
 23110   006D82  0E01               	movlw	1
 23111   006D84  EC7F  F05D         	call	_getNV
 23112   006D88  0100               	movlb	0	; () banked
 23113   006D8A  C08D  F091         	movff	?_getNV,___lmul@multiplier
 23114   006D8E  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 23115   006D92  0E00               	movlw	0
 23116   006D94  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 23117   006D96  0EFF               	movlw	-1
 23118   006D98  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 23119   006D9A  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 23120   006D9C  0E6A               	movlw	106
 23121   006D9E  6F95               	movwf	___lmul@multiplicand& (0+255),b
 23122   006DA0  0E18               	movlw	24
 23123   006DA2  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 23124   006DA4  0E00               	movlw	0
 23125   006DA6  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 23126   006DA8  0E00               	movlw	0
 23127   006DAA  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 23128   006DAC  EC19  F05A         	call	___lmul	;wreg free
 23129   006DB0  0E48               	movlw	72
 23130   006DB2  0100               	movlb	0	; () banked
 23131   006DB4  2591               	addwf	?___lmul& (0+255),w,b
 23132   006DB6  0101               	movlb	1	; () banked
 23133   006DB8  6FEF               	movwf	(??_loop+4)& (0+255),b
 23134   006DBA  0EE8               	movlw	232
 23135   006DBC  0100               	movlb	0	; () banked
 23136   006DBE  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 23137   006DC0  0101               	movlb	1	; () banked
 23138   006DC2  6FF0               	movwf	(??_loop+5)& (0+255),b
 23139   006DC4  0E01               	movlw	1
 23140   006DC6  0100               	movlb	0	; () banked
 23141   006DC8  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 23142   006DCA  0101               	movlb	1	; () banked
 23143   006DCC  6FF1               	movwf	(??_loop+6)& (0+255),b
 23144   006DCE  0E00               	movlw	0
 23145   006DD0  0100               	movlb	0	; () banked
 23146   006DD2  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 23147   006DD4  0101               	movlb	1	; () banked
 23148   006DD6  6FF2               	movwf	(??_loop+7)& (0+255),b
 23149   006DD8  51EB               	movf	??_loop& (0+255),w,b
 23150   006DDA  5DEF               	subwf	(??_loop+4)& (0+255),w,b
 23151   006DDC  51EC               	movf	(??_loop+1)& (0+255),w,b
 23152   006DDE  59F0               	subwfb	(??_loop+5)& (0+255),w,b
 23153   006DE0  51ED               	movf	(??_loop+2)& (0+255),w,b
 23154   006DE2  59F1               	subwfb	(??_loop+6)& (0+255),w,b
 23155   006DE4  51EE               	movf	(??_loop+3)& (0+255),w,b
 23156   006DE6  59F2               	subwfb	(??_loop+7)& (0+255),w,b
 23157   006DE8  B0D8               	btfsc	status,0,c
 23158   006DEA  D009               	goto	l23900
 23159                           
 23160                           ; BSR set to: 1
 23161                           ;../main.c: 339:         started = TRUE;
 23162   006DEC  0E01               	movlw	1
 23163   006DEE  0100               	movlb	0	; () banked
 23164   006DF0  6FCC               	movwf	_started& (0+255),b
 23165                           
 23166                           ; BSR set to: 0
 23167                           ;../main.c: 340:         sendProducedEvent(1, EVENT_ON);
 23168   006DF2  0E01               	movlw	1
 23169   006DF4  0101               	movlb	1	; () banked
 23170   006DF6  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 23171   006DF8  0E01               	movlw	1
 23172   006DFA  EC28  F04E         	call	_sendProducedEvent
 23173   006DFE                     l23900:
 23174                           
 23175                           ;../main.c: 344:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 23176   006DFE  ECED  F059         	call	_tickGet	;wreg free
 23177   006E02  0101               	movlb	1	; () banked
 23178   006E04  5174               	movf	_lastServoStartTime& (0+255),w,b
 23179   006E06  0100               	movlb	0	; () banked
 23180   006E08  5D8D               	subwf	?_tickGet& (0+255),w,b
 23181   006E0A  0101               	movlb	1	; () banked
 23182   006E0C  6FEB               	movwf	??_loop& (0+255),b
 23183   006E0E  5175               	movf	(_lastServoStartTime+1)& (0+255),w,b
 23184   006E10  0100               	movlb	0	; () banked
 23185   006E12  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23186   006E14  0101               	movlb	1	; () banked
 23187   006E16  6FEC               	movwf	(??_loop+1)& (0+255),b
 23188   006E18  5176               	movf	(_lastServoStartTime+2)& (0+255),w,b
 23189   006E1A  0100               	movlb	0	; () banked
 23190   006E1C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23191   006E1E  0101               	movlb	1	; () banked
 23192   006E20  6FED               	movwf	(??_loop+2)& (0+255),b
 23193   006E22  5177               	movf	(_lastServoStartTime+3)& (0+255),w,b
 23194   006E24  0100               	movlb	0	; () banked
 23195   006E26  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23196   006E28  0101               	movlb	1	; () banked
 23197   006E2A  6FEE               	movwf	(??_loop+3)& (0+255),b
 23198   006E2C  51EE               	movf	(??_loop+3)& (0+255),w,b
 23199   006E2E  11ED               	iorwf	(??_loop+2)& (0+255),w,b
 23200   006E30  11EC               	iorwf	(??_loop+1)& (0+255),w,b
 23201   006E32  E104               	bnz	u25720
 23202   006E34  0E9C               	movlw	156
 23203   006E36  5DEB               	subwf	??_loop& (0+255),w,b
 23204   006E38  A0D8               	btfss	status,0,c
 23205   006E3A  D00C               	goto	l23906
 23206   006E3C                     u25720:
 23207                           
 23208                           ; BSR set to: 1
 23209                           ;../main.c: 345:         startServos();
 23210   006E3C  EC84  F04D         	call	_startServos	;wreg free
 23211                           
 23212                           ;../main.c: 346:         lastServoStartTime.val = tickGet();
 23213   006E40  ECED  F059         	call	_tickGet	;wreg free
 23214   006E44  C08D  F174         	movff	?_tickGet,_lastServoStartTime
 23215   006E48  C08E  F175         	movff	?_tickGet+1,_lastServoStartTime+1
 23216   006E4C  C08F  F176         	movff	?_tickGet+2,_lastServoStartTime+2
 23217   006E50  C090  F177         	movff	?_tickGet+3,_lastServoStartTime+3
 23218   006E54                     l23906:
 23219                           
 23220                           ;../main.c: 349:     if (started) {
 23221   006E54  0100               	movlb	0	; () banked
 23222   006E56  51CC               	movf	_started& (0+255),w,b
 23223   006E58  B4D8               	btfsc	status,2,c
 23224   006E5A  0012               	return	
 23225                           
 23226                           ; BSR set to: 0
 23227                           ;../main.c: 350:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 23228   006E5C  ECED  F059         	call	_tickGet	;wreg free
 23229   006E60  0101               	movlb	1	; () banked
 23230   006E62  5170               	movf	_lastInputScanTime& (0+255),w,b
 23231   006E64  0100               	movlb	0	; () banked
 23232   006E66  5D8D               	subwf	?_tickGet& (0+255),w,b
 23233   006E68  0101               	movlb	1	; () banked
 23234   006E6A  6FEB               	movwf	??_loop& (0+255),b
 23235   006E6C  5171               	movf	(_lastInputScanTime+1)& (0+255),w,b
 23236   006E6E  0100               	movlb	0	; () banked
 23237   006E70  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23238   006E72  0101               	movlb	1	; () banked
 23239   006E74  6FEC               	movwf	(??_loop+1)& (0+255),b
 23240   006E76  5172               	movf	(_lastInputScanTime+2)& (0+255),w,b
 23241   006E78  0100               	movlb	0	; () banked
 23242   006E7A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23243   006E7C  0101               	movlb	1	; () banked
 23244   006E7E  6FED               	movwf	(??_loop+2)& (0+255),b
 23245   006E80  5173               	movf	(_lastInputScanTime+3)& (0+255),w,b
 23246   006E82  0100               	movlb	0	; () banked
 23247   006E84  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23248   006E86  0101               	movlb	1	; () banked
 23249   006E88  6FEE               	movwf	(??_loop+3)& (0+255),b
 23250   006E8A  51EE               	movf	(??_loop+3)& (0+255),w,b
 23251   006E8C  11ED               	iorwf	(??_loop+2)& (0+255),w,b
 23252   006E8E  E106               	bnz	u25740
 23253   006E90  0E37               	movlw	55
 23254   006E92  5DEB               	subwf	??_loop& (0+255),w,b
 23255   006E94  0E01               	movlw	1
 23256   006E96  59EC               	subwfb	(??_loop+1)& (0+255),w,b
 23257   006E98  A0D8               	btfss	status,0,c
 23258   006E9A  D00C               	goto	l23914
 23259   006E9C                     u25740:
 23260                           
 23261                           ; BSR set to: 1
 23262                           ;../main.c: 351:             inputScan();
 23263   006E9C  EC8C  F025         	call	_inputScan	;wreg free
 23264                           
 23265                           ;../main.c: 352:             lastInputScanTime.val = tickGet();
 23266   006EA0  ECED  F059         	call	_tickGet	;wreg free
 23267   006EA4  C08D  F170         	movff	?_tickGet,_lastInputScanTime
 23268   006EA8  C08E  F171         	movff	?_tickGet+1,_lastInputScanTime+1
 23269   006EAC  C08F  F172         	movff	?_tickGet+2,_lastInputScanTime+2
 23270   006EB0  C090  F173         	movff	?_tickGet+3,_lastInputScanTime+3
 23271   006EB4                     l23914:
 23272                           
 23273                           ;../main.c: 354:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 23274   006EB4  ECED  F059         	call	_tickGet	;wreg free
 23275   006EB8  0101               	movlb	1	; () banked
 23276   006EBA  516C               	movf	_lastActionPollTime& (0+255),w,b
 23277   006EBC  0100               	movlb	0	; () banked
 23278   006EBE  5D8D               	subwf	?_tickGet& (0+255),w,b
 23279   006EC0  0101               	movlb	1	; () banked
 23280   006EC2  6FEB               	movwf	??_loop& (0+255),b
 23281   006EC4  516D               	movf	(_lastActionPollTime+1)& (0+255),w,b
 23282   006EC6  0100               	movlb	0	; () banked
 23283   006EC8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 23284   006ECA  0101               	movlb	1	; () banked
 23285   006ECC  6FEC               	movwf	(??_loop+1)& (0+255),b
 23286   006ECE  516E               	movf	(_lastActionPollTime+2)& (0+255),w,b
 23287   006ED0  0100               	movlb	0	; () banked
 23288   006ED2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 23289   006ED4  0101               	movlb	1	; () banked
 23290   006ED6  6FED               	movwf	(??_loop+2)& (0+255),b
 23291   006ED8  516F               	movf	(_lastActionPollTime+3)& (0+255),w,b
 23292   006EDA  0100               	movlb	0	; () banked
 23293   006EDC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 23294   006EDE  0101               	movlb	1	; () banked
 23295   006EE0  6FEE               	movwf	(??_loop+3)& (0+255),b
 23296   006EE2  51EE               	movf	(??_loop+3)& (0+255),w,b
 23297   006EE4  11ED               	iorwf	(??_loop+2)& (0+255),w,b
 23298   006EE6  E106               	bnz	u25750
 23299   006EE8  0E39               	movlw	57
 23300   006EEA  5DEB               	subwf	??_loop& (0+255),w,b
 23301   006EEC  0E18               	movlw	24
 23302   006EEE  59EC               	subwfb	(??_loop+1)& (0+255),w,b
 23303   006EF0  A0D8               	btfss	status,0,c
 23304   006EF2  0012               	return	
 23305   006EF4                     u25750:
 23306                           
 23307                           ; BSR set to: 1
 23308                           ;../main.c: 355:             processActions();
 23309   006EF4  ECBE  F031         	call	_processActions	;wreg free
 23310                           
 23311                           ;../main.c: 356:             processOutputs();
 23312   006EF8  ECBE  F035         	call	_processOutputs	;wreg free
 23313                           
 23314                           ;../main.c: 357:             lastActionPollTime.val = tickGet();
 23315   006EFC  ECED  F059         	call	_tickGet	;wreg free
 23316   006F00  C08D  F16C         	movff	?_tickGet,_lastActionPollTime
 23317   006F04  C08E  F16D         	movff	?_tickGet+1,_lastActionPollTime+1
 23318   006F08  C08F  F16E         	movff	?_tickGet+2,_lastActionPollTime+2
 23319   006F0C  C090  F16F         	movff	?_tickGet+3,_lastActionPollTime+3
 23320   006F10  0012               	return		;funcret
 23321   006F12                     __end_of_loop:
 23322                           	callstack 0
 23323                           
 23324 ;; *************** function _startServos *****************
 23325 ;; Defined at:
 23326 ;;		line 182 in file "../servo.c"
 23327 ;; Parameters:    Size  Location     Type
 23328 ;;		None
 23329 ;; Auto vars:     Size  Location     Type
 23330 ;;  type            1   29[BANK1 ] unsigned char 
 23331 ;; Return value:  Size  Location     Type
 23332 ;;                  1    wreg      void 
 23333 ;; Registers used:
 23334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23335 ;; Tracked objects:
 23336 ;;		On entry : 0/0
 23337 ;;		On exit  : 0/0
 23338 ;;		Unchanged: 0/0
 23339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23341 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23343 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23344 ;;Total ram usage:        1 bytes
 23345 ;; Hardware stack levels used: 1
 23346 ;; Hardware stack levels required when called: 19
 23347 ;; This function calls:
 23348 ;;		_getNV
 23349 ;;		_pollServos
 23350 ;;		_setupTimer1
 23351 ;;		_setupTimer3
 23352 ;; This function is called by:
 23353 ;;		_loop
 23354 ;; This function uses a non-reentrant model
 23355 ;;
 23356                           
 23357                           	psect	text91
 23358   009B08                     __ptext91:
 23359                           	callstack 0
 23360   009B08                     _startServos:
 23361                           	callstack 10
 23362                           
 23363                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 23364                           
 23365                           ;incstack = 0
 23366   009B08  0100               	movlb	0	; () banked
 23367   009B0A  2BC5               	incf	_servoInBlock& (0+255),f,b
 23368                           
 23369                           ; BSR set to: 0
 23370                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 23371   009B0C  0E07               	movlw	7
 23372   009B0E  65C5               	cpfsgt	_servoInBlock& (0+255),b
 23373   009B10  D004               	goto	l21980
 23374                           
 23375                           ; BSR set to: 0
 23376                           ;../servo.c: 188:         servoInBlock = 0;
 23377   009B12  0E00               	movlw	0
 23378   009B14  6FC5               	movwf	_servoInBlock& (0+255),b
 23379                           
 23380                           ; BSR set to: 0
 23381                           ;../servo.c: 189:         pollServos();
 23382   009B16  EC28  F004         	call	_pollServos	;wreg free
 23383   009B1A                     l21980:
 23384                           
 23385                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 23386   009B1A  0100               	movlb	0	; () banked
 23387   009B1C  51C5               	movf	_servoInBlock& (0+255),w,b
 23388   009B1E  0D07               	mullw	7
 23389   009B20  50F3               	movf	243,w,c
 23390   009B22  0F10               	addlw	16
 23391   009B24  EC7F  F05D         	call	_getNV
 23392   009B28  0100               	movlb	0	; () banked
 23393   009B2A  518D               	movf	?_getNV& (0+255),w,b
 23394   009B2C  0101               	movlb	1	; () banked
 23395   009B2E  6FDB               	movwf	startServos@type& (0+255),b
 23396                           
 23397                           ; BSR set to: 1
 23398                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 23399   009B30  0E02               	movlw	2
 23400   009B32  19DB               	xorwf	startServos@type& (0+255),w,b
 23401   009B34  B4D8               	btfsc	status,2,c
 23402   009B36  D008               	goto	u23290
 23403                           
 23404                           ; BSR set to: 1
 23405   009B38  0E03               	movlw	3
 23406   009B3A  19DB               	xorwf	startServos@type& (0+255),w,b
 23407   009B3C  B4D8               	btfsc	status,2,c
 23408   009B3E  D004               	goto	u23290
 23409                           
 23410                           ; BSR set to: 1
 23411   009B40  0E04               	movlw	4
 23412   009B42  19DB               	xorwf	startServos@type& (0+255),w,b
 23413   009B44  A4D8               	btfss	status,2,c
 23414   009B46  D00D               	goto	l21992
 23415   009B48                     u23290:
 23416                           
 23417                           ; BSR set to: 1
 23418                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 23419   009B48  0E30               	movlw	low _servoState
 23420   009B4A  0100               	movlb	0	; () banked
 23421   009B4C  25C5               	addwf	_servoInBlock& (0+255),w,b
 23422   009B4E  6ED9               	movwf	fsr2l,c
 23423   009B50  6ADA               	clrf	fsr2h,c
 23424   009B52  0E01               	movlw	high _servoState
 23425   009B54  22DA               	addwfc	fsr2h,f,c
 23426   009B56  50DF               	movf	indf2,w,c
 23427   009B58  B4D8               	btfsc	status,2,c
 23428   009B5A  D003               	goto	l21992
 23429                           
 23430                           ; BSR set to: 0
 23431   009B5C  51C5               	movf	_servoInBlock& (0+255),w,b
 23432   009B5E  EC14  F04F         	call	_setupTimer1
 23433   009B62                     l21992:
 23434                           
 23435                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 23436   009B62  0100               	movlb	0	; () banked
 23437   009B64  51C5               	movf	_servoInBlock& (0+255),w,b
 23438   009B66  0D07               	mullw	7
 23439   009B68  50F3               	movf	243,w,c
 23440   009B6A  0F48               	addlw	72
 23441   009B6C  EC7F  F05D         	call	_getNV
 23442   009B70  0100               	movlb	0	; () banked
 23443   009B72  518D               	movf	?_getNV& (0+255),w,b
 23444   009B74  0101               	movlb	1	; () banked
 23445   009B76  6FDB               	movwf	startServos@type& (0+255),b
 23446                           
 23447                           ; BSR set to: 1
 23448                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 23449   009B78  0E02               	movlw	2
 23450   009B7A  19DB               	xorwf	startServos@type& (0+255),w,b
 23451   009B7C  B4D8               	btfsc	status,2,c
 23452   009B7E  D008               	goto	u23330
 23453                           
 23454                           ; BSR set to: 1
 23455   009B80  0E03               	movlw	3
 23456   009B82  19DB               	xorwf	startServos@type& (0+255),w,b
 23457   009B84  B4D8               	btfsc	status,2,c
 23458   009B86  D004               	goto	u23330
 23459                           
 23460                           ; BSR set to: 1
 23461   009B88  0E04               	movlw	4
 23462   009B8A  19DB               	xorwf	startServos@type& (0+255),w,b
 23463   009B8C  A4D8               	btfss	status,2,c
 23464   009B8E  0012               	return	
 23465   009B90                     u23330:
 23466                           
 23467                           ; BSR set to: 1
 23468                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 23469   009B90  0E38               	movlw	low (_servoState+8)
 23470   009B92  0100               	movlb	0	; () banked
 23471   009B94  25C5               	addwf	_servoInBlock& (0+255),w,b
 23472   009B96  6ED9               	movwf	fsr2l,c
 23473   009B98  6ADA               	clrf	fsr2h,c
 23474   009B9A  0E01               	movlw	high (_servoState+8)
 23475   009B9C  22DA               	addwfc	fsr2h,f,c
 23476   009B9E  50DF               	movf	indf2,w,c
 23477   009BA0  B4D8               	btfsc	status,2,c
 23478   009BA2  0012               	return	
 23479                           
 23480                           ; BSR set to: 0
 23481   009BA4  51C5               	movf	_servoInBlock& (0+255),w,b
 23482   009BA6  0F08               	addlw	8
 23483   009BA8  ECC7  F04E         	call	_setupTimer3
 23484   009BAC  0012               	return		;funcret
 23485   009BAE                     __end_of_startServos:
 23486                           	callstack 0
 23487                           
 23488 ;; *************** function _setupTimer3 *****************
 23489 ;; Defined at:
 23490 ;;		line 217 in file "../servo.c"
 23491 ;; Parameters:    Size  Location     Type
 23492 ;;  io              1    wreg     unsigned char 
 23493 ;; Auto vars:     Size  Location     Type
 23494 ;;  io              1   60[BANK0 ] unsigned char 
 23495 ;;  ticks           2   58[BANK0 ] unsigned short 
 23496 ;; Return value:  Size  Location     Type
 23497 ;;                  1    wreg      void 
 23498 ;; Registers used:
 23499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23500 ;; Tracked objects:
 23501 ;;		On entry : 0/0
 23502 ;;		On exit  : 0/0
 23503 ;;		Unchanged: 0/0
 23504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23506 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23507 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23508 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23509 ;;Total ram usage:        8 bytes
 23510 ;; Hardware stack levels used: 1
 23511 ;; Hardware stack levels required when called: 13
 23512 ;; This function calls:
 23513 ;;		_getNV
 23514 ;;		_setOutputPin
 23515 ;; This function is called by:
 23516 ;;		_startServos
 23517 ;; This function uses a non-reentrant model
 23518 ;;
 23519                           
 23520                           	psect	text92
 23521   009D8E                     __ptext92:
 23522                           	callstack 0
 23523   009D8E                     _setupTimer3:
 23524                           	callstack 15
 23525                           
 23526                           ;incstack = 0
 23527                           ;setupTimer3@io stored from wreg
 23528   009D8E  0100               	movlb	0	; () banked
 23529   009D90  6F9C               	movwf	setupTimer3@io& (0+255),b
 23530                           
 23531                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 23532   009D92  0100               	movlb	0	; () banked
 23533   009D94  519C               	movf	setupTimer3@io& (0+255),w,b
 23534   009D96  0D07               	mullw	7
 23535   009D98  50F3               	movf	243,w,c
 23536   009D9A  0F11               	addlw	17
 23537   009D9C  EC7F  F05D         	call	_getNV
 23538   009DA0  0100               	movlb	0	; () banked
 23539   009DA2  BF8D               	btfsc	?_getNV& (0+255),7,b
 23540   009DA4  D013               	goto	l21088
 23541                           
 23542                           ; BSR set to: 0
 23543   009DA6  0E40               	movlw	low _currentPos
 23544   009DA8  259C               	addwf	setupTimer3@io& (0+255),w,b
 23545   009DAA  6ED9               	movwf	fsr2l,c
 23546   009DAC  6ADA               	clrf	fsr2h,c
 23547   009DAE  0E01               	movlw	high _currentPos
 23548   009DB0  22DA               	addwfc	fsr2h,f,c
 23549   009DB2  50DF               	movf	indf2,w,c
 23550   009DB4  6F95               	movwf	??_setupTimer3& (0+255),b
 23551   009DB6  5195               	movf	??_setupTimer3& (0+255),w,b
 23552   009DB8  0D13               	mullw	19
 23553   009DBA  CFF3 F096          	movff	prodl,??_setupTimer3+1
 23554   009DBE  CFF4 F097          	movff	prodh,??_setupTimer3+2
 23555   009DC2  0E10               	movlw	16
 23556   009DC4  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 23557   009DC6  6F98               	movwf	_setupTimer3$1845& (0+255),b
 23558   009DC8  0E0E               	movlw	14
 23559   009DCA  D012               	goto	L5
 23560   009DCC                     l21088:
 23561                           
 23562                           ; BSR set to: 0
 23563   009DCC  0E40               	movlw	low _currentPos
 23564   009DCE  259C               	addwf	setupTimer3@io& (0+255),w,b
 23565   009DD0  6ED9               	movwf	fsr2l,c
 23566   009DD2  6ADA               	clrf	fsr2h,c
 23567   009DD4  0E01               	movlw	high _currentPos
 23568   009DD6  22DA               	addwfc	fsr2h,f,c
 23569   009DD8  50DF               	movf	indf2,w,c
 23570   009DDA  6F95               	movwf	??_setupTimer3& (0+255),b
 23571   009DDC  5195               	movf	??_setupTimer3& (0+255),w,b
 23572   009DDE  0D24               	mullw	36
 23573   009DE0  CFF3 F096          	movff	prodl,??_setupTimer3+1
 23574   009DE4  CFF4 F097          	movff	prodh,??_setupTimer3+2
 23575   009DE8  0E78               	movlw	120
 23576   009DEA  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 23577   009DEC  6F98               	movwf	_setupTimer3$1845& (0+255),b
 23578   009DEE  0E05               	movlw	5
 23579   009DF0                     L5:
 23580   009DF0  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 23581   009DF2  6F99               	movwf	(_setupTimer3$1845+1)& (0+255),b
 23582                           
 23583                           ; BSR set to: 0
 23584   009DF4  1D98               	comf	_setupTimer3$1845& (0+255),w,b
 23585   009DF6  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 23586   009DF8  1D99               	comf	(_setupTimer3$1845+1)& (0+255),w,b
 23587   009DFA  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 23588                           
 23589                           ; BSR set to: 0
 23590                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 23591   009DFC  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 23592   009DFE  6EB3               	movwf	179,c	;volatile
 23593                           
 23594                           ; BSR set to: 0
 23595                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 23596   009E00  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 23597                           
 23598                           ; BSR set to: 0
 23599                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 23600   009E04  519C               	movf	setupTimer3@io& (0+255),w,b
 23601   009E06  0D07               	mullw	7
 23602   009E08  50F3               	movf	243,w,c
 23603   009E0A  0F11               	addlw	17
 23604   009E0C  EC7F  F05D         	call	_getNV
 23605   009E10  0100               	movlb	0	; () banked
 23606   009E12  BB8D               	btfsc	?_getNV& (0+255),5,b
 23607   009E14  D002               	goto	u22230
 23608   009E16  0E01               	movlw	1
 23609   009E18  D001               	goto	u22240
 23610   009E1A                     u22230:
 23611   009E1A  0E00               	movlw	0
 23612   009E1C                     u22240:
 23613   009E1C  6F91               	movwf	setOutputPin@state& (0+255),b
 23614   009E1E  519C               	movf	setupTimer3@io& (0+255),w,b
 23615   009E20  EC89  F037         	call	_setOutputPin
 23616                           
 23617                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 23618   009E24  80B1               	bsf	177,0,c	;volatile
 23619   009E26  0012               	return		;funcret
 23620   009E28                     __end_of_setupTimer3:
 23621                           	callstack 0
 23622                           
 23623 ;; *************** function _setupTimer1 *****************
 23624 ;; Defined at:
 23625 ;;		line 206 in file "../servo.c"
 23626 ;; Parameters:    Size  Location     Type
 23627 ;;  io              1    wreg     unsigned char 
 23628 ;; Auto vars:     Size  Location     Type
 23629 ;;  io              1   60[BANK0 ] unsigned char 
 23630 ;;  ticks           2   58[BANK0 ] unsigned short 
 23631 ;; Return value:  Size  Location     Type
 23632 ;;                  1    wreg      void 
 23633 ;; Registers used:
 23634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23635 ;; Tracked objects:
 23636 ;;		On entry : 0/0
 23637 ;;		On exit  : 0/0
 23638 ;;		Unchanged: 0/0
 23639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23641 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23642 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23643 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23644 ;;Total ram usage:        8 bytes
 23645 ;; Hardware stack levels used: 1
 23646 ;; Hardware stack levels required when called: 13
 23647 ;; This function calls:
 23648 ;;		_getNV
 23649 ;;		_setOutputPin
 23650 ;; This function is called by:
 23651 ;;		_startServos
 23652 ;; This function uses a non-reentrant model
 23653 ;;
 23654                           
 23655                           	psect	text93
 23656   009E28                     __ptext93:
 23657                           	callstack 0
 23658   009E28                     _setupTimer1:
 23659                           	callstack 15
 23660                           
 23661                           ;incstack = 0
 23662                           ;setupTimer1@io stored from wreg
 23663   009E28  0100               	movlb	0	; () banked
 23664   009E2A  6F9C               	movwf	setupTimer1@io& (0+255),b
 23665                           
 23666                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 23667   009E2C  0100               	movlb	0	; () banked
 23668   009E2E  519C               	movf	setupTimer1@io& (0+255),w,b
 23669   009E30  0D07               	mullw	7
 23670   009E32  50F3               	movf	243,w,c
 23671   009E34  0F11               	addlw	17
 23672   009E36  EC7F  F05D         	call	_getNV
 23673   009E3A  0100               	movlb	0	; () banked
 23674   009E3C  BF8D               	btfsc	?_getNV& (0+255),7,b
 23675   009E3E  D013               	goto	l21072
 23676                           
 23677                           ; BSR set to: 0
 23678   009E40  0E40               	movlw	low _currentPos
 23679   009E42  259C               	addwf	setupTimer1@io& (0+255),w,b
 23680   009E44  6ED9               	movwf	fsr2l,c
 23681   009E46  6ADA               	clrf	fsr2h,c
 23682   009E48  0E01               	movlw	high _currentPos
 23683   009E4A  22DA               	addwfc	fsr2h,f,c
 23684   009E4C  50DF               	movf	indf2,w,c
 23685   009E4E  6F95               	movwf	??_setupTimer1& (0+255),b
 23686   009E50  5195               	movf	??_setupTimer1& (0+255),w,b
 23687   009E52  0D13               	mullw	19
 23688   009E54  CFF3 F096          	movff	prodl,??_setupTimer1+1
 23689   009E58  CFF4 F097          	movff	prodh,??_setupTimer1+2
 23690   009E5C  0E10               	movlw	16
 23691   009E5E  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 23692   009E60  6F98               	movwf	_setupTimer1$1841& (0+255),b
 23693   009E62  0E0E               	movlw	14
 23694   009E64  D012               	goto	L6
 23695   009E66                     l21072:
 23696                           
 23697                           ; BSR set to: 0
 23698   009E66  0E40               	movlw	low _currentPos
 23699   009E68  259C               	addwf	setupTimer1@io& (0+255),w,b
 23700   009E6A  6ED9               	movwf	fsr2l,c
 23701   009E6C  6ADA               	clrf	fsr2h,c
 23702   009E6E  0E01               	movlw	high _currentPos
 23703   009E70  22DA               	addwfc	fsr2h,f,c
 23704   009E72  50DF               	movf	indf2,w,c
 23705   009E74  6F95               	movwf	??_setupTimer1& (0+255),b
 23706   009E76  5195               	movf	??_setupTimer1& (0+255),w,b
 23707   009E78  0D24               	mullw	36
 23708   009E7A  CFF3 F096          	movff	prodl,??_setupTimer1+1
 23709   009E7E  CFF4 F097          	movff	prodh,??_setupTimer1+2
 23710   009E82  0E78               	movlw	120
 23711   009E84  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 23712   009E86  6F98               	movwf	_setupTimer1$1841& (0+255),b
 23713   009E88  0E05               	movlw	5
 23714   009E8A                     L6:
 23715   009E8A  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 23716   009E8C  6F99               	movwf	(_setupTimer1$1841+1)& (0+255),b
 23717                           
 23718                           ; BSR set to: 0
 23719   009E8E  1D98               	comf	_setupTimer1$1841& (0+255),w,b
 23720   009E90  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 23721   009E92  1D99               	comf	(_setupTimer1$1841+1)& (0+255),w,b
 23722   009E94  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 23723                           
 23724                           ; BSR set to: 0
 23725                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 23726   009E96  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 23727   009E98  6ECF               	movwf	207,c	;volatile
 23728                           
 23729                           ; BSR set to: 0
 23730                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 23731   009E9A  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 23732                           
 23733                           ; BSR set to: 0
 23734                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 23735   009E9E  519C               	movf	setupTimer1@io& (0+255),w,b
 23736   009EA0  0D07               	mullw	7
 23737   009EA2  50F3               	movf	243,w,c
 23738   009EA4  0F11               	addlw	17
 23739   009EA6  EC7F  F05D         	call	_getNV
 23740   009EAA  0100               	movlb	0	; () banked
 23741   009EAC  BB8D               	btfsc	?_getNV& (0+255),5,b
 23742   009EAE  D002               	goto	u22200
 23743   009EB0  0E01               	movlw	1
 23744   009EB2  D001               	goto	u22210
 23745   009EB4                     u22200:
 23746   009EB4  0E00               	movlw	0
 23747   009EB6                     u22210:
 23748   009EB6  6F91               	movwf	setOutputPin@state& (0+255),b
 23749   009EB8  519C               	movf	setupTimer1@io& (0+255),w,b
 23750   009EBA  EC89  F037         	call	_setOutputPin
 23751                           
 23752                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 23753   009EBE  80CD               	bsf	205,0,c	;volatile
 23754   009EC0  0012               	return		;funcret
 23755   009EC2                     __end_of_setupTimer1:
 23756                           	callstack 0
 23757                           
 23758 ;; *************** function _pollServos *****************
 23759 ;; Defined at:
 23760 ;;		line 284 in file "../servo.c"
 23761 ;; Parameters:    Size  Location     Type
 23762 ;;		None
 23763 ;; Auto vars:     Size  Location     Type
 23764 ;;  io              1   28[BANK1 ] unsigned char 
 23765 ;;  midway          1   27[BANK1 ] unsigned char 
 23766 ;;  beforeMidway    1   26[BANK1 ] enum E12700
 23767 ;;  target          1   25[BANK1 ] unsigned char 
 23768 ;; Return value:  Size  Location     Type
 23769 ;;                  1    wreg      void 
 23770 ;; Registers used:
 23771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23772 ;; Tracked objects:
 23773 ;;		On entry : 0/0
 23774 ;;		On exit  : 0/0
 23775 ;;		Unchanged: 0/0
 23776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23778 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23779 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23780 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23781 ;;Total ram usage:       12 bytes
 23782 ;; Hardware stack levels used: 1
 23783 ;; Hardware stack levels required when called: 18
 23784 ;; This function calls:
 23785 ;;		___awdiv
 23786 ;;		_bounceDown
 23787 ;;		_bounceUp
 23788 ;;		_getNV
 23789 ;;		_initBounce
 23790 ;;		_sendProducedEvent
 23791 ;;		_tickGet
 23792 ;;		_writeNVM
 23793 ;; This function is called by:
 23794 ;;		_startServos
 23795 ;; This function uses a non-reentrant model
 23796 ;;
 23797                           
 23798                           	psect	text94
 23799   000850                     __ptext94:
 23800                           	callstack 0
 23801   000850                     _pollServos:
 23802                           	callstack 10
 23803                           
 23804                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 23805                           
 23806                           ;incstack = 0
 23807   000850  0E00               	movlw	0
 23808   000852  0101               	movlb	1	; () banked
 23809   000854  6FDA               	movwf	pollServos@io& (0+255),b
 23810   000856  EF3C  F00B         	goto	l21022
 23811   00085A                     l20794:
 23812                           
 23813                           ; BSR set to: 0
 23814                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 23815   00085A  0101               	movlb	1	; () banked
 23816   00085C  51DA               	movf	pollServos@io& (0+255),w,b
 23817   00085E  0D07               	mullw	7
 23818   000860  50F3               	movf	243,w,c
 23819   000862  0F12               	addlw	18
 23820   000864  EC7F  F05D         	call	_getNV
 23821   000868  0100               	movlb	0	; () banked
 23822   00086A  518D               	movf	?_getNV& (0+255),w,b
 23823   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 23824   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 23825   000870  0E00               	movlw	0
 23826   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 23827   000874  0E02               	movlw	2
 23828   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 23829   000878  ECCE  F052         	call	___awdiv	;wreg free
 23830   00087C  C097  F1CF         	movff	?___awdiv,??_pollServos
 23831   000880  C098  F1D0         	movff	?___awdiv+1,??_pollServos+1
 23832   000884  0101               	movlb	1	; () banked
 23833   000886  51DA               	movf	pollServos@io& (0+255),w,b
 23834   000888  0D07               	mullw	7
 23835   00088A  50F3               	movf	243,w,c
 23836   00088C  0F13               	addlw	19
 23837   00088E  EC7F  F05D         	call	_getNV
 23838   000892  0100               	movlb	0	; () banked
 23839   000894  518D               	movf	?_getNV& (0+255),w,b
 23840   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 23841   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 23842   00089A  0E00               	movlw	0
 23843   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 23844   00089E  0E02               	movlw	2
 23845   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 23846   0008A2  ECCE  F052         	call	___awdiv	;wreg free
 23847   0008A6  0100               	movlb	0	; () banked
 23848   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 23849   0008AA  0101               	movlb	1	; () banked
 23850   0008AC  25CF               	addwf	??_pollServos& (0+255),w,b
 23851   0008AE  6FD9               	movwf	pollServos@midway& (0+255),b
 23852                           
 23853                           ; BSR set to: 1
 23854                           ;../servo.c: 295:                 beforeMidway=FALSE;
 23855   0008B0  0E00               	movlw	0
 23856   0008B2  6FD8               	movwf	pollServos@beforeMidway& (0+255),b
 23857                           
 23858                           ;../servo.c: 296:                 switch (servoState[io]) {
 23859   0008B4  D25B               	goto	l20882
 23860   0008B6                     l20798:
 23861                           
 23862                           ; BSR set to: 1
 23863                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 23864   0008B6  51DA               	movf	pollServos@io& (0+255),w,b
 23865   0008B8  0D07               	mullw	7
 23866   0008BA  50F3               	movf	243,w,c
 23867   0008BC  0F12               	addlw	18
 23868   0008BE  EC7F  F05D         	call	_getNV
 23869   0008C2  0E40               	movlw	low _currentPos
 23870   0008C4  0101               	movlb	1	; () banked
 23871   0008C6  25DA               	addwf	pollServos@io& (0+255),w,b
 23872   0008C8  6ED9               	movwf	fsr2l,c
 23873   0008CA  6ADA               	clrf	fsr2h,c
 23874   0008CC  0E01               	movlw	high _currentPos
 23875   0008CE  22DA               	addwfc	fsr2h,f,c
 23876   0008D0  50DF               	movf	indf2,w,c
 23877   0008D2  6FCF               	movwf	??_pollServos& (0+255),b
 23878   0008D4  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 23879   0008D6  0100               	movlb	0	; () banked
 23880   0008D8  518D               	movf	?_getNV& (0+255),w,b
 23881   0008DA  0101               	movlb	1	; () banked
 23882   0008DC  19CF               	xorwf	??_pollServos& (0+255),w,b
 23883   0008DE  E118               	bnz	l20802
 23884   0008E0  0100               	movlb	0	; () banked
 23885   0008E2  518E               	movf	(?_getNV+1)& (0+255),w,b
 23886   0008E4  0101               	movlb	1	; () banked
 23887   0008E6  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 23888   0008E8  A4D8               	btfss	status,2,c
 23889   0008EA  D012               	goto	l20802
 23890                           
 23891                           ; BSR set to: 1
 23892                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 23893   0008EC  51DA               	movf	pollServos@io& (0+255),w,b
 23894   0008EE  0D07               	mullw	7
 23895   0008F0  50F3               	movf	243,w,c
 23896   0008F2  0F11               	addlw	17
 23897   0008F4  EC7F  F05D         	call	_getNV
 23898   0008F8  0100               	movlb	0	; () banked
 23899   0008FA  518D               	movf	?_getNV& (0+255),w,b
 23900   0008FC  0B40               	andlw	64
 23901   0008FE  0101               	movlb	1	; () banked
 23902   000900  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 23903   000902  51DA               	movf	pollServos@io& (0+255),w,b
 23904   000904  0D04               	mullw	4
 23905   000906  50F3               	movf	243,w,c
 23906   000908  0F08               	addlw	8
 23907   00090A  EC28  F04E         	call	_sendProducedEvent
 23908                           
 23909                           ;../servo.c: 300:                         } else {
 23910   00090E  D011               	goto	l20804
 23911   000910                     l20802:
 23912                           
 23913                           ; BSR set to: 1
 23914                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 23915   000910  51DA               	movf	pollServos@io& (0+255),w,b
 23916   000912  0D07               	mullw	7
 23917   000914  50F3               	movf	243,w,c
 23918   000916  0F11               	addlw	17
 23919   000918  EC7F  F05D         	call	_getNV
 23920   00091C  0100               	movlb	0	; () banked
 23921   00091E  518D               	movf	?_getNV& (0+255),w,b
 23922   000920  0B40               	andlw	64
 23923   000922  0101               	movlb	1	; () banked
 23924   000924  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 23925   000926  51DA               	movf	pollServos@io& (0+255),w,b
 23926   000928  0D04               	mullw	4
 23927   00092A  50F3               	movf	243,w,c
 23928   00092C  0F0A               	addlw	10
 23929   00092E  EC28  F04E         	call	_sendProducedEvent
 23930   000932                     l20804:
 23931                           
 23932                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 23933   000932  0E30               	movlw	low _servoState
 23934   000934  0101               	movlb	1	; () banked
 23935   000936  25DA               	addwf	pollServos@io& (0+255),w,b
 23936   000938  6ED9               	movwf	fsr2l,c
 23937   00093A  6ADA               	clrf	fsr2h,c
 23938   00093C  0E01               	movlw	high _servoState
 23939   00093E  22DA               	addwfc	fsr2h,f,c
 23940   000940  0E02               	movlw	2
 23941   000942  6EDF               	movwf	indf2,c
 23942   000944                     l20806:
 23943                           
 23944                           ; BSR set to: 1
 23945                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 23946   000944  51DA               	movf	pollServos@io& (0+255),w,b
 23947   000946  0F01               	addlw	low _targetPos
 23948   000948  6ED9               	movwf	fsr2l,c
 23949   00094A  6ADA               	clrf	fsr2h,c
 23950   00094C  0E40               	movlw	low _currentPos
 23951   00094E  25DA               	addwf	pollServos@io& (0+255),w,b
 23952   000950  6EE1               	movwf	fsr1l,c
 23953   000952  6AE2               	clrf	fsr1h,c
 23954   000954  0E01               	movlw	high _currentPos
 23955   000956  22E2               	addwfc	fsr1h,f,c
 23956   000958  50DE               	movf	postinc2,w,c
 23957   00095A  5CE6               	subwf	postinc1,w,c
 23958   00095C  B0D8               	btfsc	status,0,c
 23959   00095E  D0B8               	goto	l20836
 23960                           
 23961                           ; BSR set to: 1
 23962                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 23963   000960  0E40               	movlw	low _currentPos
 23964   000962  25DA               	addwf	pollServos@io& (0+255),w,b
 23965   000964  6ED9               	movwf	fsr2l,c
 23966   000966  6ADA               	clrf	fsr2h,c
 23967   000968  0E01               	movlw	high _currentPos
 23968   00096A  22DA               	addwfc	fsr2h,f,c
 23969   00096C  51D9               	movf	pollServos@midway& (0+255),w,b
 23970   00096E  5CDE               	subwf	postinc2,w,c
 23971   000970  B0D8               	btfsc	status,0,c
 23972   000972  D002               	goto	l20812
 23973                           
 23974                           ; BSR set to: 1
 23975                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 23976   000974  0E01               	movlw	1
 23977   000976  6FD8               	movwf	pollServos@beforeMidway& (0+255),b
 23978   000978                     l20812:
 23979                           
 23980                           ; BSR set to: 1
 23981                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 23982   000978  0E20               	movlw	low _stepsPerPollSpeed
 23983   00097A  25DA               	addwf	pollServos@io& (0+255),w,b
 23984   00097C  6ED9               	movwf	fsr2l,c
 23985   00097E  6ADA               	clrf	fsr2h,c
 23986   000980  0E01               	movlw	high _stepsPerPollSpeed
 23987   000982  22DA               	addwfc	fsr2h,f,c
 23988   000984  50DF               	movf	indf2,w,c
 23989   000986  B4D8               	btfsc	status,2,c
 23990   000988  D042               	goto	l20820
 23991                           
 23992                           ; BSR set to: 1
 23993                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 23994   00098A  0E40               	movlw	low _currentPos
 23995   00098C  25DA               	addwf	pollServos@io& (0+255),w,b
 23996   00098E  6ED9               	movwf	fsr2l,c
 23997   000990  6ADA               	clrf	fsr2h,c
 23998   000992  0E01               	movlw	high _currentPos
 23999   000994  22DA               	addwfc	fsr2h,f,c
 24000   000996  50DF               	movf	indf2,w,c
 24001   000998  6FCF               	movwf	??_pollServos& (0+255),b
 24002   00099A  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 24003   00099C  0E40               	movlw	low _currentPos
 24004   00099E  25DA               	addwf	pollServos@io& (0+255),w,b
 24005   0009A0  6ED9               	movwf	fsr2l,c
 24006   0009A2  6ADA               	clrf	fsr2h,c
 24007   0009A4  0E01               	movlw	high _currentPos
 24008   0009A6  22DA               	addwfc	fsr2h,f,c
 24009   0009A8  50DF               	movf	indf2,w,c
 24010   0009AA  6FD1               	movwf	(??_pollServos+2)& (0+255),b
 24011   0009AC  6BD2               	clrf	(??_pollServos+3)& (0+255),b
 24012   0009AE  0E20               	movlw	low _stepsPerPollSpeed
 24013   0009B0  25DA               	addwf	pollServos@io& (0+255),w,b
 24014   0009B2  6ED9               	movwf	fsr2l,c
 24015   0009B4  6ADA               	clrf	fsr2h,c
 24016   0009B6  0E01               	movlw	high _stepsPerPollSpeed
 24017   0009B8  22DA               	addwfc	fsr2h,f,c
 24018   0009BA  50DF               	movf	indf2,w,c
 24019   0009BC  6FD3               	movwf	(??_pollServos+4)& (0+255),b
 24020   0009BE  51D3               	movf	(??_pollServos+4)& (0+255),w,b
 24021   0009C0  27D1               	addwf	(??_pollServos+2)& (0+255),f,b
 24022   0009C2  0E00               	movlw	0
 24023   0009C4  23D2               	addwfc	(??_pollServos+3)& (0+255),f,b
 24024   0009C6  51CF               	movf	??_pollServos& (0+255),w,b
 24025   0009C8  5DD1               	subwf	(??_pollServos+2)& (0+255),w,b
 24026   0009CA  51D2               	movf	(??_pollServos+3)& (0+255),w,b
 24027   0009CC  0A80               	xorlw	128
 24028   0009CE  6FD4               	movwf	(??_pollServos+5)& (0+255),b
 24029   0009D0  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 24030   0009D2  0A80               	xorlw	128
 24031   0009D4  59D4               	subwfb	(??_pollServos+5)& (0+255),w,b
 24032   0009D6  B0D8               	btfsc	status,0,c
 24033   0009D8  D009               	goto	l20818
 24034                           
 24035                           ; BSR set to: 1
 24036                           ;../servo.c: 314:                                     currentPos[io] =255;
 24037   0009DA  0E40               	movlw	low _currentPos
 24038   0009DC  25DA               	addwf	pollServos@io& (0+255),w,b
 24039   0009DE  6ED9               	movwf	fsr2l,c
 24040   0009E0  6ADA               	clrf	fsr2h,c
 24041   0009E2  0E01               	movlw	high _currentPos
 24042   0009E4  22DA               	addwfc	fsr2h,f,c
 24043   0009E6  0EFF               	movlw	255
 24044   0009E8  6EDF               	movwf	indf2,c
 24045                           
 24046                           ;../servo.c: 315:                                 } else {
 24047   0009EA  D036               	goto	l20826
 24048   0009EC                     l20818:
 24049                           
 24050                           ; BSR set to: 1
 24051                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 24052   0009EC  0E20               	movlw	low _stepsPerPollSpeed
 24053   0009EE  25DA               	addwf	pollServos@io& (0+255),w,b
 24054   0009F0  6ED9               	movwf	fsr2l,c
 24055   0009F2  6ADA               	clrf	fsr2h,c
 24056   0009F4  0E01               	movlw	high _stepsPerPollSpeed
 24057   0009F6  22DA               	addwfc	fsr2h,f,c
 24058   0009F8  50DF               	movf	indf2,w,c
 24059   0009FA  6FCF               	movwf	??_pollServos& (0+255),b
 24060   0009FC  0E40               	movlw	low _currentPos
 24061   0009FE  25DA               	addwf	pollServos@io& (0+255),w,b
 24062   000A00  6ED9               	movwf	fsr2l,c
 24063   000A02  6ADA               	clrf	fsr2h,c
 24064   000A04  0E01               	movlw	high _currentPos
 24065   000A06  22DA               	addwfc	fsr2h,f,c
 24066   000A08  51CF               	movf	??_pollServos& (0+255),w,b
 24067   000A0A  26DF               	addwf	indf2,f,c
 24068   000A0C  D025               	goto	l20826
 24069   000A0E                     l20820:
 24070                           
 24071                           ; BSR set to: 1
 24072                           ;../servo.c: 319:                                 pollCount[io]--;
 24073   000A0E  0E84               	movlw	low _pollCount
 24074   000A10  25DA               	addwf	pollServos@io& (0+255),w,b
 24075   000A12  6ED9               	movwf	fsr2l,c
 24076   000A14  6ADA               	clrf	fsr2h,c
 24077   000A16  0E02               	movlw	high _pollCount
 24078   000A18  22DA               	addwfc	fsr2h,f,c
 24079   000A1A  06DF               	decf	indf2,f,c
 24080                           
 24081                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 24082   000A1C  0E84               	movlw	low _pollCount
 24083   000A1E  25DA               	addwf	pollServos@io& (0+255),w,b
 24084   000A20  6ED9               	movwf	fsr2l,c
 24085   000A22  6ADA               	clrf	fsr2h,c
 24086   000A24  0E02               	movlw	high _pollCount
 24087   000A26  22DA               	addwfc	fsr2h,f,c
 24088   000A28  50DF               	movf	indf2,w,c
 24089   000A2A  A4D8               	btfss	status,2,c
 24090   000A2C  D015               	goto	l20826
 24091                           
 24092                           ; BSR set to: 1
 24093                           ;../servo.c: 321:                                     currentPos[io]++;
 24094   000A2E  0E40               	movlw	low _currentPos
 24095   000A30  25DA               	addwf	pollServos@io& (0+255),w,b
 24096   000A32  6ED9               	movwf	fsr2l,c
 24097   000A34  6ADA               	clrf	fsr2h,c
 24098   000A36  0E01               	movlw	high _currentPos
 24099   000A38  22DA               	addwfc	fsr2h,f,c
 24100   000A3A  2ADF               	incf	indf2,f,c
 24101                           
 24102                           ; BSR set to: 1
 24103                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24104   000A3C  0E94               	movlw	low _pollsPerStepSpeed
 24105   000A3E  25DA               	addwf	pollServos@io& (0+255),w,b
 24106   000A40  6ED9               	movwf	fsr2l,c
 24107   000A42  6ADA               	clrf	fsr2h,c
 24108   000A44  0E02               	movlw	high _pollsPerStepSpeed
 24109   000A46  22DA               	addwfc	fsr2h,f,c
 24110   000A48  0E84               	movlw	low _pollCount
 24111   000A4A  25DA               	addwf	pollServos@io& (0+255),w,b
 24112   000A4C  6EE1               	movwf	fsr1l,c
 24113   000A4E  6AE2               	clrf	fsr1h,c
 24114   000A50  0E02               	movlw	high _pollCount
 24115   000A52  22E2               	addwfc	fsr1h,f,c
 24116   000A54  CFDF FFE7          	movff	indf2,indf1
 24117   000A58                     l20826:
 24118                           
 24119                           ; BSR set to: 1
 24120                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 24121   000A58  0E40               	movlw	low _currentPos
 24122   000A5A  25DA               	addwf	pollServos@io& (0+255),w,b
 24123   000A5C  6ED9               	movwf	fsr2l,c
 24124   000A5E  6ADA               	clrf	fsr2h,c
 24125   000A60  0E01               	movlw	high _currentPos
 24126   000A62  22DA               	addwfc	fsr2h,f,c
 24127   000A64  51DA               	movf	pollServos@io& (0+255),w,b
 24128   000A66  0F01               	addlw	low _targetPos
 24129   000A68  6EE1               	movwf	fsr1l,c
 24130   000A6A  6AE2               	clrf	fsr1h,c
 24131   000A6C  50DE               	movf	postinc2,w,c
 24132   000A6E  5CE6               	subwf	postinc1,w,c
 24133   000A70  B0D8               	btfsc	status,0,c
 24134   000A72  D00C               	goto	l20830
 24135                           
 24136                           ; BSR set to: 1
 24137                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 24138   000A74  51DA               	movf	pollServos@io& (0+255),w,b
 24139   000A76  0F01               	addlw	low _targetPos
 24140   000A78  6ED9               	movwf	fsr2l,c
 24141   000A7A  6ADA               	clrf	fsr2h,c
 24142   000A7C  0E40               	movlw	low _currentPos
 24143   000A7E  25DA               	addwf	pollServos@io& (0+255),w,b
 24144   000A80  6EE1               	movwf	fsr1l,c
 24145   000A82  6AE2               	clrf	fsr1h,c
 24146   000A84  0E01               	movlw	high _currentPos
 24147   000A86  22E2               	addwfc	fsr1h,f,c
 24148   000A88  CFDF FFE7          	movff	indf2,indf1
 24149   000A8C                     l20830:
 24150                           
 24151                           ; BSR set to: 1
 24152                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 24153   000A8C  0E40               	movlw	low _currentPos
 24154   000A8E  25DA               	addwf	pollServos@io& (0+255),w,b
 24155   000A90  6ED9               	movwf	fsr2l,c
 24156   000A92  6ADA               	clrf	fsr2h,c
 24157   000A94  0E01               	movlw	high _currentPos
 24158   000A96  22DA               	addwfc	fsr2h,f,c
 24159   000A98  51D9               	movf	pollServos@midway& (0+255),w,b
 24160   000A9A  5CDE               	subwf	postinc2,w,c
 24161   000A9C  A0D8               	btfss	status,0,c
 24162   000A9E  D0D9               	goto	l20866
 24163                           
 24164                           ; BSR set to: 1
 24165   000AA0  51D8               	movf	pollServos@beforeMidway& (0+255),w,b
 24166   000AA2  B4D8               	btfsc	status,2,c
 24167   000AA4  D0D6               	goto	l20866
 24168                           
 24169                           ; BSR set to: 1
 24170                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24171   000AA6  51DA               	movf	pollServos@io& (0+255),w,b
 24172   000AA8  0D07               	mullw	7
 24173   000AAA  50F3               	movf	243,w,c
 24174   000AAC  0F11               	addlw	17
 24175   000AAE  EC7F  F05D         	call	_getNV
 24176   000AB2  0100               	movlb	0	; () banked
 24177   000AB4  BD8D               	btfsc	?_getNV& (0+255),6,b
 24178   000AB6  D002               	goto	u21650
 24179   000AB8  0E01               	movlw	1
 24180   000ABA  D001               	goto	u21660
 24181   000ABC                     u21650:
 24182   000ABC  0E00               	movlw	0
 24183   000ABE                     u21660:
 24184   000ABE  0101               	movlb	1	; () banked
 24185   000AC0  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 24186   000AC2  51DA               	movf	pollServos@io& (0+255),w,b
 24187   000AC4  0D04               	mullw	4
 24188   000AC6  50F3               	movf	243,w,c
 24189   000AC8  0F09               	addlw	9
 24190   000ACA  EC28  F04E         	call	_sendProducedEvent
 24191   000ACE  D0C1               	goto	l20866
 24192   000AD0                     l20836:
 24193                           
 24194                           ; BSR set to: 1
 24195   000AD0  0E40               	movlw	low _currentPos
 24196   000AD2  25DA               	addwf	pollServos@io& (0+255),w,b
 24197   000AD4  6ED9               	movwf	fsr2l,c
 24198   000AD6  6ADA               	clrf	fsr2h,c
 24199   000AD8  0E01               	movlw	high _currentPos
 24200   000ADA  22DA               	addwfc	fsr2h,f,c
 24201   000ADC  51DA               	movf	pollServos@io& (0+255),w,b
 24202   000ADE  0F01               	addlw	low _targetPos
 24203   000AE0  6EE1               	movwf	fsr1l,c
 24204   000AE2  6AE2               	clrf	fsr1h,c
 24205   000AE4  50DE               	movf	postinc2,w,c
 24206   000AE6  5CE6               	subwf	postinc1,w,c
 24207   000AE8  B0D8               	btfsc	status,0,c
 24208   000AEA  D0B3               	goto	l20866
 24209                           
 24210                           ; BSR set to: 1
 24211                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 24212   000AEC  0E40               	movlw	low _currentPos
 24213   000AEE  25DA               	addwf	pollServos@io& (0+255),w,b
 24214   000AF0  6ED9               	movwf	fsr2l,c
 24215   000AF2  6ADA               	clrf	fsr2h,c
 24216   000AF4  0E01               	movlw	high _currentPos
 24217   000AF6  22DA               	addwfc	fsr2h,f,c
 24218   000AF8  50DE               	movf	postinc2,w,c
 24219   000AFA  5DD9               	subwf	pollServos@midway& (0+255),w,b
 24220   000AFC  B0D8               	btfsc	status,0,c
 24221   000AFE  D002               	goto	l20842
 24222                           
 24223                           ; BSR set to: 1
 24224                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 24225   000B00  0E01               	movlw	1
 24226   000B02  6FD8               	movwf	pollServos@beforeMidway& (0+255),b
 24227   000B04                     l20842:
 24228                           
 24229                           ; BSR set to: 1
 24230                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 24231   000B04  0E20               	movlw	low _stepsPerPollSpeed
 24232   000B06  25DA               	addwf	pollServos@io& (0+255),w,b
 24233   000B08  6ED9               	movwf	fsr2l,c
 24234   000B0A  6ADA               	clrf	fsr2h,c
 24235   000B0C  0E01               	movlw	high _stepsPerPollSpeed
 24236   000B0E  22DA               	addwfc	fsr2h,f,c
 24237   000B10  50DF               	movf	indf2,w,c
 24238   000B12  B4D8               	btfsc	status,2,c
 24239   000B14  D041               	goto	l20850
 24240                           
 24241                           ; BSR set to: 1
 24242                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 24243   000B16  0E40               	movlw	low _currentPos
 24244   000B18  25DA               	addwf	pollServos@io& (0+255),w,b
 24245   000B1A  6ED9               	movwf	fsr2l,c
 24246   000B1C  6ADA               	clrf	fsr2h,c
 24247   000B1E  0E01               	movlw	high _currentPos
 24248   000B20  22DA               	addwfc	fsr2h,f,c
 24249   000B22  50DF               	movf	indf2,w,c
 24250   000B24  6FCF               	movwf	??_pollServos& (0+255),b
 24251   000B26  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 24252   000B28  0E20               	movlw	low _stepsPerPollSpeed
 24253   000B2A  25DA               	addwf	pollServos@io& (0+255),w,b
 24254   000B2C  6ED9               	movwf	fsr2l,c
 24255   000B2E  6ADA               	clrf	fsr2h,c
 24256   000B30  0E01               	movlw	high _stepsPerPollSpeed
 24257   000B32  22DA               	addwfc	fsr2h,f,c
 24258   000B34  50DF               	movf	indf2,w,c
 24259   000B36  6FD1               	movwf	(??_pollServos+2)& (0+255),b
 24260   000B38  51D1               	movf	(??_pollServos+2)& (0+255),w,b
 24261   000B3A  5FCF               	subwf	??_pollServos& (0+255),f,b
 24262   000B3C  0E00               	movlw	0
 24263   000B3E  5BD0               	subwfb	(??_pollServos+1)& (0+255),f,b
 24264   000B40  0E40               	movlw	low _currentPos
 24265   000B42  25DA               	addwf	pollServos@io& (0+255),w,b
 24266   000B44  6ED9               	movwf	fsr2l,c
 24267   000B46  6ADA               	clrf	fsr2h,c
 24268   000B48  0E01               	movlw	high _currentPos
 24269   000B4A  22DA               	addwfc	fsr2h,f,c
 24270   000B4C  50DF               	movf	indf2,w,c
 24271   000B4E  6FD2               	movwf	(??_pollServos+3)& (0+255),b
 24272   000B50  6BD3               	clrf	(??_pollServos+4)& (0+255),b
 24273   000B52  51CF               	movf	??_pollServos& (0+255),w,b
 24274   000B54  5DD2               	subwf	(??_pollServos+3)& (0+255),w,b
 24275   000B56  51D3               	movf	(??_pollServos+4)& (0+255),w,b
 24276   000B58  0A80               	xorlw	128
 24277   000B5A  6FD4               	movwf	(??_pollServos+5)& (0+255),b
 24278   000B5C  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 24279   000B5E  0A80               	xorlw	128
 24280   000B60  59D4               	subwfb	(??_pollServos+5)& (0+255),w,b
 24281   000B62  B0D8               	btfsc	status,0,c
 24282   000B64  D008               	goto	l20848
 24283                           
 24284                           ; BSR set to: 1
 24285                           ;../servo.c: 343:                                     currentPos[io] = 0;
 24286   000B66  0E40               	movlw	low _currentPos
 24287   000B68  25DA               	addwf	pollServos@io& (0+255),w,b
 24288   000B6A  6ED9               	movwf	fsr2l,c
 24289   000B6C  6ADA               	clrf	fsr2h,c
 24290   000B6E  0E01               	movlw	high _currentPos
 24291   000B70  22DA               	addwfc	fsr2h,f,c
 24292   000B72  6ADF               	clrf	indf2,c
 24293                           
 24294                           ;../servo.c: 344:                                 } else {
 24295   000B74  D036               	goto	l20856
 24296   000B76                     l20848:
 24297                           
 24298                           ; BSR set to: 1
 24299                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 24300   000B76  0E20               	movlw	low _stepsPerPollSpeed
 24301   000B78  25DA               	addwf	pollServos@io& (0+255),w,b
 24302   000B7A  6ED9               	movwf	fsr2l,c
 24303   000B7C  6ADA               	clrf	fsr2h,c
 24304   000B7E  0E01               	movlw	high _stepsPerPollSpeed
 24305   000B80  22DA               	addwfc	fsr2h,f,c
 24306   000B82  50DF               	movf	indf2,w,c
 24307   000B84  6FCF               	movwf	??_pollServos& (0+255),b
 24308   000B86  0E40               	movlw	low _currentPos
 24309   000B88  25DA               	addwf	pollServos@io& (0+255),w,b
 24310   000B8A  6ED9               	movwf	fsr2l,c
 24311   000B8C  6ADA               	clrf	fsr2h,c
 24312   000B8E  0E01               	movlw	high _currentPos
 24313   000B90  22DA               	addwfc	fsr2h,f,c
 24314   000B92  51CF               	movf	??_pollServos& (0+255),w,b
 24315   000B94  5EDF               	subwf	indf2,f,c
 24316   000B96  D025               	goto	l20856
 24317   000B98                     l20850:
 24318                           
 24319                           ; BSR set to: 1
 24320                           ;../servo.c: 348:                                 pollCount[io]--;
 24321   000B98  0E84               	movlw	low _pollCount
 24322   000B9A  25DA               	addwf	pollServos@io& (0+255),w,b
 24323   000B9C  6ED9               	movwf	fsr2l,c
 24324   000B9E  6ADA               	clrf	fsr2h,c
 24325   000BA0  0E02               	movlw	high _pollCount
 24326   000BA2  22DA               	addwfc	fsr2h,f,c
 24327   000BA4  06DF               	decf	indf2,f,c
 24328                           
 24329                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 24330   000BA6  0E84               	movlw	low _pollCount
 24331   000BA8  25DA               	addwf	pollServos@io& (0+255),w,b
 24332   000BAA  6ED9               	movwf	fsr2l,c
 24333   000BAC  6ADA               	clrf	fsr2h,c
 24334   000BAE  0E02               	movlw	high _pollCount
 24335   000BB0  22DA               	addwfc	fsr2h,f,c
 24336   000BB2  50DF               	movf	indf2,w,c
 24337   000BB4  A4D8               	btfss	status,2,c
 24338   000BB6  D015               	goto	l20856
 24339                           
 24340                           ; BSR set to: 1
 24341                           ;../servo.c: 350:                                     currentPos[io]--;
 24342   000BB8  0E40               	movlw	low _currentPos
 24343   000BBA  25DA               	addwf	pollServos@io& (0+255),w,b
 24344   000BBC  6ED9               	movwf	fsr2l,c
 24345   000BBE  6ADA               	clrf	fsr2h,c
 24346   000BC0  0E01               	movlw	high _currentPos
 24347   000BC2  22DA               	addwfc	fsr2h,f,c
 24348   000BC4  06DF               	decf	indf2,f,c
 24349                           
 24350                           ; BSR set to: 1
 24351                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 24352   000BC6  0E94               	movlw	low _pollsPerStepSpeed
 24353   000BC8  25DA               	addwf	pollServos@io& (0+255),w,b
 24354   000BCA  6ED9               	movwf	fsr2l,c
 24355   000BCC  6ADA               	clrf	fsr2h,c
 24356   000BCE  0E02               	movlw	high _pollsPerStepSpeed
 24357   000BD0  22DA               	addwfc	fsr2h,f,c
 24358   000BD2  0E84               	movlw	low _pollCount
 24359   000BD4  25DA               	addwf	pollServos@io& (0+255),w,b
 24360   000BD6  6EE1               	movwf	fsr1l,c
 24361   000BD8  6AE2               	clrf	fsr1h,c
 24362   000BDA  0E02               	movlw	high _pollCount
 24363   000BDC  22E2               	addwfc	fsr1h,f,c
 24364   000BDE  CFDF FFE7          	movff	indf2,indf1
 24365   000BE2                     l20856:
 24366                           
 24367                           ; BSR set to: 1
 24368                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 24369   000BE2  51DA               	movf	pollServos@io& (0+255),w,b
 24370   000BE4  0F01               	addlw	low _targetPos
 24371   000BE6  6ED9               	movwf	fsr2l,c
 24372   000BE8  6ADA               	clrf	fsr2h,c
 24373   000BEA  0E40               	movlw	low _currentPos
 24374   000BEC  25DA               	addwf	pollServos@io& (0+255),w,b
 24375   000BEE  6EE1               	movwf	fsr1l,c
 24376   000BF0  6AE2               	clrf	fsr1h,c
 24377   000BF2  0E01               	movlw	high _currentPos
 24378   000BF4  22E2               	addwfc	fsr1h,f,c
 24379   000BF6  50DE               	movf	postinc2,w,c
 24380   000BF8  5CE6               	subwf	postinc1,w,c
 24381   000BFA  B0D8               	btfsc	status,0,c
 24382   000BFC  D00C               	goto	l20860
 24383                           
 24384                           ; BSR set to: 1
 24385                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 24386   000BFE  51DA               	movf	pollServos@io& (0+255),w,b
 24387   000C00  0F01               	addlw	low _targetPos
 24388   000C02  6ED9               	movwf	fsr2l,c
 24389   000C04  6ADA               	clrf	fsr2h,c
 24390   000C06  0E40               	movlw	low _currentPos
 24391   000C08  25DA               	addwf	pollServos@io& (0+255),w,b
 24392   000C0A  6EE1               	movwf	fsr1l,c
 24393   000C0C  6AE2               	clrf	fsr1h,c
 24394   000C0E  0E01               	movlw	high _currentPos
 24395   000C10  22E2               	addwfc	fsr1h,f,c
 24396   000C12  CFDF FFE7          	movff	indf2,indf1
 24397   000C16                     l20860:
 24398                           
 24399                           ; BSR set to: 1
 24400                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 24401   000C16  0E40               	movlw	low _currentPos
 24402   000C18  25DA               	addwf	pollServos@io& (0+255),w,b
 24403   000C1A  6ED9               	movwf	fsr2l,c
 24404   000C1C  6ADA               	clrf	fsr2h,c
 24405   000C1E  0E01               	movlw	high _currentPos
 24406   000C20  22DA               	addwfc	fsr2h,f,c
 24407   000C22  50DE               	movf	postinc2,w,c
 24408   000C24  5DD9               	subwf	pollServos@midway& (0+255),w,b
 24409   000C26  A0D8               	btfss	status,0,c
 24410   000C28  D014               	goto	l20866
 24411                           
 24412                           ; BSR set to: 1
 24413   000C2A  51D8               	movf	pollServos@beforeMidway& (0+255),w,b
 24414   000C2C  B4D8               	btfsc	status,2,c
 24415   000C2E  D011               	goto	l20866
 24416                           
 24417                           ; BSR set to: 1
 24418                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 24419   000C30  51DA               	movf	pollServos@io& (0+255),w,b
 24420   000C32  0D07               	mullw	7
 24421   000C34  50F3               	movf	243,w,c
 24422   000C36  0F11               	addlw	17
 24423   000C38  EC7F  F05D         	call	_getNV
 24424   000C3C  0100               	movlb	0	; () banked
 24425   000C3E  518D               	movf	?_getNV& (0+255),w,b
 24426   000C40  0B40               	andlw	64
 24427   000C42  0101               	movlb	1	; () banked
 24428   000C44  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 24429   000C46  51DA               	movf	pollServos@io& (0+255),w,b
 24430   000C48  0D04               	mullw	4
 24431   000C4A  50F3               	movf	243,w,c
 24432   000C4C  0F09               	addlw	9
 24433   000C4E  EC28  F04E         	call	_sendProducedEvent
 24434   000C52                     l20866:
 24435                           
 24436                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 24437   000C52  0E40               	movlw	low _currentPos
 24438   000C54  0101               	movlb	1	; () banked
 24439   000C56  25DA               	addwf	pollServos@io& (0+255),w,b
 24440   000C58  6ED9               	movwf	fsr2l,c
 24441   000C5A  6ADA               	clrf	fsr2h,c
 24442   000C5C  0E01               	movlw	high _currentPos
 24443   000C5E  22DA               	addwfc	fsr2h,f,c
 24444   000C60  51DA               	movf	pollServos@io& (0+255),w,b
 24445   000C62  0F01               	addlw	low _targetPos
 24446   000C64  6EE1               	movwf	fsr1l,c
 24447   000C66  6AE2               	clrf	fsr1h,c
 24448   000C68  50DE               	movf	postinc2,w,c
 24449   000C6A  18E6               	xorwf	postinc1,w,c
 24450   000C6C  A4D8               	btfss	status,2,c
 24451   000C6E  EF95  F00B         	goto	l21032
 24452                           
 24453                           ; BSR set to: 1
 24454                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 24455   000C72  0E30               	movlw	low _servoState
 24456   000C74  25DA               	addwf	pollServos@io& (0+255),w,b
 24457   000C76  6ED9               	movwf	fsr2l,c
 24458   000C78  6ADA               	clrf	fsr2h,c
 24459   000C7A  0E01               	movlw	high _servoState
 24460   000C7C  22DA               	addwfc	fsr2h,f,c
 24461   000C7E  0E01               	movlw	1
 24462   000C80  6EDF               	movwf	indf2,c
 24463                           
 24464                           ; BSR set to: 1
 24465                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 24466   000C82  ECED  F059         	call	_tickGet	;wreg free
 24467   000C86  0101               	movlb	1	; () banked
 24468   000C88  51DA               	movf	pollServos@io& (0+255),w,b
 24469   000C8A  0D04               	mullw	4
 24470   000C8C  0E00               	movlw	low _ticksWhenStopped
 24471   000C8E  24F3               	addwf	243,w,c
 24472   000C90  6ED9               	movwf	fsr2l,c
 24473   000C92  0E02               	movlw	high _ticksWhenStopped
 24474   000C94  20F4               	addwfc	prodh,w,c
 24475   000C96  6EDA               	movwf	fsr2h,c
 24476   000C98  0100               	movlb	0	; () banked
 24477   000C9A  C08D  FFDE         	movff	?_tickGet,postinc2
 24478   000C9E  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24479   000CA2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24480   000CA6  C090  FFDE         	movff	?_tickGet+3,postinc2
 24481                           
 24482                           ; BSR set to: 0
 24483                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 24484   000CAA  0101               	movlb	1	; () banked
 24485   000CAC  51DA               	movf	pollServos@io& (0+255),w,b
 24486   000CAE  0D07               	mullw	7
 24487   000CB0  50F3               	movf	243,w,c
 24488   000CB2  0F12               	addlw	18
 24489   000CB4  EC7F  F05D         	call	_getNV
 24490   000CB8  0E40               	movlw	low _currentPos
 24491   000CBA  0101               	movlb	1	; () banked
 24492   000CBC  25DA               	addwf	pollServos@io& (0+255),w,b
 24493   000CBE  6ED9               	movwf	fsr2l,c
 24494   000CC0  6ADA               	clrf	fsr2h,c
 24495   000CC2  0E01               	movlw	high _currentPos
 24496   000CC4  22DA               	addwfc	fsr2h,f,c
 24497   000CC6  50DF               	movf	indf2,w,c
 24498   000CC8  6FCF               	movwf	??_pollServos& (0+255),b
 24499   000CCA  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 24500   000CCC  0100               	movlb	0	; () banked
 24501   000CCE  518D               	movf	?_getNV& (0+255),w,b
 24502   000CD0  0101               	movlb	1	; () banked
 24503   000CD2  19CF               	xorwf	??_pollServos& (0+255),w,b
 24504   000CD4  E11B               	bnz	l20876
 24505   000CD6  0100               	movlb	0	; () banked
 24506   000CD8  518E               	movf	(?_getNV+1)& (0+255),w,b
 24507   000CDA  0101               	movlb	1	; () banked
 24508   000CDC  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 24509   000CDE  A4D8               	btfss	status,2,c
 24510   000CE0  D015               	goto	l20876
 24511                           
 24512                           ; BSR set to: 1
 24513                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24514   000CE2  51DA               	movf	pollServos@io& (0+255),w,b
 24515   000CE4  0D07               	mullw	7
 24516   000CE6  50F3               	movf	243,w,c
 24517   000CE8  0F11               	addlw	17
 24518   000CEA  EC7F  F05D         	call	_getNV
 24519   000CEE  0100               	movlb	0	; () banked
 24520   000CF0  BD8D               	btfsc	?_getNV& (0+255),6,b
 24521   000CF2  D002               	goto	u21770
 24522   000CF4  0E01               	movlw	1
 24523   000CF6  D001               	goto	u21780
 24524   000CF8                     u21770:
 24525   000CF8  0E00               	movlw	0
 24526   000CFA                     u21780:
 24527   000CFA  0101               	movlb	1	; () banked
 24528   000CFC  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 24529   000CFE  51DA               	movf	pollServos@io& (0+255),w,b
 24530   000D00  0D04               	mullw	4
 24531   000D02  50F3               	movf	243,w,c
 24532   000D04  0F08               	addlw	8
 24533   000D06  EC28  F04E         	call	_sendProducedEvent
 24534                           
 24535                           ;../servo.c: 369:                             } else {
 24536   000D0A  D014               	goto	l20878
 24537   000D0C                     l20876:
 24538                           
 24539                           ; BSR set to: 1
 24540                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24541   000D0C  51DA               	movf	pollServos@io& (0+255),w,b
 24542   000D0E  0D07               	mullw	7
 24543   000D10  50F3               	movf	243,w,c
 24544   000D12  0F11               	addlw	17
 24545   000D14  EC7F  F05D         	call	_getNV
 24546   000D18  0100               	movlb	0	; () banked
 24547   000D1A  BD8D               	btfsc	?_getNV& (0+255),6,b
 24548   000D1C  D002               	goto	u21790
 24549   000D1E  0E01               	movlw	1
 24550   000D20  D001               	goto	u21800
 24551   000D22                     u21790:
 24552   000D22  0E00               	movlw	0
 24553   000D24                     u21800:
 24554   000D24  0101               	movlb	1	; () banked
 24555   000D26  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 24556   000D28  51DA               	movf	pollServos@io& (0+255),w,b
 24557   000D2A  0D04               	mullw	4
 24558   000D2C  50F3               	movf	243,w,c
 24559   000D2E  0F0A               	addlw	10
 24560   000D30  EC28  F04E         	call	_sendProducedEvent
 24561   000D34                     l20878:
 24562                           
 24563                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 24564   000D34  0EDE               	movlw	222
 24565   000D36  0101               	movlb	1	; () banked
 24566   000D38  25DA               	addwf	pollServos@io& (0+255),w,b
 24567   000D3A  6FCF               	movwf	??_pollServos& (0+255),b
 24568   000D3C  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 24569   000D3E  0E03               	movlw	3
 24570   000D40  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 24571   000D42  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 24572   000D46  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24573   000D4A  0100               	movlb	0	; () banked
 24574   000D4C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24575   000D4E  0E40               	movlw	low _currentPos
 24576   000D50  0101               	movlb	1	; () banked
 24577   000D52  25DA               	addwf	pollServos@io& (0+255),w,b
 24578   000D54  6ED9               	movwf	fsr2l,c
 24579   000D56  6ADA               	clrf	fsr2h,c
 24580   000D58  0E01               	movlw	high _currentPos
 24581   000D5A  22DA               	addwfc	fsr2h,f,c
 24582   000D5C  50DF               	movf	indf2,w,c
 24583   000D5E  0100               	movlb	0	; () banked
 24584   000D60  6FA7               	movwf	writeNVM@value& (0+255),b
 24585   000D62  0E00               	movlw	0
 24586   000D64  EC91  F05B         	call	_writeNVM
 24587   000D68  EF95  F00B         	goto	l21032
 24588   000D6C                     l20882:
 24589                           
 24590                           ; BSR set to: 1
 24591   000D6C  0E30               	movlw	low _servoState
 24592   000D6E  25DA               	addwf	pollServos@io& (0+255),w,b
 24593   000D70  6ED9               	movwf	fsr2l,c
 24594   000D72  6ADA               	clrf	fsr2h,c
 24595   000D74  0E01               	movlw	high _servoState
 24596   000D76  22DA               	addwfc	fsr2h,f,c
 24597   000D78  50DF               	movf	indf2,w,c
 24598   000D7A  6FCF               	movwf	??_pollServos& (0+255),b
 24599   000D7C  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 24600                           
 24601                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24602                           ; Switch size 1, requested type "simple"
 24603                           ; Number of cases is 1, Range of values is 0 to 0
 24604                           ; switch strategies available:
 24605                           ; Name         Instructions Cycles
 24606                           ; simple_byte            4     3 (average)
 24607                           ;	Chosen strategy is simple_byte
 24608   000D7E  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 24609   000D80  0A00               	xorlw	0	; case 0
 24610   000D82  A4D8               	btfss	status,2,c
 24611   000D84  EF95  F00B         	goto	l21032
 24612                           
 24613                           ; BSR set to: 1
 24614                           ; Switch size 1, requested type "simple"
 24615                           ; Number of cases is 4, Range of values is 0 to 3
 24616                           ; switch strategies available:
 24617                           ; Name         Instructions Cycles
 24618                           ; simple_byte           13     7 (average)
 24619                           ;	Chosen strategy is simple_byte
 24620   000D88  51CF               	movf	??_pollServos& (0+255),w,b
 24621   000D8A  0A00               	xorlw	0	; case 0
 24622   000D8C  B4D8               	btfsc	status,2,c
 24623   000D8E  EF95  F00B         	goto	l21032
 24624   000D92  0A01               	xorlw	1	; case 1
 24625   000D94  B4D8               	btfsc	status,2,c
 24626   000D96  EF95  F00B         	goto	l21032
 24627   000D9A  0A03               	xorlw	3	; case 2
 24628   000D9C  B4D8               	btfsc	status,2,c
 24629   000D9E  D5D2               	goto	l20806
 24630   000DA0  0A01               	xorlw	1	; case 3
 24631   000DA2  B4D8               	btfsc	status,2,c
 24632   000DA4  D588               	goto	l20798
 24633   000DA6  EF95  F00B         	goto	l21032
 24634   000DAA                     l20884:
 24635                           
 24636                           ; BSR set to: 1
 24637                           ;../servo.c: 383:                         initBounce(io);
 24638   000DAA  51DA               	movf	pollServos@io& (0+255),w,b
 24639   000DAC  EC23  F060         	call	_initBounce
 24640                           
 24641                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 24642   000DB0  0E30               	movlw	low _servoState
 24643   000DB2  0101               	movlb	1	; () banked
 24644   000DB4  25DA               	addwf	pollServos@io& (0+255),w,b
 24645   000DB6  6ED9               	movwf	fsr2l,c
 24646   000DB8  6ADA               	clrf	fsr2h,c
 24647   000DBA  0E01               	movlw	high _servoState
 24648   000DBC  22DA               	addwfc	fsr2h,f,c
 24649   000DBE  0E02               	movlw	2
 24650   000DC0  6EDF               	movwf	indf2,c
 24651                           
 24652                           ; BSR set to: 1
 24653                           ;../servo.c: 385:                         loopCount[io] = 0;
 24654   000DC2  0E74               	movlw	low _loopCount
 24655   000DC4  25DA               	addwf	pollServos@io& (0+255),w,b
 24656   000DC6  6ED9               	movwf	fsr2l,c
 24657   000DC8  6ADA               	clrf	fsr2h,c
 24658   000DCA  0E02               	movlw	high _loopCount
 24659   000DCC  22DA               	addwfc	fsr2h,f,c
 24660   000DCE  6ADF               	clrf	indf2,c
 24661   000DD0                     l20890:
 24662                           
 24663                           ; BSR set to: 1
 24664                           ;../servo.c: 389:                         loopCount[io]++;
 24665   000DD0  0E74               	movlw	low _loopCount
 24666   000DD2  25DA               	addwf	pollServos@io& (0+255),w,b
 24667   000DD4  6ED9               	movwf	fsr2l,c
 24668   000DD6  6ADA               	clrf	fsr2h,c
 24669   000DD8  0E02               	movlw	high _loopCount
 24670   000DDA  22DA               	addwfc	fsr2h,f,c
 24671   000DDC  2ADF               	incf	indf2,f,c
 24672                           
 24673                           ; BSR set to: 1
 24674                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 24675   000DDE  0E74               	movlw	low _loopCount
 24676   000DE0  25DA               	addwf	pollServos@io& (0+255),w,b
 24677   000DE2  6ED9               	movwf	fsr2l,c
 24678   000DE4  6ADA               	clrf	fsr2h,c
 24679   000DE6  0E02               	movlw	high _loopCount
 24680   000DE8  22DA               	addwfc	fsr2h,f,c
 24681   000DEA  28DE               	incf	postinc2,w,c
 24682   000DEC  A4D8               	btfss	status,2,c
 24683   000DEE  D059               	goto	l20904
 24684                           
 24685                           ; BSR set to: 1
 24686                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 24687   000DF0  0E30               	movlw	low _servoState
 24688   000DF2  25DA               	addwf	pollServos@io& (0+255),w,b
 24689   000DF4  6ED9               	movwf	fsr2l,c
 24690   000DF6  6ADA               	clrf	fsr2h,c
 24691   000DF8  0E01               	movlw	high _servoState
 24692   000DFA  22DA               	addwfc	fsr2h,f,c
 24693   000DFC  0E01               	movlw	1
 24694   000DFE  6EDF               	movwf	indf2,c
 24695                           
 24696                           ; BSR set to: 1
 24697                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 24698   000E00  ECED  F059         	call	_tickGet	;wreg free
 24699   000E04  0101               	movlb	1	; () banked
 24700   000E06  51DA               	movf	pollServos@io& (0+255),w,b
 24701   000E08  0D04               	mullw	4
 24702   000E0A  0E00               	movlw	low _ticksWhenStopped
 24703   000E0C  24F3               	addwf	243,w,c
 24704   000E0E  6ED9               	movwf	fsr2l,c
 24705   000E10  0E02               	movlw	high _ticksWhenStopped
 24706   000E12  20F4               	addwfc	prodh,w,c
 24707   000E14  6EDA               	movwf	fsr2h,c
 24708   000E16  0100               	movlb	0	; () banked
 24709   000E18  C08D  FFDE         	movff	?_tickGet,postinc2
 24710   000E1C  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24711   000E20  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24712   000E24  C090  FFDE         	movff	?_tickGet+3,postinc2
 24713                           
 24714                           ; BSR set to: 0
 24715                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 24716   000E28  0101               	movlb	1	; () banked
 24717   000E2A  51DA               	movf	pollServos@io& (0+255),w,b
 24718   000E2C  0F01               	addlw	low _targetPos
 24719   000E2E  6ED9               	movwf	fsr2l,c
 24720   000E30  6ADA               	clrf	fsr2h,c
 24721   000E32  0E40               	movlw	low _currentPos
 24722   000E34  25DA               	addwf	pollServos@io& (0+255),w,b
 24723   000E36  6EE1               	movwf	fsr1l,c
 24724   000E38  6AE2               	clrf	fsr1h,c
 24725   000E3A  0E01               	movlw	high _currentPos
 24726   000E3C  22E2               	addwfc	fsr1h,f,c
 24727   000E3E  CFDF FFE7          	movff	indf2,indf1
 24728                           
 24729                           ; BSR set to: 1
 24730                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 24731   000E42  51DA               	movf	pollServos@io& (0+255),w,b
 24732   000E44  0D07               	mullw	7
 24733   000E46  50F3               	movf	243,w,c
 24734   000E48  0F11               	addlw	17
 24735   000E4A  EC7F  F05D         	call	_getNV
 24736   000E4E  0100               	movlb	0	; () banked
 24737   000E50  BD8D               	btfsc	?_getNV& (0+255),6,b
 24738   000E52  D002               	goto	u21820
 24739   000E54  0E01               	movlw	1
 24740   000E56  D001               	goto	u21830
 24741   000E58                     u21820:
 24742   000E58  0E00               	movlw	0
 24743   000E5A                     u21830:
 24744   000E5A  0101               	movlb	1	; () banked
 24745   000E5C  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 24746   000E5E  51DA               	movf	pollServos@io& (0+255),w,b
 24747   000E60  0D04               	mullw	4
 24748   000E62  50F3               	movf	243,w,c
 24749   000E64  0F08               	addlw	8
 24750   000E66  EC28  F04E         	call	_sendProducedEvent
 24751                           
 24752                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 24753   000E6A  0EDE               	movlw	222
 24754   000E6C  0101               	movlb	1	; () banked
 24755   000E6E  25DA               	addwf	pollServos@io& (0+255),w,b
 24756   000E70  6FCF               	movwf	??_pollServos& (0+255),b
 24757   000E72  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 24758   000E74  0E03               	movlw	3
 24759   000E76  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 24760   000E78  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 24761   000E7C  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24762   000E80  0100               	movlb	0	; () banked
 24763   000E82  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24764   000E84  0E40               	movlw	low _currentPos
 24765   000E86  0101               	movlb	1	; () banked
 24766   000E88  25DA               	addwf	pollServos@io& (0+255),w,b
 24767   000E8A  6ED9               	movwf	fsr2l,c
 24768   000E8C  6ADA               	clrf	fsr2h,c
 24769   000E8E  0E01               	movlw	high _currentPos
 24770   000E90  22DA               	addwfc	fsr2h,f,c
 24771   000E92  50DF               	movf	indf2,w,c
 24772   000E94  0100               	movlb	0	; () banked
 24773   000E96  6FA7               	movwf	writeNVM@value& (0+255),b
 24774   000E98  0E00               	movlw	0
 24775   000E9A  EC91  F05B         	call	_writeNVM
 24776                           
 24777                           ;../servo.c: 396:                             break;
 24778   000E9E  EF95  F00B         	goto	l21032
 24779   000EA2                     l20904:
 24780                           
 24781                           ; BSR set to: 1
 24782                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 24783   000EA2  51DA               	movf	pollServos@io& (0+255),w,b
 24784   000EA4  0D07               	mullw	7
 24785   000EA6  50F3               	movf	243,w,c
 24786   000EA8  0F12               	addlw	18
 24787   000EAA  EC7F  F05D         	call	_getNV
 24788   000EAE  0100               	movlb	0	; () banked
 24789   000EB0  518D               	movf	?_getNV& (0+255),w,b
 24790   000EB2  0101               	movlb	1	; () banked
 24791   000EB4  6FD7               	movwf	pollServos@target& (0+255),b
 24792                           
 24793                           ; BSR set to: 1
 24794                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 24795   000EB6  51DA               	movf	pollServos@io& (0+255),w,b
 24796   000EB8  0F01               	addlw	low _targetPos
 24797   000EBA  6ED9               	movwf	fsr2l,c
 24798   000EBC  6ADA               	clrf	fsr2h,c
 24799   000EBE  51D7               	movf	pollServos@target& (0+255),w,b
 24800   000EC0  18DE               	xorwf	postinc2,w,c
 24801   000EC2  A4D8               	btfss	status,2,c
 24802   000EC4  D060               	goto	l20920
 24803                           
 24804                           ; BSR set to: 1
 24805                           ;../servo.c: 404:                             if (bounceUp(io)) {
 24806   000EC6  51DA               	movf	pollServos@io& (0+255),w,b
 24807   000EC8  ECEE  F02D         	call	_bounceUp
 24808   000ECC  0900               	iorlw	0
 24809   000ECE  B4D8               	btfsc	status,2,c
 24810   000ED0  EF95  F00B         	goto	l21032
 24811                           
 24812                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 24813   000ED4  0E30               	movlw	low _servoState
 24814   000ED6  0101               	movlb	1	; () banked
 24815   000ED8  25DA               	addwf	pollServos@io& (0+255),w,b
 24816   000EDA  6ED9               	movwf	fsr2l,c
 24817   000EDC  6ADA               	clrf	fsr2h,c
 24818   000EDE  0E01               	movlw	high _servoState
 24819   000EE0  22DA               	addwfc	fsr2h,f,c
 24820   000EE2  0E01               	movlw	1
 24821   000EE4  6EDF               	movwf	indf2,c
 24822                           
 24823                           ; BSR set to: 1
 24824                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 24825   000EE6  ECED  F059         	call	_tickGet	;wreg free
 24826   000EEA  0101               	movlb	1	; () banked
 24827   000EEC  51DA               	movf	pollServos@io& (0+255),w,b
 24828   000EEE  0D04               	mullw	4
 24829   000EF0  0E00               	movlw	low _ticksWhenStopped
 24830   000EF2  24F3               	addwf	243,w,c
 24831   000EF4  6ED9               	movwf	fsr2l,c
 24832   000EF6  0E02               	movlw	high _ticksWhenStopped
 24833   000EF8  20F4               	addwfc	prodh,w,c
 24834   000EFA  6EDA               	movwf	fsr2h,c
 24835   000EFC  0100               	movlb	0	; () banked
 24836   000EFE  C08D  FFDE         	movff	?_tickGet,postinc2
 24837   000F02  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24838   000F06  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24839   000F0A  C090  FFDE         	movff	?_tickGet+3,postinc2
 24840                           
 24841                           ; BSR set to: 0
 24842                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 24843   000F0E  0101               	movlb	1	; () banked
 24844   000F10  51DA               	movf	pollServos@io& (0+255),w,b
 24845   000F12  0F01               	addlw	low _targetPos
 24846   000F14  6ED9               	movwf	fsr2l,c
 24847   000F16  6ADA               	clrf	fsr2h,c
 24848   000F18  0E40               	movlw	low _currentPos
 24849   000F1A  25DA               	addwf	pollServos@io& (0+255),w,b
 24850   000F1C  6EE1               	movwf	fsr1l,c
 24851   000F1E  6AE2               	clrf	fsr1h,c
 24852   000F20  0E01               	movlw	high _currentPos
 24853   000F22  22E2               	addwfc	fsr1h,f,c
 24854   000F24  CFDF FFE7          	movff	indf2,indf1
 24855                           
 24856                           ; BSR set to: 1
 24857                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 24858   000F28  51DA               	movf	pollServos@io& (0+255),w,b
 24859   000F2A  0D07               	mullw	7
 24860   000F2C  50F3               	movf	243,w,c
 24861   000F2E  0F11               	addlw	17
 24862   000F30  EC7F  F05D         	call	_getNV
 24863   000F34  0100               	movlb	0	; () banked
 24864   000F36  BD8D               	btfsc	?_getNV& (0+255),6,b
 24865   000F38  D002               	goto	u21860
 24866   000F3A  0E01               	movlw	1
 24867   000F3C  D001               	goto	u21870
 24868   000F3E                     u21860:
 24869   000F3E  0E00               	movlw	0
 24870   000F40                     u21870:
 24871   000F40  0101               	movlb	1	; () banked
 24872   000F42  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 24873   000F44  51DA               	movf	pollServos@io& (0+255),w,b
 24874   000F46  0D04               	mullw	4
 24875   000F48  50F3               	movf	243,w,c
 24876   000F4A  0F08               	addlw	8
 24877   000F4C  EC28  F04E         	call	_sendProducedEvent
 24878                           
 24879                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 24880   000F50  0EDE               	movlw	222
 24881   000F52  0101               	movlb	1	; () banked
 24882   000F54  25DA               	addwf	pollServos@io& (0+255),w,b
 24883   000F56  6FCF               	movwf	??_pollServos& (0+255),b
 24884   000F58  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 24885   000F5A  0E03               	movlw	3
 24886   000F5C  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 24887   000F5E  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 24888   000F62  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24889   000F66  0100               	movlb	0	; () banked
 24890   000F68  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24891   000F6A  0E40               	movlw	low _currentPos
 24892   000F6C  0101               	movlb	1	; () banked
 24893   000F6E  25DA               	addwf	pollServos@io& (0+255),w,b
 24894   000F70  6ED9               	movwf	fsr2l,c
 24895   000F72  6ADA               	clrf	fsr2h,c
 24896   000F74  0E01               	movlw	high _currentPos
 24897   000F76  22DA               	addwfc	fsr2h,f,c
 24898   000F78  50DF               	movf	indf2,w,c
 24899   000F7A  0100               	movlb	0	; () banked
 24900   000F7C  6FA7               	movwf	writeNVM@value& (0+255),b
 24901   000F7E  0E00               	movlw	0
 24902   000F80  EC91  F05B         	call	_writeNVM
 24903   000F84  D3D2               	goto	l21032
 24904   000F86                     l20920:
 24905                           
 24906                           ; BSR set to: 1
 24907                           ;../servo.c: 412:                             if (bounceDown(io)) {
 24908   000F86  51DA               	movf	pollServos@io& (0+255),w,b
 24909   000F88  ECF1  F016         	call	_bounceDown
 24910   000F8C  0900               	iorlw	0
 24911   000F8E  B4D8               	btfsc	status,2,c
 24912   000F90  D3CC               	goto	l21032
 24913                           
 24914                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 24915   000F92  0E30               	movlw	low _servoState
 24916   000F94  0101               	movlb	1	; () banked
 24917   000F96  25DA               	addwf	pollServos@io& (0+255),w,b
 24918   000F98  6ED9               	movwf	fsr2l,c
 24919   000F9A  6ADA               	clrf	fsr2h,c
 24920   000F9C  0E01               	movlw	high _servoState
 24921   000F9E  22DA               	addwfc	fsr2h,f,c
 24922   000FA0  0E01               	movlw	1
 24923   000FA2  6EDF               	movwf	indf2,c
 24924                           
 24925                           ; BSR set to: 1
 24926                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 24927   000FA4  ECED  F059         	call	_tickGet	;wreg free
 24928   000FA8  0101               	movlb	1	; () banked
 24929   000FAA  51DA               	movf	pollServos@io& (0+255),w,b
 24930   000FAC  0D04               	mullw	4
 24931   000FAE  0E00               	movlw	low _ticksWhenStopped
 24932   000FB0  24F3               	addwf	243,w,c
 24933   000FB2  6ED9               	movwf	fsr2l,c
 24934   000FB4  0E02               	movlw	high _ticksWhenStopped
 24935   000FB6  20F4               	addwfc	prodh,w,c
 24936   000FB8  6EDA               	movwf	fsr2h,c
 24937   000FBA  0100               	movlb	0	; () banked
 24938   000FBC  C08D  FFDE         	movff	?_tickGet,postinc2
 24939   000FC0  C08E  FFDE         	movff	?_tickGet+1,postinc2
 24940   000FC4  C08F  FFDE         	movff	?_tickGet+2,postinc2
 24941   000FC8  C090  FFDE         	movff	?_tickGet+3,postinc2
 24942                           
 24943                           ; BSR set to: 0
 24944                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 24945   000FCC  0101               	movlb	1	; () banked
 24946   000FCE  51DA               	movf	pollServos@io& (0+255),w,b
 24947   000FD0  0F01               	addlw	low _targetPos
 24948   000FD2  6ED9               	movwf	fsr2l,c
 24949   000FD4  6ADA               	clrf	fsr2h,c
 24950   000FD6  0E40               	movlw	low _currentPos
 24951   000FD8  25DA               	addwf	pollServos@io& (0+255),w,b
 24952   000FDA  6EE1               	movwf	fsr1l,c
 24953   000FDC  6AE2               	clrf	fsr1h,c
 24954   000FDE  0E01               	movlw	high _currentPos
 24955   000FE0  22E2               	addwfc	fsr1h,f,c
 24956   000FE2  CFDF FFE7          	movff	indf2,indf1
 24957                           
 24958                           ; BSR set to: 1
 24959                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 24960   000FE6  51DA               	movf	pollServos@io& (0+255),w,b
 24961   000FE8  0D07               	mullw	7
 24962   000FEA  50F3               	movf	243,w,c
 24963   000FEC  0F11               	addlw	17
 24964   000FEE  EC7F  F05D         	call	_getNV
 24965   000FF2  0100               	movlb	0	; () banked
 24966   000FF4  518D               	movf	?_getNV& (0+255),w,b
 24967   000FF6  0B40               	andlw	64
 24968   000FF8  0101               	movlb	1	; () banked
 24969   000FFA  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 24970   000FFC  51DA               	movf	pollServos@io& (0+255),w,b
 24971   000FFE  0D04               	mullw	4
 24972   001000  50F3               	movf	243,w,c
 24973   001002  0F08               	addlw	8
 24974   001004  EC28  F04E         	call	_sendProducedEvent
 24975                           
 24976                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 24977   001008  0EDE               	movlw	222
 24978   00100A  0101               	movlb	1	; () banked
 24979   00100C  25DA               	addwf	pollServos@io& (0+255),w,b
 24980   00100E  6FCF               	movwf	??_pollServos& (0+255),b
 24981   001010  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 24982   001012  0E03               	movlw	3
 24983   001014  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 24984   001016  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 24985   00101A  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 24986   00101E  0100               	movlb	0	; () banked
 24987   001020  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 24988   001022  0E40               	movlw	low _currentPos
 24989   001024  0101               	movlb	1	; () banked
 24990   001026  25DA               	addwf	pollServos@io& (0+255),w,b
 24991   001028  6ED9               	movwf	fsr2l,c
 24992   00102A  6ADA               	clrf	fsr2h,c
 24993   00102C  0E01               	movlw	high _currentPos
 24994   00102E  22DA               	addwfc	fsr2h,f,c
 24995   001030  50DF               	movf	indf2,w,c
 24996   001032  0100               	movlb	0	; () banked
 24997   001034  6FA7               	movwf	writeNVM@value& (0+255),b
 24998   001036  0E00               	movlw	0
 24999   001038  EC91  F05B         	call	_writeNVM
 25000   00103C  D376               	goto	l21032
 25001   00103E                     l20934:
 25002                           
 25003                           ; BSR set to: 0
 25004   00103E  0E30               	movlw	low _servoState
 25005   001040  0101               	movlb	1	; () banked
 25006   001042  25DA               	addwf	pollServos@io& (0+255),w,b
 25007   001044  6ED9               	movwf	fsr2l,c
 25008   001046  6ADA               	clrf	fsr2h,c
 25009   001048  0E01               	movlw	high _servoState
 25010   00104A  22DA               	addwfc	fsr2h,f,c
 25011   00104C  50DF               	movf	indf2,w,c
 25012   00104E  6FCF               	movwf	??_pollServos& (0+255),b
 25013   001050  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25014                           
 25015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25016                           ; Switch size 1, requested type "simple"
 25017                           ; Number of cases is 1, Range of values is 0 to 0
 25018                           ; switch strategies available:
 25019                           ; Name         Instructions Cycles
 25020                           ; simple_byte            4     3 (average)
 25021                           ;	Chosen strategy is simple_byte
 25022   001052  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 25023   001054  0A00               	xorlw	0	; case 0
 25024   001056  A4D8               	btfss	status,2,c
 25025   001058  D368               	goto	l21032
 25026                           
 25027                           ; BSR set to: 1
 25028                           ; Switch size 1, requested type "simple"
 25029                           ; Number of cases is 4, Range of values is 0 to 3
 25030                           ; switch strategies available:
 25031                           ; Name         Instructions Cycles
 25032                           ; simple_byte           13     7 (average)
 25033                           ;	Chosen strategy is simple_byte
 25034   00105A  51CF               	movf	??_pollServos& (0+255),w,b
 25035   00105C  0A00               	xorlw	0	; case 0
 25036   00105E  B4D8               	btfsc	status,2,c
 25037   001060  D364               	goto	l21032
 25038   001062  0A01               	xorlw	1	; case 1
 25039   001064  B4D8               	btfsc	status,2,c
 25040   001066  D361               	goto	l21032
 25041   001068  0A03               	xorlw	3	; case 2
 25042   00106A  B4D8               	btfsc	status,2,c
 25043   00106C  D6B1               	goto	l20890
 25044   00106E  0A01               	xorlw	1	; case 3
 25045   001070  B4D8               	btfsc	status,2,c
 25046   001072  D69B               	goto	l20884
 25047   001074  D35A               	goto	l21032
 25048   001076                     l20936:
 25049                           
 25050                           ; BSR set to: 1
 25051                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 25052   001076  51DA               	movf	pollServos@io& (0+255),w,b
 25053   001078  0D07               	mullw	7
 25054   00107A  50F3               	movf	243,w,c
 25055   00107C  0F13               	addlw	19
 25056   00107E  EC7F  F05D         	call	_getNV
 25057   001082  0E40               	movlw	low _currentPos
 25058   001084  0101               	movlb	1	; () banked
 25059   001086  25DA               	addwf	pollServos@io& (0+255),w,b
 25060   001088  6ED9               	movwf	fsr2l,c
 25061   00108A  6ADA               	clrf	fsr2h,c
 25062   00108C  0E01               	movlw	high _currentPos
 25063   00108E  22DA               	addwfc	fsr2h,f,c
 25064   001090  50DF               	movf	indf2,w,c
 25065   001092  6FCF               	movwf	??_pollServos& (0+255),b
 25066   001094  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25067   001096  0100               	movlb	0	; () banked
 25068   001098  518D               	movf	?_getNV& (0+255),w,b
 25069   00109A  0101               	movlb	1	; () banked
 25070   00109C  19CF               	xorwf	??_pollServos& (0+255),w,b
 25071   00109E  E117               	bnz	l20940
 25072   0010A0  0100               	movlb	0	; () banked
 25073   0010A2  518E               	movf	(?_getNV+1)& (0+255),w,b
 25074   0010A4  0101               	movlb	1	; () banked
 25075   0010A6  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25076   0010A8  A4D8               	btfss	status,2,c
 25077   0010AA  D011               	goto	l20940
 25078                           
 25079                           ; BSR set to: 1
 25080                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25081   0010AC  51DA               	movf	pollServos@io& (0+255),w,b
 25082   0010AE  0D07               	mullw	7
 25083   0010B0  50F3               	movf	243,w,c
 25084   0010B2  0F11               	addlw	17
 25085   0010B4  EC7F  F05D         	call	_getNV
 25086   0010B8  0100               	movlb	0	; () banked
 25087   0010BA  518D               	movf	?_getNV& (0+255),w,b
 25088   0010BC  0B40               	andlw	64
 25089   0010BE  0101               	movlb	1	; () banked
 25090   0010C0  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 25091   0010C2  51DA               	movf	pollServos@io& (0+255),w,b
 25092   0010C4  0D04               	mullw	4
 25093   0010C6  50F3               	movf	243,w,c
 25094   0010C8  0F08               	addlw	8
 25095   0010CA  EC28  F04E         	call	_sendProducedEvent
 25096   0010CE                     l20940:
 25097                           
 25098                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 25099   0010CE  0101               	movlb	1	; () banked
 25100   0010D0  51DA               	movf	pollServos@io& (0+255),w,b
 25101   0010D2  0D07               	mullw	7
 25102   0010D4  50F3               	movf	243,w,c
 25103   0010D6  0F14               	addlw	20
 25104   0010D8  EC7F  F05D         	call	_getNV
 25105   0010DC  0E40               	movlw	low _currentPos
 25106   0010DE  0101               	movlb	1	; () banked
 25107   0010E0  25DA               	addwf	pollServos@io& (0+255),w,b
 25108   0010E2  6ED9               	movwf	fsr2l,c
 25109   0010E4  6ADA               	clrf	fsr2h,c
 25110   0010E6  0E01               	movlw	high _currentPos
 25111   0010E8  22DA               	addwfc	fsr2h,f,c
 25112   0010EA  50DF               	movf	indf2,w,c
 25113   0010EC  6FCF               	movwf	??_pollServos& (0+255),b
 25114   0010EE  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25115   0010F0  0100               	movlb	0	; () banked
 25116   0010F2  518D               	movf	?_getNV& (0+255),w,b
 25117   0010F4  0101               	movlb	1	; () banked
 25118   0010F6  19CF               	xorwf	??_pollServos& (0+255),w,b
 25119   0010F8  E117               	bnz	l20944
 25120   0010FA  0100               	movlb	0	; () banked
 25121   0010FC  518E               	movf	(?_getNV+1)& (0+255),w,b
 25122   0010FE  0101               	movlb	1	; () banked
 25123   001100  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25124   001102  A4D8               	btfss	status,2,c
 25125   001104  D011               	goto	l20944
 25126                           
 25127                           ; BSR set to: 1
 25128                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25129   001106  51DA               	movf	pollServos@io& (0+255),w,b
 25130   001108  0D07               	mullw	7
 25131   00110A  50F3               	movf	243,w,c
 25132   00110C  0F11               	addlw	17
 25133   00110E  EC7F  F05D         	call	_getNV
 25134   001112  0100               	movlb	0	; () banked
 25135   001114  518D               	movf	?_getNV& (0+255),w,b
 25136   001116  0B40               	andlw	64
 25137   001118  0101               	movlb	1	; () banked
 25138   00111A  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 25139   00111C  51DA               	movf	pollServos@io& (0+255),w,b
 25140   00111E  0D04               	mullw	4
 25141   001120  50F3               	movf	243,w,c
 25142   001122  0F09               	addlw	9
 25143   001124  EC28  F04E         	call	_sendProducedEvent
 25144   001128                     l20944:
 25145                           
 25146                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 25147   001128  0101               	movlb	1	; () banked
 25148   00112A  51DA               	movf	pollServos@io& (0+255),w,b
 25149   00112C  0D07               	mullw	7
 25150   00112E  50F3               	movf	243,w,c
 25151   001130  0F15               	addlw	21
 25152   001132  EC7F  F05D         	call	_getNV
 25153   001136  0E40               	movlw	low _currentPos
 25154   001138  0101               	movlb	1	; () banked
 25155   00113A  25DA               	addwf	pollServos@io& (0+255),w,b
 25156   00113C  6ED9               	movwf	fsr2l,c
 25157   00113E  6ADA               	clrf	fsr2h,c
 25158   001140  0E01               	movlw	high _currentPos
 25159   001142  22DA               	addwfc	fsr2h,f,c
 25160   001144  50DF               	movf	indf2,w,c
 25161   001146  6FCF               	movwf	??_pollServos& (0+255),b
 25162   001148  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25163   00114A  0100               	movlb	0	; () banked
 25164   00114C  518D               	movf	?_getNV& (0+255),w,b
 25165   00114E  0101               	movlb	1	; () banked
 25166   001150  19CF               	xorwf	??_pollServos& (0+255),w,b
 25167   001152  E117               	bnz	l20948
 25168   001154  0100               	movlb	0	; () banked
 25169   001156  518E               	movf	(?_getNV+1)& (0+255),w,b
 25170   001158  0101               	movlb	1	; () banked
 25171   00115A  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25172   00115C  A4D8               	btfss	status,2,c
 25173   00115E  D011               	goto	l20948
 25174                           
 25175                           ; BSR set to: 1
 25176                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25177   001160  51DA               	movf	pollServos@io& (0+255),w,b
 25178   001162  0D07               	mullw	7
 25179   001164  50F3               	movf	243,w,c
 25180   001166  0F11               	addlw	17
 25181   001168  EC7F  F05D         	call	_getNV
 25182   00116C  0100               	movlb	0	; () banked
 25183   00116E  518D               	movf	?_getNV& (0+255),w,b
 25184   001170  0B40               	andlw	64
 25185   001172  0101               	movlb	1	; () banked
 25186   001174  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 25187   001176  51DA               	movf	pollServos@io& (0+255),w,b
 25188   001178  0D04               	mullw	4
 25189   00117A  50F3               	movf	243,w,c
 25190   00117C  0F0A               	addlw	10
 25191   00117E  EC28  F04E         	call	_sendProducedEvent
 25192   001182                     l20948:
 25193                           
 25194                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 25195   001182  0101               	movlb	1	; () banked
 25196   001184  51DA               	movf	pollServos@io& (0+255),w,b
 25197   001186  0D07               	mullw	7
 25198   001188  50F3               	movf	243,w,c
 25199   00118A  0F16               	addlw	22
 25200   00118C  EC7F  F05D         	call	_getNV
 25201   001190  0E40               	movlw	low _currentPos
 25202   001192  0101               	movlb	1	; () banked
 25203   001194  25DA               	addwf	pollServos@io& (0+255),w,b
 25204   001196  6ED9               	movwf	fsr2l,c
 25205   001198  6ADA               	clrf	fsr2h,c
 25206   00119A  0E01               	movlw	high _currentPos
 25207   00119C  22DA               	addwfc	fsr2h,f,c
 25208   00119E  50DF               	movf	indf2,w,c
 25209   0011A0  6FCF               	movwf	??_pollServos& (0+255),b
 25210   0011A2  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25211   0011A4  0100               	movlb	0	; () banked
 25212   0011A6  518D               	movf	?_getNV& (0+255),w,b
 25213   0011A8  0101               	movlb	1	; () banked
 25214   0011AA  19CF               	xorwf	??_pollServos& (0+255),w,b
 25215   0011AC  E117               	bnz	l20952
 25216   0011AE  0100               	movlb	0	; () banked
 25217   0011B0  518E               	movf	(?_getNV+1)& (0+255),w,b
 25218   0011B2  0101               	movlb	1	; () banked
 25219   0011B4  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25220   0011B6  A4D8               	btfss	status,2,c
 25221   0011B8  D011               	goto	l20952
 25222                           
 25223                           ; BSR set to: 1
 25224                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 25225   0011BA  51DA               	movf	pollServos@io& (0+255),w,b
 25226   0011BC  0D07               	mullw	7
 25227   0011BE  50F3               	movf	243,w,c
 25228   0011C0  0F11               	addlw	17
 25229   0011C2  EC7F  F05D         	call	_getNV
 25230   0011C6  0100               	movlb	0	; () banked
 25231   0011C8  518D               	movf	?_getNV& (0+255),w,b
 25232   0011CA  0B40               	andlw	64
 25233   0011CC  0101               	movlb	1	; () banked
 25234   0011CE  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 25235   0011D0  51DA               	movf	pollServos@io& (0+255),w,b
 25236   0011D2  0D04               	mullw	4
 25237   0011D4  50F3               	movf	243,w,c
 25238   0011D6  0F0B               	addlw	11
 25239   0011D8  EC28  F04E         	call	_sendProducedEvent
 25240   0011DC                     l20952:
 25241                           
 25242                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 25243   0011DC  0E30               	movlw	low _servoState
 25244   0011DE  0101               	movlb	1	; () banked
 25245   0011E0  25DA               	addwf	pollServos@io& (0+255),w,b
 25246   0011E2  6ED9               	movwf	fsr2l,c
 25247   0011E4  6ADA               	clrf	fsr2h,c
 25248   0011E6  0E01               	movlw	high _servoState
 25249   0011E8  22DA               	addwfc	fsr2h,f,c
 25250   0011EA  0E02               	movlw	2
 25251   0011EC  6EDF               	movwf	indf2,c
 25252   0011EE                     l20954:
 25253                           
 25254                           ; BSR set to: 1
 25255                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 25256   0011EE  51DA               	movf	pollServos@io& (0+255),w,b
 25257   0011F0  0F01               	addlw	low _targetPos
 25258   0011F2  6ED9               	movwf	fsr2l,c
 25259   0011F4  6ADA               	clrf	fsr2h,c
 25260   0011F6  0E40               	movlw	low _currentPos
 25261   0011F8  25DA               	addwf	pollServos@io& (0+255),w,b
 25262   0011FA  6EE1               	movwf	fsr1l,c
 25263   0011FC  6AE2               	clrf	fsr1h,c
 25264   0011FE  0E01               	movlw	high _currentPos
 25265   001200  22E2               	addwfc	fsr1h,f,c
 25266   001202  50DE               	movf	postinc2,w,c
 25267   001204  5CE6               	subwf	postinc1,w,c
 25268   001206  B0D8               	btfsc	status,0,c
 25269   001208  D08B               	goto	l20974
 25270                           
 25271                           ; BSR set to: 1
 25272                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 25273   00120A  0E20               	movlw	low _stepsPerPollSpeed
 25274   00120C  25DA               	addwf	pollServos@io& (0+255),w,b
 25275   00120E  6ED9               	movwf	fsr2l,c
 25276   001210  6ADA               	clrf	fsr2h,c
 25277   001212  0E01               	movlw	high _stepsPerPollSpeed
 25278   001214  22DA               	addwfc	fsr2h,f,c
 25279   001216  50DF               	movf	indf2,w,c
 25280   001218  B4D8               	btfsc	status,2,c
 25281   00121A  D042               	goto	l20964
 25282                           
 25283                           ; BSR set to: 1
 25284                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25285   00121C  0E40               	movlw	low _currentPos
 25286   00121E  25DA               	addwf	pollServos@io& (0+255),w,b
 25287   001220  6ED9               	movwf	fsr2l,c
 25288   001222  6ADA               	clrf	fsr2h,c
 25289   001224  0E01               	movlw	high _currentPos
 25290   001226  22DA               	addwfc	fsr2h,f,c
 25291   001228  50DF               	movf	indf2,w,c
 25292   00122A  6FCF               	movwf	??_pollServos& (0+255),b
 25293   00122C  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25294   00122E  0E40               	movlw	low _currentPos
 25295   001230  25DA               	addwf	pollServos@io& (0+255),w,b
 25296   001232  6ED9               	movwf	fsr2l,c
 25297   001234  6ADA               	clrf	fsr2h,c
 25298   001236  0E01               	movlw	high _currentPos
 25299   001238  22DA               	addwfc	fsr2h,f,c
 25300   00123A  50DF               	movf	indf2,w,c
 25301   00123C  6FD1               	movwf	(??_pollServos+2)& (0+255),b
 25302   00123E  6BD2               	clrf	(??_pollServos+3)& (0+255),b
 25303   001240  0E20               	movlw	low _stepsPerPollSpeed
 25304   001242  25DA               	addwf	pollServos@io& (0+255),w,b
 25305   001244  6ED9               	movwf	fsr2l,c
 25306   001246  6ADA               	clrf	fsr2h,c
 25307   001248  0E01               	movlw	high _stepsPerPollSpeed
 25308   00124A  22DA               	addwfc	fsr2h,f,c
 25309   00124C  50DF               	movf	indf2,w,c
 25310   00124E  6FD3               	movwf	(??_pollServos+4)& (0+255),b
 25311   001250  51D3               	movf	(??_pollServos+4)& (0+255),w,b
 25312   001252  27D1               	addwf	(??_pollServos+2)& (0+255),f,b
 25313   001254  0E00               	movlw	0
 25314   001256  23D2               	addwfc	(??_pollServos+3)& (0+255),f,b
 25315   001258  51CF               	movf	??_pollServos& (0+255),w,b
 25316   00125A  5DD1               	subwf	(??_pollServos+2)& (0+255),w,b
 25317   00125C  51D2               	movf	(??_pollServos+3)& (0+255),w,b
 25318   00125E  0A80               	xorlw	128
 25319   001260  6FD4               	movwf	(??_pollServos+5)& (0+255),b
 25320   001262  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 25321   001264  0A80               	xorlw	128
 25322   001266  59D4               	subwfb	(??_pollServos+5)& (0+255),w,b
 25323   001268  B0D8               	btfsc	status,0,c
 25324   00126A  D009               	goto	l20962
 25325                           
 25326                           ; BSR set to: 1
 25327                           ;../servo.c: 448:                                     currentPos[io] =255;
 25328   00126C  0E40               	movlw	low _currentPos
 25329   00126E  25DA               	addwf	pollServos@io& (0+255),w,b
 25330   001270  6ED9               	movwf	fsr2l,c
 25331   001272  6ADA               	clrf	fsr2h,c
 25332   001274  0E01               	movlw	high _currentPos
 25333   001276  22DA               	addwfc	fsr2h,f,c
 25334   001278  0EFF               	movlw	255
 25335   00127A  6EDF               	movwf	indf2,c
 25336                           
 25337                           ;../servo.c: 449:                                 } else {
 25338   00127C  D036               	goto	l20970
 25339   00127E                     l20962:
 25340                           
 25341                           ; BSR set to: 1
 25342                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25343   00127E  0E20               	movlw	low _stepsPerPollSpeed
 25344   001280  25DA               	addwf	pollServos@io& (0+255),w,b
 25345   001282  6ED9               	movwf	fsr2l,c
 25346   001284  6ADA               	clrf	fsr2h,c
 25347   001286  0E01               	movlw	high _stepsPerPollSpeed
 25348   001288  22DA               	addwfc	fsr2h,f,c
 25349   00128A  50DF               	movf	indf2,w,c
 25350   00128C  6FCF               	movwf	??_pollServos& (0+255),b
 25351   00128E  0E40               	movlw	low _currentPos
 25352   001290  25DA               	addwf	pollServos@io& (0+255),w,b
 25353   001292  6ED9               	movwf	fsr2l,c
 25354   001294  6ADA               	clrf	fsr2h,c
 25355   001296  0E01               	movlw	high _currentPos
 25356   001298  22DA               	addwfc	fsr2h,f,c
 25357   00129A  51CF               	movf	??_pollServos& (0+255),w,b
 25358   00129C  26DF               	addwf	indf2,f,c
 25359   00129E  D025               	goto	l20970
 25360   0012A0                     l20964:
 25361                           
 25362                           ; BSR set to: 1
 25363                           ;../servo.c: 453:                                 pollCount[io]--;
 25364   0012A0  0E84               	movlw	low _pollCount
 25365   0012A2  25DA               	addwf	pollServos@io& (0+255),w,b
 25366   0012A4  6ED9               	movwf	fsr2l,c
 25367   0012A6  6ADA               	clrf	fsr2h,c
 25368   0012A8  0E02               	movlw	high _pollCount
 25369   0012AA  22DA               	addwfc	fsr2h,f,c
 25370   0012AC  06DF               	decf	indf2,f,c
 25371                           
 25372                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 25373   0012AE  0E84               	movlw	low _pollCount
 25374   0012B0  25DA               	addwf	pollServos@io& (0+255),w,b
 25375   0012B2  6ED9               	movwf	fsr2l,c
 25376   0012B4  6ADA               	clrf	fsr2h,c
 25377   0012B6  0E02               	movlw	high _pollCount
 25378   0012B8  22DA               	addwfc	fsr2h,f,c
 25379   0012BA  50DF               	movf	indf2,w,c
 25380   0012BC  A4D8               	btfss	status,2,c
 25381   0012BE  D015               	goto	l20970
 25382                           
 25383                           ; BSR set to: 1
 25384                           ;../servo.c: 455:                                     currentPos[io]++;
 25385   0012C0  0E40               	movlw	low _currentPos
 25386   0012C2  25DA               	addwf	pollServos@io& (0+255),w,b
 25387   0012C4  6ED9               	movwf	fsr2l,c
 25388   0012C6  6ADA               	clrf	fsr2h,c
 25389   0012C8  0E01               	movlw	high _currentPos
 25390   0012CA  22DA               	addwfc	fsr2h,f,c
 25391   0012CC  2ADF               	incf	indf2,f,c
 25392                           
 25393                           ; BSR set to: 1
 25394                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25395   0012CE  0E94               	movlw	low _pollsPerStepSpeed
 25396   0012D0  25DA               	addwf	pollServos@io& (0+255),w,b
 25397   0012D2  6ED9               	movwf	fsr2l,c
 25398   0012D4  6ADA               	clrf	fsr2h,c
 25399   0012D6  0E02               	movlw	high _pollsPerStepSpeed
 25400   0012D8  22DA               	addwfc	fsr2h,f,c
 25401   0012DA  0E84               	movlw	low _pollCount
 25402   0012DC  25DA               	addwf	pollServos@io& (0+255),w,b
 25403   0012DE  6EE1               	movwf	fsr1l,c
 25404   0012E0  6AE2               	clrf	fsr1h,c
 25405   0012E2  0E02               	movlw	high _pollCount
 25406   0012E4  22E2               	addwfc	fsr1h,f,c
 25407   0012E6  CFDF FFE7          	movff	indf2,indf1
 25408   0012EA                     l20970:
 25409                           
 25410                           ; BSR set to: 1
 25411                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 25412   0012EA  0E40               	movlw	low _currentPos
 25413   0012EC  25DA               	addwf	pollServos@io& (0+255),w,b
 25414   0012EE  6ED9               	movwf	fsr2l,c
 25415   0012F0  6ADA               	clrf	fsr2h,c
 25416   0012F2  0E01               	movlw	high _currentPos
 25417   0012F4  22DA               	addwfc	fsr2h,f,c
 25418   0012F6  51DA               	movf	pollServos@io& (0+255),w,b
 25419   0012F8  0F01               	addlw	low _targetPos
 25420   0012FA  6EE1               	movwf	fsr1l,c
 25421   0012FC  6AE2               	clrf	fsr1h,c
 25422   0012FE  50DE               	movf	postinc2,w,c
 25423   001300  5CE6               	subwf	postinc1,w,c
 25424   001302  B0D8               	btfsc	status,0,c
 25425   001304  D098               	goto	l1048
 25426   001306                     u21970:
 25427                           
 25428                           ; BSR set to: 1
 25429                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 25430   001306  51DA               	movf	pollServos@io& (0+255),w,b
 25431   001308  0F01               	addlw	low _targetPos
 25432   00130A  6ED9               	movwf	fsr2l,c
 25433   00130C  6ADA               	clrf	fsr2h,c
 25434   00130E  0E40               	movlw	low _currentPos
 25435   001310  25DA               	addwf	pollServos@io& (0+255),w,b
 25436   001312  6EE1               	movwf	fsr1l,c
 25437   001314  6AE2               	clrf	fsr1h,c
 25438   001316  0E01               	movlw	high _currentPos
 25439   001318  22E2               	addwfc	fsr1h,f,c
 25440   00131A  CFDF FFE7          	movff	indf2,indf1
 25441   00131E  D08B               	goto	l1048
 25442   001320                     l20974:
 25443                           
 25444                           ; BSR set to: 1
 25445   001320  0E40               	movlw	low _currentPos
 25446   001322  25DA               	addwf	pollServos@io& (0+255),w,b
 25447   001324  6ED9               	movwf	fsr2l,c
 25448   001326  6ADA               	clrf	fsr2h,c
 25449   001328  0E01               	movlw	high _currentPos
 25450   00132A  22DA               	addwfc	fsr2h,f,c
 25451   00132C  51DA               	movf	pollServos@io& (0+255),w,b
 25452   00132E  0F01               	addlw	low _targetPos
 25453   001330  6EE1               	movwf	fsr1l,c
 25454   001332  6AE2               	clrf	fsr1h,c
 25455   001334  50DE               	movf	postinc2,w,c
 25456   001336  5CE6               	subwf	postinc1,w,c
 25457   001338  B0D8               	btfsc	status,0,c
 25458   00133A  D07D               	goto	l1048
 25459                           
 25460                           ; BSR set to: 1
 25461                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 25462   00133C  0E20               	movlw	low _stepsPerPollSpeed
 25463   00133E  25DA               	addwf	pollServos@io& (0+255),w,b
 25464   001340  6ED9               	movwf	fsr2l,c
 25465   001342  6ADA               	clrf	fsr2h,c
 25466   001344  0E01               	movlw	high _stepsPerPollSpeed
 25467   001346  22DA               	addwfc	fsr2h,f,c
 25468   001348  50DF               	movf	indf2,w,c
 25469   00134A  B4D8               	btfsc	status,2,c
 25470   00134C  D041               	goto	l20984
 25471                           
 25472                           ; BSR set to: 1
 25473                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 25474   00134E  0E40               	movlw	low _currentPos
 25475   001350  25DA               	addwf	pollServos@io& (0+255),w,b
 25476   001352  6ED9               	movwf	fsr2l,c
 25477   001354  6ADA               	clrf	fsr2h,c
 25478   001356  0E01               	movlw	high _currentPos
 25479   001358  22DA               	addwfc	fsr2h,f,c
 25480   00135A  50DF               	movf	indf2,w,c
 25481   00135C  6FCF               	movwf	??_pollServos& (0+255),b
 25482   00135E  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25483   001360  0E20               	movlw	low _stepsPerPollSpeed
 25484   001362  25DA               	addwf	pollServos@io& (0+255),w,b
 25485   001364  6ED9               	movwf	fsr2l,c
 25486   001366  6ADA               	clrf	fsr2h,c
 25487   001368  0E01               	movlw	high _stepsPerPollSpeed
 25488   00136A  22DA               	addwfc	fsr2h,f,c
 25489   00136C  50DF               	movf	indf2,w,c
 25490   00136E  6FD1               	movwf	(??_pollServos+2)& (0+255),b
 25491   001370  51D1               	movf	(??_pollServos+2)& (0+255),w,b
 25492   001372  5FCF               	subwf	??_pollServos& (0+255),f,b
 25493   001374  0E00               	movlw	0
 25494   001376  5BD0               	subwfb	(??_pollServos+1)& (0+255),f,b
 25495   001378  0E40               	movlw	low _currentPos
 25496   00137A  25DA               	addwf	pollServos@io& (0+255),w,b
 25497   00137C  6ED9               	movwf	fsr2l,c
 25498   00137E  6ADA               	clrf	fsr2h,c
 25499   001380  0E01               	movlw	high _currentPos
 25500   001382  22DA               	addwfc	fsr2h,f,c
 25501   001384  50DF               	movf	indf2,w,c
 25502   001386  6FD2               	movwf	(??_pollServos+3)& (0+255),b
 25503   001388  6BD3               	clrf	(??_pollServos+4)& (0+255),b
 25504   00138A  51CF               	movf	??_pollServos& (0+255),w,b
 25505   00138C  5DD2               	subwf	(??_pollServos+3)& (0+255),w,b
 25506   00138E  51D3               	movf	(??_pollServos+4)& (0+255),w,b
 25507   001390  0A80               	xorlw	128
 25508   001392  6FD4               	movwf	(??_pollServos+5)& (0+255),b
 25509   001394  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 25510   001396  0A80               	xorlw	128
 25511   001398  59D4               	subwfb	(??_pollServos+5)& (0+255),w,b
 25512   00139A  B0D8               	btfsc	status,0,c
 25513   00139C  D008               	goto	l20982
 25514                           
 25515                           ; BSR set to: 1
 25516                           ;../servo.c: 467:                                     currentPos[io] = 0;
 25517   00139E  0E40               	movlw	low _currentPos
 25518   0013A0  25DA               	addwf	pollServos@io& (0+255),w,b
 25519   0013A2  6ED9               	movwf	fsr2l,c
 25520   0013A4  6ADA               	clrf	fsr2h,c
 25521   0013A6  0E01               	movlw	high _currentPos
 25522   0013A8  22DA               	addwfc	fsr2h,f,c
 25523   0013AA  6ADF               	clrf	indf2,c
 25524                           
 25525                           ;../servo.c: 468:                                 } else {
 25526   0013AC  D036               	goto	l20990
 25527   0013AE                     l20982:
 25528                           
 25529                           ; BSR set to: 1
 25530                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25531   0013AE  0E20               	movlw	low _stepsPerPollSpeed
 25532   0013B0  25DA               	addwf	pollServos@io& (0+255),w,b
 25533   0013B2  6ED9               	movwf	fsr2l,c
 25534   0013B4  6ADA               	clrf	fsr2h,c
 25535   0013B6  0E01               	movlw	high _stepsPerPollSpeed
 25536   0013B8  22DA               	addwfc	fsr2h,f,c
 25537   0013BA  50DF               	movf	indf2,w,c
 25538   0013BC  6FCF               	movwf	??_pollServos& (0+255),b
 25539   0013BE  0E40               	movlw	low _currentPos
 25540   0013C0  25DA               	addwf	pollServos@io& (0+255),w,b
 25541   0013C2  6ED9               	movwf	fsr2l,c
 25542   0013C4  6ADA               	clrf	fsr2h,c
 25543   0013C6  0E01               	movlw	high _currentPos
 25544   0013C8  22DA               	addwfc	fsr2h,f,c
 25545   0013CA  51CF               	movf	??_pollServos& (0+255),w,b
 25546   0013CC  5EDF               	subwf	indf2,f,c
 25547   0013CE  D025               	goto	l20990
 25548   0013D0                     l20984:
 25549                           
 25550                           ; BSR set to: 1
 25551                           ;../servo.c: 472:                                 pollCount[io]--;
 25552   0013D0  0E84               	movlw	low _pollCount
 25553   0013D2  25DA               	addwf	pollServos@io& (0+255),w,b
 25554   0013D4  6ED9               	movwf	fsr2l,c
 25555   0013D6  6ADA               	clrf	fsr2h,c
 25556   0013D8  0E02               	movlw	high _pollCount
 25557   0013DA  22DA               	addwfc	fsr2h,f,c
 25558   0013DC  06DF               	decf	indf2,f,c
 25559                           
 25560                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 25561   0013DE  0E84               	movlw	low _pollCount
 25562   0013E0  25DA               	addwf	pollServos@io& (0+255),w,b
 25563   0013E2  6ED9               	movwf	fsr2l,c
 25564   0013E4  6ADA               	clrf	fsr2h,c
 25565   0013E6  0E02               	movlw	high _pollCount
 25566   0013E8  22DA               	addwfc	fsr2h,f,c
 25567   0013EA  50DF               	movf	indf2,w,c
 25568   0013EC  A4D8               	btfss	status,2,c
 25569   0013EE  D015               	goto	l20990
 25570                           
 25571                           ; BSR set to: 1
 25572                           ;../servo.c: 474:                                     currentPos[io]--;
 25573   0013F0  0E40               	movlw	low _currentPos
 25574   0013F2  25DA               	addwf	pollServos@io& (0+255),w,b
 25575   0013F4  6ED9               	movwf	fsr2l,c
 25576   0013F6  6ADA               	clrf	fsr2h,c
 25577   0013F8  0E01               	movlw	high _currentPos
 25578   0013FA  22DA               	addwfc	fsr2h,f,c
 25579   0013FC  06DF               	decf	indf2,f,c
 25580                           
 25581                           ; BSR set to: 1
 25582                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25583   0013FE  0E94               	movlw	low _pollsPerStepSpeed
 25584   001400  25DA               	addwf	pollServos@io& (0+255),w,b
 25585   001402  6ED9               	movwf	fsr2l,c
 25586   001404  6ADA               	clrf	fsr2h,c
 25587   001406  0E02               	movlw	high _pollsPerStepSpeed
 25588   001408  22DA               	addwfc	fsr2h,f,c
 25589   00140A  0E84               	movlw	low _pollCount
 25590   00140C  25DA               	addwf	pollServos@io& (0+255),w,b
 25591   00140E  6EE1               	movwf	fsr1l,c
 25592   001410  6AE2               	clrf	fsr1h,c
 25593   001412  0E02               	movlw	high _pollCount
 25594   001414  22E2               	addwfc	fsr1h,f,c
 25595   001416  CFDF FFE7          	movff	indf2,indf1
 25596   00141A                     l20990:
 25597                           
 25598                           ; BSR set to: 1
 25599                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 25600   00141A  51DA               	movf	pollServos@io& (0+255),w,b
 25601   00141C  0F01               	addlw	low _targetPos
 25602   00141E  6ED9               	movwf	fsr2l,c
 25603   001420  6ADA               	clrf	fsr2h,c
 25604   001422  0E40               	movlw	low _currentPos
 25605   001424  25DA               	addwf	pollServos@io& (0+255),w,b
 25606   001426  6EE1               	movwf	fsr1l,c
 25607   001428  6AE2               	clrf	fsr1h,c
 25608   00142A  0E01               	movlw	high _currentPos
 25609   00142C  22E2               	addwfc	fsr1h,f,c
 25610   00142E  50DE               	movf	postinc2,w,c
 25611   001430  5CE6               	subwf	postinc1,w,c
 25612   001432  A0D8               	btfss	status,0,c
 25613   001434  D768               	goto	u21970
 25614   001436                     l1048:
 25615                           
 25616                           ; BSR set to: 1
 25617                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 25618   001436  0E40               	movlw	low _currentPos
 25619   001438  25DA               	addwf	pollServos@io& (0+255),w,b
 25620   00143A  6ED9               	movwf	fsr2l,c
 25621   00143C  6ADA               	clrf	fsr2h,c
 25622   00143E  0E01               	movlw	high _currentPos
 25623   001440  22DA               	addwfc	fsr2h,f,c
 25624   001442  51DA               	movf	pollServos@io& (0+255),w,b
 25625   001444  0F01               	addlw	low _targetPos
 25626   001446  6EE1               	movwf	fsr1l,c
 25627   001448  6AE2               	clrf	fsr1h,c
 25628   00144A  50DE               	movf	postinc2,w,c
 25629   00144C  18E6               	xorwf	postinc1,w,c
 25630   00144E  A4D8               	btfss	status,2,c
 25631   001450  D16C               	goto	l21032
 25632                           
 25633                           ; BSR set to: 1
 25634                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 25635   001452  0E30               	movlw	low _servoState
 25636   001454  25DA               	addwf	pollServos@io& (0+255),w,b
 25637   001456  6ED9               	movwf	fsr2l,c
 25638   001458  6ADA               	clrf	fsr2h,c
 25639   00145A  0E01               	movlw	high _servoState
 25640   00145C  22DA               	addwfc	fsr2h,f,c
 25641   00145E  0E01               	movlw	1
 25642   001460  6EDF               	movwf	indf2,c
 25643                           
 25644                           ; BSR set to: 1
 25645                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 25646   001462  ECED  F059         	call	_tickGet	;wreg free
 25647   001466  0101               	movlb	1	; () banked
 25648   001468  51DA               	movf	pollServos@io& (0+255),w,b
 25649   00146A  0D04               	mullw	4
 25650   00146C  0E00               	movlw	low _ticksWhenStopped
 25651   00146E  24F3               	addwf	243,w,c
 25652   001470  6ED9               	movwf	fsr2l,c
 25653   001472  0E02               	movlw	high _ticksWhenStopped
 25654   001474  20F4               	addwfc	prodh,w,c
 25655   001476  6EDA               	movwf	fsr2h,c
 25656   001478  0100               	movlb	0	; () banked
 25657   00147A  C08D  FFDE         	movff	?_tickGet,postinc2
 25658   00147E  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25659   001482  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25660   001486  C090  FFDE         	movff	?_tickGet+3,postinc2
 25661                           
 25662                           ; BSR set to: 0
 25663                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 25664   00148A  0101               	movlb	1	; () banked
 25665   00148C  51DA               	movf	pollServos@io& (0+255),w,b
 25666   00148E  0D07               	mullw	7
 25667   001490  50F3               	movf	243,w,c
 25668   001492  0F13               	addlw	19
 25669   001494  EC7F  F05D         	call	_getNV
 25670   001498  0E40               	movlw	low _currentPos
 25671   00149A  0101               	movlb	1	; () banked
 25672   00149C  25DA               	addwf	pollServos@io& (0+255),w,b
 25673   00149E  6ED9               	movwf	fsr2l,c
 25674   0014A0  6ADA               	clrf	fsr2h,c
 25675   0014A2  0E01               	movlw	high _currentPos
 25676   0014A4  22DA               	addwfc	fsr2h,f,c
 25677   0014A6  50DF               	movf	indf2,w,c
 25678   0014A8  6FCF               	movwf	??_pollServos& (0+255),b
 25679   0014AA  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25680   0014AC  0100               	movlb	0	; () banked
 25681   0014AE  518D               	movf	?_getNV& (0+255),w,b
 25682   0014B0  0101               	movlb	1	; () banked
 25683   0014B2  19CF               	xorwf	??_pollServos& (0+255),w,b
 25684   0014B4  E11A               	bnz	l21002
 25685   0014B6  0100               	movlb	0	; () banked
 25686   0014B8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25687   0014BA  0101               	movlb	1	; () banked
 25688   0014BC  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25689   0014BE  A4D8               	btfss	status,2,c
 25690   0014C0  D014               	goto	l21002
 25691                           
 25692                           ; BSR set to: 1
 25693                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25694   0014C2  51DA               	movf	pollServos@io& (0+255),w,b
 25695   0014C4  0D07               	mullw	7
 25696   0014C6  50F3               	movf	243,w,c
 25697   0014C8  0F11               	addlw	17
 25698   0014CA  EC7F  F05D         	call	_getNV
 25699   0014CE  0100               	movlb	0	; () banked
 25700   0014D0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25701   0014D2  D002               	goto	u22050
 25702   0014D4  0E01               	movlw	1
 25703   0014D6  D001               	goto	u22060
 25704   0014D8                     u22050:
 25705   0014D8  0E00               	movlw	0
 25706   0014DA                     u22060:
 25707   0014DA  0101               	movlb	1	; () banked
 25708   0014DC  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 25709   0014DE  51DA               	movf	pollServos@io& (0+255),w,b
 25710   0014E0  0D04               	mullw	4
 25711   0014E2  50F3               	movf	243,w,c
 25712   0014E4  0F08               	addlw	8
 25713   0014E6  EC28  F04E         	call	_sendProducedEvent
 25714   0014EA                     l21002:
 25715                           
 25716                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 25717   0014EA  0101               	movlb	1	; () banked
 25718   0014EC  51DA               	movf	pollServos@io& (0+255),w,b
 25719   0014EE  0D07               	mullw	7
 25720   0014F0  50F3               	movf	243,w,c
 25721   0014F2  0F14               	addlw	20
 25722   0014F4  EC7F  F05D         	call	_getNV
 25723   0014F8  0E40               	movlw	low _currentPos
 25724   0014FA  0101               	movlb	1	; () banked
 25725   0014FC  25DA               	addwf	pollServos@io& (0+255),w,b
 25726   0014FE  6ED9               	movwf	fsr2l,c
 25727   001500  6ADA               	clrf	fsr2h,c
 25728   001502  0E01               	movlw	high _currentPos
 25729   001504  22DA               	addwfc	fsr2h,f,c
 25730   001506  50DF               	movf	indf2,w,c
 25731   001508  6FCF               	movwf	??_pollServos& (0+255),b
 25732   00150A  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25733   00150C  0100               	movlb	0	; () banked
 25734   00150E  518D               	movf	?_getNV& (0+255),w,b
 25735   001510  0101               	movlb	1	; () banked
 25736   001512  19CF               	xorwf	??_pollServos& (0+255),w,b
 25737   001514  E11A               	bnz	l21006
 25738   001516  0100               	movlb	0	; () banked
 25739   001518  518E               	movf	(?_getNV+1)& (0+255),w,b
 25740   00151A  0101               	movlb	1	; () banked
 25741   00151C  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25742   00151E  A4D8               	btfss	status,2,c
 25743   001520  D014               	goto	l21006
 25744                           
 25745                           ; BSR set to: 1
 25746                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25747   001522  51DA               	movf	pollServos@io& (0+255),w,b
 25748   001524  0D07               	mullw	7
 25749   001526  50F3               	movf	243,w,c
 25750   001528  0F11               	addlw	17
 25751   00152A  EC7F  F05D         	call	_getNV
 25752   00152E  0100               	movlb	0	; () banked
 25753   001530  BD8D               	btfsc	?_getNV& (0+255),6,b
 25754   001532  D002               	goto	u22080
 25755   001534  0E01               	movlw	1
 25756   001536  D001               	goto	u22090
 25757   001538                     u22080:
 25758   001538  0E00               	movlw	0
 25759   00153A                     u22090:
 25760   00153A  0101               	movlb	1	; () banked
 25761   00153C  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 25762   00153E  51DA               	movf	pollServos@io& (0+255),w,b
 25763   001540  0D04               	mullw	4
 25764   001542  50F3               	movf	243,w,c
 25765   001544  0F09               	addlw	9
 25766   001546  EC28  F04E         	call	_sendProducedEvent
 25767   00154A                     l21006:
 25768                           
 25769                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 25770   00154A  0101               	movlb	1	; () banked
 25771   00154C  51DA               	movf	pollServos@io& (0+255),w,b
 25772   00154E  0D07               	mullw	7
 25773   001550  50F3               	movf	243,w,c
 25774   001552  0F15               	addlw	21
 25775   001554  EC7F  F05D         	call	_getNV
 25776   001558  0E40               	movlw	low _currentPos
 25777   00155A  0101               	movlb	1	; () banked
 25778   00155C  25DA               	addwf	pollServos@io& (0+255),w,b
 25779   00155E  6ED9               	movwf	fsr2l,c
 25780   001560  6ADA               	clrf	fsr2h,c
 25781   001562  0E01               	movlw	high _currentPos
 25782   001564  22DA               	addwfc	fsr2h,f,c
 25783   001566  50DF               	movf	indf2,w,c
 25784   001568  6FCF               	movwf	??_pollServos& (0+255),b
 25785   00156A  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25786   00156C  0100               	movlb	0	; () banked
 25787   00156E  518D               	movf	?_getNV& (0+255),w,b
 25788   001570  0101               	movlb	1	; () banked
 25789   001572  19CF               	xorwf	??_pollServos& (0+255),w,b
 25790   001574  E11A               	bnz	l21010
 25791   001576  0100               	movlb	0	; () banked
 25792   001578  518E               	movf	(?_getNV+1)& (0+255),w,b
 25793   00157A  0101               	movlb	1	; () banked
 25794   00157C  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25795   00157E  A4D8               	btfss	status,2,c
 25796   001580  D014               	goto	l21010
 25797                           
 25798                           ; BSR set to: 1
 25799                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25800   001582  51DA               	movf	pollServos@io& (0+255),w,b
 25801   001584  0D07               	mullw	7
 25802   001586  50F3               	movf	243,w,c
 25803   001588  0F11               	addlw	17
 25804   00158A  EC7F  F05D         	call	_getNV
 25805   00158E  0100               	movlb	0	; () banked
 25806   001590  BD8D               	btfsc	?_getNV& (0+255),6,b
 25807   001592  D002               	goto	u22110
 25808   001594  0E01               	movlw	1
 25809   001596  D001               	goto	u22120
 25810   001598                     u22110:
 25811   001598  0E00               	movlw	0
 25812   00159A                     u22120:
 25813   00159A  0101               	movlb	1	; () banked
 25814   00159C  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 25815   00159E  51DA               	movf	pollServos@io& (0+255),w,b
 25816   0015A0  0D04               	mullw	4
 25817   0015A2  50F3               	movf	243,w,c
 25818   0015A4  0F0A               	addlw	10
 25819   0015A6  EC28  F04E         	call	_sendProducedEvent
 25820   0015AA                     l21010:
 25821                           
 25822                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 25823   0015AA  0101               	movlb	1	; () banked
 25824   0015AC  51DA               	movf	pollServos@io& (0+255),w,b
 25825   0015AE  0D07               	mullw	7
 25826   0015B0  50F3               	movf	243,w,c
 25827   0015B2  0F16               	addlw	22
 25828   0015B4  EC7F  F05D         	call	_getNV
 25829   0015B8  0E40               	movlw	low _currentPos
 25830   0015BA  0101               	movlb	1	; () banked
 25831   0015BC  25DA               	addwf	pollServos@io& (0+255),w,b
 25832   0015BE  6ED9               	movwf	fsr2l,c
 25833   0015C0  6ADA               	clrf	fsr2h,c
 25834   0015C2  0E01               	movlw	high _currentPos
 25835   0015C4  22DA               	addwfc	fsr2h,f,c
 25836   0015C6  50DF               	movf	indf2,w,c
 25837   0015C8  6FCF               	movwf	??_pollServos& (0+255),b
 25838   0015CA  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25839   0015CC  0100               	movlb	0	; () banked
 25840   0015CE  518D               	movf	?_getNV& (0+255),w,b
 25841   0015D0  0101               	movlb	1	; () banked
 25842   0015D2  19CF               	xorwf	??_pollServos& (0+255),w,b
 25843   0015D4  E11A               	bnz	l21014
 25844   0015D6  0100               	movlb	0	; () banked
 25845   0015D8  518E               	movf	(?_getNV+1)& (0+255),w,b
 25846   0015DA  0101               	movlb	1	; () banked
 25847   0015DC  19D0               	xorwf	(??_pollServos+1)& (0+255),w,b
 25848   0015DE  A4D8               	btfss	status,2,c
 25849   0015E0  D014               	goto	l21014
 25850                           
 25851                           ; BSR set to: 1
 25852                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25853   0015E2  51DA               	movf	pollServos@io& (0+255),w,b
 25854   0015E4  0D07               	mullw	7
 25855   0015E6  50F3               	movf	243,w,c
 25856   0015E8  0F11               	addlw	17
 25857   0015EA  EC7F  F05D         	call	_getNV
 25858   0015EE  0100               	movlb	0	; () banked
 25859   0015F0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25860   0015F2  D002               	goto	u22140
 25861   0015F4  0E01               	movlw	1
 25862   0015F6  D001               	goto	u22150
 25863   0015F8                     u22140:
 25864   0015F8  0E00               	movlw	0
 25865   0015FA                     u22150:
 25866   0015FA  0101               	movlb	1	; () banked
 25867   0015FC  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 25868   0015FE  51DA               	movf	pollServos@io& (0+255),w,b
 25869   001600  0D04               	mullw	4
 25870   001602  50F3               	movf	243,w,c
 25871   001604  0F0B               	addlw	11
 25872   001606  EC28  F04E         	call	_sendProducedEvent
 25873   00160A                     l21014:
 25874                           
 25875                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25876   00160A  0EDE               	movlw	222
 25877   00160C  0101               	movlb	1	; () banked
 25878   00160E  25DA               	addwf	pollServos@io& (0+255),w,b
 25879   001610  6FCF               	movwf	??_pollServos& (0+255),b
 25880   001612  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25881   001614  0E03               	movlw	3
 25882   001616  23D0               	addwfc	(??_pollServos+1)& (0+255),f,b
 25883   001618  C1CF  F0A4         	movff	??_pollServos,writeNVM@index
 25884   00161C  C1D0  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25885   001620  0100               	movlb	0	; () banked
 25886   001622  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25887   001624  0E40               	movlw	low _currentPos
 25888   001626  0101               	movlb	1	; () banked
 25889   001628  25DA               	addwf	pollServos@io& (0+255),w,b
 25890   00162A  6ED9               	movwf	fsr2l,c
 25891   00162C  6ADA               	clrf	fsr2h,c
 25892   00162E  0E01               	movlw	high _currentPos
 25893   001630  22DA               	addwfc	fsr2h,f,c
 25894   001632  50DF               	movf	indf2,w,c
 25895   001634  0100               	movlb	0	; () banked
 25896   001636  6FA7               	movwf	writeNVM@value& (0+255),b
 25897   001638  0E00               	movlw	0
 25898   00163A  EC91  F05B         	call	_writeNVM
 25899   00163E  D075               	goto	l21032
 25900   001640                     l21018:
 25901                           
 25902                           ; BSR set to: 0
 25903   001640  0E30               	movlw	low _servoState
 25904   001642  0101               	movlb	1	; () banked
 25905   001644  25DA               	addwf	pollServos@io& (0+255),w,b
 25906   001646  6ED9               	movwf	fsr2l,c
 25907   001648  6ADA               	clrf	fsr2h,c
 25908   00164A  0E01               	movlw	high _servoState
 25909   00164C  22DA               	addwfc	fsr2h,f,c
 25910   00164E  50DF               	movf	indf2,w,c
 25911   001650  6FCF               	movwf	??_pollServos& (0+255),b
 25912   001652  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 25913                           
 25914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25915                           ; Switch size 1, requested type "simple"
 25916                           ; Number of cases is 1, Range of values is 0 to 0
 25917                           ; switch strategies available:
 25918                           ; Name         Instructions Cycles
 25919                           ; simple_byte            4     3 (average)
 25920                           ;	Chosen strategy is simple_byte
 25921   001654  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 25922   001656  0A00               	xorlw	0	; case 0
 25923   001658  A4D8               	btfss	status,2,c
 25924   00165A  D067               	goto	l21032
 25925                           
 25926                           ; BSR set to: 1
 25927                           ; Switch size 1, requested type "simple"
 25928                           ; Number of cases is 4, Range of values is 0 to 3
 25929                           ; switch strategies available:
 25930                           ; Name         Instructions Cycles
 25931                           ; simple_byte           13     7 (average)
 25932                           ;	Chosen strategy is simple_byte
 25933   00165C  51CF               	movf	??_pollServos& (0+255),w,b
 25934   00165E  0A00               	xorlw	0	; case 0
 25935   001660  B4D8               	btfsc	status,2,c
 25936   001662  D063               	goto	l21032
 25937   001664  0A01               	xorlw	1	; case 1
 25938   001666  B4D8               	btfsc	status,2,c
 25939   001668  D060               	goto	l21032
 25940   00166A  0A03               	xorlw	3	; case 2
 25941   00166C  B4D8               	btfsc	status,2,c
 25942   00166E  D5BF               	goto	l20954
 25943   001670  0A01               	xorlw	1	; case 3
 25944   001672  B4D8               	btfsc	status,2,c
 25945   001674  D500               	goto	l20936
 25946   001676  D059               	goto	l21032
 25947   001678                     l21022:
 25948                           
 25949                           ; BSR set to: 1
 25950   001678  51DA               	movf	pollServos@io& (0+255),w,b
 25951   00167A  0D07               	mullw	7
 25952   00167C  50F3               	movf	243,w,c
 25953   00167E  0F10               	addlw	16
 25954   001680  EC7F  F05D         	call	_getNV
 25955                           
 25956                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25957                           ; Switch size 1, requested type "simple"
 25958                           ; Number of cases is 1, Range of values is 0 to 0
 25959                           ; switch strategies available:
 25960                           ; Name         Instructions Cycles
 25961                           ; simple_byte            4     3 (average)
 25962                           ;	Chosen strategy is simple_byte
 25963   001684  0100               	movlb	0	; () banked
 25964   001686  518E               	movf	(?_getNV+1)& (0+255),w,b
 25965   001688  0A00               	xorlw	0	; case 0
 25966   00168A  A4D8               	btfss	status,2,c
 25967   00168C  D04E               	goto	l21032
 25968                           
 25969                           ; BSR set to: 0
 25970                           ; Switch size 1, requested type "simple"
 25971                           ; Number of cases is 3, Range of values is 2 to 4
 25972                           ; switch strategies available:
 25973                           ; Name         Instructions Cycles
 25974                           ; simple_byte           10     6 (average)
 25975                           ;	Chosen strategy is simple_byte
 25976   00168E  518D               	movf	?_getNV& (0+255),w,b
 25977   001690  0A02               	xorlw	2	; case 2
 25978   001692  B4D8               	btfsc	status,2,c
 25979   001694  EF2D  F004         	goto	l20794
 25980   001698  0A01               	xorlw	1	; case 3
 25981   00169A  B4D8               	btfsc	status,2,c
 25982   00169C  D4D0               	goto	l20934
 25983   00169E  0A07               	xorlw	7	; case 4
 25984   0016A0  B4D8               	btfsc	status,2,c
 25985   0016A2  D7CE               	goto	l21018
 25986                           
 25987                           ; BSR set to: 1
 25988                           ;../servo.c: 507:         switch (servoState[io]) {
 25989   0016A4  D042               	goto	l21032
 25990   0016A6                     l21024:
 25991                           
 25992                           ; BSR set to: 1
 25993                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 25994   0016A6  51DA               	movf	pollServos@io& (0+255),w,b
 25995   0016A8  0D07               	mullw	7
 25996   0016AA  50F3               	movf	243,w,c
 25997   0016AC  0F11               	addlw	17
 25998   0016AE  EC7F  F05D         	call	_getNV
 25999   0016B2  0100               	movlb	0	; () banked
 26000   0016B4  A38D               	btfss	?_getNV& (0+255),1,b
 26001   0016B6  D051               	goto	l21034
 26002                           
 26003                           ; BSR set to: 0
 26004                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 26005   0016B8  0101               	movlb	1	; () banked
 26006   0016BA  51DA               	movf	pollServos@io& (0+255),w,b
 26007   0016BC  0D04               	mullw	4
 26008   0016BE  0E00               	movlw	low _ticksWhenStopped
 26009   0016C0  24F3               	addwf	243,w,c
 26010   0016C2  6ED9               	movwf	fsr2l,c
 26011   0016C4  0E02               	movlw	high _ticksWhenStopped
 26012   0016C6  20F4               	addwfc	prodh,w,c
 26013   0016C8  6EDA               	movwf	fsr2h,c
 26014   0016CA  CFDE F1CF          	movff	postinc2,??_pollServos
 26015   0016CE  CFDE F1D0          	movff	postinc2,??_pollServos+1
 26016   0016D2  CFDE F1D1          	movff	postinc2,??_pollServos+2
 26017   0016D6  CFDE F1D2          	movff	postinc2,??_pollServos+3
 26018   0016DA  ECED  F059         	call	_tickGet	;wreg free
 26019   0016DE  0101               	movlb	1	; () banked
 26020   0016E0  51CF               	movf	??_pollServos& (0+255),w,b
 26021   0016E2  0100               	movlb	0	; () banked
 26022   0016E4  5D8D               	subwf	?_tickGet& (0+255),w,b
 26023   0016E6  0101               	movlb	1	; () banked
 26024   0016E8  6FD3               	movwf	(??_pollServos+4)& (0+255),b
 26025   0016EA  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 26026   0016EC  0100               	movlb	0	; () banked
 26027   0016EE  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 26028   0016F0  0101               	movlb	1	; () banked
 26029   0016F2  6FD4               	movwf	(??_pollServos+5)& (0+255),b
 26030   0016F4  51D1               	movf	(??_pollServos+2)& (0+255),w,b
 26031   0016F6  0100               	movlb	0	; () banked
 26032   0016F8  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 26033   0016FA  0101               	movlb	1	; () banked
 26034   0016FC  6FD5               	movwf	(??_pollServos+6)& (0+255),b
 26035   0016FE  51D2               	movf	(??_pollServos+3)& (0+255),w,b
 26036   001700  0100               	movlb	0	; () banked
 26037   001702  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 26038   001704  0101               	movlb	1	; () banked
 26039   001706  6FD6               	movwf	(??_pollServos+7)& (0+255),b
 26040   001708  51D6               	movf	(??_pollServos+7)& (0+255),w,b
 26041   00170A  11D5               	iorwf	(??_pollServos+6)& (0+255),w,b
 26042   00170C  E106               	bnz	u22170
 26043   00170E  0E25               	movlw	37
 26044   001710  5DD3               	subwf	(??_pollServos+4)& (0+255),w,b
 26045   001712  0EF4               	movlw	244
 26046   001714  59D4               	subwfb	(??_pollServos+5)& (0+255),w,b
 26047   001716  A0D8               	btfss	status,0,c
 26048   001718  D020               	goto	l21034
 26049   00171A                     u22170:
 26050                           
 26051                           ; BSR set to: 1
 26052                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 26053   00171A  0E30               	movlw	low _servoState
 26054   00171C  25DA               	addwf	pollServos@io& (0+255),w,b
 26055   00171E  6ED9               	movwf	fsr2l,c
 26056   001720  6ADA               	clrf	fsr2h,c
 26057   001722  0E01               	movlw	high _servoState
 26058   001724  22DA               	addwfc	fsr2h,f,c
 26059   001726  6ADF               	clrf	indf2,c
 26060   001728  D018               	goto	l21034
 26061   00172A                     l21032:
 26062   00172A  0E30               	movlw	low _servoState
 26063   00172C  0101               	movlb	1	; () banked
 26064   00172E  25DA               	addwf	pollServos@io& (0+255),w,b
 26065   001730  6ED9               	movwf	fsr2l,c
 26066   001732  6ADA               	clrf	fsr2h,c
 26067   001734  0E01               	movlw	high _servoState
 26068   001736  22DA               	addwfc	fsr2h,f,c
 26069   001738  50DF               	movf	indf2,w,c
 26070   00173A  6FCF               	movwf	??_pollServos& (0+255),b
 26071   00173C  6BD0               	clrf	(??_pollServos+1)& (0+255),b
 26072                           
 26073                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26074                           ; Switch size 1, requested type "simple"
 26075                           ; Number of cases is 1, Range of values is 0 to 0
 26076                           ; switch strategies available:
 26077                           ; Name         Instructions Cycles
 26078                           ; simple_byte            4     3 (average)
 26079                           ;	Chosen strategy is simple_byte
 26080   00173E  51D0               	movf	(??_pollServos+1)& (0+255),w,b
 26081   001740  0A00               	xorlw	0	; case 0
 26082   001742  A4D8               	btfss	status,2,c
 26083   001744  D00A               	goto	l21034
 26084                           
 26085                           ; BSR set to: 1
 26086                           ; Switch size 1, requested type "simple"
 26087                           ; Number of cases is 4, Range of values is 0 to 3
 26088                           ; switch strategies available:
 26089                           ; Name         Instructions Cycles
 26090                           ; simple_byte           13     7 (average)
 26091                           ;	Chosen strategy is simple_byte
 26092   001746  51CF               	movf	??_pollServos& (0+255),w,b
 26093   001748  0A00               	xorlw	0	; case 0
 26094   00174A  B4D8               	btfsc	status,2,c
 26095   00174C  D006               	goto	l21034
 26096   00174E  0A01               	xorlw	1	; case 1
 26097   001750  B4D8               	btfsc	status,2,c
 26098   001752  D7A9               	goto	l21024
 26099   001754  0A03               	xorlw	3	; case 2
 26100   001756  A4D8               	btfss	status,2,c
 26101   001758  0A01               	xorlw	1	; case 3
 26102   00175A                     l21034:
 26103                           
 26104                           ;../servo.c: 526:     }
 26105   00175A  0101               	movlb	1	; () banked
 26106   00175C  2BDA               	incf	pollServos@io& (0+255),f,b
 26107                           
 26108                           ; BSR set to: 1
 26109   00175E  0E0F               	movlw	15
 26110   001760  65DA               	cpfsgt	pollServos@io& (0+255),b
 26111   001762  D78A               	goto	l21022
 26112   001764  0012               	return	
 26113   001766                     __end_of_pollServos:
 26114                           	callstack 0
 26115                           
 26116 ;; *************** function _initBounce *****************
 26117 ;; Defined at:
 26118 ;;		line 89 in file "../bounce.c"
 26119 ;; Parameters:    Size  Location     Type
 26120 ;;  io              1    wreg     unsigned char 
 26121 ;; Auto vars:     Size  Location     Type
 26122 ;;  io              1   45[BANK0 ] unsigned char 
 26123 ;; Return value:  Size  Location     Type
 26124 ;;                  1    wreg      void 
 26125 ;; Registers used:
 26126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26127 ;; Tracked objects:
 26128 ;;		On entry : 0/0
 26129 ;;		On exit  : 0/0
 26130 ;;		Unchanged: 0/0
 26131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26135 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26136 ;;Total ram usage:        1 bytes
 26137 ;; Hardware stack levels used: 1
 26138 ;; Hardware stack levels required when called: 12
 26139 ;; This function calls:
 26140 ;;		Nothing
 26141 ;; This function is called by:
 26142 ;;		_pollServos
 26143 ;; This function uses a non-reentrant model
 26144 ;;
 26145                           
 26146                           	psect	text95
 26147   00C046                     __ptext95:
 26148                           	callstack 0
 26149   00C046                     _initBounce:
 26150                           	callstack 15
 26151                           
 26152                           ; BSR set to: 1
 26153                           ;incstack = 0
 26154                           ;initBounce@io stored from wreg
 26155   00C046  0100               	movlb	0	; () banked
 26156   00C048  6F8D               	movwf	initBounce@io& (0+255),b
 26157                           
 26158                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 26159   00C04A  0E64               	movlw	low _bounceState
 26160   00C04C  0100               	movlb	0	; () banked
 26161   00C04E  258D               	addwf	initBounce@io& (0+255),w,b
 26162   00C050  6ED9               	movwf	fsr2l,c
 26163   00C052  6ADA               	clrf	fsr2h,c
 26164   00C054  0E02               	movlw	high _bounceState
 26165   00C056  22DA               	addwfc	fsr2h,f,c
 26166   00C058  6ADF               	clrf	indf2,c
 26167                           
 26168                           ; BSR set to: 0
 26169                           ;../bounce.c: 91:     speed[io] = 0;
 26170   00C05A  518D               	movf	initBounce@io& (0+255),w,b
 26171   00C05C  0D02               	mullw	2
 26172   00C05E  0E00               	movlw	low _speed
 26173   00C060  24F3               	addwf	243,w,c
 26174   00C062  6ED9               	movwf	fsr2l,c
 26175   00C064  0E01               	movlw	high _speed
 26176   00C066  20F4               	addwfc	prodh,w,c
 26177   00C068  6EDA               	movwf	fsr2h,c
 26178   00C06A  6ADE               	clrf	postinc2,c
 26179   00C06C  6ADD               	clrf	postdec2,c
 26180                           
 26181                           ; BSR set to: 0
 26182   00C06E  0012               	return		;funcret
 26183   00C070                     __end_of_initBounce:
 26184                           	callstack 0
 26185                           
 26186 ;; *************** function _bounceUp *****************
 26187 ;; Defined at:
 26188 ;;		line 161 in file "../bounce.c"
 26189 ;; Parameters:    Size  Location     Type
 26190 ;;  io              1    wreg     unsigned char 
 26191 ;; Auto vars:     Size  Location     Type
 26192 ;;  io              1   71[BANK0 ] unsigned char 
 26193 ;;  midway          1   70[BANK0 ] unsigned char 
 26194 ;;  reversed        1   69[BANK0 ] enum E12700
 26195 ;; Return value:  Size  Location     Type
 26196 ;;                  1    wreg      enum E12700
 26197 ;; Registers used:
 26198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26199 ;; Tracked objects:
 26200 ;;		On entry : 0/0
 26201 ;;		On exit  : 0/0
 26202 ;;		Unchanged: 0/0
 26203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26205 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26206 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26207 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26208 ;;Total ram usage:        9 bytes
 26209 ;; Hardware stack levels used: 1
 26210 ;; Hardware stack levels required when called: 13
 26211 ;; This function calls:
 26212 ;;		___awdiv
 26213 ;;		_getNV
 26214 ;; This function is called by:
 26215 ;;		_pollServos
 26216 ;; This function uses a non-reentrant model
 26217 ;;
 26218                           
 26219                           	psect	text96
 26220   005BDC                     __ptext96:
 26221                           	callstack 0
 26222   005BDC                     _bounceUp:
 26223                           	callstack 14
 26224                           
 26225                           ; BSR set to: 0
 26226                           ;incstack = 0
 26227                           ;bounceUp@io stored from wreg
 26228   005BDC  0100               	movlb	0	; () banked
 26229   005BDE  6FA7               	movwf	bounceUp@io& (0+255),b
 26230                           
 26231                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 26232   005BE0  0100               	movlb	0	; () banked
 26233   005BE2  51A7               	movf	bounceUp@io& (0+255),w,b
 26234   005BE4  0D07               	mullw	7
 26235   005BE6  50F3               	movf	243,w,c
 26236   005BE8  0F12               	addlw	18
 26237   005BEA  EC7F  F05D         	call	_getNV
 26238   005BEE  C08D  F09F         	movff	?_getNV,??_bounceUp
 26239   005BF2  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 26240   005BF6  0100               	movlb	0	; () banked
 26241   005BF8  51A7               	movf	bounceUp@io& (0+255),w,b
 26242   005BFA  0D07               	mullw	7
 26243   005BFC  50F3               	movf	243,w,c
 26244   005BFE  0F13               	addlw	19
 26245   005C00  EC7F  F05D         	call	_getNV
 26246   005C04  0100               	movlb	0	; () banked
 26247   005C06  518D               	movf	?_getNV& (0+255),w,b
 26248   005C08  5D9F               	subwf	??_bounceUp& (0+255),w,b
 26249   005C0A  B0D8               	btfsc	status,0,c
 26250   005C0C  D002               	goto	u20380
 26251   005C0E  0E01               	movlw	1
 26252   005C10  D001               	goto	u20390
 26253   005C12                     u20380:
 26254   005C12  0E00               	movlw	0
 26255   005C14                     u20390:
 26256   005C14  6FA5               	movwf	bounceUp@reversed& (0+255),b
 26257                           
 26258                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 26259   005C16  D116               	goto	l19912
 26260   005C18                     l19862:
 26261                           
 26262                           ; BSR set to: 0
 26263                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 26264   005C18  51A7               	movf	bounceUp@io& (0+255),w,b
 26265   005C1A  0D07               	mullw	7
 26266   005C1C  50F3               	movf	243,w,c
 26267   005C1E  0F12               	addlw	18
 26268   005C20  EC7F  F05D         	call	_getNV
 26269   005C24  0100               	movlb	0	; () banked
 26270   005C26  518D               	movf	?_getNV& (0+255),w,b
 26271   005C28  6F97               	movwf	___awdiv@dividend& (0+255),b
 26272   005C2A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26273   005C2C  0E00               	movlw	0
 26274   005C2E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26275   005C30  0E02               	movlw	2
 26276   005C32  6F99               	movwf	___awdiv@divisor& (0+255),b
 26277   005C34  ECCE  F052         	call	___awdiv	;wreg free
 26278   005C38  C097  F09F         	movff	?___awdiv,??_bounceUp
 26279   005C3C  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 26280   005C40  0100               	movlb	0	; () banked
 26281   005C42  51A7               	movf	bounceUp@io& (0+255),w,b
 26282   005C44  0D07               	mullw	7
 26283   005C46  50F3               	movf	243,w,c
 26284   005C48  0F13               	addlw	19
 26285   005C4A  EC7F  F05D         	call	_getNV
 26286   005C4E  0100               	movlb	0	; () banked
 26287   005C50  518D               	movf	?_getNV& (0+255),w,b
 26288   005C52  6F97               	movwf	___awdiv@dividend& (0+255),b
 26289   005C54  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 26290   005C56  0E00               	movlw	0
 26291   005C58  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26292   005C5A  0E02               	movlw	2
 26293   005C5C  6F99               	movwf	___awdiv@divisor& (0+255),b
 26294   005C5E  ECCE  F052         	call	___awdiv	;wreg free
 26295   005C62  0100               	movlb	0	; () banked
 26296   005C64  5197               	movf	?___awdiv& (0+255),w,b
 26297   005C66  259F               	addwf	??_bounceUp& (0+255),w,b
 26298   005C68  6FA6               	movwf	bounceUp@midway& (0+255),b
 26299                           
 26300                           ; BSR set to: 0
 26301                           ;../bounce.c: 169:         if (reversed) {
 26302   005C6A  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26303   005C6C  B4D8               	btfsc	status,2,c
 26304   005C6E  D028               	goto	l19874
 26305                           
 26306                           ; BSR set to: 0
 26307                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26308   005C70  51A7               	movf	bounceUp@io& (0+255),w,b
 26309   005C72  0D07               	mullw	7
 26310   005C74  50F3               	movf	243,w,c
 26311   005C76  0F15               	addlw	21
 26312   005C78  EC7F  F05D         	call	_getNV
 26313   005C7C  0E40               	movlw	low _currentPos
 26314   005C7E  0100               	movlb	0	; () banked
 26315   005C80  25A7               	addwf	bounceUp@io& (0+255),w,b
 26316   005C82  6ED9               	movwf	fsr2l,c
 26317   005C84  6ADA               	clrf	fsr2h,c
 26318   005C86  0E01               	movlw	high _currentPos
 26319   005C88  22DA               	addwfc	fsr2h,f,c
 26320   005C8A  518D               	movf	?_getNV& (0+255),w,b
 26321   005C8C  5EDF               	subwf	indf2,f,c
 26322                           
 26323                           ; BSR set to: 0
 26324                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 26325   005C8E  0E40               	movlw	low _currentPos
 26326   005C90  25A7               	addwf	bounceUp@io& (0+255),w,b
 26327   005C92  6ED9               	movwf	fsr2l,c
 26328   005C94  6ADA               	clrf	fsr2h,c
 26329   005C96  0E01               	movlw	high _currentPos
 26330   005C98  22DA               	addwfc	fsr2h,f,c
 26331   005C9A  50DE               	movf	postinc2,w,c
 26332   005C9C  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 26333   005C9E  A0D8               	btfss	status,0,c
 26334   005CA0  D0E9               	goto	l19914
 26335                           
 26336                           ; BSR set to: 0
 26337                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 26338   005CA2  0E64               	movlw	low _bounceState
 26339   005CA4  25A7               	addwf	bounceUp@io& (0+255),w,b
 26340   005CA6  6ED9               	movwf	fsr2l,c
 26341   005CA8  6ADA               	clrf	fsr2h,c
 26342   005CAA  0E02               	movlw	high _bounceState
 26343   005CAC  22DA               	addwfc	fsr2h,f,c
 26344   005CAE  0E01               	movlw	1
 26345   005CB0  6EDF               	movwf	indf2,c
 26346                           
 26347                           ; BSR set to: 0
 26348                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26349   005CB2  51A7               	movf	bounceUp@io& (0+255),w,b
 26350   005CB4  0D07               	mullw	7
 26351   005CB6  50F3               	movf	243,w,c
 26352   005CB8  0F16               	addlw	22
 26353   005CBA  EC7F  F05D         	call	_getNV
 26354   005CBE  D027               	goto	L7
 26355   005CC0                     l19874:
 26356                           
 26357                           ; BSR set to: 0
 26358                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26359   005CC0  51A7               	movf	bounceUp@io& (0+255),w,b
 26360   005CC2  0D07               	mullw	7
 26361   005CC4  50F3               	movf	243,w,c
 26362   005CC6  0F15               	addlw	21
 26363   005CC8  EC7F  F05D         	call	_getNV
 26364   005CCC  0E40               	movlw	low _currentPos
 26365   005CCE  0100               	movlb	0	; () banked
 26366   005CD0  25A7               	addwf	bounceUp@io& (0+255),w,b
 26367   005CD2  6ED9               	movwf	fsr2l,c
 26368   005CD4  6ADA               	clrf	fsr2h,c
 26369   005CD6  0E01               	movlw	high _currentPos
 26370   005CD8  22DA               	addwfc	fsr2h,f,c
 26371   005CDA  518D               	movf	?_getNV& (0+255),w,b
 26372   005CDC  26DF               	addwf	indf2,f,c
 26373                           
 26374                           ; BSR set to: 0
 26375                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 26376   005CDE  0E40               	movlw	low _currentPos
 26377   005CE0  25A7               	addwf	bounceUp@io& (0+255),w,b
 26378   005CE2  6ED9               	movwf	fsr2l,c
 26379   005CE4  6ADA               	clrf	fsr2h,c
 26380   005CE6  0E01               	movlw	high _currentPos
 26381   005CE8  22DA               	addwfc	fsr2h,f,c
 26382   005CEA  51A6               	movf	bounceUp@midway& (0+255),w,b
 26383   005CEC  5CDE               	subwf	postinc2,w,c
 26384   005CEE  A0D8               	btfss	status,0,c
 26385   005CF0  D0C1               	goto	l19914
 26386                           
 26387                           ; BSR set to: 0
 26388                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 26389   005CF2  0E64               	movlw	low _bounceState
 26390   005CF4  25A7               	addwf	bounceUp@io& (0+255),w,b
 26391   005CF6  6ED9               	movwf	fsr2l,c
 26392   005CF8  6ADA               	clrf	fsr2h,c
 26393   005CFA  0E02               	movlw	high _bounceState
 26394   005CFC  22DA               	addwfc	fsr2h,f,c
 26395   005CFE  0E01               	movlw	1
 26396   005D00  6EDF               	movwf	indf2,c
 26397                           
 26398                           ; BSR set to: 0
 26399                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 26400   005D02  51A7               	movf	bounceUp@io& (0+255),w,b
 26401   005D04  0D07               	mullw	7
 26402   005D06  50F3               	movf	243,w,c
 26403   005D08  0F16               	addlw	22
 26404   005D0A  EC7F  F05D         	call	_getNV
 26405   005D0E                     L7:
 26406   005D0E  0100               	movlb	0	; () banked
 26407   005D10  518D               	movf	?_getNV& (0+255),w,b
 26408   005D12  6F9F               	movwf	??_bounceUp& (0+255),b
 26409   005D14  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26410   005D16  51A7               	movf	bounceUp@io& (0+255),w,b
 26411   005D18  0D02               	mullw	2
 26412   005D1A  0E00               	movlw	low _speed
 26413   005D1C  24F3               	addwf	243,w,c
 26414   005D1E  6ED9               	movwf	fsr2l,c
 26415   005D20  0E01               	movlw	high _speed
 26416   005D22  20F4               	addwfc	prodh,w,c
 26417   005D24  6EDA               	movwf	fsr2h,c
 26418   005D26  C09F  FFDE         	movff	??_bounceUp,postinc2
 26419   005D2A  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 26420   005D2E  D0A2               	goto	l19914
 26421   005D30                     l19882:
 26422                           
 26423                           ; BSR set to: 0
 26424                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 26425   005D30  51A7               	movf	bounceUp@io& (0+255),w,b
 26426   005D32  0D02               	mullw	2
 26427   005D34  0E00               	movlw	low _speed
 26428   005D36  24F3               	addwf	243,w,c
 26429   005D38  6ED9               	movwf	fsr2l,c
 26430   005D3A  0E01               	movlw	high _speed
 26431   005D3C  20F4               	addwfc	prodh,w,c
 26432   005D3E  6EDA               	movwf	fsr2h,c
 26433   005D40  50DE               	movf	postinc2,w,c
 26434   005D42  10DE               	iorwf	postinc2,w,c
 26435   005D44  A4D8               	btfss	status,2,c
 26436   005D46  D008               	goto	l19886
 26437                           
 26438                           ; BSR set to: 0
 26439   005D48  0E64               	movlw	low _bounceState
 26440   005D4A  25A7               	addwf	bounceUp@io& (0+255),w,b
 26441   005D4C  6ED9               	movwf	fsr2l,c
 26442   005D4E  6ADA               	clrf	fsr2h,c
 26443   005D50  0E02               	movlw	high _bounceState
 26444   005D52  22DA               	addwfc	fsr2h,f,c
 26445   005D54  0E02               	movlw	2
 26446   005D56  6EDF               	movwf	indf2,c
 26447   005D58                     l19886:
 26448                           
 26449                           ; BSR set to: 0
 26450                           ;../bounce.c: 186:         speed[io]--;
 26451   005D58  51A7               	movf	bounceUp@io& (0+255),w,b
 26452   005D5A  0D02               	mullw	2
 26453   005D5C  0E00               	movlw	low _speed
 26454   005D5E  24F3               	addwf	243,w,c
 26455   005D60  6ED9               	movwf	fsr2l,c
 26456   005D62  0E01               	movlw	high _speed
 26457   005D64  20F4               	addwfc	prodh,w,c
 26458   005D66  6EDA               	movwf	fsr2h,c
 26459   005D68  06DE               	decf	postinc2,f,c
 26460   005D6A  0E00               	movlw	0
 26461   005D6C  5ADD               	subwfb	postdec2,f,c
 26462                           
 26463                           ;../bounce.c: 187:         break;
 26464   005D6E  D082               	goto	l19914
 26465   005D70                     l19888:
 26466                           
 26467                           ; BSR set to: 0
 26468                           ;../bounce.c: 190:         if (reversed) {
 26469   005D70  51A5               	movf	bounceUp@reversed& (0+255),w,b
 26470   005D72  B4D8               	btfsc	status,2,c
 26471   005D74  D038               	goto	l19900
 26472                           
 26473                           ; BSR set to: 0
 26474                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 26475   005D76  51A7               	movf	bounceUp@io& (0+255),w,b
 26476   005D78  0D07               	mullw	7
 26477   005D7A  50F3               	movf	243,w,c
 26478   005D7C  0F15               	addlw	21
 26479   005D7E  EC7F  F05D         	call	_getNV
 26480   005D82  0E40               	movlw	low _currentPos
 26481   005D84  0100               	movlb	0	; () banked
 26482   005D86  25A7               	addwf	bounceUp@io& (0+255),w,b
 26483   005D88  6ED9               	movwf	fsr2l,c
 26484   005D8A  6ADA               	clrf	fsr2h,c
 26485   005D8C  0E01               	movlw	high _currentPos
 26486   005D8E  22DA               	addwfc	fsr2h,f,c
 26487   005D90  518D               	movf	?_getNV& (0+255),w,b
 26488   005D92  5EDF               	subwf	indf2,f,c
 26489                           
 26490                           ; BSR set to: 0
 26491                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 26492   005D94  0E40               	movlw	low _currentPos
 26493   005D96  25A7               	addwf	bounceUp@io& (0+255),w,b
 26494   005D98  6ED9               	movwf	fsr2l,c
 26495   005D9A  6ADA               	clrf	fsr2h,c
 26496   005D9C  0E01               	movlw	high _currentPos
 26497   005D9E  22DA               	addwfc	fsr2h,f,c
 26498   005DA0  50DF               	movf	indf2,w,c
 26499   005DA2  6F9F               	movwf	??_bounceUp& (0+255),b
 26500   005DA4  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26501   005DA6  51A7               	movf	bounceUp@io& (0+255),w,b
 26502   005DA8  0F01               	addlw	low _targetPos
 26503   005DAA  6ED9               	movwf	fsr2l,c
 26504   005DAC  6ADA               	clrf	fsr2h,c
 26505   005DAE  50DF               	movf	indf2,w,c
 26506   005DB0  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 26507   005DB2  0EFD               	movlw	253
 26508   005DB4  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 26509   005DB6  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 26510   005DB8  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 26511   005DBA  0EFF               	movlw	255
 26512   005DBC  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 26513   005DBE  519F               	movf	??_bounceUp& (0+255),w,b
 26514   005DC0  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 26515   005DC2  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 26516   005DC4  0A80               	xorlw	128
 26517   005DC6  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 26518   005DC8  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26519   005DCA  0A80               	xorlw	128
 26520   005DCC  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 26521   005DCE  A0D8               	btfss	status,0,c
 26522   005DD0  D051               	goto	l19914
 26523   005DD2                     u20450:
 26524                           
 26525                           ; BSR set to: 0
 26526                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 26527   005DD2  0E64               	movlw	low _bounceState
 26528   005DD4  25A7               	addwf	bounceUp@io& (0+255),w,b
 26529   005DD6  6ED9               	movwf	fsr2l,c
 26530   005DD8  6ADA               	clrf	fsr2h,c
 26531   005DDA  0E02               	movlw	high _bounceState
 26532   005DDC  22DA               	addwfc	fsr2h,f,c
 26533   005DDE  0E03               	movlw	3
 26534   005DE0  6EDF               	movwf	indf2,c
 26535                           
 26536                           ; BSR set to: 0
 26537                           ;../bounce.c: 194:                 return TRUE;
 26538   005DE2  0E01               	movlw	1
 26539   005DE4  0012               	return	
 26540   005DE6                     l19900:
 26541                           
 26542                           ; BSR set to: 0
 26543                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 26544   005DE6  51A7               	movf	bounceUp@io& (0+255),w,b
 26545   005DE8  0D07               	mullw	7
 26546   005DEA  50F3               	movf	243,w,c
 26547   005DEC  0F15               	addlw	21
 26548   005DEE  EC7F  F05D         	call	_getNV
 26549   005DF2  0E40               	movlw	low _currentPos
 26550   005DF4  0100               	movlb	0	; () banked
 26551   005DF6  25A7               	addwf	bounceUp@io& (0+255),w,b
 26552   005DF8  6ED9               	movwf	fsr2l,c
 26553   005DFA  6ADA               	clrf	fsr2h,c
 26554   005DFC  0E01               	movlw	high _currentPos
 26555   005DFE  22DA               	addwfc	fsr2h,f,c
 26556   005E00  518D               	movf	?_getNV& (0+255),w,b
 26557   005E02  26DF               	addwf	indf2,f,c
 26558                           
 26559                           ; BSR set to: 0
 26560                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 26561   005E04  51A7               	movf	bounceUp@io& (0+255),w,b
 26562   005E06  0F01               	addlw	low _targetPos
 26563   005E08  6ED9               	movwf	fsr2l,c
 26564   005E0A  6ADA               	clrf	fsr2h,c
 26565   005E0C  50DF               	movf	indf2,w,c
 26566   005E0E  6F9F               	movwf	??_bounceUp& (0+255),b
 26567   005E10  0EFD               	movlw	253
 26568   005E12  259F               	addwf	??_bounceUp& (0+255),w,b
 26569   005E14  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 26570   005E16  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 26571   005E18  0EFF               	movlw	255
 26572   005E1A  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 26573   005E1C  0E40               	movlw	low _currentPos
 26574   005E1E  25A7               	addwf	bounceUp@io& (0+255),w,b
 26575   005E20  6ED9               	movwf	fsr2l,c
 26576   005E22  6ADA               	clrf	fsr2h,c
 26577   005E24  0E01               	movlw	high _currentPos
 26578   005E26  22DA               	addwfc	fsr2h,f,c
 26579   005E28  50DF               	movf	indf2,w,c
 26580   005E2A  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 26581   005E2C  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 26582   005E2E  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26583   005E30  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 26584   005E32  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 26585   005E34  0A80               	xorlw	128
 26586   005E36  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 26587   005E38  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 26588   005E3A  0A80               	xorlw	128
 26589   005E3C  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 26590   005E3E  B0D8               	btfsc	status,0,c
 26591   005E40  D7C8               	goto	u20450
 26592   005E42  D018               	goto	l19914
 26593   005E44                     l19912:
 26594                           
 26595                           ; BSR set to: 0
 26596   005E44  0E64               	movlw	low _bounceState
 26597   005E46  25A7               	addwf	bounceUp@io& (0+255),w,b
 26598   005E48  6ED9               	movwf	fsr2l,c
 26599   005E4A  6ADA               	clrf	fsr2h,c
 26600   005E4C  0E02               	movlw	high _bounceState
 26601   005E4E  22DA               	addwfc	fsr2h,f,c
 26602   005E50  50DF               	movf	indf2,w,c
 26603   005E52  6F9F               	movwf	??_bounceUp& (0+255),b
 26604   005E54  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 26605                           
 26606                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26607                           ; Switch size 1, requested type "simple"
 26608                           ; Number of cases is 1, Range of values is 0 to 0
 26609                           ; switch strategies available:
 26610                           ; Name         Instructions Cycles
 26611                           ; simple_byte            4     3 (average)
 26612                           ;	Chosen strategy is simple_byte
 26613   005E56  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 26614   005E58  0A00               	xorlw	0	; case 0
 26615   005E5A  A4D8               	btfss	status,2,c
 26616   005E5C  D00B               	goto	l19914
 26617                           
 26618                           ; BSR set to: 0
 26619                           ; Switch size 1, requested type "simple"
 26620                           ; Number of cases is 4, Range of values is 0 to 3
 26621                           ; switch strategies available:
 26622                           ; Name         Instructions Cycles
 26623                           ; simple_byte           13     7 (average)
 26624                           ;	Chosen strategy is simple_byte
 26625   005E5E  519F               	movf	??_bounceUp& (0+255),w,b
 26626   005E60  0A00               	xorlw	0	; case 0
 26627   005E62  B4D8               	btfsc	status,2,c
 26628   005E64  D6D9               	goto	l19862
 26629   005E66  0A01               	xorlw	1	; case 1
 26630   005E68  B4D8               	btfsc	status,2,c
 26631   005E6A  D762               	goto	l19882
 26632   005E6C  0A03               	xorlw	3	; case 2
 26633   005E6E  B4D8               	btfsc	status,2,c
 26634   005E70  D77F               	goto	l19888
 26635   005E72  0A01               	xorlw	1	; case 3
 26636   005E74                     l19914:
 26637                           
 26638                           ; BSR set to: 0
 26639                           ;../bounce.c: 207:     return FALSE;
 26640   005E74  0E00               	movlw	0
 26641                           
 26642                           ; BSR set to: 0
 26643   005E76  0012               	return		;funcret
 26644   005E78                     __end_of_bounceUp:
 26645                           	callstack 0
 26646                           
 26647 ;; *************** function _bounceDown *****************
 26648 ;; Defined at:
 26649 ;;		line 103 in file "../bounce.c"
 26650 ;; Parameters:    Size  Location     Type
 26651 ;;  io              1    wreg     unsigned char 
 26652 ;; Auto vars:     Size  Location     Type
 26653 ;;  io              1   73[BANK0 ] unsigned char 
 26654 ;;  tmp             2   71[BANK0 ] int 
 26655 ;;  reversed        1   70[BANK0 ] enum E12700
 26656 ;; Return value:  Size  Location     Type
 26657 ;;                  1    wreg      enum E12700
 26658 ;; Registers used:
 26659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26660 ;; Tracked objects:
 26661 ;;		On entry : 0/0
 26662 ;;		On exit  : 0/0
 26663 ;;		Unchanged: 0/0
 26664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26666 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26667 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26668 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26669 ;;Total ram usage:       11 bytes
 26670 ;; Hardware stack levels used: 1
 26671 ;; Hardware stack levels required when called: 13
 26672 ;; This function calls:
 26673 ;;		___awdiv
 26674 ;;		___wmul
 26675 ;;		_getNV
 26676 ;; This function is called by:
 26677 ;;		_pollServos
 26678 ;; This function uses a non-reentrant model
 26679 ;;
 26680                           
 26681                           	psect	text97
 26682   002DE2                     __ptext97:
 26683                           	callstack 0
 26684   002DE2                     _bounceDown:
 26685                           	callstack 14
 26686                           
 26687                           ; BSR set to: 0
 26688                           ;incstack = 0
 26689                           ;bounceDown@io stored from wreg
 26690   002DE2  0100               	movlb	0	; () banked
 26691   002DE4  6FA9               	movwf	bounceDown@io& (0+255),b
 26692                           
 26693                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 26694   002DE6  0E40               	movlw	low _currentPos
 26695   002DE8  0100               	movlb	0	; () banked
 26696   002DEA  25A9               	addwf	bounceDown@io& (0+255),w,b
 26697   002DEC  6ED9               	movwf	fsr2l,c
 26698   002DEE  6ADA               	clrf	fsr2h,c
 26699   002DF0  0E01               	movlw	high _currentPos
 26700   002DF2  22DA               	addwfc	fsr2h,f,c
 26701   002DF4  50DF               	movf	indf2,w,c
 26702   002DF6  6F9F               	movwf	??_bounceDown& (0+255),b
 26703   002DF8  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 26704   002DFA  51A9               	movf	bounceDown@io& (0+255),w,b
 26705   002DFC  0F01               	addlw	low _targetPos
 26706   002DFE  6ED9               	movwf	fsr2l,c
 26707   002E00  6ADA               	clrf	fsr2h,c
 26708   002E02  50DF               	movf	indf2,w,c
 26709   002E04  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26710   002E06  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 26711   002E08  0E03               	movlw	3
 26712   002E0A  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 26713   002E0C  0E00               	movlw	0
 26714   002E0E  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 26715   002E10  519F               	movf	??_bounceDown& (0+255),w,b
 26716   002E12  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 26717   002E14  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 26718   002E16  0A80               	xorlw	128
 26719   002E18  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 26720   002E1A  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 26721   002E1C  0A80               	xorlw	128
 26722   002E1E  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 26723   002E20  A0D8               	btfss	status,0,c
 26724   002E22  D042               	goto	u20500
 26725                           
 26726                           ; BSR set to: 0
 26727   002E24  51A9               	movf	bounceDown@io& (0+255),w,b
 26728   002E26  0F01               	addlw	low _targetPos
 26729   002E28  6ED9               	movwf	fsr2l,c
 26730   002E2A  6ADA               	clrf	fsr2h,c
 26731   002E2C  50DF               	movf	indf2,w,c
 26732   002E2E  6F9F               	movwf	??_bounceDown& (0+255),b
 26733   002E30  0EFD               	movlw	253
 26734   002E32  259F               	addwf	??_bounceDown& (0+255),w,b
 26735   002E34  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 26736   002E36  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 26737   002E38  0EFF               	movlw	255
 26738   002E3A  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 26739   002E3C  0E40               	movlw	low _currentPos
 26740   002E3E  25A9               	addwf	bounceDown@io& (0+255),w,b
 26741   002E40  6ED9               	movwf	fsr2l,c
 26742   002E42  6ADA               	clrf	fsr2h,c
 26743   002E44  0E01               	movlw	high _currentPos
 26744   002E46  22DA               	addwfc	fsr2h,f,c
 26745   002E48  50DF               	movf	indf2,w,c
 26746   002E4A  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 26747   002E4C  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 26748   002E4E  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 26749   002E50  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 26750   002E52  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 26751   002E54  0A80               	xorlw	128
 26752   002E56  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 26753   002E58  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26754   002E5A  0A80               	xorlw	128
 26755   002E5C  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 26756   002E5E  A0D8               	btfss	status,0,c
 26757   002E60  D023               	goto	u20500
 26758                           
 26759                           ; BSR set to: 0
 26760   002E62  51A9               	movf	bounceDown@io& (0+255),w,b
 26761   002E64  0D02               	mullw	2
 26762   002E66  0E00               	movlw	low _speed
 26763   002E68  24F3               	addwf	243,w,c
 26764   002E6A  6ED9               	movwf	fsr2l,c
 26765   002E6C  0E01               	movlw	high _speed
 26766   002E6E  20F4               	addwfc	prodh,w,c
 26767   002E70  6EDA               	movwf	fsr2h,c
 26768   002E72  0E01               	movlw	1
 26769   002E74  BEDB               	btfsc	plusw2,7,c
 26770   002E76  D007               	goto	u20490
 26771   002E78  0E01               	movlw	1
 26772   002E7A  50DB               	movf	plusw2,w,c
 26773   002E7C  E115               	bnz	l19930
 26774   002E7E  0E04               	movlw	4
 26775   002E80  5CDE               	subwf	postinc2,w,c
 26776   002E82  B0D8               	btfsc	status,0,c
 26777   002E84  D011               	goto	u20500
 26778   002E86                     u20490:
 26779                           
 26780                           ; BSR set to: 0
 26781   002E86  51A9               	movf	bounceDown@io& (0+255),w,b
 26782   002E88  0D02               	mullw	2
 26783   002E8A  0E00               	movlw	low _speed
 26784   002E8C  24F3               	addwf	243,w,c
 26785   002E8E  6ED9               	movwf	fsr2l,c
 26786   002E90  0E01               	movlw	high _speed
 26787   002E92  20F4               	addwfc	prodh,w,c
 26788   002E94  6EDA               	movwf	fsr2h,c
 26789   002E96  0E01               	movlw	1
 26790   002E98  AEDB               	btfss	plusw2,7,c
 26791   002E9A  D1DA               	goto	l19958
 26792   002E9C  0EFD               	movlw	253
 26793   002E9E  5CDE               	subwf	postinc2,w,c
 26794   002EA0  0EFF               	movlw	255
 26795   002EA2  58DE               	subwfb	postinc2,w,c
 26796   002EA4  B0D8               	btfsc	status,0,c
 26797   002EA6  D1D4               	goto	l19958
 26798   002EA8                     u20500:
 26799   002EA8                     l19930:
 26800                           
 26801                           ; BSR set to: 0
 26802                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 26803   002EA8  51A9               	movf	bounceDown@io& (0+255),w,b
 26804   002EAA  0D07               	mullw	7
 26805   002EAC  50F3               	movf	243,w,c
 26806   002EAE  0F12               	addlw	18
 26807   002EB0  EC7F  F05D         	call	_getNV
 26808   002EB4  C08D  F09F         	movff	?_getNV,??_bounceDown
 26809   002EB8  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 26810   002EBC  0100               	movlb	0	; () banked
 26811   002EBE  51A9               	movf	bounceDown@io& (0+255),w,b
 26812   002EC0  0D07               	mullw	7
 26813   002EC2  50F3               	movf	243,w,c
 26814   002EC4  0F13               	addlw	19
 26815   002EC6  EC7F  F05D         	call	_getNV
 26816   002ECA  0100               	movlb	0	; () banked
 26817   002ECC  518D               	movf	?_getNV& (0+255),w,b
 26818   002ECE  5D9F               	subwf	??_bounceDown& (0+255),w,b
 26819   002ED0  B0D8               	btfsc	status,0,c
 26820   002ED2  D002               	goto	u20510
 26821   002ED4  0E01               	movlw	1
 26822   002ED6  D001               	goto	u20520
 26823   002ED8                     u20510:
 26824   002ED8  0E00               	movlw	0
 26825   002EDA                     u20520:
 26826   002EDA  6FA6               	movwf	bounceDown@reversed& (0+255),b
 26827                           
 26828                           ; BSR set to: 0
 26829                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 26830   002EDC  51A6               	movf	bounceDown@reversed& (0+255),w,b
 26831   002EDE  A4D8               	btfss	status,2,c
 26832   002EE0  D0DD               	goto	l19944
 26833                           
 26834                           ; BSR set to: 0
 26835                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 26836   002EE2  51A9               	movf	bounceDown@io& (0+255),w,b
 26837   002EE4  0D02               	mullw	2
 26838   002EE6  0E00               	movlw	low _speed
 26839   002EE8  24F3               	addwf	243,w,c
 26840   002EEA  6ED9               	movwf	fsr2l,c
 26841   002EEC  0E01               	movlw	high _speed
 26842   002EEE  20F4               	addwfc	prodh,w,c
 26843   002EF0  6EDA               	movwf	fsr2h,c
 26844   002EF2  CFDE F097          	movff	postinc2,___awdiv@dividend
 26845   002EF6  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26846   002EFA  0E00               	movlw	0
 26847   002EFC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26848   002EFE  0E1E               	movlw	30
 26849   002F00  6F99               	movwf	___awdiv@divisor& (0+255),b
 26850   002F02  ECCE  F052         	call	___awdiv	;wreg free
 26851   002F06  C097  F09F         	movff	?___awdiv,??_bounceDown
 26852   002F0A  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 26853   002F0E  0100               	movlb	0	; () banked
 26854   002F10  51A9               	movf	bounceDown@io& (0+255),w,b
 26855   002F12  0D07               	mullw	7
 26856   002F14  50F3               	movf	243,w,c
 26857   002F16  0F13               	addlw	19
 26858   002F18  EC7F  F05D         	call	_getNV
 26859   002F1C  0100               	movlb	0	; () banked
 26860   002F1E  518D               	movf	?_getNV& (0+255),w,b
 26861   002F20  259F               	addwf	??_bounceDown& (0+255),w,b
 26862   002F22  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26863   002F24  0E00               	movlw	0
 26864   002F26  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 26865   002F28  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 26866   002F2A  0E40               	movlw	low _currentPos
 26867   002F2C  25A9               	addwf	bounceDown@io& (0+255),w,b
 26868   002F2E  6ED9               	movwf	fsr2l,c
 26869   002F30  6ADA               	clrf	fsr2h,c
 26870   002F32  0E01               	movlw	high _currentPos
 26871   002F34  22DA               	addwfc	fsr2h,f,c
 26872   002F36  50DF               	movf	indf2,w,c
 26873   002F38  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 26874   002F3A  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 26875   002F3C  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26876   002F3E  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 26877   002F40  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 26878   002F42  0A80               	xorlw	128
 26879   002F44  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 26880   002F46  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 26881   002F48  0A80               	xorlw	128
 26882   002F4A  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 26883   002F4C  B0D8               	btfsc	status,0,c
 26884   002F4E  D07C               	goto	l19940
 26885                           
 26886                           ; BSR set to: 0
 26887                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 26888   002F50  51A9               	movf	bounceDown@io& (0+255),w,b
 26889   002F52  0D07               	mullw	7
 26890   002F54  50F3               	movf	243,w,c
 26891   002F56  0F14               	addlw	20
 26892   002F58  EC7F  F05D         	call	_getNV
 26893   002F5C  C08D  F091         	movff	?_getNV,___wmul@multiplier
 26894   002F60  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 26895   002F64  0100               	movlb	0	; () banked
 26896   002F66  51A9               	movf	bounceDown@io& (0+255),w,b
 26897   002F68  0D02               	mullw	2
 26898   002F6A  0E00               	movlw	low _speed
 26899   002F6C  24F3               	addwf	243,w,c
 26900   002F6E  6ED9               	movwf	fsr2l,c
 26901   002F70  0E01               	movlw	high _speed
 26902   002F72  20F4               	addwfc	prodh,w,c
 26903   002F74  6EDA               	movwf	fsr2h,c
 26904   002F76  CFDE F09F          	movff	postinc2,??_bounceDown
 26905   002F7A  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 26906   002F7E  1F9F               	comf	??_bounceDown& (0+255),f,b
 26907   002F80  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 26908   002F82  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 26909   002F84  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 26910   002F86  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 26911   002F8A  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 26912   002F8E  EC4C  F060         	call	___wmul	;wreg free
 26913   002F92  C091  F097         	movff	?___wmul,___awdiv@dividend
 26914   002F96  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 26915   002F9A  0E00               	movlw	0
 26916   002F9C  0100               	movlb	0	; () banked
 26917   002F9E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26918   002FA0  0E64               	movlw	100
 26919   002FA2  6F99               	movwf	___awdiv@divisor& (0+255),b
 26920   002FA4  ECCE  F052         	call	___awdiv	;wreg free
 26921   002FA8  0100               	movlb	0	; () banked
 26922   002FAA  51A9               	movf	bounceDown@io& (0+255),w,b
 26923   002FAC  0D02               	mullw	2
 26924   002FAE  0E00               	movlw	low _speed
 26925   002FB0  24F3               	addwf	243,w,c
 26926   002FB2  6ED9               	movwf	fsr2l,c
 26927   002FB4  0E01               	movlw	high _speed
 26928   002FB6  20F4               	addwfc	prodh,w,c
 26929   002FB8  6EDA               	movwf	fsr2h,c
 26930   002FBA  C097  FFDE         	movff	?___awdiv,postinc2
 26931   002FBE  C098  FFDD         	movff	?___awdiv+1,postdec2
 26932                           
 26933                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 26934   002FC2  51A9               	movf	bounceDown@io& (0+255),w,b
 26935   002FC4  0D07               	mullw	7
 26936   002FC6  50F3               	movf	243,w,c
 26937   002FC8  0F13               	addlw	19
 26938   002FCA  EC7F  F05D         	call	_getNV
 26939   002FCE  0100               	movlb	0	; () banked
 26940   002FD0  518D               	movf	?_getNV& (0+255),w,b
 26941   002FD2  6F9F               	movwf	??_bounceDown& (0+255),b
 26942   002FD4  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 26943   002FD6  51A9               	movf	bounceDown@io& (0+255),w,b
 26944   002FD8  0D07               	mullw	7
 26945   002FDA  50F3               	movf	243,w,c
 26946   002FDC  0F13               	addlw	19
 26947   002FDE  EC7F  F05D         	call	_getNV
 26948   002FE2  0100               	movlb	0	; () banked
 26949   002FE4  518D               	movf	?_getNV& (0+255),w,b
 26950   002FE6  279F               	addwf	??_bounceDown& (0+255),f,b
 26951   002FE8  0E00               	movlw	0
 26952   002FEA  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 26953   002FEC  0E40               	movlw	low _currentPos
 26954   002FEE  25A9               	addwf	bounceDown@io& (0+255),w,b
 26955   002FF0  6ED9               	movwf	fsr2l,c
 26956   002FF2  6ADA               	clrf	fsr2h,c
 26957   002FF4  0E01               	movlw	high _currentPos
 26958   002FF6  22DA               	addwfc	fsr2h,f,c
 26959   002FF8  50DF               	movf	indf2,w,c
 26960   002FFA  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 26961   002FFC  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 26962   002FFE  5F9F               	subwf	??_bounceDown& (0+255),f,b
 26963   003000  0E00               	movlw	0
 26964   003002  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 26965   003004  51A9               	movf	bounceDown@io& (0+255),w,b
 26966   003006  0D02               	mullw	2
 26967   003008  0E00               	movlw	low _speed
 26968   00300A  24F3               	addwf	243,w,c
 26969   00300C  6ED9               	movwf	fsr2l,c
 26970   00300E  0E01               	movlw	high _speed
 26971   003010  20F4               	addwfc	prodh,w,c
 26972   003012  6EDA               	movwf	fsr2h,c
 26973   003014  CFDE F097          	movff	postinc2,___awdiv@dividend
 26974   003018  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 26975   00301C  0E00               	movlw	0
 26976   00301E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 26977   003020  0E1E               	movlw	30
 26978   003022  6F99               	movwf	___awdiv@divisor& (0+255),b
 26979   003024  ECCE  F052         	call	___awdiv	;wreg free
 26980   003028  0100               	movlb	0	; () banked
 26981   00302A  5197               	movf	?___awdiv& (0+255),w,b
 26982   00302C  5D9F               	subwf	??_bounceDown& (0+255),w,b
 26983   00302E  6FA7               	movwf	bounceDown@tmp& (0+255),b
 26984   003030  5198               	movf	(?___awdiv+1)& (0+255),w,b
 26985   003032  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 26986   003034  6FA8               	movwf	(bounceDown@tmp+1)& (0+255),b
 26987                           
 26988                           ; BSR set to: 0
 26989                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 26990   003036  0E40               	movlw	low _currentPos
 26991   003038  25A9               	addwf	bounceDown@io& (0+255),w,b
 26992   00303A  6ED9               	movwf	fsr2l,c
 26993   00303C  6ADA               	clrf	fsr2h,c
 26994   00303E  0E01               	movlw	high _currentPos
 26995   003040  22DA               	addwfc	fsr2h,f,c
 26996   003042  C0A7  FFDF         	movff	bounceDown@tmp,indf2
 26997                           
 26998                           ;../bounce.c: 121:             } else {
 26999   003046  D102               	goto	l19954
 27000   003048                     l19940:
 27001                           
 27002                           ; BSR set to: 0
 27003                           ;../bounce.c: 124:                 speed[io] += 3;
 27004   003048  51A9               	movf	bounceDown@io& (0+255),w,b
 27005   00304A  0D02               	mullw	2
 27006   00304C  0E00               	movlw	low _speed
 27007   00304E  24F3               	addwf	243,w,c
 27008   003050  6ED9               	movwf	fsr2l,c
 27009   003052  0E01               	movlw	high _speed
 27010   003054  20F4               	addwfc	prodh,w,c
 27011   003056  6EDA               	movwf	fsr2h,c
 27012   003058  0E03               	movlw	3
 27013   00305A  26DE               	addwf	postinc2,f,c
 27014   00305C  0E00               	movlw	0
 27015   00305E  22DD               	addwfc	postdec2,f,c
 27016                           
 27017                           ; BSR set to: 0
 27018                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 27019   003060  51A9               	movf	bounceDown@io& (0+255),w,b
 27020   003062  0D02               	mullw	2
 27021   003064  0E00               	movlw	low _speed
 27022   003066  24F3               	addwf	243,w,c
 27023   003068  6ED9               	movwf	fsr2l,c
 27024   00306A  0E01               	movlw	high _speed
 27025   00306C  20F4               	addwfc	prodh,w,c
 27026   00306E  6EDA               	movwf	fsr2h,c
 27027   003070  CFDE F097          	movff	postinc2,___awdiv@dividend
 27028   003074  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27029   003078  0E00               	movlw	0
 27030   00307A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27031   00307C  0E1E               	movlw	30
 27032   00307E  6F99               	movwf	___awdiv@divisor& (0+255),b
 27033   003080  ECCE  F052         	call	___awdiv	;wreg free
 27034   003084  0E01               	movlw	1
 27035   003086  0100               	movlb	0	; () banked
 27036   003088  2797               	addwf	?___awdiv& (0+255),f,b
 27037   00308A  0E40               	movlw	low _currentPos
 27038   00308C  25A9               	addwf	bounceDown@io& (0+255),w,b
 27039   00308E  6ED9               	movwf	fsr2l,c
 27040   003090  6ADA               	clrf	fsr2h,c
 27041   003092  0E01               	movlw	high _currentPos
 27042   003094  22DA               	addwfc	fsr2h,f,c
 27043   003096  5197               	movf	?___awdiv& (0+255),w,b
 27044   003098  5EDF               	subwf	indf2,f,c
 27045   00309A  D0D8               	goto	l19954
 27046   00309C                     l19944:
 27047                           
 27048                           ; BSR set to: 0
 27049                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 27050   00309C  0E40               	movlw	low _currentPos
 27051   00309E  25A9               	addwf	bounceDown@io& (0+255),w,b
 27052   0030A0  6ED9               	movwf	fsr2l,c
 27053   0030A2  6ADA               	clrf	fsr2h,c
 27054   0030A4  0E01               	movlw	high _currentPos
 27055   0030A6  22DA               	addwfc	fsr2h,f,c
 27056   0030A8  50DF               	movf	indf2,w,c
 27057   0030AA  6F9F               	movwf	??_bounceDown& (0+255),b
 27058   0030AC  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27059   0030AE  51A9               	movf	bounceDown@io& (0+255),w,b
 27060   0030B0  0D07               	mullw	7
 27061   0030B2  50F3               	movf	243,w,c
 27062   0030B4  0F13               	addlw	19
 27063   0030B6  EC7F  F05D         	call	_getNV
 27064   0030BA  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 27065   0030BE  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 27066   0030C2  0100               	movlb	0	; () banked
 27067   0030C4  51A9               	movf	bounceDown@io& (0+255),w,b
 27068   0030C6  0D02               	mullw	2
 27069   0030C8  0E00               	movlw	low _speed
 27070   0030CA  24F3               	addwf	243,w,c
 27071   0030CC  6ED9               	movwf	fsr2l,c
 27072   0030CE  0E01               	movlw	high _speed
 27073   0030D0  20F4               	addwfc	prodh,w,c
 27074   0030D2  6EDA               	movwf	fsr2h,c
 27075   0030D4  CFDE F097          	movff	postinc2,___awdiv@dividend
 27076   0030D8  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27077   0030DC  0E00               	movlw	0
 27078   0030DE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27079   0030E0  0E1E               	movlw	30
 27080   0030E2  6F99               	movwf	___awdiv@divisor& (0+255),b
 27081   0030E4  ECCE  F052         	call	___awdiv	;wreg free
 27082   0030E8  0100               	movlb	0	; () banked
 27083   0030EA  5197               	movf	?___awdiv& (0+255),w,b
 27084   0030EC  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27085   0030EE  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27086   0030F0  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27087   0030F2  A0D8               	btfss	status,0,c
 27088   0030F4  2998               	incf	(?___awdiv+1)& (0+255),w,b
 27089   0030F6  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27090   0030F8  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 27091   0030FA  519F               	movf	??_bounceDown& (0+255),w,b
 27092   0030FC  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27093   0030FE  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27094   003100  0A80               	xorlw	128
 27095   003102  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27096   003104  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27097   003106  0A80               	xorlw	128
 27098   003108  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27099   00310A  B0D8               	btfsc	status,0,c
 27100   00310C  D076               	goto	l19950
 27101                           
 27102                           ; BSR set to: 0
 27103                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27104   00310E  51A9               	movf	bounceDown@io& (0+255),w,b
 27105   003110  0D07               	mullw	7
 27106   003112  50F3               	movf	243,w,c
 27107   003114  0F14               	addlw	20
 27108   003116  EC7F  F05D         	call	_getNV
 27109   00311A  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27110   00311E  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27111   003122  0100               	movlb	0	; () banked
 27112   003124  51A9               	movf	bounceDown@io& (0+255),w,b
 27113   003126  0D02               	mullw	2
 27114   003128  0E00               	movlw	low _speed
 27115   00312A  24F3               	addwf	243,w,c
 27116   00312C  6ED9               	movwf	fsr2l,c
 27117   00312E  0E01               	movlw	high _speed
 27118   003130  20F4               	addwfc	prodh,w,c
 27119   003132  6EDA               	movwf	fsr2h,c
 27120   003134  CFDE F09F          	movff	postinc2,??_bounceDown
 27121   003138  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27122   00313C  1F9F               	comf	??_bounceDown& (0+255),f,b
 27123   00313E  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27124   003140  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27125   003142  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27126   003144  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27127   003148  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27128   00314C  EC4C  F060         	call	___wmul	;wreg free
 27129   003150  C091  F097         	movff	?___wmul,___awdiv@dividend
 27130   003154  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27131   003158  0E00               	movlw	0
 27132   00315A  0100               	movlb	0	; () banked
 27133   00315C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27134   00315E  0E64               	movlw	100
 27135   003160  6F99               	movwf	___awdiv@divisor& (0+255),b
 27136   003162  ECCE  F052         	call	___awdiv	;wreg free
 27137   003166  0100               	movlb	0	; () banked
 27138   003168  51A9               	movf	bounceDown@io& (0+255),w,b
 27139   00316A  0D02               	mullw	2
 27140   00316C  0E00               	movlw	low _speed
 27141   00316E  24F3               	addwf	243,w,c
 27142   003170  6ED9               	movwf	fsr2l,c
 27143   003172  0E01               	movlw	high _speed
 27144   003174  20F4               	addwfc	prodh,w,c
 27145   003176  6EDA               	movwf	fsr2h,c
 27146   003178  C097  FFDE         	movff	?___awdiv,postinc2
 27147   00317C  C098  FFDD         	movff	?___awdiv+1,postdec2
 27148                           
 27149                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 27150   003180  51A9               	movf	bounceDown@io& (0+255),w,b
 27151   003182  0D07               	mullw	7
 27152   003184  50F3               	movf	243,w,c
 27153   003186  0F13               	addlw	19
 27154   003188  EC7F  F05D         	call	_getNV
 27155   00318C  0100               	movlb	0	; () banked
 27156   00318E  518D               	movf	?_getNV& (0+255),w,b
 27157   003190  6F9F               	movwf	??_bounceDown& (0+255),b
 27158   003192  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27159   003194  51A9               	movf	bounceDown@io& (0+255),w,b
 27160   003196  0D07               	mullw	7
 27161   003198  50F3               	movf	243,w,c
 27162   00319A  0F13               	addlw	19
 27163   00319C  EC7F  F05D         	call	_getNV
 27164   0031A0  0100               	movlb	0	; () banked
 27165   0031A2  518D               	movf	?_getNV& (0+255),w,b
 27166   0031A4  279F               	addwf	??_bounceDown& (0+255),f,b
 27167   0031A6  0E00               	movlw	0
 27168   0031A8  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27169   0031AA  51A9               	movf	bounceDown@io& (0+255),w,b
 27170   0031AC  0D02               	mullw	2
 27171   0031AE  0E00               	movlw	low _speed
 27172   0031B0  24F3               	addwf	243,w,c
 27173   0031B2  6ED9               	movwf	fsr2l,c
 27174   0031B4  0E01               	movlw	high _speed
 27175   0031B6  20F4               	addwfc	prodh,w,c
 27176   0031B8  6EDA               	movwf	fsr2h,c
 27177   0031BA  CFDE F097          	movff	postinc2,___awdiv@dividend
 27178   0031BE  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27179   0031C2  0E00               	movlw	0
 27180   0031C4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27181   0031C6  0E1E               	movlw	30
 27182   0031C8  6F99               	movwf	___awdiv@divisor& (0+255),b
 27183   0031CA  ECCE  F052         	call	___awdiv	;wreg free
 27184   0031CE  0100               	movlb	0	; () banked
 27185   0031D0  5197               	movf	?___awdiv& (0+255),w,b
 27186   0031D2  259F               	addwf	??_bounceDown& (0+255),w,b
 27187   0031D4  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27188   0031D6  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27189   0031D8  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27190   0031DA  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27191   0031DC  0E40               	movlw	low _currentPos
 27192   0031DE  25A9               	addwf	bounceDown@io& (0+255),w,b
 27193   0031E0  6ED9               	movwf	fsr2l,c
 27194   0031E2  6ADA               	clrf	fsr2h,c
 27195   0031E4  0E01               	movlw	high _currentPos
 27196   0031E6  22DA               	addwfc	fsr2h,f,c
 27197   0031E8  50DF               	movf	indf2,w,c
 27198   0031EA  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27199   0031EC  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27200   0031EE  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27201   0031F0  6FA7               	movwf	bounceDown@tmp& (0+255),b
 27202   0031F2  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27203   0031F4  A0D8               	btfss	status,0,c
 27204   0031F6  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 27205   0031F8  D71D               	goto	L8
 27206   0031FA                     l19950:
 27207                           
 27208                           ; BSR set to: 0
 27209                           ;../bounce.c: 142:                 speed[io] += 3;
 27210   0031FA  51A9               	movf	bounceDown@io& (0+255),w,b
 27211   0031FC  0D02               	mullw	2
 27212   0031FE  0E00               	movlw	low _speed
 27213   003200  24F3               	addwf	243,w,c
 27214   003202  6ED9               	movwf	fsr2l,c
 27215   003204  0E01               	movlw	high _speed
 27216   003206  20F4               	addwfc	prodh,w,c
 27217   003208  6EDA               	movwf	fsr2h,c
 27218   00320A  0E03               	movlw	3
 27219   00320C  26DE               	addwf	postinc2,f,c
 27220   00320E  0E00               	movlw	0
 27221   003210  22DD               	addwfc	postdec2,f,c
 27222                           
 27223                           ; BSR set to: 0
 27224                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 27225   003212  51A9               	movf	bounceDown@io& (0+255),w,b
 27226   003214  0D02               	mullw	2
 27227   003216  0E00               	movlw	low _speed
 27228   003218  24F3               	addwf	243,w,c
 27229   00321A  6ED9               	movwf	fsr2l,c
 27230   00321C  0E01               	movlw	high _speed
 27231   00321E  20F4               	addwfc	prodh,w,c
 27232   003220  6EDA               	movwf	fsr2h,c
 27233   003222  CFDE F097          	movff	postinc2,___awdiv@dividend
 27234   003226  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27235   00322A  0E00               	movlw	0
 27236   00322C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27237   00322E  0E1E               	movlw	30
 27238   003230  6F99               	movwf	___awdiv@divisor& (0+255),b
 27239   003232  ECCE  F052         	call	___awdiv	;wreg free
 27240   003236  0E01               	movlw	1
 27241   003238  0100               	movlb	0	; () banked
 27242   00323A  2797               	addwf	?___awdiv& (0+255),f,b
 27243   00323C  0E40               	movlw	low _currentPos
 27244   00323E  25A9               	addwf	bounceDown@io& (0+255),w,b
 27245   003240  6ED9               	movwf	fsr2l,c
 27246   003242  6ADA               	clrf	fsr2h,c
 27247   003244  0E01               	movlw	high _currentPos
 27248   003246  22DA               	addwfc	fsr2h,f,c
 27249   003248  5197               	movf	?___awdiv& (0+255),w,b
 27250   00324A  26DF               	addwf	indf2,f,c
 27251   00324C                     l19954:
 27252                           
 27253                           ; BSR set to: 0
 27254                           ;../bounce.c: 147:         return FALSE;
 27255   00324C  0E00               	movlw	0
 27256   00324E  0012               	return	
 27257   003250                     l19958:
 27258                           
 27259                           ; BSR set to: 0
 27260                           ;../bounce.c: 149:     return TRUE;
 27261   003250  0E01               	movlw	1
 27262                           
 27263                           ; BSR set to: 0
 27264   003252  0012               	return		;funcret
 27265   003254                     __end_of_bounceDown:
 27266                           	callstack 0
 27267                           
 27268 ;; *************** function _processOutputs *****************
 27269 ;; Defined at:
 27270 ;;		line 175 in file "../digitalOut.c"
 27271 ;; Parameters:    Size  Location     Type
 27272 ;;		None
 27273 ;; Auto vars:     Size  Location     Type
 27274 ;;  io              1   18[BANK1 ] unsigned char 
 27275 ;;  state           1    0        enum E12700
 27276 ;; Return value:  Size  Location     Type
 27277 ;;                  1    wreg      void 
 27278 ;; Registers used:
 27279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27280 ;; Tracked objects:
 27281 ;;		On entry : 0/0
 27282 ;;		On exit  : 0/0
 27283 ;;		Unchanged: 0/0
 27284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27286 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27287 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27288 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27289 ;;Total ram usage:        2 bytes
 27290 ;; Hardware stack levels used: 1
 27291 ;; Hardware stack levels required when called: 17
 27292 ;; This function calls:
 27293 ;;		_getNV
 27294 ;;		_sendProducedEvent
 27295 ;;		_setOutputPin
 27296 ;; This function is called by:
 27297 ;;		_loop
 27298 ;; This function uses a non-reentrant model
 27299 ;;
 27300                           
 27301                           	psect	text98
 27302   006B7C                     __ptext98:
 27303                           	callstack 0
 27304   006B7C                     _processOutputs:
 27305                           	callstack 12
 27306                           
 27307                           ;../digitalOut.c: 176:     Boolean state;;../digitalOut.c: 177:     uint8_t io;;../digit
      +                          alOut.c: 178:     for (io=0; io<16; io++) {
 27308                           
 27309                           ; BSR set to: 0
 27310                           ;incstack = 0
 27311   006B7C  0E00               	movlw	0
 27312   006B7E  0101               	movlb	1	; () banked
 27313   006B80  6FD0               	movwf	processOutputs@io& (0+255),b
 27314   006B82                     l22178:
 27315                           
 27316                           ; BSR set to: 1
 27317                           ;../digitalOut.c: 179:         if (getNV((16 + 7*(io) + 0)) == 1) {
 27318   006B82  51D0               	movf	processOutputs@io& (0+255),w,b
 27319   006B84  0D07               	mullw	7
 27320   006B86  50F3               	movf	243,w,c
 27321   006B88  0F10               	addlw	16
 27322   006B8A  EC7F  F05D         	call	_getNV
 27323   006B8E  0100               	movlb	0	; () banked
 27324   006B90  058D               	decf	?_getNV& (0+255),w,b
 27325   006B92  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 27326   006B94  A4D8               	btfss	status,2,c
 27327   006B96  D0D5               	goto	l247
 27328                           
 27329                           ; BSR set to: 0
 27330                           ;../digitalOut.c: 181:             if (flashDelays[io] == 1) {
 27331   006B98  0ED4               	movlw	low _flashDelays
 27332   006B9A  0101               	movlb	1	; () banked
 27333   006B9C  25D0               	addwf	processOutputs@io& (0+255),w,b
 27334   006B9E  6ED9               	movwf	fsr2l,c
 27335   006BA0  6ADA               	clrf	fsr2h,c
 27336   006BA2  0E02               	movlw	high _flashDelays
 27337   006BA4  22DA               	addwfc	fsr2h,f,c
 27338   006BA6  04DE               	decf	postinc2,w,c
 27339   006BA8  A4D8               	btfss	status,2,c
 27340   006BAA  D02F               	goto	l22188
 27341                           
 27342                           ; BSR set to: 1
 27343                           ;../digitalOut.c: 182:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 27344   006BAC  51D0               	movf	processOutputs@io& (0+255),w,b
 27345   006BAE  0D07               	mullw	7
 27346   006BB0  50F3               	movf	243,w,c
 27347   006BB2  0F11               	addlw	17
 27348   006BB4  EC7F  F05D         	call	_getNV
 27349   006BB8  0100               	movlb	0	; () banked
 27350   006BBA  518D               	movf	?_getNV& (0+255),w,b
 27351   006BBC  0B20               	andlw	32
 27352   006BBE  6F91               	movwf	setOutputPin@state& (0+255),b
 27353   006BC0  0101               	movlb	1	; () banked
 27354   006BC2  51D0               	movf	processOutputs@io& (0+255),w,b
 27355   006BC4  EC89  F037         	call	_setOutputPin
 27356                           
 27357                           ;../digitalOut.c: 183:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27358   006BC8  0101               	movlb	1	; () banked
 27359   006BCA  51D0               	movf	processOutputs@io& (0+255),w,b
 27360   006BCC  0D07               	mullw	7
 27361   006BCE  50F3               	movf	243,w,c
 27362   006BD0  0F13               	addlw	19
 27363   006BD2  EC7F  F05D         	call	_getNV
 27364   006BD6  0ED4               	movlw	low _flashDelays
 27365   006BD8  0101               	movlb	1	; () banked
 27366   006BDA  25D0               	addwf	processOutputs@io& (0+255),w,b
 27367   006BDC  6ED9               	movwf	fsr2l,c
 27368   006BDE  6ADA               	clrf	fsr2h,c
 27369   006BE0  0E02               	movlw	high _flashDelays
 27370   006BE2  22DA               	addwfc	fsr2h,f,c
 27371   006BE4  0100               	movlb	0	; () banked
 27372   006BE6  C08D  FFDF         	movff	?_getNV,indf2
 27373                           
 27374                           ; BSR set to: 0
 27375                           ;../digitalOut.c: 184:                 flashDelays[io] = - flashDelays[io];
 27376   006BEA  0ED4               	movlw	low _flashDelays
 27377   006BEC  0101               	movlb	1	; () banked
 27378   006BEE  25D0               	addwf	processOutputs@io& (0+255),w,b
 27379   006BF0  6ED9               	movwf	fsr2l,c
 27380   006BF2  6ADA               	clrf	fsr2h,c
 27381   006BF4  0E02               	movlw	high _flashDelays
 27382   006BF6  22DA               	addwfc	fsr2h,f,c
 27383   006BF8  0ED4               	movlw	low _flashDelays
 27384   006BFA  25D0               	addwf	processOutputs@io& (0+255),w,b
 27385   006BFC  6EE1               	movwf	fsr1l,c
 27386   006BFE  6AE2               	clrf	fsr1h,c
 27387   006C00  0E02               	movlw	high _flashDelays
 27388   006C02  22E2               	addwfc	fsr1h,f,c
 27389   006C04  50E7               	movf	indf1,w,c
 27390   006C06  0800               	sublw	0
 27391   006C08  6EDF               	movwf	indf2,c
 27392   006C0A                     l22188:
 27393                           
 27394                           ; BSR set to: 1
 27395                           ;../digitalOut.c: 186:             if (flashDelays[io] == -1) {
 27396   006C0A  0ED4               	movlw	low _flashDelays
 27397   006C0C  25D0               	addwf	processOutputs@io& (0+255),w,b
 27398   006C0E  6ED9               	movwf	fsr2l,c
 27399   006C10  6ADA               	clrf	fsr2h,c
 27400   006C12  0E02               	movlw	high _flashDelays
 27401   006C14  22DA               	addwfc	fsr2h,f,c
 27402   006C16  28DE               	incf	postinc2,w,c
 27403   006C18  A4D8               	btfss	status,2,c
 27404   006C1A  D022               	goto	l22194
 27405                           
 27406                           ; BSR set to: 1
 27407                           ;../digitalOut.c: 187:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 27408   006C1C  51D0               	movf	processOutputs@io& (0+255),w,b
 27409   006C1E  0D07               	mullw	7
 27410   006C20  50F3               	movf	243,w,c
 27411   006C22  0F11               	addlw	17
 27412   006C24  EC7F  F05D         	call	_getNV
 27413   006C28  0100               	movlb	0	; () banked
 27414   006C2A  BB8D               	btfsc	?_getNV& (0+255),5,b
 27415   006C2C  D002               	goto	u23750
 27416   006C2E  0E01               	movlw	1
 27417   006C30  D001               	goto	u23760
 27418   006C32                     u23750:
 27419   006C32  0E00               	movlw	0
 27420   006C34                     u23760:
 27421   006C34  6F91               	movwf	setOutputPin@state& (0+255),b
 27422   006C36  0101               	movlb	1	; () banked
 27423   006C38  51D0               	movf	processOutputs@io& (0+255),w,b
 27424   006C3A  EC89  F037         	call	_setOutputPin
 27425                           
 27426                           ;../digitalOut.c: 188:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 27427   006C3E  0101               	movlb	1	; () banked
 27428   006C40  51D0               	movf	processOutputs@io& (0+255),w,b
 27429   006C42  0D07               	mullw	7
 27430   006C44  50F3               	movf	243,w,c
 27431   006C46  0F13               	addlw	19
 27432   006C48  EC7F  F05D         	call	_getNV
 27433   006C4C  0ED4               	movlw	low _flashDelays
 27434   006C4E  0101               	movlb	1	; () banked
 27435   006C50  25D0               	addwf	processOutputs@io& (0+255),w,b
 27436   006C52  6ED9               	movwf	fsr2l,c
 27437   006C54  6ADA               	clrf	fsr2h,c
 27438   006C56  0E02               	movlw	high _flashDelays
 27439   006C58  22DA               	addwfc	fsr2h,f,c
 27440   006C5A  0100               	movlb	0	; () banked
 27441   006C5C  C08D  FFDF         	movff	?_getNV,indf2
 27442   006C60                     l22194:
 27443                           
 27444                           ;../digitalOut.c: 190:             if (flashDelays[io] > 1) {
 27445   006C60  0ED4               	movlw	low _flashDelays
 27446   006C62  0101               	movlb	1	; () banked
 27447   006C64  25D0               	addwf	processOutputs@io& (0+255),w,b
 27448   006C66  6ED9               	movwf	fsr2l,c
 27449   006C68  6ADA               	clrf	fsr2h,c
 27450   006C6A  0E02               	movlw	high _flashDelays
 27451   006C6C  22DA               	addwfc	fsr2h,f,c
 27452   006C6E  50DF               	movf	indf2,w,c
 27453   006C70  0A80               	xorlw	128
 27454   006C72  0F7E               	addlw	-130
 27455   006C74  A0D8               	btfss	status,0,c
 27456   006C76  D008               	goto	l22198
 27457                           
 27458                           ; BSR set to: 1
 27459                           ;../digitalOut.c: 191:                 flashDelays[io]--;
 27460   006C78  0ED4               	movlw	low _flashDelays
 27461   006C7A  25D0               	addwf	processOutputs@io& (0+255),w,b
 27462   006C7C  6ED9               	movwf	fsr2l,c
 27463   006C7E  6ADA               	clrf	fsr2h,c
 27464   006C80  0E02               	movlw	high _flashDelays
 27465   006C82  22DA               	addwfc	fsr2h,f,c
 27466   006C84  06DF               	decf	indf2,f,c
 27467                           
 27468                           ;../digitalOut.c: 192:             } else if (flashDelays[io] < -1) {
 27469   006C86  D012               	goto	l245
 27470   006C88                     l22198:
 27471                           
 27472                           ; BSR set to: 1
 27473   006C88  0ED4               	movlw	low _flashDelays
 27474   006C8A  25D0               	addwf	processOutputs@io& (0+255),w,b
 27475   006C8C  6ED9               	movwf	fsr2l,c
 27476   006C8E  6ADA               	clrf	fsr2h,c
 27477   006C90  0E02               	movlw	high _flashDelays
 27478   006C92  22DA               	addwfc	fsr2h,f,c
 27479   006C94  50DF               	movf	indf2,w,c
 27480   006C96  0A80               	xorlw	128
 27481   006C98  0F81               	addlw	129
 27482   006C9A  B0D8               	btfsc	status,0,c
 27483   006C9C  D007               	goto	l245
 27484                           
 27485                           ; BSR set to: 1
 27486                           ;../digitalOut.c: 193:                 flashDelays[io]++;
 27487   006C9E  0ED4               	movlw	low _flashDelays
 27488   006CA0  25D0               	addwf	processOutputs@io& (0+255),w,b
 27489   006CA2  6ED9               	movwf	fsr2l,c
 27490   006CA4  6ADA               	clrf	fsr2h,c
 27491   006CA6  0E02               	movlw	high _flashDelays
 27492   006CA8  22DA               	addwfc	fsr2h,f,c
 27493   006CAA  2ADF               	incf	indf2,f,c
 27494   006CAC                     l245:
 27495                           
 27496                           ; BSR set to: 1
 27497                           ;../digitalOut.c: 195:             if (pulseDelays[io] != 0) {
 27498   006CAC  0EE4               	movlw	low _pulseDelays
 27499   006CAE  25D0               	addwf	processOutputs@io& (0+255),w,b
 27500   006CB0  6ED9               	movwf	fsr2l,c
 27501   006CB2  6ADA               	clrf	fsr2h,c
 27502   006CB4  0E02               	movlw	high _pulseDelays
 27503   006CB6  22DA               	addwfc	fsr2h,f,c
 27504   006CB8  50DF               	movf	indf2,w,c
 27505   006CBA  B4D8               	btfsc	status,2,c
 27506   006CBC  D042               	goto	l247
 27507                           
 27508                           ; BSR set to: 1
 27509                           ;../digitalOut.c: 196:                 pulseDelays[io]--;
 27510   006CBE  0EE4               	movlw	low _pulseDelays
 27511   006CC0  25D0               	addwf	processOutputs@io& (0+255),w,b
 27512   006CC2  6ED9               	movwf	fsr2l,c
 27513   006CC4  6ADA               	clrf	fsr2h,c
 27514   006CC6  0E02               	movlw	high _pulseDelays
 27515   006CC8  22DA               	addwfc	fsr2h,f,c
 27516   006CCA  06DF               	decf	indf2,f,c
 27517                           
 27518                           ;../digitalOut.c: 199:                 if (pulseDelays[io] == 1) {
 27519   006CCC  0EE4               	movlw	low _pulseDelays
 27520   006CCE  25D0               	addwf	processOutputs@io& (0+255),w,b
 27521   006CD0  6ED9               	movwf	fsr2l,c
 27522   006CD2  6ADA               	clrf	fsr2h,c
 27523   006CD4  0E02               	movlw	high _pulseDelays
 27524   006CD6  22DA               	addwfc	fsr2h,f,c
 27525   006CD8  04DE               	decf	postinc2,w,c
 27526   006CDA  A4D8               	btfss	status,2,c
 27527   006CDC  D032               	goto	l247
 27528                           
 27529                           ; BSR set to: 1
 27530                           ;../digitalOut.c: 201:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 27531   006CDE  51D0               	movf	processOutputs@io& (0+255),w,b
 27532   006CE0  0D07               	mullw	7
 27533   006CE2  50F3               	movf	243,w,c
 27534   006CE4  0F11               	addlw	17
 27535   006CE6  EC7F  F05D         	call	_getNV
 27536   006CEA  0100               	movlb	0	; () banked
 27537   006CEC  AB8D               	btfss	?_getNV& (0+255),5,b
 27538   006CEE  D007               	goto	l22208
 27539                           
 27540                           ; BSR set to: 0
 27541                           ;../digitalOut.c: 202:                         setOutputPin(io, TRUE);
 27542   006CF0  0E01               	movlw	1
 27543   006CF2  6F91               	movwf	setOutputPin@state& (0+255),b
 27544   006CF4  0101               	movlb	1	; () banked
 27545   006CF6  51D0               	movf	processOutputs@io& (0+255),w,b
 27546   006CF8  EC89  F037         	call	_setOutputPin
 27547                           
 27548                           ;../digitalOut.c: 203:                     } else {
 27549   006CFC  D006               	goto	l22210
 27550   006CFE                     l22208:
 27551                           
 27552                           ; BSR set to: 0
 27553                           ;../digitalOut.c: 204:                         setOutputPin(io, FALSE);
 27554   006CFE  0E00               	movlw	0
 27555   006D00  6F91               	movwf	setOutputPin@state& (0+255),b
 27556   006D02  0101               	movlb	1	; () banked
 27557   006D04  51D0               	movf	processOutputs@io& (0+255),w,b
 27558   006D06  EC89  F037         	call	_setOutputPin
 27559   006D0A                     l22210:
 27560                           
 27561                           ;../digitalOut.c: 207:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 27562   006D0A  0101               	movlb	1	; () banked
 27563   006D0C  51D0               	movf	processOutputs@io& (0+255),w,b
 27564   006D0E  0D07               	mullw	7
 27565   006D10  50F3               	movf	243,w,c
 27566   006D12  0F11               	addlw	17
 27567   006D14  EC7F  F05D         	call	_getNV
 27568   006D18  0100               	movlb	0	; () banked
 27569   006D1A  B78D               	btfsc	?_getNV& (0+255),3,b
 27570   006D1C  D012               	goto	l247
 27571                           
 27572                           ; BSR set to: 0
 27573                           ;../digitalOut.c: 209:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 27574   006D1E  0101               	movlb	1	; () banked
 27575   006D20  51D0               	movf	processOutputs@io& (0+255),w,b
 27576   006D22  0D07               	mullw	7
 27577   006D24  50F3               	movf	243,w,c
 27578   006D26  0F11               	addlw	17
 27579   006D28  EC7F  F05D         	call	_getNV
 27580   006D2C  0100               	movlb	0	; () banked
 27581   006D2E  518D               	movf	?_getNV& (0+255),w,b
 27582   006D30  0B40               	andlw	64
 27583   006D32  0101               	movlb	1	; () banked
 27584   006D34  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 27585   006D36  51D0               	movf	processOutputs@io& (0+255),w,b
 27586   006D38  0D04               	mullw	4
 27587   006D3A  50F3               	movf	243,w,c
 27588   006D3C  0F08               	addlw	8
 27589   006D3E  EC28  F04E         	call	_sendProducedEvent
 27590   006D42                     l247:
 27591                           
 27592                           ;../digitalOut.c: 214:     }
 27593                           
 27594                           ; BSR set to: 0
 27595   006D42  0101               	movlb	1	; () banked
 27596   006D44  2BD0               	incf	processOutputs@io& (0+255),f,b
 27597                           
 27598                           ; BSR set to: 1
 27599   006D46  0E0F               	movlw	15
 27600   006D48  65D0               	cpfsgt	processOutputs@io& (0+255),b
 27601   006D4A  D71B               	goto	l22178
 27602   006D4C  0012               	return	
 27603   006D4E                     __end_of_processOutputs:
 27604                           	callstack 0
 27605                           
 27606 ;; *************** function _processActions *****************
 27607 ;; Defined at:
 27608 ;;		line 206 in file "../universalEvents.c"
 27609 ;; Parameters:    Size  Location     Type
 27610 ;;		None
 27611 ;; Auto vars:     Size  Location     Type
 27612 ;;  nextAction      1   43[BANK1 ] unsigned char 
 27613 ;;  nextIo          1   40[BANK1 ] unsigned char 
 27614 ;;  nextType        1   39[BANK1 ] unsigned char 
 27615 ;;  action          1   44[BANK1 ] unsigned char 
 27616 ;;  ioAction        1   42[BANK1 ] unsigned char 
 27617 ;;  io              1   41[BANK1 ] unsigned char 
 27618 ;;  type            1   38[BANK1 ] unsigned char 
 27619 ;;  peekItem        1   37[BANK1 ] unsigned char 
 27620 ;;  simultaneous    1   36[BANK1 ] unsigned char 
 27621 ;; Return value:  Size  Location     Type
 27622 ;;                  1    wreg      void 
 27623 ;; Registers used:
 27624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27625 ;; Tracked objects:
 27626 ;;		On entry : 0/0
 27627 ;;		On exit  : 0/0
 27628 ;;		Unchanged: 0/0
 27629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27631 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27633 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27634 ;;Total ram usage:        9 bytes
 27635 ;; Hardware stack levels used: 1
 27636 ;; Hardware stack levels required when called: 20
 27637 ;; This function calls:
 27638 ;;		___awdiv
 27639 ;;		___awmod
 27640 ;;		_completed
 27641 ;;		_deleteTwoActionQueue
 27642 ;;		_doSOD
 27643 ;;		_doWait
 27644 ;;		_doneTwoAction
 27645 ;;		_getNV
 27646 ;;		_getTwoAction
 27647 ;;		_needsStarting
 27648 ;;		_peekTwoActionQueue
 27649 ;;		_setOutputState
 27650 ;;		_startOutput
 27651 ;; This function is called by:
 27652 ;;		_loop
 27653 ;; This function uses a non-reentrant model
 27654 ;;
 27655                           
 27656                           	psect	text99
 27657   00637C                     __ptext99:
 27658                           	callstack 0
 27659   00637C                     _processActions:
 27660                           	callstack 9
 27661                           
 27662                           ;../universalEvents.c: 215:         action = getTwoAction();
 27663                           
 27664                           ; BSR set to: 1
 27665                           ;incstack = 0
 27666                           ;../universalEvents.c: 207:     uint8_t io;;../universalEvents.c: 208:     uint8_t type;
      +                          ;../universalEvents.c: 209:     uint8_t action;;../universalEvents.c: 210:     uint8_t i
      +                          oAction;;../universalEvents.c: 211:     uint8_t simultaneous;;../universalEvents.c: 212:
      +                               uint8_t peekItem;;../universalEvents.c: 214:     while (1) {
 27667   00637C  ECF3  F061         	call	_getTwoAction	;wreg free
 27668   006380  0101               	movlb	1	; () banked
 27669   006382  6FEA               	movwf	processActions@action& (0+255),b
 27670                           
 27671                           ; BSR set to: 1
 27672                           ;../universalEvents.c: 217:         if (action == 0) {
 27673   006384  51EA               	movf	processActions@action& (0+255),w,b
 27674   006386  A4D8               	btfss	status,2,c
 27675   006388  D003               	goto	l22084
 27676   00638A                     u23570:
 27677                           
 27678                           ;../universalEvents.c: 218:             doneTwoAction();
 27679   00638A  EC00  F062         	call	_doneTwoAction	;wreg free
 27680   00638E  0012               	return	
 27681   006390                     l22084:
 27682                           
 27683                           ; BSR set to: 1
 27684                           ;../universalEvents.c: 222:         if (action == 1) {
 27685   006390  05EA               	decf	processActions@action& (0+255),w,b
 27686   006392  A4D8               	btfss	status,2,c
 27687   006394  D003               	goto	l22092
 27688                           
 27689                           ; BSR set to: 1
 27690                           ;../universalEvents.c: 224:             doSOD();
 27691   006396  EC20  F01B         	call	_doSOD	;wreg free
 27692   00639A  D7F7               	goto	u23570
 27693   00639C                     l22092:
 27694                           
 27695                           ; BSR set to: 1
 27696                           ;../universalEvents.c: 228:         if (action == 2) {
 27697   00639C  0E02               	movlw	2
 27698   00639E  19EA               	xorwf	processActions@action& (0+255),w,b
 27699   0063A0  A4D8               	btfss	status,2,c
 27700   0063A2  D008               	goto	l22098
 27701                           
 27702                           ; BSR set to: 1
 27703                           ;../universalEvents.c: 229:             doWait(5);
 27704   0063A4  0E00               	movlw	0
 27705   0063A6  0100               	movlb	0	; () banked
 27706   0063A8  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27707   0063AA  0E05               	movlw	5
 27708   0063AC  6F9D               	movwf	doWait@duration& (0+255),b
 27709   0063AE  EC43  F052         	call	_doWait	;wreg free
 27710   0063B2  0012               	return	
 27711   0063B4                     l22098:
 27712                           
 27713                           ; BSR set to: 1
 27714                           ;../universalEvents.c: 232:         if (action == 3) {
 27715   0063B4  0E03               	movlw	3
 27716   0063B6  19EA               	xorwf	processActions@action& (0+255),w,b
 27717   0063B8  A4D8               	btfss	status,2,c
 27718   0063BA  D008               	goto	l22104
 27719                           
 27720                           ; BSR set to: 1
 27721                           ;../universalEvents.c: 233:             doWait(10);
 27722   0063BC  0E00               	movlw	0
 27723   0063BE  0100               	movlb	0	; () banked
 27724   0063C0  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27725   0063C2  0E0A               	movlw	10
 27726   0063C4  6F9D               	movwf	doWait@duration& (0+255),b
 27727   0063C6  EC43  F052         	call	_doWait	;wreg free
 27728   0063CA  0012               	return	
 27729   0063CC                     l22104:
 27730                           
 27731                           ; BSR set to: 1
 27732                           ;../universalEvents.c: 236:         if (action == 4) {
 27733   0063CC  0E04               	movlw	4
 27734   0063CE  19EA               	xorwf	processActions@action& (0+255),w,b
 27735   0063D0  A4D8               	btfss	status,2,c
 27736   0063D2  D008               	goto	l22110
 27737                           
 27738                           ; BSR set to: 1
 27739                           ;../universalEvents.c: 237:             doWait(20);
 27740   0063D4  0E00               	movlw	0
 27741   0063D6  0100               	movlb	0	; () banked
 27742   0063D8  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27743   0063DA  0E14               	movlw	20
 27744   0063DC  6F9D               	movwf	doWait@duration& (0+255),b
 27745   0063DE  EC43  F052         	call	_doWait	;wreg free
 27746   0063E2  0012               	return	
 27747   0063E4                     l22110:
 27748                           
 27749                           ; BSR set to: 1
 27750                           ;../universalEvents.c: 240:         if (action == 5) {
 27751   0063E4  0E05               	movlw	5
 27752   0063E6  19EA               	xorwf	processActions@action& (0+255),w,b
 27753   0063E8  A4D8               	btfss	status,2,c
 27754   0063EA  D008               	goto	l22116
 27755                           
 27756                           ; BSR set to: 1
 27757                           ;../universalEvents.c: 241:             doWait(50);
 27758   0063EC  0E00               	movlw	0
 27759   0063EE  0100               	movlb	0	; () banked
 27760   0063F0  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 27761   0063F2  0E32               	movlw	50
 27762   0063F4  6F9D               	movwf	doWait@duration& (0+255),b
 27763   0063F6  EC43  F052         	call	_doWait	;wreg free
 27764   0063FA  0012               	return	
 27765   0063FC                     l22116:
 27766                           
 27767                           ; BSR set to: 1
 27768                           ;../universalEvents.c: 244:         simultaneous = action & 0x80;
 27769   0063FC  51EA               	movf	processActions@action& (0+255),w,b
 27770   0063FE  0B80               	andlw	128
 27771   006400  6FE2               	movwf	processActions@simultaneous& (0+255),b
 27772                           
 27773                           ;../universalEvents.c: 245:         ioAction = action&0x7F;
 27774   006402  51EA               	movf	processActions@action& (0+255),w,b
 27775   006404  0B7F               	andlw	127
 27776   006406  6FE8               	movwf	processActions@ioAction& (0+255),b
 27777                           
 27778                           ;../universalEvents.c: 246:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 27779   006408  0E07               	movlw	7
 27780   00640A  65E8               	cpfsgt	processActions@ioAction& (0+255),b
 27781   00640C  D0C1               	goto	u23710
 27782                           
 27783                           ; BSR set to: 1
 27784   00640E  0E58               	movlw	88
 27785   006410  61E8               	cpfslt	processActions@ioAction& (0+255),b
 27786   006412  D0BE               	goto	u23710
 27787                           
 27788                           ; BSR set to: 1
 27789                           ;../universalEvents.c: 249:             io = (((ioAction)-8)/5);
 27790   006414  0EF8               	movlw	248
 27791   006416  25E8               	addwf	processActions@ioAction& (0+255),w,b
 27792   006418  0100               	movlb	0	; () banked
 27793   00641A  6F97               	movwf	___awdiv@dividend& (0+255),b
 27794   00641C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27795   00641E  0EFF               	movlw	255
 27796   006420  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 27797   006422  0E00               	movlw	0
 27798   006424  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27799   006426  0E05               	movlw	5
 27800   006428  6F99               	movwf	___awdiv@divisor& (0+255),b
 27801   00642A  ECCE  F052         	call	___awdiv	;wreg free
 27802   00642E  0100               	movlb	0	; () banked
 27803   006430  5197               	movf	?___awdiv& (0+255),w,b
 27804   006432  0101               	movlb	1	; () banked
 27805   006434  6FE7               	movwf	processActions@io& (0+255),b
 27806                           
 27807                           ;../universalEvents.c: 250:             ioAction = (((ioAction)-8)%5);
 27808   006436  0EF8               	movlw	248
 27809   006438  25E8               	addwf	processActions@ioAction& (0+255),w,b
 27810   00643A  0100               	movlb	0	; () banked
 27811   00643C  6F8D               	movwf	___awmod@dividend& (0+255),b
 27812   00643E  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 27813   006440  0EFF               	movlw	255
 27814   006442  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 27815   006444  0E00               	movlw	0
 27816   006446  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 27817   006448  0E05               	movlw	5
 27818   00644A  6F8F               	movwf	___awmod@divisor& (0+255),b
 27819   00644C  EC71  F056         	call	___awmod	;wreg free
 27820   006450  0100               	movlb	0	; () banked
 27821   006452  518D               	movf	?___awmod& (0+255),w,b
 27822   006454  0101               	movlb	1	; () banked
 27823   006456  6FE8               	movwf	processActions@ioAction& (0+255),b
 27824                           
 27825                           ; BSR set to: 1
 27826                           ;../universalEvents.c: 251:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 27827   006458  51E7               	movf	processActions@io& (0+255),w,b
 27828   00645A  0D07               	mullw	7
 27829   00645C  50F3               	movf	243,w,c
 27830   00645E  0F10               	addlw	16
 27831   006460  EC7F  F05D         	call	_getNV
 27832   006464  0100               	movlb	0	; () banked
 27833   006466  518D               	movf	?_getNV& (0+255),w,b
 27834   006468  0101               	movlb	1	; () banked
 27835   00646A  6FE4               	movwf	processActions@type& (0+255),b
 27836                           
 27837                           ; BSR set to: 1
 27838                           ;../universalEvents.c: 254:             setOutputState(io, ioAction, type);
 27839   00646C  C1E8  F093         	movff	processActions@ioAction,setOutputState@act
 27840   006470  C1E4  F094         	movff	processActions@type,setOutputState@type
 27841   006474  51E7               	movf	processActions@io& (0+255),w,b
 27842   006476  EC71  F05A         	call	_setOutputState
 27843                           
 27844                           ;../universalEvents.c: 255:             if (needsStarting(io, ioAction, type)) {
 27845   00647A  C1E8  F08D         	movff	processActions@ioAction,needsStarting@act
 27846   00647E  C1E4  F08E         	movff	processActions@type,needsStarting@type
 27847   006482  0101               	movlb	1	; () banked
 27848   006484  51E7               	movf	processActions@io& (0+255),w,b
 27849   006486  EC96  F053         	call	_needsStarting
 27850   00648A  0900               	iorlw	0
 27851   00648C  B4D8               	btfsc	status,2,c
 27852   00648E  D008               	goto	l22130
 27853                           
 27854                           ;../universalEvents.c: 256:                 startOutput(io, ioAction, type);
 27855   006490  C1E8  F1DF         	movff	processActions@ioAction,startOutput@act
 27856   006494  C1E4  F1E0         	movff	processActions@type,startOutput@type
 27857   006498  0101               	movlb	1	; () banked
 27858   00649A  51E7               	movf	processActions@io& (0+255),w,b
 27859   00649C  EC67  F059         	call	_startOutput
 27860   0064A0                     l22130:
 27861                           
 27862                           ;../universalEvents.c: 259:             peekItem = 1;
 27863   0064A0  0E01               	movlw	1
 27864   0064A2  0101               	movlb	1	; () banked
 27865   0064A4  6FE3               	movwf	processActions@peekItem& (0+255),b
 27866                           
 27867                           ;../universalEvents.c: 260:             while (simultaneous) {
 27868   0064A6  D067               	goto	l22164
 27869   0064A8                     l22132:
 27870                           
 27871                           ; BSR set to: 1
 27872                           ;../universalEvents.c: 261:                 uint8_t nextAction;;../universalEvents.c: 26
      +                          2:                 uint8_t nextIo;;../universalEvents.c: 263:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 265:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 27873   0064A8  51E3               	movf	processActions@peekItem& (0+255),w,b
 27874   0064AA  EC89  F052         	call	_peekTwoActionQueue
 27875   0064AE  0101               	movlb	1	; () banked
 27876   0064B0  6FE9               	movwf	processActions@nextAction& (0+255),b
 27877                           
 27878                           ; BSR set to: 1
 27879                           ;../universalEvents.c: 267:                 if (nextAction == 0) break;
 27880   0064B2  51E9               	movf	processActions@nextAction& (0+255),w,b
 27881   0064B4  B4D8               	btfsc	status,2,c
 27882   0064B6  D062               	goto	u23700
 27883                           
 27884                           ; BSR set to: 1
 27885                           ;../universalEvents.c: 268:                 simultaneous = nextAction & 0x80;
 27886   0064B8  51E9               	movf	processActions@nextAction& (0+255),w,b
 27887   0064BA  0B80               	andlw	128
 27888   0064BC  6FE2               	movwf	processActions@simultaneous& (0+255),b
 27889                           
 27890                           ; BSR set to: 1
 27891                           ;../universalEvents.c: 269:                 nextAction &= 0x7F;
 27892   0064BE  9FE9               	bcf	processActions@nextAction& (0+255),7,b
 27893                           
 27894                           ; BSR set to: 1
 27895                           ;../universalEvents.c: 270:                 nextIo = (((nextAction)-8)/5);
 27896   0064C0  0EF8               	movlw	248
 27897   0064C2  25E9               	addwf	processActions@nextAction& (0+255),w,b
 27898   0064C4  0100               	movlb	0	; () banked
 27899   0064C6  6F97               	movwf	___awdiv@dividend& (0+255),b
 27900   0064C8  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27901   0064CA  0EFF               	movlw	255
 27902   0064CC  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 27903   0064CE  0E00               	movlw	0
 27904   0064D0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27905   0064D2  0E05               	movlw	5
 27906   0064D4  6F99               	movwf	___awdiv@divisor& (0+255),b
 27907   0064D6  ECCE  F052         	call	___awdiv	;wreg free
 27908   0064DA  0100               	movlb	0	; () banked
 27909   0064DC  5197               	movf	?___awdiv& (0+255),w,b
 27910   0064DE  0101               	movlb	1	; () banked
 27911   0064E0  6FE6               	movwf	processActions@nextIo& (0+255),b
 27912                           
 27913                           ; BSR set to: 1
 27914                           ;../universalEvents.c: 271:                 if (nextIo == io) {
 27915   0064E2  51E7               	movf	processActions@io& (0+255),w,b
 27916   0064E4  19E6               	xorwf	processActions@nextIo& (0+255),w,b
 27917   0064E6  B4D8               	btfsc	status,2,c
 27918   0064E8  D049               	goto	u23700
 27919                           
 27920                           ; BSR set to: 1
 27921                           ;../universalEvents.c: 277:                 nextAction = (((nextAction)-8)%5);
 27922   0064EA  0EF8               	movlw	248
 27923   0064EC  25E9               	addwf	processActions@nextAction& (0+255),w,b
 27924   0064EE  0100               	movlb	0	; () banked
 27925   0064F0  6F8D               	movwf	___awmod@dividend& (0+255),b
 27926   0064F2  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 27927   0064F4  0EFF               	movlw	255
 27928   0064F6  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 27929   0064F8  0E00               	movlw	0
 27930   0064FA  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 27931   0064FC  0E05               	movlw	5
 27932   0064FE  6F8F               	movwf	___awmod@divisor& (0+255),b
 27933   006500  EC71  F056         	call	___awmod	;wreg free
 27934   006504  0100               	movlb	0	; () banked
 27935   006506  518D               	movf	?___awmod& (0+255),w,b
 27936   006508  0101               	movlb	1	; () banked
 27937   00650A  6FE9               	movwf	processActions@nextAction& (0+255),b
 27938                           
 27939                           ; BSR set to: 1
 27940                           ;../universalEvents.c: 278:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 27941   00650C  51E7               	movf	processActions@io& (0+255),w,b
 27942   00650E  0D07               	mullw	7
 27943   006510  50F3               	movf	243,w,c
 27944   006512  0F10               	addlw	16
 27945   006514  EC7F  F05D         	call	_getNV
 27946   006518  0100               	movlb	0	; () banked
 27947   00651A  518D               	movf	?_getNV& (0+255),w,b
 27948   00651C  0101               	movlb	1	; () banked
 27949   00651E  6FE5               	movwf	processActions@nextType& (0+255),b
 27950                           
 27951                           ; BSR set to: 1
 27952                           ;../universalEvents.c: 279:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 27953   006520  C1E9  F093         	movff	processActions@nextAction,setOutputState@act
 27954   006524  C1E5  F094         	movff	processActions@nextType,setOutputState@type
 27955   006528  51E6               	movf	processActions@nextIo& (0+255),w,b
 27956   00652A  EC71  F05A         	call	_setOutputState
 27957                           
 27958                           ;../universalEvents.c: 280:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 27959   00652E  C1E9  F08D         	movff	processActions@nextAction,needsStarting@act
 27960   006532  C1E5  F08E         	movff	processActions@nextType,needsStarting@type
 27961   006536  0101               	movlb	1	; () banked
 27962   006538  51E6               	movf	processActions@nextIo& (0+255),w,b
 27963   00653A  EC96  F053         	call	_needsStarting
 27964   00653E  0900               	iorlw	0
 27965   006540  B4D8               	btfsc	status,2,c
 27966   006542  D008               	goto	l22158
 27967                           
 27968                           ;../universalEvents.c: 281:                     startOutput(nextIo, nextAction, nextType
      +                          );
 27969   006544  C1E9  F1DF         	movff	processActions@nextAction,startOutput@act
 27970   006548  C1E5  F1E0         	movff	processActions@nextType,startOutput@type
 27971   00654C  0101               	movlb	1	; () banked
 27972   00654E  51E6               	movf	processActions@nextIo& (0+255),w,b
 27973   006550  EC67  F059         	call	_startOutput
 27974   006554                     l22158:
 27975                           
 27976                           ;../universalEvents.c: 283:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 27977   006554  C1E9  F08D         	movff	processActions@nextAction,completed@action
 27978   006558  C1E5  F08E         	movff	processActions@nextType,completed@type
 27979   00655C  0101               	movlb	1	; () banked
 27980   00655E  51E6               	movf	processActions@nextIo& (0+255),w,b
 27981   006560  ECDA  F050         	call	_completed
 27982   006564  0900               	iorlw	0
 27983   006566  B4D8               	btfsc	status,2,c
 27984   006568  D004               	goto	l22162
 27985                           
 27986                           ;../universalEvents.c: 284:                     deleteTwoActionQueue(peekItem);
 27987   00656A  0101               	movlb	1	; () banked
 27988   00656C  51E3               	movf	processActions@peekItem& (0+255),w,b
 27989   00656E  EC16  F054         	call	_deleteTwoActionQueue
 27990   006572                     l22162:
 27991                           
 27992                           ;../universalEvents.c: 286:                 peekItem++;
 27993   006572  0101               	movlb	1	; () banked
 27994   006574  2BE3               	incf	processActions@peekItem& (0+255),f,b
 27995   006576                     l22164:
 27996                           
 27997                           ; BSR set to: 1
 27998                           ;../universalEvents.c: 260:             while (simultaneous) {
 27999   006576  51E2               	movf	processActions@simultaneous& (0+255),w,b
 28000   006578  A4D8               	btfss	status,2,c
 28001   00657A  D796               	goto	l22132
 28002   00657C                     u23700:
 28003                           
 28004                           ; BSR set to: 1
 28005                           ;../universalEvents.c: 289:             if (completed(io, action, type)) {
 28006   00657C  C1EA  F08D         	movff	processActions@action,completed@action
 28007   006580  C1E4  F08E         	movff	processActions@type,completed@type
 28008   006584  51E7               	movf	processActions@io& (0+255),w,b
 28009   006586  ECDA  F050         	call	_completed
 28010   00658A  0900               	iorlw	0
 28011   00658C  B4D8               	btfsc	status,2,c
 28012   00658E  0012               	return	
 28013   006590                     u23710:
 28014                           
 28015                           ;../universalEvents.c: 290:                 doneTwoAction();
 28016   006590  EC00  F062         	call	_doneTwoAction	;wreg free
 28017                           
 28018                           ;../universalEvents.c: 291:             } else {
 28019   006594  D6F3               	goto	__ptext99
 28020   006596                     __end_of_processActions:
 28021                           	callstack 0
 28022                           
 28023 ;; *************** function _startOutput *****************
 28024 ;; Defined at:
 28025 ;;		line 69 in file "../outputs.c"
 28026 ;; Parameters:    Size  Location     Type
 28027 ;;  io              1    wreg     unsigned char 
 28028 ;;  act             1   33[BANK1 ] unsigned char 
 28029 ;;  type            1   34[BANK1 ] unsigned char 
 28030 ;; Auto vars:     Size  Location     Type
 28031 ;;  io              1   35[BANK1 ] unsigned char 
 28032 ;; Return value:  Size  Location     Type
 28033 ;;                  1    wreg      void 
 28034 ;; Registers used:
 28035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28036 ;; Tracked objects:
 28037 ;;		On entry : 0/0
 28038 ;;		On exit  : 0/0
 28039 ;;		Unchanged: 0/0
 28040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28041 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28042 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28044 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28045 ;;Total ram usage:        3 bytes
 28046 ;; Hardware stack levels used: 1
 28047 ;; Hardware stack levels required when called: 19
 28048 ;; This function calls:
 28049 ;;		_startBounceOutput
 28050 ;;		_startDigitalOutput
 28051 ;;		_startMultiOutput
 28052 ;;		_startServoOutput
 28053 ;; This function is called by:
 28054 ;;		_processActions
 28055 ;; This function uses a non-reentrant model
 28056 ;;
 28057                           
 28058                           	psect	text100
 28059   00B2CE                     __ptext100:
 28060                           	callstack 0
 28061   00B2CE                     _startOutput:
 28062                           	callstack 9
 28063                           
 28064                           ;incstack = 0
 28065                           ;startOutput@io stored from wreg
 28066   00B2CE  0101               	movlb	1	; () banked
 28067   00B2D0  6FE1               	movwf	startOutput@io& (0+255),b
 28068                           
 28069                           ;../outputs.c: 70:     switch(type) {
 28070   00B2D2  D018               	goto	l20740
 28071   00B2D4                     l20722:
 28072                           
 28073                           ; BSR set to: 1
 28074                           ;../outputs.c: 75:             startDigitalOutput(io, act);
 28075   00B2D4  C1DF  F1D7         	movff	startOutput@act,startDigitalOutput@state
 28076   00B2D8  51E1               	movf	startOutput@io& (0+255),w,b
 28077   00B2DA  EC9D  F02C         	call	_startDigitalOutput
 28078   00B2DE  0012               	return	
 28079   00B2E0                     l20726:
 28080                           
 28081                           ; BSR set to: 1
 28082                           ;../outputs.c: 79:             startBounceOutput(io, act);
 28083   00B2E0  C1DF  F08D         	movff	startOutput@act,startBounceOutput@action
 28084   00B2E4  51E1               	movf	startOutput@io& (0+255),w,b
 28085   00B2E6  ECB0  F057         	call	_startBounceOutput
 28086   00B2EA  0012               	return	
 28087   00B2EC                     l20730:
 28088                           
 28089                           ; BSR set to: 1
 28090                           ;../outputs.c: 84:             startServoOutput(io, act);
 28091   00B2EC  C1DF  F091         	movff	startOutput@act,startServoOutput@action
 28092   00B2F0  51E1               	movf	startOutput@io& (0+255),w,b
 28093   00B2F2  EC09  F049         	call	_startServoOutput
 28094   00B2F6  0012               	return	
 28095   00B2F8                     l20734:
 28096                           
 28097                           ; BSR set to: 1
 28098                           ;../outputs.c: 89:             startMultiOutput(io, act);
 28099   00B2F8  C1DF  F091         	movff	startOutput@act,startMultiOutput@action
 28100   00B2FC  51E1               	movf	startOutput@io& (0+255),w,b
 28101   00B2FE  EC79  F04E         	call	_startMultiOutput
 28102   00B302  0012               	return	
 28103   00B304                     l20740:
 28104   00B304  0101               	movlb	1	; () banked
 28105   00B306  51E0               	movf	startOutput@type& (0+255),w,b
 28106                           
 28107                           ; Switch size 1, requested type "simple"
 28108                           ; Number of cases is 5, Range of values is 0 to 4
 28109                           ; switch strategies available:
 28110                           ; Name         Instructions Cycles
 28111                           ; simple_byte           16     9 (average)
 28112                           ;	Chosen strategy is simple_byte
 28113   00B308  0A00               	xorlw	0	; case 0
 28114   00B30A  B4D8               	btfsc	status,2,c
 28115   00B30C  0012               	return	
 28116   00B30E  0A01               	xorlw	1	; case 1
 28117   00B310  B4D8               	btfsc	status,2,c
 28118   00B312  D7E0               	goto	l20722
 28119   00B314  0A03               	xorlw	3	; case 2
 28120   00B316  B4D8               	btfsc	status,2,c
 28121   00B318  D7E9               	goto	l20730
 28122   00B31A  0A01               	xorlw	1	; case 3
 28123   00B31C  B4D8               	btfsc	status,2,c
 28124   00B31E  D7E0               	goto	l20726
 28125   00B320  0A07               	xorlw	7	; case 4
 28126   00B322  A4D8               	btfss	status,2,c
 28127   00B324  0012               	return	
 28128   00B326  D7E8               	goto	l20734
 28129   00B328                     __end_of_startOutput:
 28130                           	callstack 0
 28131                           
 28132 ;; *************** function _startServoOutput *****************
 28133 ;; Defined at:
 28134 ;;		line 538 in file "../servo.c"
 28135 ;; Parameters:    Size  Location     Type
 28136 ;;  io              1    wreg     unsigned char 
 28137 ;;  action          1   49[BANK0 ] unsigned char 
 28138 ;; Auto vars:     Size  Location     Type
 28139 ;;  io              1   51[BANK0 ] unsigned char 
 28140 ;; Return value:  Size  Location     Type
 28141 ;;                  1    wreg      void 
 28142 ;; Registers used:
 28143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28144 ;; Tracked objects:
 28145 ;;		On entry : 0/0
 28146 ;;		On exit  : 0/0
 28147 ;;		Unchanged: 0/0
 28148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28149 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28150 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28151 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28152 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28153 ;;Total ram usage:        3 bytes
 28154 ;; Hardware stack levels used: 1
 28155 ;; Hardware stack levels required when called: 13
 28156 ;; This function calls:
 28157 ;;		_getNV
 28158 ;; This function is called by:
 28159 ;;		_APP_nvValueChanged
 28160 ;;		_startOutput
 28161 ;; This function uses a non-reentrant model
 28162 ;;
 28163                           
 28164                           	psect	text101
 28165   009212                     __ptext101:
 28166                           	callstack 0
 28167   009212                     _startServoOutput:
 28168                           	callstack 13
 28169                           
 28170                           ;incstack = 0
 28171                           ;startServoOutput@io stored from wreg
 28172   009212  0100               	movlb	0	; () banked
 28173   009214  6F93               	movwf	startServoOutput@io& (0+255),b
 28174                           
 28175                           ;../servo.c: 539:     switch (action) {
 28176   009216  D017               	goto	l19322
 28177   009218                     l19316:
 28178                           
 28179                           ; BSR set to: 0
 28180                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 28181   009218  5193               	movf	startServoOutput@io& (0+255),w,b
 28182   00921A  0D07               	mullw	7
 28183   00921C  50F3               	movf	243,w,c
 28184   00921E  0F15               	addlw	21
 28185   009220  EC7F  F05D         	call	_getNV
 28186   009224  D006               	goto	L9
 28187   009226                     l19318:
 28188                           
 28189                           ; BSR set to: 0
 28190                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 28191   009226  5193               	movf	startServoOutput@io& (0+255),w,b
 28192   009228  0D07               	mullw	7
 28193   00922A  50F3               	movf	243,w,c
 28194   00922C  0F14               	addlw	20
 28195   00922E  EC7F  F05D         	call	_getNV
 28196   009232                     L9:
 28197   009232  0E20               	movlw	low _stepsPerPollSpeed
 28198   009234  0100               	movlb	0	; () banked
 28199   009236  2593               	addwf	startServoOutput@io& (0+255),w,b
 28200   009238  6ED9               	movwf	fsr2l,c
 28201   00923A  6ADA               	clrf	fsr2h,c
 28202   00923C  0E01               	movlw	high _stepsPerPollSpeed
 28203   00923E  22DA               	addwfc	fsr2h,f,c
 28204   009240  C08D  FFDF         	movff	?_getNV,indf2
 28205                           
 28206                           ;../servo.c: 545:             break;
 28207   009244  D008               	goto	l19324
 28208   009246                     l19322:
 28209   009246  0100               	movlb	0	; () banked
 28210   009248  5191               	movf	startServoOutput@action& (0+255),w,b
 28211                           
 28212                           ; Switch size 1, requested type "simple"
 28213                           ; Number of cases is 2, Range of values is 1 to 2
 28214                           ; switch strategies available:
 28215                           ; Name         Instructions Cycles
 28216                           ; simple_byte            7     4 (average)
 28217                           ;	Chosen strategy is simple_byte
 28218   00924A  0A01               	xorlw	1	; case 1
 28219   00924C  B4D8               	btfsc	status,2,c
 28220   00924E  D7EB               	goto	l19318
 28221   009250  0A03               	xorlw	3	; case 2
 28222   009252  B4D8               	btfsc	status,2,c
 28223   009254  D7E1               	goto	l19316
 28224   009256                     l19324:
 28225                           
 28226                           ; BSR set to: 0
 28227                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 28228   009256  0E20               	movlw	low _stepsPerPollSpeed
 28229   009258  2593               	addwf	startServoOutput@io& (0+255),w,b
 28230   00925A  6ED9               	movwf	fsr2l,c
 28231   00925C  6ADA               	clrf	fsr2h,c
 28232   00925E  0E01               	movlw	high _stepsPerPollSpeed
 28233   009260  22DA               	addwfc	fsr2h,f,c
 28234   009262  0EEA               	movlw	234
 28235   009264  64DF               	cpfsgt	indf2,c
 28236   009266  D00E               	goto	l19328
 28237                           
 28238                           ; BSR set to: 0
 28239                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 28240   009268  0E20               	movlw	low _stepsPerPollSpeed
 28241   00926A  2593               	addwf	startServoOutput@io& (0+255),w,b
 28242   00926C  6ED9               	movwf	fsr2l,c
 28243   00926E  6ADA               	clrf	fsr2h,c
 28244   009270  0E01               	movlw	high _stepsPerPollSpeed
 28245   009272  22DA               	addwfc	fsr2h,f,c
 28246   009274  0EEA               	movlw	234
 28247   009276  5EDF               	subwf	indf2,f,c
 28248                           
 28249                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 28250   009278  0E94               	movlw	low _pollsPerStepSpeed
 28251   00927A  2593               	addwf	startServoOutput@io& (0+255),w,b
 28252   00927C  6ED9               	movwf	fsr2l,c
 28253   00927E  6ADA               	clrf	fsr2h,c
 28254   009280  0E02               	movlw	high _pollsPerStepSpeed
 28255   009282  D01E               	goto	L10
 28256   009284                     l19328:
 28257                           
 28258                           ; BSR set to: 0
 28259                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28260   009284  0E94               	movlw	low _pollsPerStepSpeed
 28261   009286  2593               	addwf	startServoOutput@io& (0+255),w,b
 28262   009288  6ED9               	movwf	fsr2l,c
 28263   00928A  6ADA               	clrf	fsr2h,c
 28264   00928C  0E02               	movlw	high _pollsPerStepSpeed
 28265   00928E  22DA               	addwfc	fsr2h,f,c
 28266   009290  0E20               	movlw	low _stepsPerPollSpeed
 28267   009292  2593               	addwf	startServoOutput@io& (0+255),w,b
 28268   009294  6EE1               	movwf	fsr1l,c
 28269   009296  6AE2               	clrf	fsr1h,c
 28270   009298  0E01               	movlw	high _stepsPerPollSpeed
 28271   00929A  22E2               	addwfc	fsr1h,f,c
 28272   00929C  50E7               	movf	indf1,w,c
 28273   00929E  6F92               	movwf	??_startServoOutput& (0+255),b
 28274   0092A0  5192               	movf	??_startServoOutput& (0+255),w,b
 28275   0092A2  08EB               	sublw	235
 28276   0092A4  6EDF               	movwf	indf2,c
 28277                           
 28278                           ; BSR set to: 0
 28279                           ;../servo.c: 552:         pollCount[io] = 1;
 28280   0092A6  0E84               	movlw	low _pollCount
 28281   0092A8  2593               	addwf	startServoOutput@io& (0+255),w,b
 28282   0092AA  6ED9               	movwf	fsr2l,c
 28283   0092AC  6ADA               	clrf	fsr2h,c
 28284   0092AE  0E02               	movlw	high _pollCount
 28285   0092B0  22DA               	addwfc	fsr2h,f,c
 28286   0092B2  0E01               	movlw	1
 28287   0092B4  6EDF               	movwf	indf2,c
 28288                           
 28289                           ; BSR set to: 0
 28290                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 28291   0092B6  0E20               	movlw	low _stepsPerPollSpeed
 28292   0092B8  2593               	addwf	startServoOutput@io& (0+255),w,b
 28293   0092BA  6ED9               	movwf	fsr2l,c
 28294   0092BC  6ADA               	clrf	fsr2h,c
 28295   0092BE  0E01               	movlw	high _stepsPerPollSpeed
 28296   0092C0                     L10:
 28297   0092C0  22DA               	addwfc	fsr2h,f,c
 28298   0092C2  6ADF               	clrf	indf2,c
 28299                           
 28300                           ; BSR set to: 0
 28301                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 28302   0092C4  0E30               	movlw	low _servoState
 28303   0092C6  2593               	addwf	startServoOutput@io& (0+255),w,b
 28304   0092C8  6ED9               	movwf	fsr2l,c
 28305   0092CA  6ADA               	clrf	fsr2h,c
 28306   0092CC  0E01               	movlw	high _servoState
 28307   0092CE  22DA               	addwfc	fsr2h,f,c
 28308   0092D0  0E03               	movlw	3
 28309   0092D2  6EDF               	movwf	indf2,c
 28310                           
 28311                           ; BSR set to: 0
 28312   0092D4  0012               	return		;funcret
 28313   0092D6                     __end_of_startServoOutput:
 28314                           	callstack 0
 28315                           
 28316 ;; *************** function _startMultiOutput *****************
 28317 ;; Defined at:
 28318 ;;		line 584 in file "../servo.c"
 28319 ;; Parameters:    Size  Location     Type
 28320 ;;  io              1    wreg     unsigned char 
 28321 ;;  action          1   49[BANK0 ] unsigned char 
 28322 ;; Auto vars:     Size  Location     Type
 28323 ;;  io              1   51[BANK0 ] unsigned char 
 28324 ;; Return value:  Size  Location     Type
 28325 ;;                  1    wreg      void 
 28326 ;; Registers used:
 28327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28328 ;; Tracked objects:
 28329 ;;		On entry : 0/0
 28330 ;;		On exit  : 0/0
 28331 ;;		Unchanged: 0/0
 28332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28333 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28335 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28336 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28337 ;;Total ram usage:        3 bytes
 28338 ;; Hardware stack levels used: 1
 28339 ;; Hardware stack levels required when called: 13
 28340 ;; This function calls:
 28341 ;;		_getNV
 28342 ;; This function is called by:
 28343 ;;		_APP_nvValueChanged
 28344 ;;		_startOutput
 28345 ;; This function uses a non-reentrant model
 28346 ;;
 28347                           
 28348                           	psect	text102
 28349   009CF2                     __ptext102:
 28350                           	callstack 0
 28351   009CF2                     _startMultiOutput:
 28352                           	callstack 13
 28353                           
 28354                           ; BSR set to: 0
 28355                           ;incstack = 0
 28356                           ;startMultiOutput@io stored from wreg
 28357   009CF2  0100               	movlb	0	; () banked
 28358   009CF4  6F93               	movwf	startMultiOutput@io& (0+255),b
 28359                           
 28360                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 28361   009CF6  0E03               	movlw	3
 28362   009CF8  EC7F  F05D         	call	_getNV
 28363   009CFC  0E20               	movlw	low _stepsPerPollSpeed
 28364   009CFE  0100               	movlb	0	; () banked
 28365   009D00  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28366   009D02  6ED9               	movwf	fsr2l,c
 28367   009D04  6ADA               	clrf	fsr2h,c
 28368   009D06  0E01               	movlw	high _stepsPerPollSpeed
 28369   009D08  22DA               	addwfc	fsr2h,f,c
 28370   009D0A  C08D  FFDF         	movff	?_getNV,indf2
 28371                           
 28372                           ; BSR set to: 0
 28373                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 28374   009D0E  0E20               	movlw	low _stepsPerPollSpeed
 28375   009D10  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28376   009D12  6ED9               	movwf	fsr2l,c
 28377   009D14  6ADA               	clrf	fsr2h,c
 28378   009D16  0E01               	movlw	high _stepsPerPollSpeed
 28379   009D18  22DA               	addwfc	fsr2h,f,c
 28380   009D1A  0EEA               	movlw	234
 28381   009D1C  64DF               	cpfsgt	indf2,c
 28382   009D1E  D00E               	goto	l19392
 28383                           
 28384                           ; BSR set to: 0
 28385                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 28386   009D20  0E20               	movlw	low _stepsPerPollSpeed
 28387   009D22  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28388   009D24  6ED9               	movwf	fsr2l,c
 28389   009D26  6ADA               	clrf	fsr2h,c
 28390   009D28  0E01               	movlw	high _stepsPerPollSpeed
 28391   009D2A  22DA               	addwfc	fsr2h,f,c
 28392   009D2C  0EEA               	movlw	234
 28393   009D2E  5EDF               	subwf	indf2,f,c
 28394                           
 28395                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 28396   009D30  0E94               	movlw	low _pollsPerStepSpeed
 28397   009D32  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28398   009D34  6ED9               	movwf	fsr2l,c
 28399   009D36  6ADA               	clrf	fsr2h,c
 28400   009D38  0E02               	movlw	high _pollsPerStepSpeed
 28401   009D3A  D01E               	goto	L11
 28402   009D3C                     l19392:
 28403                           
 28404                           ; BSR set to: 0
 28405                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 28406   009D3C  0E94               	movlw	low _pollsPerStepSpeed
 28407   009D3E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28408   009D40  6ED9               	movwf	fsr2l,c
 28409   009D42  6ADA               	clrf	fsr2h,c
 28410   009D44  0E02               	movlw	high _pollsPerStepSpeed
 28411   009D46  22DA               	addwfc	fsr2h,f,c
 28412   009D48  0E20               	movlw	low _stepsPerPollSpeed
 28413   009D4A  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28414   009D4C  6EE1               	movwf	fsr1l,c
 28415   009D4E  6AE2               	clrf	fsr1h,c
 28416   009D50  0E01               	movlw	high _stepsPerPollSpeed
 28417   009D52  22E2               	addwfc	fsr1h,f,c
 28418   009D54  50E7               	movf	indf1,w,c
 28419   009D56  6F92               	movwf	??_startMultiOutput& (0+255),b
 28420   009D58  5192               	movf	??_startMultiOutput& (0+255),w,b
 28421   009D5A  08EB               	sublw	235
 28422   009D5C  6EDF               	movwf	indf2,c
 28423                           
 28424                           ; BSR set to: 0
 28425                           ;../servo.c: 592:         pollCount[io] = 1;
 28426   009D5E  0E84               	movlw	low _pollCount
 28427   009D60  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28428   009D62  6ED9               	movwf	fsr2l,c
 28429   009D64  6ADA               	clrf	fsr2h,c
 28430   009D66  0E02               	movlw	high _pollCount
 28431   009D68  22DA               	addwfc	fsr2h,f,c
 28432   009D6A  0E01               	movlw	1
 28433   009D6C  6EDF               	movwf	indf2,c
 28434                           
 28435                           ; BSR set to: 0
 28436                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 28437   009D6E  0E20               	movlw	low _stepsPerPollSpeed
 28438   009D70  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28439   009D72  6ED9               	movwf	fsr2l,c
 28440   009D74  6ADA               	clrf	fsr2h,c
 28441   009D76  0E01               	movlw	high _stepsPerPollSpeed
 28442   009D78                     L11:
 28443   009D78  22DA               	addwfc	fsr2h,f,c
 28444   009D7A  6ADF               	clrf	indf2,c
 28445                           
 28446                           ; BSR set to: 0
 28447                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 28448   009D7C  0E30               	movlw	low _servoState
 28449   009D7E  2593               	addwf	startMultiOutput@io& (0+255),w,b
 28450   009D80  6ED9               	movwf	fsr2l,c
 28451   009D82  6ADA               	clrf	fsr2h,c
 28452   009D84  0E01               	movlw	high _servoState
 28453   009D86  22DA               	addwfc	fsr2h,f,c
 28454   009D88  0E03               	movlw	3
 28455   009D8A  6EDF               	movwf	indf2,c
 28456                           
 28457                           ; BSR set to: 0
 28458   009D8C  0012               	return		;funcret
 28459   009D8E                     __end_of_startMultiOutput:
 28460                           	callstack 0
 28461                           
 28462 ;; *************** function _startDigitalOutput *****************
 28463 ;; Defined at:
 28464 ;;		line 105 in file "../digitalOut.c"
 28465 ;; Parameters:    Size  Location     Type
 28466 ;;  io              1    wreg     unsigned char 
 28467 ;;  state           1   25[BANK1 ] unsigned char 
 28468 ;; Auto vars:     Size  Location     Type
 28469 ;;  io              1   32[BANK1 ] unsigned char 
 28470 ;;  actionState     1   31[BANK1 ] enum E12700
 28471 ;;  pinState        1   30[BANK1 ] enum E12700
 28472 ;; Return value:  Size  Location     Type
 28473 ;;                  1    wreg      void 
 28474 ;; Registers used:
 28475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28476 ;; Tracked objects:
 28477 ;;		On entry : 0/0
 28478 ;;		On exit  : 0/0
 28479 ;;		Unchanged: 0/0
 28480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28481 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28482 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28483 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28484 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28485 ;;Total ram usage:        8 bytes
 28486 ;; Hardware stack levels used: 1
 28487 ;; Hardware stack levels required when called: 18
 28488 ;; This function calls:
 28489 ;;		_getNV
 28490 ;;		_sendInvertedProducedEvent
 28491 ;;		_setOutputPin
 28492 ;;		_writeNVM
 28493 ;; This function is called by:
 28494 ;;		_startOutput
 28495 ;; This function uses a non-reentrant model
 28496 ;;
 28497                           
 28498                           	psect	text103
 28499   00593A                     __ptext103:
 28500                           	callstack 0
 28501   00593A                     _startDigitalOutput:
 28502                           	callstack 9
 28503                           
 28504                           ; BSR set to: 0
 28505                           ;incstack = 0
 28506                           ;startDigitalOutput@io stored from wreg
 28507   00593A  0101               	movlb	1	; () banked
 28508   00593C  6FDE               	movwf	startDigitalOutput@io& (0+255),b
 28509                           
 28510                           ;../digitalOut.c: 106:     Boolean pinState;;../digitalOut.c: 107:     Boolean actionSta
      +                          te;;../digitalOut.c: 114:     if (state == 3) {
 28511   00593E  0E03               	movlw	3
 28512   005940  0101               	movlb	1	; () banked
 28513   005942  19D7               	xorwf	startDigitalOutput@state& (0+255),w,b
 28514   005944  A4D8               	btfss	status,2,c
 28515   005946  D058               	goto	l19614
 28516                           
 28517                           ; BSR set to: 1
 28518                           ;../digitalOut.c: 115:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 28519   005948  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28520   00594A  0D07               	mullw	7
 28521   00594C  50F3               	movf	243,w,c
 28522   00594E  0F13               	addlw	19
 28523   005950  EC7F  F05D         	call	_getNV
 28524   005954  0ED4               	movlw	low _flashDelays
 28525   005956  0101               	movlb	1	; () banked
 28526   005958  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28527   00595A  6ED9               	movwf	fsr2l,c
 28528   00595C  6ADA               	clrf	fsr2h,c
 28529   00595E  0E02               	movlw	high _flashDelays
 28530   005960  22DA               	addwfc	fsr2h,f,c
 28531   005962  0100               	movlb	0	; () banked
 28532   005964  C08D  FFDF         	movff	?_getNV,indf2
 28533                           
 28534                           ; BSR set to: 0
 28535                           ;../digitalOut.c: 116:         pulseDelays[io] = 1;
 28536   005968  0EE4               	movlw	low _pulseDelays
 28537   00596A  0101               	movlb	1	; () banked
 28538   00596C  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28539   00596E  6ED9               	movwf	fsr2l,c
 28540   005970  6ADA               	clrf	fsr2h,c
 28541   005972  0E02               	movlw	high _pulseDelays
 28542   005974  22DA               	addwfc	fsr2h,f,c
 28543   005976  0E01               	movlw	1
 28544   005978  6EDF               	movwf	indf2,c
 28545                           
 28546                           ; BSR set to: 1
 28547                           ;../digitalOut.c: 117:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 28548   00597A  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28549   00597C  0D07               	mullw	7
 28550   00597E  50F3               	movf	243,w,c
 28551   005980  0F11               	addlw	17
 28552   005982  0B20               	andlw	32
 28553   005984  EC7F  F05D         	call	_getNV
 28554   005988  0100               	movlb	0	; () banked
 28555   00598A  518D               	movf	?_getNV& (0+255),w,b
 28556   00598C  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28557   00598E  A4D8               	btfss	status,2,c
 28558   005990  D002               	goto	u19790
 28559   005992  0E01               	movlw	1
 28560   005994  D001               	goto	u19800
 28561   005996                     u19790:
 28562   005996  0E00               	movlw	0
 28563   005998                     u19800:
 28564   005998  6F91               	movwf	setOutputPin@state& (0+255),b
 28565   00599A  0101               	movlb	1	; () banked
 28566   00599C  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28567   00599E  EC89  F037         	call	_setOutputPin
 28568                           
 28569                           ;../digitalOut.c: 118:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 28570   0059A2  0EDE               	movlw	222
 28571   0059A4  0101               	movlb	1	; () banked
 28572   0059A6  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28573   0059A8  6FD8               	movwf	??_startDigitalOutput& (0+255),b
 28574   0059AA  6BD9               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28575   0059AC  0E03               	movlw	3
 28576   0059AE  23D9               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28577   0059B0  C1D8  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28578   0059B4  C1D9  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28579   0059B8  0100               	movlb	0	; () banked
 28580   0059BA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28581   0059BC  C1D7  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 28582   0059C0  0E00               	movlw	0
 28583   0059C2  EC91  F05B         	call	_writeNVM
 28584                           
 28585                           ;../digitalOut.c: 119:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 28586   0059C6  0E01               	movlw	1
 28587   0059C8  0101               	movlb	1	; () banked
 28588   0059CA  6FCF               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28589   0059CC  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28590   0059CE  0D07               	mullw	7
 28591   0059D0  50F3               	movf	243,w,c
 28592   0059D2  0F11               	addlw	17
 28593   0059D4  EC7F  F05D         	call	_getNV
 28594   0059D8  0100               	movlb	0	; () banked
 28595   0059DA  518D               	movf	?_getNV& (0+255),w,b
 28596   0059DC  0B40               	andlw	64
 28597   0059DE  0101               	movlb	1	; () banked
 28598   0059E0  6FD0               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28599   0059E2  0E01               	movlw	1
 28600   0059E4  6FD1               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28601   0059E6  0E01               	movlw	1
 28602   0059E8  6FD2               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28603   0059EA  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28604   0059EC  0D04               	mullw	4
 28605   0059EE  50F3               	movf	243,w,c
 28606   0059F0  0F08               	addlw	8
 28607   0059F2  EC28  F05C         	call	_sendInvertedProducedEvent
 28608   0059F6  0012               	return	
 28609   0059F8                     l19614:
 28610                           
 28611                           ; BSR set to: 1
 28612                           ;../digitalOut.c: 123:     flashDelays[io] = 0;
 28613   0059F8  0ED4               	movlw	low _flashDelays
 28614   0059FA  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28615   0059FC  6ED9               	movwf	fsr2l,c
 28616   0059FE  6ADA               	clrf	fsr2h,c
 28617   005A00  0E02               	movlw	high _flashDelays
 28618   005A02  22DA               	addwfc	fsr2h,f,c
 28619   005A04  6ADF               	clrf	indf2,c
 28620                           
 28621                           ; BSR set to: 1
 28622                           ;../digitalOut.c: 125:     actionState = (state == 1);
 28623   005A06  05D7               	decf	startDigitalOutput@state& (0+255),w,b
 28624   005A08  A4D8               	btfss	status,2,c
 28625   005A0A  D002               	goto	u19810
 28626   005A0C  0E01               	movlw	1
 28627   005A0E  D001               	goto	u19820
 28628   005A10                     u19810:
 28629   005A10  0E00               	movlw	0
 28630   005A12                     u19820:
 28631   005A12  6FDD               	movwf	startDigitalOutput@actionState& (0+255),b
 28632                           
 28633                           ; BSR set to: 1
 28634                           ;../digitalOut.c: 128:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 28635   005A14  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28636   005A16  0D07               	mullw	7
 28637   005A18  50F3               	movf	243,w,c
 28638   005A1A  0F11               	addlw	17
 28639   005A1C  EC7F  F05D         	call	_getNV
 28640   005A20  0100               	movlb	0	; () banked
 28641   005A22  A18D               	btfss	?_getNV& (0+255),0,b
 28642   005A24  D008               	goto	l225
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;../digitalOut.c: 129:         actionState = !actionState;
 28646   005A26  0101               	movlb	1	; () banked
 28647   005A28  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 28648   005A2A  A4D8               	btfss	status,2,c
 28649   005A2C  D002               	goto	u19840
 28650   005A2E  0E01               	movlw	1
 28651   005A30  D001               	goto	u19850
 28652   005A32                     u19840:
 28653   005A32  0E00               	movlw	0
 28654   005A34                     u19850:
 28655   005A34  6FDD               	movwf	startDigitalOutput@actionState& (0+255),b
 28656   005A36                     l225:
 28657                           
 28658                           ;../digitalOut.c: 133:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 28659   005A36  0101               	movlb	1	; () banked
 28660   005A38  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 28661   005A3A  A4D8               	btfss	status,2,c
 28662   005A3C  D00B               	goto	l19626
 28663                           
 28664                           ; BSR set to: 1
 28665   005A3E  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28666   005A40  0D07               	mullw	7
 28667   005A42  50F3               	movf	243,w,c
 28668   005A44  0F12               	addlw	18
 28669   005A46  EC7F  F05D         	call	_getNV
 28670   005A4A  0100               	movlb	0	; () banked
 28671   005A4C  518D               	movf	?_getNV& (0+255),w,b
 28672   005A4E  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28673   005A50  A4D8               	btfss	status,2,c
 28674   005A52  0012               	return	
 28675   005A54                     l19626:
 28676                           
 28677                           ;../digitalOut.c: 139:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 28678   005A54  0101               	movlb	1	; () banked
 28679   005A56  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 28680   005A58  B4D8               	btfsc	status,2,c
 28681   005A5A  D038               	goto	l19636
 28682                           
 28683                           ; BSR set to: 1
 28684   005A5C  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28685   005A5E  0D07               	mullw	7
 28686   005A60  50F3               	movf	243,w,c
 28687   005A62  0F12               	addlw	18
 28688   005A64  EC7F  F05D         	call	_getNV
 28689   005A68  0100               	movlb	0	; () banked
 28690   005A6A  518D               	movf	?_getNV& (0+255),w,b
 28691   005A6C  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28692   005A6E  B4D8               	btfsc	status,2,c
 28693   005A70  D02D               	goto	l19636
 28694                           
 28695                           ; BSR set to: 0
 28696   005A72  0EE4               	movlw	low _pulseDelays
 28697   005A74  0101               	movlb	1	; () banked
 28698   005A76  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28699   005A78  6ED9               	movwf	fsr2l,c
 28700   005A7A  6ADA               	clrf	fsr2h,c
 28701   005A7C  0E02               	movlw	high _pulseDelays
 28702   005A7E  22DA               	addwfc	fsr2h,f,c
 28703   005A80  50DF               	movf	indf2,w,c
 28704   005A82  A4D8               	btfss	status,2,c
 28705   005A84  D023               	goto	l19636
 28706                           
 28707                           ; BSR set to: 1
 28708                           ;../digitalOut.c: 140:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 28709   005A86  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28710   005A88  0D07               	mullw	7
 28711   005A8A  50F3               	movf	243,w,c
 28712   005A8C  0F12               	addlw	18
 28713   005A8E  EC7F  F05D         	call	_getNV
 28714   005A92  0EE4               	movlw	low _pulseDelays
 28715   005A94  0101               	movlb	1	; () banked
 28716   005A96  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28717   005A98  6ED9               	movwf	fsr2l,c
 28718   005A9A  6ADA               	clrf	fsr2h,c
 28719   005A9C  0E02               	movlw	high _pulseDelays
 28720   005A9E  22DA               	addwfc	fsr2h,f,c
 28721   005AA0  0100               	movlb	0	; () banked
 28722   005AA2  C08D  FFDF         	movff	?_getNV,indf2
 28723                           
 28724                           ; BSR set to: 0
 28725                           ;../digitalOut.c: 143:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 28726   005AA6  0EDE               	movlw	222
 28727   005AA8  0101               	movlb	1	; () banked
 28728   005AAA  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28729   005AAC  6FD8               	movwf	??_startDigitalOutput& (0+255),b
 28730   005AAE  6BD9               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28731   005AB0  0E03               	movlw	3
 28732   005AB2  23D9               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28733   005AB4  C1D8  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28734   005AB8  C1D9  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28735   005ABC  0100               	movlb	0	; () banked
 28736   005ABE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28737   005AC0  0E02               	movlw	2
 28738   005AC2  6FA7               	movwf	writeNVM@value& (0+255),b
 28739   005AC4  0E00               	movlw	0
 28740   005AC6  EC91  F05B         	call	_writeNVM
 28741                           
 28742                           ;../digitalOut.c: 144:     } else {
 28743   005ACA  D025               	goto	l19646
 28744   005ACC                     l19636:
 28745                           
 28746                           ;../digitalOut.c: 145:         pulseDelays[io] = 1;
 28747   005ACC  0EE4               	movlw	low _pulseDelays
 28748   005ACE  0101               	movlb	1	; () banked
 28749   005AD0  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28750   005AD2  6ED9               	movwf	fsr2l,c
 28751   005AD4  6ADA               	clrf	fsr2h,c
 28752   005AD6  0E02               	movlw	high _pulseDelays
 28753   005AD8  22DA               	addwfc	fsr2h,f,c
 28754   005ADA  0E01               	movlw	1
 28755   005ADC  6EDF               	movwf	indf2,c
 28756                           
 28757                           ; BSR set to: 1
 28758                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 28759   005ADE  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 28760   005AE0  A4D8               	btfss	status,2,c
 28761   005AE2  D004               	goto	l19642
 28762                           
 28763                           ; BSR set to: 1
 28764   005AE4  0E00               	movlw	0
 28765   005AE6  6FDB               	movwf	(_startDigitalOutput$802+1)& (0+255),b
 28766   005AE8  0E02               	movlw	2
 28767   005AEA  D003               	goto	L12
 28768   005AEC                     l19642:
 28769                           
 28770                           ; BSR set to: 1
 28771   005AEC  0E00               	movlw	0
 28772   005AEE  6FDB               	movwf	(_startDigitalOutput$802+1)& (0+255),b
 28773   005AF0  0E01               	movlw	1
 28774   005AF2                     L12:
 28775   005AF2  6FDA               	movwf	_startDigitalOutput$802& (0+255),b
 28776                           
 28777                           ; BSR set to: 1
 28778   005AF4  0EDE               	movlw	222
 28779   005AF6  25DE               	addwf	startDigitalOutput@io& (0+255),w,b
 28780   005AF8  6FD8               	movwf	??_startDigitalOutput& (0+255),b
 28781   005AFA  6BD9               	clrf	(??_startDigitalOutput+1)& (0+255),b
 28782   005AFC  0E03               	movlw	3
 28783   005AFE  23D9               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 28784   005B00  C1D8  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 28785   005B04  C1D9  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 28786   005B08  0100               	movlb	0	; () banked
 28787   005B0A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 28788   005B0C  C1DA  F0A7         	movff	_startDigitalOutput$802,writeNVM@value
 28789   005B10  0E00               	movlw	0
 28790   005B12  EC91  F05B         	call	_writeNVM
 28791   005B16                     l19646:
 28792                           
 28793                           ;../digitalOut.c: 149:     pinState = actionState;
 28794   005B16  C1DD  F1DC         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 28795                           
 28796                           ;../digitalOut.c: 150:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 28797   005B1A  0101               	movlb	1	; () banked
 28798   005B1C  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28799   005B1E  0D07               	mullw	7
 28800   005B20  50F3               	movf	243,w,c
 28801   005B22  0F11               	addlw	17
 28802   005B24  EC7F  F05D         	call	_getNV
 28803   005B28  0100               	movlb	0	; () banked
 28804   005B2A  AB8D               	btfss	?_getNV& (0+255),5,b
 28805   005B2C  D008               	goto	l19652
 28806                           
 28807                           ; BSR set to: 0
 28808                           ;../digitalOut.c: 151:         pinState = !pinState;
 28809   005B2E  0101               	movlb	1	; () banked
 28810   005B30  51DC               	movf	startDigitalOutput@pinState& (0+255),w,b
 28811   005B32  A4D8               	btfss	status,2,c
 28812   005B34  D002               	goto	u19930
 28813   005B36  0E01               	movlw	1
 28814   005B38  D001               	goto	u19940
 28815   005B3A                     u19930:
 28816   005B3A  0E00               	movlw	0
 28817   005B3C                     u19940:
 28818   005B3C  6FDC               	movwf	startDigitalOutput@pinState& (0+255),b
 28819   005B3E                     l19652:
 28820                           
 28821                           ;../digitalOut.c: 153:     setOutputPin(io, pinState);
 28822   005B3E  C1DC  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 28823   005B42  0101               	movlb	1	; () banked
 28824   005B44  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28825   005B46  EC89  F037         	call	_setOutputPin
 28826                           
 28827                           ;../digitalOut.c: 158:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 28828   005B4A  0101               	movlb	1	; () banked
 28829   005B4C  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28830   005B4E  0D07               	mullw	7
 28831   005B50  50F3               	movf	243,w,c
 28832   005B52  0F11               	addlw	17
 28833   005B54  EC7F  F05D         	call	_getNV
 28834   005B58  0100               	movlb	0	; () banked
 28835   005B5A  A78D               	btfss	?_getNV& (0+255),3,b
 28836   005B5C  D021               	goto	l19660
 28837                           
 28838                           ; BSR set to: 0
 28839                           ;../digitalOut.c: 159:         if (actionState) {
 28840   005B5E  0101               	movlb	1	; () banked
 28841   005B60  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 28842   005B62  B4D8               	btfsc	status,2,c
 28843   005B64  0012               	return	
 28844                           
 28845                           ; BSR set to: 1
 28846                           ;../digitalOut.c: 162:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 28847   005B66  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 28848   005B68  B4D8               	btfsc	status,2,c
 28849   005B6A  D002               	goto	u19970
 28850   005B6C  0E01               	movlw	1
 28851   005B6E  D001               	goto	u19980
 28852   005B70                     u19970:
 28853   005B70  0E00               	movlw	0
 28854   005B72                     u19980:
 28855   005B72  6FCF               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28856   005B74  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28857   005B76  0D07               	mullw	7
 28858   005B78  50F3               	movf	243,w,c
 28859   005B7A  0F11               	addlw	17
 28860   005B7C  EC7F  F05D         	call	_getNV
 28861   005B80  0100               	movlb	0	; () banked
 28862   005B82  518D               	movf	?_getNV& (0+255),w,b
 28863   005B84  0B40               	andlw	64
 28864   005B86  0101               	movlb	1	; () banked
 28865   005B88  6FD0               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28866   005B8A  0E01               	movlw	1
 28867   005B8C  6FD1               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28868   005B8E  0E01               	movlw	1
 28869   005B90  6FD2               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28870   005B92  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28871   005B94  0D04               	mullw	4
 28872   005B96  50F3               	movf	243,w,c
 28873   005B98  0F08               	addlw	8
 28874   005B9A  EC28  F05C         	call	_sendInvertedProducedEvent
 28875   005B9E  0012               	return	
 28876   005BA0                     l19660:
 28877                           
 28878                           ; BSR set to: 0
 28879                           ;../digitalOut.c: 167:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 28880   005BA0  0101               	movlb	1	; () banked
 28881   005BA2  51DD               	movf	startDigitalOutput@actionState& (0+255),w,b
 28882   005BA4  B4D8               	btfsc	status,2,c
 28883   005BA6  D002               	goto	u19990
 28884   005BA8  0E01               	movlw	1
 28885   005BAA  D001               	goto	u20000
 28886   005BAC                     u19990:
 28887   005BAC  0E00               	movlw	0
 28888   005BAE                     u20000:
 28889   005BAE  6FCF               	movwf	sendInvertedProducedEvent@state& (0+255),b
 28890   005BB0  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28891   005BB2  0D07               	mullw	7
 28892   005BB4  50F3               	movf	243,w,c
 28893   005BB6  0F11               	addlw	17
 28894   005BB8  EC7F  F05D         	call	_getNV
 28895   005BBC  0100               	movlb	0	; () banked
 28896   005BBE  518D               	movf	?_getNV& (0+255),w,b
 28897   005BC0  0B40               	andlw	64
 28898   005BC2  0101               	movlb	1	; () banked
 28899   005BC4  6FD0               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 28900   005BC6  0E01               	movlw	1
 28901   005BC8  6FD1               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 28902   005BCA  0E01               	movlw	1
 28903   005BCC  6FD2               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 28904   005BCE  51DE               	movf	startDigitalOutput@io& (0+255),w,b
 28905   005BD0  0D04               	mullw	4
 28906   005BD2  50F3               	movf	243,w,c
 28907   005BD4  0F08               	addlw	8
 28908   005BD6  EC28  F05C         	call	_sendInvertedProducedEvent
 28909   005BDA  0012               	return		;funcret
 28910   005BDC                     __end_of_startDigitalOutput:
 28911                           	callstack 0
 28912                           
 28913 ;; *************** function _sendInvertedProducedEvent *****************
 28914 ;; Defined at:
 28915 ;;		line 334 in file "../universalEvents.c"
 28916 ;; Parameters:    Size  Location     Type
 28917 ;;  happening       1    wreg     unsigned char 
 28918 ;;  state           1   17[BANK1 ] enum E12721
 28919 ;;  invert          1   18[BANK1 ] enum E12701
 28920 ;;  can_send_on     1   19[BANK1 ] enum E12701
 28921 ;;  can_send_off    1   20[BANK1 ] enum E12701
 28922 ;; Auto vars:     Size  Location     Type
 28923 ;;  happening       1   21[BANK1 ] unsigned char 
 28924 ;;  state_to_sen    1   24[BANK1 ] enum E12721
 28925 ;; Return value:  Size  Location     Type
 28926 ;;                  1    wreg      enum E12700
 28927 ;; Registers used:
 28928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28929 ;; Tracked objects:
 28930 ;;		On entry : 0/0
 28931 ;;		On exit  : 0/0
 28932 ;;		Unchanged: 0/0
 28933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28934 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28935 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28937 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28938 ;;Total ram usage:        8 bytes
 28939 ;; Hardware stack levels used: 1
 28940 ;; Hardware stack levels required when called: 17
 28941 ;; This function calls:
 28942 ;;		_sendProducedEvent
 28943 ;; This function is called by:
 28944 ;;		_startDigitalOutput
 28945 ;; This function uses a non-reentrant model
 28946 ;;
 28947                           
 28948                           	psect	text104
 28949   00B850                     __ptext104:
 28950                           	callstack 0
 28951   00B850                     _sendInvertedProducedEvent:
 28952                           	callstack 9
 28953                           
 28954                           ;incstack = 0
 28955                           ;sendInvertedProducedEvent@happening stored from wreg
 28956   00B850  0101               	movlb	1	; () banked
 28957   00B852  6FD3               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 28958                           
 28959                           ;../universalEvents.c: 335:  EventState state_to_send = invert?!state:state;
 28960   00B854  0101               	movlb	1	; () banked
 28961   00B856  51D0               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 28962   00B858  A4D8               	btfss	status,2,c
 28963   00B85A  D003               	goto	l19208
 28964                           
 28965                           ; BSR set to: 1
 28966   00B85C  C1CF  F1D4         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1329
 28967   00B860  D007               	goto	L13
 28968   00B862                     l19208:
 28969                           
 28970                           ; BSR set to: 1
 28971   00B862  51CF               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 28972   00B864  A4D8               	btfss	status,2,c
 28973   00B866  D002               	goto	u19370
 28974   00B868  0E01               	movlw	1
 28975   00B86A  D001               	goto	u19380
 28976   00B86C                     u19370:
 28977   00B86C  0E00               	movlw	0
 28978   00B86E                     u19380:
 28979   00B86E  6FD4               	movwf	_sendInvertedProducedEvent$1329& (0+255),b
 28980   00B870                     L13:
 28981   00B870  6BD5               	clrf	(_sendInvertedProducedEvent$1329+1)& (0+255),b
 28982                           
 28983                           ; BSR set to: 1
 28984   00B872  C1D4  F1D6         	movff	_sendInvertedProducedEvent$1329,sendInvertedProducedEvent@state_to_send
 28985                           
 28986                           ;../universalEvents.c: 336:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 28987   00B876  51D6               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 28988   00B878  B4D8               	btfsc	status,2,c
 28989   00B87A  D003               	goto	u19400
 28990                           
 28991                           ; BSR set to: 1
 28992   00B87C  51D1               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 28993   00B87E  A4D8               	btfss	status,2,c
 28994   00B880  D006               	goto	u19420
 28995   00B882                     u19400:
 28996                           
 28997                           ; BSR set to: 1
 28998   00B882  51D6               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 28999   00B884  A4D8               	btfss	status,2,c
 29000   00B886  0012               	return	
 29001                           
 29002                           ; BSR set to: 1
 29003   00B888  51D2               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 29004   00B88A  B4D8               	btfsc	status,2,c
 29005   00B88C  0012               	return	
 29006   00B88E                     u19420:
 29007                           
 29008                           ; BSR set to: 1
 29009                           ;../universalEvents.c: 337:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 29010   00B88E  C1D6  F1C7         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 29011   00B892  51D3               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 29012   00B894  EC28  F04E         	call	_sendProducedEvent
 29013   00B898  0012               	return		;funcret
 29014   00B89A                     __end_of_sendInvertedProducedEvent:
 29015                           	callstack 0
 29016                           
 29017 ;; *************** function _startBounceOutput *****************
 29018 ;; Defined at:
 29019 ;;		line 566 in file "../servo.c"
 29020 ;; Parameters:    Size  Location     Type
 29021 ;;  io              1    wreg     unsigned char 
 29022 ;;  action          1   45[BANK0 ] unsigned char 
 29023 ;; Auto vars:     Size  Location     Type
 29024 ;;  io              1   46[BANK0 ] unsigned char 
 29025 ;; Return value:  Size  Location     Type
 29026 ;;                  1    wreg      void 
 29027 ;; Registers used:
 29028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29029 ;; Tracked objects:
 29030 ;;		On entry : 0/0
 29031 ;;		On exit  : 0/0
 29032 ;;		Unchanged: 0/0
 29033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29034 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29037 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29038 ;;Total ram usage:        2 bytes
 29039 ;; Hardware stack levels used: 1
 29040 ;; Hardware stack levels required when called: 12
 29041 ;; This function calls:
 29042 ;;		Nothing
 29043 ;; This function is called by:
 29044 ;;		_APP_nvValueChanged
 29045 ;;		_startOutput
 29046 ;; This function uses a non-reentrant model
 29047 ;;
 29048                           
 29049                           	psect	text105
 29050   00AF60                     __ptext105:
 29051                           	callstack 0
 29052   00AF60                     _startBounceOutput:
 29053                           	callstack 14
 29054                           
 29055                           ;incstack = 0
 29056                           ;startBounceOutput@io stored from wreg
 29057   00AF60  0100               	movlb	0	; () banked
 29058   00AF62  6F8E               	movwf	startBounceOutput@io& (0+255),b
 29059                           
 29060                           ;../servo.c: 567:     switch (action) {
 29061   00AF64  D018               	goto	l19364
 29062   00AF66                     l19358:
 29063                           
 29064                           ; BSR set to: 0
 29065                           ;../servo.c: 569:             speed[io] = 0;
 29066   00AF66  518E               	movf	startBounceOutput@io& (0+255),w,b
 29067   00AF68  0D02               	mullw	2
 29068   00AF6A  0E00               	movlw	low _speed
 29069   00AF6C  24F3               	addwf	243,w,c
 29070   00AF6E  6ED9               	movwf	fsr2l,c
 29071   00AF70  0E01               	movlw	high _speed
 29072   00AF72  20F4               	addwfc	prodh,w,c
 29073   00AF74  6EDA               	movwf	fsr2h,c
 29074   00AF76  6ADE               	clrf	postinc2,c
 29075   00AF78  6ADD               	clrf	postdec2,c
 29076                           
 29077                           ;../servo.c: 570:             break;
 29078   00AF7A  D015               	goto	l19366
 29079   00AF7C                     l19360:
 29080                           
 29081                           ; BSR set to: 0
 29082                           ;../servo.c: 572:             speed[io] = 12;
 29083   00AF7C  518E               	movf	startBounceOutput@io& (0+255),w,b
 29084   00AF7E  0D02               	mullw	2
 29085   00AF80  0E00               	movlw	low _speed
 29086   00AF82  24F3               	addwf	243,w,c
 29087   00AF84  6ED9               	movwf	fsr2l,c
 29088   00AF86  0E01               	movlw	high _speed
 29089   00AF88  20F4               	addwfc	prodh,w,c
 29090   00AF8A  6EDA               	movwf	fsr2h,c
 29091   00AF8C  0E0C               	movlw	12
 29092   00AF8E  6EDE               	movwf	postinc2,c
 29093   00AF90  0E00               	movlw	0
 29094   00AF92  6EDD               	movwf	postdec2,c
 29095                           
 29096                           ;../servo.c: 573:             break;
 29097   00AF94  D008               	goto	l19366
 29098   00AF96                     l19364:
 29099   00AF96  0100               	movlb	0	; () banked
 29100   00AF98  518D               	movf	startBounceOutput@action& (0+255),w,b
 29101                           
 29102                           ; Switch size 1, requested type "simple"
 29103                           ; Number of cases is 2, Range of values is 1 to 2
 29104                           ; switch strategies available:
 29105                           ; Name         Instructions Cycles
 29106                           ; simple_byte            7     4 (average)
 29107                           ;	Chosen strategy is simple_byte
 29108   00AF9A  0A01               	xorlw	1	; case 1
 29109   00AF9C  B4D8               	btfsc	status,2,c
 29110   00AF9E  D7EE               	goto	l19360
 29111   00AFA0  0A03               	xorlw	3	; case 2
 29112   00AFA2  B4D8               	btfsc	status,2,c
 29113   00AFA4  D7E0               	goto	l19358
 29114   00AFA6                     l19366:
 29115                           
 29116                           ; BSR set to: 0
 29117                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 29118   00AFA6  0E30               	movlw	low _servoState
 29119   00AFA8  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29120   00AFAA  6ED9               	movwf	fsr2l,c
 29121   00AFAC  6ADA               	clrf	fsr2h,c
 29122   00AFAE  0E01               	movlw	high _servoState
 29123   00AFB0  22DA               	addwfc	fsr2h,f,c
 29124   00AFB2  0E03               	movlw	3
 29125   00AFB4  6EDF               	movwf	indf2,c
 29126                           
 29127                           ;../servo.c: 576:     loopCount[io] = 0;
 29128   00AFB6  0E74               	movlw	low _loopCount
 29129   00AFB8  258E               	addwf	startBounceOutput@io& (0+255),w,b
 29130   00AFBA  6ED9               	movwf	fsr2l,c
 29131   00AFBC  6ADA               	clrf	fsr2h,c
 29132   00AFBE  0E02               	movlw	high _loopCount
 29133   00AFC0  22DA               	addwfc	fsr2h,f,c
 29134   00AFC2  6ADF               	clrf	indf2,c
 29135                           
 29136                           ; BSR set to: 0
 29137   00AFC4  0012               	return		;funcret
 29138   00AFC6                     __end_of_startBounceOutput:
 29139                           	callstack 0
 29140                           
 29141 ;; *************** function _setOutputState *****************
 29142 ;; Defined at:
 29143 ;;		line 102 in file "../outputs.c"
 29144 ;; Parameters:    Size  Location     Type
 29145 ;;  io              1    wreg     unsigned char 
 29146 ;;  act             1   51[BANK0 ] unsigned char 
 29147 ;;  type            1   52[BANK0 ] unsigned char 
 29148 ;; Auto vars:     Size  Location     Type
 29149 ;;  io              1   53[BANK0 ] unsigned char 
 29150 ;; Return value:  Size  Location     Type
 29151 ;;                  1    wreg      void 
 29152 ;; Registers used:
 29153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29154 ;; Tracked objects:
 29155 ;;		On entry : 0/0
 29156 ;;		On exit  : 0/0
 29157 ;;		Unchanged: 0/0
 29158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29162 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29163 ;;Total ram usage:        3 bytes
 29164 ;; Hardware stack levels used: 1
 29165 ;; Hardware stack levels required when called: 14
 29166 ;; This function calls:
 29167 ;;		_setBounceState
 29168 ;;		_setMultiState
 29169 ;;		_setServoState
 29170 ;; This function is called by:
 29171 ;;		_processActions
 29172 ;; This function uses a non-reentrant model
 29173 ;;
 29174                           
 29175                           	psect	text106
 29176   00B4E2                     __ptext106:
 29177                           	callstack 0
 29178   00B4E2                     _setOutputState:
 29179                           	callstack 14
 29180                           
 29181                           ; BSR set to: 0
 29182                           ;incstack = 0
 29183                           ;setOutputState@io stored from wreg
 29184   00B4E2  0100               	movlb	0	; () banked
 29185   00B4E4  6F95               	movwf	setOutputState@io& (0+255),b
 29186                           
 29187                           ;../outputs.c: 103:     switch(type) {
 29188   00B4E6  D012               	goto	l20690
 29189   00B4E8                     l20676:
 29190                           
 29191                           ; BSR set to: 0
 29192                           ;../outputs.c: 114:             setBounceState(io, act);
 29193   00B4E8  C093  F091         	movff	setOutputState@act,setBounceState@action
 29194   00B4EC  5195               	movf	setOutputState@io& (0+255),w,b
 29195   00B4EE  EC88  F04B         	call	_setBounceState
 29196   00B4F2  0012               	return	
 29197   00B4F4                     l20680:
 29198                           
 29199                           ; BSR set to: 0
 29200                           ;../outputs.c: 119:             setServoState(io, act);
 29201   00B4F4  C093  F091         	movff	setOutputState@act,setServoState@action
 29202   00B4F8  5195               	movf	setOutputState@io& (0+255),w,b
 29203   00B4FA  EC32  F04B         	call	_setServoState
 29204   00B4FE  0012               	return	
 29205   00B500                     l20684:
 29206                           
 29207                           ; BSR set to: 0
 29208                           ;../outputs.c: 124:             setMultiState(io, act);
 29209   00B500  C093  F091         	movff	setOutputState@act,setMultiState@action
 29210   00B504  5195               	movf	setOutputState@io& (0+255),w,b
 29211   00B506  ECDB  F045         	call	_setMultiState
 29212   00B50A  0012               	return	
 29213   00B50C                     l20690:
 29214   00B50C  0100               	movlb	0	; () banked
 29215   00B50E  5194               	movf	setOutputState@type& (0+255),w,b
 29216                           
 29217                           ; Switch size 1, requested type "simple"
 29218                           ; Number of cases is 7, Range of values is 0 to 6
 29219                           ; switch strategies available:
 29220                           ; Name         Instructions Cycles
 29221                           ; simple_byte           22    12 (average)
 29222                           ;	Chosen strategy is simple_byte
 29223   00B510  0A00               	xorlw	0	; case 0
 29224   00B512  B4D8               	btfsc	status,2,c
 29225   00B514  0012               	return	
 29226   00B516  0A01               	xorlw	1	; case 1
 29227   00B518  B4D8               	btfsc	status,2,c
 29228   00B51A  0012               	return	
 29229   00B51C  0A03               	xorlw	3	; case 2
 29230   00B51E  B4D8               	btfsc	status,2,c
 29231   00B520  D7E9               	goto	l20680
 29232   00B522  0A01               	xorlw	1	; case 3
 29233   00B524  B4D8               	btfsc	status,2,c
 29234   00B526  D7E0               	goto	l20676
 29235   00B528  0A07               	xorlw	7	; case 4
 29236   00B52A  B4D8               	btfsc	status,2,c
 29237   00B52C  D7E9               	goto	l20684
 29238   00B52E  0A01               	xorlw	1	; case 5
 29239   00B530  B4D8               	btfsc	status,2,c
 29240   00B532  0012               	return	
 29241   00B534  0A03               	xorlw	3	; case 6
 29242   00B536  0012               	return	
 29243   00B538                     __end_of_setOutputState:
 29244                           	callstack 0
 29245                           
 29246 ;; *************** function _setServoState *****************
 29247 ;; Defined at:
 29248 ;;		line 606 in file "../servo.c"
 29249 ;; Parameters:    Size  Location     Type
 29250 ;;  io              1    wreg     unsigned char 
 29251 ;;  action          1   49[BANK0 ] unsigned char 
 29252 ;; Auto vars:     Size  Location     Type
 29253 ;;  io              1   50[BANK0 ] unsigned char 
 29254 ;; Return value:  Size  Location     Type
 29255 ;;                  1    wreg      void 
 29256 ;; Registers used:
 29257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29258 ;; Tracked objects:
 29259 ;;		On entry : 0/0
 29260 ;;		On exit  : 0/0
 29261 ;;		Unchanged: 0/0
 29262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29263 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29264 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29266 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29267 ;;Total ram usage:        2 bytes
 29268 ;; Hardware stack levels used: 1
 29269 ;; Hardware stack levels required when called: 13
 29270 ;; This function calls:
 29271 ;;		_getNV
 29272 ;; This function is called by:
 29273 ;;		_APP_nvValueChanged
 29274 ;;		_setOutputState
 29275 ;; This function uses a non-reentrant model
 29276 ;;
 29277                           
 29278                           	psect	text107
 29279   009664                     __ptext107:
 29280                           	callstack 0
 29281   009664                     _setServoState:
 29282                           	callstack 13
 29283                           
 29284                           ;incstack = 0
 29285                           ;setServoState@io stored from wreg
 29286   009664  0100               	movlb	0	; () banked
 29287   009666  6F92               	movwf	setServoState@io& (0+255),b
 29288                           
 29289                           ;../servo.c: 607:     switch (action) {
 29290   009668  D04A               	goto	l19312
 29291   00966A                     l19298:
 29292                           
 29293                           ; BSR set to: 0
 29294                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29295   00966A  5192               	movf	setServoState@io& (0+255),w,b
 29296   00966C  0D07               	mullw	7
 29297   00966E  50F3               	movf	243,w,c
 29298   009670  0F11               	addlw	17
 29299   009672  EC7F  F05D         	call	_getNV
 29300   009676  0100               	movlb	0	; () banked
 29301   009678  A18D               	btfss	?_getNV& (0+255),0,b
 29302   00967A  D00E               	goto	l19302
 29303                           
 29304                           ; BSR set to: 0
 29305                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29306   00967C  5192               	movf	setServoState@io& (0+255),w,b
 29307   00967E  0D07               	mullw	7
 29308   009680  50F3               	movf	243,w,c
 29309   009682  0F13               	addlw	19
 29310   009684  EC7F  F05D         	call	_getNV
 29311   009688  0100               	movlb	0	; () banked
 29312   00968A  5192               	movf	setServoState@io& (0+255),w,b
 29313   00968C  0F01               	addlw	low _targetPos
 29314   00968E  6ED9               	movwf	fsr2l,c
 29315   009690  6ADA               	clrf	fsr2h,c
 29316   009692  C08D  FFDF         	movff	?_getNV,indf2
 29317                           
 29318                           ;../servo.c: 611:             } else {
 29319   009696  0012               	return	
 29320   009698                     l19302:
 29321                           
 29322                           ; BSR set to: 0
 29323                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29324   009698  5192               	movf	setServoState@io& (0+255),w,b
 29325   00969A  0D07               	mullw	7
 29326   00969C  50F3               	movf	243,w,c
 29327   00969E  0F12               	addlw	18
 29328   0096A0  EC7F  F05D         	call	_getNV
 29329   0096A4  0100               	movlb	0	; () banked
 29330   0096A6  5192               	movf	setServoState@io& (0+255),w,b
 29331   0096A8  0F01               	addlw	low _targetPos
 29332   0096AA  6ED9               	movwf	fsr2l,c
 29333   0096AC  6ADA               	clrf	fsr2h,c
 29334   0096AE  C08D  FFDF         	movff	?_getNV,indf2
 29335   0096B2  0012               	return	
 29336   0096B4                     l19304:
 29337                           
 29338                           ; BSR set to: 0
 29339                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29340   0096B4  5192               	movf	setServoState@io& (0+255),w,b
 29341   0096B6  0D07               	mullw	7
 29342   0096B8  50F3               	movf	243,w,c
 29343   0096BA  0F11               	addlw	17
 29344   0096BC  EC7F  F05D         	call	_getNV
 29345   0096C0  0100               	movlb	0	; () banked
 29346   0096C2  A18D               	btfss	?_getNV& (0+255),0,b
 29347   0096C4  D00E               	goto	l19308
 29348                           
 29349                           ; BSR set to: 0
 29350                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29351   0096C6  5192               	movf	setServoState@io& (0+255),w,b
 29352   0096C8  0D07               	mullw	7
 29353   0096CA  50F3               	movf	243,w,c
 29354   0096CC  0F12               	addlw	18
 29355   0096CE  EC7F  F05D         	call	_getNV
 29356   0096D2  0100               	movlb	0	; () banked
 29357   0096D4  5192               	movf	setServoState@io& (0+255),w,b
 29358   0096D6  0F01               	addlw	low _targetPos
 29359   0096D8  6ED9               	movwf	fsr2l,c
 29360   0096DA  6ADA               	clrf	fsr2h,c
 29361   0096DC  C08D  FFDF         	movff	?_getNV,indf2
 29362                           
 29363                           ;../servo.c: 618:             } else {
 29364   0096E0  0012               	return	
 29365   0096E2                     l19308:
 29366                           
 29367                           ; BSR set to: 0
 29368                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29369   0096E2  5192               	movf	setServoState@io& (0+255),w,b
 29370   0096E4  0D07               	mullw	7
 29371   0096E6  50F3               	movf	243,w,c
 29372   0096E8  0F13               	addlw	19
 29373   0096EA  EC7F  F05D         	call	_getNV
 29374   0096EE  0100               	movlb	0	; () banked
 29375   0096F0  5192               	movf	setServoState@io& (0+255),w,b
 29376   0096F2  0F01               	addlw	low _targetPos
 29377   0096F4  6ED9               	movwf	fsr2l,c
 29378   0096F6  6ADA               	clrf	fsr2h,c
 29379   0096F8  C08D  FFDF         	movff	?_getNV,indf2
 29380   0096FC  0012               	return	
 29381   0096FE                     l19312:
 29382   0096FE  0100               	movlb	0	; () banked
 29383   009700  5191               	movf	setServoState@action& (0+255),w,b
 29384                           
 29385                           ; Switch size 1, requested type "simple"
 29386                           ; Number of cases is 2, Range of values is 1 to 2
 29387                           ; switch strategies available:
 29388                           ; Name         Instructions Cycles
 29389                           ; simple_byte            7     4 (average)
 29390                           ;	Chosen strategy is simple_byte
 29391   009702  0A01               	xorlw	1	; case 1
 29392   009704  B4D8               	btfsc	status,2,c
 29393   009706  D7D6               	goto	l19304
 29394   009708  0A03               	xorlw	3	; case 2
 29395   00970A  A4D8               	btfss	status,2,c
 29396   00970C  0012               	return	
 29397   00970E  D7AD               	goto	l19298
 29398   009710                     __end_of_setServoState:
 29399                           	callstack 0
 29400                           
 29401 ;; *************** function _setMultiState *****************
 29402 ;; Defined at:
 29403 ;;		line 657 in file "../servo.c"
 29404 ;; Parameters:    Size  Location     Type
 29405 ;;  io              1    wreg     unsigned char 
 29406 ;;  action          1   49[BANK0 ] unsigned char 
 29407 ;; Auto vars:     Size  Location     Type
 29408 ;;  io              1   50[BANK0 ] unsigned char 
 29409 ;; Return value:  Size  Location     Type
 29410 ;;                  1    wreg      void 
 29411 ;; Registers used:
 29412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29413 ;; Tracked objects:
 29414 ;;		On entry : 0/0
 29415 ;;		On exit  : 0/0
 29416 ;;		Unchanged: 0/0
 29417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29418 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29422 ;;Total ram usage:        2 bytes
 29423 ;; Hardware stack levels used: 1
 29424 ;; Hardware stack levels required when called: 13
 29425 ;; This function calls:
 29426 ;;		_getNV
 29427 ;; This function is called by:
 29428 ;;		_APP_nvValueChanged
 29429 ;;		_setOutputState
 29430 ;; This function uses a non-reentrant model
 29431 ;;
 29432                           
 29433                           	psect	text108
 29434   008BB6                     __ptext108:
 29435                           	callstack 0
 29436   008BB6                     _setMultiState:
 29437                           	callstack 13
 29438                           
 29439                           ; BSR set to: 0
 29440                           ;incstack = 0
 29441                           ;setMultiState@io stored from wreg
 29442   008BB6  0100               	movlb	0	; () banked
 29443   008BB8  6F92               	movwf	setMultiState@io& (0+255),b
 29444                           
 29445                           ;../servo.c: 658:     switch (action) {
 29446   008BBA  D056               	goto	l19384
 29447   008BBC                     l19370:
 29448                           
 29449                           ; BSR set to: 0
 29450                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29451   008BBC  5192               	movf	setMultiState@io& (0+255),w,b
 29452   008BBE  0D07               	mullw	7
 29453   008BC0  50F3               	movf	243,w,c
 29454   008BC2  0F13               	addlw	19
 29455   008BC4  EC7F  F05D         	call	_getNV
 29456   008BC8  0100               	movlb	0	; () banked
 29457   008BCA  5192               	movf	setMultiState@io& (0+255),w,b
 29458   008BCC  0F01               	addlw	low _targetPos
 29459   008BCE  6ED9               	movwf	fsr2l,c
 29460   008BD0  6ADA               	clrf	fsr2h,c
 29461   008BD2  C08D  FFDF         	movff	?_getNV,indf2
 29462                           
 29463                           ;../servo.c: 661:             break;
 29464   008BD6  0012               	return	
 29465   008BD8                     l19372:
 29466                           
 29467                           ; BSR set to: 0
 29468                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29469   008BD8  5192               	movf	setMultiState@io& (0+255),w,b
 29470   008BDA  0D07               	mullw	7
 29471   008BDC  50F3               	movf	243,w,c
 29472   008BDE  0F14               	addlw	20
 29473   008BE0  EC7F  F05D         	call	_getNV
 29474   008BE4  0100               	movlb	0	; () banked
 29475   008BE6  5192               	movf	setMultiState@io& (0+255),w,b
 29476   008BE8  0F01               	addlw	low _targetPos
 29477   008BEA  6ED9               	movwf	fsr2l,c
 29478   008BEC  6ADA               	clrf	fsr2h,c
 29479   008BEE  C08D  FFDF         	movff	?_getNV,indf2
 29480                           
 29481                           ;../servo.c: 664:             break;
 29482   008BF2  0012               	return	
 29483   008BF4                     l19374:
 29484                           
 29485                           ; BSR set to: 0
 29486                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 29487   008BF4  5192               	movf	setMultiState@io& (0+255),w,b
 29488   008BF6  0D07               	mullw	7
 29489   008BF8  50F3               	movf	243,w,c
 29490   008BFA  0F12               	addlw	18
 29491   008BFC  EC7F  F05D         	call	_getNV
 29492   008C00  0100               	movlb	0	; () banked
 29493   008C02  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 29494   008C04  0012               	return	
 29495   008C06  518E               	movf	(?_getNV+1)& (0+255),w,b
 29496   008C08  E104               	bnz	u19530
 29497   008C0A  0E03               	movlw	3
 29498   008C0C  5D8D               	subwf	?_getNV& (0+255),w,b
 29499   008C0E  A0D8               	btfss	status,0,c
 29500   008C10  0012               	return	
 29501   008C12                     u19530:
 29502                           
 29503                           ; BSR set to: 0
 29504                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29505   008C12  5192               	movf	setMultiState@io& (0+255),w,b
 29506   008C14  0D07               	mullw	7
 29507   008C16  50F3               	movf	243,w,c
 29508   008C18  0F15               	addlw	21
 29509   008C1A  EC7F  F05D         	call	_getNV
 29510   008C1E  0100               	movlb	0	; () banked
 29511   008C20  5192               	movf	setMultiState@io& (0+255),w,b
 29512   008C22  0F01               	addlw	low _targetPos
 29513   008C24  6ED9               	movwf	fsr2l,c
 29514   008C26  6ADA               	clrf	fsr2h,c
 29515   008C28  C08D  FFDF         	movff	?_getNV,indf2
 29516   008C2C  0012               	return	
 29517   008C2E                     l19378:
 29518                           
 29519                           ; BSR set to: 0
 29520                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 29521   008C2E  5192               	movf	setMultiState@io& (0+255),w,b
 29522   008C30  0D07               	mullw	7
 29523   008C32  50F3               	movf	243,w,c
 29524   008C34  0F12               	addlw	18
 29525   008C36  EC7F  F05D         	call	_getNV
 29526   008C3A  0100               	movlb	0	; () banked
 29527   008C3C  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 29528   008C3E  0012               	return	
 29529   008C40  518E               	movf	(?_getNV+1)& (0+255),w,b
 29530   008C42  E104               	bnz	u19540
 29531   008C44  0E04               	movlw	4
 29532   008C46  5D8D               	subwf	?_getNV& (0+255),w,b
 29533   008C48  A0D8               	btfss	status,0,c
 29534   008C4A  0012               	return	
 29535   008C4C                     u19540:
 29536                           
 29537                           ; BSR set to: 0
 29538                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 29539   008C4C  5192               	movf	setMultiState@io& (0+255),w,b
 29540   008C4E  0D07               	mullw	7
 29541   008C50  50F3               	movf	243,w,c
 29542   008C52  0F16               	addlw	22
 29543   008C54  EC7F  F05D         	call	_getNV
 29544   008C58  0100               	movlb	0	; () banked
 29545   008C5A  5192               	movf	setMultiState@io& (0+255),w,b
 29546   008C5C  0F01               	addlw	low _targetPos
 29547   008C5E  6ED9               	movwf	fsr2l,c
 29548   008C60  6ADA               	clrf	fsr2h,c
 29549   008C62  C08D  FFDF         	movff	?_getNV,indf2
 29550   008C66  0012               	return	
 29551   008C68                     l19384:
 29552   008C68  0100               	movlb	0	; () banked
 29553   008C6A  5191               	movf	setMultiState@action& (0+255),w,b
 29554                           
 29555                           ; Switch size 1, requested type "simple"
 29556                           ; Number of cases is 4, Range of values is 0 to 3
 29557                           ; switch strategies available:
 29558                           ; Name         Instructions Cycles
 29559                           ; simple_byte           13     7 (average)
 29560                           ;	Chosen strategy is simple_byte
 29561   008C6C  0A00               	xorlw	0	; case 0
 29562   008C6E  B4D8               	btfsc	status,2,c
 29563   008C70  D7A5               	goto	l19370
 29564   008C72  0A01               	xorlw	1	; case 1
 29565   008C74  B4D8               	btfsc	status,2,c
 29566   008C76  D7B0               	goto	l19372
 29567   008C78  0A03               	xorlw	3	; case 2
 29568   008C7A  B4D8               	btfsc	status,2,c
 29569   008C7C  D7BB               	goto	l19374
 29570   008C7E  0A01               	xorlw	1	; case 3
 29571   008C80  A4D8               	btfss	status,2,c
 29572   008C82  0012               	return	
 29573   008C84  D7D4               	goto	l19378
 29574   008C86                     __end_of_setMultiState:
 29575                           	callstack 0
 29576                           
 29577 ;; *************** function _setBounceState *****************
 29578 ;; Defined at:
 29579 ;;		line 633 in file "../servo.c"
 29580 ;; Parameters:    Size  Location     Type
 29581 ;;  io              1    wreg     unsigned char 
 29582 ;;  action          1   49[BANK0 ] unsigned char 
 29583 ;; Auto vars:     Size  Location     Type
 29584 ;;  io              1   50[BANK0 ] unsigned char 
 29585 ;; Return value:  Size  Location     Type
 29586 ;;                  1    wreg      void 
 29587 ;; Registers used:
 29588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29589 ;; Tracked objects:
 29590 ;;		On entry : 0/0
 29591 ;;		On exit  : 0/0
 29592 ;;		Unchanged: 0/0
 29593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29594 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29597 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29598 ;;Total ram usage:        2 bytes
 29599 ;; Hardware stack levels used: 1
 29600 ;; Hardware stack levels required when called: 13
 29601 ;; This function calls:
 29602 ;;		_getNV
 29603 ;; This function is called by:
 29604 ;;		_APP_nvValueChanged
 29605 ;;		_setOutputState
 29606 ;; This function uses a non-reentrant model
 29607 ;;
 29608                           
 29609                           	psect	text109
 29610   009710                     __ptext109:
 29611                           	callstack 0
 29612   009710                     _setBounceState:
 29613                           	callstack 13
 29614                           
 29615                           ; BSR set to: 0
 29616                           ;incstack = 0
 29617                           ;setBounceState@io stored from wreg
 29618   009710  0100               	movlb	0	; () banked
 29619   009712  6F92               	movwf	setBounceState@io& (0+255),b
 29620                           
 29621                           ;../servo.c: 634:     switch (action) {
 29622   009714  D04A               	goto	l19354
 29623   009716                     l19340:
 29624                           
 29625                           ; BSR set to: 0
 29626                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29627   009716  5192               	movf	setBounceState@io& (0+255),w,b
 29628   009718  0D07               	mullw	7
 29629   00971A  50F3               	movf	243,w,c
 29630   00971C  0F11               	addlw	17
 29631   00971E  EC7F  F05D         	call	_getNV
 29632   009722  0100               	movlb	0	; () banked
 29633   009724  A18D               	btfss	?_getNV& (0+255),0,b
 29634   009726  D00E               	goto	l19344
 29635                           
 29636                           ; BSR set to: 0
 29637                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29638   009728  5192               	movf	setBounceState@io& (0+255),w,b
 29639   00972A  0D07               	mullw	7
 29640   00972C  50F3               	movf	243,w,c
 29641   00972E  0F12               	addlw	18
 29642   009730  EC7F  F05D         	call	_getNV
 29643   009734  0100               	movlb	0	; () banked
 29644   009736  5192               	movf	setBounceState@io& (0+255),w,b
 29645   009738  0F01               	addlw	low _targetPos
 29646   00973A  6ED9               	movwf	fsr2l,c
 29647   00973C  6ADA               	clrf	fsr2h,c
 29648   00973E  C08D  FFDF         	movff	?_getNV,indf2
 29649                           
 29650                           ;../servo.c: 638:             } else {
 29651   009742  0012               	return	
 29652   009744                     l19344:
 29653                           
 29654                           ; BSR set to: 0
 29655                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29656   009744  5192               	movf	setBounceState@io& (0+255),w,b
 29657   009746  0D07               	mullw	7
 29658   009748  50F3               	movf	243,w,c
 29659   00974A  0F13               	addlw	19
 29660   00974C  EC7F  F05D         	call	_getNV
 29661   009750  0100               	movlb	0	; () banked
 29662   009752  5192               	movf	setBounceState@io& (0+255),w,b
 29663   009754  0F01               	addlw	low _targetPos
 29664   009756  6ED9               	movwf	fsr2l,c
 29665   009758  6ADA               	clrf	fsr2h,c
 29666   00975A  C08D  FFDF         	movff	?_getNV,indf2
 29667   00975E  0012               	return	
 29668   009760                     l19346:
 29669                           
 29670                           ; BSR set to: 0
 29671                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29672   009760  5192               	movf	setBounceState@io& (0+255),w,b
 29673   009762  0D07               	mullw	7
 29674   009764  50F3               	movf	243,w,c
 29675   009766  0F11               	addlw	17
 29676   009768  EC7F  F05D         	call	_getNV
 29677   00976C  0100               	movlb	0	; () banked
 29678   00976E  A18D               	btfss	?_getNV& (0+255),0,b
 29679   009770  D00E               	goto	l19350
 29680                           
 29681                           ; BSR set to: 0
 29682                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 29683   009772  5192               	movf	setBounceState@io& (0+255),w,b
 29684   009774  0D07               	mullw	7
 29685   009776  50F3               	movf	243,w,c
 29686   009778  0F13               	addlw	19
 29687   00977A  EC7F  F05D         	call	_getNV
 29688   00977E  0100               	movlb	0	; () banked
 29689   009780  5192               	movf	setBounceState@io& (0+255),w,b
 29690   009782  0F01               	addlw	low _targetPos
 29691   009784  6ED9               	movwf	fsr2l,c
 29692   009786  6ADA               	clrf	fsr2h,c
 29693   009788  C08D  FFDF         	movff	?_getNV,indf2
 29694                           
 29695                           ;../servo.c: 645:             } else {
 29696   00978C  0012               	return	
 29697   00978E                     l19350:
 29698                           
 29699                           ; BSR set to: 0
 29700                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29701   00978E  5192               	movf	setBounceState@io& (0+255),w,b
 29702   009790  0D07               	mullw	7
 29703   009792  50F3               	movf	243,w,c
 29704   009794  0F12               	addlw	18
 29705   009796  EC7F  F05D         	call	_getNV
 29706   00979A  0100               	movlb	0	; () banked
 29707   00979C  5192               	movf	setBounceState@io& (0+255),w,b
 29708   00979E  0F01               	addlw	low _targetPos
 29709   0097A0  6ED9               	movwf	fsr2l,c
 29710   0097A2  6ADA               	clrf	fsr2h,c
 29711   0097A4  C08D  FFDF         	movff	?_getNV,indf2
 29712   0097A8  0012               	return	
 29713   0097AA                     l19354:
 29714   0097AA  0100               	movlb	0	; () banked
 29715   0097AC  5191               	movf	setBounceState@action& (0+255),w,b
 29716                           
 29717                           ; Switch size 1, requested type "simple"
 29718                           ; Number of cases is 2, Range of values is 1 to 2
 29719                           ; switch strategies available:
 29720                           ; Name         Instructions Cycles
 29721                           ; simple_byte            7     4 (average)
 29722                           ;	Chosen strategy is simple_byte
 29723   0097AE  0A01               	xorlw	1	; case 1
 29724   0097B0  B4D8               	btfsc	status,2,c
 29725   0097B2  D7D6               	goto	l19346
 29726   0097B4  0A03               	xorlw	3	; case 2
 29727   0097B6  A4D8               	btfss	status,2,c
 29728   0097B8  0012               	return	
 29729   0097BA  D7AD               	goto	l19340
 29730   0097BC                     __end_of_setBounceState:
 29731                           	callstack 0
 29732                           
 29733 ;; *************** function _needsStarting *****************
 29734 ;; Defined at:
 29735 ;;		line 167 in file "../outputs.c"
 29736 ;; Parameters:    Size  Location     Type
 29737 ;;  io              1    wreg     unsigned char 
 29738 ;;  act             1   45[BANK0 ] unsigned char 
 29739 ;;  type            1   46[BANK0 ] unsigned char 
 29740 ;; Auto vars:     Size  Location     Type
 29741 ;;  io              1   49[BANK0 ] unsigned char 
 29742 ;; Return value:  Size  Location     Type
 29743 ;;                  1    wreg      enum E12701
 29744 ;; Registers used:
 29745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 29746 ;; Tracked objects:
 29747 ;;		On entry : 0/0
 29748 ;;		On exit  : 0/0
 29749 ;;		Unchanged: 0/0
 29750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29751 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29753 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29754 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29755 ;;Total ram usage:        5 bytes
 29756 ;; Hardware stack levels used: 1
 29757 ;; Hardware stack levels required when called: 12
 29758 ;; This function calls:
 29759 ;;		Nothing
 29760 ;; This function is called by:
 29761 ;;		_processActions
 29762 ;; This function uses a non-reentrant model
 29763 ;;
 29764                           
 29765                           	psect	text110
 29766   00A72C                     __ptext110:
 29767                           	callstack 0
 29768   00A72C                     _needsStarting:
 29769                           	callstack 16
 29770                           
 29771                           ; BSR set to: 0
 29772                           ;incstack = 0
 29773                           ;needsStarting@io stored from wreg
 29774   00A72C  0100               	movlb	0	; () banked
 29775   00A72E  6F91               	movwf	needsStarting@io& (0+255),b
 29776                           
 29777                           ;../outputs.c: 168:     switch(type) {
 29778   00A730  D02B               	goto	l20714
 29779   00A732                     l20694:
 29780                           
 29781                           ; BSR set to: 0
 29782                           ;../outputs.c: 171:             return FALSE;
 29783   00A732  0E00               	movlw	0
 29784   00A734  0012               	return	
 29785   00A736                     l20698:
 29786                           
 29787                           ; BSR set to: 0
 29788                           ;../outputs.c: 177:             return (pulseDelays[io] == 0);
 29789   00A736  0EE4               	movlw	low _pulseDelays
 29790   00A738  2591               	addwf	needsStarting@io& (0+255),w,b
 29791   00A73A  6ED9               	movwf	fsr2l,c
 29792   00A73C  6ADA               	clrf	fsr2h,c
 29793   00A73E  0E02               	movlw	high _pulseDelays
 29794   00A740  22DA               	addwfc	fsr2h,f,c
 29795   00A742  50DF               	movf	indf2,w,c
 29796   00A744  A4D8               	btfss	status,2,c
 29797   00A746  D002               	goto	u21440
 29798   00A748  0E01               	movlw	1
 29799   00A74A  0012               	return	
 29800   00A74C                     u21440:
 29801   00A74C  0E00               	movlw	0
 29802   00A74E  0012               	return	
 29803   00A750                     l20702:
 29804                           
 29805                           ; BSR set to: 0
 29806                           ;../outputs.c: 187:             if (targetPos[io] == currentPos[io]) {
 29807   00A750  0E40               	movlw	low _currentPos
 29808   00A752  2591               	addwf	needsStarting@io& (0+255),w,b
 29809   00A754  6ED9               	movwf	fsr2l,c
 29810   00A756  6ADA               	clrf	fsr2h,c
 29811   00A758  0E01               	movlw	high _currentPos
 29812   00A75A  22DA               	addwfc	fsr2h,f,c
 29813   00A75C  5191               	movf	needsStarting@io& (0+255),w,b
 29814   00A75E  0F01               	addlw	low _targetPos
 29815   00A760  6EE1               	movwf	fsr1l,c
 29816   00A762  6AE2               	clrf	fsr1h,c
 29817   00A764  50DE               	movf	postinc2,w,c
 29818   00A766  18E6               	xorwf	postinc1,w,c
 29819   00A768  B4D8               	btfsc	status,2,c
 29820   00A76A  D7E3               	goto	l20694
 29821                           
 29822                           ; BSR set to: 0
 29823                           ;../outputs.c: 191:             return (servoState[io] != SS_MOVING);
 29824   00A76C  0E30               	movlw	low _servoState
 29825   00A76E  2591               	addwf	needsStarting@io& (0+255),w,b
 29826   00A770  6ED9               	movwf	fsr2l,c
 29827   00A772  6ADA               	clrf	fsr2h,c
 29828   00A774  0E01               	movlw	high _servoState
 29829   00A776  22DA               	addwfc	fsr2h,f,c
 29830   00A778  0E02               	movlw	2
 29831   00A77A  18DE               	xorwf	postinc2,w,c
 29832   00A77C  B4D8               	btfsc	status,2,c
 29833   00A77E  D002               	goto	u21470
 29834   00A780  0E01               	movlw	1
 29835   00A782  0012               	return	
 29836   00A784                     u21470:
 29837   00A784  0E00               	movlw	0
 29838   00A786  0012               	return	
 29839   00A788                     l20714:
 29840   00A788  0100               	movlb	0	; () banked
 29841   00A78A  518E               	movf	needsStarting@type& (0+255),w,b
 29842                           
 29843                           ; Switch size 1, requested type "simple"
 29844                           ; Number of cases is 5, Range of values is 0 to 4
 29845                           ; switch strategies available:
 29846                           ; Name         Instructions Cycles
 29847                           ; simple_byte           16     9 (average)
 29848                           ;	Chosen strategy is simple_byte
 29849   00A78C  0A00               	xorlw	0	; case 0
 29850   00A78E  B4D8               	btfsc	status,2,c
 29851   00A790  D7D0               	goto	l20694
 29852   00A792  0A01               	xorlw	1	; case 1
 29853   00A794  B4D8               	btfsc	status,2,c
 29854   00A796  D7CF               	goto	l20698
 29855   00A798  0A03               	xorlw	3	; case 2
 29856   00A79A  B4D8               	btfsc	status,2,c
 29857   00A79C  D7D9               	goto	l20702
 29858   00A79E  0A01               	xorlw	1	; case 3
 29859   00A7A0  B4D8               	btfsc	status,2,c
 29860   00A7A2  D7D6               	goto	l20702
 29861   00A7A4  0A07               	xorlw	7	; case 4
 29862   00A7A6  B4D8               	btfsc	status,2,c
 29863   00A7A8  D7D3               	goto	l20702
 29864                           
 29865                           ; BSR set to: 0
 29866                           ;../outputs.c: 194:     return TRUE;
 29867   00A7AA  0E01               	movlw	1
 29868                           
 29869                           ; BSR set to: 0
 29870   00A7AC  0012               	return		;funcret
 29871   00A7AE                     __end_of_needsStarting:
 29872                           	callstack 0
 29873                           
 29874 ;; *************** function _getTwoAction *****************
 29875 ;; Defined at:
 29876 ;;		line 356 in file "../event_consumerDualActionQueue.c"
 29877 ;; Parameters:    Size  Location     Type
 29878 ;;		None
 29879 ;; Auto vars:     Size  Location     Type
 29880 ;;		None
 29881 ;; Return value:  Size  Location     Type
 29882 ;;                  1    wreg      unsigned char 
 29883 ;; Registers used:
 29884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29885 ;; Tracked objects:
 29886 ;;		On entry : 0/0
 29887 ;;		On exit  : 0/0
 29888 ;;		Unchanged: 0/0
 29889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29894 ;;Total ram usage:        0 bytes
 29895 ;; Hardware stack levels used: 1
 29896 ;; Hardware stack levels required when called: 13
 29897 ;; This function calls:
 29898 ;;		_peekTwoActionQueue
 29899 ;; This function is called by:
 29900 ;;		_processActions
 29901 ;; This function uses a non-reentrant model
 29902 ;;
 29903                           
 29904                           	psect	text111
 29905   00C3E6                     __ptext111:
 29906                           	callstack 0
 29907   00C3E6                     _getTwoAction:
 29908                           	callstack 15
 29909                           
 29910                           ;../event_consumerDualActionQueue.c: 357:  return peekTwoActionQueue(0);
 29911                           
 29912                           ; BSR set to: 0
 29913                           ;incstack = 0
 29914   00C3E6  0E00               	movlw	0
 29915   00C3E8  EC89  F052         	call	_peekTwoActionQueue
 29916   00C3EC  0012               	return		;funcret
 29917   00C3EE                     __end_of_getTwoAction:
 29918                           	callstack 0
 29919                           
 29920 ;; *************** function _peekTwoActionQueue *****************
 29921 ;; Defined at:
 29922 ;;		line 395 in file "../event_consumerDualActionQueue.c"
 29923 ;; Parameters:    Size  Location     Type
 29924 ;;  index           1    wreg     unsigned char 
 29925 ;; Auto vars:     Size  Location     Type
 29926 ;;  index           1   46[BANK0 ] unsigned char 
 29927 ;;  qty             1   45[BANK0 ] unsigned char 
 29928 ;; Return value:  Size  Location     Type
 29929 ;;                  1    wreg      unsigned char 
 29930 ;; Registers used:
 29931 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29932 ;; Tracked objects:
 29933 ;;		On entry : 0/0
 29934 ;;		On exit  : 0/0
 29935 ;;		Unchanged: 0/0
 29936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29938 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29940 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29941 ;;Total ram usage:        2 bytes
 29942 ;; Hardware stack levels used: 1
 29943 ;; Hardware stack levels required when called: 12
 29944 ;; This function calls:
 29945 ;;		Nothing
 29946 ;; This function is called by:
 29947 ;;		_getTwoAction
 29948 ;;		_processActions
 29949 ;; This function uses a non-reentrant model
 29950 ;;
 29951                           
 29952                           	psect	text112
 29953   00A512                     __ptext112:
 29954                           	callstack 0
 29955   00A512                     _peekTwoActionQueue:
 29956                           	callstack 16
 29957                           
 29958                           ;incstack = 0
 29959                           ;peekTwoActionQueue@index stored from wreg
 29960   00A512  0100               	movlb	0	; () banked
 29961   00A514  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 29962                           
 29963                           ;../event_consumerDualActionQueue.c: 396:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 397:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 29964   00A516  0100               	movlb	0	; () banked
 29965   00A518  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 29966   00A51A  5DC6               	subwf	_expeditedWriteIndex& (0+255),w,b
 29967   00A51C  0B07               	andlw	7
 29968   00A51E  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 29969                           
 29970                           ;../event_consumerDualActionQueue.c: 398:     if (index < qty) {
 29971   00A520  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 29972   00A522  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 29973   00A524  B0D8               	btfsc	status,0,c
 29974   00A526  D019               	goto	l19694
 29975                           
 29976                           ; BSR set to: 0
 29977                           ;../event_consumerDualActionQueue.c: 399:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 29978   00A528  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 29979   00A52A  19C7               	xorwf	_expeditedReadIndex& (0+255),w,b
 29980   00A52C  A4D8               	btfss	status,2,c
 29981   00A52E  D002               	goto	l19682
 29982   00A530                     u20040:
 29983                           
 29984                           ; BSR set to: 0
 29985   00A530  0E00               	movlw	0
 29986   00A532  0012               	return	
 29987   00A534                     l19682:
 29988                           
 29989                           ; BSR set to: 0
 29990                           ;../event_consumerDualActionQueue.c: 400:         index += expeditedReadIndex;
 29991   00A534  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 29992   00A536  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 29993                           
 29994                           ;../event_consumerDualActionQueue.c: 401:         if (index >= 8) {
 29995   00A538  0E07               	movlw	7
 29996   00A53A  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 29997   00A53C  D002               	goto	l496
 29998                           
 29999                           ; BSR set to: 0
 30000                           ;../event_consumerDualActionQueue.c: 402:             index -= 8;
 30001   00A53E  0E08               	movlw	8
 30002   00A540  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30003   00A542                     l496:
 30004                           
 30005                           ; BSR set to: 0
 30006                           ;../event_consumerDualActionQueue.c: 404:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 30007   00A542  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 30008   00A544  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30009   00A546  B4D8               	btfsc	status,2,c
 30010   00A548  D7F3               	goto	u20040
 30011                           
 30012                           ; BSR set to: 0
 30013                           ;../event_consumerDualActionQueue.c: 405:         return expeditedQueueBuf[index];
 30014   00A54A  0E50               	movlw	low _expeditedQueueBuf
 30015   00A54C  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 30016   00A54E  6ED9               	movwf	fsr2l,c
 30017   00A550  6ADA               	clrf	fsr2h,c
 30018   00A552  0E01               	movlw	high _expeditedQueueBuf
 30019   00A554  22DA               	addwfc	fsr2h,f,c
 30020   00A556  50DF               	movf	indf2,w,c
 30021   00A558  0012               	return	
 30022   00A55A                     l19694:
 30023                           
 30024                           ; BSR set to: 0
 30025                           ;../event_consumerDualActionQueue.c: 407:     index -= qty;
 30026   00A55A  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30027   00A55C  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30028                           
 30029                           ;../event_consumerDualActionQueue.c: 408:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 30030   00A55E  51C9               	movf	_normalReadIndex& (0+255),w,b
 30031   00A560  5DC8               	subwf	_normalWriteIndex& (0+255),w,b
 30032   00A562  0B3F               	andlw	63
 30033   00A564  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 30034                           
 30035                           ;../event_consumerDualActionQueue.c: 409:     if (index < qty) {
 30036   00A566  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 30037   00A568  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 30038   00A56A  B0D8               	btfsc	status,0,c
 30039   00A56C  D7E1               	goto	u20040
 30040                           
 30041                           ; BSR set to: 0
 30042                           ;../event_consumerDualActionQueue.c: 410:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 30043   00A56E  51C8               	movf	_normalWriteIndex& (0+255),w,b
 30044   00A570  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 30045   00A572  B4D8               	btfsc	status,2,c
 30046   00A574  D7DD               	goto	u20040
 30047                           
 30048                           ; BSR set to: 0
 30049                           ;../event_consumerDualActionQueue.c: 411:         index += normalReadIndex;
 30050   00A576  51C9               	movf	_normalReadIndex& (0+255),w,b
 30051   00A578  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 30052                           
 30053                           ;../event_consumerDualActionQueue.c: 412:         if (index >= 64) {
 30054   00A57A  0E3F               	movlw	63
 30055   00A57C  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 30056   00A57E  D002               	goto	l500
 30057                           
 30058                           ; BSR set to: 0
 30059                           ;../event_consumerDualActionQueue.c: 413:             index -= 64;
 30060   00A580  0E40               	movlw	64
 30061   00A582  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 30062   00A584                     l500:
 30063                           
 30064                           ; BSR set to: 0
 30065                           ;../event_consumerDualActionQueue.c: 415:         if (index == normalWriteIndex) return 
      +                          0;
 30066   00A584  51C8               	movf	_normalWriteIndex& (0+255),w,b
 30067   00A586  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 30068   00A588  B4D8               	btfsc	status,2,c
 30069   00A58A  D7D2               	goto	u20040
 30070                           
 30071                           ; BSR set to: 0
 30072                           ;../event_consumerDualActionQueue.c: 416:         return normalQueueBuf[index];
 30073   00A58C  0E88               	movlw	low _normalQueueBuf
 30074   00A58E  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 30075   00A590  6ED9               	movwf	fsr2l,c
 30076   00A592  6ADA               	clrf	fsr2h,c
 30077   00A594  0E03               	movlw	high _normalQueueBuf
 30078   00A596  22DA               	addwfc	fsr2h,f,c
 30079   00A598  50DF               	movf	indf2,w,c
 30080                           
 30081                           ; BSR set to: 0
 30082   00A59A  0012               	return		;funcret
 30083   00A59C                     __end_of_peekTwoActionQueue:
 30084                           	callstack 0
 30085                           
 30086 ;; *************** function _doWait *****************
 30087 ;; Defined at:
 30088 ;;		line 309 in file "../universalEvents.c"
 30089 ;; Parameters:    Size  Location     Type
 30090 ;;  duration        2   61[BANK0 ] unsigned short 
 30091 ;; Auto vars:     Size  Location     Type
 30092 ;;		None
 30093 ;; Return value:  Size  Location     Type
 30094 ;;                  1    wreg      void 
 30095 ;; Registers used:
 30096 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30097 ;; Tracked objects:
 30098 ;;		On entry : 0/0
 30099 ;;		On exit  : 0/0
 30100 ;;		Unchanged: 0/0
 30101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30104 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30105 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30106 ;;Total ram usage:        6 bytes
 30107 ;; Hardware stack levels used: 1
 30108 ;; Hardware stack levels required when called: 14
 30109 ;; This function calls:
 30110 ;;		___lmul
 30111 ;;		_doneTwoAction
 30112 ;;		_tickGet
 30113 ;; This function is called by:
 30114 ;;		_processActions
 30115 ;; This function uses a non-reentrant model
 30116 ;;
 30117                           
 30118                           	psect	text113
 30119   00A486                     __ptext113:
 30120                           	callstack 0
 30121   00A486                     _doWait:
 30122                           	callstack 14
 30123                           
 30124                           ;../universalEvents.c: 311:     if (startWait.val == 0) {
 30125                           
 30126                           ; BSR set to: 0
 30127                           ;incstack = 0
 30128   00A486  5019               	movf	_startWait^0,w,c
 30129   00A488  101A               	iorwf	(_startWait+1)^0,w,c
 30130   00A48A  101B               	iorwf	(_startWait+2)^0,w,c
 30131   00A48C  101C               	iorwf	(_startWait+3)^0,w,c
 30132   00A48E  A4D8               	btfss	status,2,c
 30133   00A490  D00B               	goto	l20666
 30134                           
 30135                           ;../universalEvents.c: 312:         startWait.val = tickGet();
 30136   00A492  ECED  F059         	call	_tickGet	;wreg free
 30137   00A496  C08D  F019         	movff	?_tickGet,_startWait
 30138   00A49A  C08E  F01A         	movff	?_tickGet+1,_startWait+1
 30139   00A49E  C08F  F01B         	movff	?_tickGet+2,_startWait+2
 30140   00A4A2  C090  F01C         	movff	?_tickGet+3,_startWait+3
 30141   00A4A6  0012               	return	
 30142   00A4A8                     l20666:
 30143                           
 30144                           ;../universalEvents.c: 316:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 30145   00A4A8  ECED  F059         	call	_tickGet	;wreg free
 30146   00A4AC  5019               	movf	_startWait^0,w,c
 30147   00A4AE  0100               	movlb	0	; () banked
 30148   00A4B0  5D8D               	subwf	?_tickGet& (0+255),w,b
 30149   00A4B2  6F9F               	movwf	??_doWait& (0+255),b
 30150   00A4B4  501A               	movf	(_startWait+1)^0,w,c
 30151   00A4B6  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 30152   00A4B8  6FA0               	movwf	(??_doWait+1)& (0+255),b
 30153   00A4BA  501B               	movf	(_startWait+2)^0,w,c
 30154   00A4BC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 30155   00A4BE  6FA1               	movwf	(??_doWait+2)& (0+255),b
 30156   00A4C0  501C               	movf	(_startWait+3)^0,w,c
 30157   00A4C2  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 30158   00A4C4  6FA2               	movwf	(??_doWait+3)& (0+255),b
 30159   00A4C6  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 30160   00A4CA  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 30161   00A4CE  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 30162   00A4D0  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 30163   00A4D2  0E6A               	movlw	106
 30164   00A4D4  6F95               	movwf	___lmul@multiplicand& (0+255),b
 30165   00A4D6  0E18               	movlw	24
 30166   00A4D8  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30167   00A4DA  0E00               	movlw	0
 30168   00A4DC  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30169   00A4DE  0E00               	movlw	0
 30170   00A4E0  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30171   00A4E2  EC19  F05A         	call	___lmul	;wreg free
 30172   00A4E6  0100               	movlb	0	; () banked
 30173   00A4E8  519F               	movf	??_doWait& (0+255),w,b
 30174   00A4EA  5D91               	subwf	?___lmul& (0+255),w,b
 30175   00A4EC  51A0               	movf	(??_doWait+1)& (0+255),w,b
 30176   00A4EE  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 30177   00A4F0  51A1               	movf	(??_doWait+2)& (0+255),w,b
 30178   00A4F2  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 30179   00A4F4  51A2               	movf	(??_doWait+3)& (0+255),w,b
 30180   00A4F6  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 30181   00A4F8  B0D8               	btfsc	status,0,c
 30182   00A4FA  0012               	return	
 30183                           
 30184                           ; BSR set to: 0
 30185                           ;../universalEvents.c: 317:             doneTwoAction();
 30186   00A4FC  EC00  F062         	call	_doneTwoAction	;wreg free
 30187                           
 30188                           ;../universalEvents.c: 318:             startWait.val = 0;
 30189   00A500  0E00               	movlw	0
 30190   00A502  6E19               	movwf	_startWait^0,c
 30191   00A504  0E00               	movlw	0
 30192   00A506  6E1A               	movwf	(_startWait+1)^0,c
 30193   00A508  0E00               	movlw	0
 30194   00A50A  6E1B               	movwf	(_startWait+2)^0,c
 30195   00A50C  0E00               	movlw	0
 30196   00A50E  6E1C               	movwf	(_startWait+3)^0,c
 30197   00A510  0012               	return		;funcret
 30198   00A512                     __end_of_doWait:
 30199                           	callstack 0
 30200                           
 30201 ;; *************** function _doneTwoAction *****************
 30202 ;; Defined at:
 30203 ;;		line 386 in file "../event_consumerDualActionQueue.c"
 30204 ;; Parameters:    Size  Location     Type
 30205 ;;		None
 30206 ;; Auto vars:     Size  Location     Type
 30207 ;;		None
 30208 ;; Return value:  Size  Location     Type
 30209 ;;                  1    wreg      void 
 30210 ;; Registers used:
 30211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30212 ;; Tracked objects:
 30213 ;;		On entry : 0/0
 30214 ;;		On exit  : 0/0
 30215 ;;		Unchanged: 0/0
 30216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30221 ;;Total ram usage:        0 bytes
 30222 ;; Hardware stack levels used: 1
 30223 ;; Hardware stack levels required when called: 13
 30224 ;; This function calls:
 30225 ;;		_popTwoAction
 30226 ;; This function is called by:
 30227 ;;		_processActions
 30228 ;;		_doWait
 30229 ;; This function uses a non-reentrant model
 30230 ;;
 30231                           
 30232                           	psect	text114
 30233   00C400                     __ptext114:
 30234                           	callstack 0
 30235   00C400                     _doneTwoAction:
 30236                           	callstack 15
 30237                           
 30238                           ;../event_consumerDualActionQueue.c: 387:  popTwoAction();
 30239                           
 30240                           ;incstack = 0
 30241   00C400  EC87  F05F         	call	_popTwoAction	;wreg free
 30242   00C404  0012               	return		;funcret
 30243   00C406                     __end_of_doneTwoAction:
 30244                           	callstack 0
 30245                           
 30246 ;; *************** function _popTwoAction *****************
 30247 ;; Defined at:
 30248 ;;		line 365 in file "../event_consumerDualActionQueue.c"
 30249 ;; Parameters:    Size  Location     Type
 30250 ;;		None
 30251 ;; Auto vars:     Size  Location     Type
 30252 ;;  ret             1    0        unsigned char 
 30253 ;; Return value:  Size  Location     Type
 30254 ;;                  1    wreg      unsigned char 
 30255 ;; Registers used:
 30256 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30257 ;; Tracked objects:
 30258 ;;		On entry : 0/0
 30259 ;;		On exit  : 0/0
 30260 ;;		Unchanged: 0/0
 30261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30266 ;;Total ram usage:        0 bytes
 30267 ;; Hardware stack levels used: 1
 30268 ;; Hardware stack levels required when called: 12
 30269 ;; This function calls:
 30270 ;;		Nothing
 30271 ;; This function is called by:
 30272 ;;		_doneTwoAction
 30273 ;; This function uses a non-reentrant model
 30274 ;;
 30275                           
 30276                           	psect	text115
 30277   00BF0E                     __ptext115:
 30278                           	callstack 0
 30279   00BF0E                     _popTwoAction:
 30280                           	callstack 15
 30281                           
 30282                           ;../event_consumerDualActionQueue.c: 366:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 368:  if (expeditedWriteIndex != expeditedReadIndex) {
 30283                           
 30284                           ;incstack = 0
 30285   00BF0E  0100               	movlb	0	; () banked
 30286   00BF10  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 30287   00BF12  19C6               	xorwf	_expeditedWriteIndex& (0+255),w,b
 30288   00BF14  B4D8               	btfsc	status,2,c
 30289   00BF16  D007               	goto	l19236
 30290                           
 30291                           ; BSR set to: 0
 30292                           
 30293                           ; BSR set to: 0
 30294   00BF18  2BC7               	incf	_expeditedReadIndex& (0+255),f,b
 30295                           
 30296                           ; BSR set to: 0
 30297                           ;../event_consumerDualActionQueue.c: 371:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 30298   00BF1A  0E07               	movlw	7
 30299   00BF1C  65C7               	cpfsgt	_expeditedReadIndex& (0+255),b
 30300   00BF1E  0012               	return	
 30301                           
 30302                           ; BSR set to: 0
 30303   00BF20  0E00               	movlw	0
 30304   00BF22  6FC7               	movwf	_expeditedReadIndex& (0+255),b
 30305   00BF24  0012               	return	
 30306   00BF26                     l19236:
 30307                           
 30308                           ; BSR set to: 0
 30309                           ;../event_consumerDualActionQueue.c: 375:  if (normalWriteIndex == normalReadIndex) {
 30310   00BF26  51C9               	movf	_normalReadIndex& (0+255),w,b
 30311   00BF28  19C8               	xorwf	_normalWriteIndex& (0+255),w,b
 30312   00BF2A  B4D8               	btfsc	status,2,c
 30313   00BF2C  0012               	return	
 30314                           
 30315                           ; BSR set to: 0
 30316                           
 30317                           ; BSR set to: 0
 30318   00BF2E  2BC9               	incf	_normalReadIndex& (0+255),f,b
 30319                           
 30320                           ; BSR set to: 0
 30321                           ;../event_consumerDualActionQueue.c: 379:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 30322   00BF30  0E3F               	movlw	63
 30323   00BF32  65C9               	cpfsgt	_normalReadIndex& (0+255),b
 30324   00BF34  0012               	return	
 30325                           
 30326                           ; BSR set to: 0
 30327   00BF36  0E00               	movlw	0
 30328   00BF38  6FC9               	movwf	_normalReadIndex& (0+255),b
 30329                           
 30330                           ; BSR set to: 0
 30331   00BF3A  0012               	return		;funcret
 30332   00BF3C                     __end_of_popTwoAction:
 30333                           	callstack 0
 30334                           
 30335 ;; *************** function _doSOD *****************
 30336 ;; Defined at:
 30337 ;;		line 510 in file "../universalEvents.c"
 30338 ;; Parameters:    Size  Location     Type
 30339 ;;		None
 30340 ;; Auto vars:     Size  Location     Type
 30341 ;;  event_invert    1   26[BANK1 ] unsigned char 
 30342 ;;  io              1   27[BANK1 ] unsigned char 
 30343 ;;  state           1   25[BANK1 ] unsigned char 
 30344 ;;  midway          1   24[BANK1 ] unsigned char 
 30345 ;; Return value:  Size  Location     Type
 30346 ;;                  1    wreg      void 
 30347 ;; Registers used:
 30348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30349 ;; Tracked objects:
 30350 ;;		On entry : 0/0
 30351 ;;		On exit  : 0/0
 30352 ;;		Unchanged: 0/0
 30353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30355 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30356 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30357 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30358 ;;Total ram usage:        6 bytes
 30359 ;; Hardware stack levels used: 1
 30360 ;; Hardware stack levels required when called: 18
 30361 ;; This function calls:
 30362 ;;		___awdiv
 30363 ;;		_alwaysSendInvertedProducedEvent
 30364 ;;		_getNV
 30365 ;;		_readNVM
 30366 ;; This function is called by:
 30367 ;;		_processActions
 30368 ;; This function uses a non-reentrant model
 30369 ;;
 30370                           
 30371                           	psect	text116
 30372   003640                     __ptext116:
 30373                           	callstack 0
 30374   003640                     _doSOD:
 30375                           	callstack 10
 30376                           
 30377                           ;../universalEvents.c: 511:     uint8_t midway;;../universalEvents.c: 512:     uint8_t s
      +                          tate;;../universalEvents.c: 513:     uint8_t io;;../universalEvents.c: 517:     for (io=
      +                          0; io < 16; io++) {
 30378                           
 30379                           ; BSR set to: 0
 30380                           ;incstack = 0
 30381   003640  0E00               	movlw	0
 30382   003642  0101               	movlb	1	; () banked
 30383   003644  6FD9               	movwf	doSOD@io& (0+255),b
 30384   003646                     l20614:
 30385                           
 30386                           ; BSR set to: 1
 30387                           ;../universalEvents.c: 518:         uint8_t event_inverted = getNV((16 + 7*(io) + 1)) & 
      +                          0x40;
 30388   003646  51D9               	movf	doSOD@io& (0+255),w,b
 30389   003648  0D07               	mullw	7
 30390   00364A  50F3               	movf	243,w,c
 30391   00364C  0F11               	addlw	17
 30392   00364E  EC7F  F05D         	call	_getNV
 30393   003652  0100               	movlb	0	; () banked
 30394   003654  518D               	movf	?_getNV& (0+255),w,b
 30395   003656  0B40               	andlw	64
 30396   003658  0101               	movlb	1	; () banked
 30397   00365A  6FD8               	movwf	doSOD@event_inverted& (0+255),b
 30398                           
 30399                           ;../universalEvents.c: 519:         switch(getNV((16 + 7*(io) + 0))) {
 30400   00365C  D1BC               	goto	l20648
 30401   00365E                     l20616:
 30402   00365E  0EB4               	movlw	low _outputState
 30403   003660  0101               	movlb	1	; () banked
 30404   003662  25D9               	addwf	doSOD@io& (0+255),w,b
 30405   003664  6ED9               	movwf	fsr2l,c
 30406   003666  6ADA               	clrf	fsr2h,c
 30407   003668  0E02               	movlw	high _outputState
 30408   00366A  22DA               	addwfc	fsr2h,f,c
 30409   00366C  50DF               	movf	indf2,w,c
 30410   00366E  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30411   003670  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30412   003674  51D9               	movf	doSOD@io& (0+255),w,b
 30413   003676  0D04               	mullw	4
 30414   003678  50F3               	movf	243,w,c
 30415   00367A  0F08               	addlw	8
 30416   00367C  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30417   003680  0900               	iorlw	0
 30418   003682  A4D8               	btfss	status,2,c
 30419   003684  D1C3               	goto	l20650
 30420   003686  D7EB               	goto	l20616
 30421   003688                     l20618:
 30422                           
 30423                           ; BSR set to: 0
 30424                           ;../universalEvents.c: 525:                 state = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((
      +                          eeprom_address_t)((0x3FF -8))-25)+io);
 30425   003688  0EDE               	movlw	222
 30426   00368A  0101               	movlb	1	; () banked
 30427   00368C  25D9               	addwf	doSOD@io& (0+255),w,b
 30428   00368E  6FD4               	movwf	??_doSOD& (0+255),b
 30429   003690  6BD5               	clrf	(??_doSOD+1)& (0+255),b
 30430   003692  0E03               	movlw	3
 30431   003694  23D5               	addwfc	(??_doSOD+1)& (0+255),f,b
 30432   003696  C1D4  F091         	movff	??_doSOD,readNVM@index
 30433   00369A  C1D5  F092         	movff	??_doSOD+1,readNVM@index+1
 30434   00369E  0100               	movlb	0	; () banked
 30435   0036A0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 30436   0036A2  0E00               	movlw	0
 30437   0036A4  ECD9  F058         	call	_readNVM
 30438   0036A8  0100               	movlb	0	; () banked
 30439   0036AA  5191               	movf	?_readNVM& (0+255),w,b
 30440   0036AC  0101               	movlb	1	; () banked
 30441   0036AE  6FD7               	movwf	doSOD@state& (0+255),b
 30442   0036B0                     l20620:
 30443   0036B0  0E02               	movlw	2
 30444   0036B2  0101               	movlb	1	; () banked
 30445   0036B4  19D7               	xorwf	doSOD@state& (0+255),w,b
 30446   0036B6  B4D8               	btfsc	status,2,c
 30447   0036B8  D002               	goto	u21150
 30448   0036BA  0E01               	movlw	1
 30449   0036BC  D001               	goto	u21160
 30450   0036BE                     u21150:
 30451   0036BE  0E00               	movlw	0
 30452   0036C0                     u21160:
 30453   0036C0  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30454   0036C2  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30455   0036C6  51D9               	movf	doSOD@io& (0+255),w,b
 30456   0036C8  0D04               	mullw	4
 30457   0036CA  50F3               	movf	243,w,c
 30458   0036CC  0F08               	addlw	8
 30459   0036CE  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30460   0036D2  0900               	iorlw	0
 30461   0036D4  A4D8               	btfss	status,2,c
 30462   0036D6  D19A               	goto	l20650
 30463   0036D8  D7EB               	goto	l20620
 30464   0036DA                     l20622:
 30465   0036DA  0101               	movlb	1	; () banked
 30466   0036DC  51D9               	movf	doSOD@io& (0+255),w,b
 30467   0036DE  0D07               	mullw	7
 30468   0036E0  50F3               	movf	243,w,c
 30469   0036E2  0F12               	addlw	18
 30470   0036E4  EC7F  F05D         	call	_getNV
 30471   0036E8  0E40               	movlw	low _currentPos
 30472   0036EA  0101               	movlb	1	; () banked
 30473   0036EC  25D9               	addwf	doSOD@io& (0+255),w,b
 30474   0036EE  6ED9               	movwf	fsr2l,c
 30475   0036F0  6ADA               	clrf	fsr2h,c
 30476   0036F2  0E01               	movlw	high _currentPos
 30477   0036F4  22DA               	addwfc	fsr2h,f,c
 30478   0036F6  50DF               	movf	indf2,w,c
 30479   0036F8  6FD4               	movwf	??_doSOD& (0+255),b
 30480   0036FA  6BD5               	clrf	(??_doSOD+1)& (0+255),b
 30481   0036FC  0100               	movlb	0	; () banked
 30482   0036FE  518D               	movf	?_getNV& (0+255),w,b
 30483   003700  0101               	movlb	1	; () banked
 30484   003702  19D4               	xorwf	??_doSOD& (0+255),w,b
 30485   003704  E108               	bnz	u21180
 30486   003706  0100               	movlb	0	; () banked
 30487   003708  518E               	movf	(?_getNV+1)& (0+255),w,b
 30488   00370A  0101               	movlb	1	; () banked
 30489   00370C  19D5               	xorwf	(??_doSOD+1)& (0+255),w,b
 30490   00370E  A4D8               	btfss	status,2,c
 30491   003710  D002               	goto	u21180
 30492   003712  0E01               	movlw	1
 30493   003714  D001               	goto	u21190
 30494   003716                     u21180:
 30495   003716  0E00               	movlw	0
 30496   003718                     u21190:
 30497   003718  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30498   00371A  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30499   00371E  51D9               	movf	doSOD@io& (0+255),w,b
 30500   003720  0D04               	mullw	4
 30501   003722  50F3               	movf	243,w,c
 30502   003724  0F08               	addlw	8
 30503   003726  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30504   00372A  0900               	iorlw	0
 30505   00372C  B4D8               	btfsc	status,2,c
 30506   00372E  D7D5               	goto	l20622
 30507   003730                     u21200:
 30508   003730  0101               	movlb	1	; () banked
 30509   003732  51D9               	movf	doSOD@io& (0+255),w,b
 30510   003734  0D07               	mullw	7
 30511   003736  50F3               	movf	243,w,c
 30512   003738  0F13               	addlw	19
 30513   00373A  EC7F  F05D         	call	_getNV
 30514   00373E  0E40               	movlw	low _currentPos
 30515   003740  0101               	movlb	1	; () banked
 30516   003742  25D9               	addwf	doSOD@io& (0+255),w,b
 30517   003744  6ED9               	movwf	fsr2l,c
 30518   003746  6ADA               	clrf	fsr2h,c
 30519   003748  0E01               	movlw	high _currentPos
 30520   00374A  22DA               	addwfc	fsr2h,f,c
 30521   00374C  50DF               	movf	indf2,w,c
 30522   00374E  6FD4               	movwf	??_doSOD& (0+255),b
 30523   003750  6BD5               	clrf	(??_doSOD+1)& (0+255),b
 30524   003752  0100               	movlb	0	; () banked
 30525   003754  518D               	movf	?_getNV& (0+255),w,b
 30526   003756  0101               	movlb	1	; () banked
 30527   003758  19D4               	xorwf	??_doSOD& (0+255),w,b
 30528   00375A  E108               	bnz	u21210
 30529   00375C  0100               	movlb	0	; () banked
 30530   00375E  518E               	movf	(?_getNV+1)& (0+255),w,b
 30531   003760  0101               	movlb	1	; () banked
 30532   003762  19D5               	xorwf	(??_doSOD+1)& (0+255),w,b
 30533   003764  A4D8               	btfss	status,2,c
 30534   003766  D002               	goto	u21210
 30535   003768  0E01               	movlw	1
 30536   00376A  D001               	goto	u21220
 30537   00376C                     u21210:
 30538   00376C  0E00               	movlw	0
 30539   00376E                     u21220:
 30540   00376E  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30541   003770  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30542   003774  51D9               	movf	doSOD@io& (0+255),w,b
 30543   003776  0D04               	mullw	4
 30544   003778  50F3               	movf	243,w,c
 30545   00377A  0F0A               	addlw	10
 30546   00377C  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30547   003780  0900               	iorlw	0
 30548   003782  B4D8               	btfsc	status,2,c
 30549   003784  D7D5               	goto	u21200
 30550                           
 30551                           ;../universalEvents.c: 533:                 midway = (uint8_t)(getNV((16 + 7*(io) + 3))/
      +                          2 + getNV((16 + 7*(io) + 2))/2);
 30552   003786  0101               	movlb	1	; () banked
 30553   003788  51D9               	movf	doSOD@io& (0+255),w,b
 30554   00378A  0D07               	mullw	7
 30555   00378C  50F3               	movf	243,w,c
 30556   00378E  0F12               	addlw	18
 30557   003790  EC7F  F05D         	call	_getNV
 30558   003794  C08D  F097         	movff	?_getNV,___awdiv@dividend
 30559   003798  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 30560   00379C  0E00               	movlw	0
 30561   00379E  0100               	movlb	0	; () banked
 30562   0037A0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 30563   0037A2  0E02               	movlw	2
 30564   0037A4  6F99               	movwf	___awdiv@divisor& (0+255),b
 30565   0037A6  ECCE  F052         	call	___awdiv	;wreg free
 30566   0037AA  C097  F1D4         	movff	?___awdiv,??_doSOD
 30567   0037AE  C098  F1D5         	movff	?___awdiv+1,??_doSOD+1
 30568   0037B2  0101               	movlb	1	; () banked
 30569   0037B4  51D9               	movf	doSOD@io& (0+255),w,b
 30570   0037B6  0D07               	mullw	7
 30571   0037B8  50F3               	movf	243,w,c
 30572   0037BA  0F13               	addlw	19
 30573   0037BC  EC7F  F05D         	call	_getNV
 30574   0037C0  C08D  F097         	movff	?_getNV,___awdiv@dividend
 30575   0037C4  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 30576   0037C8  0E00               	movlw	0
 30577   0037CA  0100               	movlb	0	; () banked
 30578   0037CC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 30579   0037CE  0E02               	movlw	2
 30580   0037D0  6F99               	movwf	___awdiv@divisor& (0+255),b
 30581   0037D2  ECCE  F052         	call	___awdiv	;wreg free
 30582   0037D6  0100               	movlb	0	; () banked
 30583   0037D8  5197               	movf	?___awdiv& (0+255),w,b
 30584   0037DA  0101               	movlb	1	; () banked
 30585   0037DC  25D4               	addwf	??_doSOD& (0+255),w,b
 30586   0037DE  6FD6               	movwf	doSOD@midway& (0+255),b
 30587   0037E0                     l20628:
 30588   0037E0  0E40               	movlw	low _currentPos
 30589   0037E2  0101               	movlb	1	; () banked
 30590   0037E4  25D9               	addwf	doSOD@io& (0+255),w,b
 30591   0037E6  6ED9               	movwf	fsr2l,c
 30592   0037E8  6ADA               	clrf	fsr2h,c
 30593   0037EA  0E01               	movlw	high _currentPos
 30594   0037EC  22DA               	addwfc	fsr2h,f,c
 30595   0037EE  51D6               	movf	doSOD@midway& (0+255),w,b
 30596   0037F0  5CDE               	subwf	postinc2,w,c
 30597   0037F2  A0D8               	btfss	status,0,c
 30598   0037F4  D002               	goto	u21240
 30599   0037F6  0E01               	movlw	1
 30600   0037F8  D001               	goto	u21250
 30601   0037FA                     u21240:
 30602   0037FA  0E00               	movlw	0
 30603   0037FC                     u21250:
 30604   0037FC  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30605   0037FE  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30606   003802  51D9               	movf	doSOD@io& (0+255),w,b
 30607   003804  0D04               	mullw	4
 30608   003806  50F3               	movf	243,w,c
 30609   003808  0F09               	addlw	9
 30610   00380A  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30611   00380E  0900               	iorlw	0
 30612   003810  A4D8               	btfss	status,2,c
 30613   003812  D0FC               	goto	l20650
 30614   003814  D7E5               	goto	l20628
 30615   003816                     l20630:
 30616                           
 30617                           ; BSR set to: 0
 30618                           ;../universalEvents.c: 538:                 state = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((
      +                          eeprom_address_t)((0x3FF -8))-25)+io);
 30619   003816  0EDE               	movlw	222
 30620   003818  0101               	movlb	1	; () banked
 30621   00381A  25D9               	addwf	doSOD@io& (0+255),w,b
 30622   00381C  6FD4               	movwf	??_doSOD& (0+255),b
 30623   00381E  6BD5               	clrf	(??_doSOD+1)& (0+255),b
 30624   003820  0E03               	movlw	3
 30625   003822  23D5               	addwfc	(??_doSOD+1)& (0+255),f,b
 30626   003824  C1D4  F091         	movff	??_doSOD,readNVM@index
 30627   003828  C1D5  F092         	movff	??_doSOD+1,readNVM@index+1
 30628   00382C  0100               	movlb	0	; () banked
 30629   00382E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 30630   003830  0E00               	movlw	0
 30631   003832  ECD9  F058         	call	_readNVM
 30632   003836  0100               	movlb	0	; () banked
 30633   003838  5191               	movf	?_readNVM& (0+255),w,b
 30634   00383A  0101               	movlb	1	; () banked
 30635   00383C  6FD7               	movwf	doSOD@state& (0+255),b
 30636   00383E                     l20632:
 30637   00383E  C1D7  F1CF         	movff	doSOD@state,alwaysSendInvertedProducedEvent@state
 30638   003842  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30639   003846  0101               	movlb	1	; () banked
 30640   003848  51D9               	movf	doSOD@io& (0+255),w,b
 30641   00384A  0D04               	mullw	4
 30642   00384C  50F3               	movf	243,w,c
 30643   00384E  0F08               	addlw	8
 30644   003850  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30645   003854  0900               	iorlw	0
 30646   003856  A4D8               	btfss	status,2,c
 30647   003858  D0D9               	goto	l20650
 30648   00385A  D7F1               	goto	l20632
 30649   00385C                     l20634:
 30650   00385C  0101               	movlb	1	; () banked
 30651   00385E  51D9               	movf	doSOD@io& (0+255),w,b
 30652   003860  0D07               	mullw	7
 30653   003862  50F3               	movf	243,w,c
 30654   003864  0F13               	addlw	19
 30655   003866  EC7F  F05D         	call	_getNV
 30656   00386A  0E40               	movlw	low _currentPos
 30657   00386C  0101               	movlb	1	; () banked
 30658   00386E  25D9               	addwf	doSOD@io& (0+255),w,b
 30659   003870  6ED9               	movwf	fsr2l,c
 30660   003872  6ADA               	clrf	fsr2h,c
 30661   003874  0E01               	movlw	high _currentPos
 30662   003876  22DA               	addwfc	fsr2h,f,c
 30663   003878  50DF               	movf	indf2,w,c
 30664   00387A  6FD4               	movwf	??_doSOD& (0+255),b
 30665   00387C  6BD5               	clrf	(??_doSOD+1)& (0+255),b
 30666   00387E  0100               	movlb	0	; () banked
 30667   003880  518D               	movf	?_getNV& (0+255),w,b
 30668   003882  0101               	movlb	1	; () banked
 30669   003884  19D4               	xorwf	??_doSOD& (0+255),w,b
 30670   003886  E108               	bnz	u21280
 30671   003888  0100               	movlb	0	; () banked
 30672   00388A  518E               	movf	(?_getNV+1)& (0+255),w,b
 30673   00388C  0101               	movlb	1	; () banked
 30674   00388E  19D5               	xorwf	(??_doSOD+1)& (0+255),w,b
 30675   003890  A4D8               	btfss	status,2,c
 30676   003892  D002               	goto	u21280
 30677   003894  0E01               	movlw	1
 30678   003896  D001               	goto	u21290
 30679   003898                     u21280:
 30680   003898  0E00               	movlw	0
 30681   00389A                     u21290:
 30682   00389A  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30683   00389C  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30684   0038A0  51D9               	movf	doSOD@io& (0+255),w,b
 30685   0038A2  0D04               	mullw	4
 30686   0038A4  50F3               	movf	243,w,c
 30687   0038A6  0F08               	addlw	8
 30688   0038A8  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30689   0038AC  0900               	iorlw	0
 30690   0038AE  B4D8               	btfsc	status,2,c
 30691   0038B0  D7D5               	goto	l20634
 30692   0038B2                     u21300:
 30693   0038B2  0101               	movlb	1	; () banked
 30694   0038B4  51D9               	movf	doSOD@io& (0+255),w,b
 30695   0038B6  0D07               	mullw	7
 30696   0038B8  50F3               	movf	243,w,c
 30697   0038BA  0F14               	addlw	20
 30698   0038BC  EC7F  F05D         	call	_getNV
 30699   0038C0  0E40               	movlw	low _currentPos
 30700   0038C2  0101               	movlb	1	; () banked
 30701   0038C4  25D9               	addwf	doSOD@io& (0+255),w,b
 30702   0038C6  6ED9               	movwf	fsr2l,c
 30703   0038C8  6ADA               	clrf	fsr2h,c
 30704   0038CA  0E01               	movlw	high _currentPos
 30705   0038CC  22DA               	addwfc	fsr2h,f,c
 30706   0038CE  50DF               	movf	indf2,w,c
 30707   0038D0  6FD4               	movwf	??_doSOD& (0+255),b
 30708   0038D2  6BD5               	clrf	(??_doSOD+1)& (0+255),b
 30709   0038D4  0100               	movlb	0	; () banked
 30710   0038D6  518D               	movf	?_getNV& (0+255),w,b
 30711   0038D8  0101               	movlb	1	; () banked
 30712   0038DA  19D4               	xorwf	??_doSOD& (0+255),w,b
 30713   0038DC  E108               	bnz	u21310
 30714   0038DE  0100               	movlb	0	; () banked
 30715   0038E0  518E               	movf	(?_getNV+1)& (0+255),w,b
 30716   0038E2  0101               	movlb	1	; () banked
 30717   0038E4  19D5               	xorwf	(??_doSOD+1)& (0+255),w,b
 30718   0038E6  A4D8               	btfss	status,2,c
 30719   0038E8  D002               	goto	u21310
 30720   0038EA  0E01               	movlw	1
 30721   0038EC  D001               	goto	u21320
 30722   0038EE                     u21310:
 30723   0038EE  0E00               	movlw	0
 30724   0038F0                     u21320:
 30725   0038F0  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30726   0038F2  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30727   0038F6  51D9               	movf	doSOD@io& (0+255),w,b
 30728   0038F8  0D04               	mullw	4
 30729   0038FA  50F3               	movf	243,w,c
 30730   0038FC  0F09               	addlw	9
 30731   0038FE  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30732   003902  0900               	iorlw	0
 30733   003904  B4D8               	btfsc	status,2,c
 30734   003906  D7D5               	goto	u21300
 30735   003908                     u21330:
 30736   003908  0101               	movlb	1	; () banked
 30737   00390A  51D9               	movf	doSOD@io& (0+255),w,b
 30738   00390C  0D07               	mullw	7
 30739   00390E  50F3               	movf	243,w,c
 30740   003910  0F15               	addlw	21
 30741   003912  EC7F  F05D         	call	_getNV
 30742   003916  0E40               	movlw	low _currentPos
 30743   003918  0101               	movlb	1	; () banked
 30744   00391A  25D9               	addwf	doSOD@io& (0+255),w,b
 30745   00391C  6ED9               	movwf	fsr2l,c
 30746   00391E  6ADA               	clrf	fsr2h,c
 30747   003920  0E01               	movlw	high _currentPos
 30748   003922  22DA               	addwfc	fsr2h,f,c
 30749   003924  50DF               	movf	indf2,w,c
 30750   003926  6FD4               	movwf	??_doSOD& (0+255),b
 30751   003928  6BD5               	clrf	(??_doSOD+1)& (0+255),b
 30752   00392A  0100               	movlb	0	; () banked
 30753   00392C  518D               	movf	?_getNV& (0+255),w,b
 30754   00392E  0101               	movlb	1	; () banked
 30755   003930  19D4               	xorwf	??_doSOD& (0+255),w,b
 30756   003932  E108               	bnz	u21340
 30757   003934  0100               	movlb	0	; () banked
 30758   003936  518E               	movf	(?_getNV+1)& (0+255),w,b
 30759   003938  0101               	movlb	1	; () banked
 30760   00393A  19D5               	xorwf	(??_doSOD+1)& (0+255),w,b
 30761   00393C  A4D8               	btfss	status,2,c
 30762   00393E  D002               	goto	u21340
 30763   003940  0E01               	movlw	1
 30764   003942  D001               	goto	u21350
 30765   003944                     u21340:
 30766   003944  0E00               	movlw	0
 30767   003946                     u21350:
 30768   003946  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30769   003948  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30770   00394C  51D9               	movf	doSOD@io& (0+255),w,b
 30771   00394E  0D04               	mullw	4
 30772   003950  50F3               	movf	243,w,c
 30773   003952  0F0A               	addlw	10
 30774   003954  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30775   003958  0900               	iorlw	0
 30776   00395A  B4D8               	btfsc	status,2,c
 30777   00395C  D7D5               	goto	u21330
 30778                           
 30779                           ;../universalEvents.c: 547:                 if (getNV((16 + 7*(io) + 2)) > 3) {
 30780   00395E  0101               	movlb	1	; () banked
 30781   003960  51D9               	movf	doSOD@io& (0+255),w,b
 30782   003962  0D07               	mullw	7
 30783   003964  50F3               	movf	243,w,c
 30784   003966  0F12               	addlw	18
 30785   003968  EC7F  F05D         	call	_getNV
 30786   00396C  0100               	movlb	0	; () banked
 30787   00396E  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30788   003970  D04D               	goto	l20650
 30789   003972  518E               	movf	(?_getNV+1)& (0+255),w,b
 30790   003974  E104               	bnz	u21370
 30791   003976  0E04               	movlw	4
 30792   003978  5D8D               	subwf	?_getNV& (0+255),w,b
 30793   00397A  A0D8               	btfss	status,0,c
 30794   00397C  D047               	goto	l20650
 30795   00397E                     u21370:
 30796   00397E  0101               	movlb	1	; () banked
 30797   003980  51D9               	movf	doSOD@io& (0+255),w,b
 30798   003982  0D07               	mullw	7
 30799   003984  50F3               	movf	243,w,c
 30800   003986  0F16               	addlw	22
 30801   003988  EC7F  F05D         	call	_getNV
 30802   00398C  0E40               	movlw	low _currentPos
 30803   00398E  0101               	movlb	1	; () banked
 30804   003990  25D9               	addwf	doSOD@io& (0+255),w,b
 30805   003992  6ED9               	movwf	fsr2l,c
 30806   003994  6ADA               	clrf	fsr2h,c
 30807   003996  0E01               	movlw	high _currentPos
 30808   003998  22DA               	addwfc	fsr2h,f,c
 30809   00399A  50DF               	movf	indf2,w,c
 30810   00399C  6FD4               	movwf	??_doSOD& (0+255),b
 30811   00399E  6BD5               	clrf	(??_doSOD+1)& (0+255),b
 30812   0039A0  0100               	movlb	0	; () banked
 30813   0039A2  518D               	movf	?_getNV& (0+255),w,b
 30814   0039A4  0101               	movlb	1	; () banked
 30815   0039A6  19D4               	xorwf	??_doSOD& (0+255),w,b
 30816   0039A8  E108               	bnz	u21380
 30817   0039AA  0100               	movlb	0	; () banked
 30818   0039AC  518E               	movf	(?_getNV+1)& (0+255),w,b
 30819   0039AE  0101               	movlb	1	; () banked
 30820   0039B0  19D5               	xorwf	(??_doSOD+1)& (0+255),w,b
 30821   0039B2  A4D8               	btfss	status,2,c
 30822   0039B4  D002               	goto	u21380
 30823   0039B6  0E01               	movlw	1
 30824   0039B8  D001               	goto	u21390
 30825   0039BA                     u21380:
 30826   0039BA  0E00               	movlw	0
 30827   0039BC                     u21390:
 30828   0039BC  6FCF               	movwf	alwaysSendInvertedProducedEvent@state& (0+255),b
 30829   0039BE  C1D8  F1D0         	movff	doSOD@event_inverted,alwaysSendInvertedProducedEvent@invert
 30830   0039C2  51D9               	movf	doSOD@io& (0+255),w,b
 30831   0039C4  0D04               	mullw	4
 30832   0039C6  50F3               	movf	243,w,c
 30833   0039C8  0F0B               	addlw	11
 30834   0039CA  EC9E  F05F         	call	_alwaysSendInvertedProducedEvent
 30835   0039CE  0900               	iorlw	0
 30836   0039D0  A4D8               	btfss	status,2,c
 30837   0039D2  D01C               	goto	l20650
 30838   0039D4  D7D4               	goto	u21370
 30839   0039D6                     l20648:
 30840                           
 30841                           ; BSR set to: 1
 30842   0039D6  51D9               	movf	doSOD@io& (0+255),w,b
 30843   0039D8  0D07               	mullw	7
 30844   0039DA  50F3               	movf	243,w,c
 30845   0039DC  0F10               	addlw	16
 30846   0039DE  EC7F  F05D         	call	_getNV
 30847                           
 30848                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 30849                           ; Switch size 1, requested type "simple"
 30850                           ; Number of cases is 1, Range of values is 0 to 0
 30851                           ; switch strategies available:
 30852                           ; Name         Instructions Cycles
 30853                           ; simple_byte            4     3 (average)
 30854                           ;	Chosen strategy is simple_byte
 30855   0039E2  0100               	movlb	0	; () banked
 30856   0039E4  518E               	movf	(?_getNV+1)& (0+255),w,b
 30857   0039E6  0A00               	xorlw	0	; case 0
 30858   0039E8  A4D8               	btfss	status,2,c
 30859   0039EA  D010               	goto	l20650
 30860                           
 30861                           ; BSR set to: 0
 30862                           ; Switch size 1, requested type "simple"
 30863                           ; Number of cases is 5, Range of values is 0 to 4
 30864                           ; switch strategies available:
 30865                           ; Name         Instructions Cycles
 30866                           ; simple_byte           16     9 (average)
 30867                           ;	Chosen strategy is simple_byte
 30868   0039EC  518D               	movf	?_getNV& (0+255),w,b
 30869   0039EE  0A00               	xorlw	0	; case 0
 30870   0039F0  B4D8               	btfsc	status,2,c
 30871   0039F2  D635               	goto	l20616
 30872   0039F4  0A01               	xorlw	1	; case 1
 30873   0039F6  B4D8               	btfsc	status,2,c
 30874   0039F8  D647               	goto	l20618
 30875   0039FA  0A03               	xorlw	3	; case 2
 30876   0039FC  B4D8               	btfsc	status,2,c
 30877   0039FE  D66D               	goto	l20622
 30878   003A00  0A01               	xorlw	1	; case 3
 30879   003A02  B4D8               	btfsc	status,2,c
 30880   003A04  D708               	goto	l20630
 30881   003A06  0A07               	xorlw	7	; case 4
 30882   003A08  B4D8               	btfsc	status,2,c
 30883   003A0A  D728               	goto	l20634
 30884   003A0C                     l20650:
 30885                           
 30886                           ;../universalEvents.c: 561:     }
 30887   003A0C  0101               	movlb	1	; () banked
 30888   003A0E  2BD9               	incf	doSOD@io& (0+255),f,b
 30889                           
 30890                           ; BSR set to: 1
 30891   003A10  0E0F               	movlw	15
 30892   003A12  65D9               	cpfsgt	doSOD@io& (0+255),b
 30893   003A14  D618               	goto	l20614
 30894   003A16  0012               	return	
 30895   003A18                     __end_of_doSOD:
 30896                           	callstack 0
 30897                           
 30898 ;; *************** function _alwaysSendInvertedProducedEvent *****************
 30899 ;; Defined at:
 30900 ;;		line 350 in file "../universalEvents.c"
 30901 ;; Parameters:    Size  Location     Type
 30902 ;;  action          1    wreg     unsigned char 
 30903 ;;  state           1   17[BANK1 ] enum E12721
 30904 ;;  invert          1   18[BANK1 ] enum E12701
 30905 ;; Auto vars:     Size  Location     Type
 30906 ;;  action          1   19[BANK1 ] unsigned char 
 30907 ;; Return value:  Size  Location     Type
 30908 ;;                  1    wreg      enum E12701
 30909 ;; Registers used:
 30910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 30911 ;; Tracked objects:
 30912 ;;		On entry : 0/0
 30913 ;;		On exit  : 0/0
 30914 ;;		Unchanged: 0/0
 30915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30916 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30917 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30919 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30920 ;;Total ram usage:        5 bytes
 30921 ;; Hardware stack levels used: 1
 30922 ;; Hardware stack levels required when called: 17
 30923 ;; This function calls:
 30924 ;;		_sendProducedEvent
 30925 ;; This function is called by:
 30926 ;;		_doSOD
 30927 ;; This function uses a non-reentrant model
 30928 ;;
 30929                           
 30930                           	psect	text117
 30931   00BF3C                     __ptext117:
 30932                           	callstack 0
 30933   00BF3C                     _alwaysSendInvertedProducedEvent:
 30934                           	callstack 10
 30935                           
 30936                           ; BSR set to: 1
 30937                           ;incstack = 0
 30938                           ;alwaysSendInvertedProducedEvent@action stored from wreg
 30939   00BF3C  0101               	movlb	1	; () banked
 30940   00BF3E  6FD1               	movwf	alwaysSendInvertedProducedEvent@action& (0+255),b
 30941                           
 30942                           ;../universalEvents.c: 351:     return sendProducedEvent(action, invert?!state:state);
 30943   00BF40  0101               	movlb	1	; () banked
 30944   00BF42  51D0               	movf	alwaysSendInvertedProducedEvent@invert& (0+255),w,b
 30945   00BF44  A4D8               	btfss	status,2,c
 30946   00BF46  D003               	goto	l19732
 30947                           
 30948                           ; BSR set to: 1
 30949   00BF48  C1CF  F1D2         	movff	alwaysSendInvertedProducedEvent@state,_alwaysSendInvertedProducedEvent$1334
 30950   00BF4C  D007               	goto	L14
 30951   00BF4E                     l19732:
 30952                           
 30953                           ; BSR set to: 1
 30954   00BF4E  51CF               	movf	alwaysSendInvertedProducedEvent@state& (0+255),w,b
 30955   00BF50  A4D8               	btfss	status,2,c
 30956   00BF52  D002               	goto	u20120
 30957   00BF54  0E01               	movlw	1
 30958   00BF56  D001               	goto	u20130
 30959   00BF58                     u20120:
 30960   00BF58  0E00               	movlw	0
 30961   00BF5A                     u20130:
 30962   00BF5A  6FD2               	movwf	_alwaysSendInvertedProducedEvent$1334& (0+255),b
 30963   00BF5C                     L14:
 30964   00BF5C  6BD3               	clrf	(_alwaysSendInvertedProducedEvent$1334+1)& (0+255),b
 30965                           
 30966                           ; BSR set to: 1
 30967   00BF5E  C1D2  F1C7         	movff	_alwaysSendInvertedProducedEvent$1334,sendProducedEvent@onOff
 30968   00BF62  51D1               	movf	alwaysSendInvertedProducedEvent@action& (0+255),w,b
 30969   00BF64  EC28  F04E         	call	_sendProducedEvent
 30970   00BF68  0012               	return		;funcret
 30971   00BF6A                     __end_of_alwaysSendInvertedProducedEvent:
 30972                           	callstack 0
 30973                           
 30974 ;; *************** function _deleteTwoActionQueue *****************
 30975 ;; Defined at:
 30976 ;;		line 425 in file "../event_consumerDualActionQueue.c"
 30977 ;; Parameters:    Size  Location     Type
 30978 ;;  index           1    wreg     unsigned char 
 30979 ;; Auto vars:     Size  Location     Type
 30980 ;;  index           1   46[BANK0 ] unsigned char 
 30981 ;;  qty             1   45[BANK0 ] unsigned char 
 30982 ;; Return value:  Size  Location     Type
 30983 ;;                  1    wreg      void 
 30984 ;; Registers used:
 30985 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30986 ;; Tracked objects:
 30987 ;;		On entry : 0/0
 30988 ;;		On exit  : 0/0
 30989 ;;		Unchanged: 0/0
 30990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30992 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30994 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30995 ;;Total ram usage:        2 bytes
 30996 ;; Hardware stack levels used: 1
 30997 ;; Hardware stack levels required when called: 12
 30998 ;; This function calls:
 30999 ;;		Nothing
 31000 ;; This function is called by:
 31001 ;;		_processActions
 31002 ;; This function uses a non-reentrant model
 31003 ;;
 31004                           
 31005                           	psect	text118
 31006   00A82C                     __ptext118:
 31007                           	callstack 0
 31008   00A82C                     _deleteTwoActionQueue:
 31009                           	callstack 16
 31010                           
 31011                           ;incstack = 0
 31012                           ;deleteTwoActionQueue@index stored from wreg
 31013   00A82C  0100               	movlb	0	; () banked
 31014   00A82E  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 31015                           
 31016                           ;../event_consumerDualActionQueue.c: 426:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 427:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31017   00A830  0100               	movlb	0	; () banked
 31018   00A832  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 31019   00A834  5DC6               	subwf	_expeditedWriteIndex& (0+255),w,b
 31020   00A836  0B07               	andlw	7
 31021   00A838  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31022                           
 31023                           ;../event_consumerDualActionQueue.c: 428:     if (index < qty) {
 31024   00A83A  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31025   00A83C  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31026   00A83E  B0D8               	btfsc	status,0,c
 31027   00A840  D013               	goto	l20592
 31028                           
 31029                           ; BSR set to: 0
 31030                           ;../event_consumerDualActionQueue.c: 429:         index += expeditedReadIndex;
 31031   00A842  51C7               	movf	_expeditedReadIndex& (0+255),w,b
 31032   00A844  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31033                           
 31034                           ;../event_consumerDualActionQueue.c: 430:         if (index >= 8) {
 31035   00A846  0E07               	movlw	7
 31036   00A848  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31037   00A84A  D002               	goto	l505
 31038                           
 31039                           ; BSR set to: 0
 31040                           ;../event_consumerDualActionQueue.c: 431:             index -= 8;
 31041   00A84C  0E08               	movlw	8
 31042   00A84E  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31043   00A850                     l505:
 31044                           
 31045                           ; BSR set to: 0
 31046                           ;../event_consumerDualActionQueue.c: 433:         if (index == expeditedWriteIndex) retu
      +                          rn;
 31047   00A850  51C6               	movf	_expeditedWriteIndex& (0+255),w,b
 31048   00A852  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31049   00A854  B4D8               	btfsc	status,2,c
 31050   00A856  0012               	return	
 31051                           
 31052                           ; BSR set to: 0
 31053                           ;../event_consumerDualActionQueue.c: 434:         expeditedQueueBuf[index] = 0;
 31054   00A858  0E50               	movlw	low _expeditedQueueBuf
 31055   00A85A  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31056   00A85C  6ED9               	movwf	fsr2l,c
 31057   00A85E  6ADA               	clrf	fsr2h,c
 31058   00A860  0E01               	movlw	high _expeditedQueueBuf
 31059   00A862  22DA               	addwfc	fsr2h,f,c
 31060   00A864  6ADF               	clrf	indf2,c
 31061   00A866  0012               	return	
 31062   00A868                     l20592:
 31063                           
 31064                           ; BSR set to: 0
 31065                           ;../event_consumerDualActionQueue.c: 437:     index -= qty;
 31066   00A868  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31067   00A86A  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31068                           
 31069                           ;../event_consumerDualActionQueue.c: 438:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31070   00A86C  51C9               	movf	_normalReadIndex& (0+255),w,b
 31071   00A86E  5DC8               	subwf	_normalWriteIndex& (0+255),w,b
 31072   00A870  0B3F               	andlw	63
 31073   00A872  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31074                           
 31075                           ;../event_consumerDualActionQueue.c: 439:     if (index < qty) {
 31076   00A874  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31077   00A876  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31078   00A878  B0D8               	btfsc	status,0,c
 31079   00A87A  0012               	return	
 31080                           
 31081                           ; BSR set to: 0
 31082                           ;../event_consumerDualActionQueue.c: 440:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 31083   00A87C  51C8               	movf	_normalWriteIndex& (0+255),w,b
 31084   00A87E  19C9               	xorwf	_normalReadIndex& (0+255),w,b
 31085   00A880  B4D8               	btfsc	status,2,c
 31086   00A882  0012               	return	
 31087                           
 31088                           ; BSR set to: 0
 31089                           ;../event_consumerDualActionQueue.c: 441:         index += normalReadIndex;
 31090   00A884  51C9               	movf	_normalReadIndex& (0+255),w,b
 31091   00A886  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31092                           
 31093                           ;../event_consumerDualActionQueue.c: 442:         if (index >= 64) {
 31094   00A888  0E3F               	movlw	63
 31095   00A88A  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31096   00A88C  D002               	goto	l510
 31097                           
 31098                           ; BSR set to: 0
 31099                           ;../event_consumerDualActionQueue.c: 443:             index -= 64;
 31100   00A88E  0E40               	movlw	64
 31101   00A890  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31102   00A892                     l510:
 31103                           
 31104                           ; BSR set to: 0
 31105                           ;../event_consumerDualActionQueue.c: 445:         if (index == normalWriteIndex) return;
 31106   00A892  51C8               	movf	_normalWriteIndex& (0+255),w,b
 31107   00A894  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31108   00A896  B4D8               	btfsc	status,2,c
 31109   00A898  0012               	return	
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;../event_consumerDualActionQueue.c: 446:         normalQueueBuf[index] = 0;
 31113   00A89A  0E88               	movlw	low _normalQueueBuf
 31114   00A89C  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31115   00A89E  6ED9               	movwf	fsr2l,c
 31116   00A8A0  6ADA               	clrf	fsr2h,c
 31117   00A8A2  0E03               	movlw	high _normalQueueBuf
 31118   00A8A4  22DA               	addwfc	fsr2h,f,c
 31119   00A8A6  6ADF               	clrf	indf2,c
 31120                           
 31121                           ; BSR set to: 0
 31122   00A8A8  0012               	return		;funcret
 31123   00A8AA                     __end_of_deleteTwoActionQueue:
 31124                           	callstack 0
 31125                           
 31126 ;; *************** function _completed *****************
 31127 ;; Defined at:
 31128 ;;		line 201 in file "../outputs.c"
 31129 ;; Parameters:    Size  Location     Type
 31130 ;;  io              1    wreg     unsigned char 
 31131 ;;  action          1   45[BANK0 ] unsigned char 
 31132 ;;  type            1   46[BANK0 ] unsigned char 
 31133 ;; Auto vars:     Size  Location     Type
 31134 ;;  io              1   50[BANK0 ] unsigned char 
 31135 ;; Return value:  Size  Location     Type
 31136 ;;                  1    wreg      enum E12701
 31137 ;; Registers used:
 31138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31139 ;; Tracked objects:
 31140 ;;		On entry : 0/0
 31141 ;;		On exit  : 0/0
 31142 ;;		Unchanged: 0/0
 31143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31144 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31145 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31146 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31147 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31148 ;;Total ram usage:        6 bytes
 31149 ;; Hardware stack levels used: 1
 31150 ;; Hardware stack levels required when called: 12
 31151 ;; This function calls:
 31152 ;;		Nothing
 31153 ;; This function is called by:
 31154 ;;		_processActions
 31155 ;; This function uses a non-reentrant model
 31156 ;;
 31157                           
 31158                           	psect	text119
 31159   00A1B4                     __ptext119:
 31160                           	callstack 0
 31161   00A1B4                     _completed:
 31162                           	callstack 16
 31163                           
 31164                           ; BSR set to: 0
 31165                           ;incstack = 0
 31166                           ;completed@io stored from wreg
 31167   00A1B4  0100               	movlb	0	; () banked
 31168   00A1B6  6F92               	movwf	completed@io& (0+255),b
 31169                           
 31170                           ;../outputs.c: 202:     switch(type) {
 31171   00A1B8  D035               	goto	l20766
 31172   00A1BA                     l20744:
 31173                           
 31174                           ; BSR set to: 0
 31175                           ;../outputs.c: 205:             return TRUE;
 31176   00A1BA  0E01               	movlw	1
 31177   00A1BC  0012               	return	
 31178   00A1BE                     l20748:
 31179                           
 31180                           ; BSR set to: 0
 31181                           ;../outputs.c: 208:             return pulseDelays[io] == 1;
 31182   00A1BE  0EE4               	movlw	low _pulseDelays
 31183   00A1C0  2592               	addwf	completed@io& (0+255),w,b
 31184   00A1C2  6ED9               	movwf	fsr2l,c
 31185   00A1C4  6ADA               	clrf	fsr2h,c
 31186   00A1C6  0E02               	movlw	high _pulseDelays
 31187   00A1C8  22DA               	addwfc	fsr2h,f,c
 31188   00A1CA  04DE               	decf	postinc2,w,c
 31189   00A1CC  A4D8               	btfss	status,2,c
 31190   00A1CE  D002               	goto	u21490
 31191   00A1D0  0E01               	movlw	1
 31192   00A1D2  0012               	return	
 31193   00A1D4                     u21490:
 31194   00A1D4  0E00               	movlw	0
 31195   00A1D6  0012               	return	
 31196   00A1D8                     l20752:
 31197                           
 31198                           ; BSR set to: 0
 31199                           ;../outputs.c: 217:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 31200   00A1D8  0E00               	movlw	0
 31201   00A1DA  6F91               	movwf	_completed$1459& (0+255),b
 31202                           
 31203                           ; BSR set to: 0
 31204   00A1DC  0E40               	movlw	low _currentPos
 31205   00A1DE  2592               	addwf	completed@io& (0+255),w,b
 31206   00A1E0  6ED9               	movwf	fsr2l,c
 31207   00A1E2  6ADA               	clrf	fsr2h,c
 31208   00A1E4  0E01               	movlw	high _currentPos
 31209   00A1E6  22DA               	addwfc	fsr2h,f,c
 31210   00A1E8  5192               	movf	completed@io& (0+255),w,b
 31211   00A1EA  0F01               	addlw	low _targetPos
 31212   00A1EC  6EE1               	movwf	fsr1l,c
 31213   00A1EE  6AE2               	clrf	fsr1h,c
 31214   00A1F0  50DE               	movf	postinc2,w,c
 31215   00A1F2  18E6               	xorwf	postinc1,w,c
 31216   00A1F4  A4D8               	btfss	status,2,c
 31217   00A1F6  D014               	goto	l875
 31218                           
 31219                           ; BSR set to: 0
 31220   00A1F8  0E30               	movlw	low _servoState
 31221   00A1FA  2592               	addwf	completed@io& (0+255),w,b
 31222   00A1FC  6ED9               	movwf	fsr2l,c
 31223   00A1FE  6ADA               	clrf	fsr2h,c
 31224   00A200  0E01               	movlw	high _servoState
 31225   00A202  22DA               	addwfc	fsr2h,f,c
 31226   00A204  04DE               	decf	postinc2,w,c
 31227   00A206  B4D8               	btfsc	status,2,c
 31228   00A208  D009               	goto	u21530
 31229                           
 31230                           ; BSR set to: 0
 31231   00A20A  0E30               	movlw	low _servoState
 31232   00A20C  2592               	addwf	completed@io& (0+255),w,b
 31233   00A20E  6ED9               	movwf	fsr2l,c
 31234   00A210  6ADA               	clrf	fsr2h,c
 31235   00A212  0E01               	movlw	high _servoState
 31236   00A214  22DA               	addwfc	fsr2h,f,c
 31237   00A216  50DF               	movf	indf2,w,c
 31238   00A218  A4D8               	btfss	status,2,c
 31239   00A21A  D002               	goto	l875
 31240   00A21C                     u21530:
 31241                           
 31242                           ; BSR set to: 0
 31243   00A21C  0E01               	movlw	1
 31244   00A21E  6F91               	movwf	_completed$1459& (0+255),b
 31245   00A220                     l875:
 31246                           
 31247                           ; BSR set to: 0
 31248   00A220  5191               	movf	_completed$1459& (0+255),w,b
 31249   00A222  0012               	return	
 31250   00A224                     l20766:
 31251   00A224  0100               	movlb	0	; () banked
 31252   00A226  518E               	movf	completed@type& (0+255),w,b
 31253                           
 31254                           ; Switch size 1, requested type "simple"
 31255                           ; Number of cases is 5, Range of values is 0 to 4
 31256                           ; switch strategies available:
 31257                           ; Name         Instructions Cycles
 31258                           ; simple_byte           16     9 (average)
 31259                           ;	Chosen strategy is simple_byte
 31260   00A228  0A00               	xorlw	0	; case 0
 31261   00A22A  B4D8               	btfsc	status,2,c
 31262   00A22C  D7C6               	goto	l20744
 31263   00A22E  0A01               	xorlw	1	; case 1
 31264   00A230  B4D8               	btfsc	status,2,c
 31265   00A232  D7C5               	goto	l20748
 31266   00A234  0A03               	xorlw	3	; case 2
 31267   00A236  B4D8               	btfsc	status,2,c
 31268   00A238  D7CF               	goto	l20752
 31269   00A23A  0A01               	xorlw	1	; case 3
 31270   00A23C  B4D8               	btfsc	status,2,c
 31271   00A23E  D7CC               	goto	l20752
 31272   00A240  0A07               	xorlw	7	; case 4
 31273   00A242  B4D8               	btfsc	status,2,c
 31274   00A244  D7C9               	goto	l20752
 31275   00A246  D7B9               	goto	l20744
 31276   00A248                     __end_of_completed:
 31277                           	callstack 0
 31278                           
 31279 ;; *************** function _inputScan *****************
 31280 ;; Defined at:
 31281 ;;		line 101 in file "../inputs.c"
 31282 ;; Parameters:    Size  Location     Type
 31283 ;;		None
 31284 ;; Auto vars:     Size  Location     Type
 31285 ;;  change          1   19[BANK1 ] enum E12701
 31286 ;;  input           1   20[BANK1 ] unsigned char 
 31287 ;; Return value:  Size  Location     Type
 31288 ;;                  1    wreg      void 
 31289 ;; Registers used:
 31290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31291 ;; Tracked objects:
 31292 ;;		On entry : 0/0
 31293 ;;		On exit  : 0/0
 31294 ;;		Unchanged: 0/0
 31295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31297 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31298 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31299 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31300 ;;Total ram usage:        4 bytes
 31301 ;; Hardware stack levels used: 1
 31302 ;; Hardware stack levels required when called: 18
 31303 ;; This function calls:
 31304 ;;		_getNV
 31305 ;;		_readInput
 31306 ;;		_sendProducedEvent
 31307 ;;		_writeNVM
 31308 ;; This function is called by:
 31309 ;;		_loop
 31310 ;; This function uses a non-reentrant model
 31311 ;;
 31312                           
 31313                           	psect	text120
 31314   004B18                     __ptext120:
 31315                           	callstack 0
 31316   004B18                     _inputScan:
 31317                           	callstack 11
 31318                           
 31319                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 31320                           
 31321                           ; BSR set to: 0
 31322                           ;incstack = 0
 31323   004B18  0E00               	movlw	0
 31324   004B1A  0100               	movlb	0	; () banked
 31325   004B1C  6FCA               	movwf	_io@inputs$F843& (0+255),b
 31326   004B1E                     l22006:
 31327                           
 31328                           ; BSR set to: 0
 31329   004B1E  0E0F               	movlw	15
 31330   004B20  65CA               	cpfsgt	_io@inputs$F843& (0+255),b
 31331   004B22  D001               	goto	l22010
 31332   004B24  0012               	return	
 31333   004B26                     l22010:
 31334                           
 31335                           ; BSR set to: 0
 31336                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 31337   004B26  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31338   004B28  0D07               	mullw	7
 31339   004B2A  50F3               	movf	243,w,c
 31340   004B2C  0F10               	addlw	16
 31341   004B2E  EC7F  F05D         	call	_getNV
 31342   004B32  0100               	movlb	0	; () banked
 31343   004B34  518D               	movf	?_getNV& (0+255),w,b
 31344   004B36  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 31345   004B38  A4D8               	btfss	status,2,c
 31346   004B3A  D15D               	goto	l22072
 31347                           
 31348                           ; BSR set to: 0
 31349                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 31350   004B3C  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31351   004B3E  EC6B  F040         	call	_readInput
 31352   004B42  0101               	movlb	1	; () banked
 31353   004B44  6FD2               	movwf	inputScan@input& (0+255),b
 31354                           
 31355                           ; BSR set to: 1
 31356                           ;../inputs.c: 105:             if (input != inputState[io]) {
 31357   004B46  0EC4               	movlw	low _inputState
 31358   004B48  0100               	movlb	0	; () banked
 31359   004B4A  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31360   004B4C  6ED9               	movwf	fsr2l,c
 31361   004B4E  6ADA               	clrf	fsr2h,c
 31362   004B50  0E02               	movlw	high _inputState
 31363   004B52  22DA               	addwfc	fsr2h,f,c
 31364   004B54  0101               	movlb	1	; () banked
 31365   004B56  51D2               	movf	inputScan@input& (0+255),w,b
 31366   004B58  18DE               	xorwf	postinc2,w,c
 31367   004B5A  B4D8               	btfsc	status,2,c
 31368   004B5C  D144               	goto	l22070
 31369                           
 31370                           ; BSR set to: 1
 31371                           ;../inputs.c: 106:                 Boolean change = FALSE;
 31372   004B5E  0E00               	movlw	0
 31373   004B60  6FD1               	movwf	inputScan@change& (0+255),b
 31374                           
 31375                           ; BSR set to: 1
 31376                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 31377   004B62  0EC4               	movlw	low _inputState
 31378   004B64  0100               	movlb	0	; () banked
 31379   004B66  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31380   004B68  6ED9               	movwf	fsr2l,c
 31381   004B6A  6ADA               	clrf	fsr2h,c
 31382   004B6C  0E02               	movlw	high _inputState
 31383   004B6E  22DA               	addwfc	fsr2h,f,c
 31384   004B70  50DF               	movf	indf2,w,c
 31385   004B72  B4D8               	btfsc	status,2,c
 31386   004B74  D01E               	goto	l22024
 31387                           
 31388                           ; BSR set to: 0
 31389   004B76  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31390   004B78  0D07               	mullw	7
 31391   004B7A  50F3               	movf	243,w,c
 31392   004B7C  0F12               	addlw	18
 31393   004B7E  EC7F  F05D         	call	_getNV
 31394   004B82  0EA4               	movlw	low _delayCount
 31395   004B84  0100               	movlb	0	; () banked
 31396   004B86  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31397   004B88  6ED9               	movwf	fsr2l,c
 31398   004B8A  6ADA               	clrf	fsr2h,c
 31399   004B8C  0E02               	movlw	high _delayCount
 31400   004B8E  22DA               	addwfc	fsr2h,f,c
 31401   004B90  50DF               	movf	indf2,w,c
 31402   004B92  0101               	movlb	1	; () banked
 31403   004B94  6FCF               	movwf	??_inputScan& (0+255),b
 31404   004B96  6BD0               	clrf	(??_inputScan+1)& (0+255),b
 31405   004B98  0100               	movlb	0	; () banked
 31406   004B9A  518D               	movf	?_getNV& (0+255),w,b
 31407   004B9C  0101               	movlb	1	; () banked
 31408   004B9E  19CF               	xorwf	??_inputScan& (0+255),w,b
 31409   004BA0  E108               	bnz	l22024
 31410   004BA2  0100               	movlb	0	; () banked
 31411   004BA4  518E               	movf	(?_getNV+1)& (0+255),w,b
 31412   004BA6  0101               	movlb	1	; () banked
 31413   004BA8  19D0               	xorwf	(??_inputScan+1)& (0+255),w,b
 31414   004BAA  A4D8               	btfss	status,2,c
 31415   004BAC  D002               	goto	l22024
 31416                           
 31417                           ; BSR set to: 1
 31418                           ;../inputs.c: 109:                     change = TRUE;
 31419   004BAE  0E01               	movlw	1
 31420   004BB0  6FD1               	movwf	inputScan@change& (0+255),b
 31421   004BB2                     l22024:
 31422                           
 31423                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 31424   004BB2  0EC4               	movlw	low _inputState
 31425   004BB4  0100               	movlb	0	; () banked
 31426   004BB6  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31427   004BB8  6ED9               	movwf	fsr2l,c
 31428   004BBA  6ADA               	clrf	fsr2h,c
 31429   004BBC  0E02               	movlw	high _inputState
 31430   004BBE  22DA               	addwfc	fsr2h,f,c
 31431   004BC0  50DF               	movf	indf2,w,c
 31432   004BC2  A4D8               	btfss	status,2,c
 31433   004BC4  D01E               	goto	l318
 31434                           
 31435                           ; BSR set to: 0
 31436   004BC6  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31437   004BC8  0D07               	mullw	7
 31438   004BCA  50F3               	movf	243,w,c
 31439   004BCC  0F13               	addlw	19
 31440   004BCE  EC7F  F05D         	call	_getNV
 31441   004BD2  0EA4               	movlw	low _delayCount
 31442   004BD4  0100               	movlb	0	; () banked
 31443   004BD6  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31444   004BD8  6ED9               	movwf	fsr2l,c
 31445   004BDA  6ADA               	clrf	fsr2h,c
 31446   004BDC  0E02               	movlw	high _delayCount
 31447   004BDE  22DA               	addwfc	fsr2h,f,c
 31448   004BE0  50DF               	movf	indf2,w,c
 31449   004BE2  0101               	movlb	1	; () banked
 31450   004BE4  6FCF               	movwf	??_inputScan& (0+255),b
 31451   004BE6  6BD0               	clrf	(??_inputScan+1)& (0+255),b
 31452   004BE8  0100               	movlb	0	; () banked
 31453   004BEA  518D               	movf	?_getNV& (0+255),w,b
 31454   004BEC  0101               	movlb	1	; () banked
 31455   004BEE  19CF               	xorwf	??_inputScan& (0+255),w,b
 31456   004BF0  E108               	bnz	l318
 31457   004BF2  0100               	movlb	0	; () banked
 31458   004BF4  518E               	movf	(?_getNV+1)& (0+255),w,b
 31459   004BF6  0101               	movlb	1	; () banked
 31460   004BF8  19D0               	xorwf	(??_inputScan+1)& (0+255),w,b
 31461   004BFA  A4D8               	btfss	status,2,c
 31462   004BFC  D002               	goto	l318
 31463                           
 31464                           ; BSR set to: 1
 31465                           ;../inputs.c: 112:                     change = TRUE;
 31466   004BFE  0E01               	movlw	1
 31467   004C00  6FD1               	movwf	inputScan@change& (0+255),b
 31468   004C02                     l318:
 31469                           
 31470                           ;../inputs.c: 114:                 if (change) {
 31471   004C02  0101               	movlb	1	; () banked
 31472   004C04  51D1               	movf	inputScan@change& (0+255),w,b
 31473   004C06  B4D8               	btfsc	status,2,c
 31474   004C08  D0E5               	goto	l22068
 31475                           
 31476                           ; BSR set to: 1
 31477                           ;../inputs.c: 116:                     delayCount[io] = 0;
 31478   004C0A  0EA4               	movlw	low _delayCount
 31479   004C0C  0100               	movlb	0	; () banked
 31480   004C0E  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31481   004C10  6ED9               	movwf	fsr2l,c
 31482   004C12  6ADA               	clrf	fsr2h,c
 31483   004C14  0E02               	movlw	high _delayCount
 31484   004C16  22DA               	addwfc	fsr2h,f,c
 31485   004C18  6ADF               	clrf	indf2,c
 31486                           
 31487                           ;../inputs.c: 117:                     inputState[io] = input;
 31488   004C1A  0EC4               	movlw	low _inputState
 31489   004C1C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31490   004C1E  6ED9               	movwf	fsr2l,c
 31491   004C20  6ADA               	clrf	fsr2h,c
 31492   004C22  0E02               	movlw	high _inputState
 31493   004C24  22DA               	addwfc	fsr2h,f,c
 31494   004C26  C1D2  FFDF         	movff	inputScan@input,indf2
 31495                           
 31496                           ; BSR set to: 0
 31497                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 31498   004C2A  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31499   004C2C  0D07               	mullw	7
 31500   004C2E  50F3               	movf	243,w,c
 31501   004C30  0F11               	addlw	17
 31502   004C32  EC7F  F05D         	call	_getNV
 31503   004C36  0100               	movlb	0	; () banked
 31504   004C38  B18D               	btfsc	?_getNV& (0+255),0,b
 31505   004C3A  D008               	goto	l22036
 31506                           
 31507                           ; BSR set to: 0
 31508                           ;../inputs.c: 120:                         input = !input;
 31509   004C3C  0101               	movlb	1	; () banked
 31510   004C3E  51D2               	movf	inputScan@input& (0+255),w,b
 31511   004C40  A4D8               	btfss	status,2,c
 31512   004C42  D002               	goto	u23440
 31513   004C44  0E01               	movlw	1
 31514   004C46  D001               	goto	u23450
 31515   004C48                     u23440:
 31516   004C48  0E00               	movlw	0
 31517   004C4A                     u23450:
 31518   004C4A  6FD2               	movwf	inputScan@input& (0+255),b
 31519   004C4C                     l22036:
 31520                           
 31521                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 31522   004C4C  0100               	movlb	0	; () banked
 31523   004C4E  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31524   004C50  0D07               	mullw	7
 31525   004C52  50F3               	movf	243,w,c
 31526   004C54  0F11               	addlw	17
 31527   004C56  EC7F  F05D         	call	_getNV
 31528   004C5A  0100               	movlb	0	; () banked
 31529   004C5C  A98D               	btfss	?_getNV& (0+255),4,b
 31530   004C5E  D031               	goto	l22044
 31531                           
 31532                           ; BSR set to: 0
 31533                           ;../inputs.c: 124:                         if (input) {
 31534   004C60  0101               	movlb	1	; () banked
 31535   004C62  51D2               	movf	inputScan@input& (0+255),w,b
 31536   004C64  B4D8               	btfsc	status,2,c
 31537   004C66  D0C7               	goto	l22072
 31538                           
 31539                           ; BSR set to: 1
 31540                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 31541   004C68  0EB4               	movlw	low _outputState
 31542   004C6A  0100               	movlb	0	; () banked
 31543   004C6C  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31544   004C6E  6ED9               	movwf	fsr2l,c
 31545   004C70  6ADA               	clrf	fsr2h,c
 31546   004C72  0E02               	movlw	high _outputState
 31547   004C74  22DA               	addwfc	fsr2h,f,c
 31548   004C76  0EB4               	movlw	low _outputState
 31549   004C78  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31550   004C7A  6EE1               	movwf	fsr1l,c
 31551   004C7C  6AE2               	clrf	fsr1h,c
 31552   004C7E  0E02               	movlw	high _outputState
 31553   004C80  22E2               	addwfc	fsr1h,f,c
 31554   004C82  50E7               	movf	indf1,w,c
 31555   004C84  A4D8               	btfss	status,2,c
 31556   004C86  D002               	goto	u23480
 31557   004C88  0E01               	movlw	1
 31558   004C8A  D001               	goto	u23490
 31559   004C8C                     u23480:
 31560   004C8C  0E00               	movlw	0
 31561   004C8E                     u23490:
 31562   004C8E  6EDF               	movwf	indf2,c
 31563                           
 31564                           ; BSR set to: 0
 31565                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 31566                           
 31567                           ;../inputs.c: 126:                         } else {
 31568   004C90  0EDE               	movlw	222
 31569   004C92  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31570   004C94  0101               	movlb	1	; () banked
 31571   004C96  6FCF               	movwf	??_inputScan& (0+255),b
 31572   004C98  6BD0               	clrf	(??_inputScan+1)& (0+255),b
 31573   004C9A  0E03               	movlw	3
 31574   004C9C  23D0               	addwfc	(??_inputScan+1)& (0+255),f,b
 31575   004C9E  C1CF  F0A4         	movff	??_inputScan,writeNVM@index
 31576   004CA2  C1D0  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 31577   004CA6  0100               	movlb	0	; () banked
 31578   004CA8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 31579   004CAA  0EB4               	movlw	low _outputState
 31580   004CAC  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31581   004CAE  6ED9               	movwf	fsr2l,c
 31582   004CB0  6ADA               	clrf	fsr2h,c
 31583   004CB2  0E02               	movlw	high _outputState
 31584   004CB4  22DA               	addwfc	fsr2h,f,c
 31585   004CB6  50DF               	movf	indf2,w,c
 31586   004CB8  6FA7               	movwf	writeNVM@value& (0+255),b
 31587   004CBA  0E00               	movlw	0
 31588   004CBC  EC91  F05B         	call	_writeNVM
 31589                           
 31590                           ;../inputs.c: 130:                      } else {
 31591   004CC0  D008               	goto	l22046
 31592   004CC2                     l22044:
 31593                           
 31594                           ; BSR set to: 0
 31595                           ;../inputs.c: 131:                         outputState[io] = input;
 31596   004CC2  0EB4               	movlw	low _outputState
 31597   004CC4  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31598   004CC6  6ED9               	movwf	fsr2l,c
 31599   004CC8  6ADA               	clrf	fsr2h,c
 31600   004CCA  0E02               	movlw	high _outputState
 31601   004CCC  22DA               	addwfc	fsr2h,f,c
 31602   004CCE  C1D2  FFDF         	movff	inputScan@input,indf2
 31603   004CD2                     l22046:
 31604                           
 31605                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 31606   004CD2  0100               	movlb	0	; () banked
 31607   004CD4  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31608   004CD6  0D07               	mullw	7
 31609   004CD8  50F3               	movf	243,w,c
 31610   004CDA  0F11               	addlw	17
 31611   004CDC  EC7F  F05D         	call	_getNV
 31612   004CE0  0100               	movlb	0	; () banked
 31613   004CE2  A78D               	btfss	?_getNV& (0+255),3,b
 31614   004CE4  D047               	goto	l22062
 31615                           
 31616                           ; BSR set to: 0
 31617                           ;../inputs.c: 136:                         if (outputState[io]) {
 31618   004CE6  0EB4               	movlw	low _outputState
 31619   004CE8  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31620   004CEA  6ED9               	movwf	fsr2l,c
 31621   004CEC  6ADA               	clrf	fsr2h,c
 31622   004CEE  0E02               	movlw	high _outputState
 31623   004CF0  22DA               	addwfc	fsr2h,f,c
 31624   004CF2  50DF               	movf	indf2,w,c
 31625   004CF4  B4D8               	btfsc	status,2,c
 31626   004CF6  D01F               	goto	l22056
 31627                           
 31628                           ; BSR set to: 0
 31629                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31630   004CF8  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31631   004CFA  0D07               	mullw	7
 31632   004CFC  50F3               	movf	243,w,c
 31633   004CFE  0F11               	addlw	17
 31634   004D00  EC7F  F05D         	call	_getNV
 31635   004D04  0100               	movlb	0	; () banked
 31636   004D06  AD8D               	btfss	?_getNV& (0+255),6,b
 31637   004D08  D00B               	goto	l22054
 31638                           
 31639                           ; BSR set to: 0
 31640                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 31641   004D0A  0E00               	movlw	0
 31642   004D0C  0101               	movlb	1	; () banked
 31643   004D0E  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 31644   004D10  0100               	movlb	0	; () banked
 31645   004D12  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31646   004D14  0D04               	mullw	4
 31647   004D16  50F3               	movf	243,w,c
 31648   004D18  0F08               	addlw	8
 31649   004D1A  EC28  F04E         	call	_sendProducedEvent
 31650                           
 31651                           ;../inputs.c: 141:                             } else {
 31652   004D1E  D06B               	goto	l22072
 31653   004D20                     l22054:
 31654                           
 31655                           ; BSR set to: 0
 31656                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 31657   004D20  0E01               	movlw	1
 31658   004D22  0101               	movlb	1	; () banked
 31659   004D24  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 31660   004D26  0100               	movlb	0	; () banked
 31661   004D28  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31662   004D2A  0D04               	mullw	4
 31663   004D2C  50F3               	movf	243,w,c
 31664   004D2E  0F08               	addlw	8
 31665   004D30  EC28  F04E         	call	_sendProducedEvent
 31666   004D34  D060               	goto	l22072
 31667   004D36                     l22056:
 31668                           
 31669                           ; BSR set to: 0
 31670                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31671   004D36  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31672   004D38  0D07               	mullw	7
 31673   004D3A  50F3               	movf	243,w,c
 31674   004D3C  0F11               	addlw	17
 31675   004D3E  EC7F  F05D         	call	_getNV
 31676   004D42  0100               	movlb	0	; () banked
 31677   004D44  AD8D               	btfss	?_getNV& (0+255),6,b
 31678   004D46  D00B               	goto	l22060
 31679                           
 31680                           ; BSR set to: 0
 31681                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 31682   004D48  0E00               	movlw	0
 31683   004D4A  0101               	movlb	1	; () banked
 31684   004D4C  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 31685   004D4E  0100               	movlb	0	; () banked
 31686   004D50  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31687   004D52  0D04               	mullw	4
 31688   004D54  50F3               	movf	243,w,c
 31689   004D56  0F09               	addlw	9
 31690   004D58  EC28  F04E         	call	_sendProducedEvent
 31691                           
 31692                           ;../inputs.c: 147:                             } else {
 31693   004D5C  D04C               	goto	l22072
 31694   004D5E                     l22060:
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 31698   004D5E  0E01               	movlw	1
 31699   004D60  0101               	movlb	1	; () banked
 31700   004D62  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 31701   004D64  0100               	movlb	0	; () banked
 31702   004D66  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31703   004D68  0D04               	mullw	4
 31704   004D6A  50F3               	movf	243,w,c
 31705   004D6C  0F09               	addlw	9
 31706   004D6E  EC28  F04E         	call	_sendProducedEvent
 31707   004D72  D041               	goto	l22072
 31708   004D74                     l22062:
 31709                           
 31710                           ; BSR set to: 0
 31711                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 31712   004D74  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31713   004D76  0D07               	mullw	7
 31714   004D78  50F3               	movf	243,w,c
 31715   004D7A  0F11               	addlw	17
 31716   004D7C  EC7F  F05D         	call	_getNV
 31717   004D80  0100               	movlb	0	; () banked
 31718   004D82  AD8D               	btfss	?_getNV& (0+255),6,b
 31719   004D84  D016               	goto	l22066
 31720                           
 31721                           ; BSR set to: 0
 31722                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 31723   004D86  0EB4               	movlw	low _outputState
 31724   004D88  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31725   004D8A  6ED9               	movwf	fsr2l,c
 31726   004D8C  6ADA               	clrf	fsr2h,c
 31727   004D8E  0E02               	movlw	high _outputState
 31728   004D90  22DA               	addwfc	fsr2h,f,c
 31729   004D92  50DF               	movf	indf2,w,c
 31730   004D94  A4D8               	btfss	status,2,c
 31731   004D96  D002               	goto	u23550
 31732   004D98  0E01               	movlw	1
 31733   004D9A  D001               	goto	u23560
 31734   004D9C                     u23550:
 31735   004D9C  0E00               	movlw	0
 31736   004D9E                     u23560:
 31737   004D9E  0101               	movlb	1	; () banked
 31738   004DA0  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 31739   004DA2  0100               	movlb	0	; () banked
 31740   004DA4  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31741   004DA6  0D04               	mullw	4
 31742   004DA8  50F3               	movf	243,w,c
 31743   004DAA  0F08               	addlw	8
 31744   004DAC  EC28  F04E         	call	_sendProducedEvent
 31745                           
 31746                           ;../inputs.c: 155:                         } else {
 31747   004DB0  D022               	goto	l22072
 31748   004DB2                     l22066:
 31749                           
 31750                           ; BSR set to: 0
 31751                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 31752   004DB2  0EB4               	movlw	low _outputState
 31753   004DB4  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31754   004DB6  6ED9               	movwf	fsr2l,c
 31755   004DB8  6ADA               	clrf	fsr2h,c
 31756   004DBA  0E02               	movlw	high _outputState
 31757   004DBC  22DA               	addwfc	fsr2h,f,c
 31758   004DBE  50DF               	movf	indf2,w,c
 31759   004DC0  0101               	movlb	1	; () banked
 31760   004DC2  6FC7               	movwf	sendProducedEvent@onOff& (0+255),b
 31761   004DC4  0100               	movlb	0	; () banked
 31762   004DC6  51CA               	movf	_io@inputs$F843& (0+255),w,b
 31763   004DC8  0D04               	mullw	4
 31764   004DCA  50F3               	movf	243,w,c
 31765   004DCC  0F08               	addlw	8
 31766   004DCE  EC28  F04E         	call	_sendProducedEvent
 31767   004DD2  D011               	goto	l22072
 31768   004DD4                     l22068:
 31769                           
 31770                           ; BSR set to: 1
 31771                           ;../inputs.c: 160:                     delayCount[io]++;
 31772   004DD4  0EA4               	movlw	low _delayCount
 31773   004DD6  0100               	movlb	0	; () banked
 31774   004DD8  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31775   004DDA  6ED9               	movwf	fsr2l,c
 31776   004DDC  6ADA               	clrf	fsr2h,c
 31777   004DDE  0E02               	movlw	high _delayCount
 31778   004DE0  22DA               	addwfc	fsr2h,f,c
 31779   004DE2  2ADF               	incf	indf2,f,c
 31780   004DE4  D008               	goto	l22072
 31781   004DE6                     l22070:
 31782                           
 31783                           ; BSR set to: 1
 31784                           ;../inputs.c: 163:                 delayCount[io] = 0;
 31785   004DE6  0EA4               	movlw	low _delayCount
 31786   004DE8  0100               	movlb	0	; () banked
 31787   004DEA  25CA               	addwf	_io@inputs$F843& (0+255),w,b
 31788   004DEC  6ED9               	movwf	fsr2l,c
 31789   004DEE  6ADA               	clrf	fsr2h,c
 31790   004DF0  0E02               	movlw	high _delayCount
 31791   004DF2  22DA               	addwfc	fsr2h,f,c
 31792   004DF4  6ADF               	clrf	indf2,c
 31793   004DF6                     l22072:
 31794   004DF6  0100               	movlb	0	; () banked
 31795   004DF8  2BCA               	incf	_io@inputs$F843& (0+255),f,b
 31796   004DFA  D691               	goto	l22006
 31797   004DFC                     __end_of_inputScan:
 31798                           	callstack 0
 31799                           
 31800 ;; *************** function _sendProducedEvent *****************
 31801 ;; Defined at:
 31802 ;;		line 172 in file "../../VLCBlib_PIC/event_producer.c"
 31803 ;; Parameters:    Size  Location     Type
 31804 ;;  happening       1    wreg     unsigned char 
 31805 ;;  onOff           1    9[BANK1 ] enum E12720
 31806 ;; Auto vars:     Size  Location     Type
 31807 ;;  happening       1   14[BANK1 ] unsigned char 
 31808 ;;  producedEven    2   15[BANK1 ] struct Word
 31809 ;;  producedEven    2   12[BANK1 ] struct Word
 31810 ;;  opc             1   11[BANK1 ] unsigned char 
 31811 ;; Return value:  Size  Location     Type
 31812 ;;                  1    wreg      enum E12700
 31813 ;; Registers used:
 31814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31815 ;; Tracked objects:
 31816 ;;		On entry : 0/0
 31817 ;;		On exit  : 0/0
 31818 ;;		Unchanged: 0/0
 31819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31820 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31821 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31822 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31823 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31824 ;;Total ram usage:        8 bytes
 31825 ;; Hardware stack levels used: 1
 31826 ;; Hardware stack levels required when called: 16
 31827 ;; This function calls:
 31828 ;;		_getEN
 31829 ;;		_getNN
 31830 ;;		_sendMessage4
 31831 ;; This function is called by:
 31832 ;;		_loop
 31833 ;;		_processOutputs
 31834 ;;		_inputScan
 31835 ;;		_sendInvertedProducedEvent
 31836 ;;		_alwaysSendInvertedProducedEvent
 31837 ;;		_pollServos
 31838 ;; This function uses a non-reentrant model
 31839 ;;
 31840                           
 31841                           	psect	text121
 31842   009C50                     __ptext121:
 31843                           	callstack 0
 31844   009C50                     _sendProducedEvent:
 31845                           	callstack 11
 31846                           
 31847                           ; BSR set to: 0
 31848                           ;incstack = 0
 31849                           ;sendProducedEvent@happening stored from wreg
 31850   009C50  0101               	movlb	1	; () banked
 31851   009C52  6FCC               	movwf	sendProducedEvent@happening& (0+255),b
 31852                           
 31853                           ;../../VLCBlib_PIC/event_producer.c: 173:     Word producedEventNN;;../../VLCBlib_PIC/ev
      +                          ent_producer.c: 174:     Word producedEventEN;;../../VLCBlib_PIC/event_producer.c: 175: 
      +                              uint8_t opc;;../../VLCBlib_PIC/event_producer.c: 181:     if (happening2Event[happen
      +                          ing] == 0xff) return FALSE;
 31854   009C54  0E00               	movlw	low _happening2Event
 31855   009C56  0101               	movlb	1	; () banked
 31856   009C58  25CC               	addwf	sendProducedEvent@happening& (0+255),w,b
 31857   009C5A  6ED9               	movwf	fsr2l,c
 31858   009C5C  6ADA               	clrf	fsr2h,c
 31859   009C5E  0E03               	movlw	high _happening2Event
 31860   009C60  22DA               	addwfc	fsr2h,f,c
 31861   009C62  28DE               	incf	postinc2,w,c
 31862   009C64  A4D8               	btfss	status,2,c
 31863   009C66  D002               	goto	l19040
 31864                           
 31865                           ; BSR set to: 1
 31866   009C68  0E00               	movlw	0
 31867   009C6A  0012               	return	
 31868   009C6C                     l19040:
 31869                           
 31870                           ; BSR set to: 1
 31871                           ;../../VLCBlib_PIC/event_producer.c: 182:     producedEventNN.word = getNN(happening2Eve
      +                          nt[happening]);
 31872   009C6C  0E00               	movlw	low _happening2Event
 31873   009C6E  25CC               	addwf	sendProducedEvent@happening& (0+255),w,b
 31874   009C70  6ED9               	movwf	fsr2l,c
 31875   009C72  6ADA               	clrf	fsr2h,c
 31876   009C74  0E03               	movlw	high _happening2Event
 31877   009C76  22DA               	addwfc	fsr2h,f,c
 31878   009C78  50DF               	movf	indf2,w,c
 31879   009C7A  EC6B  F049         	call	_getNN
 31880   009C7E  C097  F1CD         	movff	?_getNN,sendProducedEvent@producedEventNN
 31881   009C82  C098  F1CE         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 31882                           
 31883                           ;../../VLCBlib_PIC/event_producer.c: 183:     producedEventEN.word = getEN(happening2Eve
      +                          nt[happening]);
 31884   009C86  0E00               	movlw	low _happening2Event
 31885   009C88  0101               	movlb	1	; () banked
 31886   009C8A  25CC               	addwf	sendProducedEvent@happening& (0+255),w,b
 31887   009C8C  6ED9               	movwf	fsr2l,c
 31888   009C8E  6ADA               	clrf	fsr2h,c
 31889   009C90  0E03               	movlw	high _happening2Event
 31890   009C92  22DA               	addwfc	fsr2h,f,c
 31891   009C94  50DF               	movf	indf2,w,c
 31892   009C96  EC4D  F055         	call	_getEN
 31893   009C9A  C097  F1CA         	movff	?_getEN,sendProducedEvent@producedEventEN
 31894   009C9E  C098  F1CB         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 31895                           
 31896                           ;../../VLCBlib_PIC/event_producer.c: 207:                 if (producedEventNN.word == 0)
      +                           {
 31897   009CA2  0101               	movlb	1	; () banked
 31898   009CA4  51CD               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 31899   009CA6  11CE               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 31900   009CA8  A4D8               	btfss	status,2,c
 31901   009CAA  D00C               	goto	l19052
 31902                           
 31903                           ; BSR set to: 1
 31904                           ;../../VLCBlib_PIC/event_producer.c: 209:                     if (onOff == EVENT_ON) {
 31905   009CAC  05C7               	decf	sendProducedEvent@onOff& (0+255),w,b
 31906   009CAE  A4D8               	btfss	status,2,c
 31907   009CB0  D002               	goto	l19048
 31908                           
 31909                           ; BSR set to: 1
 31910                           ;../../VLCBlib_PIC/event_producer.c: 210:                         opc = OPC_ASON;
 31911   009CB2  0E98               	movlw	152
 31912   009CB4  D001               	goto	L15
 31913   009CB6                     l19048:
 31914                           
 31915                           ; BSR set to: 1
 31916                           ;../../VLCBlib_PIC/event_producer.c: 212:                         opc = OPC_ASOF;
 31917   009CB6  0E99               	movlw	153
 31918   009CB8                     L15:
 31919   009CB8  6FC9               	movwf	sendProducedEvent@opc& (0+255),b
 31920                           
 31921                           ; BSR set to: 1
 31922                           ;../../VLCBlib_PIC/event_producer.c: 214:                     producedEventNN.word = nn.
      +                          word;
 31923   009CBA  C0B4  F1CD         	movff	_nn,sendProducedEvent@producedEventNN
 31924   009CBE  C0B5  F1CE         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 31925                           
 31926                           ;../../VLCBlib_PIC/event_producer.c: 215:                 } else {
 31927   009CC2  D007               	goto	l19058
 31928   009CC4                     l19052:
 31929                           
 31930                           ; BSR set to: 1
 31931                           ;../../VLCBlib_PIC/event_producer.c: 217:                     if (onOff == EVENT_ON) {
 31932   009CC4  05C7               	decf	sendProducedEvent@onOff& (0+255),w,b
 31933   009CC6  A4D8               	btfss	status,2,c
 31934   009CC8  D002               	goto	l19056
 31935                           
 31936                           ; BSR set to: 1
 31937                           ;../../VLCBlib_PIC/event_producer.c: 218:                         opc = OPC_ACON;
 31938   009CCA  0E90               	movlw	144
 31939   009CCC  D001               	goto	L16
 31940   009CCE                     l19056:
 31941                           
 31942                           ; BSR set to: 1
 31943                           ;../../VLCBlib_PIC/event_producer.c: 220:                         opc = OPC_ACOF;
 31944   009CCE  0E91               	movlw	145
 31945   009CD0                     L16:
 31946   009CD0  6FC9               	movwf	sendProducedEvent@opc& (0+255),b
 31947   009CD2                     l19058:
 31948                           
 31949                           ; BSR set to: 1
 31950                           ;../../VLCBlib_PIC/event_producer.c: 223:                 sendMessage4(opc, producedEven
      +                          tNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEventEN.bytes.
      +                          lo);
 31951   009CD2  C1CE  F0A6         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 31952   009CD6  C1CD  F0A7         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 31953   009CDA  C1CB  F0A8         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 31954   009CDE  C1CA  F0A9         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 31955   009CE2  51C9               	movf	sendProducedEvent@opc& (0+255),w,b
 31956   009CE4  ECB5  F05F         	call	_sendMessage4
 31957                           
 31958                           ;../../VLCBlib_PIC/event_producer.c: 224:                 producerDiagnostics[0].asUint+
      +                          +;
 31959   009CE8  0101               	movlb	1	; () banked
 31960   009CEA  4BBA               	infsnz	_producerDiagnostics& (0+255),f,b
 31961   009CEC  2BBB               	incf	(_producerDiagnostics+1)& (0+255),f,b
 31962                           
 31963                           ; BSR set to: 1
 31964                           ;../../VLCBlib_PIC/event_producer.c: 225:                 return TRUE;
 31965   009CEE  0E01               	movlw	1
 31966                           
 31967                           ; BSR set to: 1
 31968   009CF0  0012               	return		;funcret
 31969   009CF2                     __end_of_sendProducedEvent:
 31970                           	callstack 0
 31971                           
 31972 ;; *************** function _sendMessage4 *****************
 31973 ;; Defined at:
 31974 ;;		line 1164 in file "../../VLCBlib_PIC/vlcb.c"
 31975 ;; Parameters:    Size  Location     Type
 31976 ;;  opc             1    wreg     enum E12342
 31977 ;;  data1           1   70[BANK0 ] unsigned char 
 31978 ;;  data2           1   71[BANK0 ] unsigned char 
 31979 ;;  data3           1   72[BANK0 ] unsigned char 
 31980 ;;  data4           1   73[BANK0 ] unsigned char 
 31981 ;; Auto vars:     Size  Location     Type
 31982 ;;  opc             1    8[BANK1 ] enum E12342
 31983 ;; Return value:  Size  Location     Type
 31984 ;;                  1    wreg      void 
 31985 ;; Registers used:
 31986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 31987 ;; Tracked objects:
 31988 ;;		On entry : 0/0
 31989 ;;		On exit  : 0/0
 31990 ;;		Unchanged: 0/0
 31991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31992 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31993 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31995 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31996 ;;Total ram usage:        5 bytes
 31997 ;; Hardware stack levels used: 1
 31998 ;; Hardware stack levels required when called: 15
 31999 ;; This function calls:
 32000 ;;		_sendMessage
 32001 ;; This function is called by:
 32002 ;;		_producerProcessMessage
 32003 ;;		_sendProducedEvent
 32004 ;;		_mnsProcessMessage
 32005 ;;		_mnsTRrqnpnCallback
 32006 ;;		_nvProcessMessage
 32007 ;;		_nvTRnvrdCallback
 32008 ;; This function uses a non-reentrant model
 32009 ;;
 32010                           
 32011                           	psect	text122
 32012   00BF6A                     __ptext122:
 32013                           	callstack 0
 32014   00BF6A                     _sendMessage4:
 32015                           	callstack 13
 32016                           
 32017                           ; BSR set to: 1
 32018                           ;incstack = 0
 32019                           ;sendMessage4@opc stored from wreg
 32020   00BF6A  0101               	movlb	1	; () banked
 32021   00BF6C  6FC6               	movwf	sendMessage4@opc& (0+255),b
 32022                           
 32023                           ;../../VLCBlib_PIC/vlcb.c: 1165:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32024   00BF6E  0E05               	movlw	5
 32025   00BF70  0101               	movlb	1	; () banked
 32026   00BF72  6FBE               	movwf	sendMessage@len& (0+255),b
 32027   00BF74  C0A6  F1BF         	movff	sendMessage4@data1,sendMessage@data1
 32028   00BF78  C0A7  F1C0         	movff	sendMessage4@data2,sendMessage@data2
 32029   00BF7C  C0A8  F1C1         	movff	sendMessage4@data3,sendMessage@data3
 32030   00BF80  C0A9  F1C2         	movff	sendMessage4@data4,sendMessage@data4
 32031   00BF84  0E00               	movlw	0
 32032   00BF86  6FC3               	movwf	sendMessage@data5& (0+255),b
 32033   00BF88  0E00               	movlw	0
 32034   00BF8A  6FC4               	movwf	sendMessage@data6& (0+255),b
 32035   00BF8C  0E00               	movlw	0
 32036   00BF8E  6FC5               	movwf	sendMessage@data7& (0+255),b
 32037   00BF90  51C6               	movf	sendMessage4@opc& (0+255),w,b
 32038   00BF92  EC55  F054         	call	_sendMessage
 32039   00BF96  0012               	return		;funcret
 32040   00BF98                     __end_of_sendMessage4:
 32041                           	callstack 0
 32042                           
 32043 ;; *************** function _sendMessage *****************
 32044 ;; Defined at:
 32045 ;;		line 1222 in file "../../VLCBlib_PIC/vlcb.c"
 32046 ;; Parameters:    Size  Location     Type
 32047 ;;  opc             1    wreg     enum E12342
 32048 ;;  len             1    0[BANK1 ] unsigned char 
 32049 ;;  data1           1    1[BANK1 ] unsigned char 
 32050 ;;  data2           1    2[BANK1 ] unsigned char 
 32051 ;;  data3           1    3[BANK1 ] unsigned char 
 32052 ;;  data4           1    4[BANK1 ] unsigned char 
 32053 ;;  data5           1    5[BANK1 ] unsigned char 
 32054 ;;  data6           1    6[BANK1 ] unsigned char 
 32055 ;;  data7           1    7[BANK1 ] unsigned char 
 32056 ;; Auto vars:     Size  Location     Type
 32057 ;;  opc             1   69[BANK0 ] enum E12342
 32058 ;; Return value:  Size  Location     Type
 32059 ;;                  1    wreg      void 
 32060 ;; Registers used:
 32061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32062 ;; Tracked objects:
 32063 ;;		On entry : 0/0
 32064 ;;		On exit  : 0/0
 32065 ;;		Unchanged: 0/0
 32066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32067 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32068 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32069 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32070 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32071 ;;Total ram usage:       11 bytes
 32072 ;; Hardware stack levels used: 1
 32073 ;; Hardware stack levels required when called: 14
 32074 ;; This function calls:
 32075 ;;		_canSendMessage
 32076 ;; This function is called by:
 32077 ;;		_sendMessage2
 32078 ;;		_sendMessage3
 32079 ;;		_sendMessage4
 32080 ;;		_sendMessage5
 32081 ;;		_sendMessage6
 32082 ;;		_sendMessage7
 32083 ;;		_sendMessage0
 32084 ;;		_sendMessage1
 32085 ;; This function uses a non-reentrant model
 32086 ;;
 32087                           
 32088                           	psect	text123
 32089   00A8AA                     __ptext123:
 32090                           	callstack 0
 32091   00A8AA                     _sendMessage:
 32092                           	callstack 12
 32093                           
 32094                           ;incstack = 0
 32095                           ;sendMessage@opc stored from wreg
 32096   00A8AA  0100               	movlb	0	; () banked
 32097   00A8AC  6FA5               	movwf	sendMessage@opc& (0+255),b
 32098                           
 32099                           ;../../VLCBlib_PIC/vlcb.c: 1223:     tmpMessage.opc = opc;
 32100   00A8AE  C0A5  F1AB         	movff	sendMessage@opc,_tmpMessage+1
 32101                           
 32102                           ;../../VLCBlib_PIC/vlcb.c: 1224:     tmpMessage.len = len;
 32103   00A8B2  C1BE  F1AA         	movff	sendMessage@len,_tmpMessage
 32104                           
 32105                           ;../../VLCBlib_PIC/vlcb.c: 1225:     tmpMessage.bytes[0] = data1;
 32106   00A8B6  C1BF  F1AC         	movff	sendMessage@data1,_tmpMessage+2
 32107                           
 32108                           ;../../VLCBlib_PIC/vlcb.c: 1226:     tmpMessage.bytes[1] = data2;
 32109   00A8BA  C1C0  F1AD         	movff	sendMessage@data2,_tmpMessage+3
 32110                           
 32111                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.bytes[2] = data3;
 32112   00A8BE  C1C1  F1AE         	movff	sendMessage@data3,_tmpMessage+4
 32113                           
 32114                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.bytes[3] = data4;
 32115   00A8C2  C1C2  F1AF         	movff	sendMessage@data4,_tmpMessage+5
 32116                           
 32117                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[4] = data5;
 32118   00A8C6  C1C3  F1B0         	movff	sendMessage@data5,_tmpMessage+6
 32119                           
 32120                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[5] = data6;
 32121   00A8CA  C1C4  F1B1         	movff	sendMessage@data6,_tmpMessage+7
 32122                           
 32123                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[6] = data7;
 32124   00A8CE  C1C5  F1B2         	movff	sendMessage@data7,_tmpMessage+8
 32125                           
 32126                           ;../../VLCBlib_PIC/vlcb.c: 1232:     if (transport != ((void*)0)) {
 32127   00A8D2  0101               	movlb	1	; () banked
 32128   00A8D4  517A               	movf	_transport& (0+255),w,b
 32129   00A8D6  117B               	iorwf	(_transport+1)& (0+255),w,b
 32130   00A8D8  B4D8               	btfsc	status,2,c
 32131   00A8DA  0012               	return	
 32132                           
 32133                           ; BSR set to: 1
 32134                           ;../../VLCBlib_PIC/vlcb.c: 1233:         if (transport->sendMessage != ((void*)0)) {
 32135   00A8DC  C17A  FFF6         	movff	_transport,tblptrl
 32136   00A8E0  C17B  FFF7         	movff	_transport+1,tblptrh
 32137   00A8E4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32138   00A8E4  6AF8               	clrf	tblptru,c
 32139   00A8E6                     	endif
 32140   00A8E6                     	if	0	;tblptru may be non-zero
 32141   00A8E6                     	endif
 32142   00A8E6  0009               	tblrd		*+
 32143   00A8E8  50F5               	movf	tablat,w,c
 32144   00A8EA  0009               	tblrd		*+
 32145   00A8EC  10F5               	iorwf	tablat,w,c
 32146   00A8EE  B4D8               	btfsc	status,2,c
 32147   00A8F0  0012               	return	
 32148                           
 32149                           ; BSR set to: 1
 32150                           ;../../VLCBlib_PIC/vlcb.c: 1234:             transport->sendMessage(&tmpMessage);
 32151   00A8F2  0EAA               	movlw	low _tmpMessage
 32152   00A8F4  0100               	movlb	0	; () banked
 32153   00A8F6  6F9A               	movwf	canSendMessage@mp& (0+255),b
 32154   00A8F8  0E01               	movlw	high _tmpMessage
 32155   00A8FA  6F9B               	movwf	(canSendMessage@mp+1)& (0+255),b
 32156   00A8FC  C17A  FFF6         	movff	_transport,tblptrl
 32157   00A900  C17B  FFF7         	movff	_transport+1,tblptrh
 32158   00A904                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32159   00A904  6AF8               	clrf	tblptru,c
 32160   00A906                     	endif
 32161   00A906                     	if	0	;tblptru may be non-zero
 32162   00A906                     	endif
 32163   00A906  0009               	tblrd		*+
 32164   00A908  CFF5 F0A3          	movff	tablat,??_sendMessage
 32165   00A90C  0009               	tblrd		*+
 32166   00A90E  CFF5 F0A4          	movff	tablat,??_sendMessage+1
 32167   00A912  D801               	call	u18828
 32168   00A914  0012               	return	
 32169   00A916                     u18828:
 32170   00A916  0005               	push	
 32171   00A918  6EFA               	movwf	pclath,c
 32172   00A91A  51A3               	movf	??_sendMessage& (0+255),w,b
 32173   00A91C  6EFD               	movwf	tosl,c
 32174   00A91E  51A4               	movf	(??_sendMessage+1)& (0+255),w,b
 32175   00A920  6EFE               	movwf	tosh,c
 32176   00A922  6AFF               	clrf	tosu,c
 32177   00A924  50FA               	movf	pclath,w,c
 32178   00A926  0012               	return		;indir
 32179   00A928                     __end_of_sendMessage:
 32180                           	callstack 0
 32181                           
 32182 ;; *************** function _canSendMessage *****************
 32183 ;; Defined at:
 32184 ;;		line 445 in file "../../VLCBlib_PIC/can18_ecan.c"
 32185 ;; Parameters:    Size  Location     Type
 32186 ;;  mp              2   58[BANK0 ] PTR struct Message
 32187 ;;		 -> tmpMessage(9), 
 32188 ;; Auto vars:     Size  Location     Type
 32189 ;;  m               2   65[BANK0 ] PTR struct Message
 32190 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 32191 ;; Return value:  Size  Location     Type
 32192 ;;                  1    wreg      enum E13014
 32193 ;; Registers used:
 32194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32195 ;; Tracked objects:
 32196 ;;		On entry : 0/0
 32197 ;;		On exit  : 0/0
 32198 ;;		Unchanged: 0/0
 32199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32201 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32202 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32203 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32204 ;;Total ram usage:        9 bytes
 32205 ;; Hardware stack levels used: 1
 32206 ;; Hardware stack levels required when called: 13
 32207 ;; This function calls:
 32208 ;;		_getNextWriteMessage
 32209 ;;		_have
 32210 ;;		_isEvent
 32211 ;;		_push
 32212 ;;		_quantity
 32213 ;;		_updateModuleErrorStatus
 32214 ;; This function is called by:
 32215 ;;		_sendMessage
 32216 ;; This function uses a non-reentrant model
 32217 ;;
 32218                           
 32219                           	psect	text124
 32220   004DFC                     __ptext124:
 32221                           	callstack 0
 32222   004DFC                     _canSendMessage:
 32223                           	callstack 12
 32224                           
 32225                           ;../../VLCBlib_PIC/can18_ecan.c: 447:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          50:     PIE5bits.TXBnIE = 0;
 32226                           
 32227                           ;incstack = 0
 32228   004DFC  9876               	bcf	118,4,c	;volatile
 32229                           
 32230                           ;../../VLCBlib_PIC/can18_ecan.c: 451:     if (quantity(&txQueue) == 0) {
 32231   004DFE  0EB3               	movlw	low _txQueue
 32232   004E00  0100               	movlb	0	; () banked
 32233   004E02  6F8D               	movwf	quantity@q& (0+255),b
 32234   004E04  0E01               	movlw	high _txQueue
 32235   004E06  6F8E               	movwf	(quantity@q+1)& (0+255),b
 32236   004E08  EC41  F05D         	call	_quantity	;wreg free
 32237   004E0C  0900               	iorlw	0
 32238   004E0E  A4D8               	btfss	status,2,c
 32239   004E10  D150               	goto	l18682
 32240                           
 32241                           ;../../VLCBlib_PIC/can18_ecan.c: 453:         if (TXB0CONbits.TXREQ == 0) {
 32242   004E12  010F               	movlb	15	; () banked
 32243   004E14  B720               	btfsc	32,3,b	;volatile
 32244   004E16  D14D               	goto	l18682
 32245                           
 32246                           ; BSR set to: 15
 32247                           ;../../VLCBlib_PIC/can18_ecan.c: 455:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 32248   004E18  0100               	movlb	0	; () banked
 32249   004E1A  51B8               	movf	_canId& (0+255),w,b
 32250   004E1C  A4D8               	btfss	status,2,c
 32251   004E1E  D007               	goto	l18618
 32252                           
 32253                           ; BSR set to: 0
 32254   004E20  51B6               	movf	_enumerationState& (0+255),w,b
 32255   004E22  A4D8               	btfss	status,2,c
 32256   004E24  D004               	goto	l18618
 32257                           
 32258                           ; BSR set to: 0
 32259                           ;../../VLCBlib_PIC/can18_ecan.c: 456:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 32260   004E26  0E01               	movlw	1
 32261   004E28  6FB6               	movwf	_enumerationState& (0+255),b
 32262                           
 32263                           ;../../VLCBlib_PIC/can18_ecan.c: 457:                 canId = 1;
 32264   004E2A  0E01               	movlw	1
 32265   004E2C  6FB8               	movwf	_canId& (0+255),b
 32266   004E2E                     l18618:
 32267                           
 32268                           ; BSR set to: 0
 32269                           ;../../VLCBlib_PIC/can18_ecan.c: 459:             PIE5bits.TXBnIE = 1;
 32270   004E2E  8876               	bsf	118,4,c	;volatile
 32271                           
 32272                           ; BSR set to: 0
 32273                           ;../../VLCBlib_PIC/can18_ecan.c: 461:             if (mp->len >8) mp->len = 8;
 32274   004E30  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 32275   004E34  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32276   004E38  0E08               	movlw	8
 32277   004E3A  64DF               	cpfsgt	indf2,c
 32278   004E3C  D006               	goto	l18624
 32279                           
 32280                           ; BSR set to: 0
 32281   004E3E  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 32282   004E42  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32283   004E46  0E08               	movlw	8
 32284   004E48  6EDF               	movwf	indf2,c
 32285   004E4A                     l18624:
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;../../VLCBlib_PIC/can18_ecan.c: 463:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 32289   004E4A  EE20 F001          	lfsr	2,1
 32290   004E4E  519A               	movf	canSendMessage@mp& (0+255),w,b
 32291   004E50  26D9               	addwf	fsr2l,f,c
 32292   004E52  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32293   004E54  22DA               	addwfc	fsr2h,f,c
 32294   004E56  50DF               	movf	indf2,w,c
 32295   004E58  6F9C               	movwf	??_canSendMessage& (0+255),b
 32296   004E5A  6B9D               	clrf	(??_canSendMessage+1)& (0+255),b
 32297   004E5C  0E35               	movlw	low _priorities
 32298   004E5E  259C               	addwf	??_canSendMessage& (0+255),w,b
 32299   004E60  6EF6               	movwf	tblptrl,c
 32300   004E62  0EED               	movlw	high _priorities
 32301   004E64  219D               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 32302   004E66  6EF7               	movwf	tblptrh,c
 32303   004E68                     	if	1	;There are 3 active tblptr bytes
 32304   004E68  6AF8               	clrf	tblptru,c
 32305   004E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 32306   004E6C  22F8               	addwfc	tblptru,f,c
 32307   004E6E                     	endif
 32308   004E6E  0008               	tblrd		*
 32309   004E70  50F5               	movf	tablat,w,c
 32310   004E72  6F9E               	movwf	(??_canSendMessage+2)& (0+255),b
 32311   004E74  6B9F               	clrf	(??_canSendMessage+3)& (0+255),b
 32312   004E76  0E87               	movlw	low _canPri
 32313   004E78  259E               	addwf	(??_canSendMessage+2)& (0+255),w,b
 32314   004E7A  6EF6               	movwf	tblptrl,c
 32315   004E7C  0EEE               	movlw	high _canPri
 32316   004E7E  219F               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 32317   004E80  6EF7               	movwf	tblptrh,c
 32318   004E82                     	if	1	;There are 3 active tblptr bytes
 32319   004E82  6AF8               	clrf	tblptru,c
 32320   004E84  0E00               	movlw	low (__mediumconst shr (0+16))
 32321   004E86  22F8               	addwfc	tblptru,f,c
 32322   004E88                     	endif
 32323   004E88  0008               	tblrd		*
 32324   004E8A  CFF5 F0A0          	movff	tablat,??_canSendMessage+4
 32325   004E8E  39B8               	swapf	_canId& (0+255),w,b
 32326   004E90  46E8               	rlncf	wreg,f,c
 32327   004E92  0B1F               	andlw	31
 32328   004E94  0B0F               	andlw	15
 32329   004E96  11A0               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 32330   004E98  010F               	movlb	15	; () banked
 32331   004E9A  6F21               	movwf	33,b	;volatile
 32332                           
 32333                           ; BSR set to: 15
 32334                           ;../../VLCBlib_PIC/can18_ecan.c: 464:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 32335   004E9C  C0B8  F09C         	movff	_canId,??_canSendMessage
 32336   004EA0  0E07               	movlw	7
 32337   004EA2  0100               	movlb	0	; () banked
 32338   004EA4  179C               	andwf	??_canSendMessage& (0+255),f,b
 32339   004EA6  0E05               	movlw	5
 32340   004EA8  6F9D               	movwf	(??_canSendMessage+1)& (0+255),b
 32341   004EAA                     u18495:
 32342   004EAA  90D8               	bcf	status,0,c
 32343   004EAC  379C               	rlcf	??_canSendMessage& (0+255),f,b
 32344   004EAE  2F9D               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 32345   004EB0  D7FC               	goto	u18495
 32346   004EB2  519C               	movf	??_canSendMessage& (0+255),w,b
 32347   004EB4  010F               	movlb	15	; () banked
 32348   004EB6  6F22               	movwf	34,b	;volatile
 32349                           
 32350                           ; BSR set to: 15
 32351                           ;../../VLCBlib_PIC/can18_ecan.c: 465:             TXB0D0 = mp->opc;
 32352   004EB8  0100               	movlb	0	; () banked
 32353   004EBA  EE20 F001          	lfsr	2,1
 32354   004EBE  519A               	movf	canSendMessage@mp& (0+255),w,b
 32355   004EC0  26D9               	addwf	fsr2l,f,c
 32356   004EC2  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32357   004EC4  22DA               	addwfc	fsr2h,f,c
 32358   004EC6  50DF               	movf	indf2,w,c
 32359   004EC8  010F               	movlb	15	; () banked
 32360   004ECA  6F26               	movwf	38,b	;volatile
 32361                           
 32362                           ; BSR set to: 15
 32363                           ;../../VLCBlib_PIC/can18_ecan.c: 466:             TXB0D1 = mp->bytes[0];
 32364   004ECC  0100               	movlb	0	; () banked
 32365   004ECE  EE20 F002          	lfsr	2,2
 32366   004ED2  519A               	movf	canSendMessage@mp& (0+255),w,b
 32367   004ED4  26D9               	addwf	fsr2l,f,c
 32368   004ED6  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32369   004ED8  22DA               	addwfc	fsr2h,f,c
 32370   004EDA  50DF               	movf	indf2,w,c
 32371   004EDC  010F               	movlb	15	; () banked
 32372   004EDE  6F27               	movwf	39,b	;volatile
 32373                           
 32374                           ; BSR set to: 15
 32375                           ;../../VLCBlib_PIC/can18_ecan.c: 467:             TXB0D2 = mp->bytes[1];
 32376   004EE0  0100               	movlb	0	; () banked
 32377   004EE2  EE20 F003          	lfsr	2,3
 32378   004EE6  519A               	movf	canSendMessage@mp& (0+255),w,b
 32379   004EE8  26D9               	addwf	fsr2l,f,c
 32380   004EEA  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32381   004EEC  22DA               	addwfc	fsr2h,f,c
 32382   004EEE  50DF               	movf	indf2,w,c
 32383   004EF0  010F               	movlb	15	; () banked
 32384   004EF2  6F28               	movwf	40,b	;volatile
 32385                           
 32386                           ; BSR set to: 15
 32387                           ;../../VLCBlib_PIC/can18_ecan.c: 468:             TXB0D3 = mp->bytes[2];
 32388   004EF4  0100               	movlb	0	; () banked
 32389   004EF6  EE20 F004          	lfsr	2,4
 32390   004EFA  519A               	movf	canSendMessage@mp& (0+255),w,b
 32391   004EFC  26D9               	addwf	fsr2l,f,c
 32392   004EFE  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32393   004F00  22DA               	addwfc	fsr2h,f,c
 32394   004F02  50DF               	movf	indf2,w,c
 32395   004F04  010F               	movlb	15	; () banked
 32396   004F06  6F29               	movwf	41,b	;volatile
 32397                           
 32398                           ; BSR set to: 15
 32399                           ;../../VLCBlib_PIC/can18_ecan.c: 469:             TXB0D4 = mp->bytes[3];
 32400   004F08  0100               	movlb	0	; () banked
 32401   004F0A  EE20 F005          	lfsr	2,5
 32402   004F0E  519A               	movf	canSendMessage@mp& (0+255),w,b
 32403   004F10  26D9               	addwf	fsr2l,f,c
 32404   004F12  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32405   004F14  22DA               	addwfc	fsr2h,f,c
 32406   004F16  50DF               	movf	indf2,w,c
 32407   004F18  010F               	movlb	15	; () banked
 32408   004F1A  6F2A               	movwf	42,b	;volatile
 32409                           
 32410                           ; BSR set to: 15
 32411                           ;../../VLCBlib_PIC/can18_ecan.c: 470:             TXB0D5 = mp->bytes[4];
 32412   004F1C  0100               	movlb	0	; () banked
 32413   004F1E  EE20 F006          	lfsr	2,6
 32414   004F22  519A               	movf	canSendMessage@mp& (0+255),w,b
 32415   004F24  26D9               	addwf	fsr2l,f,c
 32416   004F26  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32417   004F28  22DA               	addwfc	fsr2h,f,c
 32418   004F2A  50DF               	movf	indf2,w,c
 32419   004F2C  010F               	movlb	15	; () banked
 32420   004F2E  6F2B               	movwf	43,b	;volatile
 32421                           
 32422                           ; BSR set to: 15
 32423                           ;../../VLCBlib_PIC/can18_ecan.c: 471:             TXB0D6 = mp->bytes[5];
 32424   004F30  0100               	movlb	0	; () banked
 32425   004F32  EE20 F007          	lfsr	2,7
 32426   004F36  519A               	movf	canSendMessage@mp& (0+255),w,b
 32427   004F38  26D9               	addwf	fsr2l,f,c
 32428   004F3A  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32429   004F3C  22DA               	addwfc	fsr2h,f,c
 32430   004F3E  50DF               	movf	indf2,w,c
 32431   004F40  010F               	movlb	15	; () banked
 32432   004F42  6F2C               	movwf	44,b	;volatile
 32433                           
 32434                           ; BSR set to: 15
 32435                           ;../../VLCBlib_PIC/can18_ecan.c: 472:             TXB0D7 = mp->bytes[6];
 32436   004F44  0100               	movlb	0	; () banked
 32437   004F46  EE20 F008          	lfsr	2,8
 32438   004F4A  519A               	movf	canSendMessage@mp& (0+255),w,b
 32439   004F4C  26D9               	addwf	fsr2l,f,c
 32440   004F4E  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32441   004F50  22DA               	addwfc	fsr2h,f,c
 32442   004F52  50DF               	movf	indf2,w,c
 32443   004F54  010F               	movlb	15	; () banked
 32444   004F56  6F2D               	movwf	45,b	;volatile
 32445                           
 32446                           ; BSR set to: 15
 32447                           ;../../VLCBlib_PIC/can18_ecan.c: 473:             TXB0DLC = mp->len & 0x0F;
 32448   004F58  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 32449   004F5C  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32450   004F60  50DF               	movf	indf2,w,c
 32451   004F62  0B0F               	andlw	15
 32452   004F64  6F25               	movwf	37,b	;volatile
 32453                           
 32454                           ; BSR set to: 15
 32455                           ;../../VLCBlib_PIC/can18_ecan.c: 475:             TXB0CONbits.TXREQ = 1;
 32456   004F66  8720               	bsf	32,3,b	;volatile
 32457                           
 32458                           ; BSR set to: 15
 32459                           ;../../VLCBlib_PIC/can18_ecan.c: 476:             canDiagnostics[0x05].asUint++;
 32460   004F68  0101               	movlb	1	; () banked
 32461   004F6A  4B88               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 32462   004F6C  2B89               	incf	(_canDiagnostics+11)& (0+255),f,b
 32463                           
 32464                           ; BSR set to: 1
 32465                           ;../../VLCBlib_PIC/can18_ecan.c: 480:             if (isEvent(mp->opc)) {
 32466   004F6E  0100               	movlb	0	; () banked
 32467   004F70  EE20 F001          	lfsr	2,1
 32468   004F74  519A               	movf	canSendMessage@mp& (0+255),w,b
 32469   004F76  26D9               	addwf	fsr2l,f,c
 32470   004F78  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32471   004F7A  22DA               	addwfc	fsr2h,f,c
 32472   004F7C  50DF               	movf	indf2,w,c
 32473   004F7E  EC38  F060         	call	_isEvent
 32474   004F82  0900               	iorlw	0
 32475   004F84  B4D8               	btfsc	status,2,c
 32476   004F86  0012               	return	
 32477                           
 32478                           ;../../VLCBlib_PIC/can18_ecan.c: 481:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 32479   004F88  0E08               	movlw	8
 32480   004F8A  EC38  F056         	call	_have
 32481   004F8E  0900               	iorlw	0
 32482   004F90  B4D8               	btfsc	status,2,c
 32483   004F92  0012               	return	
 32484                           
 32485                           ;../../VLCBlib_PIC/can18_ecan.c: 483:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 32486   004F94  0E26               	movlw	low _rxQueue
 32487   004F96  0100               	movlb	0	; () banked
 32488   004F98  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 32489   004F9A  EC09  F045         	call	_getNextWriteMessage	;wreg free
 32490   004F9E  C08D  F0A1         	movff	?_getNextWriteMessage,canSendMessage@m
 32491   004FA2  C08E  F0A2         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 32492                           
 32493                           ;../../VLCBlib_PIC/can18_ecan.c: 484:                     if (m == ((void*)0)) {
 32494   004FA6  0100               	movlb	0	; () banked
 32495   004FA8  51A1               	movf	canSendMessage@m& (0+255),w,b
 32496   004FAA  11A2               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 32497   004FAC  A4D8               	btfss	status,2,c
 32498   004FAE  D006               	goto	l18662
 32499                           
 32500                           ; BSR set to: 0
 32501                           ;../../VLCBlib_PIC/can18_ecan.c: 485:                         canDiagnostics[0x07].asUin
      +                          t++;
 32502   004FB0  0101               	movlb	1	; () banked
 32503   004FB2  4B8C               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 32504   004FB4  2B8D               	incf	(_canDiagnostics+15)& (0+255),f,b
 32505                           
 32506                           ; BSR set to: 1
 32507                           ;../../VLCBlib_PIC/can18_ecan.c: 486:                         updateModuleErrorStatus();
 32508   004FB6  ECD2  F061         	call	_updateModuleErrorStatus	;wreg free
 32509                           
 32510                           ;../../VLCBlib_PIC/can18_ecan.c: 487:                     } else {
 32511   004FBA  0012               	return	
 32512   004FBC                     l18662:
 32513                           
 32514                           ; BSR set to: 0
 32515                           ;../../VLCBlib_PIC/can18_ecan.c: 489:                         m->opc = mp->opc;
 32516   004FBC  EE20 F001          	lfsr	2,1
 32517   004FC0  519A               	movf	canSendMessage@mp& (0+255),w,b
 32518   004FC2  26D9               	addwf	fsr2l,f,c
 32519   004FC4  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32520   004FC6  22DA               	addwfc	fsr2h,f,c
 32521   004FC8  EE10 F001          	lfsr	1,1
 32522   004FCC  51A1               	movf	canSendMessage@m& (0+255),w,b
 32523   004FCE  26E1               	addwf	fsr1l,f,c
 32524   004FD0  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 32525   004FD2  22E2               	addwfc	fsr1h,f,c
 32526   004FD4  CFDF FFE7          	movff	indf2,indf1
 32527                           
 32528                           ; BSR set to: 0
 32529                           ;../../VLCBlib_PIC/can18_ecan.c: 490:                         m->len = mp->len;
 32530   004FD8  C09A  FFD9         	movff	canSendMessage@mp,fsr2l
 32531   004FDC  C09B  FFDA         	movff	canSendMessage@mp+1,fsr2h
 32532   004FE0  C0A1  FFE1         	movff	canSendMessage@m,fsr1l
 32533   004FE4  C0A2  FFE2         	movff	canSendMessage@m+1,fsr1h
 32534   004FE8  CFDF FFE7          	movff	indf2,indf1
 32535                           
 32536                           ; BSR set to: 0
 32537                           ;../../VLCBlib_PIC/can18_ecan.c: 491:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 32538   004FEC  EE20 F002          	lfsr	2,2
 32539   004FF0  519A               	movf	canSendMessage@mp& (0+255),w,b
 32540   004FF2  26D9               	addwf	fsr2l,f,c
 32541   004FF4  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32542   004FF6  22DA               	addwfc	fsr2h,f,c
 32543   004FF8  EE10 F002          	lfsr	1,2
 32544   004FFC  51A1               	movf	canSendMessage@m& (0+255),w,b
 32545   004FFE  26E1               	addwf	fsr1l,f,c
 32546   005000  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 32547   005002  22E2               	addwfc	fsr1h,f,c
 32548   005004  CFDF FFE7          	movff	indf2,indf1
 32549                           
 32550                           ; BSR set to: 0
 32551                           ;../../VLCBlib_PIC/can18_ecan.c: 492:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 32552   005008  EE20 F003          	lfsr	2,3
 32553   00500C  519A               	movf	canSendMessage@mp& (0+255),w,b
 32554   00500E  26D9               	addwf	fsr2l,f,c
 32555   005010  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32556   005012  22DA               	addwfc	fsr2h,f,c
 32557   005014  EE10 F003          	lfsr	1,3
 32558   005018  51A1               	movf	canSendMessage@m& (0+255),w,b
 32559   00501A  26E1               	addwf	fsr1l,f,c
 32560   00501C  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 32561   00501E  22E2               	addwfc	fsr1h,f,c
 32562   005020  CFDF FFE7          	movff	indf2,indf1
 32563                           
 32564                           ; BSR set to: 0
 32565                           ;../../VLCBlib_PIC/can18_ecan.c: 493:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 32566   005024  EE20 F004          	lfsr	2,4
 32567   005028  519A               	movf	canSendMessage@mp& (0+255),w,b
 32568   00502A  26D9               	addwf	fsr2l,f,c
 32569   00502C  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32570   00502E  22DA               	addwfc	fsr2h,f,c
 32571   005030  EE10 F004          	lfsr	1,4
 32572   005034  51A1               	movf	canSendMessage@m& (0+255),w,b
 32573   005036  26E1               	addwf	fsr1l,f,c
 32574   005038  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 32575   00503A  22E2               	addwfc	fsr1h,f,c
 32576   00503C  CFDF FFE7          	movff	indf2,indf1
 32577                           
 32578                           ; BSR set to: 0
 32579                           ;../../VLCBlib_PIC/can18_ecan.c: 494:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 32580   005040  EE20 F005          	lfsr	2,5
 32581   005044  519A               	movf	canSendMessage@mp& (0+255),w,b
 32582   005046  26D9               	addwf	fsr2l,f,c
 32583   005048  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32584   00504A  22DA               	addwfc	fsr2h,f,c
 32585   00504C  EE10 F005          	lfsr	1,5
 32586   005050  51A1               	movf	canSendMessage@m& (0+255),w,b
 32587   005052  26E1               	addwf	fsr1l,f,c
 32588   005054  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 32589   005056  22E2               	addwfc	fsr1h,f,c
 32590   005058  CFDF FFE7          	movff	indf2,indf1
 32591                           
 32592                           ; BSR set to: 0
 32593                           ;../../VLCBlib_PIC/can18_ecan.c: 495:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 32594   00505C  EE20 F006          	lfsr	2,6
 32595   005060  519A               	movf	canSendMessage@mp& (0+255),w,b
 32596   005062  26D9               	addwf	fsr2l,f,c
 32597   005064  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32598   005066  22DA               	addwfc	fsr2h,f,c
 32599   005068  EE10 F006          	lfsr	1,6
 32600   00506C  51A1               	movf	canSendMessage@m& (0+255),w,b
 32601   00506E  26E1               	addwf	fsr1l,f,c
 32602   005070  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 32603   005072  22E2               	addwfc	fsr1h,f,c
 32604   005074  CFDF FFE7          	movff	indf2,indf1
 32605                           
 32606                           ; BSR set to: 0
 32607                           ;../../VLCBlib_PIC/can18_ecan.c: 496:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 32608   005078  EE20 F007          	lfsr	2,7
 32609   00507C  519A               	movf	canSendMessage@mp& (0+255),w,b
 32610   00507E  26D9               	addwf	fsr2l,f,c
 32611   005080  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32612   005082  22DA               	addwfc	fsr2h,f,c
 32613   005084  EE10 F007          	lfsr	1,7
 32614   005088  51A1               	movf	canSendMessage@m& (0+255),w,b
 32615   00508A  26E1               	addwf	fsr1l,f,c
 32616   00508C  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 32617   00508E  22E2               	addwfc	fsr1h,f,c
 32618   005090  CFDF FFE7          	movff	indf2,indf1
 32619                           
 32620                           ; BSR set to: 0
 32621                           ;../../VLCBlib_PIC/can18_ecan.c: 497:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 32622   005094  EE20 F008          	lfsr	2,8
 32623   005098  519A               	movf	canSendMessage@mp& (0+255),w,b
 32624   00509A  26D9               	addwf	fsr2l,f,c
 32625   00509C  519B               	movf	(canSendMessage@mp+1)& (0+255),w,b
 32626   00509E  22DA               	addwfc	fsr2h,f,c
 32627   0050A0  EE10 F008          	lfsr	1,8
 32628   0050A4  51A1               	movf	canSendMessage@m& (0+255),w,b
 32629   0050A6  26E1               	addwf	fsr1l,f,c
 32630   0050A8  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 32631   0050AA  22E2               	addwfc	fsr1h,f,c
 32632   0050AC  CFDF FFE7          	movff	indf2,indf1
 32633   0050B0  0012               	return	
 32634   0050B2                     l18682:
 32635                           
 32636                           ;../../VLCBlib_PIC/can18_ecan.c: 506:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 32637   0050B2  0EB3               	movlw	low _txQueue
 32638   0050B4  0100               	movlb	0	; () banked
 32639   0050B6  6F8D               	movwf	push@q& (0+255),b
 32640   0050B8  0E01               	movlw	high _txQueue
 32641   0050BA  6F8E               	movwf	(push@q+1)& (0+255),b
 32642   0050BC  C09A  F08F         	movff	canSendMessage@mp,push@m
 32643   0050C0  C09B  F090         	movff	canSendMessage@mp+1,push@m+1
 32644   0050C4  ECD6  F01E         	call	_push	;wreg free
 32645   0050C8  0900               	iorlw	0
 32646   0050CA  A4D8               	btfss	status,2,c
 32647   0050CC  D007               	goto	l2895
 32648                           
 32649                           ;../../VLCBlib_PIC/can18_ecan.c: 507:         canDiagnostics[0x04].asUint++;
 32650   0050CE  0101               	movlb	1	; () banked
 32651   0050D0  4B86               	infsnz	(_canDiagnostics+8)& (0+255),f,b
 32652   0050D2  2B87               	incf	(_canDiagnostics+9)& (0+255),f,b
 32653                           
 32654                           ; BSR set to: 1
 32655                           ;../../VLCBlib_PIC/can18_ecan.c: 508:         updateModuleErrorStatus();
 32656   0050D4  ECD2  F061         	call	_updateModuleErrorStatus	;wreg free
 32657                           
 32658                           ;../../VLCBlib_PIC/can18_ecan.c: 509:         PIE5bits.TXBnIE = 1;
 32659   0050D8  8876               	bsf	118,4,c	;volatile
 32660   0050DA  0012               	return	
 32661   0050DC                     l2895:
 32662                           
 32663                           ;../../VLCBlib_PIC/can18_ecan.c: 512:     PIE5bits.TXBnIE = 1;
 32664   0050DC  8876               	bsf	118,4,c	;volatile
 32665                           
 32666                           ;../../VLCBlib_PIC/can18_ecan.c: 513:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 32667   0050DE  0012               	return		;funcret
 32668   0050E0                     __end_of_canSendMessage:
 32669                           	callstack 0
 32670                           
 32671 ;; *************** function _quantity *****************
 32672 ;; Defined at:
 32673 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 32674 ;; Parameters:    Size  Location     Type
 32675 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 32676 ;;		 -> txQueue(5), 
 32677 ;; Auto vars:     Size  Location     Type
 32678 ;;		None
 32679 ;; Return value:  Size  Location     Type
 32680 ;;                  1    wreg      unsigned char 
 32681 ;; Registers used:
 32682 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 32683 ;; Tracked objects:
 32684 ;;		On entry : 0/0
 32685 ;;		On exit  : 0/0
 32686 ;;		Unchanged: 0/0
 32687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32688 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32690 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32691 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32692 ;;Total ram usage:        6 bytes
 32693 ;; Hardware stack levels used: 1
 32694 ;; Hardware stack levels required when called: 12
 32695 ;; This function calls:
 32696 ;;		Nothing
 32697 ;; This function is called by:
 32698 ;;		_canSendMessage
 32699 ;; This function uses a non-reentrant model
 32700 ;;
 32701                           
 32702                           	psect	text125
 32703   00BA82                     __ptext125:
 32704                           	callstack 0
 32705   00BA82                     _quantity:
 32706                           	callstack 12
 32707                           
 32708                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 32709                           
 32710                           ;incstack = 0
 32711   00BA82  0100               	movlb	0	; () banked
 32712   00BA84  EE20 F002          	lfsr	2,2
 32713   00BA88  518D               	movf	quantity@q& (0+255),w,b
 32714   00BA8A  26D9               	addwf	fsr2l,f,c
 32715   00BA8C  518E               	movf	(quantity@q+1)& (0+255),w,b
 32716   00BA8E  22DA               	addwfc	fsr2h,f,c
 32717   00BA90  50DF               	movf	indf2,w,c
 32718   00BA92  6F8F               	movwf	??_quantity& (0+255),b
 32719   00BA94  EE20 F003          	lfsr	2,3
 32720   00BA98  518D               	movf	quantity@q& (0+255),w,b
 32721   00BA9A  26D9               	addwf	fsr2l,f,c
 32722   00BA9C  518E               	movf	(quantity@q+1)& (0+255),w,b
 32723   00BA9E  22DA               	addwfc	fsr2h,f,c
 32724   00BAA0  50DF               	movf	indf2,w,c
 32725   00BAA2  6F90               	movwf	(??_quantity+1)& (0+255),b
 32726   00BAA4  518F               	movf	??_quantity& (0+255),w,b
 32727   00BAA6  5D90               	subwf	(??_quantity+1)& (0+255),w,b
 32728   00BAA8  6F91               	movwf	(??_quantity+2)& (0+255),b
 32729   00BAAA  EE20 F004          	lfsr	2,4
 32730   00BAAE  518D               	movf	quantity@q& (0+255),w,b
 32731   00BAB0  26D9               	addwf	fsr2l,f,c
 32732   00BAB2  518E               	movf	(quantity@q+1)& (0+255),w,b
 32733   00BAB4  22DA               	addwfc	fsr2h,f,c
 32734   00BAB6  50DF               	movf	indf2,w,c
 32735   00BAB8  6F92               	movwf	(??_quantity+3)& (0+255),b
 32736   00BABA  0592               	decf	(??_quantity+3)& (0+255),w,b
 32737   00BABC  1591               	andwf	(??_quantity+2)& (0+255),w,b
 32738                           
 32739                           ; BSR set to: 0
 32740   00BABE  0012               	return		;funcret
 32741   00BAC0                     __end_of_quantity:
 32742                           	callstack 0
 32743                           
 32744 ;; *************** function _push *****************
 32745 ;; Defined at:
 32746 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 32747 ;; Parameters:    Size  Location     Type
 32748 ;;  q               2   45[BANK0 ] PTR struct MessageQueue
 32749 ;;		 -> txQueue(5), 
 32750 ;;  m               2   47[BANK0 ] PTR struct Message
 32751 ;;		 -> tmpMessage(9), 
 32752 ;; Auto vars:     Size  Location     Type
 32753 ;;		None
 32754 ;; Return value:  Size  Location     Type
 32755 ;;                  1    wreg      enum E12867
 32756 ;; Registers used:
 32757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32758 ;; Tracked objects:
 32759 ;;		On entry : 0/0
 32760 ;;		On exit  : 0/0
 32761 ;;		Unchanged: 0/0
 32762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32765 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32766 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32767 ;;Total ram usage:       13 bytes
 32768 ;; Hardware stack levels used: 1
 32769 ;; Hardware stack levels required when called: 12
 32770 ;; This function calls:
 32771 ;;		Nothing
 32772 ;; This function is called by:
 32773 ;;		_canSendMessage
 32774 ;; This function uses a non-reentrant model
 32775 ;;
 32776                           
 32777                           	psect	text126
 32778   003DAC                     __ptext126:
 32779                           	callstack 0
 32780   003DAC                     _push:
 32781                           	callstack 12
 32782                           
 32783                           ; BSR set to: 0
 32784                           ;incstack = 0
 32785   003DAC  0100               	movlb	0	; () banked
 32786   003DAE  EE20 F002          	lfsr	2,2
 32787   003DB2  518D               	movf	push@q& (0+255),w,b
 32788   003DB4  26D9               	addwf	fsr2l,f,c
 32789   003DB6  518E               	movf	(push@q+1)& (0+255),w,b
 32790   003DB8  22DA               	addwfc	fsr2h,f,c
 32791   003DBA  50DF               	movf	indf2,w,c
 32792   003DBC  6F91               	movwf	??_push& (0+255),b
 32793   003DBE  6B92               	clrf	(??_push+1)& (0+255),b
 32794   003DC0  EE20 F004          	lfsr	2,4
 32795   003DC4  518D               	movf	push@q& (0+255),w,b
 32796   003DC6  26D9               	addwf	fsr2l,f,c
 32797   003DC8  518E               	movf	(push@q+1)& (0+255),w,b
 32798   003DCA  22DA               	addwfc	fsr2h,f,c
 32799   003DCC  50DF               	movf	indf2,w,c
 32800   003DCE  6F93               	movwf	(??_push+2)& (0+255),b
 32801   003DD0  0EFF               	movlw	255
 32802   003DD2  2593               	addwf	(??_push+2)& (0+255),w,b
 32803   003DD4  6F94               	movwf	(??_push+3)& (0+255),b
 32804   003DD6  6B95               	clrf	(??_push+4)& (0+255),b
 32805   003DD8  0EFF               	movlw	255
 32806   003DDA  2395               	addwfc	(??_push+4)& (0+255),f,b
 32807   003DDC  EE20 F003          	lfsr	2,3
 32808   003DE0  518D               	movf	push@q& (0+255),w,b
 32809   003DE2  26D9               	addwf	fsr2l,f,c
 32810   003DE4  518E               	movf	(push@q+1)& (0+255),w,b
 32811   003DE6  22DA               	addwfc	fsr2h,f,c
 32812   003DE8  50DF               	movf	indf2,w,c
 32813   003DEA  6F96               	movwf	(??_push+5)& (0+255),b
 32814   003DEC  6B97               	clrf	(??_push+6)& (0+255),b
 32815   003DEE  0E01               	movlw	1
 32816   003DF0  2796               	addwf	(??_push+5)& (0+255),f,b
 32817   003DF2  0E00               	movlw	0
 32818   003DF4  2397               	addwfc	(??_push+6)& (0+255),f,b
 32819   003DF6  5194               	movf	(??_push+3)& (0+255),w,b
 32820   003DF8  1596               	andwf	(??_push+5)& (0+255),w,b
 32821   003DFA  6F98               	movwf	(??_push+7)& (0+255),b
 32822   003DFC  5195               	movf	(??_push+4)& (0+255),w,b
 32823   003DFE  1597               	andwf	(??_push+6)& (0+255),w,b
 32824   003E00  6F99               	movwf	(??_push+8)& (0+255),b
 32825   003E02  5191               	movf	??_push& (0+255),w,b
 32826   003E04  1998               	xorwf	(??_push+7)& (0+255),w,b
 32827   003E06  E106               	bnz	l18484
 32828   003E08  5192               	movf	(??_push+1)& (0+255),w,b
 32829   003E0A  1999               	xorwf	(??_push+8)& (0+255),w,b
 32830   003E0C  A4D8               	btfss	status,2,c
 32831   003E0E  D002               	goto	l18484
 32832                           
 32833                           ; BSR set to: 0
 32834   003E10  0E00               	movlw	0
 32835   003E12  0012               	return	
 32836   003E14                     l18484:
 32837                           
 32838                           ; BSR set to: 0
 32839   003E14  EE20 F001          	lfsr	2,1
 32840   003E18  518F               	movf	push@m& (0+255),w,b
 32841   003E1A  26D9               	addwf	fsr2l,f,c
 32842   003E1C  5190               	movf	(push@m+1)& (0+255),w,b
 32843   003E1E  22DA               	addwfc	fsr2h,f,c
 32844   003E20  EE10 F003          	lfsr	1,3
 32845   003E24  518D               	movf	push@q& (0+255),w,b
 32846   003E26  26E1               	addwf	fsr1l,f,c
 32847   003E28  518E               	movf	(push@q+1)& (0+255),w,b
 32848   003E2A  22E2               	addwfc	fsr1h,f,c
 32849   003E2C  50E7               	movf	indf1,w,c
 32850   003E2E  6F91               	movwf	??_push& (0+255),b
 32851   003E30  5191               	movf	??_push& (0+255),w,b
 32852   003E32  0D09               	mullw	9
 32853   003E34  CFF3 F092          	movff	prodl,??_push+1
 32854   003E38  CFF4 F093          	movff	prodh,??_push+2
 32855   003E3C  C08D  FFE1         	movff	push@q,fsr1l
 32856   003E40  C08E  FFE2         	movff	push@q+1,fsr1h
 32857   003E44  CFE6 F094          	movff	postinc1,??_push+3
 32858   003E48  CFE5 F095          	movff	postdec1,??_push+4
 32859   003E4C  5192               	movf	(??_push+1)& (0+255),w,b
 32860   003E4E  2594               	addwf	(??_push+3)& (0+255),w,b
 32861   003E50  6F96               	movwf	(??_push+5)& (0+255),b
 32862   003E52  5193               	movf	(??_push+2)& (0+255),w,b
 32863   003E54  2195               	addwfc	(??_push+4)& (0+255),w,b
 32864   003E56  6F97               	movwf	(??_push+6)& (0+255),b
 32865   003E58  0E01               	movlw	1
 32866   003E5A  2596               	addwf	(??_push+5)& (0+255),w,b
 32867   003E5C  6EE1               	movwf	fsr1l,c
 32868   003E5E  0E00               	movlw	0
 32869   003E60  2197               	addwfc	(??_push+6)& (0+255),w,b
 32870   003E62  6EE2               	movwf	fsr1h,c
 32871   003E64  CFDF FFE7          	movff	indf2,indf1
 32872   003E68  EE20 F002          	lfsr	2,2
 32873   003E6C  518F               	movf	push@m& (0+255),w,b
 32874   003E6E  26D9               	addwf	fsr2l,f,c
 32875   003E70  5190               	movf	(push@m+1)& (0+255),w,b
 32876   003E72  22DA               	addwfc	fsr2h,f,c
 32877   003E74  EE10 F003          	lfsr	1,3
 32878   003E78  518D               	movf	push@q& (0+255),w,b
 32879   003E7A  26E1               	addwf	fsr1l,f,c
 32880   003E7C  518E               	movf	(push@q+1)& (0+255),w,b
 32881   003E7E  22E2               	addwfc	fsr1h,f,c
 32882   003E80  50E7               	movf	indf1,w,c
 32883   003E82  6F91               	movwf	??_push& (0+255),b
 32884   003E84  5191               	movf	??_push& (0+255),w,b
 32885   003E86  0D09               	mullw	9
 32886   003E88  CFF3 F092          	movff	prodl,??_push+1
 32887   003E8C  CFF4 F093          	movff	prodh,??_push+2
 32888   003E90  C08D  FFE1         	movff	push@q,fsr1l
 32889   003E94  C08E  FFE2         	movff	push@q+1,fsr1h
 32890   003E98  CFE6 F094          	movff	postinc1,??_push+3
 32891   003E9C  CFE5 F095          	movff	postdec1,??_push+4
 32892   003EA0  5192               	movf	(??_push+1)& (0+255),w,b
 32893   003EA2  2594               	addwf	(??_push+3)& (0+255),w,b
 32894   003EA4  6F96               	movwf	(??_push+5)& (0+255),b
 32895   003EA6  5193               	movf	(??_push+2)& (0+255),w,b
 32896   003EA8  2195               	addwfc	(??_push+4)& (0+255),w,b
 32897   003EAA  6F97               	movwf	(??_push+6)& (0+255),b
 32898   003EAC  0E02               	movlw	2
 32899   003EAE  2596               	addwf	(??_push+5)& (0+255),w,b
 32900   003EB0  6EE1               	movwf	fsr1l,c
 32901   003EB2  0E00               	movlw	0
 32902   003EB4  2197               	addwfc	(??_push+6)& (0+255),w,b
 32903   003EB6  6EE2               	movwf	fsr1h,c
 32904   003EB8  CFDF FFE7          	movff	indf2,indf1
 32905   003EBC  EE20 F003          	lfsr	2,3
 32906   003EC0  518F               	movf	push@m& (0+255),w,b
 32907   003EC2  26D9               	addwf	fsr2l,f,c
 32908   003EC4  5190               	movf	(push@m+1)& (0+255),w,b
 32909   003EC6  22DA               	addwfc	fsr2h,f,c
 32910   003EC8  EE10 F003          	lfsr	1,3
 32911   003ECC  518D               	movf	push@q& (0+255),w,b
 32912   003ECE  26E1               	addwf	fsr1l,f,c
 32913   003ED0  518E               	movf	(push@q+1)& (0+255),w,b
 32914   003ED2  22E2               	addwfc	fsr1h,f,c
 32915   003ED4  50E7               	movf	indf1,w,c
 32916   003ED6  6F91               	movwf	??_push& (0+255),b
 32917   003ED8  5191               	movf	??_push& (0+255),w,b
 32918   003EDA  0D09               	mullw	9
 32919   003EDC  CFF3 F092          	movff	prodl,??_push+1
 32920   003EE0  CFF4 F093          	movff	prodh,??_push+2
 32921   003EE4  C08D  FFE1         	movff	push@q,fsr1l
 32922   003EE8  C08E  FFE2         	movff	push@q+1,fsr1h
 32923   003EEC  CFE6 F094          	movff	postinc1,??_push+3
 32924   003EF0  CFE5 F095          	movff	postdec1,??_push+4
 32925   003EF4  5192               	movf	(??_push+1)& (0+255),w,b
 32926   003EF6  2594               	addwf	(??_push+3)& (0+255),w,b
 32927   003EF8  6F96               	movwf	(??_push+5)& (0+255),b
 32928   003EFA  5193               	movf	(??_push+2)& (0+255),w,b
 32929   003EFC  2195               	addwfc	(??_push+4)& (0+255),w,b
 32930   003EFE  6F97               	movwf	(??_push+6)& (0+255),b
 32931   003F00  0E03               	movlw	3
 32932   003F02  2596               	addwf	(??_push+5)& (0+255),w,b
 32933   003F04  6EE1               	movwf	fsr1l,c
 32934   003F06  0E00               	movlw	0
 32935   003F08  2197               	addwfc	(??_push+6)& (0+255),w,b
 32936   003F0A  6EE2               	movwf	fsr1h,c
 32937   003F0C  CFDF FFE7          	movff	indf2,indf1
 32938   003F10  EE20 F004          	lfsr	2,4
 32939   003F14  518F               	movf	push@m& (0+255),w,b
 32940   003F16  26D9               	addwf	fsr2l,f,c
 32941   003F18  5190               	movf	(push@m+1)& (0+255),w,b
 32942   003F1A  22DA               	addwfc	fsr2h,f,c
 32943   003F1C  EE10 F003          	lfsr	1,3
 32944   003F20  518D               	movf	push@q& (0+255),w,b
 32945   003F22  26E1               	addwf	fsr1l,f,c
 32946   003F24  518E               	movf	(push@q+1)& (0+255),w,b
 32947   003F26  22E2               	addwfc	fsr1h,f,c
 32948   003F28  50E7               	movf	indf1,w,c
 32949   003F2A  6F91               	movwf	??_push& (0+255),b
 32950   003F2C  5191               	movf	??_push& (0+255),w,b
 32951   003F2E  0D09               	mullw	9
 32952   003F30  CFF3 F092          	movff	prodl,??_push+1
 32953   003F34  CFF4 F093          	movff	prodh,??_push+2
 32954   003F38  C08D  FFE1         	movff	push@q,fsr1l
 32955   003F3C  C08E  FFE2         	movff	push@q+1,fsr1h
 32956   003F40  CFE6 F094          	movff	postinc1,??_push+3
 32957   003F44  CFE5 F095          	movff	postdec1,??_push+4
 32958   003F48  5192               	movf	(??_push+1)& (0+255),w,b
 32959   003F4A  2594               	addwf	(??_push+3)& (0+255),w,b
 32960   003F4C  6F96               	movwf	(??_push+5)& (0+255),b
 32961   003F4E  5193               	movf	(??_push+2)& (0+255),w,b
 32962   003F50  2195               	addwfc	(??_push+4)& (0+255),w,b
 32963   003F52  6F97               	movwf	(??_push+6)& (0+255),b
 32964   003F54  0E04               	movlw	4
 32965   003F56  2596               	addwf	(??_push+5)& (0+255),w,b
 32966   003F58  6EE1               	movwf	fsr1l,c
 32967   003F5A  0E00               	movlw	0
 32968   003F5C  2197               	addwfc	(??_push+6)& (0+255),w,b
 32969   003F5E  6EE2               	movwf	fsr1h,c
 32970   003F60  CFDF FFE7          	movff	indf2,indf1
 32971   003F64  EE20 F005          	lfsr	2,5
 32972   003F68  518F               	movf	push@m& (0+255),w,b
 32973   003F6A  26D9               	addwf	fsr2l,f,c
 32974   003F6C  5190               	movf	(push@m+1)& (0+255),w,b
 32975   003F6E  22DA               	addwfc	fsr2h,f,c
 32976   003F70  EE10 F003          	lfsr	1,3
 32977   003F74  518D               	movf	push@q& (0+255),w,b
 32978   003F76  26E1               	addwf	fsr1l,f,c
 32979   003F78  518E               	movf	(push@q+1)& (0+255),w,b
 32980   003F7A  22E2               	addwfc	fsr1h,f,c
 32981   003F7C  50E7               	movf	indf1,w,c
 32982   003F7E  6F91               	movwf	??_push& (0+255),b
 32983   003F80  5191               	movf	??_push& (0+255),w,b
 32984   003F82  0D09               	mullw	9
 32985   003F84  CFF3 F092          	movff	prodl,??_push+1
 32986   003F88  CFF4 F093          	movff	prodh,??_push+2
 32987   003F8C  C08D  FFE1         	movff	push@q,fsr1l
 32988   003F90  C08E  FFE2         	movff	push@q+1,fsr1h
 32989   003F94  CFE6 F094          	movff	postinc1,??_push+3
 32990   003F98  CFE5 F095          	movff	postdec1,??_push+4
 32991   003F9C  5192               	movf	(??_push+1)& (0+255),w,b
 32992   003F9E  2594               	addwf	(??_push+3)& (0+255),w,b
 32993   003FA0  6F96               	movwf	(??_push+5)& (0+255),b
 32994   003FA2  5193               	movf	(??_push+2)& (0+255),w,b
 32995   003FA4  2195               	addwfc	(??_push+4)& (0+255),w,b
 32996   003FA6  6F97               	movwf	(??_push+6)& (0+255),b
 32997   003FA8  0E05               	movlw	5
 32998   003FAA  2596               	addwf	(??_push+5)& (0+255),w,b
 32999   003FAC  6EE1               	movwf	fsr1l,c
 33000   003FAE  0E00               	movlw	0
 33001   003FB0  2197               	addwfc	(??_push+6)& (0+255),w,b
 33002   003FB2  6EE2               	movwf	fsr1h,c
 33003   003FB4  CFDF FFE7          	movff	indf2,indf1
 33004   003FB8  EE20 F006          	lfsr	2,6
 33005   003FBC  518F               	movf	push@m& (0+255),w,b
 33006   003FBE  26D9               	addwf	fsr2l,f,c
 33007   003FC0  5190               	movf	(push@m+1)& (0+255),w,b
 33008   003FC2  22DA               	addwfc	fsr2h,f,c
 33009   003FC4  EE10 F003          	lfsr	1,3
 33010   003FC8  518D               	movf	push@q& (0+255),w,b
 33011   003FCA  26E1               	addwf	fsr1l,f,c
 33012   003FCC  518E               	movf	(push@q+1)& (0+255),w,b
 33013   003FCE  22E2               	addwfc	fsr1h,f,c
 33014   003FD0  50E7               	movf	indf1,w,c
 33015   003FD2  6F91               	movwf	??_push& (0+255),b
 33016   003FD4  5191               	movf	??_push& (0+255),w,b
 33017   003FD6  0D09               	mullw	9
 33018   003FD8  CFF3 F092          	movff	prodl,??_push+1
 33019   003FDC  CFF4 F093          	movff	prodh,??_push+2
 33020   003FE0  C08D  FFE1         	movff	push@q,fsr1l
 33021   003FE4  C08E  FFE2         	movff	push@q+1,fsr1h
 33022   003FE8  CFE6 F094          	movff	postinc1,??_push+3
 33023   003FEC  CFE5 F095          	movff	postdec1,??_push+4
 33024   003FF0  5192               	movf	(??_push+1)& (0+255),w,b
 33025   003FF2  2594               	addwf	(??_push+3)& (0+255),w,b
 33026   003FF4  6F96               	movwf	(??_push+5)& (0+255),b
 33027   003FF6  5193               	movf	(??_push+2)& (0+255),w,b
 33028   003FF8  2195               	addwfc	(??_push+4)& (0+255),w,b
 33029   003FFA  6F97               	movwf	(??_push+6)& (0+255),b
 33030   003FFC  0E06               	movlw	6
 33031   003FFE  2596               	addwf	(??_push+5)& (0+255),w,b
 33032   004000  6EE1               	movwf	fsr1l,c
 33033   004002  0E00               	movlw	0
 33034   004004  2197               	addwfc	(??_push+6)& (0+255),w,b
 33035   004006  6EE2               	movwf	fsr1h,c
 33036   004008  CFDF FFE7          	movff	indf2,indf1
 33037   00400C  EE20 F007          	lfsr	2,7
 33038   004010  518F               	movf	push@m& (0+255),w,b
 33039   004012  26D9               	addwf	fsr2l,f,c
 33040   004014  5190               	movf	(push@m+1)& (0+255),w,b
 33041   004016  22DA               	addwfc	fsr2h,f,c
 33042   004018  EE10 F003          	lfsr	1,3
 33043   00401C  518D               	movf	push@q& (0+255),w,b
 33044   00401E  26E1               	addwf	fsr1l,f,c
 33045   004020  518E               	movf	(push@q+1)& (0+255),w,b
 33046   004022  22E2               	addwfc	fsr1h,f,c
 33047   004024  50E7               	movf	indf1,w,c
 33048   004026  6F91               	movwf	??_push& (0+255),b
 33049   004028  5191               	movf	??_push& (0+255),w,b
 33050   00402A  0D09               	mullw	9
 33051   00402C  CFF3 F092          	movff	prodl,??_push+1
 33052   004030  CFF4 F093          	movff	prodh,??_push+2
 33053   004034  C08D  FFE1         	movff	push@q,fsr1l
 33054   004038  C08E  FFE2         	movff	push@q+1,fsr1h
 33055   00403C  CFE6 F094          	movff	postinc1,??_push+3
 33056   004040  CFE5 F095          	movff	postdec1,??_push+4
 33057   004044  5192               	movf	(??_push+1)& (0+255),w,b
 33058   004046  2594               	addwf	(??_push+3)& (0+255),w,b
 33059   004048  6F96               	movwf	(??_push+5)& (0+255),b
 33060   00404A  5193               	movf	(??_push+2)& (0+255),w,b
 33061   00404C  2195               	addwfc	(??_push+4)& (0+255),w,b
 33062   00404E  6F97               	movwf	(??_push+6)& (0+255),b
 33063   004050  0E07               	movlw	7
 33064   004052  2596               	addwf	(??_push+5)& (0+255),w,b
 33065   004054  6EE1               	movwf	fsr1l,c
 33066   004056  0E00               	movlw	0
 33067   004058  2197               	addwfc	(??_push+6)& (0+255),w,b
 33068   00405A  6EE2               	movwf	fsr1h,c
 33069   00405C  CFDF FFE7          	movff	indf2,indf1
 33070   004060  EE20 F008          	lfsr	2,8
 33071   004064  518F               	movf	push@m& (0+255),w,b
 33072   004066  26D9               	addwf	fsr2l,f,c
 33073   004068  5190               	movf	(push@m+1)& (0+255),w,b
 33074   00406A  22DA               	addwfc	fsr2h,f,c
 33075   00406C  EE10 F003          	lfsr	1,3
 33076   004070  518D               	movf	push@q& (0+255),w,b
 33077   004072  26E1               	addwf	fsr1l,f,c
 33078   004074  518E               	movf	(push@q+1)& (0+255),w,b
 33079   004076  22E2               	addwfc	fsr1h,f,c
 33080   004078  50E7               	movf	indf1,w,c
 33081   00407A  6F91               	movwf	??_push& (0+255),b
 33082   00407C  5191               	movf	??_push& (0+255),w,b
 33083   00407E  0D09               	mullw	9
 33084   004080  CFF3 F092          	movff	prodl,??_push+1
 33085   004084  CFF4 F093          	movff	prodh,??_push+2
 33086   004088  C08D  FFE1         	movff	push@q,fsr1l
 33087   00408C  C08E  FFE2         	movff	push@q+1,fsr1h
 33088   004090  CFE6 F094          	movff	postinc1,??_push+3
 33089   004094  CFE5 F095          	movff	postdec1,??_push+4
 33090   004098  5192               	movf	(??_push+1)& (0+255),w,b
 33091   00409A  2594               	addwf	(??_push+3)& (0+255),w,b
 33092   00409C  6F96               	movwf	(??_push+5)& (0+255),b
 33093   00409E  5193               	movf	(??_push+2)& (0+255),w,b
 33094   0040A0  2195               	addwfc	(??_push+4)& (0+255),w,b
 33095   0040A2  6F97               	movwf	(??_push+6)& (0+255),b
 33096   0040A4  0E08               	movlw	8
 33097   0040A6  2596               	addwf	(??_push+5)& (0+255),w,b
 33098   0040A8  6EE1               	movwf	fsr1l,c
 33099   0040AA  0E00               	movlw	0
 33100   0040AC  2197               	addwfc	(??_push+6)& (0+255),w,b
 33101   0040AE  6EE2               	movwf	fsr1h,c
 33102   0040B0  CFDF FFE7          	movff	indf2,indf1
 33103   0040B4  C08F  FFD9         	movff	push@m,fsr2l
 33104   0040B8  C090  FFDA         	movff	push@m+1,fsr2h
 33105   0040BC  EE10 F003          	lfsr	1,3
 33106   0040C0  518D               	movf	push@q& (0+255),w,b
 33107   0040C2  26E1               	addwf	fsr1l,f,c
 33108   0040C4  518E               	movf	(push@q+1)& (0+255),w,b
 33109   0040C6  22E2               	addwfc	fsr1h,f,c
 33110   0040C8  50E7               	movf	indf1,w,c
 33111   0040CA  6F91               	movwf	??_push& (0+255),b
 33112   0040CC  5191               	movf	??_push& (0+255),w,b
 33113   0040CE  0D09               	mullw	9
 33114   0040D0  CFF3 F092          	movff	prodl,??_push+1
 33115   0040D4  CFF4 F093          	movff	prodh,??_push+2
 33116   0040D8  C08D  FFE1         	movff	push@q,fsr1l
 33117   0040DC  C08E  FFE2         	movff	push@q+1,fsr1h
 33118   0040E0  CFE6 F094          	movff	postinc1,??_push+3
 33119   0040E4  CFE5 F095          	movff	postdec1,??_push+4
 33120   0040E8  5192               	movf	(??_push+1)& (0+255),w,b
 33121   0040EA  2594               	addwf	(??_push+3)& (0+255),w,b
 33122   0040EC  6EE1               	movwf	fsr1l,c
 33123   0040EE  5193               	movf	(??_push+2)& (0+255),w,b
 33124   0040F0  2195               	addwfc	(??_push+4)& (0+255),w,b
 33125   0040F2  6EE2               	movwf	fsr1h,c
 33126   0040F4  CFDF FFE7          	movff	indf2,indf1
 33127                           
 33128                           ; BSR set to: 0
 33129   0040F8  EE20 F003          	lfsr	2,3
 33130   0040FC  518D               	movf	push@q& (0+255),w,b
 33131   0040FE  26D9               	addwf	fsr2l,f,c
 33132   004100  518E               	movf	(push@q+1)& (0+255),w,b
 33133   004102  22DA               	addwfc	fsr2h,f,c
 33134   004104  2ADF               	incf	indf2,f,c
 33135                           
 33136                           ; BSR set to: 0
 33137   004106  EE20 F004          	lfsr	2,4
 33138   00410A  518D               	movf	push@q& (0+255),w,b
 33139   00410C  26D9               	addwf	fsr2l,f,c
 33140   00410E  518E               	movf	(push@q+1)& (0+255),w,b
 33141   004110  22DA               	addwfc	fsr2h,f,c
 33142   004112  EE10 F003          	lfsr	1,3
 33143   004116  518D               	movf	push@q& (0+255),w,b
 33144   004118  26E1               	addwf	fsr1l,f,c
 33145   00411A  518E               	movf	(push@q+1)& (0+255),w,b
 33146   00411C  22E2               	addwfc	fsr1h,f,c
 33147   00411E  50DE               	movf	postinc2,w,c
 33148   004120  5CE6               	subwf	postinc1,w,c
 33149   004122  A0D8               	btfss	status,0,c
 33150   004124  D007               	goto	l18492
 33151                           
 33152                           ; BSR set to: 0
 33153   004126  EE20 F003          	lfsr	2,3
 33154   00412A  518D               	movf	push@q& (0+255),w,b
 33155   00412C  26D9               	addwf	fsr2l,f,c
 33156   00412E  518E               	movf	(push@q+1)& (0+255),w,b
 33157   004130  22DA               	addwfc	fsr2h,f,c
 33158   004132  6ADF               	clrf	indf2,c
 33159   004134                     l18492:
 33160                           
 33161                           ; BSR set to: 0
 33162   004134  0E01               	movlw	1
 33163                           
 33164                           ; BSR set to: 0
 33165   004136  0012               	return		;funcret
 33166   004138                     __end_of_push:
 33167                           	callstack 0
 33168                           
 33169 ;; *************** function _isEvent *****************
 33170 ;; Defined at:
 33171 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 33172 ;; Parameters:    Size  Location     Type
 33173 ;;  opc             1    wreg     unsigned char 
 33174 ;; Auto vars:     Size  Location     Type
 33175 ;;  opc             1   46[BANK0 ] unsigned char 
 33176 ;; Return value:  Size  Location     Type
 33177 ;;                  1    wreg      enum E12700
 33178 ;; Registers used:
 33179 ;;		wreg, status,2, status,0
 33180 ;; Tracked objects:
 33181 ;;		On entry : 0/0
 33182 ;;		On exit  : 0/0
 33183 ;;		Unchanged: 0/0
 33184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33186 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33189 ;;Total ram usage:        2 bytes
 33190 ;; Hardware stack levels used: 1
 33191 ;; Hardware stack levels required when called: 12
 33192 ;; This function calls:
 33193 ;;		Nothing
 33194 ;; This function is called by:
 33195 ;;		_canSendMessage
 33196 ;; This function uses a non-reentrant model
 33197 ;;
 33198                           
 33199                           	psect	text127
 33200   00C070                     __ptext127:
 33201                           	callstack 0
 33202   00C070                     _isEvent:
 33203                           	callstack 12
 33204                           
 33205                           ; BSR set to: 0
 33206                           ;incstack = 0
 33207                           ;isEvent@opc stored from wreg
 33208   00C070  0100               	movlb	0	; () banked
 33209   00C072  6F8E               	movwf	isEvent@opc& (0+255),b
 33210                           
 33211                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 33212   00C074  0E00               	movlw	0
 33213   00C076  0100               	movlb	0	; () banked
 33214   00C078  6F8D               	movwf	_isEvent$5817& (0+255),b
 33215                           
 33216                           ; BSR set to: 0
 33217   00C07A  518E               	movf	isEvent@opc& (0+255),w,b
 33218   00C07C  0B90               	andlw	144
 33219   00C07E  0A90               	xorlw	144
 33220   00C080  A4D8               	btfss	status,2,c
 33221   00C082  D008               	goto	l2429
 33222                           
 33223                           ; BSR set to: 0
 33224   00C084  518E               	movf	isEvent@opc& (0+255),w,b
 33225   00C086  0AFF               	xorlw	255
 33226   00C088  0B06               	andlw	6
 33227   00C08A  0A06               	xorlw	6
 33228   00C08C  A4D8               	btfss	status,2,c
 33229   00C08E  D002               	goto	l2429
 33230                           
 33231                           ; BSR set to: 0
 33232   00C090  0E01               	movlw	1
 33233   00C092  6F8D               	movwf	_isEvent$5817& (0+255),b
 33234   00C094                     l2429:
 33235                           
 33236                           ; BSR set to: 0
 33237   00C094  518D               	movf	_isEvent$5817& (0+255),w,b
 33238                           
 33239                           ; BSR set to: 0
 33240   00C096  0012               	return		;funcret
 33241   00C098                     __end_of_isEvent:
 33242                           	callstack 0
 33243                           
 33244 ;; *************** function _have *****************
 33245 ;; Defined at:
 33246 ;;		line 837 in file "../../VLCBlib_PIC/vlcb.c"
 33247 ;; Parameters:    Size  Location     Type
 33248 ;;  id              1    wreg     unsigned char 
 33249 ;; Auto vars:     Size  Location     Type
 33250 ;;  id              1   47[BANK0 ] unsigned char 
 33251 ;;  i               1   48[BANK0 ] unsigned char 
 33252 ;; Return value:  Size  Location     Type
 33253 ;;                  1    wreg      enum E12830
 33254 ;; Registers used:
 33255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33256 ;; Tracked objects:
 33257 ;;		On entry : 0/0
 33258 ;;		On exit  : 0/0
 33259 ;;		Unchanged: 0/0
 33260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33262 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33263 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33264 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33265 ;;Total ram usage:        4 bytes
 33266 ;; Hardware stack levels used: 1
 33267 ;; Hardware stack levels required when called: 12
 33268 ;; This function calls:
 33269 ;;		Nothing
 33270 ;; This function is called by:
 33271 ;;		_getParameterFlags
 33272 ;;		_getParameter
 33273 ;;		_canSendMessage
 33274 ;; This function uses a non-reentrant model
 33275 ;;
 33276                           
 33277                           	psect	text128
 33278   00AC70                     __ptext128:
 33279                           	callstack 0
 33280   00AC70                     _have:
 33281                           	callstack 12
 33282                           
 33283                           ; BSR set to: 0
 33284                           ;incstack = 0
 33285                           ;have@id stored from wreg
 33286   00AC70  0100               	movlb	0	; () banked
 33287   00AC72  6F8F               	movwf	have@id& (0+255),b
 33288                           
 33289                           ;../../VLCBlib_PIC/vlcb.c: 838:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 839:     for (i
      +                          =0; i<9; i++) {
 33290   00AC74  0E00               	movlw	0
 33291   00AC76  0100               	movlb	0	; () banked
 33292   00AC78  6F90               	movwf	have@i& (0+255),b
 33293   00AC7A                     l18452:
 33294                           
 33295                           ; BSR set to: 0
 33296                           ;../../VLCBlib_PIC/vlcb.c: 840:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 33297   00AC7A  5190               	movf	have@i& (0+255),w,b
 33298   00AC7C  0D02               	mullw	2
 33299   00AC7E  0E75               	movlw	low _services
 33300   00AC80  24F3               	addwf	243,w,c
 33301   00AC82  6EF6               	movwf	tblptrl,c
 33302   00AC84  0EEE               	movlw	high _services
 33303   00AC86  20F4               	addwfc	244,w,c
 33304   00AC88  6EF7               	movwf	tblptrh,c
 33305   00AC8A                     	if	1	;There are 3 active tblptr bytes
 33306   00AC8A  6AF8               	clrf	tblptru,c
 33307   00AC8C  0E00               	movlw	low (__mediumconst shr (0+16))
 33308   00AC8E  22F8               	addwfc	tblptru,f,c
 33309   00AC90                     	endif
 33310   00AC90  0009               	tblrd		*+
 33311   00AC92  50F5               	movf	tablat,w,c
 33312   00AC94  0009               	tblrd		*+
 33313   00AC96  10F5               	iorwf	tablat,w,c
 33314   00AC98  B4D8               	btfsc	status,2,c
 33315   00AC9A  D01D               	goto	l18460
 33316                           
 33317                           ; BSR set to: 0
 33318   00AC9C  5190               	movf	have@i& (0+255),w,b
 33319   00AC9E  0D02               	mullw	2
 33320   00ACA0  0E75               	movlw	low _services
 33321   00ACA2  24F3               	addwf	243,w,c
 33322   00ACA4  6EF6               	movwf	tblptrl,c
 33323   00ACA6  0EEE               	movlw	high _services
 33324   00ACA8  20F4               	addwfc	244,w,c
 33325   00ACAA  6EF7               	movwf	tblptrh,c
 33326   00ACAC                     	if	1	;There are 3 active tblptr bytes
 33327   00ACAC  6AF8               	clrf	tblptru,c
 33328   00ACAE  0E00               	movlw	low (__mediumconst shr (0+16))
 33329   00ACB0  22F8               	addwfc	tblptru,f,c
 33330   00ACB2                     	endif
 33331   00ACB2  0009               	tblrd		*+
 33332   00ACB4  CFF5 F08D          	movff	tablat,??_have
 33333   00ACB8  0009               	tblrd		*+
 33334   00ACBA  CFF5 F08E          	movff	tablat,??_have+1
 33335   00ACBE  C08D  FFF6         	movff	??_have,tblptrl
 33336   00ACC2  C08E  FFF7         	movff	??_have+1,tblptrh
 33337   00ACC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 33338   00ACC6  6AF8               	clrf	tblptru,c
 33339   00ACC8                     	endif
 33340   00ACC8                     	if	0	;tblptru may be non-zero
 33341   00ACC8                     	endif
 33342   00ACC8  0008               	tblrd		*
 33343   00ACCA  50F5               	movf	tablat,w,c
 33344   00ACCC  198F               	xorwf	have@id& (0+255),w,b
 33345   00ACCE  A4D8               	btfss	status,2,c
 33346   00ACD0  D002               	goto	l18460
 33347                           
 33348                           ; BSR set to: 0
 33349                           ;../../VLCBlib_PIC/vlcb.c: 841:             return PRESENT;
 33350   00ACD2  0E01               	movlw	1
 33351   00ACD4  0012               	return	
 33352   00ACD6                     l18460:
 33353                           
 33354                           ; BSR set to: 0
 33355                           ;../../VLCBlib_PIC/vlcb.c: 843:     }
 33356   00ACD6  2B90               	incf	have@i& (0+255),f,b
 33357                           
 33358                           ; BSR set to: 0
 33359   00ACD8  0E08               	movlw	8
 33360   00ACDA  6590               	cpfsgt	have@i& (0+255),b
 33361   00ACDC  D7CE               	goto	l18452
 33362                           
 33363                           ; BSR set to: 0
 33364                           ;../../VLCBlib_PIC/vlcb.c: 844:     return NOT_PRESENT;
 33365   00ACDE  0E00               	movlw	0
 33366                           
 33367                           ; BSR set to: 0
 33368   00ACE0  0012               	return		;funcret
 33369   00ACE2                     __end_of_have:
 33370                           	callstack 0
 33371                           
 33372 ;; *************** function _getNextWriteMessage *****************
 33373 ;; Defined at:
 33374 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 33375 ;; Parameters:    Size  Location     Type
 33376 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33377 ;;		 -> rxQueue(5), 
 33378 ;; Auto vars:     Size  Location     Type
 33379 ;;  wr              1   56[BANK0 ] unsigned char 
 33380 ;; Return value:  Size  Location     Type
 33381 ;;                  2   45[BANK0 ] PTR struct Message
 33382 ;; Registers used:
 33383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33384 ;; Tracked objects:
 33385 ;;		On entry : 0/0
 33386 ;;		On exit  : 0/0
 33387 ;;		Unchanged: 0/0
 33388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33391 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33392 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33393 ;;Total ram usage:       12 bytes
 33394 ;; Hardware stack levels used: 1
 33395 ;; Hardware stack levels required when called: 12
 33396 ;; This function calls:
 33397 ;;		Nothing
 33398 ;; This function is called by:
 33399 ;;		_canSendMessage
 33400 ;; This function uses a non-reentrant model
 33401 ;;
 33402                           
 33403                           	psect	text129
 33404   008A12                     __ptext129:
 33405                           	callstack 0
 33406   008A12                     _getNextWriteMessage:
 33407                           	callstack 12
 33408                           
 33409                           ; BSR set to: 0
 33410                           ;incstack = 0
 33411   008A12  0100               	movlb	0	; () banked
 33412   008A14  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33413   008A16  6ED9               	movwf	fsr2l,c
 33414   008A18  6ADA               	clrf	fsr2h,c
 33415   008A1A  0E02               	movlw	2
 33416   008A1C  26D9               	addwf	fsr2l,f,c
 33417   008A1E  50DF               	movf	indf2,w,c
 33418   008A20  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 33419   008A22  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 33420   008A24  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33421   008A26  6ED9               	movwf	fsr2l,c
 33422   008A28  6ADA               	clrf	fsr2h,c
 33423   008A2A  0E04               	movlw	4
 33424   008A2C  26D9               	addwf	fsr2l,f,c
 33425   008A2E  50DF               	movf	indf2,w,c
 33426   008A30  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 33427   008A32  0EFF               	movlw	255
 33428   008A34  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33429   008A36  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 33430   008A38  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 33431   008A3A  0EFF               	movlw	255
 33432   008A3C  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 33433   008A3E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33434   008A40  6ED9               	movwf	fsr2l,c
 33435   008A42  6ADA               	clrf	fsr2h,c
 33436   008A44  0E03               	movlw	3
 33437   008A46  26D9               	addwf	fsr2l,f,c
 33438   008A48  50DF               	movf	indf2,w,c
 33439   008A4A  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 33440   008A4C  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 33441   008A4E  0E01               	movlw	1
 33442   008A50  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 33443   008A52  0E00               	movlw	0
 33444   008A54  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 33445   008A56  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 33446   008A58  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 33447   008A5A  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 33448   008A5C  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 33449   008A5E  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 33450   008A60  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 33451   008A62  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33452   008A64  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 33453   008A66  E109               	bnz	l18502
 33454   008A68  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33455   008A6A  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 33456   008A6C  A4D8               	btfss	status,2,c
 33457   008A6E  D005               	goto	l18502
 33458                           
 33459                           ; BSR set to: 0
 33460   008A70  0E00               	movlw	0
 33461   008A72  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33462   008A74  0E00               	movlw	0
 33463   008A76  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33464   008A78  0012               	return	
 33465   008A7A                     l18502:
 33466                           
 33467                           ; BSR set to: 0
 33468   008A7A  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33469   008A7C  6ED9               	movwf	fsr2l,c
 33470   008A7E  6ADA               	clrf	fsr2h,c
 33471   008A80  0E03               	movlw	3
 33472   008A82  26D9               	addwf	fsr2l,f,c
 33473   008A84  50DF               	movf	indf2,w,c
 33474   008A86  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 33475   008A88  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33476   008A8A  6ED9               	movwf	fsr2l,c
 33477   008A8C  6ADA               	clrf	fsr2h,c
 33478   008A8E  0E03               	movlw	3
 33479   008A90  26D9               	addwf	fsr2l,f,c
 33480   008A92  2ADF               	incf	indf2,f,c
 33481                           
 33482                           ; BSR set to: 0
 33483   008A94  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33484   008A96  6ED9               	movwf	fsr2l,c
 33485   008A98  6ADA               	clrf	fsr2h,c
 33486   008A9A  0E04               	movlw	4
 33487   008A9C  26D9               	addwf	fsr2l,f,c
 33488   008A9E  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33489   008AA0  6EE1               	movwf	fsr1l,c
 33490   008AA2  6AE2               	clrf	fsr1h,c
 33491   008AA4  0E03               	movlw	3
 33492   008AA6  26E1               	addwf	fsr1l,f,c
 33493   008AA8  50DE               	movf	postinc2,w,c
 33494   008AAA  5CE6               	subwf	postinc1,w,c
 33495   008AAC  A0D8               	btfss	status,0,c
 33496   008AAE  D006               	goto	l18508
 33497                           
 33498                           ; BSR set to: 0
 33499   008AB0  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33500   008AB2  6ED9               	movwf	fsr2l,c
 33501   008AB4  6ADA               	clrf	fsr2h,c
 33502   008AB6  0E03               	movlw	3
 33503   008AB8  26D9               	addwf	fsr2l,f,c
 33504   008ABA  6ADF               	clrf	indf2,c
 33505   008ABC                     l18508:
 33506                           
 33507                           ; BSR set to: 0
 33508   008ABC  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 33509   008ABE  0D09               	mullw	9
 33510   008AC0  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 33511   008AC4  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 33512   008AC8  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 33513   008ACA  6ED9               	movwf	fsr2l,c
 33514   008ACC  6ADA               	clrf	fsr2h,c
 33515   008ACE  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 33516   008AD2  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 33517   008AD6  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 33518   008AD8  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 33519   008ADA  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 33520   008ADC  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 33521   008ADE  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 33522   008AE0  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 33523                           
 33524                           ; BSR set to: 0
 33525   008AE2  0012               	return		;funcret
 33526   008AE4                     __end_of_getNextWriteMessage:
 33527                           	callstack 0
 33528                           
 33529 ;; *************** function _readInput *****************
 33530 ;; Defined at:
 33531 ;;		line 174 in file "../inputs.c"
 33532 ;; Parameters:    Size  Location     Type
 33533 ;;  io              1    wreg     unsigned char 
 33534 ;; Auto vars:     Size  Location     Type
 33535 ;;  io              1   51[BANK0 ] unsigned char 
 33536 ;; Return value:  Size  Location     Type
 33537 ;;                  1    wreg      enum E12701
 33538 ;; Registers used:
 33539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33540 ;; Tracked objects:
 33541 ;;		On entry : 0/0
 33542 ;;		On exit  : 0/0
 33543 ;;		Unchanged: 0/0
 33544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33547 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33548 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33549 ;;Total ram usage:        3 bytes
 33550 ;; Hardware stack levels used: 1
 33551 ;; Hardware stack levels required when called: 13
 33552 ;; This function calls:
 33553 ;;		_getNV
 33554 ;; This function is called by:
 33555 ;;		_initInputScan
 33556 ;;		_inputScan
 33557 ;; This function uses a non-reentrant model
 33558 ;;
 33559                           
 33560                           	psect	text130
 33561   0080D6                     __ptext130:
 33562                           	callstack 0
 33563   0080D6                     _readInput:
 33564                           	callstack 15
 33565                           
 33566                           ; BSR set to: 0
 33567                           ;incstack = 0
 33568                           ;readInput@io stored from wreg
 33569   0080D6  0100               	movlb	0	; () banked
 33570   0080D8  6F93               	movwf	readInput@io& (0+255),b
 33571                           
 33572                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 33573   0080DA  0100               	movlb	0	; () banked
 33574   0080DC  5193               	movf	readInput@io& (0+255),w,b
 33575   0080DE  0D07               	mullw	7
 33576   0080E0  50F3               	movf	243,w,c
 33577   0080E2  0F10               	addlw	16
 33578   0080E4  EC7F  F05D         	call	_getNV
 33579   0080E8  0100               	movlb	0	; () banked
 33580   0080EA  518D               	movf	?_getNV& (0+255),w,b
 33581   0080EC  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 33582   0080EE  B4D8               	btfsc	status,2,c
 33583   0080F0  D05B               	goto	l20536
 33584   0080F2  D074               	goto	l20538
 33585   0080F4                     l20522:
 33586                           
 33587                           ; BSR set to: 0
 33588                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 33589   0080F4  5193               	movf	readInput@io& (0+255),w,b
 33590   0080F6  0D04               	mullw	4
 33591   0080F8  0E02               	movlw	2
 33592   0080FA  26F3               	addwf	243,f,c
 33593   0080FC  0E00               	movlw	0
 33594   0080FE  22F4               	addwfc	244,f,c
 33595   008100  0E35               	movlw	low _configs
 33596   008102  24F3               	addwf	243,w,c
 33597   008104  6EF6               	movwf	tblptrl,c
 33598   008106  0EEE               	movlw	high _configs
 33599   008108  20F4               	addwfc	244,w,c
 33600   00810A  6EF7               	movwf	tblptrh,c
 33601   00810C                     	if	1	;There are 3 active tblptr bytes
 33602   00810C  6AF8               	clrf	tblptru,c
 33603   00810E  0E00               	movlw	low (__mediumconst shr (0+16))
 33604   008110  22F8               	addwfc	tblptru,f,c
 33605   008112                     	endif
 33606   008112  0008               	tblrd		*
 33607   008114  CFF5 F091          	movff	tablat,??_readInput
 33608   008118  0E01               	movlw	1
 33609   00811A  6F92               	movwf	(??_readInput+1)& (0+255),b
 33610   00811C  2B91               	incf	??_readInput& (0+255),f,b
 33611   00811E  D002               	goto	u20994
 33612   008120                     u20995:
 33613   008120  90D8               	bcf	status,0,c
 33614   008122  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33615   008124                     u20994:
 33616   008124  2F91               	decfsz	??_readInput& (0+255),f,b
 33617   008126  D7FC               	goto	u20995
 33618   008128  0100               	movlb	0	; () banked
 33619   00812A  5192               	movf	(??_readInput+1)& (0+255),w,b
 33620   00812C  1480               	andwf	128,w,c	;volatile
 33621   00812E  0012               	return	
 33622   008130                     l20526:
 33623                           
 33624                           ; BSR set to: 0
 33625                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 33626   008130  5193               	movf	readInput@io& (0+255),w,b
 33627   008132  0D04               	mullw	4
 33628   008134  0E02               	movlw	2
 33629   008136  26F3               	addwf	243,f,c
 33630   008138  0E00               	movlw	0
 33631   00813A  22F4               	addwfc	244,f,c
 33632   00813C  0E35               	movlw	low _configs
 33633   00813E  24F3               	addwf	243,w,c
 33634   008140  6EF6               	movwf	tblptrl,c
 33635   008142  0EEE               	movlw	high _configs
 33636   008144  20F4               	addwfc	244,w,c
 33637   008146  6EF7               	movwf	tblptrh,c
 33638   008148                     	if	1	;There are 3 active tblptr bytes
 33639   008148  6AF8               	clrf	tblptru,c
 33640   00814A  0E00               	movlw	low (__mediumconst shr (0+16))
 33641   00814C  22F8               	addwfc	tblptru,f,c
 33642   00814E                     	endif
 33643   00814E  0008               	tblrd		*
 33644   008150  CFF5 F091          	movff	tablat,??_readInput
 33645   008154  0E01               	movlw	1
 33646   008156  6F92               	movwf	(??_readInput+1)& (0+255),b
 33647   008158  2B91               	incf	??_readInput& (0+255),f,b
 33648   00815A  D002               	goto	u21004
 33649   00815C                     u21005:
 33650   00815C  90D8               	bcf	status,0,c
 33651   00815E  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33652   008160                     u21004:
 33653   008160  2F91               	decfsz	??_readInput& (0+255),f,b
 33654   008162  D7FC               	goto	u21005
 33655   008164  0100               	movlb	0	; () banked
 33656   008166  5192               	movf	(??_readInput+1)& (0+255),w,b
 33657   008168  1481               	andwf	129,w,c	;volatile
 33658   00816A  0012               	return	
 33659   00816C                     l20530:
 33660                           
 33661                           ; BSR set to: 0
 33662                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 33663   00816C  5193               	movf	readInput@io& (0+255),w,b
 33664   00816E  0D04               	mullw	4
 33665   008170  0E02               	movlw	2
 33666   008172  26F3               	addwf	243,f,c
 33667   008174  0E00               	movlw	0
 33668   008176  22F4               	addwfc	244,f,c
 33669   008178  0E35               	movlw	low _configs
 33670   00817A  24F3               	addwf	243,w,c
 33671   00817C  6EF6               	movwf	tblptrl,c
 33672   00817E  0EEE               	movlw	high _configs
 33673   008180  20F4               	addwfc	244,w,c
 33674   008182  6EF7               	movwf	tblptrh,c
 33675   008184                     	if	1	;There are 3 active tblptr bytes
 33676   008184  6AF8               	clrf	tblptru,c
 33677   008186  0E00               	movlw	low (__mediumconst shr (0+16))
 33678   008188  22F8               	addwfc	tblptru,f,c
 33679   00818A                     	endif
 33680   00818A  0008               	tblrd		*
 33681   00818C  CFF5 F091          	movff	tablat,??_readInput
 33682   008190  0E01               	movlw	1
 33683   008192  6F92               	movwf	(??_readInput+1)& (0+255),b
 33684   008194  2B91               	incf	??_readInput& (0+255),f,b
 33685   008196  D002               	goto	u21014
 33686   008198                     u21015:
 33687   008198  90D8               	bcf	status,0,c
 33688   00819A  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 33689   00819C                     u21014:
 33690   00819C  2F91               	decfsz	??_readInput& (0+255),f,b
 33691   00819E  D7FC               	goto	u21015
 33692   0081A0  0100               	movlb	0	; () banked
 33693   0081A2  5192               	movf	(??_readInput+1)& (0+255),w,b
 33694   0081A4  1482               	andwf	130,w,c	;volatile
 33695   0081A6  0012               	return	
 33696   0081A8                     l20536:
 33697                           
 33698                           ; BSR set to: 0
 33699   0081A8  5193               	movf	readInput@io& (0+255),w,b
 33700   0081AA  0D04               	mullw	4
 33701   0081AC  0E01               	movlw	1
 33702   0081AE  26F3               	addwf	243,f,c
 33703   0081B0  0E00               	movlw	0
 33704   0081B2  22F4               	addwfc	244,f,c
 33705   0081B4  0E35               	movlw	low _configs
 33706   0081B6  24F3               	addwf	243,w,c
 33707   0081B8  6EF6               	movwf	tblptrl,c
 33708   0081BA  0EEE               	movlw	high _configs
 33709   0081BC  20F4               	addwfc	244,w,c
 33710   0081BE  6EF7               	movwf	tblptrh,c
 33711   0081C0                     	if	1	;There are 3 active tblptr bytes
 33712   0081C0  6AF8               	clrf	tblptru,c
 33713   0081C2  0E00               	movlw	low (__mediumconst shr (0+16))
 33714   0081C4  22F8               	addwfc	tblptru,f,c
 33715   0081C6                     	endif
 33716   0081C6  0008               	tblrd		*
 33717   0081C8  50F5               	movf	tablat,w,c
 33718                           
 33719                           ; Switch size 1, requested type "simple"
 33720                           ; Number of cases is 3, Range of values is 65 to 67
 33721                           ; switch strategies available:
 33722                           ; Name         Instructions Cycles
 33723                           ; simple_byte           10     6 (average)
 33724                           ;	Chosen strategy is simple_byte
 33725   0081CA  0A41               	xorlw	65	; case 65
 33726   0081CC  B4D8               	btfsc	status,2,c
 33727   0081CE  D792               	goto	l20522
 33728   0081D0  0A03               	xorlw	3	; case 66
 33729   0081D2  B4D8               	btfsc	status,2,c
 33730   0081D4  D7AD               	goto	l20526
 33731   0081D6  0A01               	xorlw	1	; case 67
 33732   0081D8  B4D8               	btfsc	status,2,c
 33733   0081DA  D7C8               	goto	l20530
 33734   0081DC                     l20538:
 33735                           
 33736                           ; BSR set to: 0
 33737                           ;../inputs.c: 191:     return FALSE;
 33738   0081DC  0E00               	movlw	0
 33739                           
 33740                           ; BSR set to: 0
 33741   0081DE  0012               	return		;funcret
 33742   0081E0                     __end_of_readInput:
 33743                           	callstack 0
 33744                           
 33745 ;; *************** function _initRomOps *****************
 33746 ;; Defined at:
 33747 ;;		line 147 in file "../../VLCBlib_PIC/nvm.c"
 33748 ;; Parameters:    Size  Location     Type
 33749 ;;		None
 33750 ;; Auto vars:     Size  Location     Type
 33751 ;;		None
 33752 ;; Return value:  Size  Location     Type
 33753 ;;                  1    wreg      void 
 33754 ;; Registers used:
 33755 ;;		wreg, status,2
 33756 ;; Tracked objects:
 33757 ;;		On entry : 0/0
 33758 ;;		On exit  : 0/0
 33759 ;;		Unchanged: 0/0
 33760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33765 ;;Total ram usage:        0 bytes
 33766 ;; Hardware stack levels used: 1
 33767 ;; Hardware stack levels required when called: 12
 33768 ;; This function calls:
 33769 ;;		Nothing
 33770 ;; This function is called by:
 33771 ;;		_main
 33772 ;; This function uses a non-reentrant model
 33773 ;;
 33774                           
 33775                           	psect	text131
 33776   00C348                     __ptext131:
 33777                           	callstack 0
 33778   00C348                     _initRomOps:
 33779                           	callstack 18
 33780                           
 33781                           ;../../VLCBlib_PIC/nvm.c: 148:     flashFlags.asByte = 0;
 33782                           
 33783                           ; BSR set to: 0
 33784                           ;incstack = 0
 33785   00C348  0E00               	movlw	0
 33786   00C34A  0100               	movlb	0	; () banked
 33787   00C34C  6FB9               	movwf	_flashFlags& (0+255),b
 33788                           
 33789                           ;../../VLCBlib_PIC/nvm.c: 149:     flashBlock = 0x0000;
 33790   00C34E  0E00               	movlw	0
 33791   00C350  6FAF               	movwf	(_flashBlock+1)& (0+255),b
 33792   00C352  0E00               	movlw	0
 33793   00C354  6FAE               	movwf	_flashBlock& (0+255),b
 33794                           
 33795                           ;../../VLCBlib_PIC/nvm.c: 151:     TBLPTRU = 0;
 33796   00C356  0E00               	movlw	0
 33797   00C358  6EF8               	movwf	248,c	;volatile
 33798                           
 33799                           ; BSR set to: 0
 33800   00C35A  0012               	return		;funcret
 33801   00C35C                     __end_of_initRomOps:
 33802                           	callstack 0
 33803                           
 33804 ;; *************** function _checkPowerOnPb *****************
 33805 ;; Defined at:
 33806 ;;		line 953 in file "../../VLCBlib_PIC/vlcb.c"
 33807 ;; Parameters:    Size  Location     Type
 33808 ;;		None
 33809 ;; Auto vars:     Size  Location     Type
 33810 ;;  i               1   57[BANK1 ] unsigned char 
 33811 ;; Return value:  Size  Location     Type
 33812 ;;                  1    wreg      void 
 33813 ;; Registers used:
 33814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33815 ;; Tracked objects:
 33816 ;;		On entry : 0/0
 33817 ;;		On exit  : 0/0
 33818 ;;		Unchanged: 0/0
 33819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33821 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33823 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33824 ;;Total ram usage:        1 bytes
 33825 ;; Hardware stack levels used: 1
 33826 ;; Hardware stack levels required when called: 27
 33827 ;; This function calls:
 33828 ;;		_APP_testMode
 33829 ;;		_factoryReset
 33830 ;;		_pbDownTimer
 33831 ;;		_pbUpTimer
 33832 ;;		_showStatus
 33833 ;; This function is called by:
 33834 ;;		_main
 33835 ;; This function uses a non-reentrant model
 33836 ;;
 33837                           
 33838                           	psect	text132
 33839   00B270                     __ptext132:
 33840                           	callstack 0
 33841   00B270                     _checkPowerOnPb:
 33842                           	callstack 3
 33843                           
 33844                           ;../../VLCBlib_PIC/vlcb.c: 954:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 957:     if ((!
      +                          (PORTAbits.RA2))) {
 33845                           
 33846                           ; BSR set to: 0
 33847                           ;incstack = 0
 33848   00B270  B480               	btfsc	128,2,c	;volatile
 33849   00B272  0012               	return	
 33850                           
 33851                           ;../../VLCBlib_PIC/vlcb.c: 959:         i = pbDownTimer(30);
 33852   00B274  0E1E               	movlw	30
 33853   00B276  EC83  F04A         	call	_pbDownTimer
 33854   00B27A  0101               	movlb	1	; () banked
 33855   00B27C  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 33856                           
 33857                           ; BSR set to: 1
 33858                           ;../../VLCBlib_PIC/vlcb.c: 960:         if (i == 0) {
 33859   00B27E  51F7               	movf	checkPowerOnPb@i& (0+255),w,b
 33860   00B280  B4D8               	btfsc	status,2,c
 33861   00B282  0012               	return	
 33862                           
 33863                           ; BSR set to: 1
 33864                           
 33865                           ; BSR set to: 1
 33866                           ;../../VLCBlib_PIC/vlcb.c: 962:             return;
 33867   00B284  0E01               	movlw	1
 33868   00B286  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33869   00B288  D006               	goto	l23960
 33870                           
 33871                           ; BSR set to: 1
 33872   00B28A  0E06               	movlw	6
 33873   00B28C  61F7               	cpfslt	checkPowerOnPb@i& (0+255),b
 33874   00B28E  D003               	goto	l23960
 33875                           
 33876                           ; BSR set to: 1
 33877                           ;../../VLCBlib_PIC/vlcb.c: 964:             APP_testMode();
 33878   00B290  EC0D  F062         	call	_APP_testMode	;wreg free
 33879                           
 33880                           ;../../VLCBlib_PIC/vlcb.c: 965:         } else if (i >= 10) {
 33881   00B294  0012               	return	
 33882   00B296                     l23960:
 33883                           
 33884                           ; BSR set to: 1
 33885   00B296  0E09               	movlw	9
 33886   00B298  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33887   00B29A  0012               	return	
 33888                           
 33889                           ; BSR set to: 1
 33890                           ;../../VLCBlib_PIC/vlcb.c: 966:             showStatus(STATUS_RESET_WARNING);
 33891   00B29C  0E04               	movlw	4
 33892   00B29E  ECDE  F047         	call	_showStatus
 33893                           
 33894                           ;../../VLCBlib_PIC/vlcb.c: 968:             i = pbUpTimer(5);
 33895   00B2A2  0E05               	movlw	5
 33896   00B2A4  EC2B  F04A         	call	_pbUpTimer
 33897   00B2A8  0101               	movlb	1	; () banked
 33898   00B2AA  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 33899                           
 33900                           ; BSR set to: 1
 33901                           ;../../VLCBlib_PIC/vlcb.c: 969:             if (i == 0) {
 33902   00B2AC  51F7               	movf	checkPowerOnPb@i& (0+255),w,b
 33903   00B2AE  B4D8               	btfsc	status,2,c
 33904   00B2B0  0012               	return	
 33905                           
 33906                           ; BSR set to: 1
 33907                           ;../../VLCBlib_PIC/vlcb.c: 973:             i = pbDownTimer(5);
 33908   00B2B2  0E05               	movlw	5
 33909   00B2B4  EC83  F04A         	call	_pbDownTimer
 33910   00B2B8  0101               	movlb	1	; () banked
 33911   00B2BA  6FF7               	movwf	checkPowerOnPb@i& (0+255),b
 33912                           
 33913                           ; BSR set to: 1
 33914                           ;../../VLCBlib_PIC/vlcb.c: 974:             if ((i>=2) && (i < 4)) {
 33915   00B2BC  0E01               	movlw	1
 33916   00B2BE  65F7               	cpfsgt	checkPowerOnPb@i& (0+255),b
 33917   00B2C0  0012               	return	
 33918                           
 33919                           ; BSR set to: 1
 33920   00B2C2  0E04               	movlw	4
 33921   00B2C4  61F7               	cpfslt	checkPowerOnPb@i& (0+255),b
 33922   00B2C6  0012               	return	
 33923                           
 33924                           ; BSR set to: 1
 33925                           ;../../VLCBlib_PIC/vlcb.c: 975:                 factoryReset();
 33926   00B2C8  ECDE  F042         	call	_factoryReset	;wreg free
 33927   00B2CC  0012               	return		;funcret
 33928   00B2CE                     __end_of_checkPowerOnPb:
 33929                           	callstack 0
 33930                           
 33931 ;; *************** function _showStatus *****************
 33932 ;; Defined at:
 33933 ;;		line 234 in file "../../VLCBlib_PIC/statusLeds2.c"
 33934 ;; Parameters:    Size  Location     Type
 33935 ;;  s               1    wreg     enum E12906
 33936 ;; Auto vars:     Size  Location     Type
 33937 ;;  s               1   47[BANK0 ] enum E12906
 33938 ;; Return value:  Size  Location     Type
 33939 ;;                  1    wreg      void 
 33940 ;; Registers used:
 33941 ;;		wreg, status,2, status,0
 33942 ;; Tracked objects:
 33943 ;;		On entry : 0/0
 33944 ;;		On exit  : 0/0
 33945 ;;		Unchanged: 0/0
 33946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33950 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33951 ;;Total ram usage:        3 bytes
 33952 ;; Hardware stack levels used: 1
 33953 ;; Hardware stack levels required when called: 12
 33954 ;; This function calls:
 33955 ;;		Nothing
 33956 ;; This function is called by:
 33957 ;;		_setLEDsByMode
 33958 ;;		_checkPowerOnPb
 33959 ;;		_poll
 33960 ;; This function uses a non-reentrant model
 33961 ;;
 33962                           
 33963                           	psect	text133
 33964   008FBC                     __ptext133:
 33965                           	callstack 0
 33966   008FBC                     _showStatus:
 33967                           	callstack 15
 33968                           
 33969                           ;incstack = 0
 33970                           ;showStatus@s stored from wreg
 33971   008FBC  0100               	movlb	0	; () banked
 33972   008FBE  6F8F               	movwf	showStatus@s& (0+255),b
 33973                           
 33974                           ;../../VLCBlib_PIC/statusLeds2.c: 235:     switch (s) {
 33975   008FC0  D030               	goto	l20250
 33976   008FC2                     l20232:
 33977                           
 33978                           ; BSR set to: 0
 33979                           ;../../VLCBlib_PIC/statusLeds2.c: 237:             ledState[0] = LED_OFF;
 33980   008FC2  0E00               	movlw	0
 33981   008FC4  6FB2               	movwf	_ledState& (0+255),b
 33982                           
 33983                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[1] = LED_OFF;
 33984   008FC6  0E00               	movlw	0
 33985   008FC8  6FB3               	movwf	(_ledState+1)& (0+255),b
 33986                           
 33987                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             break;
 33988   008FCA  0012               	return	
 33989   008FCC                     l20234:
 33990                           
 33991                           ; BSR set to: 0
 33992                           ;../../VLCBlib_PIC/statusLeds2.c: 241:             ledState[0] = LED_ON;
 33993   008FCC  0E01               	movlw	1
 33994   008FCE  6FB2               	movwf	_ledState& (0+255),b
 33995                           
 33996                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[1] = LED_OFF;
 33997   008FD0  0E00               	movlw	0
 33998   008FD2  6FB3               	movwf	(_ledState+1)& (0+255),b
 33999                           
 34000                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             break;
 34001   008FD4  0012               	return	
 34002   008FD6                     l20236:
 34003                           
 34004                           ; BSR set to: 0
 34005                           ;../../VLCBlib_PIC/statusLeds2.c: 245:             ledState[0] = LED_OFF;
 34006   008FD6  0E00               	movlw	0
 34007   008FD8  6FB2               	movwf	_ledState& (0+255),b
 34008                           
 34009                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[1] = LED_FLASH_50_1HZ;
 34010   008FDA  0E03               	movlw	3
 34011   008FDC  6FB3               	movwf	(_ledState+1)& (0+255),b
 34012                           
 34013                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             break;
 34014   008FDE  0012               	return	
 34015   008FE0                     l2190:
 34016                           
 34017                           ; BSR set to: 0
 34018                           ;../../VLCBlib_PIC/statusLeds2.c: 253:             ledState[0] = LED_OFF;
 34019                           
 34020                           ; BSR set to: 0
 34021   008FE0  0E00               	movlw	0
 34022   008FE2  6FB2               	movwf	_ledState& (0+255),b
 34023                           
 34024                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[1] = LED_ON;
 34025   008FE4  0E01               	movlw	1
 34026   008FE6  6FB3               	movwf	(_ledState+1)& (0+255),b
 34027                           
 34028                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             break;
 34029   008FE8  0012               	return	
 34030   008FEA                     l20240:
 34031                           
 34032                           ; BSR set to: 0
 34033                           ;../../VLCBlib_PIC/statusLeds2.c: 257:             flashCounter[1] = 0;
 34034   008FEA  0E00               	movlw	0
 34035   008FEC  6FB1               	movwf	(_flashCounter+1)& (0+255),b
 34036                           
 34037                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[0] = 25;
 34038   008FEE  0E19               	movlw	25
 34039   008FF0  6FB0               	movwf	_flashCounter& (0+255),b
 34040                           
 34041                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             ledState[0] = LED_FLASH_50_2HZ;
 34042   008FF2  0E02               	movlw	2
 34043   008FF4  6FB2               	movwf	_ledState& (0+255),b
 34044                           
 34045                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[1] = LED_FLASH_50_2HZ;
 34046   008FF6  0E02               	movlw	2
 34047   008FF8  6FB3               	movwf	(_ledState+1)& (0+255),b
 34048                           
 34049                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             break;
 34050   008FFA  0012               	return	
 34051   008FFC                     l20242:
 34052                           
 34053                           ; BSR set to: 0
 34054                           ;../../VLCBlib_PIC/statusLeds2.c: 263:             ledState[0] = LED_SINGLE_FLICKER_ON;
 34055   008FFC  0E06               	movlw	6
 34056   008FFE  6FB2               	movwf	_ledState& (0+255),b
 34057                           
 34058                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             ledState[1] = LED_ON;
 34059   009000  0E01               	movlw	1
 34060   009002  6FB3               	movwf	(_ledState+1)& (0+255),b
 34061                           
 34062                           ;../../VLCBlib_PIC/statusLeds2.c: 265:             break;
 34063   009004  0012               	return	
 34064   009006                     l20244:
 34065                           
 34066                           ; BSR set to: 0
 34067                           ;../../VLCBlib_PIC/statusLeds2.c: 267:             ledState[0] = LED_LONG_FLICKER_ON;
 34068   009006  0E08               	movlw	8
 34069   009008  6FB2               	movwf	_ledState& (0+255),b
 34070                           
 34071                           ;../../VLCBlib_PIC/statusLeds2.c: 268:             ledState[1] = LED_ON;
 34072   00900A  0E01               	movlw	1
 34073   00900C  6FB3               	movwf	(_ledState+1)& (0+255),b
 34074                           
 34075                           ;../../VLCBlib_PIC/statusLeds2.c: 269:             break;
 34076   00900E  0012               	return	
 34077   009010                     l20246:
 34078                           
 34079                           ; BSR set to: 0
 34080                           ;../../VLCBlib_PIC/statusLeds2.c: 272:             flashCounter[1] = 0;
 34081   009010  0E00               	movlw	0
 34082   009012  6FB1               	movwf	(_flashCounter+1)& (0+255),b
 34083                           
 34084                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             flashCounter[0] = 0;
 34085   009014  0E00               	movlw	0
 34086   009016  6FB0               	movwf	_flashCounter& (0+255),b
 34087                           
 34088                           ;../../VLCBlib_PIC/statusLeds2.c: 274:             ledState[0] = LED_FLASH_50_2HZ;
 34089   009018  0E02               	movlw	2
 34090   00901A  6FB2               	movwf	_ledState& (0+255),b
 34091                           
 34092                           ;../../VLCBlib_PIC/statusLeds2.c: 275:             ledState[1] = LED_FLASH_50_2HZ;
 34093   00901C  0E02               	movlw	2
 34094   00901E  6FB3               	movwf	(_ledState+1)& (0+255),b
 34095                           
 34096                           ;../../VLCBlib_PIC/statusLeds2.c: 276:             break;
 34097   009020  0012               	return	
 34098   009022                     l20250:
 34099   009022  0100               	movlb	0	; () banked
 34100   009024  518F               	movf	showStatus@s& (0+255),w,b
 34101   009026  6F8D               	movwf	??_showStatus& (0+255),b
 34102   009028  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 34103                           
 34104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34105                           ; Switch size 1, requested type "simple"
 34106                           ; Number of cases is 1, Range of values is 0 to 0
 34107                           ; switch strategies available:
 34108                           ; Name         Instructions Cycles
 34109                           ; simple_byte            4     3 (average)
 34110                           ;	Chosen strategy is simple_byte
 34111   00902A  518E               	movf	(??_showStatus+1)& (0+255),w,b
 34112   00902C  0A00               	xorlw	0	; case 0
 34113   00902E  A4D8               	btfss	status,2,c
 34114   009030  0012               	return	
 34115                           
 34116                           ; BSR set to: 0
 34117                           ; Switch size 1, requested type "simple"
 34118                           ; Number of cases is 13, Range of values is 0 to 12
 34119                           ; switch strategies available:
 34120                           ; Name         Instructions Cycles
 34121                           ; simple_byte           40    21 (average)
 34122                           ;	Chosen strategy is simple_byte
 34123   009032  518D               	movf	??_showStatus& (0+255),w,b
 34124   009034  0A00               	xorlw	0	; case 0
 34125   009036  B4D8               	btfsc	status,2,c
 34126   009038  D7C4               	goto	l20232
 34127   00903A  0A01               	xorlw	1	; case 1
 34128   00903C  B4D8               	btfsc	status,2,c
 34129   00903E  D7C6               	goto	l20234
 34130   009040  0A03               	xorlw	3	; case 2
 34131   009042  B4D8               	btfsc	status,2,c
 34132   009044  D7C8               	goto	l20236
 34133   009046  0A01               	xorlw	1	; case 3
 34134   009048  B4D8               	btfsc	status,2,c
 34135   00904A  D7CA               	goto	l2190
 34136   00904C  0A07               	xorlw	7	; case 4
 34137   00904E  B4D8               	btfsc	status,2,c
 34138   009050  D7CC               	goto	l20240
 34139   009052  0A01               	xorlw	1	; case 5
 34140   009054  B4D8               	btfsc	status,2,c
 34141   009056  D7C4               	goto	l2190
 34142   009058  0A03               	xorlw	3	; case 6
 34143   00905A  B4D8               	btfsc	status,2,c
 34144   00905C  D7C1               	goto	l2190
 34145   00905E  0A01               	xorlw	1	; case 7
 34146   009060  B4D8               	btfsc	status,2,c
 34147   009062  D7CC               	goto	l20242
 34148   009064  0A0F               	xorlw	15	; case 8
 34149   009066  B4D8               	btfsc	status,2,c
 34150   009068  D7CE               	goto	l20244
 34151   00906A  0A01               	xorlw	1	; case 9
 34152   00906C  B4D8               	btfsc	status,2,c
 34153   00906E  D7B8               	goto	l2190
 34154   009070  0A03               	xorlw	3	; case 10
 34155   009072  B4D8               	btfsc	status,2,c
 34156   009074  D7B5               	goto	l2190
 34157   009076  0A01               	xorlw	1	; case 11
 34158   009078  B4D8               	btfsc	status,2,c
 34159   00907A  D7CA               	goto	l20246
 34160   00907C  0A07               	xorlw	7	; case 12
 34161   00907E  A4D8               	btfss	status,2,c
 34162   009080  0012               	return	
 34163   009082  D7C6               	goto	l20246
 34164   009084                     __end_of_showStatus:
 34165                           	callstack 0
 34166                           
 34167 ;; *************** function _pbUpTimer *****************
 34168 ;; Defined at:
 34169 ;;		line 930 in file "../../VLCBlib_PIC/vlcb.c"
 34170 ;; Parameters:    Size  Location     Type
 34171 ;;  timeout         1    wreg     unsigned char 
 34172 ;; Auto vars:     Size  Location     Type
 34173 ;;  timeout         1   72[BANK0 ] unsigned char 
 34174 ;; Return value:  Size  Location     Type
 34175 ;;                  1    wreg      unsigned char 
 34176 ;; Registers used:
 34177 ;;		wreg, status,2, status,0, cstack
 34178 ;; Tracked objects:
 34179 ;;		On entry : 0/0
 34180 ;;		On exit  : 0/0
 34181 ;;		Unchanged: 0/0
 34182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34185 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34186 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34187 ;;Total ram usage:        5 bytes
 34188 ;; Hardware stack levels used: 1
 34189 ;; Hardware stack levels required when called: 14
 34190 ;; This function calls:
 34191 ;;		___lldiv
 34192 ;;		___lmul
 34193 ;;		_leds_poll
 34194 ;;		_tickGet
 34195 ;; This function is called by:
 34196 ;;		_checkPowerOnPb
 34197 ;; This function uses a non-reentrant model
 34198 ;;
 34199                           
 34200                           	psect	text134
 34201   009456                     __ptext134:
 34202                           	callstack 0
 34203   009456                     _pbUpTimer:
 34204                           	callstack 15
 34205                           
 34206                           ; BSR set to: 0
 34207                           ;incstack = 0
 34208                           ;pbUpTimer@timeout stored from wreg
 34209   009456  0100               	movlb	0	; () banked
 34210   009458  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 34211                           
 34212                           ;../../VLCBlib_PIC/vlcb.c: 932:     pbTimer.val = tickGet();
 34213   00945A  ECED  F059         	call	_tickGet	;wreg free
 34214   00945E  C08D  F0AA         	movff	?_tickGet,_pbTimer
 34215   009462  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 34216   009466  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 34217   00946A  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 34218                           
 34219                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34220   00946E  D02D               	goto	l2373
 34221   009470                     l23616:
 34222                           
 34223                           ;../../VLCBlib_PIC/vlcb.c: 934:         leds_poll();
 34224   009470  EC87  F030         	call	_leds_poll	;wreg free
 34225                           
 34226                           ;../../VLCBlib_PIC/vlcb.c: 935:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34227   009474  ECED  F059         	call	_tickGet	;wreg free
 34228   009478  0100               	movlb	0	; () banked
 34229   00947A  51AA               	movf	_pbTimer& (0+255),w,b
 34230   00947C  5D8D               	subwf	?_tickGet& (0+255),w,b
 34231   00947E  6FA4               	movwf	??_pbUpTimer& (0+255),b
 34232   009480  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 34233   009482  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34234   009484  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 34235   009486  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 34236   009488  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34237   00948A  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 34238   00948C  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 34239   00948E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34240   009490  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 34241   009492  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 34242   009494  6F91               	movwf	___lmul@multiplier& (0+255),b
 34243   009496  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34244   009498  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34245   00949A  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34246   00949C  0E24               	movlw	36
 34247   00949E  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34248   0094A0  0EF4               	movlw	244
 34249   0094A2  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34250   0094A4  0E00               	movlw	0
 34251   0094A6  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34252   0094A8  0E00               	movlw	0
 34253   0094AA  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34254   0094AC  EC19  F05A         	call	___lmul	;wreg free
 34255   0094B0  0100               	movlb	0	; () banked
 34256   0094B2  51A4               	movf	??_pbUpTimer& (0+255),w,b
 34257   0094B4  5D91               	subwf	?___lmul& (0+255),w,b
 34258   0094B6  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 34259   0094B8  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34260   0094BA  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 34261   0094BC  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34262   0094BE  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 34263   0094C0  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34264   0094C2  B0D8               	btfsc	status,0,c
 34265   0094C4  D002               	goto	l2373
 34266                           
 34267                           ; BSR set to: 0
 34268                           ;../../VLCBlib_PIC/vlcb.c: 936:             return 0;
 34269   0094C6  0E00               	movlw	0
 34270   0094C8  0012               	return	
 34271   0094CA                     l2373:
 34272                           
 34273                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 34274   0094CA  B480               	btfsc	128,2,c	;volatile
 34275   0094CC  D7D1               	goto	l23616
 34276                           
 34277                           ;../../VLCBlib_PIC/vlcb.c: 940:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34278   0094CE  ECED  F059         	call	_tickGet	;wreg free
 34279   0094D2  0100               	movlb	0	; () banked
 34280   0094D4  51AA               	movf	_pbTimer& (0+255),w,b
 34281   0094D6  5D8D               	subwf	?_tickGet& (0+255),w,b
 34282   0094D8  6F97               	movwf	___lldiv@dividend& (0+255),b
 34283   0094DA  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 34284   0094DC  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34285   0094DE  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34286   0094E0  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 34287   0094E2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34288   0094E4  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34289   0094E6  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 34290   0094E8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34291   0094EA  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34292   0094EC  0E24               	movlw	36
 34293   0094EE  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34294   0094F0  0EF4               	movlw	244
 34295   0094F2  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34296   0094F4  0E00               	movlw	0
 34297   0094F6  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34298   0094F8  0E00               	movlw	0
 34299   0094FA  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34300   0094FC  EC54  F053         	call	___lldiv	;wreg free
 34301   009500  0100               	movlb	0	; () banked
 34302   009502  5197               	movf	?___lldiv& (0+255),w,b
 34303                           
 34304                           ; BSR set to: 0
 34305   009504  0012               	return		;funcret
 34306   009506                     __end_of_pbUpTimer:
 34307                           	callstack 0
 34308                           
 34309 ;; *************** function _pbDownTimer *****************
 34310 ;; Defined at:
 34311 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 34312 ;; Parameters:    Size  Location     Type
 34313 ;;  timeout         1    wreg     unsigned char 
 34314 ;; Auto vars:     Size  Location     Type
 34315 ;;  timeout         1   72[BANK0 ] unsigned char 
 34316 ;; Return value:  Size  Location     Type
 34317 ;;                  1    wreg      unsigned char 
 34318 ;; Registers used:
 34319 ;;		wreg, status,2, status,0, cstack
 34320 ;; Tracked objects:
 34321 ;;		On entry : 0/0
 34322 ;;		On exit  : 0/0
 34323 ;;		Unchanged: 0/0
 34324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34326 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34327 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34328 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34329 ;;Total ram usage:        5 bytes
 34330 ;; Hardware stack levels used: 1
 34331 ;; Hardware stack levels required when called: 14
 34332 ;; This function calls:
 34333 ;;		___lldiv
 34334 ;;		___lmul
 34335 ;;		_leds_poll
 34336 ;;		_tickGet
 34337 ;; This function is called by:
 34338 ;;		_checkPowerOnPb
 34339 ;; This function uses a non-reentrant model
 34340 ;;
 34341                           
 34342                           	psect	text135
 34343   009506                     __ptext135:
 34344                           	callstack 0
 34345   009506                     _pbDownTimer:
 34346                           	callstack 15
 34347                           
 34348                           ; BSR set to: 0
 34349                           ;incstack = 0
 34350                           ;pbDownTimer@timeout stored from wreg
 34351   009506  0100               	movlb	0	; () banked
 34352   009508  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 34353                           
 34354                           ;../../VLCBlib_PIC/vlcb.c: 913:     pbTimer.val = tickGet();
 34355   00950A  ECED  F059         	call	_tickGet	;wreg free
 34356   00950E  C08D  F0AA         	movff	?_tickGet,_pbTimer
 34357   009512  C08E  F0AB         	movff	?_tickGet+1,_pbTimer+1
 34358   009516  C08F  F0AC         	movff	?_tickGet+2,_pbTimer+2
 34359   00951A  C090  F0AD         	movff	?_tickGet+3,_pbTimer+3
 34360                           
 34361                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34362   00951E  D02D               	goto	l2366
 34363   009520                     l23604:
 34364                           
 34365                           ;../../VLCBlib_PIC/vlcb.c: 915:         leds_poll();
 34366   009520  EC87  F030         	call	_leds_poll	;wreg free
 34367                           
 34368                           ;../../VLCBlib_PIC/vlcb.c: 916:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 34369   009524  ECED  F059         	call	_tickGet	;wreg free
 34370   009528  0100               	movlb	0	; () banked
 34371   00952A  51AA               	movf	_pbTimer& (0+255),w,b
 34372   00952C  5D8D               	subwf	?_tickGet& (0+255),w,b
 34373   00952E  6FA4               	movwf	??_pbDownTimer& (0+255),b
 34374   009530  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 34375   009532  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34376   009534  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 34377   009536  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 34378   009538  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34379   00953A  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 34380   00953C  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 34381   00953E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34382   009540  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 34383   009542  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 34384   009544  6F91               	movwf	___lmul@multiplier& (0+255),b
 34385   009546  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 34386   009548  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 34387   00954A  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 34388   00954C  0E24               	movlw	36
 34389   00954E  6F95               	movwf	___lmul@multiplicand& (0+255),b
 34390   009550  0EF4               	movlw	244
 34391   009552  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 34392   009554  0E00               	movlw	0
 34393   009556  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 34394   009558  0E00               	movlw	0
 34395   00955A  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 34396   00955C  EC19  F05A         	call	___lmul	;wreg free
 34397   009560  0100               	movlb	0	; () banked
 34398   009562  51A4               	movf	??_pbDownTimer& (0+255),w,b
 34399   009564  5D91               	subwf	?___lmul& (0+255),w,b
 34400   009566  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 34401   009568  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 34402   00956A  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 34403   00956C  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 34404   00956E  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 34405   009570  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 34406   009572  B0D8               	btfsc	status,0,c
 34407   009574  D002               	goto	l2366
 34408                           
 34409                           ; BSR set to: 0
 34410                           ;../../VLCBlib_PIC/vlcb.c: 917:             return 0;
 34411   009576  0E00               	movlw	0
 34412   009578  0012               	return	
 34413   00957A                     l2366:
 34414                           
 34415                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 34416   00957A  A480               	btfss	128,2,c	;volatile
 34417   00957C  D7D1               	goto	l23604
 34418                           
 34419                           ;../../VLCBlib_PIC/vlcb.c: 921:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 34420   00957E  ECED  F059         	call	_tickGet	;wreg free
 34421   009582  0100               	movlb	0	; () banked
 34422   009584  51AA               	movf	_pbTimer& (0+255),w,b
 34423   009586  5D8D               	subwf	?_tickGet& (0+255),w,b
 34424   009588  6F97               	movwf	___lldiv@dividend& (0+255),b
 34425   00958A  51AB               	movf	(_pbTimer+1)& (0+255),w,b
 34426   00958C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34427   00958E  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 34428   009590  51AC               	movf	(_pbTimer+2)& (0+255),w,b
 34429   009592  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34430   009594  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 34431   009596  51AD               	movf	(_pbTimer+3)& (0+255),w,b
 34432   009598  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34433   00959A  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 34434   00959C  0E24               	movlw	36
 34435   00959E  6F9B               	movwf	___lldiv@divisor& (0+255),b
 34436   0095A0  0EF4               	movlw	244
 34437   0095A2  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 34438   0095A4  0E00               	movlw	0
 34439   0095A6  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 34440   0095A8  0E00               	movlw	0
 34441   0095AA  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 34442   0095AC  EC54  F053         	call	___lldiv	;wreg free
 34443   0095B0  0100               	movlb	0	; () banked
 34444   0095B2  5197               	movf	?___lldiv& (0+255),w,b
 34445                           
 34446                           ; BSR set to: 0
 34447   0095B4  0012               	return		;funcret
 34448   0095B6                     __end_of_pbDownTimer:
 34449                           	callstack 0
 34450                           
 34451 ;; *************** function _leds_poll *****************
 34452 ;; Defined at:
 34453 ;;		line 88 in file "../../VLCBlib_PIC/statusLeds2.c"
 34454 ;; Parameters:    Size  Location     Type
 34455 ;;		None
 34456 ;; Auto vars:     Size  Location     Type
 34457 ;;		None
 34458 ;; Return value:  Size  Location     Type
 34459 ;;                  1    wreg      void 
 34460 ;; Registers used:
 34461 ;;		wreg, status,2, status,0, cstack
 34462 ;; Tracked objects:
 34463 ;;		On entry : 0/0
 34464 ;;		On exit  : 0/0
 34465 ;;		Unchanged: 0/0
 34466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34469 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34470 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34471 ;;Total ram usage:        4 bytes
 34472 ;; Hardware stack levels used: 1
 34473 ;; Hardware stack levels required when called: 13
 34474 ;; This function calls:
 34475 ;;		___awdiv
 34476 ;;		_tickGet
 34477 ;; This function is called by:
 34478 ;;		_pbDownTimer
 34479 ;;		_pbUpTimer
 34480 ;;		_poll
 34481 ;; This function uses a non-reentrant model
 34482 ;;
 34483                           
 34484                           	psect	text136
 34485   00610E                     __ptext136:
 34486                           	callstack 0
 34487   00610E                     _leds_poll:
 34488                           	callstack 16
 34489                           
 34490                           ;../../VLCBlib_PIC/statusLeds2.c: 89:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 34491                           
 34492                           ; BSR set to: 0
 34493                           ;incstack = 0
 34494   00610E  ECED  F059         	call	_tickGet	;wreg free
 34495   006112  0101               	movlb	1	; () banked
 34496   006114  5160               	movf	_ledTimer& (0+255),w,b
 34497   006116  0100               	movlb	0	; () banked
 34498   006118  5D8D               	subwf	?_tickGet& (0+255),w,b
 34499   00611A  6F9F               	movwf	??_leds_poll& (0+255),b
 34500   00611C  0101               	movlb	1	; () banked
 34501   00611E  5161               	movf	(_ledTimer+1)& (0+255),w,b
 34502   006120  0100               	movlb	0	; () banked
 34503   006122  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 34504   006124  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 34505   006126  0101               	movlb	1	; () banked
 34506   006128  5162               	movf	(_ledTimer+2)& (0+255),w,b
 34507   00612A  0100               	movlb	0	; () banked
 34508   00612C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 34509   00612E  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 34510   006130  0101               	movlb	1	; () banked
 34511   006132  5163               	movf	(_ledTimer+3)& (0+255),w,b
 34512   006134  0100               	movlb	0	; () banked
 34513   006136  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 34514   006138  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 34515   00613A  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 34516   00613C  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 34517   00613E  E106               	bnz	u22650
 34518   006140  0E72               	movlw	114
 34519   006142  5D9F               	subwf	??_leds_poll& (0+255),w,b
 34520   006144  0E02               	movlw	2
 34521   006146  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 34522   006148  A0D8               	btfss	status,0,c
 34523   00614A  D06B               	goto	l21532
 34524   00614C                     u22650:
 34525                           
 34526                           ; BSR set to: 0
 34527                           ;../../VLCBlib_PIC/statusLeds2.c: 90:         flashCounter[0]++;
 34528   00614C  2BB0               	incf	_flashCounter& (0+255),f,b
 34529                           
 34530                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[1]++;
 34531   00614E  2BB1               	incf	(_flashCounter+1)& (0+255),f,b
 34532                           
 34533                           ; BSR set to: 0
 34534                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         ledTimer.val = tickGet();
 34535   006150  ECED  F059         	call	_tickGet	;wreg free
 34536   006154  C08D  F160         	movff	?_tickGet,_ledTimer
 34537   006158  C08E  F161         	movff	?_tickGet+1,_ledTimer+1
 34538   00615C  C08F  F162         	movff	?_tickGet+2,_ledTimer+2
 34539   006160  C090  F163         	movff	?_tickGet+3,_ledTimer+3
 34540   006164  D05E               	goto	l21532
 34541   006166                     l2140:
 34542                           
 34543                           ; BSR set to: 0
 34544                           ;../../VLCBlib_PIC/statusLeds2.c: 97:             (LATBbits.LATB6=1);
 34545   006166  8C8A               	bsf	138,6,c	;volatile
 34546   006168                     l21488:
 34547                           
 34548                           ; BSR set to: 0
 34549                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             flashCounter[1] = 0;
 34550   006168  0E00               	movlw	0
 34551   00616A  6FB1               	movwf	(_flashCounter+1)& (0+255),b
 34552                           
 34553                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             break;
 34554   00616C  D0E0               	goto	l21578
 34555   00616E                     l2142:
 34556                           
 34557                           ; BSR set to: 0
 34558                           ;../../VLCBlib_PIC/statusLeds2.c: 101:             (LATBbits.LATB6=0);
 34559   00616E  9C8A               	bcf	138,6,c	;volatile
 34560   006170  D7FB               	goto	l21488
 34561   006172                     l21492:
 34562                           
 34563                           ; BSR set to: 0
 34564                           ;../../VLCBlib_PIC/statusLeds2.c: 106:             (LATBbits.LATB6=flashCounter[1]/25);
 34565   006172  C0B1  F097         	movff	_flashCounter+1,___awdiv@dividend
 34566   006176  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34567   006178  0E00               	movlw	0
 34568   00617A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34569   00617C  0E19               	movlw	25
 34570   00617E  6F99               	movwf	___awdiv@divisor& (0+255),b
 34571   006180  ECCE  F052         	call	___awdiv	;wreg free
 34572   006184  0100               	movlb	0	; () banked
 34573   006186  3B97               	swapf	?___awdiv& (0+255),f,b
 34574   006188  4797               	rlncf	?___awdiv& (0+255),f,b
 34575   00618A  4797               	rlncf	?___awdiv& (0+255),f,b
 34576   00618C  508A               	movf	138,w,c	;volatile
 34577   00618E  1997               	xorwf	?___awdiv& (0+255),w,b
 34578   006190  0BBF               	andlw	-65
 34579   006192  1997               	xorwf	?___awdiv& (0+255),w,b
 34580   006194  6E8A               	movwf	138,c	;volatile
 34581                           
 34582                           ; BSR set to: 0
 34583                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             if (flashCounter[1] >= 50) {
 34584   006196  0E31               	movlw	49
 34585   006198                     L17:
 34586   006198  65B1               	cpfsgt	(_flashCounter+1)& (0+255),b
 34587   00619A  D0C9               	goto	l21578
 34588   00619C  D7E5               	goto	l21488
 34589   00619E                     l21498:
 34590                           
 34591                           ; BSR set to: 0
 34592                           ;../../VLCBlib_PIC/statusLeds2.c: 113:             (LATBbits.LATB6=flashCounter[1]/50);
 34593   00619E  C0B1  F097         	movff	_flashCounter+1,___awdiv@dividend
 34594   0061A2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34595   0061A4  0E00               	movlw	0
 34596   0061A6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34597   0061A8  0E32               	movlw	50
 34598   0061AA  6F99               	movwf	___awdiv@divisor& (0+255),b
 34599   0061AC  ECCE  F052         	call	___awdiv	;wreg free
 34600   0061B0  0100               	movlb	0	; () banked
 34601   0061B2  3B97               	swapf	?___awdiv& (0+255),f,b
 34602   0061B4  4797               	rlncf	?___awdiv& (0+255),f,b
 34603   0061B6  4797               	rlncf	?___awdiv& (0+255),f,b
 34604   0061B8  508A               	movf	138,w,c	;volatile
 34605   0061BA  1997               	xorwf	?___awdiv& (0+255),w,b
 34606   0061BC  0BBF               	andlw	-65
 34607   0061BE  1997               	xorwf	?___awdiv& (0+255),w,b
 34608   0061C0  6E8A               	movwf	138,c	;volatile
 34609                           
 34610                           ; BSR set to: 0
 34611                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             if (flashCounter[1] >= 100) {
 34612   0061C2  0E63               	movlw	99
 34613   0061C4  D7E9               	goto	L17
 34614   0061C6                     l21504:
 34615                           
 34616                           ; BSR set to: 0
 34617                           ;../../VLCBlib_PIC/statusLeds2.c: 119:             (LATBbits.LATB6=flashCounter[1]/100);
 34618   0061C6  C0B1  F097         	movff	_flashCounter+1,___awdiv@dividend
 34619   0061CA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34620   0061CC  0E00               	movlw	0
 34621   0061CE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34622   0061D0  0E64               	movlw	100
 34623   0061D2  6F99               	movwf	___awdiv@divisor& (0+255),b
 34624   0061D4  ECCE  F052         	call	___awdiv	;wreg free
 34625   0061D8  0100               	movlb	0	; () banked
 34626   0061DA  3B97               	swapf	?___awdiv& (0+255),f,b
 34627   0061DC  4797               	rlncf	?___awdiv& (0+255),f,b
 34628   0061DE  4797               	rlncf	?___awdiv& (0+255),f,b
 34629   0061E0  508A               	movf	138,w,c	;volatile
 34630   0061E2  1997               	xorwf	?___awdiv& (0+255),w,b
 34631   0061E4  0BBF               	andlw	-65
 34632   0061E6  1997               	xorwf	?___awdiv& (0+255),w,b
 34633   0061E8  6E8A               	movwf	138,c	;volatile
 34634                           
 34635                           ; BSR set to: 0
 34636                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             if (flashCounter[1] >= 200) {
 34637   0061EA  0EC7               	movlw	199
 34638   0061EC  D7D5               	goto	L17
 34639   0061EE                     l2149:
 34640                           
 34641                           ; BSR set to: 0
 34642                           ;../../VLCBlib_PIC/statusLeds2.c: 125:             (LATBbits.LATB6=1);
 34643   0061EE  8C8A               	bsf	138,6,c	;volatile
 34644                           
 34645                           ; BSR set to: 0
 34646                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             if (flashCounter[1] >= 25) {
 34647   0061F0  0E18               	movlw	24
 34648   0061F2  65B1               	cpfsgt	(_flashCounter+1)& (0+255),b
 34649   0061F4  D09C               	goto	l21578
 34650                           
 34651                           ; BSR set to: 0
 34652                           ;../../VLCBlib_PIC/statusLeds2.c: 127:                 flashCounter[1] = 0;
 34653   0061F6  0E00               	movlw	0
 34654   0061F8  6FB1               	movwf	(_flashCounter+1)& (0+255),b
 34655                           
 34656                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 ledState[1] = LED_OFF;
 34657   0061FA  0E00               	movlw	0
 34658   0061FC  D007               	goto	L18
 34659   0061FE                     l2151:
 34660                           
 34661                           ; BSR set to: 0
 34662                           ;../../VLCBlib_PIC/statusLeds2.c: 132:             (LATBbits.LATB6=0);
 34663   0061FE  9C8A               	bcf	138,6,c	;volatile
 34664                           
 34665                           ; BSR set to: 0
 34666                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             if (flashCounter[1] >= 25) {
 34667   006200  0E18               	movlw	24
 34668   006202  65B1               	cpfsgt	(_flashCounter+1)& (0+255),b
 34669   006204  D094               	goto	l21578
 34670                           
 34671                           ; BSR set to: 0
 34672                           ;../../VLCBlib_PIC/statusLeds2.c: 134:                 flashCounter[1] = 0;
 34673   006206  0E00               	movlw	0
 34674   006208  6FB1               	movwf	(_flashCounter+1)& (0+255),b
 34675                           
 34676                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 ledState[1] = LED_ON;
 34677   00620A  0E01               	movlw	1
 34678   00620C                     L18:
 34679   00620C  6FB3               	movwf	(_ledState+1)& (0+255),b
 34680   00620E  D08F               	goto	l21578
 34681   006210                     l2153:
 34682                           
 34683                           ; BSR set to: 0
 34684                           ;../../VLCBlib_PIC/statusLeds2.c: 139:             (LATBbits.LATB6=1);
 34685   006210  8C8A               	bsf	138,6,c	;volatile
 34686                           
 34687                           ; BSR set to: 0
 34688                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             if (flashCounter[1] >= 50) {
 34689   006212  0E31               	movlw	49
 34690   006214  D7EE               	goto	L21
 34691   006216                     l2155:
 34692                           
 34693                           ; BSR set to: 0
 34694                           ;../../VLCBlib_PIC/statusLeds2.c: 146:             (LATBbits.LATB6=0);
 34695   006216  9C8A               	bcf	138,6,c	;volatile
 34696                           
 34697                           ; BSR set to: 0
 34698                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             if (flashCounter[1] >= 50) {
 34699   006218  0E31               	movlw	49
 34700   00621A  D7F3               	goto	L22
 34701   00621C                     l2157:
 34702                           
 34703                           ; BSR set to: 0
 34704                           ;../../VLCBlib_PIC/statusLeds2.c: 153:             (LATBbits.LATB6=0);
 34705   00621C  9C8A               	bcf	138,6,c	;volatile
 34706                           
 34707                           ; BSR set to: 0
 34708                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             if (flashCounter[1] >= 100) {
 34709   00621E  0E63               	movlw	99
 34710   006220  D7F0               	goto	L22
 34711   006222                     l21532:
 34712   006222  0100               	movlb	0	; () banked
 34713   006224  51B3               	movf	(_ledState+1)& (0+255),w,b
 34714   006226  6F9F               	movwf	??_leds_poll& (0+255),b
 34715   006228  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 34716                           
 34717                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34718                           ; Switch size 1, requested type "simple"
 34719                           ; Number of cases is 1, Range of values is 0 to 0
 34720                           ; switch strategies available:
 34721                           ; Name         Instructions Cycles
 34722                           ; simple_byte            4     3 (average)
 34723                           ;	Chosen strategy is simple_byte
 34724   00622A  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 34725   00622C  0A00               	xorlw	0	; case 0
 34726   00622E  A4D8               	btfss	status,2,c
 34727   006230  D07E               	goto	l21578
 34728                           
 34729                           ; BSR set to: 0
 34730                           ; Switch size 1, requested type "simple"
 34731                           ; Number of cases is 10, Range of values is 0 to 9
 34732                           ; switch strategies available:
 34733                           ; Name         Instructions Cycles
 34734                           ; simple_byte           31    16 (average)
 34735                           ;	Chosen strategy is simple_byte
 34736   006232  519F               	movf	??_leds_poll& (0+255),w,b
 34737   006234  0A00               	xorlw	0	; case 0
 34738   006236  B4D8               	btfsc	status,2,c
 34739   006238  D79A               	goto	l2142
 34740   00623A  0A01               	xorlw	1	; case 1
 34741   00623C  B4D8               	btfsc	status,2,c
 34742   00623E  D793               	goto	l2140
 34743   006240  0A03               	xorlw	3	; case 2
 34744   006242  B4D8               	btfsc	status,2,c
 34745   006244  D796               	goto	l21492
 34746   006246  0A01               	xorlw	1	; case 3
 34747   006248  B4D8               	btfsc	status,2,c
 34748   00624A  D7A9               	goto	l21498
 34749   00624C  0A07               	xorlw	7	; case 4
 34750   00624E  B4D8               	btfsc	status,2,c
 34751   006250  D7BA               	goto	l21504
 34752   006252  0A01               	xorlw	1	; case 5
 34753   006254  B4D8               	btfsc	status,2,c
 34754   006256  D7D3               	goto	l2151
 34755   006258  0A03               	xorlw	3	; case 6
 34756   00625A  B4D8               	btfsc	status,2,c
 34757   00625C  D7C8               	goto	l2149
 34758   00625E  0A01               	xorlw	1	; case 7
 34759   006260  B4D8               	btfsc	status,2,c
 34760   006262  D7D9               	goto	l2155
 34761   006264  0A0F               	xorlw	15	; case 8
 34762   006266  B4D8               	btfsc	status,2,c
 34763   006268  D7D3               	goto	l2153
 34764   00626A  0A01               	xorlw	1	; case 9
 34765   00626C  B4D8               	btfsc	status,2,c
 34766   00626E  D7D6               	goto	l2157
 34767   006270  D05E               	goto	l21578
 34768   006272                     l2160:
 34769                           
 34770                           ; BSR set to: 0
 34771                           ;../../VLCBlib_PIC/statusLeds2.c: 163:             (LATBbits.LATB7=1);
 34772   006272  8E8A               	bsf	138,7,c	;volatile
 34773   006274                     l21534:
 34774                           
 34775                           ; BSR set to: 0
 34776                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             flashCounter[0] = 0;
 34777   006274  0E00               	movlw	0
 34778   006276  6FB0               	movwf	_flashCounter& (0+255),b
 34779                           
 34780                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             break;
 34781   006278  0012               	return	
 34782   00627A                     l2162:
 34783                           
 34784                           ; BSR set to: 0
 34785                           ;../../VLCBlib_PIC/statusLeds2.c: 167:             (LATBbits.LATB7=0);
 34786   00627A  9E8A               	bcf	138,7,c	;volatile
 34787   00627C  D7FB               	goto	l21534
 34788   00627E                     l21538:
 34789                           
 34790                           ; BSR set to: 0
 34791                           ;../../VLCBlib_PIC/statusLeds2.c: 172:             (LATBbits.LATB7=flashCounter[0]/25);
 34792   00627E  C0B0  F097         	movff	_flashCounter,___awdiv@dividend
 34793   006282  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34794   006284  0E00               	movlw	0
 34795   006286  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34796   006288  0E19               	movlw	25
 34797   00628A  6F99               	movwf	___awdiv@divisor& (0+255),b
 34798   00628C  ECCE  F052         	call	___awdiv	;wreg free
 34799   006290  0100               	movlb	0	; () banked
 34800   006292  3397               	rrcf	?___awdiv& (0+255),f,b
 34801   006294  3397               	rrcf	?___awdiv& (0+255),f,b
 34802   006296  508A               	movf	138,w,c	;volatile
 34803   006298  1997               	xorwf	?___awdiv& (0+255),w,b
 34804   00629A  0B7F               	andlw	-129
 34805   00629C  1997               	xorwf	?___awdiv& (0+255),w,b
 34806   00629E  6E8A               	movwf	138,c	;volatile
 34807                           
 34808                           ; BSR set to: 0
 34809                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             if (flashCounter[0] >= 50) {
 34810   0062A0  0E31               	movlw	49
 34811   0062A2                     L20:
 34812   0062A2  65B0               	cpfsgt	_flashCounter& (0+255),b
 34813   0062A4  0012               	return	
 34814   0062A6  D7E6               	goto	l21534
 34815   0062A8                     l21544:
 34816                           
 34817                           ; BSR set to: 0
 34818                           ;../../VLCBlib_PIC/statusLeds2.c: 179:             (LATBbits.LATB7=flashCounter[0]/50);
 34819   0062A8  C0B0  F097         	movff	_flashCounter,___awdiv@dividend
 34820   0062AC  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34821   0062AE  0E00               	movlw	0
 34822   0062B0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34823   0062B2  0E32               	movlw	50
 34824   0062B4  6F99               	movwf	___awdiv@divisor& (0+255),b
 34825   0062B6  ECCE  F052         	call	___awdiv	;wreg free
 34826   0062BA  0100               	movlb	0	; () banked
 34827   0062BC  3397               	rrcf	?___awdiv& (0+255),f,b
 34828   0062BE  3397               	rrcf	?___awdiv& (0+255),f,b
 34829   0062C0  508A               	movf	138,w,c	;volatile
 34830   0062C2  1997               	xorwf	?___awdiv& (0+255),w,b
 34831   0062C4  0B7F               	andlw	-129
 34832   0062C6  1997               	xorwf	?___awdiv& (0+255),w,b
 34833   0062C8  6E8A               	movwf	138,c	;volatile
 34834                           
 34835                           ; BSR set to: 0
 34836                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             if (flashCounter[0] >= 100) {
 34837   0062CA  0E63               	movlw	99
 34838   0062CC  D7EA               	goto	L20
 34839   0062CE                     l21550:
 34840                           
 34841                           ; BSR set to: 0
 34842                           ;../../VLCBlib_PIC/statusLeds2.c: 185:             (LATBbits.LATB7=flashCounter[0]/100);
 34843   0062CE  C0B0  F097         	movff	_flashCounter,___awdiv@dividend
 34844   0062D2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 34845   0062D4  0E00               	movlw	0
 34846   0062D6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 34847   0062D8  0E64               	movlw	100
 34848   0062DA  6F99               	movwf	___awdiv@divisor& (0+255),b
 34849   0062DC  ECCE  F052         	call	___awdiv	;wreg free
 34850   0062E0  0100               	movlb	0	; () banked
 34851   0062E2  3397               	rrcf	?___awdiv& (0+255),f,b
 34852   0062E4  3397               	rrcf	?___awdiv& (0+255),f,b
 34853   0062E6  508A               	movf	138,w,c	;volatile
 34854   0062E8  1997               	xorwf	?___awdiv& (0+255),w,b
 34855   0062EA  0B7F               	andlw	-129
 34856   0062EC  1997               	xorwf	?___awdiv& (0+255),w,b
 34857   0062EE  6E8A               	movwf	138,c	;volatile
 34858                           
 34859                           ; BSR set to: 0
 34860                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             if (flashCounter[0] >= 200) {
 34861   0062F0  0EC7               	movlw	199
 34862   0062F2  D7D7               	goto	L20
 34863   0062F4                     l2169:
 34864                           
 34865                           ; BSR set to: 0
 34866                           ;../../VLCBlib_PIC/statusLeds2.c: 191:             (LATBbits.LATB7=1);
 34867   0062F4  8E8A               	bsf	138,7,c	;volatile
 34868                           
 34869                           ; BSR set to: 0
 34870                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             if (flashCounter[0] >= 25) {
 34871   0062F6  0E18               	movlw	24
 34872   0062F8  D00F               	goto	L24
 34873   0062FA                     u22770:
 34874                           
 34875                           ; BSR set to: 0
 34876                           ;../../VLCBlib_PIC/statusLeds2.c: 193:                 flashCounter[0] = 0;
 34877   0062FA  0E00               	movlw	0
 34878   0062FC  6FB0               	movwf	_flashCounter& (0+255),b
 34879                           
 34880                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 ledState[0] = LED_OFF;
 34881   0062FE  0E00               	movlw	0
 34882   006300  6FB2               	movwf	_ledState& (0+255),b
 34883   006302  0012               	return	
 34884   006304                     l2171:
 34885                           
 34886                           ; BSR set to: 0
 34887                           ;../../VLCBlib_PIC/statusLeds2.c: 198:             (LATBbits.LATB7=0);
 34888   006304  9E8A               	bcf	138,7,c	;volatile
 34889                           
 34890                           ; BSR set to: 0
 34891                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             if (flashCounter[0] >= 25) {
 34892   006306  0E18               	movlw	24
 34893   006308  D00C               	goto	L23
 34894   00630A                     u22780:
 34895                           
 34896                           ; BSR set to: 0
 34897                           ;../../VLCBlib_PIC/statusLeds2.c: 200:                 flashCounter[0] = 0;
 34898   00630A  0E00               	movlw	0
 34899   00630C  6FB0               	movwf	_flashCounter& (0+255),b
 34900                           
 34901                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 ledState[0] = LED_ON;
 34902   00630E  0E01               	movlw	1
 34903   006310  6FB2               	movwf	_ledState& (0+255),b
 34904   006312  0012               	return	
 34905   006314                     l2173:
 34906                           
 34907                           ; BSR set to: 0
 34908                           ;../../VLCBlib_PIC/statusLeds2.c: 205:             (LATBbits.LATB7=1);
 34909   006314  8E8A               	bsf	138,7,c	;volatile
 34910                           
 34911                           ; BSR set to: 0
 34912                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             if (flashCounter[0] >= 50) {
 34913   006316  0E31               	movlw	49
 34914   006318                     L24:
 34915   006318  65B0               	cpfsgt	_flashCounter& (0+255),b
 34916   00631A  0012               	return	
 34917   00631C  D7EE               	goto	u22770
 34918   00631E                     l2175:
 34919                           
 34920                           ; BSR set to: 0
 34921                           ;../../VLCBlib_PIC/statusLeds2.c: 212:             (LATBbits.LATB7=0);
 34922   00631E  9E8A               	bcf	138,7,c	;volatile
 34923                           
 34924                           ; BSR set to: 0
 34925                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             if (flashCounter[0] >= 50) {
 34926   006320  0E31               	movlw	49
 34927   006322                     L23:
 34928   006322  65B0               	cpfsgt	_flashCounter& (0+255),b
 34929   006324  0012               	return	
 34930   006326  D7F1               	goto	u22780
 34931   006328                     l2177:
 34932                           
 34933                           ; BSR set to: 0
 34934                           ;../../VLCBlib_PIC/statusLeds2.c: 219:             (LATBbits.LATB7=0);
 34935   006328  9E8A               	bcf	138,7,c	;volatile
 34936                           
 34937                           ; BSR set to: 0
 34938                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             if (flashCounter[0] >= 100) {
 34939   00632A  0E63               	movlw	99
 34940   00632C  D7FA               	goto	L23
 34941   00632E                     l21578:
 34942                           
 34943                           ; BSR set to: 0
 34944   00632E  51B2               	movf	_ledState& (0+255),w,b
 34945   006330  6F9F               	movwf	??_leds_poll& (0+255),b
 34946   006332  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 34947                           
 34948                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34949                           ; Switch size 1, requested type "simple"
 34950                           ; Number of cases is 1, Range of values is 0 to 0
 34951                           ; switch strategies available:
 34952                           ; Name         Instructions Cycles
 34953                           ; simple_byte            4     3 (average)
 34954                           ;	Chosen strategy is simple_byte
 34955   006334  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 34956   006336  0A00               	xorlw	0	; case 0
 34957   006338  A4D8               	btfss	status,2,c
 34958   00633A  0012               	return	
 34959                           
 34960                           ; BSR set to: 0
 34961                           ; Switch size 1, requested type "simple"
 34962                           ; Number of cases is 10, Range of values is 0 to 9
 34963                           ; switch strategies available:
 34964                           ; Name         Instructions Cycles
 34965                           ; simple_byte           31    16 (average)
 34966                           ;	Chosen strategy is simple_byte
 34967   00633C  519F               	movf	??_leds_poll& (0+255),w,b
 34968   00633E  0A00               	xorlw	0	; case 0
 34969   006340  B4D8               	btfsc	status,2,c
 34970   006342  D79B               	goto	l2162
 34971   006344  0A01               	xorlw	1	; case 1
 34972   006346  B4D8               	btfsc	status,2,c
 34973   006348  D794               	goto	l2160
 34974   00634A  0A03               	xorlw	3	; case 2
 34975   00634C  B4D8               	btfsc	status,2,c
 34976   00634E  D797               	goto	l21538
 34977   006350  0A01               	xorlw	1	; case 3
 34978   006352  B4D8               	btfsc	status,2,c
 34979   006354  D7A9               	goto	l21544
 34980   006356  0A07               	xorlw	7	; case 4
 34981   006358  B4D8               	btfsc	status,2,c
 34982   00635A  D7B9               	goto	l21550
 34983   00635C  0A01               	xorlw	1	; case 5
 34984   00635E  B4D8               	btfsc	status,2,c
 34985   006360  D7D1               	goto	l2171
 34986   006362  0A03               	xorlw	3	; case 6
 34987   006364  B4D8               	btfsc	status,2,c
 34988   006366  D7C6               	goto	l2169
 34989   006368  0A01               	xorlw	1	; case 7
 34990   00636A  B4D8               	btfsc	status,2,c
 34991   00636C  D7D8               	goto	l2175
 34992   00636E  0A0F               	xorlw	15	; case 8
 34993   006370  B4D8               	btfsc	status,2,c
 34994   006372  D7D0               	goto	l2173
 34995   006374  0A01               	xorlw	1	; case 9
 34996   006376  A4D8               	btfss	status,2,c
 34997   006378  0012               	return	
 34998   00637A  D7D6               	goto	l2177
 34999   00637C                     __end_of_leds_poll:
 35000                           	callstack 0
 35001                           
 35002 ;; *************** function _tickGet *****************
 35003 ;; Defined at:
 35004 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 35005 ;; Parameters:    Size  Location     Type
 35006 ;;		None
 35007 ;; Auto vars:     Size  Location     Type
 35008 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 35009 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 35010 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 35011 ;; Return value:  Size  Location     Type
 35012 ;;                  4   45[BANK0 ] unsigned long 
 35013 ;; Registers used:
 35014 ;;		wreg, status,2, status,0
 35015 ;; Tracked objects:
 35016 ;;		On entry : 0/0
 35017 ;;		On exit  : 0/0
 35018 ;;		Unchanged: 0/0
 35019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35021 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35023 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35024 ;;Total ram usage:       10 bytes
 35025 ;; Hardware stack levels used: 1
 35026 ;; Hardware stack levels required when called: 12
 35027 ;; This function calls:
 35028 ;;		Nothing
 35029 ;; This function is called by:
 35030 ;;		_setup
 35031 ;;		_loop
 35032 ;;		_doWait
 35033 ;;		_initServos
 35034 ;;		_pollServos
 35035 ;;		_mnsPowerUp
 35036 ;;		_mnsPoll
 35037 ;;		_leds_powerUp
 35038 ;;		_leds_poll
 35039 ;;		_pbDownTimer
 35040 ;;		_pbUpTimer
 35041 ;;		_poll
 35042 ;;		_canPowerUp
 35043 ;;		_handleSelfEnumeration
 35044 ;;		_processEnumeration
 35045 ;; This function uses a non-reentrant model
 35046 ;;
 35047                           
 35048                           	psect	text137
 35049   00B3DA                     __ptext137:
 35050                           	callstack 0
 35051   00B3DA                     _tickGet:
 35052                           	callstack 17
 35053                           
 35054                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 35055                           
 35056                           ; BSR set to: 0
 35057                           ;incstack = 0
 35058   00B3DA  0E00               	movlw	0
 35059   00B3DC  0100               	movlb	0	; () banked
 35060   00B3DE  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 35061                           
 35062                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 35063   00B3E0  0E00               	movlw	0
 35064   00B3E2  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 35065                           
 35066                           ; BSR set to: 0
 35067                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 35068   00B3E4  9AF2               	bcf	242,5,c	;volatile
 35069   00B3E6                     l19570:
 35070                           
 35071                           ; BSR set to: 0
 35072                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 35073   00B3E6  0E00               	movlw	0
 35074   00B3E8  B4F2               	btfsc	242,2,c	;volatile
 35075   00B3EA  0E01               	movlw	1
 35076   00B3EC  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 35077                           
 35078                           ; BSR set to: 0
 35079                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 35080   00B3EE  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 35081                           
 35082                           ; BSR set to: 0
 35083                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 35084   00B3F2  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 35085                           
 35086                           ; BSR set to: 0
 35087                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 35088   00B3F6  0E00               	movlw	0
 35089   00B3F8  B4F2               	btfsc	242,2,c	;volatile
 35090   00B3FA  0E01               	movlw	1
 35091   00B3FC  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 35092                           
 35093                           ; BSR set to: 0
 35094                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 35095   00B3FE  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 35096   00B400  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 35097   00B402  A4D8               	btfss	status,2,c
 35098   00B404  D7F0               	goto	l19570
 35099                           
 35100                           ; BSR set to: 0
 35101                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 35102   00B406  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 35103   00B408  B4D8               	btfsc	status,2,c
 35104   00B40A  D005               	goto	l19590
 35105                           
 35106                           ; BSR set to: 0
 35107                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 35108   00B40C  94F2               	bcf	242,2,c	;volatile
 35109                           
 35110                           ; BSR set to: 0
 35111                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 35112   00B40E  2BC4               	incf	_timerExtension1& (0+255),f,b	;volatile
 35113                           
 35114                           ; BSR set to: 0
 35115                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 35116   00B410  51C4               	movf	_timerExtension1& (0+255),w,b	;volatile
 35117   00B412  B4D8               	btfsc	status,2,c
 35118                           
 35119                           ; BSR set to: 0
 35120                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 35121   00B414  2BC3               	incf	_timerExtension2& (0+255),f,b	;volatile
 35122   00B416                     l19590:
 35123                           
 35124                           ; BSR set to: 0
 35125                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 35126   00B416  51C4               	movf	_timerExtension1& (0+255),w,b	;volatile
 35127   00B418  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 35128                           
 35129                           ; BSR set to: 0
 35130                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 35131   00B41A  51C3               	movf	_timerExtension2& (0+255),w,b	;volatile
 35132   00B41C  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 35133                           
 35134                           ; BSR set to: 0
 35135                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 35136   00B41E  8AF2               	bsf	242,5,c	;volatile
 35137                           
 35138                           ; BSR set to: 0
 35139                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 35140   00B420  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 35141   00B424  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 35142   00B428  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 35143   00B42C  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 35144                           
 35145                           ; BSR set to: 0
 35146   00B430  0012               	return		;funcret
 35147   00B432                     __end_of_tickGet:
 35148                           	callstack 0
 35149                           
 35150 ;; *************** function ___lmul *****************
 35151 ;; Defined at:
 35152 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 35153 ;; Parameters:    Size  Location     Type
 35154 ;;  multiplier      4   49[BANK0 ] unsigned long 
 35155 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 35156 ;; Auto vars:     Size  Location     Type
 35157 ;;  product         4   57[BANK0 ] unsigned long 
 35158 ;; Return value:  Size  Location     Type
 35159 ;;                  4   49[BANK0 ] unsigned long 
 35160 ;; Registers used:
 35161 ;;		wreg, status,2, status,0
 35162 ;; Tracked objects:
 35163 ;;		On entry : 0/0
 35164 ;;		On exit  : 0/0
 35165 ;;		Unchanged: 0/0
 35166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35167 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35168 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35170 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35171 ;;Total ram usage:       12 bytes
 35172 ;; Hardware stack levels used: 1
 35173 ;; Hardware stack levels required when called: 12
 35174 ;; This function calls:
 35175 ;;		Nothing
 35176 ;; This function is called by:
 35177 ;;		_loop
 35178 ;;		_doWait
 35179 ;;		_pbDownTimer
 35180 ;;		_pbUpTimer
 35181 ;;		_poll
 35182 ;; This function uses a non-reentrant model
 35183 ;;
 35184                           
 35185                           	psect	text138
 35186   00B432                     __ptext138:
 35187                           	callstack 0
 35188   00B432                     ___lmul:
 35189                           	callstack 17
 35190                           
 35191                           ; BSR set to: 0
 35192                           ;incstack = 0
 35193   00B432  0E00               	movlw	0
 35194   00B434  0100               	movlb	0	; () banked
 35195   00B436  6F99               	movwf	___lmul@product& (0+255),b
 35196   00B438  0E00               	movlw	0
 35197   00B43A  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 35198   00B43C  0E00               	movlw	0
 35199   00B43E  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 35200   00B440  0E00               	movlw	0
 35201   00B442  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 35202   00B444                     l20392:
 35203                           
 35204                           ; BSR set to: 0
 35205   00B444  A191               	btfss	___lmul@multiplier& (0+255),0,b
 35206   00B446  D008               	goto	l20396
 35207                           
 35208                           ; BSR set to: 0
 35209   00B448  5195               	movf	___lmul@multiplicand& (0+255),w,b
 35210   00B44A  2799               	addwf	___lmul@product& (0+255),f,b
 35211   00B44C  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 35212   00B44E  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 35213   00B450  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 35214   00B452  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 35215   00B454  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 35216   00B456  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 35217   00B458                     l20396:
 35218                           
 35219                           ; BSR set to: 0
 35220   00B458  90D8               	bcf	status,0,c
 35221   00B45A  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 35222   00B45C  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 35223   00B45E  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 35224   00B460  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 35225                           
 35226                           ; BSR set to: 0
 35227   00B462  90D8               	bcf	status,0,c
 35228   00B464  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 35229   00B466  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 35230   00B468  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 35231   00B46A  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 35232   00B46C  5191               	movf	___lmul@multiplier& (0+255),w,b
 35233   00B46E  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 35234   00B470  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 35235   00B472  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 35236   00B474  A4D8               	btfss	status,2,c
 35237   00B476  D7E6               	goto	l20392
 35238                           
 35239                           ; BSR set to: 0
 35240   00B478  C099  F091         	movff	___lmul@product,?___lmul
 35241   00B47C  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 35242   00B480  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 35243   00B484  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 35244                           
 35245                           ; BSR set to: 0
 35246   00B488  0012               	return		;funcret
 35247   00B48A                     __end_of___lmul:
 35248                           	callstack 0
 35249                           
 35250 ;; *************** function ___lldiv *****************
 35251 ;; Defined at:
 35252 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 35253 ;; Parameters:    Size  Location     Type
 35254 ;;  dividend        4   55[BANK0 ] unsigned long 
 35255 ;;  divisor         4   59[BANK0 ] unsigned long 
 35256 ;; Auto vars:     Size  Location     Type
 35257 ;;  quotient        4   63[BANK0 ] unsigned long 
 35258 ;;  counter         1   67[BANK0 ] unsigned char 
 35259 ;; Return value:  Size  Location     Type
 35260 ;;                  4   55[BANK0 ] unsigned long 
 35261 ;; Registers used:
 35262 ;;		wreg, status,2, status,0
 35263 ;; Tracked objects:
 35264 ;;		On entry : 0/0
 35265 ;;		On exit  : 0/0
 35266 ;;		Unchanged: 0/0
 35267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35268 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35269 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35271 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35272 ;;Total ram usage:       13 bytes
 35273 ;; Hardware stack levels used: 1
 35274 ;; Hardware stack levels required when called: 12
 35275 ;; This function calls:
 35276 ;;		Nothing
 35277 ;; This function is called by:
 35278 ;;		_pbDownTimer
 35279 ;;		_pbUpTimer
 35280 ;; This function uses a non-reentrant model
 35281 ;;
 35282                           
 35283                           	psect	text139
 35284   00A6A8                     __ptext139:
 35285                           	callstack 0
 35286   00A6A8                     ___lldiv:
 35287                           	callstack 16
 35288                           
 35289                           ; BSR set to: 0
 35290                           ;incstack = 0
 35291   00A6A8  0E00               	movlw	0
 35292   00A6AA  0100               	movlb	0	; () banked
 35293   00A6AC  6F9F               	movwf	___lldiv@quotient& (0+255),b
 35294   00A6AE  0E00               	movlw	0
 35295   00A6B0  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 35296   00A6B2  0E00               	movlw	0
 35297   00A6B4  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 35298   00A6B6  0E00               	movlw	0
 35299   00A6B8  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 35300                           
 35301                           ; BSR set to: 0
 35302   00A6BA  519B               	movf	___lldiv@divisor& (0+255),w,b
 35303   00A6BC  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35304   00A6BE  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35305   00A6C0  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35306   00A6C2  B4D8               	btfsc	status,2,c
 35307   00A6C4  D02A               	goto	l3020
 35308                           
 35309                           ; BSR set to: 0
 35310   00A6C6  0E01               	movlw	1
 35311   00A6C8  6FA3               	movwf	___lldiv@counter& (0+255),b
 35312   00A6CA  D006               	goto	l14862
 35313   00A6CC                     l14860:
 35314                           
 35315                           ; BSR set to: 0
 35316   00A6CC  90D8               	bcf	status,0,c
 35317   00A6CE  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 35318   00A6D0  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35319   00A6D2  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35320   00A6D4  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35321   00A6D6  2BA3               	incf	___lldiv@counter& (0+255),f,b
 35322   00A6D8                     l14862:
 35323                           
 35324                           ; BSR set to: 0
 35325   00A6D8  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35326   00A6DA  D7F8               	goto	l14860
 35327   00A6DC                     u14520:
 35328                           
 35329                           ; BSR set to: 0
 35330   00A6DC  90D8               	bcf	status,0,c
 35331   00A6DE  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 35332   00A6E0  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35333   00A6E2  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35334   00A6E4  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35335                           
 35336                           ; BSR set to: 0
 35337   00A6E6  519B               	movf	___lldiv@divisor& (0+255),w,b
 35338   00A6E8  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 35339   00A6EA  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35340   00A6EC  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35341   00A6EE  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35342   00A6F0  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35343   00A6F2  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35344   00A6F4  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35345   00A6F6  A0D8               	btfss	status,0,c
 35346   00A6F8  D009               	goto	l14872
 35347                           
 35348                           ; BSR set to: 0
 35349   00A6FA  519B               	movf	___lldiv@divisor& (0+255),w,b
 35350   00A6FC  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 35351   00A6FE  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35352   00A700  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35353   00A702  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35354   00A704  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35355   00A706  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35356   00A708  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35357                           
 35358                           ; BSR set to: 0
 35359   00A70A  819F               	bsf	___lldiv@quotient& (0+255),0,b
 35360   00A70C                     l14872:
 35361                           
 35362                           ; BSR set to: 0
 35363   00A70C  90D8               	bcf	status,0,c
 35364   00A70E  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35365   00A710  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35366   00A712  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35367   00A714  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 35368                           
 35369                           ; BSR set to: 0
 35370   00A716  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 35371   00A718  D7E1               	goto	u14520
 35372   00A71A                     l3020:
 35373                           
 35374                           ; BSR set to: 0
 35375   00A71A  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 35376   00A71E  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 35377   00A722  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 35378   00A726  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 35379                           
 35380                           ; BSR set to: 0
 35381   00A72A  0012               	return		;funcret
 35382   00A72C                     __end_of___lldiv:
 35383                           	callstack 0
 35384                           
 35385 ;; *************** function _factoryReset *****************
 35386 ;; Defined at:
 35387 ;;		line 856 in file "../../VLCBlib_PIC/vlcb.c"
 35388 ;; Parameters:    Size  Location     Type
 35389 ;;		None
 35390 ;; Auto vars:     Size  Location     Type
 35391 ;;  i               1   56[BANK1 ] unsigned char 
 35392 ;; Return value:  Size  Location     Type
 35393 ;;                  1    wreg      void 
 35394 ;; Registers used:
 35395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35396 ;; Tracked objects:
 35397 ;;		On entry : 0/0
 35398 ;;		On exit  : 0/0
 35399 ;;		Unchanged: 0/0
 35400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35402 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35403 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35404 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35405 ;;Total ram usage:        5 bytes
 35406 ;; Hardware stack levels used: 1
 35407 ;; Hardware stack levels required when called: 26
 35408 ;; This function calls:
 35409 ;;		NULL
 35410 ;;		_APP_factoryReset
 35411 ;;		_canFactoryReset
 35412 ;;		_mnsFactoryReset
 35413 ;;		_nvFactoryReset
 35414 ;;		_teachFactoryReset
 35415 ;;		_writeNVM
 35416 ;; This function is called by:
 35417 ;;		_mnsProcessMessage
 35418 ;;		_checkPowerOnPb
 35419 ;;		_main
 35420 ;; This function uses a non-reentrant model
 35421 ;;
 35422                           
 35423                           	psect	text140
 35424   0085BC                     __ptext140:
 35425                           	callstack 0
 35426   0085BC                     _factoryReset:
 35427                           	callstack 2
 35428                           
 35429                           ;../../VLCBlib_PIC/vlcb.c: 857:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 859:     for (i
      +                          =0; i<9; i++) {
 35430                           
 35431                           ; BSR set to: 0
 35432                           ;incstack = 0
 35433   0085BC  0E00               	movlw	0
 35434   0085BE  0101               	movlb	1	; () banked
 35435   0085C0  6FF6               	movwf	factoryReset@i& (0+255),b
 35436   0085C2                     l21366:
 35437                           
 35438                           ; BSR set to: 1
 35439                           ;../../VLCBlib_PIC/vlcb.c: 860:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 35440   0085C2  51F6               	movf	factoryReset@i& (0+255),w,b
 35441   0085C4  0D02               	mullw	2
 35442   0085C6  0E75               	movlw	low _services
 35443   0085C8  24F3               	addwf	243,w,c
 35444   0085CA  6EF6               	movwf	tblptrl,c
 35445   0085CC  0EEE               	movlw	high _services
 35446   0085CE  20F4               	addwfc	244,w,c
 35447   0085D0  6EF7               	movwf	tblptrh,c
 35448   0085D2                     	if	1	;There are 3 active tblptr bytes
 35449   0085D2  6AF8               	clrf	tblptru,c
 35450   0085D4  0E00               	movlw	low (__mediumconst shr (0+16))
 35451   0085D6  22F8               	addwfc	tblptru,f,c
 35452   0085D8                     	endif
 35453   0085D8  0009               	tblrd		*+
 35454   0085DA  50F5               	movf	tablat,w,c
 35455   0085DC  0009               	tblrd		*+
 35456   0085DE  10F5               	iorwf	tablat,w,c
 35457   0085E0  B4D8               	btfsc	status,2,c
 35458   0085E2  D04B               	goto	u22549
 35459                           
 35460                           ; BSR set to: 1
 35461   0085E4  51F6               	movf	factoryReset@i& (0+255),w,b
 35462   0085E6  0D02               	mullw	2
 35463   0085E8  0E75               	movlw	low _services
 35464   0085EA  24F3               	addwf	243,w,c
 35465   0085EC  6EF6               	movwf	tblptrl,c
 35466   0085EE  0EEE               	movlw	high _services
 35467   0085F0  20F4               	addwfc	244,w,c
 35468   0085F2  6EF7               	movwf	tblptrh,c
 35469   0085F4                     	if	1	;There are 3 active tblptr bytes
 35470   0085F4  6AF8               	clrf	tblptru,c
 35471   0085F6  0E00               	movlw	low (__mediumconst shr (0+16))
 35472   0085F8  22F8               	addwfc	tblptru,f,c
 35473   0085FA                     	endif
 35474   0085FA  0009               	tblrd		*+
 35475   0085FC  CFF5 F1F2          	movff	tablat,??_factoryReset
 35476   008600  0009               	tblrd		*+
 35477   008602  CFF5 F1F3          	movff	tablat,??_factoryReset+1
 35478   008606  0E02               	movlw	2
 35479   008608  27F2               	addwf	??_factoryReset& (0+255),f,b
 35480   00860A  0E00               	movlw	0
 35481   00860C  23F3               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35482   00860E  C1F2  FFF6         	movff	??_factoryReset,tblptrl
 35483   008612  C1F3  FFF7         	movff	??_factoryReset+1,tblptrh
 35484   008616                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35485   008616  6AF8               	clrf	tblptru,c
 35486   008618                     	endif
 35487   008618                     	if	0	;tblptru may be non-zero
 35488   008618                     	endif
 35489   008618  0009               	tblrd		*+
 35490   00861A  50F5               	movf	tablat,w,c
 35491   00861C  0009               	tblrd		*+
 35492   00861E  10F5               	iorwf	tablat,w,c
 35493   008620  B4D8               	btfsc	status,2,c
 35494   008622  D02B               	goto	u22549
 35495                           
 35496                           ; BSR set to: 1
 35497                           ;../../VLCBlib_PIC/vlcb.c: 861:             services[i]->factoryReset();
 35498   008624  51F6               	movf	factoryReset@i& (0+255),w,b
 35499   008626  0D02               	mullw	2
 35500   008628  0E75               	movlw	low _services
 35501   00862A  24F3               	addwf	243,w,c
 35502   00862C  6EF6               	movwf	tblptrl,c
 35503   00862E  0EEE               	movlw	high _services
 35504   008630  20F4               	addwfc	244,w,c
 35505   008632  6EF7               	movwf	tblptrh,c
 35506   008634                     	if	1	;There are 3 active tblptr bytes
 35507   008634  6AF8               	clrf	tblptru,c
 35508   008636  0E00               	movlw	low (__mediumconst shr (0+16))
 35509   008638  22F8               	addwfc	tblptru,f,c
 35510   00863A                     	endif
 35511   00863A  0009               	tblrd		*+
 35512   00863C  CFF5 F1F2          	movff	tablat,??_factoryReset
 35513   008640  0009               	tblrd		*+
 35514   008642  CFF5 F1F3          	movff	tablat,??_factoryReset+1
 35515   008646  0E02               	movlw	2
 35516   008648  27F2               	addwf	??_factoryReset& (0+255),f,b
 35517   00864A  0E00               	movlw	0
 35518   00864C  23F3               	addwfc	(??_factoryReset+1)& (0+255),f,b
 35519   00864E  C1F2  FFF6         	movff	??_factoryReset,tblptrl
 35520   008652  C1F3  FFF7         	movff	??_factoryReset+1,tblptrh
 35521   008656                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 35522   008656  6AF8               	clrf	tblptru,c
 35523   008658                     	endif
 35524   008658                     	if	0	;tblptru may be non-zero
 35525   008658                     	endif
 35526   008658  0009               	tblrd		*+
 35527   00865A  CFF5 F1F4          	movff	tablat,??_factoryReset+2
 35528   00865E  0009               	tblrd		*+
 35529   008660  CFF5 F1F5          	movff	tablat,??_factoryReset+3
 35530   008664  D801               	call	u22548
 35531   008666  D009               	goto	u22549
 35532   008668                     u22548:
 35533   008668  0005               	push	
 35534   00866A  6EFA               	movwf	pclath,c
 35535   00866C  51F4               	movf	(??_factoryReset+2)& (0+255),w,b
 35536   00866E  6EFD               	movwf	tosl,c
 35537   008670  51F5               	movf	(??_factoryReset+3)& (0+255),w,b
 35538   008672  6EFE               	movwf	tosh,c
 35539   008674  6AFF               	clrf	tosu,c
 35540   008676  50FA               	movf	pclath,w,c
 35541   008678  0012               	return		;indir
 35542   00867A                     u22549:
 35543                           
 35544                           ;../../VLCBlib_PIC/vlcb.c: 863:     }
 35545   00867A  0101               	movlb	1	; () banked
 35546   00867C  2BF6               	incf	factoryReset@i& (0+255),f,b
 35547                           
 35548                           ; BSR set to: 1
 35549   00867E  0E08               	movlw	8
 35550   008680  65F6               	cpfsgt	factoryReset@i& (0+255),b
 35551   008682  D79F               	goto	l21366
 35552                           
 35553                           ; BSR set to: 1
 35554                           ;../../VLCBlib_PIC/vlcb.c: 865:     writeNVM(FLASH_NVM_TYPE, 0xFF80, 1);
 35555   008684  0E80               	movlw	128
 35556   008686  0100               	movlb	0	; () banked
 35557   008688  6FA4               	movwf	writeNVM@index& (0+255),b
 35558   00868A  0EFF               	movlw	255
 35559   00868C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35560   00868E  0E00               	movlw	0
 35561   008690  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35562   008692  0E01               	movlw	1
 35563   008694  6FA7               	movwf	writeNVM@value& (0+255),b
 35564   008696  0E01               	movlw	1
 35565   008698  EC91  F05B         	call	_writeNVM
 35566                           
 35567                           ;../../VLCBlib_PIC/vlcb.c: 867:     APP_factoryReset();
 35568   00869C  ECAA  F060         	call	_APP_factoryReset	;wreg free
 35569   0086A0  0012               	return		;funcret
 35570   0086A2                     __end_of_factoryReset:
 35571                           	callstack 0
 35572                           
 35573 ;; *************** function _canFactoryReset *****************
 35574 ;; Defined at:
 35575 ;;		line 193 in file "../../VLCBlib_PIC/can18_ecan.c"
 35576 ;; Parameters:    Size  Location     Type
 35577 ;;		None
 35578 ;; Auto vars:     Size  Location     Type
 35579 ;;		None
 35580 ;; Return value:  Size  Location     Type
 35581 ;;                  1    wreg      void 
 35582 ;; Registers used:
 35583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35584 ;; Tracked objects:
 35585 ;;		On entry : 0/0
 35586 ;;		On exit  : 0/0
 35587 ;;		Unchanged: 0/0
 35588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35593 ;;Total ram usage:        0 bytes
 35594 ;; Hardware stack levels used: 1
 35595 ;; Hardware stack levels required when called: 18
 35596 ;; This function calls:
 35597 ;;		_writeNVM
 35598 ;; This function is called by:
 35599 ;;		_factoryReset
 35600 ;; This function uses a non-reentrant model
 35601 ;;
 35602                           
 35603                           	psect	text141
 35604   00C260                     __ptext141:
 35605                           	callstack 0
 35606   00C260                     _canFactoryReset:
 35607                           	callstack 9
 35608                           
 35609                           ;../../VLCBlib_PIC/can18_ecan.c: 194:     canId = 0;
 35610                           
 35611                           ;incstack = 0
 35612   00C260  0E00               	movlw	0
 35613   00C262  0100               	movlb	0	; () banked
 35614   00C264  6FB8               	movwf	_canId& (0+255),b
 35615                           
 35616                           ; BSR set to: 0
 35617                           ;../../VLCBlib_PIC/can18_ecan.c: 195:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 35618   00C266  0EFE               	movlw	254
 35619   00C268  6FA4               	movwf	writeNVM@index& (0+255),b
 35620   00C26A  0E03               	movlw	3
 35621   00C26C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35622   00C26E  0E00               	movlw	0
 35623   00C270  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35624   00C272  C0B8  F0A7         	movff	_canId,writeNVM@value
 35625   00C276  0E00               	movlw	0
 35626   00C278  EC91  F05B         	call	_writeNVM
 35627   00C27C  0012               	return		;funcret
 35628   00C27E                     __end_of_canFactoryReset:
 35629                           	callstack 0
 35630                           
 35631 ;; *************** function _nvFactoryReset *****************
 35632 ;; Defined at:
 35633 ;;		line 119 in file "../../VLCBlib_PIC/nv.c"
 35634 ;; Parameters:    Size  Location     Type
 35635 ;;		None
 35636 ;; Auto vars:     Size  Location     Type
 35637 ;;  i               1    3[BANK1 ] unsigned char 
 35638 ;; Return value:  Size  Location     Type
 35639 ;;                  1    wreg      void 
 35640 ;; Registers used:
 35641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35642 ;; Tracked objects:
 35643 ;;		On entry : 0/0
 35644 ;;		On exit  : 0/0
 35645 ;;		Unchanged: 0/0
 35646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35648 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35649 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35650 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35651 ;;Total ram usage:        3 bytes
 35652 ;; Hardware stack levels used: 1
 35653 ;; Hardware stack levels required when called: 18
 35654 ;; This function calls:
 35655 ;;		_APP_nvDefault
 35656 ;;		_writeNVM
 35657 ;; This function is called by:
 35658 ;;		_factoryReset
 35659 ;; This function uses a non-reentrant model
 35660 ;;
 35661                           
 35662                           	psect	text142
 35663   00BB3C                     __ptext142:
 35664                           	callstack 0
 35665   00BB3C                     _nvFactoryReset:
 35666                           	callstack 9
 35667                           
 35668                           ;../../VLCBlib_PIC/nv.c: 120:     uint8_t i;;../../VLCBlib_PIC/nv.c: 121:     for (i=1; 
      +                          i<= 127; i++) {
 35669                           
 35670                           ;incstack = 0
 35671   00BB3C  0E01               	movlw	1
 35672   00BB3E  0101               	movlb	1	; () banked
 35673   00BB40  6FC1               	movwf	nvFactoryReset@i& (0+255),b
 35674   00BB42                     l20264:
 35675                           
 35676                           ; BSR set to: 1
 35677                           ;../../VLCBlib_PIC/nv.c: 122:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 35678   00BB42  0E80               	movlw	128
 35679   00BB44  25C1               	addwf	nvFactoryReset@i& (0+255),w,b
 35680   00BB46  6FBF               	movwf	??_nvFactoryReset& (0+255),b
 35681   00BB48  6BC0               	clrf	(??_nvFactoryReset+1)& (0+255),b
 35682   00BB4A  0EFF               	movlw	255
 35683   00BB4C  23C0               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 35684   00BB4E  C1BF  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 35685   00BB52  C1C0  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 35686   00BB56  0100               	movlb	0	; () banked
 35687   00BB58  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 35688   00BB5A  0101               	movlb	1	; () banked
 35689   00BB5C  51C1               	movf	nvFactoryReset@i& (0+255),w,b
 35690   00BB5E  EC42  F048         	call	_APP_nvDefault
 35691   00BB62  0100               	movlb	0	; () banked
 35692   00BB64  6FA7               	movwf	writeNVM@value& (0+255),b
 35693   00BB66  0E01               	movlw	1
 35694   00BB68  EC91  F05B         	call	_writeNVM
 35695                           
 35696                           ;../../VLCBlib_PIC/nv.c: 123:     }
 35697   00BB6C  0101               	movlb	1	; () banked
 35698   00BB6E  2BC1               	incf	nvFactoryReset@i& (0+255),f,b
 35699                           
 35700                           ; BSR set to: 1
 35701   00BB70  0E7F               	movlw	127
 35702   00BB72  65C1               	cpfsgt	nvFactoryReset@i& (0+255),b
 35703   00BB74  D7E6               	goto	l20264
 35704   00BB76  0012               	return	
 35705   00BB78                     __end_of_nvFactoryReset:
 35706                           	callstack 0
 35707                           
 35708 ;; *************** function _mnsFactoryReset *****************
 35709 ;; Defined at:
 35710 ;;		line 258 in file "../../VLCBlib_PIC/mns.c"
 35711 ;; Parameters:    Size  Location     Type
 35712 ;;		None
 35713 ;; Auto vars:     Size  Location     Type
 35714 ;;		None
 35715 ;; Return value:  Size  Location     Type
 35716 ;;                  1    wreg      void 
 35717 ;; Registers used:
 35718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35719 ;; Tracked objects:
 35720 ;;		On entry : 0/0
 35721 ;;		On exit  : 0/0
 35722 ;;		Unchanged: 0/0
 35723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35728 ;;Total ram usage:        0 bytes
 35729 ;; Hardware stack levels used: 1
 35730 ;; Hardware stack levels required when called: 18
 35731 ;; This function calls:
 35732 ;;		_writeNVM
 35733 ;; This function is called by:
 35734 ;;		_factoryReset
 35735 ;; This function uses a non-reentrant model
 35736 ;;
 35737                           
 35738                           	psect	text143
 35739   00AB14                     __ptext143:
 35740                           	callstack 0
 35741   00AB14                     _mnsFactoryReset:
 35742                           	callstack 9
 35743                           
 35744                           ;../../VLCBlib_PIC/mns.c: 259:     nn.bytes.hi = 0;
 35745                           
 35746                           ; BSR set to: 1
 35747                           ;incstack = 0
 35748   00AB14  0E00               	movlw	0
 35749   00AB16  0100               	movlb	0	; () banked
 35750   00AB18  6FB5               	movwf	(_nn+1)& (0+255),b
 35751                           
 35752                           ;../../VLCBlib_PIC/mns.c: 260:     nn.bytes.lo = 0;
 35753   00AB1A  0E00               	movlw	0
 35754   00AB1C  6FB4               	movwf	_nn& (0+255),b
 35755                           
 35756                           ; BSR set to: 0
 35757                           ;../../VLCBlib_PIC/mns.c: 261:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.hi);
 35758   00AB1E  0EFC               	movlw	252
 35759   00AB20  6FA4               	movwf	writeNVM@index& (0+255),b
 35760   00AB22  0E03               	movlw	3
 35761   00AB24  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35762   00AB26  0E00               	movlw	0
 35763   00AB28  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35764   00AB2A  C0B5  F0A7         	movff	_nn+1,writeNVM@value
 35765   00AB2E  0E00               	movlw	0
 35766   00AB30  EC91  F05B         	call	_writeNVM
 35767                           
 35768                           ;../../VLCBlib_PIC/mns.c: 262:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.lo);
 35769   00AB34  0EFD               	movlw	253
 35770   00AB36  0100               	movlb	0	; () banked
 35771   00AB38  6FA4               	movwf	writeNVM@index& (0+255),b
 35772   00AB3A  0E03               	movlw	3
 35773   00AB3C  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35774   00AB3E  0E00               	movlw	0
 35775   00AB40  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35776   00AB42  C0B4  F0A7         	movff	_nn,writeNVM@value
 35777   00AB46  0E00               	movlw	0
 35778   00AB48  EC91  F05B         	call	_writeNVM
 35779                           
 35780                           ;../../VLCBlib_PIC/mns.c: 264:     last_mode_state = mode_state = MODE_UNINITIALISED;
 35781   00AB4C  0100               	movlb	0	; () banked
 35782   00AB4E  69C2               	setf	_mode_state& (0+255),b
 35783   00AB50  69C1               	setf	_last_mode_state& (0+255),b
 35784                           
 35785                           ; BSR set to: 0
 35786                           ;../../VLCBlib_PIC/mns.c: 265:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 35787   00AB52  0EFB               	movlw	251
 35788   00AB54  6FA4               	movwf	writeNVM@index& (0+255),b
 35789   00AB56  0E03               	movlw	3
 35790   00AB58  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35791   00AB5A  0E00               	movlw	0
 35792   00AB5C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35793   00AB5E  C0C2  F0A7         	movff	_mode_state,writeNVM@value
 35794   00AB62  0E00               	movlw	0
 35795   00AB64  EC91  F05B         	call	_writeNVM
 35796                           
 35797                           ;../../VLCBlib_PIC/mns.c: 268:     last_mode_flags = mode_flags = 0;
 35798   00AB68  0E00               	movlw	0
 35799   00AB6A  0101               	movlb	1	; () banked
 35800   00AB6C  6F7D               	movwf	_mode_flags& (0+255),b
 35801   00AB6E  C17D  F0C0         	movff	_mode_flags,_last_mode_flags
 35802                           
 35803                           ;../../VLCBlib_PIC/mns.c: 269:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, mode_flags);
 35804   00AB72  0EFA               	movlw	250
 35805   00AB74  0100               	movlb	0	; () banked
 35806   00AB76  6FA4               	movwf	writeNVM@index& (0+255),b
 35807   00AB78  0E03               	movlw	3
 35808   00AB7A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 35809   00AB7C  0E00               	movlw	0
 35810   00AB7E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 35811   00AB80  C17D  F0A7         	movff	_mode_flags,writeNVM@value
 35812   00AB84  0E00               	movlw	0
 35813   00AB86  EC91  F05B         	call	_writeNVM
 35814   00AB8A  0012               	return		;funcret
 35815   00AB8C                     __end_of_mnsFactoryReset:
 35816                           	callstack 0
 35817                           
 35818 ;; *************** function _teachFactoryReset *****************
 35819 ;; Defined at:
 35820 ;;		line 282 in file "../../VLCBlib_PIC/event_teach.c"
 35821 ;; Parameters:    Size  Location     Type
 35822 ;;		None
 35823 ;; Auto vars:     Size  Location     Type
 35824 ;;		None
 35825 ;; Return value:  Size  Location     Type
 35826 ;;                  1    wreg      void 
 35827 ;; Registers used:
 35828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35829 ;; Tracked objects:
 35830 ;;		On entry : 0/0
 35831 ;;		On exit  : 0/0
 35832 ;;		Unchanged: 0/0
 35833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35838 ;;Total ram usage:        0 bytes
 35839 ;; Hardware stack levels used: 1
 35840 ;; Hardware stack levels required when called: 19
 35841 ;; This function calls:
 35842 ;;		_clearAllEvents
 35843 ;; This function is called by:
 35844 ;;		_factoryReset
 35845 ;; This function uses a non-reentrant model
 35846 ;;
 35847                           
 35848                           	psect	text144
 35849   00C406                     __ptext144:
 35850                           	callstack 0
 35851   00C406                     _teachFactoryReset:
 35852                           	callstack 8
 35853                           
 35854                           ;../../VLCBlib_PIC/event_teach.c: 283:     clearAllEvents();
 35855                           
 35856                           ;incstack = 0
 35857   00C406  EC9C  F05A         	call	_clearAllEvents	;wreg free
 35858   00C40A  0012               	return		;funcret
 35859   00C40C                     __end_of_teachFactoryReset:
 35860                           	callstack 0
 35861                           
 35862 ;; *************** function _clearAllEvents *****************
 35863 ;; Defined at:
 35864 ;;		line 475 in file "../../VLCBlib_PIC/event_teach.c"
 35865 ;; Parameters:    Size  Location     Type
 35866 ;;		None
 35867 ;; Auto vars:     Size  Location     Type
 35868 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 35869 ;; Return value:  Size  Location     Type
 35870 ;;                  1    wreg      void 
 35871 ;; Registers used:
 35872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35873 ;; Tracked objects:
 35874 ;;		On entry : 0/0
 35875 ;;		On exit  : 0/0
 35876 ;;		Unchanged: 0/0
 35877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35879 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35880 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35881 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35882 ;;Total ram usage:        5 bytes
 35883 ;; Hardware stack levels used: 1
 35884 ;; Hardware stack levels required when called: 18
 35885 ;; This function calls:
 35886 ;;		_flushFlashBlock
 35887 ;;		_rebuildHashtable
 35888 ;;		_writeNVM
 35889 ;; This function is called by:
 35890 ;;		_teachFactoryReset
 35891 ;;		_doNnclr
 35892 ;; This function uses a non-reentrant model
 35893 ;;
 35894                           
 35895                           	psect	text145
 35896   00B538                     __ptext145:
 35897                           	callstack 0
 35898   00B538                     _clearAllEvents:
 35899                           	callstack 9
 35900                           
 35901                           ;../../VLCBlib_PIC/event_teach.c: 476:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 477:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 35902                           
 35903                           ;incstack = 0
 35904   00B538  0E00               	movlw	0
 35905   00B53A  0101               	movlb	1	; () banked
 35906   00B53C  6FCB               	movwf	clearAllEvents@tableIndex& (0+255),b
 35907   00B53E                     l19406:
 35908                           
 35909                           ; BSR set to: 1
 35910                           ;../../VLCBlib_PIC/event_teach.c: 479:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex + 0, 0xff);
 35911   00B53E  51CB               	movf	clearAllEvents@tableIndex& (0+255),w,b
 35912   00B540  6FC7               	movwf	??_clearAllEvents& (0+255),b
 35913   00B542  6BC8               	clrf	(??_clearAllEvents+1)& (0+255),b
 35914   00B544  3BC7               	swapf	??_clearAllEvents& (0+255),f,b
 35915   00B546  3BC8               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 35916   00B548  0EF0               	movlw	240
 35917   00B54A  17C8               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 35918   00B54C  51C7               	movf	??_clearAllEvents& (0+255),w,b
 35919   00B54E  0B0F               	andlw	15
 35920   00B550  13C8               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 35921   00B552  0EF0               	movlw	240
 35922   00B554  17C7               	andwf	??_clearAllEvents& (0+255),f,b
 35923   00B556  0E80               	movlw	128
 35924   00B558  25C7               	addwf	??_clearAllEvents& (0+255),w,b
 35925   00B55A  6FC9               	movwf	(??_clearAllEvents+2)& (0+255),b
 35926   00B55C  0EEF               	movlw	239
 35927   00B55E  21C8               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 35928   00B560  6FCA               	movwf	(??_clearAllEvents+3)& (0+255),b
 35929   00B562  C1C9  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 35930   00B566  C1CA  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 35931   00B56A  0100               	movlb	0	; () banked
 35932   00B56C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 35933   00B56E  0EFF               	movlw	255
 35934   00B570  6FA7               	movwf	writeNVM@value& (0+255),b
 35935   00B572  0E01               	movlw	1
 35936   00B574  EC91  F05B         	call	_writeNVM
 35937                           
 35938                           ;../../VLCBlib_PIC/event_teach.c: 480:     }
 35939   00B578  0101               	movlb	1	; () banked
 35940   00B57A  2BCB               	incf	clearAllEvents@tableIndex& (0+255),f,b
 35941                           
 35942                           ; BSR set to: 1
 35943   00B57C  29CB               	incf	clearAllEvents@tableIndex& (0+255),w,b
 35944   00B57E  A4D8               	btfss	status,2,c
 35945   00B580  D7DE               	goto	l19406
 35946                           
 35947                           ; BSR set to: 1
 35948                           ;../../VLCBlib_PIC/event_teach.c: 481:     flushFlashBlock();
 35949   00B582  EC11  F053         	call	_flushFlashBlock	;wreg free
 35950                           
 35951                           ;../../VLCBlib_PIC/event_teach.c: 483:     rebuildHashtable();
 35952   00B586  EC57  F03F         	call	_rebuildHashtable	;wreg free
 35953   00B58A  0012               	return		;funcret
 35954   00B58C                     __end_of_clearAllEvents:
 35955                           	callstack 0
 35956                           
 35957 ;; *************** function _APP_nvDefault *****************
 35958 ;; Defined at:
 35959 ;;		line 75 in file "../universalNv.c"
 35960 ;; Parameters:    Size  Location     Type
 35961 ;;  index           1    wreg     unsigned char 
 35962 ;; Auto vars:     Size  Location     Type
 35963 ;;  index           1   67[BANK0 ] unsigned char 
 35964 ;; Return value:  Size  Location     Type
 35965 ;;                  1    wreg      unsigned char 
 35966 ;; Registers used:
 35967 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35968 ;; Tracked objects:
 35969 ;;		On entry : 0/0
 35970 ;;		On exit  : 0/0
 35971 ;;		Unchanged: 0/0
 35972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35975 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35976 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35977 ;;Total ram usage:        5 bytes
 35978 ;; Hardware stack levels used: 1
 35979 ;; Hardware stack levels required when called: 13
 35980 ;; This function calls:
 35981 ;;		___awdiv
 35982 ;;		___awmod
 35983 ;;		___wmul
 35984 ;; This function is called by:
 35985 ;;		_nvFactoryReset
 35986 ;; This function uses a non-reentrant model
 35987 ;;
 35988                           
 35989                           	psect	text146
 35990   009084                     __ptext146:
 35991                           	callstack 0
 35992   009084                     _APP_nvDefault:
 35993                           	callstack 13
 35994                           
 35995                           ;incstack = 0
 35996                           ;APP_nvDefault@index stored from wreg
 35997   009084  0100               	movlb	0	; () banked
 35998   009086  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 35999                           
 36000                           ;../universalNv.c: 76:     if (index < 16) {
 36001   009088  0E10               	movlw	16
 36002   00908A  0100               	movlb	0	; () banked
 36003   00908C  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 36004   00908E  D025               	goto	l19286
 36005   009090  D00A               	goto	l19284
 36006   009092                     l19254:
 36007                           
 36008                           ; BSR set to: 0
 36009                           ;../universalNv.c: 80:                 return 0;
 36010   009092  0E00               	movlw	0
 36011   009094  0012               	return	
 36012   009096                     l19262:
 36013                           
 36014                           ; BSR set to: 0
 36015                           ;../universalNv.c: 84:                 return 234;
 36016   009096  0EEA               	movlw	234
 36017   009098  0012               	return	
 36018   00909A                     l19266:
 36019                           
 36020                           ; BSR set to: 0
 36021                           ;../universalNv.c: 86:                 return 0x33;
 36022   00909A  0E33               	movlw	51
 36023   00909C  0012               	return	
 36024   00909E                     l19270:
 36025                           
 36026                           ; BSR set to: 0
 36027                           ;../universalNv.c: 88:                 return 2;
 36028   00909E  0E02               	movlw	2
 36029   0090A0  0012               	return	
 36030   0090A2                     l19274:
 36031                           
 36032                           ; BSR set to: 0
 36033                           ;../universalNv.c: 92:                 return 0xFF;
 36034   0090A2  0EFF               	movlw	255
 36035   0090A4  0012               	return	
 36036   0090A6                     l19284:
 36037                           
 36038                           ; BSR set to: 0
 36039   0090A6  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 36040                           
 36041                           ; Switch size 1, requested type "simple"
 36042                           ; Number of cases is 8, Range of values is 1 to 8
 36043                           ; switch strategies available:
 36044                           ; Name         Instructions Cycles
 36045                           ; simple_byte           25    13 (average)
 36046                           ;	Chosen strategy is simple_byte
 36047   0090A8  0A01               	xorlw	1	; case 1
 36048   0090AA  B4D8               	btfsc	status,2,c
 36049   0090AC  D7F2               	goto	l19254
 36050   0090AE  0A03               	xorlw	3	; case 2
 36051   0090B0  B4D8               	btfsc	status,2,c
 36052   0090B2  D7EF               	goto	l19254
 36053   0090B4  0A01               	xorlw	1	; case 3
 36054   0090B6  B4D8               	btfsc	status,2,c
 36055   0090B8  D7EE               	goto	l19262
 36056   0090BA  0A07               	xorlw	7	; case 4
 36057   0090BC  B4D8               	btfsc	status,2,c
 36058   0090BE  D7ED               	goto	l19266
 36059   0090C0  0A01               	xorlw	1	; case 5
 36060   0090C2  B4D8               	btfsc	status,2,c
 36061   0090C4  D7EC               	goto	l19270
 36062   0090C6  0A03               	xorlw	3	; case 6
 36063   0090C8  B4D8               	btfsc	status,2,c
 36064   0090CA  D7EB               	goto	l19274
 36065   0090CC  0A01               	xorlw	1	; case 7
 36066   0090CE  B4D8               	btfsc	status,2,c
 36067   0090D0  D7E8               	goto	l19274
 36068   0090D2  0A0F               	xorlw	15	; case 8
 36069   0090D4  B4D8               	btfsc	status,2,c
 36070   0090D6  D7E5               	goto	l19274
 36071   0090D8  D7DC               	goto	l19254
 36072   0090DA                     l19286:
 36073                           
 36074                           ; BSR set to: 0
 36075                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 36076   0090DA  0EF0               	movlw	240
 36077   0090DC  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36078   0090DE  6F97               	movwf	___awdiv@dividend& (0+255),b
 36079   0090E0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36080   0090E2  0EFF               	movlw	255
 36081   0090E4  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 36082   0090E6  0E00               	movlw	0
 36083   0090E8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36084   0090EA  0E07               	movlw	7
 36085   0090EC  6F99               	movwf	___awdiv@divisor& (0+255),b
 36086   0090EE  ECCE  F052         	call	___awdiv	;wreg free
 36087   0090F2  0E00               	movlw	0
 36088   0090F4  0100               	movlb	0	; () banked
 36089   0090F6  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 36090   0090F8  0E00               	movlw	0
 36091   0090FA  6F91               	movwf	___wmul@multiplier& (0+255),b
 36092   0090FC  0E00               	movlw	0
 36093   0090FE  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36094   009100  0E07               	movlw	7
 36095   009102  6F93               	movwf	___wmul@multiplicand& (0+255),b
 36096   009104  EC4C  F060         	call	___wmul	;wreg free
 36097   009108  0E8C               	movlw	low _channelDefaultNVs
 36098   00910A  0100               	movlb	0	; () banked
 36099   00910C  2591               	addwf	?___wmul& (0+255),w,b
 36100   00910E  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 36101   009110  0EEE               	movlw	high _channelDefaultNVs
 36102   009112  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 36103   009114  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 36104   009116  0EF0               	movlw	240
 36105   009118  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36106   00911A  6F8D               	movwf	___awmod@dividend& (0+255),b
 36107   00911C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 36108   00911E  0EFF               	movlw	255
 36109   009120  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 36110   009122  0E00               	movlw	0
 36111   009124  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 36112   009126  0E07               	movlw	7
 36113   009128  6F8F               	movwf	___awmod@divisor& (0+255),b
 36114   00912A  EC71  F056         	call	___awmod	;wreg free
 36115   00912E  0100               	movlb	0	; () banked
 36116   009130  518D               	movf	?___awmod& (0+255),w,b
 36117   009132  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 36118   009134  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 36119   009136  518E               	movf	(?___awmod+1)& (0+255),w,b
 36120   009138  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 36121   00913A  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 36122   00913C  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 36123   009140  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 36124   009144                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36125   009144  6AF8               	clrf	tblptru,c
 36126   009146                     	endif
 36127   009146                     	if	0	;tblptru may be non-zero
 36128   009146                     	endif
 36129   009146  0008               	tblrd		*
 36130   009148  50F5               	movf	tablat,w,c
 36131                           
 36132                           ; BSR set to: 0
 36133   00914A  0012               	return		;funcret
 36134   00914C                     __end_of_APP_nvDefault:
 36135                           	callstack 0
 36136                           
 36137 ;; *************** function ___wmul *****************
 36138 ;; Defined at:
 36139 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 36140 ;; Parameters:    Size  Location     Type
 36141 ;;  multiplier      2   49[BANK0 ] unsigned int 
 36142 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 36143 ;; Auto vars:     Size  Location     Type
 36144 ;;  product         2   53[BANK0 ] unsigned int 
 36145 ;; Return value:  Size  Location     Type
 36146 ;;                  2   49[BANK0 ] unsigned int 
 36147 ;; Registers used:
 36148 ;;		wreg, status,2, status,0, prodl, prodh
 36149 ;; Tracked objects:
 36150 ;;		On entry : 0/0
 36151 ;;		On exit  : 0/0
 36152 ;;		Unchanged: 0/0
 36153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36155 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36157 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36158 ;;Total ram usage:        6 bytes
 36159 ;; Hardware stack levels used: 1
 36160 ;; Hardware stack levels required when called: 12
 36161 ;; This function calls:
 36162 ;;		Nothing
 36163 ;; This function is called by:
 36164 ;;		_APP_nvDefault
 36165 ;;		_bounceDown
 36166 ;; This function uses a non-reentrant model
 36167 ;;
 36168                           
 36169                           	psect	text147
 36170   00C098                     __ptext147:
 36171                           	callstack 0
 36172   00C098                     ___wmul:
 36173                           	callstack 13
 36174                           
 36175                           ; BSR set to: 0
 36176                           ;incstack = 0
 36177   00C098  0100               	movlb	0	; () banked
 36178   00C09A  5191               	movf	___wmul@multiplier& (0+255),w,b
 36179   00C09C  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36180   00C09E  CFF3 F095          	movff	prodl,___wmul@product
 36181   00C0A2  CFF4 F096          	movff	prodh,___wmul@product+1
 36182   00C0A6  5191               	movf	___wmul@multiplier& (0+255),w,b
 36183   00C0A8  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 36184   00C0AA  50F3               	movf	243,w,c
 36185   00C0AC  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36186   00C0AE  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 36187   00C0B0  0393               	mulwf	___wmul@multiplicand& (0+255),b
 36188   00C0B2  50F3               	movf	243,w,c
 36189   00C0B4  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 36190                           
 36191                           ; BSR set to: 0
 36192   00C0B6  C095  F091         	movff	___wmul@product,?___wmul
 36193   00C0BA  C096  F092         	movff	___wmul@product+1,?___wmul+1
 36194                           
 36195                           ; BSR set to: 0
 36196   00C0BE  0012               	return		;funcret
 36197   00C0C0                     __end_of___wmul:
 36198                           	callstack 0
 36199                           
 36200 ;; *************** function ___awmod *****************
 36201 ;; Defined at:
 36202 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 36203 ;; Parameters:    Size  Location     Type
 36204 ;;  dividend        2   45[BANK0 ] int 
 36205 ;;  divisor         2   47[BANK0 ] int 
 36206 ;; Auto vars:     Size  Location     Type
 36207 ;;  sign            1   50[BANK0 ] unsigned char 
 36208 ;;  counter         1   49[BANK0 ] unsigned char 
 36209 ;; Return value:  Size  Location     Type
 36210 ;;                  2   45[BANK0 ] int 
 36211 ;; Registers used:
 36212 ;;		wreg, status,2, status,0
 36213 ;; Tracked objects:
 36214 ;;		On entry : 0/0
 36215 ;;		On exit  : 0/0
 36216 ;;		Unchanged: 0/0
 36217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36218 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36219 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36221 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36222 ;;Total ram usage:        6 bytes
 36223 ;; Hardware stack levels used: 1
 36224 ;; Hardware stack levels required when called: 12
 36225 ;; This function calls:
 36226 ;;		Nothing
 36227 ;; This function is called by:
 36228 ;;		_consumer2QProcessMessage
 36229 ;;		_processActions
 36230 ;;		_APP_nvDefault
 36231 ;;		_APP_nvValueChanged
 36232 ;;		_APP_nvValidate
 36233 ;; This function uses a non-reentrant model
 36234 ;;
 36235                           
 36236                           	psect	text148
 36237   00ACE2                     __ptext148:
 36238                           	callstack 0
 36239   00ACE2                     ___awmod:
 36240                           	callstack 14
 36241                           
 36242                           ; BSR set to: 0
 36243                           ;incstack = 0
 36244   00ACE2  0E00               	movlw	0
 36245   00ACE4  0100               	movlb	0	; () banked
 36246   00ACE6  6F92               	movwf	___awmod@sign& (0+255),b
 36247                           
 36248                           ; BSR set to: 0
 36249   00ACE8  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 36250   00ACEA  D006               	goto	l19156
 36251                           
 36252                           ; BSR set to: 0
 36253   00ACEC  6D8D               	negf	___awmod@dividend& (0+255),b
 36254   00ACEE  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36255   00ACF0  B0D8               	btfsc	status,0,c
 36256   00ACF2  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36257                           
 36258                           ; BSR set to: 0
 36259   00ACF4  0E01               	movlw	1
 36260   00ACF6  6F92               	movwf	___awmod@sign& (0+255),b
 36261   00ACF8                     l19156:
 36262                           
 36263                           ; BSR set to: 0
 36264   00ACF8  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36265   00ACFA  D004               	goto	l19160
 36266                           
 36267                           ; BSR set to: 0
 36268   00ACFC  6D8F               	negf	___awmod@divisor& (0+255),b
 36269   00ACFE  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 36270   00AD00  B0D8               	btfsc	status,0,c
 36271   00AD02  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 36272   00AD04                     l19160:
 36273                           
 36274                           ; BSR set to: 0
 36275   00AD04  518F               	movf	___awmod@divisor& (0+255),w,b
 36276   00AD06  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 36277   00AD08  B4D8               	btfsc	status,2,c
 36278   00AD0A  D018               	goto	l19176
 36279                           
 36280                           ; BSR set to: 0
 36281   00AD0C  0E01               	movlw	1
 36282   00AD0E  6F91               	movwf	___awmod@counter& (0+255),b
 36283   00AD10  D004               	goto	l19166
 36284   00AD12                     l19164:
 36285                           
 36286                           ; BSR set to: 0
 36287   00AD12  90D8               	bcf	status,0,c
 36288   00AD14  378F               	rlcf	___awmod@divisor& (0+255),f,b
 36289   00AD16  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 36290   00AD18  2B91               	incf	___awmod@counter& (0+255),f,b
 36291   00AD1A                     l19166:
 36292                           
 36293                           ; BSR set to: 0
 36294   00AD1A  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 36295   00AD1C  D7FA               	goto	l19164
 36296   00AD1E                     u19300:
 36297                           
 36298                           ; BSR set to: 0
 36299   00AD1E  518F               	movf	___awmod@divisor& (0+255),w,b
 36300   00AD20  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 36301   00AD22  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36302   00AD24  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 36303   00AD26  A0D8               	btfss	status,0,c
 36304   00AD28  D004               	goto	l19172
 36305                           
 36306                           ; BSR set to: 0
 36307   00AD2A  518F               	movf	___awmod@divisor& (0+255),w,b
 36308   00AD2C  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 36309   00AD2E  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 36310   00AD30  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 36311   00AD32                     l19172:
 36312                           
 36313                           ; BSR set to: 0
 36314   00AD32  90D8               	bcf	status,0,c
 36315   00AD34  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 36316   00AD36  338F               	rrcf	___awmod@divisor& (0+255),f,b
 36317                           
 36318                           ; BSR set to: 0
 36319   00AD38  2F91               	decfsz	___awmod@counter& (0+255),f,b
 36320   00AD3A  D7F1               	goto	u19300
 36321   00AD3C                     l19176:
 36322                           
 36323                           ; BSR set to: 0
 36324   00AD3C  5192               	movf	___awmod@sign& (0+255),w,b
 36325   00AD3E  B4D8               	btfsc	status,2,c
 36326   00AD40  D004               	goto	l19180
 36327                           
 36328                           ; BSR set to: 0
 36329   00AD42  6D8D               	negf	___awmod@dividend& (0+255),b
 36330   00AD44  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 36331   00AD46  B0D8               	btfsc	status,0,c
 36332   00AD48  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 36333   00AD4A                     l19180:
 36334                           
 36335                           ; BSR set to: 0
 36336   00AD4A  C08D  F08D         	movff	___awmod@dividend,?___awmod
 36337   00AD4E  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 36338                           
 36339                           ; BSR set to: 0
 36340   00AD52  0012               	return		;funcret
 36341   00AD54                     __end_of___awmod:
 36342                           	callstack 0
 36343                           
 36344 ;; *************** function ___awdiv *****************
 36345 ;; Defined at:
 36346 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 36347 ;; Parameters:    Size  Location     Type
 36348 ;;  dividend        2   55[BANK0 ] int 
 36349 ;;  divisor         2   57[BANK0 ] int 
 36350 ;; Auto vars:     Size  Location     Type
 36351 ;;  quotient        2   61[BANK0 ] int 
 36352 ;;  sign            1   60[BANK0 ] unsigned char 
 36353 ;;  counter         1   59[BANK0 ] unsigned char 
 36354 ;; Return value:  Size  Location     Type
 36355 ;;                  2   55[BANK0 ] int 
 36356 ;; Registers used:
 36357 ;;		wreg, status,2, status,0
 36358 ;; Tracked objects:
 36359 ;;		On entry : 0/0
 36360 ;;		On exit  : 0/0
 36361 ;;		Unchanged: 0/0
 36362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36364 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36366 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36367 ;;Total ram usage:        8 bytes
 36368 ;; Hardware stack levels used: 1
 36369 ;; Hardware stack levels required when called: 12
 36370 ;; This function calls:
 36371 ;;		Nothing
 36372 ;; This function is called by:
 36373 ;;		_consumer2QProcessMessage
 36374 ;;		_processActions
 36375 ;;		_doSOD
 36376 ;;		_APP_nvDefault
 36377 ;;		_APP_nvValueChanged
 36378 ;;		_pollServos
 36379 ;;		_bounceDown
 36380 ;;		_bounceUp
 36381 ;;		_leds_poll
 36382 ;; This function uses a non-reentrant model
 36383 ;;
 36384                           
 36385                           	psect	text149
 36386   00A59C                     __ptext149:
 36387                           	callstack 0
 36388   00A59C                     ___awdiv:
 36389                           	callstack 14
 36390                           
 36391                           ; BSR set to: 0
 36392                           ;incstack = 0
 36393   00A59C  0E00               	movlw	0
 36394   00A59E  0100               	movlb	0	; () banked
 36395   00A5A0  6F9C               	movwf	___awdiv@sign& (0+255),b
 36396                           
 36397                           ; BSR set to: 0
 36398   00A5A2  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36399   00A5A4  D006               	goto	l19112
 36400                           
 36401                           ; BSR set to: 0
 36402   00A5A6  6D99               	negf	___awdiv@divisor& (0+255),b
 36403   00A5A8  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 36404   00A5AA  B0D8               	btfsc	status,0,c
 36405   00A5AC  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 36406                           
 36407                           ; BSR set to: 0
 36408   00A5AE  0E01               	movlw	1
 36409   00A5B0  6F9C               	movwf	___awdiv@sign& (0+255),b
 36410   00A5B2                     l19112:
 36411                           
 36412                           ; BSR set to: 0
 36413   00A5B2  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 36414   00A5B4  D006               	goto	l19118
 36415                           
 36416                           ; BSR set to: 0
 36417   00A5B6  6D97               	negf	___awdiv@dividend& (0+255),b
 36418   00A5B8  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 36419   00A5BA  B0D8               	btfsc	status,0,c
 36420   00A5BC  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 36421                           
 36422                           ; BSR set to: 0
 36423   00A5BE  0E01               	movlw	1
 36424   00A5C0  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 36425   00A5C2                     l19118:
 36426                           
 36427                           ; BSR set to: 0
 36428   00A5C2  0E00               	movlw	0
 36429   00A5C4  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 36430   00A5C6  0E00               	movlw	0
 36431   00A5C8  6F9D               	movwf	___awdiv@quotient& (0+255),b
 36432                           
 36433                           ; BSR set to: 0
 36434   00A5CA  5199               	movf	___awdiv@divisor& (0+255),w,b
 36435   00A5CC  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 36436   00A5CE  B4D8               	btfsc	status,2,c
 36437   00A5D0  D01C               	goto	l19140
 36438                           
 36439                           ; BSR set to: 0
 36440   00A5D2  0E01               	movlw	1
 36441   00A5D4  6F9B               	movwf	___awdiv@counter& (0+255),b
 36442   00A5D6  D004               	goto	l19126
 36443   00A5D8                     l19124:
 36444                           
 36445                           ; BSR set to: 0
 36446   00A5D8  90D8               	bcf	status,0,c
 36447   00A5DA  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 36448   00A5DC  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 36449   00A5DE  2B9B               	incf	___awdiv@counter& (0+255),f,b
 36450   00A5E0                     l19126:
 36451                           
 36452                           ; BSR set to: 0
 36453   00A5E0  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 36454   00A5E2  D7FA               	goto	l19124
 36455   00A5E4                     u19240:
 36456                           
 36457                           ; BSR set to: 0
 36458   00A5E4  90D8               	bcf	status,0,c
 36459   00A5E6  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 36460   00A5E8  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 36461                           
 36462                           ; BSR set to: 0
 36463   00A5EA  5199               	movf	___awdiv@divisor& (0+255),w,b
 36464   00A5EC  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 36465   00A5EE  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36466   00A5F0  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 36467   00A5F2  A0D8               	btfss	status,0,c
 36468   00A5F4  D005               	goto	l19136
 36469                           
 36470                           ; BSR set to: 0
 36471   00A5F6  5199               	movf	___awdiv@divisor& (0+255),w,b
 36472   00A5F8  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 36473   00A5FA  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 36474   00A5FC  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 36475                           
 36476                           ; BSR set to: 0
 36477   00A5FE  819D               	bsf	___awdiv@quotient& (0+255),0,b
 36478   00A600                     l19136:
 36479                           
 36480                           ; BSR set to: 0
 36481   00A600  90D8               	bcf	status,0,c
 36482   00A602  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 36483   00A604  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 36484                           
 36485                           ; BSR set to: 0
 36486   00A606  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 36487   00A608  D7ED               	goto	u19240
 36488   00A60A                     l19140:
 36489                           
 36490                           ; BSR set to: 0
 36491   00A60A  519C               	movf	___awdiv@sign& (0+255),w,b
 36492   00A60C  B4D8               	btfsc	status,2,c
 36493   00A60E  D004               	goto	l19144
 36494                           
 36495                           ; BSR set to: 0
 36496   00A610  6D9D               	negf	___awdiv@quotient& (0+255),b
 36497   00A612  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 36498   00A614  B0D8               	btfsc	status,0,c
 36499   00A616  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 36500   00A618                     l19144:
 36501                           
 36502                           ; BSR set to: 0
 36503   00A618  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 36504   00A61C  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 36505                           
 36506                           ; BSR set to: 0
 36507   00A620  0012               	return		;funcret
 36508   00A622                     __end_of___awdiv:
 36509                           	callstack 0
 36510                           
 36511 ;; *************** function _APP_factoryReset *****************
 36512 ;; Defined at:
 36513 ;;		line 206 in file "../main.c"
 36514 ;; Parameters:    Size  Location     Type
 36515 ;;		None
 36516 ;; Auto vars:     Size  Location     Type
 36517 ;;  io              1   51[BANK1 ] unsigned char 
 36518 ;; Return value:  Size  Location     Type
 36519 ;;                  1    wreg      void 
 36520 ;; Registers used:
 36521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36522 ;; Tracked objects:
 36523 ;;		On entry : 0/0
 36524 ;;		On exit  : 0/0
 36525 ;;		Unchanged: 0/0
 36526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36528 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36530 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36531 ;;Total ram usage:        1 bytes
 36532 ;; Hardware stack levels used: 1
 36533 ;; Hardware stack levels required when called: 25
 36534 ;; This function calls:
 36535 ;;		_factoryResetGlobalEvents
 36536 ;;		_flushFlashBlock
 36537 ;;		_setType
 36538 ;; This function is called by:
 36539 ;;		_factoryReset
 36540 ;; This function uses a non-reentrant model
 36541 ;;
 36542                           
 36543                           	psect	text150
 36544   00C154                     __ptext150:
 36545                           	callstack 0
 36546   00C154                     _APP_factoryReset:
 36547                           	callstack 2
 36548                           
 36549                           ;../main.c: 207:     uint8_t io;;../main.c: 209:     factoryResetGlobalEvents();
 36550                           
 36551                           ; BSR set to: 0
 36552                           ;incstack = 0
 36553   00C154  EC0C  F062         	call	_factoryResetGlobalEvents	;wreg free
 36554                           
 36555                           ;../main.c: 211:     for (io=0; io<16; io++) {
 36556   00C158  0E00               	movlw	0
 36557   00C15A  0101               	movlb	1	; () banked
 36558   00C15C  6FF1               	movwf	APP_factoryReset@io& (0+255),b
 36559   00C15E                     l19552:
 36560                           
 36561                           ; BSR set to: 1
 36562                           
 36563                           ; BSR set to: 1
 36564                           
 36565                           ; BSR set to: 1
 36566   00C15E  0E00               	movlw	0
 36567   00C160  6FEE               	movwf	setType@type& (0+255),b
 36568   00C162  51F1               	movf	APP_factoryReset@io& (0+255),w,b
 36569   00C164  EC15  F058         	call	_setType
 36570                           
 36571                           ;../main.c: 213:     }
 36572   00C168  0101               	movlb	1	; () banked
 36573   00C16A  2BF1               	incf	APP_factoryReset@io& (0+255),f,b
 36574                           
 36575                           ; BSR set to: 1
 36576   00C16C  0E0F               	movlw	15
 36577   00C16E  65F1               	cpfsgt	APP_factoryReset@io& (0+255),b
 36578   00C170  D7F6               	goto	l19552
 36579                           
 36580                           ; BSR set to: 1
 36581                           ;../main.c: 214:     flushFlashBlock();
 36582   00C172  EC11  F053         	call	_flushFlashBlock	;wreg free
 36583   00C176  0012               	return		;funcret
 36584   00C178                     __end_of_APP_factoryReset:
 36585                           	callstack 0
 36586                           
 36587 ;; *************** function _setType *****************
 36588 ;; Defined at:
 36589 ;;		line 416 in file "../main.c"
 36590 ;; Parameters:    Size  Location     Type
 36591 ;;  io              1    wreg     unsigned char 
 36592 ;;  type            1   48[BANK1 ] unsigned char 
 36593 ;; Auto vars:     Size  Location     Type
 36594 ;;  io              1   50[BANK1 ] unsigned char 
 36595 ;;  index           1   49[BANK1 ] unsigned char 
 36596 ;; Return value:  Size  Location     Type
 36597 ;;                  1    wreg      void 
 36598 ;; Registers used:
 36599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36600 ;; Tracked objects:
 36601 ;;		On entry : 0/0
 36602 ;;		On exit  : 0/0
 36603 ;;		Unchanged: 0/0
 36604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36605 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36606 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36608 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36609 ;;Total ram usage:        3 bytes
 36610 ;; Hardware stack levels used: 1
 36611 ;; Hardware stack levels required when called: 24
 36612 ;; This function calls:
 36613 ;;		_configIO
 36614 ;;		_defaultEvents
 36615 ;;		_defaultNVs
 36616 ;;		_saveNV
 36617 ;; This function is called by:
 36618 ;;		_APP_factoryReset
 36619 ;;		_APP_nvValueChanged
 36620 ;; This function uses a non-reentrant model
 36621 ;;
 36622                           
 36623                           	psect	text151
 36624   00B02A                     __ptext151:
 36625                           	callstack 0
 36626   00B02A                     _setType:
 36627                           	callstack 2
 36628                           
 36629                           ;incstack = 0
 36630                           ;setType@io stored from wreg
 36631   00B02A  0101               	movlb	1	; () banked
 36632   00B02C  6FF0               	movwf	setType@io& (0+255),b
 36633                           
 36634                           ;../main.c: 417:     uint8_t index;;../main.c: 419:     index = (16 + 7*(io) + 0);
 36635   00B02E  0101               	movlb	1	; () banked
 36636   00B030  51F0               	movf	setType@io& (0+255),w,b
 36637   00B032  0D07               	mullw	7
 36638   00B034  50F3               	movf	243,w,c
 36639   00B036  0F10               	addlw	16
 36640   00B038  6FEF               	movwf	setType@index& (0+255),b
 36641                           
 36642                           ; BSR set to: 1
 36643                           ;../main.c: 420:     saveNV((uint8_t)index, type);
 36644   00B03A  C1EE  F1BF         	movff	setType@type,saveNV@value
 36645   00B03E  51EF               	movf	setType@index& (0+255),w,b
 36646   00B040  ECBC  F05D         	call	_saveNV
 36647                           
 36648                           ;../main.c: 423:     defaultNVs(io, type);
 36649   00B044  C1EE  F1C3         	movff	setType@type,defaultNVs@type
 36650   00B048  0101               	movlb	1	; () banked
 36651   00B04A  51F0               	movf	setType@io& (0+255),w,b
 36652   00B04C  EC42  F05B         	call	_defaultNVs
 36653                           
 36654                           ;../main.c: 426:     configIO(io);
 36655   00B050  0101               	movlb	1	; () banked
 36656   00B052  51F0               	movf	setType@io& (0+255),w,b
 36657   00B054  EC70  F028         	call	_configIO
 36658                           
 36659                           ;../main.c: 428:     if ((type == 2) || (type== 3) || (type == 4)) {
 36660   00B058  0E02               	movlw	2
 36661   00B05A  0101               	movlb	1	; () banked
 36662   00B05C  19EE               	xorwf	setType@type& (0+255),w,b
 36663   00B05E  B4D8               	btfsc	status,2,c
 36664   00B060  D008               	goto	u19350
 36665                           
 36666                           ; BSR set to: 1
 36667   00B062  0E03               	movlw	3
 36668   00B064  19EE               	xorwf	setType@type& (0+255),w,b
 36669   00B066  B4D8               	btfsc	status,2,c
 36670   00B068  D004               	goto	u19350
 36671                           
 36672                           ; BSR set to: 1
 36673   00B06A  0E04               	movlw	4
 36674   00B06C  19EE               	xorwf	setType@type& (0+255),w,b
 36675   00B06E  A4D8               	btfss	status,2,c
 36676   00B070  D008               	goto	l19200
 36677   00B072                     u19350:
 36678                           
 36679                           ; BSR set to: 1
 36680                           ;../main.c: 429:         currentPos[io] = 128;
 36681   00B072  0E40               	movlw	low _currentPos
 36682   00B074  25F0               	addwf	setType@io& (0+255),w,b
 36683   00B076  6ED9               	movwf	fsr2l,c
 36684   00B078  6ADA               	clrf	fsr2h,c
 36685   00B07A  0E01               	movlw	high _currentPos
 36686   00B07C  22DA               	addwfc	fsr2h,f,c
 36687   00B07E  0E80               	movlw	128
 36688   00B080  6EDF               	movwf	indf2,c
 36689   00B082                     l19200:
 36690                           
 36691                           ; BSR set to: 1
 36692                           ;../main.c: 433:     defaultEvents(io, type);
 36693   00B082  C1EE  F1EA         	movff	setType@type,defaultEvents@type
 36694   00B086  51F0               	movf	setType@io& (0+255),w,b
 36695   00B088  EC1A  F03A         	call	_defaultEvents
 36696   00B08C  0012               	return		;funcret
 36697   00B08E                     __end_of_setType:
 36698                           	callstack 0
 36699                           
 36700 ;; *************** function _defaultNVs *****************
 36701 ;; Defined at:
 36702 ;;		line 337 in file "../universalNv.c"
 36703 ;; Parameters:    Size  Location     Type
 36704 ;;  io              1    wreg     unsigned char 
 36705 ;;  type            1    5[BANK1 ] unsigned char 
 36706 ;; Auto vars:     Size  Location     Type
 36707 ;;  io              1    8[BANK1 ] unsigned char 
 36708 ;;  i               1    9[BANK1 ] unsigned char 
 36709 ;; Return value:  Size  Location     Type
 36710 ;;                  1    wreg      void 
 36711 ;; Registers used:
 36712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36713 ;; Tracked objects:
 36714 ;;		On entry : 0/0
 36715 ;;		On exit  : 0/0
 36716 ;;		Unchanged: 0/0
 36717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36718 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36719 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36720 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36721 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36722 ;;Total ram usage:        5 bytes
 36723 ;; Hardware stack levels used: 1
 36724 ;; Hardware stack levels required when called: 19
 36725 ;; This function calls:
 36726 ;;		_loadNvCache
 36727 ;;		_saveNV
 36728 ;; This function is called by:
 36729 ;;		_setType
 36730 ;; This function uses a non-reentrant model
 36731 ;;
 36732                           
 36733                           	psect	text152
 36734   00B684                     __ptext152:
 36735                           	callstack 0
 36736   00B684                     _defaultNVs:
 36737                           	callstack 6
 36738                           
 36739                           ;incstack = 0
 36740                           ;defaultNVs@io stored from wreg
 36741   00B684  0101               	movlb	1	; () banked
 36742   00B686  6FC6               	movwf	defaultNVs@io& (0+255),b
 36743                           
 36744                           ;../universalNv.c: 338:     uint8_t i;;../universalNv.c: 340:     for (i=1; i<7; i++) {
 36745   00B688  0E01               	movlw	1
 36746   00B68A  0101               	movlb	1	; () banked
 36747   00B68C  6FC7               	movwf	defaultNVs@i& (0+255),b
 36748   00B68E                     l19076:
 36749                           
 36750                           ; BSR set to: 1
 36751                           ;../universalNv.c: 341:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 36752   00B68E  51C3               	movf	defaultNVs@type& (0+255),w,b
 36753   00B690  0D07               	mullw	7
 36754   00B692  0E8C               	movlw	low _channelDefaultNVs
 36755   00B694  24F3               	addwf	243,w,c
 36756   00B696  6FC4               	movwf	??_defaultNVs& (0+255),b
 36757   00B698  0EEE               	movlw	high _channelDefaultNVs
 36758   00B69A  20F4               	addwfc	prodh,w,c
 36759   00B69C  6FC5               	movwf	(??_defaultNVs+1)& (0+255),b
 36760   00B69E  51C7               	movf	defaultNVs@i& (0+255),w,b
 36761   00B6A0  27C4               	addwf	??_defaultNVs& (0+255),f,b
 36762   00B6A2  0E00               	movlw	0
 36763   00B6A4  23C5               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 36764   00B6A6  C1C4  FFF6         	movff	??_defaultNVs,tblptrl
 36765   00B6AA  C1C5  FFF7         	movff	??_defaultNVs+1,tblptrh
 36766   00B6AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36767   00B6AE  6AF8               	clrf	tblptru,c
 36768   00B6B0                     	endif
 36769   00B6B0                     	if	0	;tblptru may be non-zero
 36770   00B6B0                     	endif
 36771   00B6B0  0008               	tblrd		*
 36772   00B6B2  CFF5 F1BF          	movff	tablat,saveNV@value
 36773   00B6B6  51C6               	movf	defaultNVs@io& (0+255),w,b
 36774   00B6B8  0D07               	mullw	7
 36775   00B6BA  50F3               	movf	243,w,c
 36776   00B6BC  25C7               	addwf	defaultNVs@i& (0+255),w,b
 36777   00B6BE  0F10               	addlw	16
 36778   00B6C0  ECBC  F05D         	call	_saveNV
 36779                           
 36780                           ;../universalNv.c: 342:     }
 36781   00B6C4  0101               	movlb	1	; () banked
 36782   00B6C6  2BC7               	incf	defaultNVs@i& (0+255),f,b
 36783                           
 36784                           ; BSR set to: 1
 36785   00B6C8  0E06               	movlw	6
 36786   00B6CA  65C7               	cpfsgt	defaultNVs@i& (0+255),b
 36787   00B6CC  D7E0               	goto	l19076
 36788                           
 36789                           ; BSR set to: 1
 36790                           ;../universalNv.c: 343:     loadNvCache();
 36791   00B6CE  EC4D  F05C         	call	_loadNvCache	;wreg free
 36792   00B6D2  0012               	return		;funcret
 36793   00B6D4                     __end_of_defaultNVs:
 36794                           	callstack 0
 36795                           
 36796 ;; *************** function _saveNV *****************
 36797 ;; Defined at:
 36798 ;;		line 188 in file "../../VLCBlib_PIC/nv.c"
 36799 ;; Parameters:    Size  Location     Type
 36800 ;;  index           1    wreg     unsigned char 
 36801 ;;  value           1    1[BANK1 ] unsigned char 
 36802 ;; Auto vars:     Size  Location     Type
 36803 ;;  index           1    4[BANK1 ] unsigned char 
 36804 ;; Return value:  Size  Location     Type
 36805 ;;                  1    wreg      void 
 36806 ;; Registers used:
 36807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36808 ;; Tracked objects:
 36809 ;;		On entry : 0/0
 36810 ;;		On exit  : 0/0
 36811 ;;		Unchanged: 0/0
 36812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36813 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36814 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36815 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36816 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36817 ;;Total ram usage:        4 bytes
 36818 ;; Hardware stack levels used: 1
 36819 ;; Hardware stack levels required when called: 18
 36820 ;; This function calls:
 36821 ;;		_writeNVM
 36822 ;; This function is called by:
 36823 ;;		_setType
 36824 ;;		_defaultNVs
 36825 ;; This function uses a non-reentrant model
 36826 ;;
 36827                           
 36828                           	psect	text153
 36829   00BB78                     __ptext153:
 36830                           	callstack 0
 36831   00BB78                     _saveNV:
 36832                           	callstack 7
 36833                           
 36834                           ;incstack = 0
 36835                           ;saveNV@index stored from wreg
 36836   00BB78  0101               	movlb	1	; () banked
 36837   00BB7A  6FC2               	movwf	saveNV@index& (0+255),b
 36838                           
 36839                           ;../../VLCBlib_PIC/nv.c: 190:     nvCache[index] = value;
 36840   00BB7C  0E00               	movlw	low _nvCache
 36841   00BB7E  0101               	movlb	1	; () banked
 36842   00BB80  25C2               	addwf	saveNV@index& (0+255),w,b
 36843   00BB82  6ED9               	movwf	fsr2l,c
 36844   00BB84  6ADA               	clrf	fsr2h,c
 36845   00BB86  0E04               	movlw	high _nvCache
 36846   00BB88  22DA               	addwfc	fsr2h,f,c
 36847   00BB8A  C1BF  FFDF         	movff	saveNV@value,indf2
 36848                           
 36849                           ; BSR set to: 1
 36850                           ;../../VLCBlib_PIC/nv.c: 192:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 36851   00BB8E  0E80               	movlw	128
 36852   00BB90  25C2               	addwf	saveNV@index& (0+255),w,b
 36853   00BB92  6FC0               	movwf	??_saveNV& (0+255),b
 36854   00BB94  6BC1               	clrf	(??_saveNV+1)& (0+255),b
 36855   00BB96  0EFF               	movlw	255
 36856   00BB98  23C1               	addwfc	(??_saveNV+1)& (0+255),f,b
 36857   00BB9A  C1C0  F0A4         	movff	??_saveNV,writeNVM@index
 36858   00BB9E  C1C1  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 36859   00BBA2  0100               	movlb	0	; () banked
 36860   00BBA4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36861   00BBA6  C1BF  F0A7         	movff	saveNV@value,writeNVM@value
 36862   00BBAA  0E01               	movlw	1
 36863   00BBAC  EC91  F05B         	call	_writeNVM
 36864   00BBB0  0012               	return		;funcret
 36865   00BBB2                     __end_of_saveNV:
 36866                           	callstack 0
 36867                           
 36868 ;; *************** function _loadNvCache *****************
 36869 ;; Defined at:
 36870 ;;		line 151 in file "../../VLCBlib_PIC/nv.c"
 36871 ;; Parameters:    Size  Location     Type
 36872 ;;		None
 36873 ;; Auto vars:     Size  Location     Type
 36874 ;;  temp            2   57[BANK0 ] short 
 36875 ;;  i               1   59[BANK0 ] unsigned char 
 36876 ;; Return value:  Size  Location     Type
 36877 ;;                  1    wreg      void 
 36878 ;; Registers used:
 36879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36880 ;; Tracked objects:
 36881 ;;		On entry : 0/0
 36882 ;;		On exit  : 0/0
 36883 ;;		Unchanged: 0/0
 36884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36886 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36887 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36888 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36889 ;;Total ram usage:        5 bytes
 36890 ;; Hardware stack levels used: 1
 36891 ;; Hardware stack levels required when called: 14
 36892 ;; This function calls:
 36893 ;;		_readNVM
 36894 ;; This function is called by:
 36895 ;;		_defaultNVs
 36896 ;;		_nvPowerUp
 36897 ;; This function uses a non-reentrant model
 36898 ;;
 36899                           
 36900                           	psect	text154
 36901   00B89A                     __ptext154:
 36902                           	callstack 0
 36903   00B89A                     _loadNvCache:
 36904                           	callstack 14
 36905                           
 36906                           ;../../VLCBlib_PIC/nv.c: 152:     uint8_t i;;../../VLCBlib_PIC/nv.c: 153:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 155:     for (i=1; i<= 127; i++) {
 36907                           
 36908                           ;incstack = 0
 36909   00B89A  0E01               	movlw	1
 36910   00B89C  0100               	movlb	0	; () banked
 36911   00B89E  6F9B               	movwf	loadNvCache@i& (0+255),b
 36912   00B8A0                     l18956:
 36913                           
 36914                           ; BSR set to: 0
 36915                           ;../../VLCBlib_PIC/nv.c: 156:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 36916   00B8A0  0E80               	movlw	128
 36917   00B8A2  259B               	addwf	loadNvCache@i& (0+255),w,b
 36918   00B8A4  6F97               	movwf	??_loadNvCache& (0+255),b
 36919   00B8A6  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 36920   00B8A8  0EFF               	movlw	255
 36921   00B8AA  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 36922   00B8AC  C097  F091         	movff	??_loadNvCache,readNVM@index
 36923   00B8B0  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 36924   00B8B4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 36925   00B8B6  0E01               	movlw	1
 36926   00B8B8  ECD9  F058         	call	_readNVM
 36927   00B8BC  C091  F099         	movff	?_readNVM,loadNvCache@temp
 36928   00B8C0  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 36929                           
 36930                           ;../../VLCBlib_PIC/nv.c: 157:         if (temp < 0) {
 36931   00B8C4  0100               	movlb	0	; () banked
 36932   00B8C6  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 36933   00B8C8  D008               	goto	l18964
 36934                           
 36935                           ; BSR set to: 0
 36936                           ;../../VLCBlib_PIC/nv.c: 160:             nvCache[i] = (uint8_t)temp;
 36937   00B8CA  0E00               	movlw	low _nvCache
 36938   00B8CC  259B               	addwf	loadNvCache@i& (0+255),w,b
 36939   00B8CE  6ED9               	movwf	fsr2l,c
 36940   00B8D0  6ADA               	clrf	fsr2h,c
 36941   00B8D2  0E04               	movlw	high _nvCache
 36942   00B8D4  22DA               	addwfc	fsr2h,f,c
 36943   00B8D6  C099  FFDF         	movff	loadNvCache@temp,indf2
 36944   00B8DA                     l18964:
 36945                           
 36946                           ; BSR set to: 0
 36947                           ;../../VLCBlib_PIC/nv.c: 162:     }
 36948   00B8DA  2B9B               	incf	loadNvCache@i& (0+255),f,b
 36949                           
 36950                           ; BSR set to: 0
 36951   00B8DC  0E7F               	movlw	127
 36952   00B8DE  659B               	cpfsgt	loadNvCache@i& (0+255),b
 36953   00B8E0  D7DF               	goto	l18956
 36954   00B8E2  0012               	return	
 36955   00B8E4                     __end_of_loadNvCache:
 36956                           	callstack 0
 36957                           
 36958 ;; *************** function _defaultEvents *****************
 36959 ;; Defined at:
 36960 ;;		line 107 in file "../universalEvents.c"
 36961 ;; Parameters:    Size  Location     Type
 36962 ;;  io              1    wreg     unsigned char 
 36963 ;;  type            1   44[BANK1 ] unsigned char 
 36964 ;; Auto vars:     Size  Location     Type
 36965 ;;  io              1   47[BANK1 ] unsigned char 
 36966 ;;  en              2   45[BANK1 ] unsigned short 
 36967 ;; Return value:  Size  Location     Type
 36968 ;;                  1    wreg      void 
 36969 ;; Registers used:
 36970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36971 ;; Tracked objects:
 36972 ;;		On entry : 0/0
 36973 ;;		On exit  : 0/0
 36974 ;;		Unchanged: 0/0
 36975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36976 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36977 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36979 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36980 ;;Total ram usage:        4 bytes
 36981 ;; Hardware stack levels used: 1
 36982 ;; Hardware stack levels required when called: 23
 36983 ;; This function calls:
 36984 ;;		_addEvent
 36985 ;;		_clearEvents
 36986 ;; This function is called by:
 36987 ;;		_setType
 36988 ;; This function uses a non-reentrant model
 36989 ;;
 36990                           
 36991                           	psect	text155
 36992   007434                     __ptext155:
 36993                           	callstack 0
 36994   007434                     _defaultEvents:
 36995                           	callstack 2
 36996                           
 36997                           ; BSR set to: 0
 36998                           ;incstack = 0
 36999                           ;defaultEvents@io stored from wreg
 37000   007434  0101               	movlb	1	; () banked
 37001   007436  6FED               	movwf	defaultEvents@io& (0+255),b
 37002                           
 37003                           ;../universalEvents.c: 108:     uint16_t en = io+1;
 37004   007438  0E01               	movlw	1
 37005   00743A  0101               	movlb	1	; () banked
 37006   00743C  25ED               	addwf	defaultEvents@io& (0+255),w,b
 37007   00743E  6FEB               	movwf	defaultEvents@en& (0+255),b
 37008   007440  6BEC               	clrf	(defaultEvents@en+1)& (0+255),b
 37009   007442  0E00               	movlw	0
 37010   007444  23EC               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 37011                           
 37012                           ; BSR set to: 1
 37013                           ;../universalEvents.c: 109:     clearEvents(io);
 37014   007446  51ED               	movf	defaultEvents@io& (0+255),w,b
 37015   007448  EC60  F05D         	call	_clearEvents
 37016                           
 37017                           ;../universalEvents.c: 112:     switch(type) {
 37018   00744C  D094               	goto	l19096
 37019   00744E                     l19088:
 37020                           
 37021                           ; BSR set to: 1
 37022                           ;../universalEvents.c: 116:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 37023   00744E  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 37024   007452  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 37025   007456  0E64               	movlw	100
 37026   007458  25EB               	addwf	defaultEvents@en& (0+255),w,b
 37027   00745A  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 37028   00745C  0E00               	movlw	0
 37029   00745E  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37030   007460  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37031   007462  0E00               	movlw	0
 37032   007464  6FDF               	movwf	addEvent@evNum& (0+255),b
 37033   007466  51ED               	movf	defaultEvents@io& (0+255),w,b
 37034   007468  0D04               	mullw	4
 37035   00746A  50F3               	movf	243,w,c
 37036   00746C  0F08               	addlw	8
 37037   00746E  6FE0               	movwf	addEvent@evVal& (0+255),b
 37038   007470  0E01               	movlw	1
 37039   007472  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 37040   007474  ECCB  F032         	call	_addEvent	;wreg free
 37041   007478                     l583:
 37042                           
 37043                           ;../universalEvents.c: 121:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37044   007478  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 37045   00747C  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 37046   007480  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 37047   007484  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37048   007488  0E01               	movlw	1
 37049   00748A  0101               	movlb	1	; () banked
 37050   00748C  6FDF               	movwf	addEvent@evNum& (0+255),b
 37051   00748E  51ED               	movf	defaultEvents@io& (0+255),w,b
 37052   007490  0D05               	mullw	5
 37053   007492  50F3               	movf	243,w,c
 37054   007494  0F08               	addlw	8
 37055   007496  6FE0               	movwf	addEvent@evVal& (0+255),b
 37056   007498  0E01               	movlw	1
 37057   00749A  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 37058   00749C  ECCB  F032         	call	_addEvent	;wreg free
 37059                           
 37060                           ;../universalEvents.c: 124:             break;
 37061   0074A0  0012               	return	
 37062   0074A2                     l19090:
 37063                           
 37064                           ; BSR set to: 1
 37065                           ;../universalEvents.c: 127:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 37066   0074A2  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 37067   0074A6  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 37068   0074AA  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 37069   0074AE  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37070   0074B2  0E00               	movlw	0
 37071   0074B4  6FDF               	movwf	addEvent@evNum& (0+255),b
 37072   0074B6  51ED               	movf	defaultEvents@io& (0+255),w,b
 37073   0074B8  0D04               	mullw	4
 37074   0074BA  50F3               	movf	243,w,c
 37075   0074BC  0F08               	addlw	8
 37076   0074BE  6FE0               	movwf	addEvent@evVal& (0+255),b
 37077   0074C0  0E01               	movlw	1
 37078   0074C2  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 37079   0074C4  ECCB  F032         	call	_addEvent	;wreg free
 37080                           
 37081                           ;../universalEvents.c: 128:             break;
 37082   0074C8  0012               	return	
 37083   0074CA                     l19092:
 37084                           
 37085                           ; BSR set to: 1
 37086                           ;../universalEvents.c: 132:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 37087   0074CA  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 37088   0074CE  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 37089   0074D2  0E64               	movlw	100
 37090   0074D4  25EB               	addwf	defaultEvents@en& (0+255),w,b
 37091   0074D6  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 37092   0074D8  0E00               	movlw	0
 37093   0074DA  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37094   0074DC  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37095   0074DE  0E00               	movlw	0
 37096   0074E0  6FDF               	movwf	addEvent@evNum& (0+255),b
 37097   0074E2  51ED               	movf	defaultEvents@io& (0+255),w,b
 37098   0074E4  0D04               	mullw	4
 37099   0074E6  50F3               	movf	243,w,c
 37100   0074E8  0F08               	addlw	8
 37101   0074EA  6FE0               	movwf	addEvent@evVal& (0+255),b
 37102   0074EC  0E01               	movlw	1
 37103   0074EE  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 37104   0074F0  ECCB  F032         	call	_addEvent	;wreg free
 37105                           
 37106                           ;../universalEvents.c: 133:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 37107   0074F4  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 37108   0074F8  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 37109   0074FC  0E2C               	movlw	44
 37110   0074FE  0101               	movlb	1	; () banked
 37111   007500  25EB               	addwf	defaultEvents@en& (0+255),w,b
 37112   007502  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 37113   007504  0E01               	movlw	1
 37114   007506  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37115   007508  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37116   00750A  0E00               	movlw	0
 37117   00750C  6FDF               	movwf	addEvent@evNum& (0+255),b
 37118   00750E  51ED               	movf	defaultEvents@io& (0+255),w,b
 37119   007510  0D04               	mullw	4
 37120   007512  50F3               	movf	243,w,c
 37121   007514  0F09               	addlw	9
 37122   007516  6FE0               	movwf	addEvent@evVal& (0+255),b
 37123   007518  0E01               	movlw	1
 37124   00751A  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 37125   00751C  ECCB  F032         	call	_addEvent	;wreg free
 37126                           
 37127                           ;../universalEvents.c: 134:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 37128   007520  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 37129   007524  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 37130   007528  0EC8               	movlw	200
 37131   00752A  0101               	movlb	1	; () banked
 37132   00752C  25EB               	addwf	defaultEvents@en& (0+255),w,b
 37133   00752E  6FDD               	movwf	addEvent@eventNumber& (0+255),b
 37134   007530  0E00               	movlw	0
 37135   007532  21EC               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37136   007534  6FDE               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37137   007536  0E00               	movlw	0
 37138   007538  6FDF               	movwf	addEvent@evNum& (0+255),b
 37139   00753A  51ED               	movf	defaultEvents@io& (0+255),w,b
 37140   00753C  0D04               	mullw	4
 37141   00753E  50F3               	movf	243,w,c
 37142   007540  0F0A               	addlw	10
 37143   007542  6FE0               	movwf	addEvent@evVal& (0+255),b
 37144   007544  0E01               	movlw	1
 37145   007546  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 37146   007548  ECCB  F032         	call	_addEvent	;wreg free
 37147                           
 37148                           ;../universalEvents.c: 136:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37149   00754C  C0B4  F1DB         	movff	_nn,addEvent@nodeNumber
 37150   007550  C0B5  F1DC         	movff	_nn+1,addEvent@nodeNumber+1
 37151   007554  C1EB  F1DD         	movff	defaultEvents@en,addEvent@eventNumber
 37152   007558  C1EC  F1DE         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37153   00755C  0E01               	movlw	1
 37154   00755E  0101               	movlb	1	; () banked
 37155   007560  6FDF               	movwf	addEvent@evNum& (0+255),b
 37156   007562  51ED               	movf	defaultEvents@io& (0+255),w,b
 37157   007564  0D05               	mullw	5
 37158   007566  50F3               	movf	243,w,c
 37159   007568  0F08               	addlw	8
 37160   00756A  6FE0               	movwf	addEvent@evVal& (0+255),b
 37161   00756C  0E01               	movlw	1
 37162   00756E  6FE1               	movwf	addEvent@forceOwnNN& (0+255),b
 37163   007570  ECCB  F032         	call	_addEvent	;wreg free
 37164                           
 37165                           ;../universalEvents.c: 137:             break;
 37166   007574  0012               	return	
 37167   007576                     l19096:
 37168   007576  0101               	movlb	1	; () banked
 37169   007578  51EA               	movf	defaultEvents@type& (0+255),w,b
 37170                           
 37171                           ; Switch size 1, requested type "simple"
 37172                           ; Number of cases is 5, Range of values is 0 to 4
 37173                           ; switch strategies available:
 37174                           ; Name         Instructions Cycles
 37175                           ; simple_byte           16     9 (average)
 37176                           ;	Chosen strategy is simple_byte
 37177   00757A  0A00               	xorlw	0	; case 0
 37178   00757C  B4D8               	btfsc	status,2,c
 37179   00757E  D791               	goto	l19090
 37180   007580  0A01               	xorlw	1	; case 1
 37181   007582  B4D8               	btfsc	status,2,c
 37182   007584  D779               	goto	l583
 37183   007586  0A03               	xorlw	3	; case 2
 37184   007588  B4D8               	btfsc	status,2,c
 37185   00758A  D79F               	goto	l19092
 37186   00758C  0A01               	xorlw	1	; case 3
 37187   00758E  B4D8               	btfsc	status,2,c
 37188   007590  D75E               	goto	l19088
 37189   007592  0A07               	xorlw	7	; case 4
 37190   007594  0012               	return	
 37191   007596                     __end_of_defaultEvents:
 37192                           	callstack 0
 37193                           
 37194 ;; *************** function _clearEvents *****************
 37195 ;; Defined at:
 37196 ;;		line 195 in file "../universalEvents.c"
 37197 ;; Parameters:    Size  Location     Type
 37198 ;;  io              1    wreg     unsigned char 
 37199 ;; Auto vars:     Size  Location     Type
 37200 ;;  io              1   39[BANK1 ] unsigned char 
 37201 ;; Return value:  Size  Location     Type
 37202 ;;                  1    wreg      void 
 37203 ;; Registers used:
 37204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37205 ;; Tracked objects:
 37206 ;;		On entry : 0/0
 37207 ;;		On exit  : 0/0
 37208 ;;		Unchanged: 0/0
 37209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37211 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37213 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37214 ;;Total ram usage:        1 bytes
 37215 ;; Hardware stack levels used: 1
 37216 ;; Hardware stack levels required when called: 22
 37217 ;; This function calls:
 37218 ;;		_deleteActionRange
 37219 ;;		_deleteHappeningRange
 37220 ;; This function is called by:
 37221 ;;		_defaultEvents
 37222 ;; This function uses a non-reentrant model
 37223 ;;
 37224                           
 37225                           	psect	text156
 37226   00BAC0                     __ptext156:
 37227                           	callstack 0
 37228   00BAC0                     _clearEvents:
 37229                           	callstack 2
 37230                           
 37231                           ;incstack = 0
 37232                           ;clearEvents@io stored from wreg
 37233   00BAC0  0101               	movlb	1	; () banked
 37234   00BAC2  6FE5               	movwf	clearEvents@io& (0+255),b
 37235                           
 37236                           ;../universalEvents.c: 196:     deleteActionRange((8 + 5*(io)), 5);
 37237   00BAC4  0E05               	movlw	5
 37238   00BAC6  0101               	movlb	1	; () banked
 37239   00BAC8  6FDB               	movwf	deleteActionRange@number& (0+255),b
 37240   00BACA  51E5               	movf	clearEvents@io& (0+255),w,b
 37241   00BACC  0D05               	mullw	5
 37242   00BACE  50F3               	movf	243,w,c
 37243   00BAD0  0F08               	addlw	8
 37244   00BAD2  ECDB  F04A         	call	_deleteActionRange
 37245                           
 37246                           ;../universalEvents.c: 197:     deleteActionRange((8 + 5*(io)) | 0x80, 5);
 37247   00BAD6  0E05               	movlw	5
 37248   00BAD8  0101               	movlb	1	; () banked
 37249   00BADA  6FDB               	movwf	deleteActionRange@number& (0+255),b
 37250   00BADC  51E5               	movf	clearEvents@io& (0+255),w,b
 37251   00BADE  0D05               	mullw	5
 37252   00BAE0  50F3               	movf	243,w,c
 37253   00BAE2  0F08               	addlw	8
 37254   00BAE4  0980               	iorlw	128
 37255   00BAE6  ECDB  F04A         	call	_deleteActionRange
 37256                           
 37257                           ;../universalEvents.c: 198:     deleteHappeningRange((8 + 4*(io)), 4);
 37258   00BAEA  0E04               	movlw	4
 37259   00BAEC  0101               	movlb	1	; () banked
 37260   00BAEE  6FDB               	movwf	deleteHappeningRange@number& (0+255),b
 37261   00BAF0  51E5               	movf	clearEvents@io& (0+255),w,b
 37262   00BAF2  0D04               	mullw	4
 37263   00BAF4  50F3               	movf	243,w,c
 37264   00BAF6  0F08               	addlw	8
 37265   00BAF8  EC2F  F044         	call	_deleteHappeningRange
 37266   00BAFC  0012               	return		;funcret
 37267   00BAFE                     __end_of_clearEvents:
 37268                           	callstack 0
 37269                           
 37270 ;; *************** function _deleteHappeningRange *****************
 37271 ;; Defined at:
 37272 ;;		line 239 in file "../../VLCBlib_PIC/event_producer.c"
 37273 ;; Parameters:    Size  Location     Type
 37274 ;;  happening       1    wreg     unsigned char 
 37275 ;;  number          1   29[BANK1 ] unsigned char 
 37276 ;; Auto vars:     Size  Location     Type
 37277 ;;  happening       1   35[BANK1 ] unsigned char 
 37278 ;;  h               1   36[BANK1 ] unsigned char 
 37279 ;;  f               1    0        struct .
 37280 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 37281 ;; Return value:  Size  Location     Type
 37282 ;;                  1    wreg      void 
 37283 ;; Registers used:
 37284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37285 ;; Tracked objects:
 37286 ;;		On entry : 0/0
 37287 ;;		On exit  : 0/0
 37288 ;;		Unchanged: 0/0
 37289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37290 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37291 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37292 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37293 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37294 ;;Total ram usage:        9 bytes
 37295 ;; Hardware stack levels used: 1
 37296 ;; Hardware stack levels required when called: 21
 37297 ;; This function calls:
 37298 ;;		_checkRemoveTableEntry
 37299 ;;		_flushFlashBlock
 37300 ;;		_readNVM
 37301 ;;		_rebuildHashtable
 37302 ;;		_validStart
 37303 ;;		_writeEv
 37304 ;; This function is called by:
 37305 ;;		_clearEvents
 37306 ;; This function uses a non-reentrant model
 37307 ;;
 37308                           
 37309                           	psect	text157
 37310   00885E                     __ptext157:
 37311                           	callstack 0
 37312   00885E                     _deleteHappeningRange:
 37313                           	callstack 2
 37314                           
 37315                           ;incstack = 0
 37316                           ;deleteHappeningRange@happening stored from wreg
 37317   00885E  0101               	movlb	1	; () banked
 37318   008860  6FE1               	movwf	deleteHappeningRange@happening& (0+255),b
 37319                           
 37320                           ;../../VLCBlib_PIC/event_producer.c: 240:     uint8_t tableIndex;;../../VLCBlib_PIC/even
      +                          t_producer.c: 241:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37321   008862  0E00               	movlw	0
 37322   008864  0101               	movlb	1	; () banked
 37323   008866  6FE3               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 37324   008868                     l18814:
 37325                           
 37326                           ; BSR set to: 1
 37327                           ;../../VLCBlib_PIC/event_producer.c: 242:         if ( validStart(tableIndex)) {
 37328   008868  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37329   00886A  EC6A  F05B         	call	_validStart
 37330   00886E  0900               	iorlw	0
 37331   008870  B4D8               	btfsc	status,2,c
 37332   008872  D059               	goto	l18826
 37333   008874  0101               	movlb	1	; () banked
 37334   008876  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37335   008878  6FDC               	movwf	??_deleteHappeningRange& (0+255),b
 37336   00887A  6BDD               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37337   00887C  3BDC               	swapf	??_deleteHappeningRange& (0+255),f,b
 37338   00887E  3BDD               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 37339   008880  0EF0               	movlw	240
 37340   008882  17DD               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37341   008884  51DC               	movf	??_deleteHappeningRange& (0+255),w,b
 37342   008886  0B0F               	andlw	15
 37343   008888  13DD               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 37344   00888A  0EF0               	movlw	240
 37345   00888C  17DC               	andwf	??_deleteHappeningRange& (0+255),f,b
 37346   00888E  0E80               	movlw	128
 37347   008890  25DC               	addwf	??_deleteHappeningRange& (0+255),w,b
 37348   008892  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37349   008894  0EEF               	movlw	239
 37350   008896  21DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37351   008898  6FDF               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37352   00889A  C1DE  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37353   00889E  C1DF  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37354   0088A2  0100               	movlb	0	; () banked
 37355   0088A4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37356   0088A6  0E01               	movlw	1
 37357   0088A8  ECD9  F058         	call	_readNVM
 37358                           
 37359                           ;../../VLCBlib_PIC/event_producer.c: 247:             h = (Happening)readNVM(FLASH_NVM_T
      +                          YPE,
 37360   0088AC  0101               	movlb	1	; () banked
 37361   0088AE  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37362   0088B0  0D10               	mullw	16
 37363   0088B2  CFF3 F1DC          	movff	prodl,??_deleteHappeningRange
 37364   0088B6  CFF4 F1DD          	movff	prodh,??_deleteHappeningRange+1
 37365   0088BA  0E86               	movlw	134
 37366   0088BC  25DC               	addwf	??_deleteHappeningRange& (0+255),w,b
 37367   0088BE  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37368   0088C0  0EEF               	movlw	239
 37369   0088C2  21DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 37370   0088C4  6FDF               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 37371   0088C6  C1DE  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 37372   0088CA  C1DF  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 37373   0088CE  0100               	movlb	0	; () banked
 37374   0088D0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37375   0088D2  0E01               	movlw	1
 37376   0088D4  ECD9  F058         	call	_readNVM
 37377   0088D8  0100               	movlb	0	; () banked
 37378   0088DA  5191               	movf	?_readNVM& (0+255),w,b
 37379   0088DC  0101               	movlb	1	; () banked
 37380   0088DE  6FE2               	movwf	deleteHappeningRange@h& (0+255),b
 37381                           
 37382                           ; BSR set to: 1
 37383                           ;../../VLCBlib_PIC/event_producer.c: 249:             if ((h >= happening) && (h < happe
      +                          ning+number)) {
 37384   0088E0  51E1               	movf	deleteHappeningRange@happening& (0+255),w,b
 37385   0088E2  5DE2               	subwf	deleteHappeningRange@h& (0+255),w,b
 37386   0088E4  A0D8               	btfss	status,0,c
 37387   0088E6  D01F               	goto	l18826
 37388                           
 37389                           ; BSR set to: 1
 37390   0088E8  51DB               	movf	deleteHappeningRange@number& (0+255),w,b
 37391   0088EA  C1E1  F1DC         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 37392   0088EE  6BDD               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 37393   0088F0  27DC               	addwf	??_deleteHappeningRange& (0+255),f,b
 37394   0088F2  0E00               	movlw	0
 37395   0088F4  23DD               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 37396   0088F6  51E2               	movf	deleteHappeningRange@h& (0+255),w,b
 37397   0088F8  6FDE               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 37398   0088FA  6BDF               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 37399   0088FC  51DC               	movf	??_deleteHappeningRange& (0+255),w,b
 37400   0088FE  5DDE               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 37401   008900  51DF               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 37402   008902  0A80               	xorlw	128
 37403   008904  6FE0               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 37404   008906  51DD               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 37405   008908  0A80               	xorlw	128
 37406   00890A  59E0               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 37407   00890C  B0D8               	btfsc	status,0,c
 37408   00890E  D00B               	goto	l18826
 37409                           
 37410                           ; BSR set to: 1
 37411                           ;../../VLCBlib_PIC/event_producer.c: 250:                 writeEv(tableIndex, 0, 0);
 37412   008910  0E00               	movlw	0
 37413   008912  6FCF               	movwf	writeEv@evNum& (0+255),b
 37414   008914  0E00               	movlw	0
 37415   008916  6FD0               	movwf	writeEv@evVal& (0+255),b
 37416   008918  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37417   00891A  EC0C  F01D         	call	_writeEv
 37418                           
 37419                           ;../../VLCBlib_PIC/event_producer.c: 251:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37420   00891E  0101               	movlb	1	; () banked
 37421   008920  51E3               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 37422   008922  EC97  F05C         	call	_checkRemoveTableEntry
 37423   008926                     l18826:
 37424                           
 37425                           ;../../VLCBlib_PIC/event_producer.c: 254:     }
 37426   008926  0101               	movlb	1	; () banked
 37427   008928  2BE3               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 37428                           
 37429                           ; BSR set to: 1
 37430   00892A  29E3               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 37431   00892C  A4D8               	btfss	status,2,c
 37432   00892E  D79C               	goto	l18814
 37433                           
 37434                           ; BSR set to: 1
 37435                           ;../../VLCBlib_PIC/event_producer.c: 255:     flushFlashBlock();
 37436   008930  EC11  F053         	call	_flushFlashBlock	;wreg free
 37437                           
 37438                           ;../../VLCBlib_PIC/event_producer.c: 256:     rebuildHashtable();
 37439   008934  EC57  F03F         	call	_rebuildHashtable	;wreg free
 37440   008938  0012               	return		;funcret
 37441   00893A                     __end_of_deleteHappeningRange:
 37442                           	callstack 0
 37443                           
 37444 ;; *************** function _deleteActionRange *****************
 37445 ;; Defined at:
 37446 ;;		line 470 in file "../event_consumerDualActionQueue.c"
 37447 ;; Parameters:    Size  Location     Type
 37448 ;;  action          1    wreg     unsigned char 
 37449 ;;  number          1   29[BANK1 ] unsigned char 
 37450 ;; Auto vars:     Size  Location     Type
 37451 ;;  action          1   36[BANK1 ] unsigned char 
 37452 ;;  e               1   37[BANK1 ] unsigned char 
 37453 ;;  updated         1   35[BANK1 ] enum E12700
 37454 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 37455 ;; Return value:  Size  Location     Type
 37456 ;;                  1    wreg      void 
 37457 ;; Registers used:
 37458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37459 ;; Tracked objects:
 37460 ;;		On entry : 0/0
 37461 ;;		On exit  : 0/0
 37462 ;;		Unchanged: 0/0
 37463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37464 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37465 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37466 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37467 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37468 ;;Total ram usage:       10 bytes
 37469 ;; Hardware stack levels used: 1
 37470 ;; Hardware stack levels required when called: 21
 37471 ;; This function calls:
 37472 ;;		_checkRemoveTableEntry
 37473 ;;		_flushFlashBlock
 37474 ;;		_getEVs
 37475 ;;		_validStart
 37476 ;;		_writeEv
 37477 ;; This function is called by:
 37478 ;;		_clearEvents
 37479 ;; This function uses a non-reentrant model
 37480 ;;
 37481                           
 37482                           	psect	text158
 37483   0095B6                     __ptext158:
 37484                           	callstack 0
 37485   0095B6                     _deleteActionRange:
 37486                           	callstack 2
 37487                           
 37488                           ;incstack = 0
 37489                           ;deleteActionRange@action stored from wreg
 37490   0095B6  0101               	movlb	1	; () banked
 37491   0095B8  6FE2               	movwf	deleteActionRange@action& (0+255),b
 37492                           
 37493                           ;../event_consumerDualActionQueue.c: 471:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 472:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 37494   0095BA  0E00               	movlw	0
 37495   0095BC  0101               	movlb	1	; () banked
 37496   0095BE  6FE4               	movwf	deleteActionRange@tableIndex& (0+255),b
 37497   0095C0                     l18772:
 37498                           
 37499                           ; BSR set to: 1
 37500                           ;../event_consumerDualActionQueue.c: 473:         if (validStart(tableIndex)) {
 37501   0095C0  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37502   0095C2  EC6A  F05B         	call	_validStart
 37503   0095C6  0900               	iorlw	0
 37504   0095C8  B4D8               	btfsc	status,2,c
 37505   0095CA  D044               	goto	l18802
 37506                           
 37507                           ;../event_consumerDualActionQueue.c: 474:             Boolean updated = FALSE;
 37508   0095CC  0E00               	movlw	0
 37509   0095CE  0101               	movlb	1	; () banked
 37510   0095D0  6FE1               	movwf	deleteActionRange@updated& (0+255),b
 37511                           
 37512                           ; BSR set to: 1
 37513                           ;../event_consumerDualActionQueue.c: 475:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 476:             if (getEVs(tableIndex)) {
 37514   0095D2  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37515   0095D4  EC73  F041         	call	_getEVs
 37516   0095D8  0900               	iorlw	0
 37517   0095DA  A4D8               	btfss	status,2,c
 37518   0095DC  0012               	return	
 37519                           
 37520                           ;../event_consumerDualActionQueue.c: 480:             for (e=1; e<20; e++) {
 37521   0095DE  0E01               	movlw	1
 37522   0095E0  0101               	movlb	1	; () banked
 37523   0095E2  6FE3               	movwf	deleteActionRange@e& (0+255),b
 37524   0095E4                     l18786:
 37525                           
 37526                           ; BSR set to: 1
 37527                           ;../event_consumerDualActionQueue.c: 481:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 37528   0095E4  0E40               	movlw	low _evs
 37529   0095E6  25E3               	addwf	deleteActionRange@e& (0+255),w,b
 37530   0095E8  6ED9               	movwf	fsr2l,c
 37531   0095EA  6ADA               	clrf	fsr2h,c
 37532   0095EC  0E02               	movlw	high _evs
 37533   0095EE  22DA               	addwfc	fsr2h,f,c
 37534   0095F0  51E2               	movf	deleteActionRange@action& (0+255),w,b
 37535   0095F2  5CDE               	subwf	postinc2,w,c
 37536   0095F4  A0D8               	btfss	status,0,c
 37537   0095F6  D024               	goto	l18794
 37538                           
 37539                           ; BSR set to: 1
 37540   0095F8  51DB               	movf	deleteActionRange@number& (0+255),w,b
 37541   0095FA  C1E2  F1DC         	movff	deleteActionRange@action,??_deleteActionRange
 37542   0095FE  6BDD               	clrf	(??_deleteActionRange+1)& (0+255),b
 37543   009600  27DC               	addwf	??_deleteActionRange& (0+255),f,b
 37544   009602  0E00               	movlw	0
 37545   009604  23DD               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 37546   009606  0E40               	movlw	low _evs
 37547   009608  25E3               	addwf	deleteActionRange@e& (0+255),w,b
 37548   00960A  6ED9               	movwf	fsr2l,c
 37549   00960C  6ADA               	clrf	fsr2h,c
 37550   00960E  0E02               	movlw	high _evs
 37551   009610  22DA               	addwfc	fsr2h,f,c
 37552   009612  50DF               	movf	indf2,w,c
 37553   009614  6FDE               	movwf	(??_deleteActionRange+2)& (0+255),b
 37554   009616  6BDF               	clrf	(??_deleteActionRange+3)& (0+255),b
 37555   009618  51DC               	movf	??_deleteActionRange& (0+255),w,b
 37556   00961A  5DDE               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 37557   00961C  51DF               	movf	(??_deleteActionRange+3)& (0+255),w,b
 37558   00961E  0A80               	xorlw	128
 37559   009620  6FE0               	movwf	(??_deleteActionRange+4)& (0+255),b
 37560   009622  51DD               	movf	(??_deleteActionRange+1)& (0+255),w,b
 37561   009624  0A80               	xorlw	128
 37562   009626  59E0               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 37563   009628  B0D8               	btfsc	status,0,c
 37564   00962A  D00A               	goto	l18794
 37565                           
 37566                           ; BSR set to: 1
 37567                           ;../event_consumerDualActionQueue.c: 482:                     writeEv(tableIndex, e, 0);
 37568   00962C  C1E3  F1CF         	movff	deleteActionRange@e,writeEv@evNum
 37569   009630  0E00               	movlw	0
 37570   009632  6FD0               	movwf	writeEv@evVal& (0+255),b
 37571   009634  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37572   009636  EC0C  F01D         	call	_writeEv
 37573                           
 37574                           ;../event_consumerDualActionQueue.c: 483:                     updated = TRUE;
 37575   00963A  0E01               	movlw	1
 37576   00963C  0101               	movlb	1	; () banked
 37577   00963E  6FE1               	movwf	deleteActionRange@updated& (0+255),b
 37578   009640                     l18794:
 37579                           
 37580                           ; BSR set to: 1
 37581                           ;../event_consumerDualActionQueue.c: 485:             }
 37582   009640  2BE3               	incf	deleteActionRange@e& (0+255),f,b
 37583                           
 37584                           ; BSR set to: 1
 37585   009642  0E13               	movlw	19
 37586   009644  65E3               	cpfsgt	deleteActionRange@e& (0+255),b
 37587   009646  D7CE               	goto	l18786
 37588                           
 37589                           ; BSR set to: 1
 37590                           ;../event_consumerDualActionQueue.c: 486:             if (updated) {
 37591   009648  51E1               	movf	deleteActionRange@updated& (0+255),w,b
 37592   00964A  B4D8               	btfsc	status,2,c
 37593   00964C  D003               	goto	l18802
 37594                           
 37595                           ; BSR set to: 1
 37596                           ;../event_consumerDualActionQueue.c: 487:                 checkRemoveTableEntry(tableInd
      +                          ex);
 37597   00964E  51E4               	movf	deleteActionRange@tableIndex& (0+255),w,b
 37598   009650  EC97  F05C         	call	_checkRemoveTableEntry
 37599   009654                     l18802:
 37600                           
 37601                           ;../event_consumerDualActionQueue.c: 490:     }
 37602   009654  0101               	movlb	1	; () banked
 37603   009656  2BE4               	incf	deleteActionRange@tableIndex& (0+255),f,b
 37604                           
 37605                           ; BSR set to: 1
 37606   009658  29E4               	incf	deleteActionRange@tableIndex& (0+255),w,b
 37607   00965A  A4D8               	btfss	status,2,c
 37608   00965C  D7B1               	goto	l18772
 37609                           
 37610                           ; BSR set to: 1
 37611                           ;../event_consumerDualActionQueue.c: 491:     flushFlashBlock();
 37612   00965E  EC11  F053         	call	_flushFlashBlock	;wreg free
 37613   009662  0012               	return		;funcret
 37614   009664                     __end_of_deleteActionRange:
 37615                           	callstack 0
 37616                           
 37617 ;; *************** function _addEvent *****************
 37618 ;; Defined at:
 37619 ;;		line 827 in file "../../VLCBlib_PIC/event_teach.c"
 37620 ;; Parameters:    Size  Location     Type
 37621 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 37622 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 37623 ;;  evNum           1   33[BANK1 ] unsigned char 
 37624 ;;  evVal           1   34[BANK1 ] unsigned char 
 37625 ;;  forceOwnNN      1   35[BANK1 ] unsigned char 
 37626 ;; Auto vars:     Size  Location     Type
 37627 ;;  e               1   42[BANK1 ] unsigned char 
 37628 ;;  f               1   41[BANK1 ] struct .
 37629 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 37630 ;;  error           1   40[BANK1 ] unsigned char 
 37631 ;; Return value:  Size  Location     Type
 37632 ;;                  1    wreg      unsigned char 
 37633 ;; Registers used:
 37634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37635 ;; Tracked objects:
 37636 ;;		On entry : 0/0
 37637 ;;		On exit  : 0/0
 37638 ;;		Unchanged: 0/0
 37639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37640 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37641 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37642 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37643 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37644 ;;Total ram usage:       15 bytes
 37645 ;; Hardware stack levels used: 1
 37646 ;; Hardware stack levels required when called: 21
 37647 ;; This function calls:
 37648 ;;		_findEvent
 37649 ;;		_flushFlashBlock
 37650 ;;		_readNVM
 37651 ;;		_rebuildHashtable
 37652 ;;		_writeEv
 37653 ;;		_writeNVM
 37654 ;; This function is called by:
 37655 ;;		_defaultEvents
 37656 ;;		_APP_addEvent
 37657 ;; This function uses a non-reentrant model
 37658 ;;
 37659                           
 37660                           	psect	text159
 37661   006596                     __ptext159:
 37662                           	callstack 0
 37663   006596                     _addEvent:
 37664                           	callstack 5
 37665                           
 37666                           ;../../VLCBlib_PIC/event_teach.c: 828:     uint8_t tableIndex;;../../VLCBlib_PIC/event_t
      +                          each.c: 829:     uint8_t error;;../../VLCBlib_PIC/event_teach.c: 831:     tableIndex = f
      +                          indEvent(nodeNumber, eventNumber);
 37667                           
 37668                           ;incstack = 0
 37669   006596  C1DB  F1BE         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 37670   00659A  C1DC  F1BF         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 37671   00659E  C1DD  F1C0         	movff	addEvent@eventNumber,findEvent@eventNumber
 37672   0065A2  C1DE  F1C1         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 37673   0065A6  EC6D  F051         	call	_findEvent	;wreg free
 37674   0065AA  0101               	movlb	1	; () banked
 37675   0065AC  6FE9               	movwf	addEvent@tableIndex& (0+255),b
 37676                           
 37677                           ; BSR set to: 1
 37678                           ;../../VLCBlib_PIC/event_teach.c: 832:     if (tableIndex == 0xff) {
 37679   0065AE  29E9               	incf	addEvent@tableIndex& (0+255),w,b
 37680   0065B0  A4D8               	btfss	status,2,c
 37681   0065B2  D0E2               	goto	l18936
 37682                           
 37683                           ; BSR set to: 1
 37684                           ;../../VLCBlib_PIC/event_teach.c: 838:         if (evVal == 0) {
 37685   0065B4  51E0               	movf	addEvent@evVal& (0+255),w,b
 37686   0065B6  A4D8               	btfss	status,2,c
 37687   0065B8  D002               	goto	l18894
 37688   0065BA                     u18890:
 37689                           
 37690                           ;../../VLCBlib_PIC/event_teach.c: 839:             return 0;
 37691   0065BA  0E00               	movlw	0
 37692   0065BC  0012               	return	
 37693   0065BE                     l18894:
 37694                           
 37695                           ; BSR set to: 1
 37696                           ;../../VLCBlib_PIC/event_teach.c: 841:         error = 1;
 37697   0065BE  0E01               	movlw	1
 37698   0065C0  6FE6               	movwf	addEvent@error& (0+255),b
 37699                           
 37700                           ;../../VLCBlib_PIC/event_teach.c: 843:         for (tableIndex=0; tableIndex<255; tableI
      +                          ndex++) {
 37701   0065C2  0E00               	movlw	0
 37702   0065C4  6FE9               	movwf	addEvent@tableIndex& (0+255),b
 37703   0065C6                     l18900:
 37704                           
 37705                           ; BSR set to: 1
 37706                           ;../../VLCBlib_PIC/event_teach.c: 844:             EventTableFlags f;;../../VLCBlib_PIC/
      +                          event_teach.c: 845:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*
      +                          tableIndex+0);
 37707   0065C6  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 37708   0065C8  6FE2               	movwf	??_addEvent& (0+255),b
 37709   0065CA  6BE3               	clrf	(??_addEvent+1)& (0+255),b
 37710   0065CC  3BE2               	swapf	??_addEvent& (0+255),f,b
 37711   0065CE  3BE3               	swapf	(??_addEvent+1)& (0+255),f,b
 37712   0065D0  0EF0               	movlw	240
 37713   0065D2  17E3               	andwf	(??_addEvent+1)& (0+255),f,b
 37714   0065D4  51E2               	movf	??_addEvent& (0+255),w,b
 37715   0065D6  0B0F               	andlw	15
 37716   0065D8  13E3               	iorwf	(??_addEvent+1)& (0+255),f,b
 37717   0065DA  0EF0               	movlw	240
 37718   0065DC  17E2               	andwf	??_addEvent& (0+255),f,b
 37719   0065DE  0E80               	movlw	128
 37720   0065E0  25E2               	addwf	??_addEvent& (0+255),w,b
 37721   0065E2  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 37722   0065E4  0EEF               	movlw	239
 37723   0065E6  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 37724   0065E8  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 37725   0065EA  C1E4  F091         	movff	??_addEvent+2,readNVM@index
 37726   0065EE  C1E5  F092         	movff	??_addEvent+3,readNVM@index+1
 37727   0065F2  0100               	movlb	0	; () banked
 37728   0065F4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37729   0065F6  0E01               	movlw	1
 37730   0065F8  ECD9  F058         	call	_readNVM
 37731   0065FC  0100               	movlb	0	; () banked
 37732   0065FE  5191               	movf	?_readNVM& (0+255),w,b
 37733   006600  0101               	movlb	1	; () banked
 37734   006602  6FE7               	movwf	addEvent@f& (0+255),b
 37735                           
 37736                           ; BSR set to: 1
 37737                           ;../../VLCBlib_PIC/event_teach.c: 846:             if (f.freeEntry) {
 37738   006604  AFE7               	btfss	addEvent@f& (0+255),7,b
 37739   006606  D0AF               	goto	l18926
 37740                           
 37741                           ; BSR set to: 1
 37742                           ;../../VLCBlib_PIC/event_teach.c: 847:                 uint8_t e;;../../VLCBlib_PIC/even
      +                          t_teach.c: 849:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+2, nodeN
      +                          umber&0xFF);
 37743   006608  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 37744   00660A  0D10               	mullw	16
 37745   00660C  CFF3 F1E2          	movff	prodl,??_addEvent
 37746   006610  CFF4 F1E3          	movff	prodh,??_addEvent+1
 37747   006614  0E82               	movlw	130
 37748   006616  25E2               	addwf	??_addEvent& (0+255),w,b
 37749   006618  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 37750   00661A  0EEF               	movlw	239
 37751   00661C  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 37752   00661E  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 37753   006620  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 37754   006624  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37755   006628  0100               	movlb	0	; () banked
 37756   00662A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37757   00662C  C1DB  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 37758   006630  0E01               	movlw	1
 37759   006632  EC91  F05B         	call	_writeNVM
 37760                           
 37761                           ;../../VLCBlib_PIC/event_teach.c: 850:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+2 +1, nodeNumber>>8);
 37762   006636  0101               	movlb	1	; () banked
 37763   006638  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 37764   00663A  0D10               	mullw	16
 37765   00663C  CFF3 F1E2          	movff	prodl,??_addEvent
 37766   006640  CFF4 F1E3          	movff	prodh,??_addEvent+1
 37767   006644  0E83               	movlw	131
 37768   006646  25E2               	addwf	??_addEvent& (0+255),w,b
 37769   006648  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 37770   00664A  0EEF               	movlw	239
 37771   00664C  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 37772   00664E  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 37773   006650  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 37774   006654  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37775   006658  0100               	movlb	0	; () banked
 37776   00665A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37777   00665C  0101               	movlb	1	; () banked
 37778   00665E  51DC               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 37779   006660  0100               	movlb	0	; () banked
 37780   006662  6FA7               	movwf	writeNVM@value& (0+255),b
 37781   006664  0E01               	movlw	1
 37782   006666  EC91  F05B         	call	_writeNVM
 37783                           
 37784                           ;../../VLCBlib_PIC/event_teach.c: 851:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+4, eventNumber&0xFF);
 37785   00666A  0101               	movlb	1	; () banked
 37786   00666C  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 37787   00666E  0D10               	mullw	16
 37788   006670  CFF3 F1E2          	movff	prodl,??_addEvent
 37789   006674  CFF4 F1E3          	movff	prodh,??_addEvent+1
 37790   006678  0E84               	movlw	132
 37791   00667A  25E2               	addwf	??_addEvent& (0+255),w,b
 37792   00667C  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 37793   00667E  0EEF               	movlw	239
 37794   006680  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 37795   006682  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 37796   006684  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 37797   006688  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37798   00668C  0100               	movlb	0	; () banked
 37799   00668E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37800   006690  C1DD  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 37801   006694  0E01               	movlw	1
 37802   006696  EC91  F05B         	call	_writeNVM
 37803                           
 37804                           ;../../VLCBlib_PIC/event_teach.c: 852:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+4 +1, eventNumber>>8);
 37805   00669A  0101               	movlb	1	; () banked
 37806   00669C  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 37807   00669E  0D10               	mullw	16
 37808   0066A0  CFF3 F1E2          	movff	prodl,??_addEvent
 37809   0066A4  CFF4 F1E3          	movff	prodh,??_addEvent+1
 37810   0066A8  0E85               	movlw	133
 37811   0066AA  25E2               	addwf	??_addEvent& (0+255),w,b
 37812   0066AC  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 37813   0066AE  0EEF               	movlw	239
 37814   0066B0  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 37815   0066B2  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 37816   0066B4  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 37817   0066B8  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37818   0066BC  0100               	movlb	0	; () banked
 37819   0066BE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37820   0066C0  0101               	movlb	1	; () banked
 37821   0066C2  51DE               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 37822   0066C4  0100               	movlb	0	; () banked
 37823   0066C6  6FA7               	movwf	writeNVM@value& (0+255),b
 37824   0066C8  0E01               	movlw	1
 37825   0066CA  EC91  F05B         	call	_writeNVM
 37826                           
 37827                           ;../../VLCBlib_PIC/event_teach.c: 853:                 f.asByte = 0;
 37828   0066CE  0E00               	movlw	0
 37829   0066D0  0101               	movlb	1	; () banked
 37830   0066D2  6FE7               	movwf	addEvent@f& (0+255),b
 37831                           
 37832                           ; BSR set to: 1
 37833                           ;../../VLCBlib_PIC/event_teach.c: 854:                 f.forceOwnNN = forceOwnNN;
 37834   0066D4  B1E1               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 37835   0066D6  D002               	bra	u18915
 37836   0066D8  9DE7               	bcf	addEvent@f& (0+255),6,b
 37837   0066DA  D002               	bra	u18916
 37838   0066DC                     u18915:
 37839   0066DC  0101               	movlb	1	; () banked
 37840   0066DE  8DE7               	bsf	addEvent@f& (0+255),6,b
 37841   0066E0                     u18916:
 37842                           
 37843                           ; BSR set to: 1
 37844                           ;../../VLCBlib_PIC/event_teach.c: 855:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*tableIndex+0, f.asByte);
 37845   0066E0  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 37846   0066E2  6FE2               	movwf	??_addEvent& (0+255),b
 37847   0066E4  6BE3               	clrf	(??_addEvent+1)& (0+255),b
 37848   0066E6  3BE2               	swapf	??_addEvent& (0+255),f,b
 37849   0066E8  3BE3               	swapf	(??_addEvent+1)& (0+255),f,b
 37850   0066EA  0EF0               	movlw	240
 37851   0066EC  17E3               	andwf	(??_addEvent+1)& (0+255),f,b
 37852   0066EE  51E2               	movf	??_addEvent& (0+255),w,b
 37853   0066F0  0B0F               	andlw	15
 37854   0066F2  13E3               	iorwf	(??_addEvent+1)& (0+255),f,b
 37855   0066F4  0EF0               	movlw	240
 37856   0066F6  17E2               	andwf	??_addEvent& (0+255),f,b
 37857   0066F8  0E80               	movlw	128
 37858   0066FA  25E2               	addwf	??_addEvent& (0+255),w,b
 37859   0066FC  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 37860   0066FE  0EEF               	movlw	239
 37861   006700  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 37862   006702  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 37863   006704  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 37864   006708  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37865   00670C  0100               	movlb	0	; () banked
 37866   00670E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37867   006710  C1E7  F0A7         	movff	addEvent@f,writeNVM@value
 37868   006714  0E01               	movlw	1
 37869   006716  EC91  F05B         	call	_writeNVM
 37870                           
 37871                           ;../../VLCBlib_PIC/event_teach.c: 857:                 for (e = 0; e < 10; e++) {
 37872   00671A  0E00               	movlw	0
 37873   00671C  0101               	movlb	1	; () banked
 37874   00671E  6FE8               	movwf	addEvent@e& (0+255),b
 37875   006720                     l18918:
 37876                           
 37877                           ; BSR set to: 1
 37878                           ;../../VLCBlib_PIC/event_teach.c: 858:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+6 +e, 0);
 37879   006720  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 37880   006722  0D10               	mullw	16
 37881   006724  CFF3 F1E2          	movff	prodl,??_addEvent
 37882   006728  CFF4 F1E3          	movff	prodh,??_addEvent+1
 37883   00672C  51E8               	movf	addEvent@e& (0+255),w,b
 37884   00672E  27E2               	addwf	??_addEvent& (0+255),f,b
 37885   006730  0E00               	movlw	0
 37886   006732  23E3               	addwfc	(??_addEvent+1)& (0+255),f,b
 37887   006734  0E86               	movlw	134
 37888   006736  25E2               	addwf	??_addEvent& (0+255),w,b
 37889   006738  6FE4               	movwf	(??_addEvent+2)& (0+255),b
 37890   00673A  0EEF               	movlw	239
 37891   00673C  21E3               	addwfc	(??_addEvent+1)& (0+255),w,b
 37892   00673E  6FE5               	movwf	(??_addEvent+3)& (0+255),b
 37893   006740  C1E4  F0A4         	movff	??_addEvent+2,writeNVM@index
 37894   006744  C1E5  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 37895   006748  0100               	movlb	0	; () banked
 37896   00674A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37897   00674C  0E00               	movlw	0
 37898   00674E  6FA7               	movwf	writeNVM@value& (0+255),b
 37899   006750  0E01               	movlw	1
 37900   006752  EC91  F05B         	call	_writeNVM
 37901                           
 37902                           ;../../VLCBlib_PIC/event_teach.c: 859:                 }
 37903   006756  0101               	movlb	1	; () banked
 37904   006758  2BE8               	incf	addEvent@e& (0+255),f,b
 37905                           
 37906                           ; BSR set to: 1
 37907   00675A  0E09               	movlw	9
 37908   00675C  65E8               	cpfsgt	addEvent@e& (0+255),b
 37909   00675E  D7E0               	goto	l18918
 37910                           
 37911                           ; BSR set to: 1
 37912                           ;../../VLCBlib_PIC/event_teach.c: 860:                 error = 0;
 37913   006760  0E00               	movlw	0
 37914   006762  6FE6               	movwf	addEvent@error& (0+255),b
 37915                           
 37916                           ;../../VLCBlib_PIC/event_teach.c: 861:                 break;
 37917   006764  D004               	goto	u18930
 37918   006766                     l18926:
 37919                           
 37920                           ; BSR set to: 1
 37921                           ;../../VLCBlib_PIC/event_teach.c: 863:         }
 37922   006766  2BE9               	incf	addEvent@tableIndex& (0+255),f,b
 37923                           
 37924                           ; BSR set to: 1
 37925   006768  29E9               	incf	addEvent@tableIndex& (0+255),w,b
 37926   00676A  A4D8               	btfss	status,2,c
 37927   00676C  D72C               	goto	l18900
 37928   00676E                     u18930:
 37929                           
 37930                           ; BSR set to: 1
 37931                           ;../../VLCBlib_PIC/event_teach.c: 864:         if (error) {
 37932   00676E  51E6               	movf	addEvent@error& (0+255),w,b
 37933   006770  B4D8               	btfsc	status,2,c
 37934   006772  D002               	goto	l18936
 37935                           
 37936                           ; BSR set to: 1
 37937                           ;../../VLCBlib_PIC/event_teach.c: 865:             return CMDERR_TOO_MANY_EVENTS;
 37938   006774  0E04               	movlw	4
 37939   006776  0012               	return	
 37940   006778                     l18936:
 37941                           
 37942                           ; BSR set to: 1
 37943                           ;../../VLCBlib_PIC/event_teach.c: 869:     if (writeEv(tableIndex, evNum, evVal)) {
 37944   006778  C1DF  F1CF         	movff	addEvent@evNum,writeEv@evNum
 37945   00677C  C1E0  F1D0         	movff	addEvent@evVal,writeEv@evVal
 37946   006780  51E9               	movf	addEvent@tableIndex& (0+255),w,b
 37947   006782  EC0C  F01D         	call	_writeEv
 37948   006786  0900               	iorlw	0
 37949   006788  B4D8               	btfsc	status,2,c
 37950   00678A  D002               	goto	l18942
 37951                           
 37952                           ;../../VLCBlib_PIC/event_teach.c: 871:         return CMDERR_INV_EV_IDX;
 37953   00678C  0E06               	movlw	6
 37954   00678E  0012               	return	
 37955   006790                     l18942:
 37956                           
 37957                           ;../../VLCBlib_PIC/event_teach.c: 874:     flushFlashBlock();
 37958   006790  EC11  F053         	call	_flushFlashBlock	;wreg free
 37959                           
 37960                           ;../../VLCBlib_PIC/event_teach.c: 876:     rebuildHashtable();
 37961   006794  EC57  F03F         	call	_rebuildHashtable	;wreg free
 37962   006798  D710               	goto	u18890
 37963   00679A                     __end_of_addEvent:
 37964                           	callstack 0
 37965                           
 37966 ;; *************** function _writeEv *****************
 37967 ;; Defined at:
 37968 ;;		line 928 in file "../../VLCBlib_PIC/event_teach.c"
 37969 ;; Parameters:    Size  Location     Type
 37970 ;;  tableIndex      1    wreg     unsigned char 
 37971 ;;  evNum           1   17[BANK1 ] unsigned char 
 37972 ;;  evVal           1   18[BANK1 ] unsigned char 
 37973 ;; Auto vars:     Size  Location     Type
 37974 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 37975 ;;  e               1   25[BANK1 ] unsigned char 
 37976 ;;  nextF           1   24[BANK1 ] struct .
 37977 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 37978 ;;  f               1   26[BANK1 ] struct .
 37979 ;;  startIndex      1   23[BANK1 ] unsigned char 
 37980 ;; Return value:  Size  Location     Type
 37981 ;;                  1    wreg      unsigned char 
 37982 ;; Registers used:
 37983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37984 ;; Tracked objects:
 37985 ;;		On entry : 0/0
 37986 ;;		On exit  : 0/0
 37987 ;;		Unchanged: 0/0
 37988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37989 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37990 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37991 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37992 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37993 ;;Total ram usage:       12 bytes
 37994 ;; Hardware stack levels used: 1
 37995 ;; Hardware stack levels required when called: 20
 37996 ;; This function calls:
 37997 ;;		_checkRemoveTableEntry
 37998 ;;		_readNVM
 37999 ;;		_writeNVM
 38000 ;; This function is called by:
 38001 ;;		_deleteActionRange
 38002 ;;		_deleteHappeningRange
 38003 ;;		_addEvent
 38004 ;; This function uses a non-reentrant model
 38005 ;;
 38006                           
 38007                           	psect	text160
 38008   003A18                     __ptext160:
 38009                           	callstack 0
 38010   003A18                     _writeEv:
 38011                           	callstack 5
 38012                           
 38013                           ;incstack = 0
 38014                           ;writeEv@tableIndex stored from wreg
 38015   003A18  0101               	movlb	1	; () banked
 38016   003A1A  6FD9               	movwf	writeEv@tableIndex& (0+255),b
 38017                           
 38018                           ;../../VLCBlib_PIC/event_teach.c: 929:     EventTableFlags f;;../../VLCBlib_PIC/event_te
      +                          ach.c: 930:     uint8_t startIndex = tableIndex;
 38019   003A1C  C1D9  F1D5         	movff	writeEv@tableIndex,writeEv@startIndex
 38020                           
 38021                           ;../../VLCBlib_PIC/event_teach.c: 931:     if (evNum >= 20) {
 38022   003A20  0E13               	movlw	19
 38023   003A22  0101               	movlb	1	; () banked
 38024   003A24  65CF               	cpfsgt	writeEv@evNum& (0+255),b
 38025   003A26  D14F               	goto	l18586
 38026                           
 38027                           ; BSR set to: 1
 38028                           ;../../VLCBlib_PIC/event_teach.c: 932:         return CMDERR_INV_EV_IDX;
 38029   003A28  0E06               	movlw	6
 38030   003A2A  0012               	return	
 38031   003A2C                     l18524:
 38032                           
 38033                           ; BSR set to: 1
 38034                           ;../../VLCBlib_PIC/event_teach.c: 935:         uint8_t nextIdx;;../../VLCBlib_PIC/event_
      +                          teach.c: 938:         evNum -= 10;
 38035   003A2C  0E0A               	movlw	10
 38036   003A2E  5FCF               	subwf	writeEv@evNum& (0+255),f,b
 38037                           
 38038                           ; BSR set to: 1
 38039                           ;../../VLCBlib_PIC/event_teach.c: 939:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0);
 38040   003A30  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 38041   003A32  6FD1               	movwf	??_writeEv& (0+255),b
 38042   003A34  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 38043   003A36  3BD1               	swapf	??_writeEv& (0+255),f,b
 38044   003A38  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 38045   003A3A  0EF0               	movlw	240
 38046   003A3C  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 38047   003A3E  51D1               	movf	??_writeEv& (0+255),w,b
 38048   003A40  0B0F               	andlw	15
 38049   003A42  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 38050   003A44  0EF0               	movlw	240
 38051   003A46  17D1               	andwf	??_writeEv& (0+255),f,b
 38052   003A48  0E80               	movlw	128
 38053   003A4A  25D1               	addwf	??_writeEv& (0+255),w,b
 38054   003A4C  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38055   003A4E  0EEF               	movlw	239
 38056   003A50  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38057   003A52  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38058   003A54  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 38059   003A58  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 38060   003A5C  0100               	movlb	0	; () banked
 38061   003A5E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38062   003A60  0E01               	movlw	1
 38063   003A62  ECD9  F058         	call	_readNVM
 38064   003A66  0100               	movlb	0	; () banked
 38065   003A68  5191               	movf	?_readNVM& (0+255),w,b
 38066   003A6A  0101               	movlb	1	; () banked
 38067   003A6C  6FD8               	movwf	writeEv@f& (0+255),b
 38068                           
 38069                           ; BSR set to: 1
 38070                           ;../../VLCBlib_PIC/event_teach.c: 941:         if (f.continued) {
 38071   003A6E  A9D8               	btfss	writeEv@f& (0+255),4,b
 38072   003A70  D01E               	goto	l18538
 38073                           
 38074                           ; BSR set to: 1
 38075                           ;../../VLCBlib_PIC/event_teach.c: 942:             tableIndex = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+1);
 38076   003A72  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 38077   003A74  0D10               	mullw	16
 38078   003A76  CFF3 F1D1          	movff	prodl,??_writeEv
 38079   003A7A  CFF4 F1D2          	movff	prodh,??_writeEv+1
 38080   003A7E  0E81               	movlw	129
 38081   003A80  25D1               	addwf	??_writeEv& (0+255),w,b
 38082   003A82  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38083   003A84  0EEF               	movlw	239
 38084   003A86  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38085   003A88  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38086   003A8A  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 38087   003A8E  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 38088   003A92  0100               	movlb	0	; () banked
 38089   003A94  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38090   003A96  0E01               	movlw	1
 38091   003A98  ECD9  F058         	call	_readNVM
 38092   003A9C  0100               	movlb	0	; () banked
 38093   003A9E  5191               	movf	?_readNVM& (0+255),w,b
 38094   003AA0  0101               	movlb	1	; () banked
 38095   003AA2  6FD9               	movwf	writeEv@tableIndex& (0+255),b
 38096                           
 38097                           ; BSR set to: 1
 38098                           ;../../VLCBlib_PIC/event_teach.c: 943:             if (tableIndex == 0xff) {
 38099   003AA4  29D9               	incf	writeEv@tableIndex& (0+255),w,b
 38100   003AA6  A4D8               	btfss	status,2,c
 38101   003AA8  D10E               	goto	l18586
 38102                           
 38103                           ; BSR set to: 1
 38104                           ;../../VLCBlib_PIC/event_teach.c: 944:                 return CMDERR_INVALID_EVENT;
 38105   003AAA  0E07               	movlw	7
 38106   003AAC  0012               	return	
 38107   003AAE                     l18538:
 38108                           
 38109                           ; BSR set to: 1
 38110                           ;../../VLCBlib_PIC/event_teach.c: 953:             if (evVal == 0) {
 38111   003AAE  51D0               	movf	writeEv@evVal& (0+255),w,b
 38112   003AB0  A4D8               	btfss	status,2,c
 38113   003AB2  D002               	goto	l18544
 38114   003AB4                     u18350:
 38115                           
 38116                           ;../../VLCBlib_PIC/event_teach.c: 954:                 return 0;
 38117   003AB4  0E00               	movlw	0
 38118   003AB6  0012               	return	
 38119   003AB8                     l18544:
 38120                           
 38121                           ; BSR set to: 1
 38122                           ;../../VLCBlib_PIC/event_teach.c: 957:             for (nextIdx = tableIndex+1 ; nextIdx
      +                           < 255; nextIdx++) {
 38123   003AB8  29D9               	incf	writeEv@tableIndex& (0+255),w,b
 38124   003ABA  6FDA               	movwf	writeEv@nextIdx& (0+255),b
 38125   003ABC  D0FB               	goto	l18578
 38126   003ABE                     l18548:
 38127                           
 38128                           ; BSR set to: 1
 38129                           ;../../VLCBlib_PIC/event_teach.c: 958:                 EventTableFlags nextF;;../../VLCB
      +                          lib_PIC/event_teach.c: 959:                 nextF.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*nextIdx+0);
 38130   003ABE  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 38131   003AC0  6FD1               	movwf	??_writeEv& (0+255),b
 38132   003AC2  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 38133   003AC4  3BD1               	swapf	??_writeEv& (0+255),f,b
 38134   003AC6  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 38135   003AC8  0EF0               	movlw	240
 38136   003ACA  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 38137   003ACC  51D1               	movf	??_writeEv& (0+255),w,b
 38138   003ACE  0B0F               	andlw	15
 38139   003AD0  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 38140   003AD2  0EF0               	movlw	240
 38141   003AD4  17D1               	andwf	??_writeEv& (0+255),f,b
 38142   003AD6  0E80               	movlw	128
 38143   003AD8  25D1               	addwf	??_writeEv& (0+255),w,b
 38144   003ADA  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38145   003ADC  0EEF               	movlw	239
 38146   003ADE  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38147   003AE0  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38148   003AE2  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 38149   003AE6  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 38150   003AEA  0100               	movlb	0	; () banked
 38151   003AEC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38152   003AEE  0E01               	movlw	1
 38153   003AF0  ECD9  F058         	call	_readNVM
 38154   003AF4  0100               	movlb	0	; () banked
 38155   003AF6  5191               	movf	?_readNVM& (0+255),w,b
 38156   003AF8  0101               	movlb	1	; () banked
 38157   003AFA  6FD6               	movwf	writeEv@nextF& (0+255),b
 38158                           
 38159                           ; BSR set to: 1
 38160                           ;../../VLCBlib_PIC/event_teach.c: 960:                 if (nextF.freeEntry) {
 38161   003AFC  AFD6               	btfss	writeEv@nextF& (0+255),7,b
 38162   003AFE  D0D9               	goto	l18576
 38163                           
 38164                           ; BSR set to: 1
 38165                           ;../../VLCBlib_PIC/event_teach.c: 961:                     uint8_t e;;../../VLCBlib_PIC/
      +                          event_teach.c: 963:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+2, 
      +                          0xff);
 38166   003B00  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 38167   003B02  0D10               	mullw	16
 38168   003B04  CFF3 F1D1          	movff	prodl,??_writeEv
 38169   003B08  CFF4 F1D2          	movff	prodh,??_writeEv+1
 38170   003B0C  0E82               	movlw	130
 38171   003B0E  25D1               	addwf	??_writeEv& (0+255),w,b
 38172   003B10  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38173   003B12  0EEF               	movlw	239
 38174   003B14  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38175   003B16  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38176   003B18  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38177   003B1C  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38178   003B20  0100               	movlb	0	; () banked
 38179   003B22  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38180   003B24  0EFF               	movlw	255
 38181   003B26  6FA7               	movwf	writeNVM@value& (0+255),b
 38182   003B28  0E01               	movlw	1
 38183   003B2A  EC91  F05B         	call	_writeNVM
 38184                           
 38185                           ;../../VLCBlib_PIC/event_teach.c: 964:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+2 +1, 0xff);
 38186   003B2E  0101               	movlb	1	; () banked
 38187   003B30  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 38188   003B32  0D10               	mullw	16
 38189   003B34  CFF3 F1D1          	movff	prodl,??_writeEv
 38190   003B38  CFF4 F1D2          	movff	prodh,??_writeEv+1
 38191   003B3C  0E83               	movlw	131
 38192   003B3E  25D1               	addwf	??_writeEv& (0+255),w,b
 38193   003B40  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38194   003B42  0EEF               	movlw	239
 38195   003B44  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38196   003B46  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38197   003B48  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38198   003B4C  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38199   003B50  0100               	movlb	0	; () banked
 38200   003B52  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38201   003B54  0EFF               	movlw	255
 38202   003B56  6FA7               	movwf	writeNVM@value& (0+255),b
 38203   003B58  0E01               	movlw	1
 38204   003B5A  EC91  F05B         	call	_writeNVM
 38205                           
 38206                           ;../../VLCBlib_PIC/event_teach.c: 965:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+4, 0xff);
 38207   003B5E  0101               	movlb	1	; () banked
 38208   003B60  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 38209   003B62  0D10               	mullw	16
 38210   003B64  CFF3 F1D1          	movff	prodl,??_writeEv
 38211   003B68  CFF4 F1D2          	movff	prodh,??_writeEv+1
 38212   003B6C  0E84               	movlw	132
 38213   003B6E  25D1               	addwf	??_writeEv& (0+255),w,b
 38214   003B70  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38215   003B72  0EEF               	movlw	239
 38216   003B74  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38217   003B76  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38218   003B78  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38219   003B7C  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38220   003B80  0100               	movlb	0	; () banked
 38221   003B82  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38222   003B84  0EFF               	movlw	255
 38223   003B86  6FA7               	movwf	writeNVM@value& (0+255),b
 38224   003B88  0E01               	movlw	1
 38225   003B8A  EC91  F05B         	call	_writeNVM
 38226                           
 38227                           ;../../VLCBlib_PIC/event_teach.c: 966:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+4 +1, 0xff);
 38228   003B8E  0101               	movlb	1	; () banked
 38229   003B90  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 38230   003B92  0D10               	mullw	16
 38231   003B94  CFF3 F1D1          	movff	prodl,??_writeEv
 38232   003B98  CFF4 F1D2          	movff	prodh,??_writeEv+1
 38233   003B9C  0E85               	movlw	133
 38234   003B9E  25D1               	addwf	??_writeEv& (0+255),w,b
 38235   003BA0  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38236   003BA2  0EEF               	movlw	239
 38237   003BA4  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38238   003BA6  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38239   003BA8  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38240   003BAC  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38241   003BB0  0100               	movlb	0	; () banked
 38242   003BB2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38243   003BB4  0EFF               	movlw	255
 38244   003BB6  6FA7               	movwf	writeNVM@value& (0+255),b
 38245   003BB8  0E01               	movlw	1
 38246   003BBA  EC91  F05B         	call	_writeNVM
 38247                           
 38248                           ;../../VLCBlib_PIC/event_teach.c: 967:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*nextIdx+0, 0x20);
 38249   003BBE  0101               	movlb	1	; () banked
 38250   003BC0  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 38251   003BC2  6FD1               	movwf	??_writeEv& (0+255),b
 38252   003BC4  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 38253   003BC6  3BD1               	swapf	??_writeEv& (0+255),f,b
 38254   003BC8  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 38255   003BCA  0EF0               	movlw	240
 38256   003BCC  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 38257   003BCE  51D1               	movf	??_writeEv& (0+255),w,b
 38258   003BD0  0B0F               	andlw	15
 38259   003BD2  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 38260   003BD4  0EF0               	movlw	240
 38261   003BD6  17D1               	andwf	??_writeEv& (0+255),f,b
 38262   003BD8  0E80               	movlw	128
 38263   003BDA  25D1               	addwf	??_writeEv& (0+255),w,b
 38264   003BDC  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38265   003BDE  0EEF               	movlw	239
 38266   003BE0  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38267   003BE2  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38268   003BE4  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38269   003BE8  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38270   003BEC  0100               	movlb	0	; () banked
 38271   003BEE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38272   003BF0  0E20               	movlw	32
 38273   003BF2  6FA7               	movwf	writeNVM@value& (0+255),b
 38274   003BF4  0E01               	movlw	1
 38275   003BF6  EC91  F05B         	call	_writeNVM
 38276                           
 38277                           ;../../VLCBlib_PIC/event_teach.c: 968:                     for (e = 0; e < 10; e++) {
 38278   003BFA  0E00               	movlw	0
 38279   003BFC  0101               	movlb	1	; () banked
 38280   003BFE  6FD7               	movwf	writeEv@e& (0+255),b
 38281   003C00                     l18562:
 38282                           
 38283                           ; BSR set to: 1
 38284                           ;../../VLCBlib_PIC/event_teach.c: 969:                         writeNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*nextIdx+6 +e, 0);
 38285   003C00  51DA               	movf	writeEv@nextIdx& (0+255),w,b
 38286   003C02  0D10               	mullw	16
 38287   003C04  CFF3 F1D1          	movff	prodl,??_writeEv
 38288   003C08  CFF4 F1D2          	movff	prodh,??_writeEv+1
 38289   003C0C  51D7               	movf	writeEv@e& (0+255),w,b
 38290   003C0E  27D1               	addwf	??_writeEv& (0+255),f,b
 38291   003C10  0E00               	movlw	0
 38292   003C12  23D2               	addwfc	(??_writeEv+1)& (0+255),f,b
 38293   003C14  0E86               	movlw	134
 38294   003C16  25D1               	addwf	??_writeEv& (0+255),w,b
 38295   003C18  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38296   003C1A  0EEF               	movlw	239
 38297   003C1C  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38298   003C1E  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38299   003C20  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38300   003C24  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38301   003C28  0100               	movlb	0	; () banked
 38302   003C2A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38303   003C2C  0E00               	movlw	0
 38304   003C2E  6FA7               	movwf	writeNVM@value& (0+255),b
 38305   003C30  0E01               	movlw	1
 38306   003C32  EC91  F05B         	call	_writeNVM
 38307                           
 38308                           ;../../VLCBlib_PIC/event_teach.c: 970:                     }
 38309   003C36  0101               	movlb	1	; () banked
 38310   003C38  2BD7               	incf	writeEv@e& (0+255),f,b
 38311                           
 38312                           ; BSR set to: 1
 38313   003C3A  0E09               	movlw	9
 38314   003C3C  65D7               	cpfsgt	writeEv@e& (0+255),b
 38315   003C3E  D7E0               	goto	l18562
 38316                           
 38317                           ; BSR set to: 1
 38318                           ;../../VLCBlib_PIC/event_teach.c: 972:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+1, nextIdx);
 38319   003C40  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 38320   003C42  0D10               	mullw	16
 38321   003C44  CFF3 F1D1          	movff	prodl,??_writeEv
 38322   003C48  CFF4 F1D2          	movff	prodh,??_writeEv+1
 38323   003C4C  0E81               	movlw	129
 38324   003C4E  25D1               	addwf	??_writeEv& (0+255),w,b
 38325   003C50  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38326   003C52  0EEF               	movlw	239
 38327   003C54  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38328   003C56  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38329   003C58  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38330   003C5C  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38331   003C60  0100               	movlb	0	; () banked
 38332   003C62  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38333   003C64  C1DA  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 38334   003C68  0E01               	movlw	1
 38335   003C6A  EC91  F05B         	call	_writeNVM
 38336                           
 38337                           ;../../VLCBlib_PIC/event_teach.c: 974:                     f.continued = 1;
 38338   003C6E  0101               	movlb	1	; () banked
 38339   003C70  89D8               	bsf	writeEv@f& (0+255),4,b
 38340                           
 38341                           ; BSR set to: 1
 38342                           ;../../VLCBlib_PIC/event_teach.c: 975:                     writeNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+0, f.asByte);
 38343   003C72  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 38344   003C74  6FD1               	movwf	??_writeEv& (0+255),b
 38345   003C76  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 38346   003C78  3BD1               	swapf	??_writeEv& (0+255),f,b
 38347   003C7A  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 38348   003C7C  0EF0               	movlw	240
 38349   003C7E  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 38350   003C80  51D1               	movf	??_writeEv& (0+255),w,b
 38351   003C82  0B0F               	andlw	15
 38352   003C84  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 38353   003C86  0EF0               	movlw	240
 38354   003C88  17D1               	andwf	??_writeEv& (0+255),f,b
 38355   003C8A  0E80               	movlw	128
 38356   003C8C  25D1               	addwf	??_writeEv& (0+255),w,b
 38357   003C8E  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38358   003C90  0EEF               	movlw	239
 38359   003C92  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38360   003C94  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38361   003C96  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38362   003C9A  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38363   003C9E  0100               	movlb	0	; () banked
 38364   003CA0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38365   003CA2  C1D8  F0A7         	movff	writeEv@f,writeNVM@value
 38366   003CA6  0E01               	movlw	1
 38367   003CA8  EC91  F05B         	call	_writeNVM
 38368                           
 38369                           ;../../VLCBlib_PIC/event_teach.c: 976:                     tableIndex = nextIdx;
 38370   003CAC  C1DA  F1D9         	movff	writeEv@nextIdx,writeEv@tableIndex
 38371                           
 38372                           ;../../VLCBlib_PIC/event_teach.c: 977:                     break;
 38373   003CB0  D004               	goto	u18390
 38374   003CB2                     l18576:
 38375                           
 38376                           ; BSR set to: 1
 38377                           ;../../VLCBlib_PIC/event_teach.c: 979:             }
 38378   003CB2  2BDA               	incf	writeEv@nextIdx& (0+255),f,b
 38379   003CB4                     l18578:
 38380                           
 38381                           ; BSR set to: 1
 38382   003CB4  29DA               	incf	writeEv@nextIdx& (0+255),w,b
 38383   003CB6  A4D8               	btfss	status,2,c
 38384   003CB8  D702               	goto	l18548
 38385   003CBA                     u18390:
 38386                           
 38387                           ;../../VLCBlib_PIC/event_teach.c: 980:             if (nextIdx >= 255) {
 38388   003CBA  0101               	movlb	1	; () banked
 38389   003CBC  29DA               	incf	writeEv@nextIdx& (0+255),w,b
 38390   003CBE  A4D8               	btfss	status,2,c
 38391   003CC0  D002               	goto	l18586
 38392                           
 38393                           ; BSR set to: 1
 38394                           ;../../VLCBlib_PIC/event_teach.c: 982:                 return CMDERR_TOO_MANY_EVENTS;
 38395   003CC2  0E04               	movlw	4
 38396   003CC4  0012               	return	
 38397   003CC6                     l18586:
 38398                           
 38399                           ; BSR set to: 1
 38400                           ;../../VLCBlib_PIC/event_teach.c: 934:     while (evNum >= 10) {
 38401   003CC6  0E0A               	movlw	10
 38402   003CC8  61CF               	cpfslt	writeEv@evNum& (0+255),b
 38403   003CCA  D6B0               	goto	l18524
 38404                           
 38405                           ; BSR set to: 1
 38406                           ;../../VLCBlib_PIC/event_teach.c: 987:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableInd
      +                          ex+6 +evNum, evVal);
 38407   003CCC  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 38408   003CCE  0D10               	mullw	16
 38409   003CD0  CFF3 F1D1          	movff	prodl,??_writeEv
 38410   003CD4  CFF4 F1D2          	movff	prodh,??_writeEv+1
 38411   003CD8  51CF               	movf	writeEv@evNum& (0+255),w,b
 38412   003CDA  27D1               	addwf	??_writeEv& (0+255),f,b
 38413   003CDC  0E00               	movlw	0
 38414   003CDE  23D2               	addwfc	(??_writeEv+1)& (0+255),f,b
 38415   003CE0  0E86               	movlw	134
 38416   003CE2  25D1               	addwf	??_writeEv& (0+255),w,b
 38417   003CE4  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38418   003CE6  0EEF               	movlw	239
 38419   003CE8  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38420   003CEA  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38421   003CEC  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38422   003CF0  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38423   003CF4  0100               	movlb	0	; () banked
 38424   003CF6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38425   003CF8  C1D0  F0A7         	movff	writeEv@evVal,writeNVM@value
 38426   003CFC  0E01               	movlw	1
 38427   003CFE  EC91  F05B         	call	_writeNVM
 38428                           
 38429                           ;../../VLCBlib_PIC/event_teach.c: 989:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0
      +                          xEF80 + 16*tableIndex+0);
 38430   003D02  0101               	movlb	1	; () banked
 38431   003D04  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 38432   003D06  6FD1               	movwf	??_writeEv& (0+255),b
 38433   003D08  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 38434   003D0A  3BD1               	swapf	??_writeEv& (0+255),f,b
 38435   003D0C  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 38436   003D0E  0EF0               	movlw	240
 38437   003D10  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 38438   003D12  51D1               	movf	??_writeEv& (0+255),w,b
 38439   003D14  0B0F               	andlw	15
 38440   003D16  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 38441   003D18  0EF0               	movlw	240
 38442   003D1A  17D1               	andwf	??_writeEv& (0+255),f,b
 38443   003D1C  0E80               	movlw	128
 38444   003D1E  25D1               	addwf	??_writeEv& (0+255),w,b
 38445   003D20  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38446   003D22  0EEF               	movlw	239
 38447   003D24  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38448   003D26  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38449   003D28  C1D3  F091         	movff	??_writeEv+2,readNVM@index
 38450   003D2C  C1D4  F092         	movff	??_writeEv+3,readNVM@index+1
 38451   003D30  0100               	movlb	0	; () banked
 38452   003D32  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38453   003D34  0E01               	movlw	1
 38454   003D36  ECD9  F058         	call	_readNVM
 38455   003D3A  0100               	movlb	0	; () banked
 38456   003D3C  5191               	movf	?_readNVM& (0+255),w,b
 38457   003D3E  0101               	movlb	1	; () banked
 38458   003D40  6FD8               	movwf	writeEv@f& (0+255),b
 38459                           
 38460                           ; BSR set to: 1
 38461                           ;../../VLCBlib_PIC/event_teach.c: 990:     if (f.eVsUsed <= evNum) {
 38462   003D42  51D8               	movf	writeEv@f& (0+255),w,b
 38463   003D44  0B0F               	andlw	15
 38464   003D46  6FD1               	movwf	??_writeEv& (0+255),b
 38465   003D48  51D1               	movf	??_writeEv& (0+255),w,b
 38466   003D4A  5DCF               	subwf	writeEv@evNum& (0+255),w,b
 38467   003D4C  A0D8               	btfss	status,0,c
 38468   003D4E  D026               	goto	l18598
 38469                           
 38470                           ; BSR set to: 1
 38471                           ;../../VLCBlib_PIC/event_teach.c: 991:         f.eVsUsed = evNum+1U;
 38472   003D50  C1CF  F1D1         	movff	writeEv@evNum,??_writeEv
 38473   003D54  0E01               	movlw	1
 38474   003D56  27D1               	addwf	??_writeEv& (0+255),f,b
 38475   003D58  51D8               	movf	writeEv@f& (0+255),w,b
 38476   003D5A  19D1               	xorwf	??_writeEv& (0+255),w,b
 38477   003D5C  0BF0               	andlw	-16
 38478   003D5E  19D1               	xorwf	??_writeEv& (0+255),w,b
 38479   003D60  6FD8               	movwf	writeEv@f& (0+255),b
 38480                           
 38481                           ; BSR set to: 1
 38482                           ;../../VLCBlib_PIC/event_teach.c: 992:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex+0, f.asByte);
 38483   003D62  51D9               	movf	writeEv@tableIndex& (0+255),w,b
 38484   003D64  6FD1               	movwf	??_writeEv& (0+255),b
 38485   003D66  6BD2               	clrf	(??_writeEv+1)& (0+255),b
 38486   003D68  3BD1               	swapf	??_writeEv& (0+255),f,b
 38487   003D6A  3BD2               	swapf	(??_writeEv+1)& (0+255),f,b
 38488   003D6C  0EF0               	movlw	240
 38489   003D6E  17D2               	andwf	(??_writeEv+1)& (0+255),f,b
 38490   003D70  51D1               	movf	??_writeEv& (0+255),w,b
 38491   003D72  0B0F               	andlw	15
 38492   003D74  13D2               	iorwf	(??_writeEv+1)& (0+255),f,b
 38493   003D76  0EF0               	movlw	240
 38494   003D78  17D1               	andwf	??_writeEv& (0+255),f,b
 38495   003D7A  0E80               	movlw	128
 38496   003D7C  25D1               	addwf	??_writeEv& (0+255),w,b
 38497   003D7E  6FD3               	movwf	(??_writeEv+2)& (0+255),b
 38498   003D80  0EEF               	movlw	239
 38499   003D82  21D2               	addwfc	(??_writeEv+1)& (0+255),w,b
 38500   003D84  6FD4               	movwf	(??_writeEv+3)& (0+255),b
 38501   003D86  C1D3  F0A4         	movff	??_writeEv+2,writeNVM@index
 38502   003D8A  C1D4  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 38503   003D8E  0100               	movlb	0	; () banked
 38504   003D90  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38505   003D92  C1D8  F0A7         	movff	writeEv@f,writeNVM@value
 38506   003D96  0E01               	movlw	1
 38507   003D98  EC91  F05B         	call	_writeNVM
 38508   003D9C                     l18598:
 38509                           
 38510                           ;../../VLCBlib_PIC/event_teach.c: 995:     if (evVal == 0) {
 38511   003D9C  0101               	movlb	1	; () banked
 38512   003D9E  51D0               	movf	writeEv@evVal& (0+255),w,b
 38513   003DA0  A4D8               	btfss	status,2,c
 38514   003DA2  D688               	goto	u18350
 38515                           
 38516                           ; BSR set to: 1
 38517                           ;../../VLCBlib_PIC/event_teach.c: 996:         checkRemoveTableEntry(startIndex);
 38518   003DA4  51D5               	movf	writeEv@startIndex& (0+255),w,b
 38519   003DA6  EC97  F05C         	call	_checkRemoveTableEntry
 38520   003DAA  D684               	goto	u18350
 38521   003DAC                     __end_of_writeEv:
 38522                           	callstack 0
 38523                           
 38524 ;; *************** function _checkRemoveTableEntry *****************
 38525 ;; Defined at:
 38526 ;;		line 797 in file "../../VLCBlib_PIC/event_teach.c"
 38527 ;; Parameters:    Size  Location     Type
 38528 ;;  tableIndex      1    wreg     unsigned char 
 38529 ;; Auto vars:     Size  Location     Type
 38530 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 38531 ;;  e               1   16[BANK1 ] unsigned char 
 38532 ;; Return value:  Size  Location     Type
 38533 ;;                  1    wreg      void 
 38534 ;; Registers used:
 38535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38536 ;; Tracked objects:
 38537 ;;		On entry : 0/0
 38538 ;;		On exit  : 0/0
 38539 ;;		Unchanged: 0/0
 38540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38542 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38544 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38545 ;;Total ram usage:        2 bytes
 38546 ;; Hardware stack levels used: 1
 38547 ;; Hardware stack levels required when called: 19
 38548 ;; This function calls:
 38549 ;;		_getEVs
 38550 ;;		_removeTableEntry
 38551 ;;		_validStart
 38552 ;; This function is called by:
 38553 ;;		_deleteActionRange
 38554 ;;		_deleteHappeningRange
 38555 ;;		_writeEv
 38556 ;; This function uses a non-reentrant model
 38557 ;;
 38558                           
 38559                           	psect	text161
 38560   00B92E                     __ptext161:
 38561                           	callstack 0
 38562   00B92E                     _checkRemoveTableEntry:
 38563                           	callstack 5
 38564                           
 38565                           ;incstack = 0
 38566                           ;checkRemoveTableEntry@tableIndex stored from wreg
 38567   00B92E  0101               	movlb	1	; () banked
 38568   00B930  6FCD               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 38569                           
 38570                           ;../../VLCBlib_PIC/event_teach.c: 798:     uint8_t e;;../../VLCBlib_PIC/event_teach.c: 8
      +                          00:     if ( validStart(tableIndex)) {
 38571   00B932  0101               	movlb	1	; () banked
 38572   00B934  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38573   00B936  EC6A  F05B         	call	_validStart
 38574   00B93A  0900               	iorlw	0
 38575   00B93C  B4D8               	btfsc	status,2,c
 38576   00B93E  0012               	return	
 38577                           
 38578                           ;../../VLCBlib_PIC/event_teach.c: 801:         if (getEVs(tableIndex)) {
 38579   00B940  0101               	movlb	1	; () banked
 38580   00B942  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38581   00B944  EC73  F041         	call	_getEVs
 38582   00B948  0900               	iorlw	0
 38583   00B94A  A4D8               	btfss	status,2,c
 38584   00B94C  0012               	return	
 38585                           
 38586                           ;../../VLCBlib_PIC/event_teach.c: 804:         for (e=0; e<20; e++) {
 38587   00B94E  0E00               	movlw	0
 38588   00B950  0101               	movlb	1	; () banked
 38589   00B952  6FCE               	movwf	checkRemoveTableEntry@e& (0+255),b
 38590   00B954                     l18436:
 38591                           
 38592                           ; BSR set to: 1
 38593                           ;../../VLCBlib_PIC/event_teach.c: 805:             if (evs[e] != 0) {
 38594   00B954  0E40               	movlw	low _evs
 38595   00B956  25CE               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 38596   00B958  6ED9               	movwf	fsr2l,c
 38597   00B95A  6ADA               	clrf	fsr2h,c
 38598   00B95C  0E02               	movlw	high _evs
 38599   00B95E  22DA               	addwfc	fsr2h,f,c
 38600   00B960  50DF               	movf	indf2,w,c
 38601   00B962  A4D8               	btfss	status,2,c
 38602   00B964  0012               	return	
 38603                           
 38604                           ; BSR set to: 1
 38605                           ;../../VLCBlib_PIC/event_teach.c: 808:         }
 38606   00B966  2BCE               	incf	checkRemoveTableEntry@e& (0+255),f,b
 38607                           
 38608                           ; BSR set to: 1
 38609   00B968  0E13               	movlw	19
 38610   00B96A  65CE               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 38611   00B96C  D7F3               	goto	l18436
 38612                           
 38613                           ; BSR set to: 1
 38614                           ;../../VLCBlib_PIC/event_teach.c: 809:         removeTableEntry(tableIndex);
 38615   00B96E  51CD               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 38616   00B970  ECCF  F03C         	call	_removeTableEntry
 38617   00B974  0012               	return		;funcret
 38618   00B976                     __end_of_checkRemoveTableEntry:
 38619                           	callstack 0
 38620                           
 38621 ;; *************** function _removeTableEntry *****************
 38622 ;; Defined at:
 38623 ;;		line 761 in file "../../VLCBlib_PIC/event_teach.c"
 38624 ;; Parameters:    Size  Location     Type
 38625 ;;  tableIndex      1    wreg     unsigned char 
 38626 ;; Auto vars:     Size  Location     Type
 38627 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 38628 ;;  f               1   13[BANK1 ] struct .
 38629 ;; Return value:  Size  Location     Type
 38630 ;;                  1    wreg      unsigned char 
 38631 ;; Registers used:
 38632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38633 ;; Tracked objects:
 38634 ;;		On entry : 0/0
 38635 ;;		On exit  : 0/0
 38636 ;;		Unchanged: 0/0
 38637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38639 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38640 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38641 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38642 ;;Total ram usage:        6 bytes
 38643 ;; Hardware stack levels used: 1
 38644 ;; Hardware stack levels required when called: 18
 38645 ;; This function calls:
 38646 ;;		_flushFlashBlock
 38647 ;;		_readNVM
 38648 ;;		_rebuildHashtable
 38649 ;;		_validStart
 38650 ;;		_writeNVM
 38651 ;; This function is called by:
 38652 ;;		_removeEvent
 38653 ;;		_checkRemoveTableEntry
 38654 ;; This function uses a non-reentrant model
 38655 ;;
 38656                           
 38657                           	psect	text162
 38658   00799E                     __ptext162:
 38659                           	callstack 0
 38660   00799E                     _removeTableEntry:
 38661                           	callstack 8
 38662                           
 38663                           ;incstack = 0
 38664                           ;removeTableEntry@tableIndex stored from wreg
 38665   00799E  0101               	movlb	1	; () banked
 38666   0079A0  6FCC               	movwf	removeTableEntry@tableIndex& (0+255),b
 38667                           
 38668                           ;../../VLCBlib_PIC/event_teach.c: 762:     EventTableFlags f;;../../VLCBlib_PIC/event_te
      +                          ach.c: 767:     if (validStart(tableIndex)) {
 38669   0079A2  0101               	movlb	1	; () banked
 38670   0079A4  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38671   0079A6  EC6A  F05B         	call	_validStart
 38672   0079AA  0900               	iorlw	0
 38673   0079AC  B4D8               	btfsc	status,2,c
 38674   0079AE  D09F               	goto	l18420
 38675                           
 38676                           ;../../VLCBlib_PIC/event_teach.c: 768:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0);
 38677   0079B0  0101               	movlb	1	; () banked
 38678   0079B2  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38679   0079B4  6FC7               	movwf	??_removeTableEntry& (0+255),b
 38680   0079B6  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 38681   0079B8  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 38682   0079BA  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38683   0079BC  0EF0               	movlw	240
 38684   0079BE  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38685   0079C0  51C7               	movf	??_removeTableEntry& (0+255),w,b
 38686   0079C2  0B0F               	andlw	15
 38687   0079C4  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38688   0079C6  0EF0               	movlw	240
 38689   0079C8  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 38690   0079CA  0E80               	movlw	128
 38691   0079CC  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 38692   0079CE  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 38693   0079D0  0EEF               	movlw	239
 38694   0079D2  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38695   0079D4  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 38696   0079D6  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 38697   0079DA  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38698   0079DE  0100               	movlb	0	; () banked
 38699   0079E0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38700   0079E2  0E01               	movlw	1
 38701   0079E4  ECD9  F058         	call	_readNVM
 38702   0079E8  0100               	movlb	0	; () banked
 38703   0079EA  5191               	movf	?_readNVM& (0+255),w,b
 38704   0079EC  0101               	movlb	1	; () banked
 38705   0079EE  6FCB               	movwf	removeTableEntry@f& (0+255),b
 38706                           
 38707                           ;../../VLCBlib_PIC/event_teach.c: 770:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tabl
      +                          eIndex+0, 0xff);
 38708   0079F0  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38709   0079F2  6FC7               	movwf	??_removeTableEntry& (0+255),b
 38710   0079F4  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 38711   0079F6  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 38712   0079F8  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38713   0079FA  0EF0               	movlw	240
 38714   0079FC  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38715   0079FE  51C7               	movf	??_removeTableEntry& (0+255),w,b
 38716   007A00  0B0F               	andlw	15
 38717   007A02  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38718   007A04  0EF0               	movlw	240
 38719   007A06  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 38720   007A08  0E80               	movlw	128
 38721   007A0A  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 38722   007A0C  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 38723   007A0E  0EEF               	movlw	239
 38724   007A10  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38725   007A12  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 38726   007A14  C1C9  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 38727   007A18  C1CA  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 38728   007A1C  0100               	movlb	0	; () banked
 38729   007A1E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38730   007A20  0EFF               	movlw	255
 38731   007A22  6FA7               	movwf	writeNVM@value& (0+255),b
 38732   007A24  0E01               	movlw	1
 38733   007A26  EC91  F05B         	call	_writeNVM
 38734                           
 38735                           ;../../VLCBlib_PIC/event_teach.c: 772:         while (f.continued) {
 38736   007A2A  D05A               	goto	l18414
 38737   007A2C                     l18402:
 38738                           
 38739                           ; BSR set to: 1
 38740                           ;../../VLCBlib_PIC/event_teach.c: 773:             tableIndex = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+1);
 38741   007A2C  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38742   007A2E  0D10               	mullw	16
 38743   007A30  CFF3 F1C7          	movff	prodl,??_removeTableEntry
 38744   007A34  CFF4 F1C8          	movff	prodh,??_removeTableEntry+1
 38745   007A38  0E81               	movlw	129
 38746   007A3A  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 38747   007A3C  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 38748   007A3E  0EEF               	movlw	239
 38749   007A40  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38750   007A42  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 38751   007A44  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 38752   007A48  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38753   007A4C  0100               	movlb	0	; () banked
 38754   007A4E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38755   007A50  0E01               	movlw	1
 38756   007A52  ECD9  F058         	call	_readNVM
 38757   007A56  0100               	movlb	0	; () banked
 38758   007A58  5191               	movf	?_readNVM& (0+255),w,b
 38759   007A5A  0101               	movlb	1	; () banked
 38760   007A5C  6FCC               	movwf	removeTableEntry@tableIndex& (0+255),b
 38761                           
 38762                           ; BSR set to: 1
 38763                           ;../../VLCBlib_PIC/event_teach.c: 774:             f.asByte = (uint8_t)readNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*tableIndex+0);
 38764   007A5E  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38765   007A60  6FC7               	movwf	??_removeTableEntry& (0+255),b
 38766   007A62  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 38767   007A64  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 38768   007A66  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38769   007A68  0EF0               	movlw	240
 38770   007A6A  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38771   007A6C  51C7               	movf	??_removeTableEntry& (0+255),w,b
 38772   007A6E  0B0F               	andlw	15
 38773   007A70  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38774   007A72  0EF0               	movlw	240
 38775   007A74  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 38776   007A76  0E80               	movlw	128
 38777   007A78  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 38778   007A7A  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 38779   007A7C  0EEF               	movlw	239
 38780   007A7E  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38781   007A80  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 38782   007A82  C1C9  F091         	movff	??_removeTableEntry+2,readNVM@index
 38783   007A86  C1CA  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 38784   007A8A  0100               	movlb	0	; () banked
 38785   007A8C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38786   007A8E  0E01               	movlw	1
 38787   007A90  ECD9  F058         	call	_readNVM
 38788   007A94  0100               	movlb	0	; () banked
 38789   007A96  5191               	movf	?_readNVM& (0+255),w,b
 38790   007A98  0101               	movlb	1	; () banked
 38791   007A9A  6FCB               	movwf	removeTableEntry@f& (0+255),b
 38792                           
 38793                           ; BSR set to: 1
 38794                           ;../../VLCBlib_PIC/event_teach.c: 776:             if (tableIndex >= 255) return CMDERR_
      +                          INV_EV_IDX;
 38795   007A9C  29CC               	incf	removeTableEntry@tableIndex& (0+255),w,b
 38796   007A9E  A4D8               	btfss	status,2,c
 38797   007AA0  D002               	goto	l18412
 38798                           
 38799                           ; BSR set to: 1
 38800   007AA2  0E06               	movlw	6
 38801   007AA4  0012               	return	
 38802   007AA6                     l18412:
 38803                           
 38804                           ; BSR set to: 1
 38805                           ;../../VLCBlib_PIC/event_teach.c: 779:             writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*
      +                          tableIndex+0, 0xff);
 38806   007AA6  51CC               	movf	removeTableEntry@tableIndex& (0+255),w,b
 38807   007AA8  6FC7               	movwf	??_removeTableEntry& (0+255),b
 38808   007AAA  6BC8               	clrf	(??_removeTableEntry+1)& (0+255),b
 38809   007AAC  3BC7               	swapf	??_removeTableEntry& (0+255),f,b
 38810   007AAE  3BC8               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 38811   007AB0  0EF0               	movlw	240
 38812   007AB2  17C8               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 38813   007AB4  51C7               	movf	??_removeTableEntry& (0+255),w,b
 38814   007AB6  0B0F               	andlw	15
 38815   007AB8  13C8               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 38816   007ABA  0EF0               	movlw	240
 38817   007ABC  17C7               	andwf	??_removeTableEntry& (0+255),f,b
 38818   007ABE  0E80               	movlw	128
 38819   007AC0  25C7               	addwf	??_removeTableEntry& (0+255),w,b
 38820   007AC2  6FC9               	movwf	(??_removeTableEntry+2)& (0+255),b
 38821   007AC4  0EEF               	movlw	239
 38822   007AC6  21C8               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 38823   007AC8  6FCA               	movwf	(??_removeTableEntry+3)& (0+255),b
 38824   007ACA  C1C9  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 38825   007ACE  C1CA  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 38826   007AD2  0100               	movlb	0	; () banked
 38827   007AD4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38828   007AD6  0EFF               	movlw	255
 38829   007AD8  6FA7               	movwf	writeNVM@value& (0+255),b
 38830   007ADA  0E01               	movlw	1
 38831   007ADC  EC91  F05B         	call	_writeNVM
 38832   007AE0                     l18414:
 38833                           
 38834                           ;../../VLCBlib_PIC/event_teach.c: 772:         while (f.continued) {
 38835   007AE0  0101               	movlb	1	; () banked
 38836   007AE2  B9CB               	btfsc	removeTableEntry@f& (0+255),4,b
 38837   007AE4  D7A3               	goto	l18402
 38838                           
 38839                           ; BSR set to: 1
 38840                           ;../../VLCBlib_PIC/event_teach.c: 782:         flushFlashBlock();
 38841   007AE6  EC11  F053         	call	_flushFlashBlock	;wreg free
 38842                           
 38843                           ;../../VLCBlib_PIC/event_teach.c: 785:         rebuildHashtable();
 38844   007AEA  EC57  F03F         	call	_rebuildHashtable	;wreg free
 38845   007AEE                     l18420:
 38846                           
 38847                           ;../../VLCBlib_PIC/event_teach.c: 788:     return 0;
 38848   007AEE  0E00               	movlw	0
 38849   007AF0  0012               	return		;funcret
 38850   007AF2                     __end_of_removeTableEntry:
 38851                           	callstack 0
 38852                           
 38853 ;; *************** function _rebuildHashtable *****************
 38854 ;; Defined at:
 38855 ;;		line 1217 in file "../../VLCBlib_PIC/event_teach.c"
 38856 ;; Parameters:    Size  Location     Type
 38857 ;;		None
 38858 ;; Auto vars:     Size  Location     Type
 38859 ;;  ev              2    3[BANK1 ] short 
 38860 ;;  a               2    0        int 
 38861 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 38862 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 38863 ;;  happening       1    6[BANK1 ] unsigned char 
 38864 ;;  hash            1    5[BANK1 ] unsigned char 
 38865 ;; Return value:  Size  Location     Type
 38866 ;;                  1    wreg      void 
 38867 ;; Registers used:
 38868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38869 ;; Tracked objects:
 38870 ;;		On entry : 0/0
 38871 ;;		On exit  : 0/0
 38872 ;;		Unchanged: 0/0
 38873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38875 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38876 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38877 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38878 ;;Total ram usage:        9 bytes
 38879 ;; Hardware stack levels used: 1
 38880 ;; Hardware stack levels required when called: 16
 38881 ;; This function calls:
 38882 ;;		_getEN
 38883 ;;		_getEv
 38884 ;;		_getHash
 38885 ;;		_getNN
 38886 ;;		_validStart
 38887 ;; This function is called by:
 38888 ;;		_deleteHappeningRange
 38889 ;;		_teachPowerUp
 38890 ;;		_clearAllEvents
 38891 ;;		_removeTableEntry
 38892 ;;		_addEvent
 38893 ;; This function uses a non-reentrant model
 38894 ;;
 38895                           
 38896                           	psect	text163
 38897   007EAE                     __ptext163:
 38898                           	callstack 0
 38899   007EAE                     _rebuildHashtable:
 38900                           	callstack 12
 38901                           
 38902                           ;../../VLCBlib_PIC/event_teach.c: 1219:     uint8_t hash;;../../VLCBlib_PIC/event_teach.
      +                          c: 1220:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach.c: 1221:     uint8_t tableI
      +                          ndex;;../../VLCBlib_PIC/event_teach.c: 1222:     int a;;../../VLCBlib_PIC/event_teach.c:
      +                           1225:     Happening happening;;../../VLCBlib_PIC/event_teach.c: 1226:     for (happenin
      +                          g=0; happening<=71; happening++) {
 38903                           
 38904                           ;incstack = 0
 38905   007EAE  0E00               	movlw	0
 38906   007EB0  0101               	movlb	1	; () banked
 38907   007EB2  6FC4               	movwf	rebuildHashtable@happening& (0+255),b
 38908   007EB4                     l18274:
 38909                           
 38910                           ; BSR set to: 1
 38911                           ;../../VLCBlib_PIC/event_teach.c: 1227:         happening2Event[happening] = 0xff;
 38912   007EB4  0E00               	movlw	low _happening2Event
 38913   007EB6  25C4               	addwf	rebuildHashtable@happening& (0+255),w,b
 38914   007EB8  6ED9               	movwf	fsr2l,c
 38915   007EBA  6ADA               	clrf	fsr2h,c
 38916   007EBC  0E03               	movlw	high _happening2Event
 38917   007EBE  22DA               	addwfc	fsr2h,f,c
 38918   007EC0  0EFF               	movlw	255
 38919   007EC2  6EDF               	movwf	indf2,c
 38920                           
 38921                           ; BSR set to: 1
 38922                           ;../../VLCBlib_PIC/event_teach.c: 1228:     }
 38923   007EC4  2BC4               	incf	rebuildHashtable@happening& (0+255),f,b
 38924                           
 38925                           ; BSR set to: 1
 38926   007EC6  0E47               	movlw	71
 38927   007EC8  65C4               	cpfsgt	rebuildHashtable@happening& (0+255),b
 38928   007ECA  D7F4               	goto	l18274
 38929                           
 38930                           ; BSR set to: 1
 38931                           ;../../VLCBlib_PIC/event_teach.c: 1230:     for (hash=0; hash<32; hash++) {
 38932   007ECC  0E00               	movlw	0
 38933   007ECE  6FC3               	movwf	rebuildHashtable@hash& (0+255),b
 38934   007ED0                     l18286:
 38935                           
 38936                           ; BSR set to: 1
 38937                           ;../../VLCBlib_PIC/event_teach.c: 1231:         for (chainIdx=0; chainIdx < 20; chainIdx
      +                          ++) {
 38938   007ED0  0E00               	movlw	0
 38939   007ED2  6FC5               	movwf	rebuildHashtable@chainIdx& (0+255),b
 38940   007ED4                     l18292:
 38941                           
 38942                           ; BSR set to: 1
 38943                           ;../../VLCBlib_PIC/event_teach.c: 1232:             eventChains[hash][chainIdx] = 0xff;
 38944   007ED4  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 38945   007ED6  0D14               	mullw	20
 38946   007ED8  0EC8               	movlw	low _eventChains
 38947   007EDA  24F3               	addwf	243,w,c
 38948   007EDC  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 38949   007EDE  0E04               	movlw	high _eventChains
 38950   007EE0  20F4               	addwfc	prodh,w,c
 38951   007EE2  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 38952   007EE4  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 38953   007EE6  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 38954   007EE8  6ED9               	movwf	fsr2l,c
 38955   007EEA  0E00               	movlw	0
 38956   007EEC  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 38957   007EEE  6EDA               	movwf	fsr2h,c
 38958   007EF0  0EFF               	movlw	255
 38959   007EF2  6EDF               	movwf	indf2,c
 38960                           
 38961                           ; BSR set to: 1
 38962                           ;../../VLCBlib_PIC/event_teach.c: 1233:         }
 38963   007EF4  2BC5               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 38964                           
 38965                           ; BSR set to: 1
 38966   007EF6  0E13               	movlw	19
 38967   007EF8  65C5               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 38968   007EFA  D7EC               	goto	l18292
 38969                           
 38970                           ; BSR set to: 1
 38971                           ;../../VLCBlib_PIC/event_teach.c: 1234:     }
 38972   007EFC  2BC3               	incf	rebuildHashtable@hash& (0+255),f,b
 38973                           
 38974                           ; BSR set to: 1
 38975   007EFE  0E1F               	movlw	31
 38976   007F00  65C3               	cpfsgt	rebuildHashtable@hash& (0+255),b
 38977   007F02  D7E6               	goto	l18286
 38978                           
 38979                           ; BSR set to: 1
 38980                           ;../../VLCBlib_PIC/event_teach.c: 1237:     for (tableIndex=0; tableIndex<255; tableInde
      +                          x++) {
 38981   007F04  0E00               	movlw	0
 38982   007F06  6FC6               	movwf	rebuildHashtable@tableIndex& (0+255),b
 38983   007F08                     l18308:
 38984                           
 38985                           ; BSR set to: 1
 38986                           ;../../VLCBlib_PIC/event_teach.c: 1238:         if (validStart(tableIndex)) {
 38987   007F08  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 38988   007F0A  EC6A  F05B         	call	_validStart
 38989   007F0E  0900               	iorlw	0
 38990   007F10  B4D8               	btfsc	status,2,c
 38991   007F12  D056               	goto	u18080
 38992                           
 38993                           ;../../VLCBlib_PIC/event_teach.c: 1239:             int16_t ev;;../../VLCBlib_PIC/event_
      +                          teach.c: 1254:             ev = getEv(tableIndex, 0);
 38994   007F14  0E00               	movlw	0
 38995   007F16  0100               	movlb	0	; () banked
 38996   007F18  6F9D               	movwf	getEv@evNum& (0+255),b
 38997   007F1A  0101               	movlb	1	; () banked
 38998   007F1C  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 38999   007F1E  EC24  F03C         	call	_getEv
 39000   007F22  C09D  F1C1         	movff	?_getEv,rebuildHashtable@ev
 39001   007F26  C09E  F1C2         	movff	?_getEv+1,rebuildHashtable@ev+1
 39002                           
 39003                           ;../../VLCBlib_PIC/event_teach.c: 1255:             if (ev < 0) continue;
 39004   007F2A  0101               	movlb	1	; () banked
 39005   007F2C  BFC2               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 39006   007F2E  D048               	goto	u18080
 39007                           
 39008                           ; BSR set to: 1
 39009                           ;../../VLCBlib_PIC/event_teach.c: 1256:             happening = (uint8_t) ev;
 39010   007F30  C1C1  F1C4         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 39011                           
 39012                           ; BSR set to: 1
 39013                           ;../../VLCBlib_PIC/event_teach.c: 1258:             if (happening<= 71) {
 39014   007F34  0E48               	movlw	72
 39015   007F36  61C4               	cpfslt	rebuildHashtable@happening& (0+255),b
 39016   007F38  D008               	goto	l18320
 39017                           
 39018                           ; BSR set to: 1
 39019                           ;../../VLCBlib_PIC/event_teach.c: 1259:                 happening2Event[happening] = tab
      +                          leIndex;
 39020   007F3A  0E00               	movlw	low _happening2Event
 39021   007F3C  25C4               	addwf	rebuildHashtable@happening& (0+255),w,b
 39022   007F3E  6ED9               	movwf	fsr2l,c
 39023   007F40  6ADA               	clrf	fsr2h,c
 39024   007F42  0E03               	movlw	high _happening2Event
 39025   007F44  22DA               	addwfc	fsr2h,f,c
 39026   007F46  C1C6  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39027   007F4A                     l18320:
 39028                           
 39029                           ; BSR set to: 1
 39030                           ;../../VLCBlib_PIC/event_teach.c: 1262:             hash = getHash(getNN(tableIndex), ge
      +                          tEN(tableIndex));
 39031   007F4A  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39032   007F4C  EC6B  F049         	call	_getNN
 39033   007F50  C097  F0A3         	movff	?_getNN,getHash@nn
 39034   007F54  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 39035   007F58  0101               	movlb	1	; () banked
 39036   007F5A  51C6               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39037   007F5C  EC4D  F055         	call	_getEN
 39038   007F60  C097  F0A5         	movff	?_getEN,getHash@en
 39039   007F64  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 39040   007F68  EC00  F061         	call	_getHash	;wreg free
 39041   007F6C  0101               	movlb	1	; () banked
 39042   007F6E  6FC3               	movwf	rebuildHashtable@hash& (0+255),b
 39043                           
 39044                           ; BSR set to: 1
 39045                           ;../../VLCBlib_PIC/event_teach.c: 1264:             for (chainIdx=0; chainIdx<20; chainI
      +                          dx++) {
 39046   007F70  0E00               	movlw	0
 39047   007F72  6FC5               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39048   007F74                     l18328:
 39049                           
 39050                           ; BSR set to: 1
 39051                           ;../../VLCBlib_PIC/event_teach.c: 1265:                 if (eventChains[hash][chainIdx] 
      +                          == 0xff) {
 39052   007F74  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 39053   007F76  0D14               	mullw	20
 39054   007F78  0EC8               	movlw	low _eventChains
 39055   007F7A  24F3               	addwf	243,w,c
 39056   007F7C  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 39057   007F7E  0E04               	movlw	high _eventChains
 39058   007F80  20F4               	addwfc	prodh,w,c
 39059   007F82  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39060   007F84  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39061   007F86  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 39062   007F88  6ED9               	movwf	fsr2l,c
 39063   007F8A  0E00               	movlw	0
 39064   007F8C  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39065   007F8E  6EDA               	movwf	fsr2h,c
 39066   007F90  28DE               	incf	postinc2,w,c
 39067   007F92  A4D8               	btfss	status,2,c
 39068   007F94  D011               	goto	l18332
 39069                           
 39070                           ; BSR set to: 1
 39071                           ;../../VLCBlib_PIC/event_teach.c: 1267:                     eventChains[hash][chainIdx] 
      +                          = tableIndex;
 39072   007F96  51C3               	movf	rebuildHashtable@hash& (0+255),w,b
 39073   007F98  0D14               	mullw	20
 39074   007F9A  0EC8               	movlw	low _eventChains
 39075   007F9C  24F3               	addwf	243,w,c
 39076   007F9E  6FBE               	movwf	??_rebuildHashtable& (0+255),b
 39077   007FA0  0E04               	movlw	high _eventChains
 39078   007FA2  20F4               	addwfc	prodh,w,c
 39079   007FA4  6FBF               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39080   007FA6  51C5               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39081   007FA8  25BE               	addwf	??_rebuildHashtable& (0+255),w,b
 39082   007FAA  6ED9               	movwf	fsr2l,c
 39083   007FAC  0E00               	movlw	0
 39084   007FAE  21BF               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39085   007FB0  6EDA               	movwf	fsr2h,c
 39086   007FB2  C1C6  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39087                           
 39088                           ;../../VLCBlib_PIC/event_teach.c: 1268:                     break;
 39089   007FB6  D004               	goto	u18080
 39090   007FB8                     l18332:
 39091                           
 39092                           ; BSR set to: 1
 39093                           ;../../VLCBlib_PIC/event_teach.c: 1270:             }
 39094   007FB8  2BC5               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39095                           
 39096                           ; BSR set to: 1
 39097   007FBA  0E13               	movlw	19
 39098   007FBC  65C5               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39099   007FBE  D7DA               	goto	l18328
 39100   007FC0                     u18080:
 39101   007FC0  0101               	movlb	1	; () banked
 39102   007FC2  2BC6               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 39103                           
 39104                           ; BSR set to: 1
 39105   007FC4  29C6               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 39106   007FC6  B4D8               	btfsc	status,2,c
 39107   007FC8  0012               	return	
 39108   007FCA  D79E               	goto	l18308
 39109   007FCC                     __end_of_rebuildHashtable:
 39110                           	callstack 0
 39111                           
 39112 ;; *************** function _getEv *****************
 39113 ;; Defined at:
 39114 ;;		line 1008 in file "../../VLCBlib_PIC/event_teach.c"
 39115 ;; Parameters:    Size  Location     Type
 39116 ;;  tableIndex      1    wreg     unsigned char 
 39117 ;;  evNum           1   61[BANK0 ] unsigned char 
 39118 ;; Auto vars:     Size  Location     Type
 39119 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 39120 ;;  f               1   68[BANK0 ] struct .
 39121 ;; Return value:  Size  Location     Type
 39122 ;;                  2   61[BANK0 ] short 
 39123 ;; Registers used:
 39124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39125 ;; Tracked objects:
 39126 ;;		On entry : 0/0
 39127 ;;		On exit  : 0/0
 39128 ;;		Unchanged: 0/0
 39129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39131 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39132 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39133 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39134 ;;Total ram usage:        9 bytes
 39135 ;; Hardware stack levels used: 1
 39136 ;; Hardware stack levels required when called: 15
 39137 ;; This function calls:
 39138 ;;		_readNVM
 39139 ;;		_validStart
 39140 ;; This function is called by:
 39141 ;;		_ackEventProcessMessage
 39142 ;;		_producerProcessMessage
 39143 ;;		_doReval
 39144 ;;		_doReqev
 39145 ;;		_reqevCallback
 39146 ;;		_rebuildHashtable
 39147 ;; This function uses a non-reentrant model
 39148 ;;
 39149                           
 39150                           	psect	text164
 39151   007848                     __ptext164:
 39152                           	callstack 0
 39153   007848                     _getEv:
 39154                           	callstack 12
 39155                           
 39156                           ; BSR set to: 1
 39157                           ;incstack = 0
 39158                           ;getEv@tableIndex stored from wreg
 39159   007848  0100               	movlb	0	; () banked
 39160   00784A  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39161                           
 39162                           ;../../VLCBlib_PIC/event_teach.c: 1009:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1010:     if ( ! validStart(tableIndex)) {
 39163   00784C  0100               	movlb	0	; () banked
 39164   00784E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39165   007850  EC6A  F05B         	call	_validStart
 39166   007854  0900               	iorlw	0
 39167   007856  A4D8               	btfss	status,2,c
 39168   007858  D006               	goto	l18116
 39169   00785A                     u17840:
 39170                           
 39171                           ;../../VLCBlib_PIC/event_teach.c: 1012:         return -CMDERR_INVALID_EVENT;
 39172   00785A  0EFF               	movlw	255
 39173   00785C  0100               	movlb	0	; () banked
 39174   00785E  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39175   007860  0EF9               	movlw	249
 39176   007862  6F9D               	movwf	?_getEv& (0+255),b
 39177   007864  0012               	return	
 39178   007866                     l18116:
 39179                           
 39180                           ;../../VLCBlib_PIC/event_teach.c: 1014:     if (evNum >= 20) {
 39181   007866  0E13               	movlw	19
 39182   007868  0100               	movlb	0	; () banked
 39183   00786A  659D               	cpfsgt	getEv@evNum& (0+255),b
 39184   00786C  D005               	goto	l18122
 39185                           
 39186                           ; BSR set to: 0
 39187                           ;../../VLCBlib_PIC/event_teach.c: 1015:         return -CMDERR_INV_EV_IDX;
 39188   00786E  0EFF               	movlw	255
 39189   007870  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39190   007872  0EFA               	movlw	250
 39191   007874  6F9D               	movwf	?_getEv& (0+255),b
 39192   007876  0012               	return	
 39193   007878                     l18122:
 39194                           
 39195                           ; BSR set to: 0
 39196                           ;../../VLCBlib_PIC/event_teach.c: 1017:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 39197   007878  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39198   00787A  6F9F               	movwf	??_getEv& (0+255),b
 39199   00787C  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39200   00787E  3B9F               	swapf	??_getEv& (0+255),f,b
 39201   007880  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39202   007882  0EF0               	movlw	240
 39203   007884  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39204   007886  519F               	movf	??_getEv& (0+255),w,b
 39205   007888  0B0F               	andlw	15
 39206   00788A  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39207   00788C  0EF0               	movlw	240
 39208   00788E  179F               	andwf	??_getEv& (0+255),f,b
 39209   007890  0E80               	movlw	128
 39210   007892  259F               	addwf	??_getEv& (0+255),w,b
 39211   007894  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39212   007896  0EEF               	movlw	239
 39213   007898  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39214   00789A  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39215   00789C  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39216   0078A0  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39217   0078A4  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39218   0078A6  0E01               	movlw	1
 39219   0078A8  ECD9  F058         	call	_readNVM
 39220   0078AC  0100               	movlb	0	; () banked
 39221   0078AE  5191               	movf	?_readNVM& (0+255),w,b
 39222   0078B0  6FA4               	movwf	getEv@f& (0+255),b
 39223                           
 39224                           ;../../VLCBlib_PIC/event_teach.c: 1018:     while (evNum >= 10) {
 39225   0078B2  D040               	goto	l18140
 39226   0078B4                     l1668:
 39227                           
 39228                           ; BSR set to: 0
 39229                           ;../../VLCBlib_PIC/event_teach.c: 1020:         if (! f.continued) {
 39230   0078B4  B9A4               	btfsc	getEv@f& (0+255),4,b
 39231   0078B6  D005               	goto	l18128
 39232   0078B8                     u17860:
 39233                           
 39234                           ; BSR set to: 0
 39235                           ;../../VLCBlib_PIC/event_teach.c: 1021:             return -CMDERR_NO_EV;
 39236   0078B8  0EFF               	movlw	255
 39237   0078BA  6F9E               	movwf	(?_getEv+1)& (0+255),b
 39238   0078BC  0EFB               	movlw	251
 39239   0078BE  6F9D               	movwf	?_getEv& (0+255),b
 39240   0078C0  0012               	return	
 39241   0078C2                     l18128:
 39242                           
 39243                           ; BSR set to: 0
 39244                           ;../../VLCBlib_PIC/event_teach.c: 1023:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 39245   0078C2  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39246   0078C4  0D10               	mullw	16
 39247   0078C6  CFF3 F09F          	movff	prodl,??_getEv
 39248   0078CA  CFF4 F0A0          	movff	prodh,??_getEv+1
 39249   0078CE  0E81               	movlw	129
 39250   0078D0  259F               	addwf	??_getEv& (0+255),w,b
 39251   0078D2  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39252   0078D4  0EEF               	movlw	239
 39253   0078D6  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39254   0078D8  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39255   0078DA  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39256   0078DE  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39257   0078E2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39258   0078E4  0E01               	movlw	1
 39259   0078E6  ECD9  F058         	call	_readNVM
 39260   0078EA  0100               	movlb	0	; () banked
 39261   0078EC  5191               	movf	?_readNVM& (0+255),w,b
 39262   0078EE  6FA5               	movwf	getEv@tableIndex& (0+255),b
 39263                           
 39264                           ; BSR set to: 0
 39265                           ;../../VLCBlib_PIC/event_teach.c: 1024:         if (tableIndex == 0xff) {
 39266   0078F0  29A5               	incf	getEv@tableIndex& (0+255),w,b
 39267   0078F2  B4D8               	btfsc	status,2,c
 39268   0078F4  D7B2               	goto	u17840
 39269                           
 39270                           ; BSR set to: 0
 39271                           ;../../VLCBlib_PIC/event_teach.c: 1027:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 39272   0078F6  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39273   0078F8  6F9F               	movwf	??_getEv& (0+255),b
 39274   0078FA  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39275   0078FC  3B9F               	swapf	??_getEv& (0+255),f,b
 39276   0078FE  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 39277   007900  0EF0               	movlw	240
 39278   007902  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 39279   007904  519F               	movf	??_getEv& (0+255),w,b
 39280   007906  0B0F               	andlw	15
 39281   007908  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 39282   00790A  0EF0               	movlw	240
 39283   00790C  179F               	andwf	??_getEv& (0+255),f,b
 39284   00790E  0E80               	movlw	128
 39285   007910  259F               	addwf	??_getEv& (0+255),w,b
 39286   007912  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39287   007914  0EEF               	movlw	239
 39288   007916  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39289   007918  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39290   00791A  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39291   00791E  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39292   007922  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39293   007924  0E01               	movlw	1
 39294   007926  ECD9  F058         	call	_readNVM
 39295   00792A  0100               	movlb	0	; () banked
 39296   00792C  5191               	movf	?_readNVM& (0+255),w,b
 39297   00792E  6FA4               	movwf	getEv@f& (0+255),b
 39298                           
 39299                           ; BSR set to: 0
 39300                           ;../../VLCBlib_PIC/event_teach.c: 1028:         evNum -= 10;
 39301   007930  0E0A               	movlw	10
 39302   007932  5F9D               	subwf	getEv@evNum& (0+255),f,b
 39303   007934                     l18140:
 39304                           
 39305                           ; BSR set to: 0
 39306                           ;../../VLCBlib_PIC/event_teach.c: 1018:     while (evNum >= 10) {
 39307   007934  0E0A               	movlw	10
 39308   007936  619D               	cpfslt	getEv@evNum& (0+255),b
 39309   007938  D7BD               	goto	l1668
 39310                           
 39311                           ; BSR set to: 0
 39312                           ;../../VLCBlib_PIC/event_teach.c: 1030:     if (evNum+1 > f.eVsUsed) {
 39313   00793A  519D               	movf	getEv@evNum& (0+255),w,b
 39314   00793C  6F9F               	movwf	??_getEv& (0+255),b
 39315   00793E  6BA0               	clrf	(??_getEv+1)& (0+255),b
 39316   007940  0E01               	movlw	1
 39317   007942  279F               	addwf	??_getEv& (0+255),f,b
 39318   007944  0E00               	movlw	0
 39319   007946  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39320   007948  51A4               	movf	getEv@f& (0+255),w,b
 39321   00794A  0B0F               	andlw	15
 39322   00794C  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39323   00794E  6BA2               	clrf	(??_getEv+3)& (0+255),b
 39324   007950  519F               	movf	??_getEv& (0+255),w,b
 39325   007952  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 39326   007954  51A2               	movf	(??_getEv+3)& (0+255),w,b
 39327   007956  0A80               	xorlw	128
 39328   007958  6FA3               	movwf	(??_getEv+4)& (0+255),b
 39329   00795A  51A0               	movf	(??_getEv+1)& (0+255),w,b
 39330   00795C  0A80               	xorlw	128
 39331   00795E  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 39332   007960  A0D8               	btfss	status,0,c
 39333   007962  D7AA               	goto	u17860
 39334                           
 39335                           ; BSR set to: 0
 39336                           ;../../VLCBlib_PIC/event_teach.c: 1034:     return (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF
      +                          80 + 16*tableIndex+6 +evNum);
 39337   007964  51A5               	movf	getEv@tableIndex& (0+255),w,b
 39338   007966  0D10               	mullw	16
 39339   007968  CFF3 F09F          	movff	prodl,??_getEv
 39340   00796C  CFF4 F0A0          	movff	prodh,??_getEv+1
 39341   007970  519D               	movf	getEv@evNum& (0+255),w,b
 39342   007972  279F               	addwf	??_getEv& (0+255),f,b
 39343   007974  0E00               	movlw	0
 39344   007976  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 39345   007978  0E86               	movlw	134
 39346   00797A  259F               	addwf	??_getEv& (0+255),w,b
 39347   00797C  6FA1               	movwf	(??_getEv+2)& (0+255),b
 39348   00797E  0EEF               	movlw	239
 39349   007980  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 39350   007982  6FA2               	movwf	(??_getEv+3)& (0+255),b
 39351   007984  C0A1  F091         	movff	??_getEv+2,readNVM@index
 39352   007988  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 39353   00798C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39354   00798E  0E01               	movlw	1
 39355   007990  ECD9  F058         	call	_readNVM
 39356   007994  0100               	movlb	0	; () banked
 39357   007996  5191               	movf	?_readNVM& (0+255),w,b
 39358   007998  6F9D               	movwf	?_getEv& (0+255),b
 39359   00799A  6B9E               	clrf	(?_getEv+1)& (0+255),b
 39360                           
 39361                           ; BSR set to: 0
 39362   00799C  0012               	return		;funcret
 39363   00799E                     __end_of_getEv:
 39364                           	callstack 0
 39365                           
 39366 ;; *************** function _getEVs *****************
 39367 ;; Defined at:
 39368 ;;		line 1073 in file "../../VLCBlib_PIC/event_teach.c"
 39369 ;; Parameters:    Size  Location     Type
 39370 ;;  tableIndex      1    wreg     unsigned char 
 39371 ;; Auto vars:     Size  Location     Type
 39372 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 39373 ;;  evIdx           1   66[BANK0 ] unsigned char 
 39374 ;;  evNum           1   68[BANK0 ] unsigned char 
 39375 ;;  f               1   65[BANK0 ] struct .
 39376 ;; Return value:  Size  Location     Type
 39377 ;;                  1    wreg      unsigned char 
 39378 ;; Registers used:
 39379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39380 ;; Tracked objects:
 39381 ;;		On entry : 0/0
 39382 ;;		On exit  : 0/0
 39383 ;;		Unchanged: 0/0
 39384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39386 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39387 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39388 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39389 ;;Total ram usage:        8 bytes
 39390 ;; Hardware stack levels used: 1
 39391 ;; Hardware stack levels required when called: 15
 39392 ;; This function calls:
 39393 ;;		_readNVM
 39394 ;;		_validStart
 39395 ;; This function is called by:
 39396 ;;		_consumer2QProcessMessage
 39397 ;;		_deleteActionRange
 39398 ;;		_checkRemoveTableEntry
 39399 ;; This function uses a non-reentrant model
 39400 ;;
 39401                           
 39402                           	psect	text165
 39403   0082E6                     __ptext165:
 39404                           	callstack 0
 39405   0082E6                     _getEVs:
 39406                           	callstack 8
 39407                           
 39408                           ; BSR set to: 0
 39409                           ;incstack = 0
 39410                           ;getEVs@tableIndex stored from wreg
 39411   0082E6  0100               	movlb	0	; () banked
 39412   0082E8  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39413                           
 39414                           ;../../VLCBlib_PIC/event_teach.c: 1074:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1075:     uint8_t evNum;;../../VLCBlib_PIC/event_teach.c: 1077:     if ( ! valid
      +                          Start(tableIndex)) {
 39415   0082EA  0100               	movlb	0	; () banked
 39416   0082EC  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39417   0082EE  EC6A  F05B         	call	_validStart
 39418   0082F2  0900               	iorlw	0
 39419   0082F4  A4D8               	btfss	status,2,c
 39420   0082F6  D002               	goto	l18346
 39421   0082F8                     u18100:
 39422                           
 39423                           ;../../VLCBlib_PIC/event_teach.c: 1079:         return CMDERR_INVALID_EVENT;
 39424   0082F8  0E07               	movlw	7
 39425   0082FA  0012               	return	
 39426   0082FC                     l18346:
 39427                           
 39428                           ;../../VLCBlib_PIC/event_teach.c: 1081:     for (evNum=0; evNum < 20; ) {
 39429   0082FC  0E00               	movlw	0
 39430   0082FE  0100               	movlb	0	; () banked
 39431   008300  6FA4               	movwf	getEVs@evNum& (0+255),b
 39432   008302                     l18352:
 39433                           
 39434                           ; BSR set to: 0
 39435                           ;../../VLCBlib_PIC/event_teach.c: 1082:         uint8_t evIdx;;../../VLCBlib_PIC/event_t
      +                          each.c: 1083:         for (evIdx=0; evIdx < 10; evIdx++) {
 39436   008302  0E00               	movlw	0
 39437   008304  6FA2               	movwf	getEVs@evIdx& (0+255),b
 39438   008306                     l18358:
 39439                           
 39440                           ; BSR set to: 0
 39441                           ;../../VLCBlib_PIC/event_teach.c: 1084:             evs[evNum] = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 39442   008306  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39443   008308  0D10               	mullw	16
 39444   00830A  CFF3 F09D          	movff	prodl,??_getEVs
 39445   00830E  CFF4 F09E          	movff	prodh,??_getEVs+1
 39446   008312  51A2               	movf	getEVs@evIdx& (0+255),w,b
 39447   008314  279D               	addwf	??_getEVs& (0+255),f,b
 39448   008316  0E00               	movlw	0
 39449   008318  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 39450   00831A  0E86               	movlw	134
 39451   00831C  259D               	addwf	??_getEVs& (0+255),w,b
 39452   00831E  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39453   008320  0EEF               	movlw	239
 39454   008322  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39455   008324  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39456   008326  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39457   00832A  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39458   00832E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39459   008330  0E01               	movlw	1
 39460   008332  ECD9  F058         	call	_readNVM
 39461   008336  0E40               	movlw	low _evs
 39462   008338  0100               	movlb	0	; () banked
 39463   00833A  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39464   00833C  6ED9               	movwf	fsr2l,c
 39465   00833E  6ADA               	clrf	fsr2h,c
 39466   008340  0E02               	movlw	high _evs
 39467   008342  22DA               	addwfc	fsr2h,f,c
 39468   008344  C091  FFDF         	movff	?_readNVM,indf2
 39469                           
 39470                           ; BSR set to: 0
 39471                           ;../../VLCBlib_PIC/event_teach.c: 1085:             evNum++;
 39472   008348  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39473                           
 39474                           ; BSR set to: 0
 39475                           ;../../VLCBlib_PIC/event_teach.c: 1086:         }
 39476   00834A  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 39477                           
 39478                           ; BSR set to: 0
 39479   00834C  0E09               	movlw	9
 39480   00834E  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 39481   008350  D7DA               	goto	l18358
 39482                           
 39483                           ; BSR set to: 0
 39484                           ;../../VLCBlib_PIC/event_teach.c: 1087:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TY
      +                          PE, 0xEF80 + 16*tableIndex+0);
 39485   008352  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39486   008354  6F9D               	movwf	??_getEVs& (0+255),b
 39487   008356  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 39488   008358  3B9D               	swapf	??_getEVs& (0+255),f,b
 39489   00835A  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 39490   00835C  0EF0               	movlw	240
 39491   00835E  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 39492   008360  519D               	movf	??_getEVs& (0+255),w,b
 39493   008362  0B0F               	andlw	15
 39494   008364  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 39495   008366  0EF0               	movlw	240
 39496   008368  179D               	andwf	??_getEVs& (0+255),f,b
 39497   00836A  0E80               	movlw	128
 39498   00836C  259D               	addwf	??_getEVs& (0+255),w,b
 39499   00836E  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39500   008370  0EEF               	movlw	239
 39501   008372  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39502   008374  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39503   008376  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39504   00837A  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39505   00837E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39506   008380  0E01               	movlw	1
 39507   008382  ECD9  F058         	call	_readNVM
 39508   008386  0100               	movlb	0	; () banked
 39509   008388  5191               	movf	?_readNVM& (0+255),w,b
 39510   00838A  6FA1               	movwf	getEVs@f& (0+255),b
 39511                           
 39512                           ; BSR set to: 0
 39513                           ;../../VLCBlib_PIC/event_teach.c: 1088:         if (! f.continued) {
 39514   00838C  B9A1               	btfsc	getEVs@f& (0+255),4,b
 39515   00838E  D00F               	goto	l18384
 39516   008390                     u18120:
 39517                           
 39518                           ; BSR set to: 0
 39519                           ;../../VLCBlib_PIC/event_teach.c: 1089:             for (; evNum < 20; evNum++) {
 39520   008390  0E13               	movlw	19
 39521   008392  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39522   008394  D001               	goto	l18374
 39523   008396  D009               	goto	l18380
 39524   008398                     l18374:
 39525                           
 39526                           ; BSR set to: 0
 39527                           ;../../VLCBlib_PIC/event_teach.c: 1090:                 evs[evNum] = 0;
 39528   008398  0E40               	movlw	low _evs
 39529   00839A  25A4               	addwf	getEVs@evNum& (0+255),w,b
 39530   00839C  6ED9               	movwf	fsr2l,c
 39531   00839E  6ADA               	clrf	fsr2h,c
 39532   0083A0  0E02               	movlw	high _evs
 39533   0083A2  22DA               	addwfc	fsr2h,f,c
 39534   0083A4  6ADF               	clrf	indf2,c
 39535                           
 39536                           ; BSR set to: 0
 39537                           ;../../VLCBlib_PIC/event_teach.c: 1091:             }
 39538   0083A6  2BA4               	incf	getEVs@evNum& (0+255),f,b
 39539   0083A8  D7F3               	goto	u18120
 39540   0083AA                     l18380:
 39541                           
 39542                           ; BSR set to: 0
 39543                           ;../../VLCBlib_PIC/event_teach.c: 1092:             return 0;
 39544   0083AA  0E00               	movlw	0
 39545   0083AC  0012               	return	
 39546   0083AE                     l18384:
 39547                           
 39548                           ; BSR set to: 0
 39549                           ;../../VLCBlib_PIC/event_teach.c: 1094:         tableIndex = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+1);
 39550   0083AE  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 39551   0083B0  0D10               	mullw	16
 39552   0083B2  CFF3 F09D          	movff	prodl,??_getEVs
 39553   0083B6  CFF4 F09E          	movff	prodh,??_getEVs+1
 39554   0083BA  0E81               	movlw	129
 39555   0083BC  259D               	addwf	??_getEVs& (0+255),w,b
 39556   0083BE  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 39557   0083C0  0EEF               	movlw	239
 39558   0083C2  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 39559   0083C4  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 39560   0083C6  C09F  F091         	movff	??_getEVs+2,readNVM@index
 39561   0083CA  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 39562   0083CE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39563   0083D0  0E01               	movlw	1
 39564   0083D2  ECD9  F058         	call	_readNVM
 39565   0083D6  0100               	movlb	0	; () banked
 39566   0083D8  5191               	movf	?_readNVM& (0+255),w,b
 39567   0083DA  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 39568                           
 39569                           ; BSR set to: 0
 39570                           ;../../VLCBlib_PIC/event_teach.c: 1095:         if (tableIndex == 0xff) {
 39571   0083DC  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 39572   0083DE  B4D8               	btfsc	status,2,c
 39573   0083E0  D78B               	goto	u18100
 39574                           
 39575                           ; BSR set to: 0
 39576                           ;../../VLCBlib_PIC/event_teach.c: 1098:     }
 39577   0083E2  0E13               	movlw	19
 39578   0083E4  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 39579   0083E6  D78D               	goto	l18352
 39580   0083E8  D7E0               	goto	l18380
 39581   0083EA                     __end_of_getEVs:
 39582                           	callstack 0
 39583                           
 39584 ;; *************** function _validStart *****************
 39585 ;; Defined at:
 39586 ;;		line 1172 in file "../../VLCBlib_PIC/event_teach.c"
 39587 ;; Parameters:    Size  Location     Type
 39588 ;;  tableIndex      1    wreg     unsigned char 
 39589 ;; Auto vars:     Size  Location     Type
 39590 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 39591 ;;  f               1   60[BANK0 ] struct .
 39592 ;; Return value:  Size  Location     Type
 39593 ;;                  1    wreg      enum E12700
 39594 ;; Registers used:
 39595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39596 ;; Tracked objects:
 39597 ;;		On entry : 0/0
 39598 ;;		On exit  : 0/0
 39599 ;;		Unchanged: 0/0
 39600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39602 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39603 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39604 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39605 ;;Total ram usage:        6 bytes
 39606 ;; Hardware stack levels used: 1
 39607 ;; Hardware stack levels required when called: 14
 39608 ;; This function calls:
 39609 ;;		_readNVM
 39610 ;; This function is called by:
 39611 ;;		_deleteActionRange
 39612 ;;		_deleteHappeningRange
 39613 ;;		_nerdCallback
 39614 ;;		_doNenrd
 39615 ;;		_doRqevn
 39616 ;;		_doReval
 39617 ;;		_removeTableEntry
 39618 ;;		_checkRemoveTableEntry
 39619 ;;		_getEv
 39620 ;;		_numEv
 39621 ;;		_getEVs
 39622 ;;		_rebuildHashtable
 39623 ;; This function uses a non-reentrant model
 39624 ;;
 39625                           
 39626                           	psect	text166
 39627   00B6D4                     __ptext166:
 39628                           	callstack 0
 39629   00B6D4                     _validStart:
 39630                           	callstack 13
 39631                           
 39632                           ;incstack = 0
 39633                           ;validStart@tableIndex stored from wreg
 39634   00B6D4  0100               	movlb	0	; () banked
 39635   00B6D6  6F9B               	movwf	validStart@tableIndex& (0+255),b
 39636                           
 39637                           ;../../VLCBlib_PIC/event_teach.c: 1173:     EventTableFlags f;;../../VLCBlib_PIC/event_t
      +                          each.c: 1177:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39638   00B6D8  0100               	movlb	0	; () banked
 39639   00B6DA  519B               	movf	validStart@tableIndex& (0+255),w,b
 39640   00B6DC  6F97               	movwf	??_validStart& (0+255),b
 39641   00B6DE  6B98               	clrf	(??_validStart+1)& (0+255),b
 39642   00B6E0  3B97               	swapf	??_validStart& (0+255),f,b
 39643   00B6E2  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 39644   00B6E4  0EF0               	movlw	240
 39645   00B6E6  1798               	andwf	(??_validStart+1)& (0+255),f,b
 39646   00B6E8  5197               	movf	??_validStart& (0+255),w,b
 39647   00B6EA  0B0F               	andlw	15
 39648   00B6EC  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 39649   00B6EE  0EF0               	movlw	240
 39650   00B6F0  1797               	andwf	??_validStart& (0+255),f,b
 39651   00B6F2  0E80               	movlw	128
 39652   00B6F4  2597               	addwf	??_validStart& (0+255),w,b
 39653   00B6F6  6F99               	movwf	(??_validStart+2)& (0+255),b
 39654   00B6F8  0EEF               	movlw	239
 39655   00B6FA  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 39656   00B6FC  6F9A               	movwf	(??_validStart+3)& (0+255),b
 39657   00B6FE  C099  F091         	movff	??_validStart+2,readNVM@index
 39658   00B702  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 39659   00B706  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39660   00B708  0E01               	movlw	1
 39661   00B70A  ECD9  F058         	call	_readNVM
 39662   00B70E  0100               	movlb	0	; () banked
 39663   00B710  5191               	movf	?_readNVM& (0+255),w,b
 39664   00B712  6F9C               	movwf	validStart@f& (0+255),b
 39665                           
 39666                           ; BSR set to: 0
 39667                           ;../../VLCBlib_PIC/event_teach.c: 1178:     if (( !f.freeEntry) && ( ! f.continuation)) 
      +                          {
 39668   00B714  AF9C               	btfss	validStart@f& (0+255),7,b
 39669                           
 39670                           ; BSR set to: 0
 39671   00B716  BB9C               	btfsc	validStart@f& (0+255),5,b
 39672   00B718  D002               	goto	l18078
 39673                           
 39674                           ; BSR set to: 0
 39675                           ;../../VLCBlib_PIC/event_teach.c: 1179:         return TRUE;
 39676   00B71A  0E01               	movlw	1
 39677   00B71C  0012               	return	
 39678   00B71E                     l18078:
 39679                           
 39680                           ; BSR set to: 0
 39681                           ;../../VLCBlib_PIC/event_teach.c: 1181:         return FALSE;
 39682   00B71E  0E00               	movlw	0
 39683                           
 39684                           ; BSR set to: 0
 39685   00B720  0012               	return		;funcret
 39686   00B722                     __end_of_validStart:
 39687                           	callstack 0
 39688                           
 39689 ;; *************** function _findEvent *****************
 39690 ;; Defined at:
 39691 ;;		line 888 in file "../../VLCBlib_PIC/event_teach.c"
 39692 ;; Parameters:    Size  Location     Type
 39693 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 39694 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 39695 ;; Auto vars:     Size  Location     Type
 39696 ;;  en              2    8[BANK1 ] unsigned short 
 39697 ;;  nn              2    6[BANK1 ] unsigned short 
 39698 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 39699 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 39700 ;;  hash            1   10[BANK1 ] unsigned char 
 39701 ;; Return value:  Size  Location     Type
 39702 ;;                  1    wreg      unsigned char 
 39703 ;; Registers used:
 39704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39705 ;; Tracked objects:
 39706 ;;		On entry : 0/0
 39707 ;;		On exit  : 0/0
 39708 ;;		Unchanged: 0/0
 39709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39710 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39711 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39712 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39713 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39714 ;;Total ram usage:       13 bytes
 39715 ;; Hardware stack levels used: 1
 39716 ;; Hardware stack levels required when called: 15
 39717 ;; This function calls:
 39718 ;;		_getEN
 39719 ;;		_getHash
 39720 ;;		_getNN
 39721 ;; This function is called by:
 39722 ;;		_consumer2QProcessMessage
 39723 ;;		_ackEventProcessMessage
 39724 ;;		_producerProcessMessage
 39725 ;;		_doReqev
 39726 ;;		_removeEvent
 39727 ;;		_addEvent
 39728 ;; This function uses a non-reentrant model
 39729 ;;
 39730                           
 39731                           	psect	text167
 39732   00A2DA                     __ptext167:
 39733                           	callstack 0
 39734   00A2DA                     _findEvent:
 39735                           	callstack 12
 39736                           
 39737                           ;../../VLCBlib_PIC/event_teach.c: 890:     uint8_t hash = getHash(nodeNumber, eventNumbe
      +                          r);
 39738                           
 39739                           ; BSR set to: 0
 39740                           ;incstack = 0
 39741   00A2DA  C1BE  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 39742   00A2DE  C1BF  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 39743   00A2E2  C1C0  F0A5         	movff	findEvent@eventNumber,getHash@en
 39744   00A2E6  C1C1  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 39745   00A2EA  EC00  F061         	call	_getHash	;wreg free
 39746   00A2EE  0101               	movlb	1	; () banked
 39747   00A2F0  6FC8               	movwf	findEvent@hash& (0+255),b
 39748                           
 39749                           ; BSR set to: 1
 39750                           ;../../VLCBlib_PIC/event_teach.c: 891:     uint8_t chainIdx;;../../VLCBlib_PIC/event_tea
      +                          ch.c: 892:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 39751   00A2F2  0E00               	movlw	0
 39752   00A2F4  6FC9               	movwf	findEvent@chainIdx& (0+255),b
 39753   00A2F6                     l18740:
 39754                           
 39755                           ; BSR set to: 1
 39756                           ;../../VLCBlib_PIC/event_teach.c: 893:         uint8_t tableIndex = eventChains[hash][ch
      +                          ainIdx];
 39757   00A2F6  51C8               	movf	findEvent@hash& (0+255),w,b
 39758   00A2F8  0D14               	mullw	20
 39759   00A2FA  0EC8               	movlw	low _eventChains
 39760   00A2FC  24F3               	addwf	243,w,c
 39761   00A2FE  6FC2               	movwf	??_findEvent& (0+255),b
 39762   00A300  0E04               	movlw	high _eventChains
 39763   00A302  20F4               	addwfc	prodh,w,c
 39764   00A304  6FC3               	movwf	(??_findEvent+1)& (0+255),b
 39765   00A306  51C9               	movf	findEvent@chainIdx& (0+255),w,b
 39766   00A308  25C2               	addwf	??_findEvent& (0+255),w,b
 39767   00A30A  6ED9               	movwf	fsr2l,c
 39768   00A30C  0E00               	movlw	0
 39769   00A30E  21C3               	addwfc	(??_findEvent+1)& (0+255),w,b
 39770   00A310  6EDA               	movwf	fsr2h,c
 39771   00A312  50DF               	movf	indf2,w,c
 39772   00A314  6FCA               	movwf	findEvent@tableIndex& (0+255),b
 39773                           
 39774                           ; BSR set to: 1
 39775                           ;../../VLCBlib_PIC/event_teach.c: 894:         uint16_t nn, en;;../../VLCBlib_PIC/event_
      +                          teach.c: 895:         if (tableIndex == 0xff) return 0xff;
 39776   00A316  29CA               	incf	findEvent@tableIndex& (0+255),w,b
 39777   00A318  A4D8               	btfss	status,2,c
 39778   00A31A  D002               	goto	l18748
 39779   00A31C                     u18650:
 39780                           
 39781                           ; BSR set to: 1
 39782   00A31C  0EFF               	movlw	255
 39783   00A31E  0012               	return	
 39784   00A320                     l18748:
 39785                           
 39786                           ; BSR set to: 1
 39787                           ;../../VLCBlib_PIC/event_teach.c: 896:         nn = getNN(tableIndex);
 39788   00A320  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 39789   00A322  EC6B  F049         	call	_getNN
 39790   00A326  C097  F1C4         	movff	?_getNN,findEvent@nn
 39791   00A32A  C098  F1C5         	movff	?_getNN+1,findEvent@nn+1
 39792                           
 39793                           ;../../VLCBlib_PIC/event_teach.c: 897:         en = getEN(tableIndex);
 39794   00A32E  0101               	movlb	1	; () banked
 39795   00A330  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 39796   00A332  EC4D  F055         	call	_getEN
 39797   00A336  C097  F1C6         	movff	?_getEN,findEvent@en
 39798   00A33A  C098  F1C7         	movff	?_getEN+1,findEvent@en+1
 39799                           
 39800                           ;../../VLCBlib_PIC/event_teach.c: 898:         if ((nn == nodeNumber) && (en == eventNum
      +                          ber)) {
 39801   00A33E  0101               	movlb	1	; () banked
 39802   00A340  51BE               	movf	findEvent@nodeNumber& (0+255),w,b
 39803   00A342  19C4               	xorwf	findEvent@nn& (0+255),w,b
 39804   00A344  E10D               	bnz	l18758
 39805   00A346  51BF               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 39806   00A348  19C5               	xorwf	(findEvent@nn+1)& (0+255),w,b
 39807   00A34A  A4D8               	btfss	status,2,c
 39808   00A34C  D009               	goto	l18758
 39809                           
 39810                           ; BSR set to: 1
 39811   00A34E  51C0               	movf	findEvent@eventNumber& (0+255),w,b
 39812   00A350  19C6               	xorwf	findEvent@en& (0+255),w,b
 39813   00A352  E106               	bnz	l18758
 39814   00A354  51C1               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 39815   00A356  19C7               	xorwf	(findEvent@en+1)& (0+255),w,b
 39816   00A358  A4D8               	btfss	status,2,c
 39817   00A35A  D002               	goto	l18758
 39818                           
 39819                           ; BSR set to: 1
 39820                           ;../../VLCBlib_PIC/event_teach.c: 899:             return tableIndex;
 39821   00A35C  51CA               	movf	findEvent@tableIndex& (0+255),w,b
 39822   00A35E  0012               	return	
 39823   00A360                     l18758:
 39824                           
 39825                           ; BSR set to: 1
 39826                           ;../../VLCBlib_PIC/event_teach.c: 901:     }
 39827   00A360  2BC9               	incf	findEvent@chainIdx& (0+255),f,b
 39828                           
 39829                           ; BSR set to: 1
 39830   00A362  0E13               	movlw	19
 39831   00A364  65C9               	cpfsgt	findEvent@chainIdx& (0+255),b
 39832   00A366  D7C7               	goto	l18740
 39833   00A368  D7D9               	goto	u18650
 39834   00A36A                     __end_of_findEvent:
 39835                           	callstack 0
 39836                           
 39837 ;; *************** function _getNN *****************
 39838 ;; Defined at:
 39839 ;;		line 1109 in file "../../VLCBlib_PIC/event_teach.c"
 39840 ;; Parameters:    Size  Location     Type
 39841 ;;  tableIndex      1    wreg     unsigned char 
 39842 ;; Auto vars:     Size  Location     Type
 39843 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 39844 ;;  lo              2   63[BANK0 ] unsigned short 
 39845 ;;  hi              2   61[BANK0 ] unsigned short 
 39846 ;;  f               1   65[BANK0 ] struct .
 39847 ;; Return value:  Size  Location     Type
 39848 ;;                  2   55[BANK0 ] unsigned short 
 39849 ;; Registers used:
 39850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39851 ;; Tracked objects:
 39852 ;;		On entry : 0/0
 39853 ;;		On exit  : 0/0
 39854 ;;		Unchanged: 0/0
 39855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39856 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39857 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39858 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39859 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39860 ;;Total ram usage:       12 bytes
 39861 ;; Hardware stack levels used: 1
 39862 ;; Hardware stack levels required when called: 14
 39863 ;; This function calls:
 39864 ;;		_readNVM
 39865 ;; This function is called by:
 39866 ;;		_sendProducedEvent
 39867 ;;		_nerdCallback
 39868 ;;		_doNenrd
 39869 ;;		_reqevCallback
 39870 ;;		_findEvent
 39871 ;;		_rebuildHashtable
 39872 ;; This function uses a non-reentrant model
 39873 ;;
 39874                           
 39875                           	psect	text168
 39876   0092D6                     __ptext168:
 39877                           	callstack 0
 39878   0092D6                     _getNN:
 39879                           	callstack 13
 39880                           
 39881                           ; BSR set to: 1
 39882                           ;incstack = 0
 39883                           ;getNN@tableIndex stored from wreg
 39884   0092D6  0100               	movlb	0	; () banked
 39885   0092D8  6FA2               	movwf	getNN@tableIndex& (0+255),b
 39886                           
 39887                           ;../../VLCBlib_PIC/event_teach.c: 1110:     uint16_t hi;;../../VLCBlib_PIC/event_teach.c
      +                          : 1111:     uint16_t lo;;../../VLCBlib_PIC/event_teach.c: 1112:     EventTableFlags f;;.
      +                          ./../VLCBlib_PIC/event_teach.c: 1114:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0);
 39888   0092DA  0100               	movlb	0	; () banked
 39889   0092DC  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39890   0092DE  6F99               	movwf	??_getNN& (0+255),b
 39891   0092E0  6B9A               	clrf	(??_getNN+1)& (0+255),b
 39892   0092E2  3B99               	swapf	??_getNN& (0+255),f,b
 39893   0092E4  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 39894   0092E6  0EF0               	movlw	240
 39895   0092E8  179A               	andwf	(??_getNN+1)& (0+255),f,b
 39896   0092EA  5199               	movf	??_getNN& (0+255),w,b
 39897   0092EC  0B0F               	andlw	15
 39898   0092EE  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 39899   0092F0  0EF0               	movlw	240
 39900   0092F2  1799               	andwf	??_getNN& (0+255),f,b
 39901   0092F4  0E80               	movlw	128
 39902   0092F6  2599               	addwf	??_getNN& (0+255),w,b
 39903   0092F8  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39904   0092FA  0EEF               	movlw	239
 39905   0092FC  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39906   0092FE  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39907   009300  C09B  F091         	movff	??_getNN+2,readNVM@index
 39908   009304  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39909   009308  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39910   00930A  0E01               	movlw	1
 39911   00930C  ECD9  F058         	call	_readNVM
 39912   009310  0100               	movlb	0	; () banked
 39913   009312  5191               	movf	?_readNVM& (0+255),w,b
 39914   009314  6FA1               	movwf	getNN@f& (0+255),b
 39915                           
 39916                           ; BSR set to: 0
 39917                           ;../../VLCBlib_PIC/event_teach.c: 1115:     if (f.forceOwnNN) {
 39918   009316  ADA1               	btfss	getNN@f& (0+255),6,b
 39919   009318  D005               	goto	l18158
 39920                           
 39921                           ; BSR set to: 0
 39922                           ;../../VLCBlib_PIC/event_teach.c: 1116:         return nn.word;
 39923   00931A  C0B4  F097         	movff	_nn,?_getNN
 39924   00931E  C0B5  F098         	movff	_nn+1,?_getNN+1
 39925   009322  0012               	return	
 39926   009324                     l18158:
 39927                           
 39928                           ; BSR set to: 0
 39929                           ;../../VLCBlib_PIC/event_teach.c: 1118:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+2);
 39930   009324  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39931   009326  0D10               	mullw	16
 39932   009328  CFF3 F099          	movff	prodl,??_getNN
 39933   00932C  CFF4 F09A          	movff	prodh,??_getNN+1
 39934   009330  0E82               	movlw	130
 39935   009332  2599               	addwf	??_getNN& (0+255),w,b
 39936   009334  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39937   009336  0EEF               	movlw	239
 39938   009338  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39939   00933A  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39940   00933C  C09B  F091         	movff	??_getNN+2,readNVM@index
 39941   009340  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39942   009344  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39943   009346  0E01               	movlw	1
 39944   009348  ECD9  F058         	call	_readNVM
 39945   00934C  0100               	movlb	0	; () banked
 39946   00934E  5191               	movf	?_readNVM& (0+255),w,b
 39947   009350  6F9F               	movwf	getNN@lo& (0+255),b
 39948   009352  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 39949                           
 39950                           ;../../VLCBlib_PIC/event_teach.c: 1119:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+2 +1);
 39951   009354  51A2               	movf	getNN@tableIndex& (0+255),w,b
 39952   009356  0D10               	mullw	16
 39953   009358  CFF3 F099          	movff	prodl,??_getNN
 39954   00935C  CFF4 F09A          	movff	prodh,??_getNN+1
 39955   009360  0E83               	movlw	131
 39956   009362  2599               	addwf	??_getNN& (0+255),w,b
 39957   009364  6F9B               	movwf	(??_getNN+2)& (0+255),b
 39958   009366  0EEF               	movlw	239
 39959   009368  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 39960   00936A  6F9C               	movwf	(??_getNN+3)& (0+255),b
 39961   00936C  C09B  F091         	movff	??_getNN+2,readNVM@index
 39962   009370  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 39963   009374  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39964   009376  0E01               	movlw	1
 39965   009378  ECD9  F058         	call	_readNVM
 39966   00937C  0100               	movlb	0	; () banked
 39967   00937E  5191               	movf	?_readNVM& (0+255),w,b
 39968   009380  6F9D               	movwf	getNN@hi& (0+255),b
 39969   009382  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 39970                           
 39971                           ; BSR set to: 0
 39972                           ;../../VLCBlib_PIC/event_teach.c: 1120:     return lo | (hi << 8);
 39973   009384  519D               	movf	getNN@hi& (0+255),w,b
 39974   009386  6F9A               	movwf	(??_getNN+1)& (0+255),b
 39975   009388  6B99               	clrf	??_getNN& (0+255),b
 39976   00938A  519F               	movf	getNN@lo& (0+255),w,b
 39977   00938C  1199               	iorwf	??_getNN& (0+255),w,b
 39978   00938E  6F97               	movwf	?_getNN& (0+255),b
 39979   009390  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 39980   009392  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 39981   009394  6F98               	movwf	(?_getNN+1)& (0+255),b
 39982                           
 39983                           ; BSR set to: 0
 39984   009396  0012               	return		;funcret
 39985   009398                     __end_of_getNN:
 39986                           	callstack 0
 39987                           
 39988 ;; *************** function _getHash *****************
 39989 ;; Defined at:
 39990 ;;		line 1203 in file "../../VLCBlib_PIC/event_teach.c"
 39991 ;; Parameters:    Size  Location     Type
 39992 ;;  nn              2   67[BANK0 ] unsigned short 
 39993 ;;  en              2   69[BANK0 ] unsigned short 
 39994 ;; Auto vars:     Size  Location     Type
 39995 ;;  hash            1   72[BANK0 ] unsigned char 
 39996 ;; Return value:  Size  Location     Type
 39997 ;;                  1    wreg      unsigned char 
 39998 ;; Registers used:
 39999 ;;		wreg, status,2, status,0, prodl, prodh
 40000 ;; Tracked objects:
 40001 ;;		On entry : 0/0
 40002 ;;		On exit  : 0/0
 40003 ;;		Unchanged: 0/0
 40004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40005 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40007 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40008 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40009 ;;Total ram usage:        6 bytes
 40010 ;; Hardware stack levels used: 1
 40011 ;; Hardware stack levels required when called: 12
 40012 ;; This function calls:
 40013 ;;		Nothing
 40014 ;; This function is called by:
 40015 ;;		_findEvent
 40016 ;;		_rebuildHashtable
 40017 ;; This function uses a non-reentrant model
 40018 ;;
 40019                           
 40020                           	psect	text169
 40021   00C200                     __ptext169:
 40022                           	callstack 0
 40023   00C200                     _getHash:
 40024                           	callstack 15
 40025                           
 40026                           ;../../VLCBlib_PIC/event_teach.c: 1204:     uint8_t hash;;../../VLCBlib_PIC/event_teach.
      +                          c: 1206:     hash = (uint8_t)(nn ^ (nn >> 8U));
 40027                           
 40028                           ; BSR set to: 0
 40029                           ;incstack = 0
 40030   00C200  0100               	movlb	0	; () banked
 40031   00C202  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 40032   00C204  19A3               	xorwf	getHash@nn& (0+255),w,b
 40033   00C206  6FA8               	movwf	getHash@hash& (0+255),b
 40034                           
 40035                           ; BSR set to: 0
 40036                           ;../../VLCBlib_PIC/event_teach.c: 1207:     hash = (uint8_t)(7U*hash + (en ^ (en>>8U)));
 40037   00C208  51A6               	movf	(getHash@en+1)& (0+255),w,b
 40038   00C20A  19A5               	xorwf	getHash@en& (0+255),w,b
 40039   00C20C  6FA7               	movwf	??_getHash& (0+255),b
 40040   00C20E  51A8               	movf	getHash@hash& (0+255),w,b
 40041   00C210  0D07               	mullw	7
 40042   00C212  50F3               	movf	243,w,c
 40043   00C214  25A7               	addwf	??_getHash& (0+255),w,b
 40044   00C216  6FA8               	movwf	getHash@hash& (0+255),b
 40045                           
 40046                           ; BSR set to: 0
 40047                           ;../../VLCBlib_PIC/event_teach.c: 1209:     hash %= 32;
 40048   00C218  0E1F               	movlw	31
 40049   00C21A  17A8               	andwf	getHash@hash& (0+255),f,b
 40050                           
 40051                           ; BSR set to: 0
 40052                           ;../../VLCBlib_PIC/event_teach.c: 1210:     return hash;
 40053   00C21C  51A8               	movf	getHash@hash& (0+255),w,b
 40054                           
 40055                           ; BSR set to: 0
 40056   00C21E  0012               	return		;funcret
 40057   00C220                     __end_of_getHash:
 40058                           	callstack 0
 40059                           
 40060 ;; *************** function _getEN *****************
 40061 ;; Defined at:
 40062 ;;		line 1130 in file "../../VLCBlib_PIC/event_teach.c"
 40063 ;; Parameters:    Size  Location     Type
 40064 ;;  tableIndex      1    wreg     unsigned char 
 40065 ;; Auto vars:     Size  Location     Type
 40066 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 40067 ;;  lo              2   63[BANK0 ] unsigned short 
 40068 ;;  hi              2   61[BANK0 ] unsigned short 
 40069 ;; Return value:  Size  Location     Type
 40070 ;;                  2   55[BANK0 ] unsigned short 
 40071 ;; Registers used:
 40072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40073 ;; Tracked objects:
 40074 ;;		On entry : 0/0
 40075 ;;		On exit  : 0/0
 40076 ;;		Unchanged: 0/0
 40077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40078 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40079 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40080 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40081 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40082 ;;Total ram usage:       11 bytes
 40083 ;; Hardware stack levels used: 1
 40084 ;; Hardware stack levels required when called: 14
 40085 ;; This function calls:
 40086 ;;		_readNVM
 40087 ;; This function is called by:
 40088 ;;		_sendProducedEvent
 40089 ;;		_nerdCallback
 40090 ;;		_doNenrd
 40091 ;;		_reqevCallback
 40092 ;;		_findEvent
 40093 ;;		_rebuildHashtable
 40094 ;; This function uses a non-reentrant model
 40095 ;;
 40096                           
 40097                           	psect	text170
 40098   00AA9A                     __ptext170:
 40099                           	callstack 0
 40100   00AA9A                     _getEN:
 40101                           	callstack 13
 40102                           
 40103                           ; BSR set to: 0
 40104                           ;incstack = 0
 40105                           ;getEN@tableIndex stored from wreg
 40106   00AA9A  0100               	movlb	0	; () banked
 40107   00AA9C  6FA1               	movwf	getEN@tableIndex& (0+255),b
 40108                           
 40109                           ;../../VLCBlib_PIC/event_teach.c: 1131:     uint16_t hi;;../../VLCBlib_PIC/event_teach.c
      +                          : 1132:     uint16_t lo;;../../VLCBlib_PIC/event_teach.c: 1134:     lo = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 40110   00AA9E  0100               	movlb	0	; () banked
 40111   00AAA0  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40112   00AAA2  0D10               	mullw	16
 40113   00AAA4  CFF3 F099          	movff	prodl,??_getEN
 40114   00AAA8  CFF4 F09A          	movff	prodh,??_getEN+1
 40115   00AAAC  0E84               	movlw	132
 40116   00AAAE  2599               	addwf	??_getEN& (0+255),w,b
 40117   00AAB0  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40118   00AAB2  0EEF               	movlw	239
 40119   00AAB4  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40120   00AAB6  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40121   00AAB8  C09B  F091         	movff	??_getEN+2,readNVM@index
 40122   00AABC  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40123   00AAC0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40124   00AAC2  0E01               	movlw	1
 40125   00AAC4  ECD9  F058         	call	_readNVM
 40126   00AAC8  0100               	movlb	0	; () banked
 40127   00AACA  5191               	movf	?_readNVM& (0+255),w,b
 40128   00AACC  6F9F               	movwf	getEN@lo& (0+255),b
 40129   00AACE  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 40130                           
 40131                           ;../../VLCBlib_PIC/event_teach.c: 1135:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+4 +1);
 40132   00AAD0  51A1               	movf	getEN@tableIndex& (0+255),w,b
 40133   00AAD2  0D10               	mullw	16
 40134   00AAD4  CFF3 F099          	movff	prodl,??_getEN
 40135   00AAD8  CFF4 F09A          	movff	prodh,??_getEN+1
 40136   00AADC  0E85               	movlw	133
 40137   00AADE  2599               	addwf	??_getEN& (0+255),w,b
 40138   00AAE0  6F9B               	movwf	(??_getEN+2)& (0+255),b
 40139   00AAE2  0EEF               	movlw	239
 40140   00AAE4  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 40141   00AAE6  6F9C               	movwf	(??_getEN+3)& (0+255),b
 40142   00AAE8  C09B  F091         	movff	??_getEN+2,readNVM@index
 40143   00AAEC  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 40144   00AAF0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40145   00AAF2  0E01               	movlw	1
 40146   00AAF4  ECD9  F058         	call	_readNVM
 40147   00AAF8  0100               	movlb	0	; () banked
 40148   00AAFA  5191               	movf	?_readNVM& (0+255),w,b
 40149   00AAFC  6F9D               	movwf	getEN@hi& (0+255),b
 40150   00AAFE  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 40151                           
 40152                           ; BSR set to: 0
 40153                           ;../../VLCBlib_PIC/event_teach.c: 1136:     return lo | (hi << 8);
 40154   00AB00  519D               	movf	getEN@hi& (0+255),w,b
 40155   00AB02  6F9A               	movwf	(??_getEN+1)& (0+255),b
 40156   00AB04  6B99               	clrf	??_getEN& (0+255),b
 40157   00AB06  519F               	movf	getEN@lo& (0+255),w,b
 40158   00AB08  1199               	iorwf	??_getEN& (0+255),w,b
 40159   00AB0A  6F97               	movwf	?_getEN& (0+255),b
 40160   00AB0C  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 40161   00AB0E  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 40162   00AB10  6F98               	movwf	(?_getEN+1)& (0+255),b
 40163                           
 40164                           ; BSR set to: 0
 40165   00AB12  0012               	return		;funcret
 40166   00AB14                     __end_of_getEN:
 40167                           	callstack 0
 40168                           
 40169 ;; *************** function _configIO *****************
 40170 ;; Defined at:
 40171 ;;		line 447 in file "../main.c"
 40172 ;; Parameters:    Size  Location     Type
 40173 ;;  i               1    wreg     unsigned char 
 40174 ;; Auto vars:     Size  Location     Type
 40175 ;;  i               1    8[BANK1 ] unsigned char 
 40176 ;;  type            1    7[BANK1 ] unsigned char 
 40177 ;;  action          1    6[BANK1 ] unsigned char 
 40178 ;; Return value:  Size  Location     Type
 40179 ;;                  1    wreg      void 
 40180 ;; Registers used:
 40181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40182 ;; Tracked objects:
 40183 ;;		On entry : 0/0
 40184 ;;		On exit  : 0/0
 40185 ;;		Unchanged: 0/0
 40186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40188 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40189 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40190 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40191 ;;Total ram usage:        8 bytes
 40192 ;; Hardware stack levels used: 1
 40193 ;; Hardware stack levels required when called: 18
 40194 ;; This function calls:
 40195 ;;		_getNV
 40196 ;;		_readNVM
 40197 ;;		_setDigitalOutput
 40198 ;;		_writeNVM
 40199 ;; This function is called by:
 40200 ;;		_setup
 40201 ;;		_setType
 40202 ;; This function uses a non-reentrant model
 40203 ;;
 40204                           
 40205                           	psect	text171
 40206   0050E0                     __ptext171:
 40207                           	callstack 0
 40208   0050E0                     _configIO:
 40209                           	callstack 11
 40210                           
 40211                           ; BSR set to: 0
 40212                           ;incstack = 0
 40213                           ;configIO@i stored from wreg
 40214   0050E0  0101               	movlb	1	; () banked
 40215   0050E2  6FC6               	movwf	configIO@i& (0+255),b
 40216                           
 40217                           ;../main.c: 448:     uint8_t action;;../main.c: 449:     uint8_t type;;../main.c: 451:  
      +                             if (i >= 16) return;
 40218   0050E4  0E0F               	movlw	15
 40219   0050E6  0101               	movlb	1	; () banked
 40220   0050E8  65C6               	cpfsgt	configIO@i& (0+255),b
 40221   0050EA  D001               	goto	l18974
 40222   0050EC  0012               	return	
 40223   0050EE                     l18974:
 40224                           
 40225                           ; BSR set to: 1
 40226                           ;../main.c: 454:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 40227   0050EE  51C6               	movf	configIO@i& (0+255),w,b
 40228   0050F0  0D07               	mullw	7
 40229   0050F2  50F3               	movf	243,w,c
 40230   0050F4  0F10               	addlw	16
 40231   0050F6  EC7F  F05D         	call	_getNV
 40232   0050FA  0100               	movlb	0	; () banked
 40233   0050FC  518D               	movf	?_getNV& (0+255),w,b
 40234   0050FE  0101               	movlb	1	; () banked
 40235   005100  6FC5               	movwf	configIO@type& (0+255),b
 40236                           
 40237                           ;../main.c: 455:     switch (type) {
 40238   005102  D060               	goto	l18998
 40239   005104                     l18976:
 40240                           
 40241                           ; BSR set to: 1
 40242                           ;../main.c: 457:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 40243   005104  51C6               	movf	configIO@i& (0+255),w,b
 40244   005106  0D07               	mullw	7
 40245   005108  50F3               	movf	243,w,c
 40246   00510A  0F11               	addlw	17
 40247   00510C  EC7F  F05D         	call	_getNV
 40248   005110  0100               	movlb	0	; () banked
 40249   005112  A58D               	btfss	?_getNV& (0+255),2,b
 40250   005114  D018               	goto	l18980
 40251                           
 40252                           ; BSR set to: 0
 40253                           ;../main.c: 458:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 40254   005116  0EDE               	movlw	222
 40255   005118  0101               	movlb	1	; () banked
 40256   00511A  25C6               	addwf	configIO@i& (0+255),w,b
 40257   00511C  6FBF               	movwf	??_configIO& (0+255),b
 40258   00511E  6BC0               	clrf	(??_configIO+1)& (0+255),b
 40259   005120  0E03               	movlw	3
 40260   005122  23C0               	addwfc	(??_configIO+1)& (0+255),f,b
 40261   005124  C1BF  F091         	movff	??_configIO,readNVM@index
 40262   005128  C1C0  F092         	movff	??_configIO+1,readNVM@index+1
 40263   00512C  0100               	movlb	0	; () banked
 40264   00512E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40265   005130  0E00               	movlw	0
 40266   005132  ECD9  F058         	call	_readNVM
 40267   005136  0100               	movlb	0	; () banked
 40268   005138  5191               	movf	?_readNVM& (0+255),w,b
 40269   00513A  6F97               	movwf	setDigitalOutput@state& (0+255),b
 40270   00513C  0101               	movlb	1	; () banked
 40271   00513E  51C6               	movf	configIO@i& (0+255),w,b
 40272   005140  ECFC  F051         	call	_setDigitalOutput
 40273                           
 40274                           ;../main.c: 459:             } else {
 40275   005144  D122               	goto	l19032
 40276   005146                     l18980:
 40277                           
 40278                           ; BSR set to: 0
 40279                           ;../main.c: 460:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 40280   005146  0101               	movlb	1	; () banked
 40281   005148  51C6               	movf	configIO@i& (0+255),w,b
 40282   00514A  0D07               	mullw	7
 40283   00514C  50F3               	movf	243,w,c
 40284   00514E  0F11               	addlw	17
 40285   005150  EC7F  F05D         	call	_getNV
 40286   005154  0100               	movlb	0	; () banked
 40287   005156  BB8D               	btfsc	?_getNV& (0+255),5,b
 40288   005158  D005               	goto	l18984
 40289                           
 40290                           ; BSR set to: 0
 40291   00515A  0E00               	movlw	0
 40292   00515C  0101               	movlb	1	; () banked
 40293   00515E  6FC3               	movwf	(_configIO$741+1)& (0+255),b
 40294   005160  0E02               	movlw	2
 40295   005162  D004               	goto	L25
 40296   005164                     l18984:
 40297                           
 40298                           ; BSR set to: 0
 40299   005164  0E00               	movlw	0
 40300   005166  0101               	movlb	1	; () banked
 40301   005168  6FC3               	movwf	(_configIO$741+1)& (0+255),b
 40302   00516A  0E01               	movlw	1
 40303   00516C                     L25:
 40304   00516C  6FC2               	movwf	_configIO$741& (0+255),b
 40305                           
 40306                           ; BSR set to: 1
 40307   00516E  C1C2  F1C4         	movff	_configIO$741,configIO@action
 40308                           
 40309                           ; BSR set to: 1
 40310                           ;../main.c: 461:                 setDigitalOutput(i, action);
 40311   005172  C1C4  F097         	movff	configIO@action,setDigitalOutput@state
 40312   005176  51C6               	movf	configIO@i& (0+255),w,b
 40313   005178  ECFC  F051         	call	_setDigitalOutput
 40314                           
 40315                           ;../main.c: 463:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 40316   00517C  0EDE               	movlw	222
 40317   00517E  0101               	movlb	1	; () banked
 40318   005180  25C6               	addwf	configIO@i& (0+255),w,b
 40319   005182  6FBF               	movwf	??_configIO& (0+255),b
 40320   005184  6BC0               	clrf	(??_configIO+1)& (0+255),b
 40321   005186  0E03               	movlw	3
 40322   005188  23C0               	addwfc	(??_configIO+1)& (0+255),f,b
 40323   00518A  C1BF  F0A4         	movff	??_configIO,writeNVM@index
 40324   00518E  C1C0  F0A5         	movff	??_configIO+1,writeNVM@index+1
 40325   005192  0100               	movlb	0	; () banked
 40326   005194  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 40327   005196  C1C4  F0A7         	movff	configIO@action,writeNVM@value
 40328   00519A  0E00               	movlw	0
 40329   00519C  EC91  F05B         	call	_writeNVM
 40330   0051A0  D0F4               	goto	l19032
 40331   0051A2                     l18992:
 40332                           
 40333                           ; BSR set to: 1
 40334                           ;../main.c: 472:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40335   0051A2  51C6               	movf	configIO@i& (0+255),w,b
 40336   0051A4  0D07               	mullw	7
 40337   0051A6  50F3               	movf	243,w,c
 40338   0051A8  0F11               	addlw	17
 40339   0051AA  EC7F  F05D         	call	_getNV
 40340   0051AE  0100               	movlb	0	; () banked
 40341   0051B0  518D               	movf	?_getNV& (0+255),w,b
 40342   0051B2  0B10               	andlw	16
 40343   0051B4  0101               	movlb	1	; () banked
 40344   0051B6  6FC1               	movwf	_configIO$7955& (0+255),b
 40345                           
 40346                           ; BSR set to: 1
 40347                           ;../main.c: 472:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 40348   0051B8  C1C1  F097         	movff	_configIO$7955,setDigitalOutput@state
 40349   0051BC  51C6               	movf	configIO@i& (0+255),w,b
 40350   0051BE  ECFC  F051         	call	_setDigitalOutput
 40351                           
 40352                           ;../main.c: 473:             break;
 40353   0051C2  D0E3               	goto	l19032
 40354   0051C4                     l18998:
 40355                           
 40356                           ; BSR set to: 1
 40357   0051C4  51C5               	movf	configIO@type& (0+255),w,b
 40358                           
 40359                           ; Switch size 1, requested type "simple"
 40360                           ; Number of cases is 3, Range of values is 1 to 3
 40361                           ; switch strategies available:
 40362                           ; Name         Instructions Cycles
 40363                           ; simple_byte           10     6 (average)
 40364                           ;	Chosen strategy is simple_byte
 40365   0051C6  0A01               	xorlw	1	; case 1
 40366   0051C8  B4D8               	btfsc	status,2,c
 40367   0051CA  D79C               	goto	l18976
 40368   0051CC  0A03               	xorlw	3	; case 2
 40369   0051CE  B4D8               	btfsc	status,2,c
 40370   0051D0  D7E8               	goto	l18992
 40371   0051D2  0A01               	xorlw	1	; case 3
 40372   0051D4  B4D8               	btfsc	status,2,c
 40373   0051D6  D7E5               	goto	l18992
 40374   0051D8  D0D8               	goto	l19032
 40375   0051DA                     l19000:
 40376                           
 40377                           ; BSR set to: 1
 40378                           ;../main.c: 479:             if ((type == 0) || (type == 5) || (type == 6)) {
 40379   0051DA  51C5               	movf	configIO@type& (0+255),w,b
 40380   0051DC  B4D8               	btfsc	status,2,c
 40381   0051DE  D008               	goto	u19030
 40382                           
 40383                           ; BSR set to: 1
 40384   0051E0  0E05               	movlw	5
 40385   0051E2  19C5               	xorwf	configIO@type& (0+255),w,b
 40386   0051E4  B4D8               	btfsc	status,2,c
 40387   0051E6  D004               	goto	u19030
 40388                           
 40389                           ; BSR set to: 1
 40390   0051E8  0E06               	movlw	6
 40391   0051EA  19C5               	xorwf	configIO@type& (0+255),w,b
 40392   0051EC  A4D8               	btfss	status,2,c
 40393   0051EE  D01E               	goto	l19008
 40394   0051F0                     u19030:
 40395                           
 40396                           ; BSR set to: 1
 40397                           ;../main.c: 480:                 TRISA |= (1 << configs[i].no);
 40398   0051F0  51C6               	movf	configIO@i& (0+255),w,b
 40399   0051F2  0D04               	mullw	4
 40400   0051F4  0E02               	movlw	2
 40401   0051F6  26F3               	addwf	243,f,c
 40402   0051F8  0E00               	movlw	0
 40403   0051FA  22F4               	addwfc	244,f,c
 40404   0051FC  0E35               	movlw	low _configs
 40405   0051FE  24F3               	addwf	243,w,c
 40406   005200  6EF6               	movwf	tblptrl,c
 40407   005202  0EEE               	movlw	high _configs
 40408   005204  20F4               	addwfc	244,w,c
 40409   005206  6EF7               	movwf	tblptrh,c
 40410   005208                     	if	1	;There are 3 active tblptr bytes
 40411   005208  6AF8               	clrf	tblptru,c
 40412   00520A  0E00               	movlw	low (__mediumconst shr (0+16))
 40413   00520C  22F8               	addwfc	tblptru,f,c
 40414   00520E                     	endif
 40415   00520E  0008               	tblrd		*
 40416   005210  CFF5 F1BF          	movff	tablat,??_configIO
 40417   005214  0E01               	movlw	1
 40418   005216  6FC0               	movwf	(??_configIO+1)& (0+255),b
 40419   005218  2BBF               	incf	??_configIO& (0+255),f,b
 40420   00521A  D002               	goto	u19044
 40421   00521C                     u19045:
 40422   00521C  90D8               	bcf	status,0,c
 40423   00521E  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 40424   005220                     u19044:
 40425   005220  2FBF               	decfsz	??_configIO& (0+255),f,b
 40426   005222  D7FC               	goto	u19045
 40427   005224  0101               	movlb	1	; () banked
 40428   005226  51C0               	movf	(??_configIO+1)& (0+255),w,b
 40429   005228  1292               	iorwf	146,f,c	;volatile
 40430                           
 40431                           ;../main.c: 481:             } else {
 40432   00522A  0012               	return	
 40433   00522C                     l19008:
 40434                           
 40435                           ; BSR set to: 1
 40436                           ;../main.c: 482:                 TRISA &= ~(1 << configs[i].no);
 40437   00522C  51C6               	movf	configIO@i& (0+255),w,b
 40438   00522E  0D04               	mullw	4
 40439   005230  0E02               	movlw	2
 40440   005232  26F3               	addwf	243,f,c
 40441   005234  0E00               	movlw	0
 40442   005236  22F4               	addwfc	244,f,c
 40443   005238  0E35               	movlw	low _configs
 40444   00523A  24F3               	addwf	243,w,c
 40445   00523C  6EF6               	movwf	tblptrl,c
 40446   00523E  0EEE               	movlw	high _configs
 40447   005240  20F4               	addwfc	244,w,c
 40448   005242  6EF7               	movwf	tblptrh,c
 40449   005244                     	if	1	;There are 3 active tblptr bytes
 40450   005244  6AF8               	clrf	tblptru,c
 40451   005246  0E00               	movlw	low (__mediumconst shr (0+16))
 40452   005248  22F8               	addwfc	tblptru,f,c
 40453   00524A                     	endif
 40454   00524A  0008               	tblrd		*
 40455   00524C  CFF5 F1BF          	movff	tablat,??_configIO
 40456   005250  0E01               	movlw	1
 40457   005252  6FC0               	movwf	(??_configIO+1)& (0+255),b
 40458   005254  2BBF               	incf	??_configIO& (0+255),f,b
 40459   005256  D002               	goto	u19054
 40460   005258                     u19055:
 40461   005258  90D8               	bcf	status,0,c
 40462   00525A  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 40463   00525C                     u19054:
 40464   00525C  2FBF               	decfsz	??_configIO& (0+255),f,b
 40465   00525E  D7FC               	goto	u19055
 40466   005260  0101               	movlb	1	; () banked
 40467   005262  51C0               	movf	(??_configIO+1)& (0+255),w,b
 40468   005264  0AFF               	xorlw	255
 40469   005266  1692               	andwf	146,f,c	;volatile
 40470   005268  0012               	return	
 40471   00526A                     l19010:
 40472                           
 40473                           ; BSR set to: 1
 40474                           ;../main.c: 486:             if ((type == 0) || (type == 5) || (type == 6)) {
 40475   00526A  51C5               	movf	configIO@type& (0+255),w,b
 40476   00526C  B4D8               	btfsc	status,2,c
 40477   00526E  D008               	goto	u19080
 40478                           
 40479                           ; BSR set to: 1
 40480   005270  0E05               	movlw	5
 40481   005272  19C5               	xorwf	configIO@type& (0+255),w,b
 40482   005274  B4D8               	btfsc	status,2,c
 40483   005276  D004               	goto	u19080
 40484                           
 40485                           ; BSR set to: 1
 40486   005278  0E06               	movlw	6
 40487   00527A  19C5               	xorwf	configIO@type& (0+255),w,b
 40488   00527C  A4D8               	btfss	status,2,c
 40489   00527E  D01E               	goto	l19018
 40490   005280                     u19080:
 40491                           
 40492                           ; BSR set to: 1
 40493                           ;../main.c: 487:                 TRISB |= (1 << configs[i].no);
 40494   005280  51C6               	movf	configIO@i& (0+255),w,b
 40495   005282  0D04               	mullw	4
 40496   005284  0E02               	movlw	2
 40497   005286  26F3               	addwf	243,f,c
 40498   005288  0E00               	movlw	0
 40499   00528A  22F4               	addwfc	244,f,c
 40500   00528C  0E35               	movlw	low _configs
 40501   00528E  24F3               	addwf	243,w,c
 40502   005290  6EF6               	movwf	tblptrl,c
 40503   005292  0EEE               	movlw	high _configs
 40504   005294  20F4               	addwfc	244,w,c
 40505   005296  6EF7               	movwf	tblptrh,c
 40506   005298                     	if	1	;There are 3 active tblptr bytes
 40507   005298  6AF8               	clrf	tblptru,c
 40508   00529A  0E00               	movlw	low (__mediumconst shr (0+16))
 40509   00529C  22F8               	addwfc	tblptru,f,c
 40510   00529E                     	endif
 40511   00529E  0008               	tblrd		*
 40512   0052A0  CFF5 F1BF          	movff	tablat,??_configIO
 40513   0052A4  0E01               	movlw	1
 40514   0052A6  6FC0               	movwf	(??_configIO+1)& (0+255),b
 40515   0052A8  2BBF               	incf	??_configIO& (0+255),f,b
 40516   0052AA  D002               	goto	u19094
 40517   0052AC                     u19095:
 40518   0052AC  90D8               	bcf	status,0,c
 40519   0052AE  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 40520   0052B0                     u19094:
 40521   0052B0  2FBF               	decfsz	??_configIO& (0+255),f,b
 40522   0052B2  D7FC               	goto	u19095
 40523   0052B4  0101               	movlb	1	; () banked
 40524   0052B6  51C0               	movf	(??_configIO+1)& (0+255),w,b
 40525   0052B8  1293               	iorwf	147,f,c	;volatile
 40526                           
 40527                           ;../main.c: 488:             } else {
 40528   0052BA  0012               	return	
 40529   0052BC                     l19018:
 40530                           
 40531                           ; BSR set to: 1
 40532                           ;../main.c: 489:                 TRISB &= ~(1 << configs[i].no);
 40533   0052BC  51C6               	movf	configIO@i& (0+255),w,b
 40534   0052BE  0D04               	mullw	4
 40535   0052C0  0E02               	movlw	2
 40536   0052C2  26F3               	addwf	243,f,c
 40537   0052C4  0E00               	movlw	0
 40538   0052C6  22F4               	addwfc	244,f,c
 40539   0052C8  0E35               	movlw	low _configs
 40540   0052CA  24F3               	addwf	243,w,c
 40541   0052CC  6EF6               	movwf	tblptrl,c
 40542   0052CE  0EEE               	movlw	high _configs
 40543   0052D0  20F4               	addwfc	244,w,c
 40544   0052D2  6EF7               	movwf	tblptrh,c
 40545   0052D4                     	if	1	;There are 3 active tblptr bytes
 40546   0052D4  6AF8               	clrf	tblptru,c
 40547   0052D6  0E00               	movlw	low (__mediumconst shr (0+16))
 40548   0052D8  22F8               	addwfc	tblptru,f,c
 40549   0052DA                     	endif
 40550   0052DA  0008               	tblrd		*
 40551   0052DC  CFF5 F1BF          	movff	tablat,??_configIO
 40552   0052E0  0E01               	movlw	1
 40553   0052E2  6FC0               	movwf	(??_configIO+1)& (0+255),b
 40554   0052E4  2BBF               	incf	??_configIO& (0+255),f,b
 40555   0052E6  D002               	goto	u19104
 40556   0052E8                     u19105:
 40557   0052E8  90D8               	bcf	status,0,c
 40558   0052EA  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 40559   0052EC                     u19104:
 40560   0052EC  2FBF               	decfsz	??_configIO& (0+255),f,b
 40561   0052EE  D7FC               	goto	u19105
 40562   0052F0  0101               	movlb	1	; () banked
 40563   0052F2  51C0               	movf	(??_configIO+1)& (0+255),w,b
 40564   0052F4  0AFF               	xorlw	255
 40565   0052F6  1693               	andwf	147,f,c	;volatile
 40566   0052F8  0012               	return	
 40567   0052FA                     l19020:
 40568                           
 40569                           ; BSR set to: 1
 40570                           ;../main.c: 493:             if ((type == 0) || (type == 5) || (type == 6)) {
 40571   0052FA  51C5               	movf	configIO@type& (0+255),w,b
 40572   0052FC  B4D8               	btfsc	status,2,c
 40573   0052FE  D008               	goto	u19130
 40574                           
 40575                           ; BSR set to: 1
 40576   005300  0E05               	movlw	5
 40577   005302  19C5               	xorwf	configIO@type& (0+255),w,b
 40578   005304  B4D8               	btfsc	status,2,c
 40579   005306  D004               	goto	u19130
 40580                           
 40581                           ; BSR set to: 1
 40582   005308  0E06               	movlw	6
 40583   00530A  19C5               	xorwf	configIO@type& (0+255),w,b
 40584   00530C  A4D8               	btfss	status,2,c
 40585   00530E  D01E               	goto	l19028
 40586   005310                     u19130:
 40587                           
 40588                           ; BSR set to: 1
 40589                           ;../main.c: 494:                 TRISC |= (1 << configs[i].no);
 40590   005310  51C6               	movf	configIO@i& (0+255),w,b
 40591   005312  0D04               	mullw	4
 40592   005314  0E02               	movlw	2
 40593   005316  26F3               	addwf	243,f,c
 40594   005318  0E00               	movlw	0
 40595   00531A  22F4               	addwfc	244,f,c
 40596   00531C  0E35               	movlw	low _configs
 40597   00531E  24F3               	addwf	243,w,c
 40598   005320  6EF6               	movwf	tblptrl,c
 40599   005322  0EEE               	movlw	high _configs
 40600   005324  20F4               	addwfc	244,w,c
 40601   005326  6EF7               	movwf	tblptrh,c
 40602   005328                     	if	1	;There are 3 active tblptr bytes
 40603   005328  6AF8               	clrf	tblptru,c
 40604   00532A  0E00               	movlw	low (__mediumconst shr (0+16))
 40605   00532C  22F8               	addwfc	tblptru,f,c
 40606   00532E                     	endif
 40607   00532E  0008               	tblrd		*
 40608   005330  CFF5 F1BF          	movff	tablat,??_configIO
 40609   005334  0E01               	movlw	1
 40610   005336  6FC0               	movwf	(??_configIO+1)& (0+255),b
 40611   005338  2BBF               	incf	??_configIO& (0+255),f,b
 40612   00533A  D002               	goto	u19144
 40613   00533C                     u19145:
 40614   00533C  90D8               	bcf	status,0,c
 40615   00533E  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 40616   005340                     u19144:
 40617   005340  2FBF               	decfsz	??_configIO& (0+255),f,b
 40618   005342  D7FC               	goto	u19145
 40619   005344  0101               	movlb	1	; () banked
 40620   005346  51C0               	movf	(??_configIO+1)& (0+255),w,b
 40621   005348  1294               	iorwf	148,f,c	;volatile
 40622                           
 40623                           ;../main.c: 495:             } else {
 40624   00534A  0012               	return	
 40625   00534C                     l19028:
 40626                           
 40627                           ; BSR set to: 1
 40628                           ;../main.c: 496:                 TRISC &= ~(1 << configs[i].no);
 40629   00534C  51C6               	movf	configIO@i& (0+255),w,b
 40630   00534E  0D04               	mullw	4
 40631   005350  0E02               	movlw	2
 40632   005352  26F3               	addwf	243,f,c
 40633   005354  0E00               	movlw	0
 40634   005356  22F4               	addwfc	244,f,c
 40635   005358  0E35               	movlw	low _configs
 40636   00535A  24F3               	addwf	243,w,c
 40637   00535C  6EF6               	movwf	tblptrl,c
 40638   00535E  0EEE               	movlw	high _configs
 40639   005360  20F4               	addwfc	244,w,c
 40640   005362  6EF7               	movwf	tblptrh,c
 40641   005364                     	if	1	;There are 3 active tblptr bytes
 40642   005364  6AF8               	clrf	tblptru,c
 40643   005366  0E00               	movlw	low (__mediumconst shr (0+16))
 40644   005368  22F8               	addwfc	tblptru,f,c
 40645   00536A                     	endif
 40646   00536A  0008               	tblrd		*
 40647   00536C  CFF5 F1BF          	movff	tablat,??_configIO
 40648   005370  0E01               	movlw	1
 40649   005372  6FC0               	movwf	(??_configIO+1)& (0+255),b
 40650   005374  2BBF               	incf	??_configIO& (0+255),f,b
 40651   005376  D002               	goto	u19154
 40652   005378                     u19155:
 40653   005378  90D8               	bcf	status,0,c
 40654   00537A  37C0               	rlcf	(??_configIO+1)& (0+255),f,b
 40655   00537C                     u19154:
 40656   00537C  2FBF               	decfsz	??_configIO& (0+255),f,b
 40657   00537E  D7FC               	goto	u19155
 40658   005380  0101               	movlb	1	; () banked
 40659   005382  51C0               	movf	(??_configIO+1)& (0+255),w,b
 40660   005384  0AFF               	xorlw	255
 40661   005386  1694               	andwf	148,f,c	;volatile
 40662   005388  0012               	return	
 40663   00538A                     l19032:
 40664   00538A  0101               	movlb	1	; () banked
 40665   00538C  51C6               	movf	configIO@i& (0+255),w,b
 40666   00538E  0D04               	mullw	4
 40667   005390  0E01               	movlw	1
 40668   005392  26F3               	addwf	243,f,c
 40669   005394  0E00               	movlw	0
 40670   005396  22F4               	addwfc	244,f,c
 40671   005398  0E35               	movlw	low _configs
 40672   00539A  24F3               	addwf	243,w,c
 40673   00539C  6EF6               	movwf	tblptrl,c
 40674   00539E  0EEE               	movlw	high _configs
 40675   0053A0  20F4               	addwfc	244,w,c
 40676   0053A2  6EF7               	movwf	tblptrh,c
 40677   0053A4                     	if	1	;There are 3 active tblptr bytes
 40678   0053A4  6AF8               	clrf	tblptru,c
 40679   0053A6  0E00               	movlw	low (__mediumconst shr (0+16))
 40680   0053A8  22F8               	addwfc	tblptru,f,c
 40681   0053AA                     	endif
 40682   0053AA  0008               	tblrd		*
 40683   0053AC  50F5               	movf	tablat,w,c
 40684                           
 40685                           ; Switch size 1, requested type "simple"
 40686                           ; Number of cases is 3, Range of values is 65 to 67
 40687                           ; switch strategies available:
 40688                           ; Name         Instructions Cycles
 40689                           ; simple_byte           10     6 (average)
 40690                           ;	Chosen strategy is simple_byte
 40691   0053AE  0A41               	xorlw	65	; case 65
 40692   0053B0  B4D8               	btfsc	status,2,c
 40693   0053B2  D713               	goto	l19000
 40694   0053B4  0A03               	xorlw	3	; case 66
 40695   0053B6  B4D8               	btfsc	status,2,c
 40696   0053B8  D758               	goto	l19010
 40697   0053BA  0A01               	xorlw	1	; case 67
 40698   0053BC  A4D8               	btfss	status,2,c
 40699   0053BE  0012               	return	
 40700   0053C0  D79C               	goto	l19020
 40701   0053C2                     __end_of_configIO:
 40702                           	callstack 0
 40703                           
 40704 ;; *************** function _writeNVM *****************
 40705 ;; Defined at:
 40706 ;;		line 520 in file "../../VLCBlib_PIC/nvm.c"
 40707 ;; Parameters:    Size  Location     Type
 40708 ;;  type            1    wreg     enum E12672
 40709 ;;  index           3   68[BANK0 ] unsigned um
 40710 ;;  value           1   71[BANK0 ] unsigned char 
 40711 ;; Auto vars:     Size  Location     Type
 40712 ;;  type            1    0[BANK1 ] enum E12672
 40713 ;; Return value:  Size  Location     Type
 40714 ;;                  1    wreg      unsigned char 
 40715 ;; Registers used:
 40716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40717 ;; Tracked objects:
 40718 ;;		On entry : 0/0
 40719 ;;		On exit  : 0/0
 40720 ;;		Unchanged: 0/0
 40721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40722 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40723 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40724 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40725 ;;      Totals:         0       6       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40726 ;;Total ram usage:        7 bytes
 40727 ;; Hardware stack levels used: 1
 40728 ;; Hardware stack levels required when called: 17
 40729 ;; This function calls:
 40730 ;;		_EEPROM_Write
 40731 ;;		_FLASH_Write
 40732 ;; This function is called by:
 40733 ;;		_configIO
 40734 ;;		_startDigitalOutput
 40735 ;;		_inputScan
 40736 ;;		_pollServos
 40737 ;;		_bootProcessMessage
 40738 ;;		_clearAllEvents
 40739 ;;		_removeTableEntry
 40740 ;;		_addEvent
 40741 ;;		_writeEv
 40742 ;;		_mnsFactoryReset
 40743 ;;		_mnsProcessMessage
 40744 ;;		_mnsPoll
 40745 ;;		_nvFactoryReset
 40746 ;;		_saveNV
 40747 ;;		_setNV
 40748 ;;		_factoryReset
 40749 ;;		_canFactoryReset
 40750 ;;		_setNewCanId
 40751 ;; This function uses a non-reentrant model
 40752 ;;
 40753                           
 40754                           	psect	text172
 40755   00B722                     __ptext172:
 40756                           	callstack 0
 40757   00B722                     _writeNVM:
 40758                           	callstack 11
 40759                           
 40760                           ; BSR set to: 1
 40761                           ;incstack = 0
 40762                           ;writeNVM@type stored from wreg
 40763   00B722  0101               	movlb	1	; () banked
 40764   00B724  6FBE               	movwf	writeNVM@type& (0+255),b
 40765                           
 40766                           ;../../VLCBlib_PIC/nvm.c: 521:     switch(type) {
 40767   00B726  D012               	goto	l18260
 40768   00B728                     l18250:
 40769                           
 40770                           ; BSR set to: 0
 40771                           ;../../VLCBlib_PIC/nvm.c: 523:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 40772   00B728  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 40773   00B72C  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 40774   00B730  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 40775   00B734  EC16  F057         	call	_EEPROM_Write	;wreg free
 40776   00B738  0012               	return	
 40777   00B73A                     l18254:
 40778                           
 40779                           ; BSR set to: 0
 40780                           ;../../VLCBlib_PIC/nvm.c: 525:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 40781   00B73A  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 40782   00B73E  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 40783   00B742  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 40784   00B746  ECAB  F046         	call	_FLASH_Write	;wreg free
 40785   00B74A  0012               	return	
 40786   00B74C                     l18260:
 40787   00B74C  0101               	movlb	1	; () banked
 40788   00B74E  51BE               	movf	writeNVM@type& (0+255),w,b
 40789   00B750  0100               	movlb	0	; () banked
 40790   00B752  6FA8               	movwf	??_writeNVM& (0+255),b
 40791   00B754  6BA9               	clrf	(??_writeNVM+1)& (0+255),b
 40792                           
 40793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 40794                           ; Switch size 1, requested type "simple"
 40795                           ; Number of cases is 1, Range of values is 0 to 0
 40796                           ; switch strategies available:
 40797                           ; Name         Instructions Cycles
 40798                           ; simple_byte            4     3 (average)
 40799                           ;	Chosen strategy is simple_byte
 40800   00B756  51A9               	movf	(??_writeNVM+1)& (0+255),w,b
 40801   00B758  0A00               	xorlw	0	; case 0
 40802   00B75A  A4D8               	btfss	status,2,c
 40803   00B75C  0012               	return	
 40804                           
 40805                           ; BSR set to: 0
 40806                           ; Switch size 1, requested type "simple"
 40807                           ; Number of cases is 2, Range of values is 0 to 1
 40808                           ; switch strategies available:
 40809                           ; Name         Instructions Cycles
 40810                           ; simple_byte            7     4 (average)
 40811                           ;	Chosen strategy is simple_byte
 40812   00B75E  51A8               	movf	??_writeNVM& (0+255),w,b
 40813   00B760  0A00               	xorlw	0	; case 0
 40814   00B762  B4D8               	btfsc	status,2,c
 40815   00B764  D7E1               	goto	l18250
 40816   00B766  0A01               	xorlw	1	; case 1
 40817   00B768  A4D8               	btfss	status,2,c
 40818   00B76A  0012               	return	
 40819   00B76C  D7E6               	goto	l18254
 40820   00B76E                     __end_of_writeNVM:
 40821                           	callstack 0
 40822                           
 40823 ;; *************** function _FLASH_Write *****************
 40824 ;; Defined at:
 40825 ;;		line 474 in file "../../VLCBlib_PIC/nvm.c"
 40826 ;; Parameters:    Size  Location     Type
 40827 ;;  index           2   48[BANK0 ] unsigned short 
 40828 ;;  value           1   50[BANK0 ] unsigned char 
 40829 ;; Auto vars:     Size  Location     Type
 40830 ;;  oldValue        1    0        unsigned char 
 40831 ;; Return value:  Size  Location     Type
 40832 ;;                  1    wreg      unsigned char 
 40833 ;; Registers used:
 40834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40835 ;; Tracked objects:
 40836 ;;		On entry : 0/0
 40837 ;;		On exit  : 0/0
 40838 ;;		Unchanged: 0/0
 40839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40840 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40842 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40843 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40844 ;;Total ram usage:        7 bytes
 40845 ;; Hardware stack levels used: 1
 40846 ;; Hardware stack levels required when called: 16
 40847 ;; This function calls:
 40848 ;;		_eraseFlashBlock
 40849 ;;		_flushFlashBlock
 40850 ;;		_loadFlashBlock
 40851 ;; This function is called by:
 40852 ;;		_writeNVM
 40853 ;; This function uses a non-reentrant model
 40854 ;;
 40855                           
 40856                           	psect	text173
 40857   008D56                     __ptext173:
 40858                           	callstack 0
 40859   008D56                     _FLASH_Write:
 40860                           	callstack 11
 40861                           
 40862                           ;../../VLCBlib_PIC/nvm.c: 475:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 490:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 40863                           
 40864                           ;incstack = 0
 40865   008D56  0EC0               	movlw	192
 40866   008D58  0100               	movlb	0	; () banked
 40867   008D5A  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40868   008D5C  6F93               	movwf	??_FLASH_Write& (0+255),b
 40869   008D5E  0EFF               	movlw	255
 40870   008D60  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40871   008D62  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40872   008D64  51AE               	movf	_flashBlock& (0+255),w,b
 40873   008D66  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 40874   008D68  E104               	bnz	u17950
 40875   008D6A  51AF               	movf	(_flashBlock+1)& (0+255),w,b
 40876   008D6C  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 40877   008D6E  B4D8               	btfsc	status,2,c
 40878   008D70  D015               	goto	l18236
 40879   008D72                     u17950:
 40880                           
 40881                           ; BSR set to: 0
 40882                           ;../../VLCBlib_PIC/nvm.c: 491:         if (flashBlock != 0) {
 40883   008D72  51AE               	movf	_flashBlock& (0+255),w,b
 40884   008D74  11AF               	iorwf	(_flashBlock+1)& (0+255),w,b
 40885   008D76  B4D8               	btfsc	status,2,c
 40886   008D78  D008               	goto	l18232
 40887                           
 40888                           ; BSR set to: 0
 40889                           ;../../VLCBlib_PIC/nvm.c: 493:             if (flashFlags.eraseNeeded) {
 40890   008D7A  A3B9               	btfss	_flashFlags& (0+255),1,b
 40891   008D7C  D004               	goto	l18230
 40892                           
 40893                           ; BSR set to: 0
 40894                           ;../../VLCBlib_PIC/nvm.c: 494:                 eraseFlashBlock();
 40895   008D7E  ECB7  F05B         	call	_eraseFlashBlock	;wreg free
 40896                           
 40897                           ;../../VLCBlib_PIC/nvm.c: 495:                 flashFlags.eraseNeeded = 0;
 40898   008D82  0100               	movlb	0	; () banked
 40899   008D84  93B9               	bcf	_flashFlags& (0+255),1,b
 40900   008D86                     l18230:
 40901                           
 40902                           ; BSR set to: 0
 40903                           ;../../VLCBlib_PIC/nvm.c: 498:             flushFlashBlock();
 40904   008D86  EC11  F053         	call	_flushFlashBlock	;wreg free
 40905   008D8A                     l18232:
 40906                           
 40907                           ;../../VLCBlib_PIC/nvm.c: 502:         flashBlock = (index&(~((flash_address_t)64 -1)));
 40908   008D8A  0EC0               	movlw	192
 40909   008D8C  0100               	movlb	0	; () banked
 40910   008D8E  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40911   008D90  6FAE               	movwf	_flashBlock& (0+255),b
 40912   008D92  0EFF               	movlw	255
 40913   008D94  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40914   008D96  6FAF               	movwf	(_flashBlock+1)& (0+255),b
 40915                           
 40916                           ; BSR set to: 0
 40917                           ;../../VLCBlib_PIC/nvm.c: 503:         loadFlashBlock();
 40918   008D98  EC72  F05C         	call	_loadFlashBlock	;wreg free
 40919   008D9C                     l18236:
 40920                           
 40921                           ;../../VLCBlib_PIC/nvm.c: 505:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 40922   008D9C  0E3F               	movlw	63
 40923   008D9E  0100               	movlb	0	; () banked
 40924   008DA0  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40925   008DA2  6F93               	movwf	??_FLASH_Write& (0+255),b
 40926   008DA4  0E00               	movlw	0
 40927   008DA6  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40928   008DA8  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40929   008DAA  0E48               	movlw	low _flashBuffer
 40930   008DAC  2593               	addwf	??_FLASH_Write& (0+255),w,b
 40931   008DAE  6ED9               	movwf	fsr2l,c
 40932   008DB0  0E03               	movlw	high _flashBuffer
 40933   008DB2  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 40934   008DB4  6EDA               	movwf	fsr2h,c
 40935   008DB6  50DF               	movf	indf2,w,c
 40936   008DB8  0AFF               	xorlw	255
 40937   008DBA  1592               	andwf	FLASH_Write@value& (0+255),w,b
 40938   008DBC  0900               	iorlw	0
 40939   008DBE  B4D8               	btfsc	status,2,c
 40940   008DC0  D003               	goto	u17980
 40941   008DC2  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 40942   008DC4  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 40943   008DC6  D002               	goto	u17998
 40944   008DC8                     u17980:
 40945   008DC8  0100               	movlb	0	; () banked
 40946   008DCA  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 40947   008DCC                     u17998:
 40948   008DCC  31B9               	rrcf	_flashFlags& (0+255),w,b
 40949   008DCE  0B01               	andlw	1
 40950   008DD0  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 40951   008DD2  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 40952   008DD4  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 40953   008DD6  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 40954   008DD8  51B9               	movf	_flashFlags& (0+255),w,b
 40955   008DDA  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 40956   008DDC  0BFD               	andlw	-3
 40957   008DDE  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 40958   008DE0  6FB9               	movwf	_flashFlags& (0+255),b
 40959                           
 40960                           ; BSR set to: 0
 40961                           ;../../VLCBlib_PIC/nvm.c: 506:     if (flashBuffer[(index&(64 -1))] != value) {
 40962   008DE2  0E3F               	movlw	63
 40963   008DE4  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40964   008DE6  6F93               	movwf	??_FLASH_Write& (0+255),b
 40965   008DE8  0E00               	movlw	0
 40966   008DEA  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40967   008DEC  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40968   008DEE  0E48               	movlw	low _flashBuffer
 40969   008DF0  2593               	addwf	??_FLASH_Write& (0+255),w,b
 40970   008DF2  6ED9               	movwf	fsr2l,c
 40971   008DF4  0E03               	movlw	high _flashBuffer
 40972   008DF6  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 40973   008DF8  6EDA               	movwf	fsr2h,c
 40974   008DFA  5192               	movf	FLASH_Write@value& (0+255),w,b
 40975   008DFC  18DE               	xorwf	postinc2,w,c
 40976   008DFE  B4D8               	btfsc	status,2,c
 40977   008E00  D00F               	goto	l18244
 40978                           
 40979                           ; BSR set to: 0
 40980                           ;../../VLCBlib_PIC/nvm.c: 507:         flashFlags.writeNeeded = 1;
 40981   008E02  81B9               	bsf	_flashFlags& (0+255),0,b
 40982                           
 40983                           ; BSR set to: 0
 40984                           ;../../VLCBlib_PIC/nvm.c: 508:         flashBuffer[(index&(64 -1))] = value;
 40985   008E04  0E3F               	movlw	63
 40986   008E06  1590               	andwf	FLASH_Write@index& (0+255),w,b
 40987   008E08  6F93               	movwf	??_FLASH_Write& (0+255),b
 40988   008E0A  0E00               	movlw	0
 40989   008E0C  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 40990   008E0E  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 40991   008E10  0E48               	movlw	low _flashBuffer
 40992   008E12  2593               	addwf	??_FLASH_Write& (0+255),w,b
 40993   008E14  6ED9               	movwf	fsr2l,c
 40994   008E16  0E03               	movlw	high _flashBuffer
 40995   008E18  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 40996   008E1A  6EDA               	movwf	fsr2h,c
 40997   008E1C  C092  FFDF         	movff	FLASH_Write@value,indf2
 40998   008E20                     l18244:
 40999                           
 41000                           ; BSR set to: 0
 41001                           ;../../VLCBlib_PIC/nvm.c: 510:     return GRSP_OK;
 41002   008E20  0E00               	movlw	0
 41003                           
 41004                           ; BSR set to: 0
 41005   008E22  0012               	return		;funcret
 41006   008E24                     __end_of_FLASH_Write:
 41007                           	callstack 0
 41008                           
 41009 ;; *************** function _loadFlashBlock *****************
 41010 ;; Defined at:
 41011 ;;		line 436 in file "../../VLCBlib_PIC/nvm.c"
 41012 ;; Parameters:    Size  Location     Type
 41013 ;;		None
 41014 ;; Auto vars:     Size  Location     Type
 41015 ;;  i               1   45[BANK0 ] unsigned char 
 41016 ;; Return value:  Size  Location     Type
 41017 ;;                  1    wreg      void 
 41018 ;; Registers used:
 41019 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41020 ;; Tracked objects:
 41021 ;;		On entry : 0/0
 41022 ;;		On exit  : 0/0
 41023 ;;		Unchanged: 0/0
 41024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41028 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41029 ;;Total ram usage:        1 bytes
 41030 ;; Hardware stack levels used: 1
 41031 ;; Hardware stack levels required when called: 12
 41032 ;; This function calls:
 41033 ;;		Nothing
 41034 ;; This function is called by:
 41035 ;;		_FLASH_Write
 41036 ;; This function uses a non-reentrant model
 41037 ;;
 41038                           
 41039                           	psect	text174
 41040   00B8E4                     __ptext174:
 41041                           	callstack 0
 41042   00B8E4                     _loadFlashBlock:
 41043                           	callstack 14
 41044                           
 41045                           ;../../VLCBlib_PIC/nvm.c: 438:     EECON1=0X80;
 41046                           
 41047                           ; BSR set to: 0
 41048                           ;incstack = 0
 41049   00B8E4  0E80               	movlw	128
 41050   00B8E6  6E7F               	movwf	127,c	;volsfr
 41051                           
 41052                           ;../../VLCBlib_PIC/nvm.c: 439:     TBLPTR = flashBlock;
 41053   00B8E8  C0AE  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41054   00B8EC  C0AF  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41055   00B8F0  6AF8               	clrf	248,c	;volatile
 41056                           
 41057                           ;../../VLCBlib_PIC/nvm.c: 440:     TBLPTRU = 0;
 41058   00B8F2  0E00               	movlw	0
 41059   00B8F4  6EF8               	movwf	248,c	;volatile
 41060                           
 41061                           ;../../VLCBlib_PIC/nvm.c: 441:     for (uint8_t i=0; i<64; i++) {
 41062   00B8F6  0E00               	movlw	0
 41063   00B8F8  0100               	movlb	0	; () banked
 41064   00B8FA  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 41065   00B8FC                     l2592:
 41066                           
 41067                           ; BSR set to: 0
 41068   00B8FC  0009               	tblrd		*+	;# 
 41069                           
 41070                           ;../../VLCBlib_PIC/nvm.c: 443:         __nop();
 41071   00B8FE  0000               	nop	
 41072                           
 41073                           ;../../VLCBlib_PIC/nvm.c: 444:         flashBuffer[i] = TABLAT;
 41074   00B900  0E48               	movlw	low _flashBuffer
 41075   00B902  0100               	movlb	0	; () banked
 41076   00B904  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 41077   00B906  6ED9               	movwf	fsr2l,c
 41078   00B908  6ADA               	clrf	fsr2h,c
 41079   00B90A  0E03               	movlw	high _flashBuffer
 41080   00B90C  22DA               	addwfc	fsr2h,f,c
 41081   00B90E  CFF5 FFDF          	movff	tablat,indf2	;volatile
 41082                           
 41083                           ; BSR set to: 0
 41084                           ;../../VLCBlib_PIC/nvm.c: 445:     }
 41085   00B912  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 41086                           
 41087                           ; BSR set to: 0
 41088   00B914  0E3F               	movlw	63
 41089   00B916  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 41090   00B918  D7F1               	goto	l2592
 41091                           
 41092                           ; BSR set to: 0
 41093                           ;../../VLCBlib_PIC/nvm.c: 446:     TBLPTR = flashBlock;
 41094   00B91A  C0AE  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41095   00B91E  C0AF  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41096   00B922  6AF8               	clrf	248,c	;volatile
 41097                           
 41098                           ; BSR set to: 0
 41099                           ;../../VLCBlib_PIC/nvm.c: 447:     TBLPTRU = 0;
 41100   00B924  0E00               	movlw	0
 41101   00B926  6EF8               	movwf	248,c	;volatile
 41102                           
 41103                           ; BSR set to: 0
 41104                           ;../../VLCBlib_PIC/nvm.c: 463:     flashFlags.asByte = 0;
 41105   00B928  0E00               	movlw	0
 41106   00B92A  6FB9               	movwf	_flashFlags& (0+255),b
 41107                           
 41108                           ; BSR set to: 0
 41109   00B92C  0012               	return		;funcret
 41110   00B92E                     __end_of_loadFlashBlock:
 41111                           	callstack 0
 41112                           
 41113 ;; *************** function _flushFlashBlock *****************
 41114 ;; Defined at:
 41115 ;;		line 364 in file "../../VLCBlib_PIC/nvm.c"
 41116 ;; Parameters:    Size  Location     Type
 41117 ;;		None
 41118 ;; Auto vars:     Size  Location     Type
 41119 ;;  i               1   47[BANK0 ] unsigned char 
 41120 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 41121 ;; Return value:  Size  Location     Type
 41122 ;;                  1    wreg      void 
 41123 ;; Registers used:
 41124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41125 ;; Tracked objects:
 41126 ;;		On entry : 0/0
 41127 ;;		On exit  : 0/0
 41128 ;;		Unchanged: 0/0
 41129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41131 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41133 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41134 ;;Total ram usage:        2 bytes
 41135 ;; Hardware stack levels used: 1
 41136 ;; Hardware stack levels required when called: 15
 41137 ;; This function calls:
 41138 ;;		_APP_isSuitableTimeToWriteFlash
 41139 ;;		_eraseFlashBlock
 41140 ;; This function is called by:
 41141 ;;		_APP_factoryReset
 41142 ;;		_deleteActionRange
 41143 ;;		_deleteHappeningRange
 41144 ;;		_clearAllEvents
 41145 ;;		_removeTableEntry
 41146 ;;		_addEvent
 41147 ;;		_poll
 41148 ;;		_FLASH_Write
 41149 ;; This function uses a non-reentrant model
 41150 ;;
 41151                           
 41152                           	psect	text175
 41153   00A622                     __ptext175:
 41154                           	callstack 0
 41155   00A622                     _flushFlashBlock:
 41156                           	callstack 11
 41157                           
 41158                           ;../../VLCBlib_PIC/nvm.c: 365:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 36
      +                          7:     TBLPTR = flashBlock;
 41159                           
 41160                           ; BSR set to: 0
 41161                           ;incstack = 0
 41162   00A622  C0AE  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41163   00A626  C0AF  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41164   00A62A  6AF8               	clrf	248,c	;volatile
 41165                           
 41166                           ;../../VLCBlib_PIC/nvm.c: 368:     TBLPTRU = 0;
 41167   00A62C  0E00               	movlw	0
 41168   00A62E  6EF8               	movwf	248,c	;volatile
 41169                           
 41170                           ;../../VLCBlib_PIC/nvm.c: 373:     if (! flashFlags.writeNeeded) return;
 41171   00A630  0100               	movlb	0	; () banked
 41172   00A632  A1B9               	btfss	_flashFlags& (0+255),0,b
 41173   00A634  0012               	return	
 41174   00A636                     l18018:
 41175                           
 41176                           ;../../VLCBlib_PIC/nvm.c: 376:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 41177   00A636  ECC1  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41178   00A63A  0900               	iorlw	0
 41179   00A63C  B4D8               	btfsc	status,2,c
 41180   00A63E  D7FB               	goto	l18018
 41181                           
 41182                           ;../../VLCBlib_PIC/nvm.c: 379:     if (flashFlags.eraseNeeded) {
 41183   00A640  0100               	movlb	0	; () banked
 41184   00A642  B3B9               	btfsc	_flashFlags& (0+255),1,b
 41185                           
 41186                           ; BSR set to: 0
 41187                           ;../../VLCBlib_PIC/nvm.c: 380:         eraseFlashBlock();
 41188   00A644  ECB7  F05B         	call	_eraseFlashBlock	;wreg free
 41189                           
 41190                           ;../../VLCBlib_PIC/nvm.c: 383:     interruptEnabled = (INTCONbits.GIEH);
 41191   00A648  0E00               	movlw	0
 41192   00A64A  BEF2               	btfsc	242,7,c	;volatile
 41193   00A64C  0E01               	movlw	1
 41194   00A64E  0100               	movlb	0	; () banked
 41195   00A650  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 41196                           
 41197                           ; BSR set to: 0
 41198                           ;../../VLCBlib_PIC/nvm.c: 384:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41199   00A652  9EF2               	bcf	242,7,c	;volatile
 41200                           
 41201                           ; BSR set to: 0
 41202   00A654  9CF2               	bcf	242,6,c	;volatile
 41203                           
 41204                           ; BSR set to: 0
 41205                           ;../../VLCBlib_PIC/nvm.c: 386:     for (uint8_t i=0; i<64; i++) {
 41206   00A656  0E00               	movlw	0
 41207   00A658  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 41208   00A65A                     l18034:
 41209                           
 41210                           ; BSR set to: 0
 41211                           ;../../VLCBlib_PIC/nvm.c: 387:         TABLAT = flashBuffer[i];
 41212   00A65A  0E48               	movlw	low _flashBuffer
 41213   00A65C  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 41214   00A65E  6ED9               	movwf	fsr2l,c
 41215   00A660  6ADA               	clrf	fsr2h,c
 41216   00A662  0E03               	movlw	high _flashBuffer
 41217   00A664  22DA               	addwfc	fsr2h,f,c
 41218   00A666  50DF               	movf	indf2,w,c
 41219   00A668  6EF5               	movwf	245,c	;volatile
 41220   00A66A  000D               	tblwt		*+	;# 
 41221                           
 41222                           ;../../VLCBlib_PIC/nvm.c: 389:     }
 41223   00A66C  0100               	movlb	0	; () banked
 41224   00A66E  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 41225                           
 41226                           ; BSR set to: 0
 41227   00A670  0E3F               	movlw	63
 41228   00A672  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 41229   00A674  D7F2               	goto	l18034
 41230                           
 41231                           ; BSR set to: 0
 41232                           ;../../VLCBlib_PIC/nvm.c: 396:     TBLPTR = flashBlock;
 41233   00A676  C0AE  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41234   00A67A  C0AF  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41235   00A67E  6AF8               	clrf	248,c	;volatile
 41236                           
 41237                           ; BSR set to: 0
 41238                           ;../../VLCBlib_PIC/nvm.c: 397:     TBLPTRU = 0;
 41239   00A680  0E00               	movlw	0
 41240   00A682  6EF8               	movwf	248,c	;volatile
 41241                           
 41242                           ; BSR set to: 0
 41243                           ;../../VLCBlib_PIC/nvm.c: 398:     EECON1bits.EEPGD = 1;
 41244   00A684  8E7F               	bsf	127,7,c	;volsfr
 41245                           
 41246                           ; BSR set to: 0
 41247                           ;../../VLCBlib_PIC/nvm.c: 399:     EECON1bits.CFGS = 0;
 41248   00A686  9C7F               	bcf	127,6,c	;volsfr
 41249                           
 41250                           ; BSR set to: 0
 41251                           ;../../VLCBlib_PIC/nvm.c: 400:     EECON1bits.FREE = 0;
 41252   00A688  987F               	bcf	127,4,c	;volsfr
 41253                           
 41254                           ; BSR set to: 0
 41255                           ;../../VLCBlib_PIC/nvm.c: 401:     EECON1bits.WREN = 1;
 41256   00A68A  847F               	bsf	127,2,c	;volsfr
 41257                           
 41258                           ; BSR set to: 0
 41259                           ;../../VLCBlib_PIC/nvm.c: 403:     EECON2 = 0x55;
 41260   00A68C  0E55               	movlw	85
 41261   00A68E  6E7E               	movwf	126,c	;volsfr
 41262                           
 41263                           ; BSR set to: 0
 41264                           ;../../VLCBlib_PIC/nvm.c: 404:     EECON2 = 0xAA;
 41265   00A690  0EAA               	movlw	170
 41266   00A692  6E7E               	movwf	126,c	;volsfr
 41267                           
 41268                           ; BSR set to: 0
 41269                           ;../../VLCBlib_PIC/nvm.c: 405:     EECON1bits.WR = 1;
 41270   00A694  827F               	bsf	127,1,c	;volsfr
 41271                           
 41272                           ; BSR set to: 0
 41273                           ;../../VLCBlib_PIC/nvm.c: 406:     EECON1bits.WREN = 0;
 41274   00A696  947F               	bcf	127,2,c	;volsfr
 41275                           
 41276                           ; BSR set to: 0
 41277                           ;../../VLCBlib_PIC/nvm.c: 427:     if (interruptEnabled) {
 41278   00A698  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 41279   00A69A  B4D8               	btfsc	status,2,c
 41280   00A69C  D002               	goto	l18064
 41281                           
 41282                           ; BSR set to: 0
 41283                           ;../../VLCBlib_PIC/nvm.c: 428:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41284   00A69E  8EF2               	bsf	242,7,c	;volatile
 41285   00A6A0  8CF2               	bsf	242,6,c	;volatile
 41286   00A6A2                     l18064:
 41287                           
 41288                           ; BSR set to: 0
 41289                           ;../../VLCBlib_PIC/nvm.c: 430:     flashFlags.asByte = 0;
 41290   00A6A2  0E00               	movlw	0
 41291   00A6A4  6FB9               	movwf	_flashFlags& (0+255),b
 41292                           
 41293                           ; BSR set to: 0
 41294   00A6A6  0012               	return		;funcret
 41295   00A6A8                     __end_of_flushFlashBlock:
 41296                           	callstack 0
 41297                           
 41298 ;; *************** function _eraseFlashBlock *****************
 41299 ;; Defined at:
 41300 ;;		line 313 in file "../../VLCBlib_PIC/nvm.c"
 41301 ;; Parameters:    Size  Location     Type
 41302 ;;		None
 41303 ;; Auto vars:     Size  Location     Type
 41304 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 41305 ;; Return value:  Size  Location     Type
 41306 ;;                  1    wreg      void 
 41307 ;; Registers used:
 41308 ;;		wreg, status,2, cstack
 41309 ;; Tracked objects:
 41310 ;;		On entry : 0/0
 41311 ;;		On exit  : 0/0
 41312 ;;		Unchanged: 0/0
 41313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41318 ;;Total ram usage:        1 bytes
 41319 ;; Hardware stack levels used: 1
 41320 ;; Hardware stack levels required when called: 14
 41321 ;; This function calls:
 41322 ;;		_APP_isSuitableTimeToWriteFlash
 41323 ;; This function is called by:
 41324 ;;		_flushFlashBlock
 41325 ;;		_FLASH_Write
 41326 ;; This function uses a non-reentrant model
 41327 ;;
 41328                           
 41329                           	psect	text176
 41330   00B76E                     __ptext176:
 41331                           	callstack 0
 41332   00B76E                     _eraseFlashBlock:
 41333                           	callstack 11
 41334                           
 41335                           ;../../VLCBlib_PIC/nvm.c: 317:     while (! APP_isSuitableTimeToWriteFlash())
 41336                           
 41337                           ;../../VLCBlib_PIC/nvm.c: 314:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 31
      +                          7:     while (! APP_isSuitableTimeToWriteFlash())
 41338                           
 41339                           ; BSR set to: 0
 41340                           ;incstack = 0
 41341   00B76E  ECC1  F061         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 41342   00B772  0900               	iorlw	0
 41343   00B774  B4D8               	btfsc	status,2,c
 41344   00B776  D7FB               	goto	__ptext176
 41345                           
 41346                           ;../../VLCBlib_PIC/nvm.c: 320:     interruptEnabled = (INTCONbits.GIEH);
 41347   00B778  0E00               	movlw	0
 41348   00B77A  BEF2               	btfsc	242,7,c	;volatile
 41349   00B77C  0E01               	movlw	1
 41350   00B77E  0100               	movlb	0	; () banked
 41351   00B780  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 41352                           
 41353                           ; BSR set to: 0
 41354                           ;../../VLCBlib_PIC/nvm.c: 322:     TBLPTR = flashBlock;
 41355   00B782  C0AE  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41356   00B786  C0AF  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41357   00B78A  6AF8               	clrf	248,c	;volatile
 41358                           
 41359                           ;../../VLCBlib_PIC/nvm.c: 323:     TBLPTRU = 0;
 41360   00B78C  0E00               	movlw	0
 41361   00B78E  6EF8               	movwf	248,c	;volatile
 41362                           
 41363                           ; BSR set to: 0
 41364                           ;../../VLCBlib_PIC/nvm.c: 324:     EECON1bits.EEPGD = 1;
 41365   00B790  8E7F               	bsf	127,7,c	;volsfr
 41366                           
 41367                           ; BSR set to: 0
 41368                           ;../../VLCBlib_PIC/nvm.c: 325:     EECON1bits.CFGS = 0;
 41369   00B792  9C7F               	bcf	127,6,c	;volsfr
 41370                           
 41371                           ; BSR set to: 0
 41372                           ;../../VLCBlib_PIC/nvm.c: 326:     EECON1bits.WREN = 1;
 41373   00B794  847F               	bsf	127,2,c	;volsfr
 41374                           
 41375                           ; BSR set to: 0
 41376                           ;../../VLCBlib_PIC/nvm.c: 327:     EECON1bits.FREE = 1;
 41377   00B796  887F               	bsf	127,4,c	;volsfr
 41378                           
 41379                           ; BSR set to: 0
 41380                           ;../../VLCBlib_PIC/nvm.c: 328:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41381   00B798  9EF2               	bcf	242,7,c	;volatile
 41382                           
 41383                           ; BSR set to: 0
 41384   00B79A  9CF2               	bcf	242,6,c	;volatile
 41385                           
 41386                           ;../../VLCBlib_PIC/nvm.c: 329:     EECON2 = 0x55;
 41387   00B79C  0E55               	movlw	85
 41388   00B79E  6E7E               	movwf	126,c	;volsfr
 41389                           
 41390                           ;../../VLCBlib_PIC/nvm.c: 330:     EECON2 = 0xaa;
 41391   00B7A0  0EAA               	movlw	170
 41392   00B7A2  6E7E               	movwf	126,c	;volsfr
 41393                           
 41394                           ; BSR set to: 0
 41395                           ;../../VLCBlib_PIC/nvm.c: 331:     EECON1bits.WR = 1;
 41396   00B7A4  827F               	bsf	127,1,c	;volsfr
 41397   00B7A6                     l2574:
 41398                           
 41399                           ;../../VLCBlib_PIC/nvm.c: 332:     while(EECON1bits.WR)
 41400   00B7A6  B27F               	btfsc	127,1,c	;volsfr
 41401   00B7A8  D7FE               	goto	l2574
 41402                           
 41403                           ;../../VLCBlib_PIC/nvm.c: 334:     EECON1bits.WREN = 0;
 41404   00B7AA  947F               	bcf	127,2,c	;volsfr
 41405                           
 41406                           ;../../VLCBlib_PIC/nvm.c: 354:     if (interruptEnabled) {
 41407   00B7AC  0100               	movlb	0	; () banked
 41408   00B7AE  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 41409   00B7B0  B4D8               	btfsc	status,2,c
 41410   00B7B2  0012               	return	
 41411                           
 41412                           ; BSR set to: 0
 41413                           ;../../VLCBlib_PIC/nvm.c: 355:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41414   00B7B4  8EF2               	bsf	242,7,c	;volatile
 41415   00B7B6  8CF2               	bsf	242,6,c	;volatile
 41416                           
 41417                           ; BSR set to: 0
 41418   00B7B8  0012               	return		;funcret
 41419   00B7BA                     __end_of_eraseFlashBlock:
 41420                           	callstack 0
 41421                           
 41422 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 41423 ;; Defined at:
 41424 ;;		line 377 in file "../main.c"
 41425 ;; Parameters:    Size  Location     Type
 41426 ;;		None
 41427 ;; Auto vars:     Size  Location     Type
 41428 ;;		None
 41429 ;; Return value:  Size  Location     Type
 41430 ;;                  1    wreg      enum E12676
 41431 ;; Registers used:
 41432 ;;		wreg, status,2, cstack
 41433 ;; Tracked objects:
 41434 ;;		On entry : 0/0
 41435 ;;		On exit  : 0/0
 41436 ;;		Unchanged: 0/0
 41437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41442 ;;Total ram usage:        0 bytes
 41443 ;; Hardware stack levels used: 1
 41444 ;; Hardware stack levels required when called: 13
 41445 ;; This function calls:
 41446 ;;		_isNoServoPulses
 41447 ;; This function is called by:
 41448 ;;		_eraseFlashBlock
 41449 ;;		_flushFlashBlock
 41450 ;; This function uses a non-reentrant model
 41451 ;;
 41452                           
 41453                           	psect	text177
 41454   00C382                     __ptext177:
 41455                           	callstack 0
 41456   00C382                     _APP_isSuitableTimeToWriteFlash:
 41457                           	callstack 11
 41458                           
 41459                           ;../main.c: 379:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 41460                           
 41461                           ; BSR set to: 0
 41462                           ;incstack = 0
 41463   00C382  ECCA  F061         	call	_isNoServoPulses	;wreg free
 41464   00C386  0900               	iorlw	0
 41465   00C388  B4D8               	btfsc	status,2,c
 41466   00C38A  D002               	goto	u17670
 41467   00C38C  0E01               	movlw	1
 41468   00C38E  0012               	return	
 41469   00C390                     u17670:
 41470   00C390  0E00               	movlw	0
 41471   00C392  0012               	return		;funcret
 41472   00C394                     __end_of_APP_isSuitableTimeToWriteFlash:
 41473                           	callstack 0
 41474                           
 41475 ;; *************** function _isNoServoPulses *****************
 41476 ;; Defined at:
 41477 ;;		line 694 in file "../servo.c"
 41478 ;; Parameters:    Size  Location     Type
 41479 ;;		None
 41480 ;; Auto vars:     Size  Location     Type
 41481 ;;		None
 41482 ;; Return value:  Size  Location     Type
 41483 ;;                  1    wreg      enum E12700
 41484 ;; Registers used:
 41485 ;;		wreg
 41486 ;; Tracked objects:
 41487 ;;		On entry : 0/0
 41488 ;;		On exit  : 0/0
 41489 ;;		Unchanged: 0/0
 41490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41495 ;;Total ram usage:        0 bytes
 41496 ;; Hardware stack levels used: 1
 41497 ;; Hardware stack levels required when called: 12
 41498 ;; This function calls:
 41499 ;;		Nothing
 41500 ;; This function is called by:
 41501 ;;		_APP_isSuitableTimeToWriteFlash
 41502 ;; This function uses a non-reentrant model
 41503 ;;
 41504                           
 41505                           	psect	text178
 41506   00C394                     __ptext178:
 41507                           	callstack 0
 41508   00C394                     _isNoServoPulses:
 41509                           	callstack 11
 41510                           
 41511                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 41512                           
 41513                           ;incstack = 0
 41514   00C394  A0CD               	btfss	205,0,c	;volatile
 41515   00C396  D002               	goto	l1132
 41516   00C398                     u17650:
 41517   00C398  0E00               	movlw	0
 41518   00C39A  0012               	return	
 41519   00C39C                     l1132:
 41520                           
 41521                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 41522   00C39C  B0B1               	btfsc	177,0,c	;volatile
 41523   00C39E  D7FC               	goto	u17650
 41524                           
 41525                           ;../servo.c: 699:     return TRUE;
 41526   00C3A0  0E01               	movlw	1
 41527   00C3A2  0012               	return		;funcret
 41528   00C3A4                     __end_of_isNoServoPulses:
 41529                           	callstack 0
 41530                           
 41531 ;; *************** function _EEPROM_Write *****************
 41532 ;; Defined at:
 41533 ;;		line 207 in file "../../VLCBlib_PIC/nvm.c"
 41534 ;; Parameters:    Size  Location     Type
 41535 ;;  index           2   47[BANK0 ] unsigned short 
 41536 ;;  value           1   49[BANK0 ] unsigned char 
 41537 ;; Auto vars:     Size  Location     Type
 41538 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 41539 ;; Return value:  Size  Location     Type
 41540 ;;                  1    wreg      unsigned char 
 41541 ;; Registers used:
 41542 ;;		wreg, status,2, status,0, cstack
 41543 ;; Tracked objects:
 41544 ;;		On entry : 0/0
 41545 ;;		On exit  : 0/0
 41546 ;;		Unchanged: 0/0
 41547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41548 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41549 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41551 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41552 ;;Total ram usage:        4 bytes
 41553 ;; Hardware stack levels used: 1
 41554 ;; Hardware stack levels required when called: 13
 41555 ;; This function calls:
 41556 ;;		_EEPROM_Read
 41557 ;;		_updateModuleErrorStatus
 41558 ;; This function is called by:
 41559 ;;		_writeNVM
 41560 ;; This function uses a non-reentrant model
 41561 ;;
 41562                           
 41563                           	psect	text179
 41564   00AE2C                     __ptext179:
 41565                           	callstack 0
 41566   00AE2C                     _EEPROM_Write:
 41567                           	callstack 14
 41568                           
 41569                           ;../../VLCBlib_PIC/nvm.c: 208:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 20
      +                          9:     interruptEnabled = (INTCONbits.GIEH);
 41570                           
 41571                           ;incstack = 0
 41572   00AE2C  0E00               	movlw	0
 41573   00AE2E  BEF2               	btfsc	242,7,c	;volatile
 41574   00AE30  0E01               	movlw	1
 41575   00AE32  0100               	movlb	0	; () banked
 41576   00AE34  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 41577   00AE36                     l18182:
 41578                           
 41579                           ;../../VLCBlib_PIC/nvm.c: 212:         EEADRH = (index >> 8)&0xFF;
 41580   00AE36  0100               	movlb	0	; () banked
 41581   00AE38  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 41582   00AE3A  6E75               	movwf	117,c	;volatile
 41583                           
 41584                           ; BSR set to: 0
 41585                           ;../../VLCBlib_PIC/nvm.c: 213:         EEADR = index & 0xFF;
 41586   00AE3C  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 41587                           
 41588                           ; BSR set to: 0
 41589                           ;../../VLCBlib_PIC/nvm.c: 214:         EEDATA = value;
 41590   00AE40  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 41591                           
 41592                           ; BSR set to: 0
 41593                           ;../../VLCBlib_PIC/nvm.c: 215:         EECON1bits.EEPGD = 0;
 41594   00AE44  9E7F               	bcf	127,7,c	;volsfr
 41595                           
 41596                           ; BSR set to: 0
 41597                           ;../../VLCBlib_PIC/nvm.c: 216:         EECON1bits.CFGS = 0;
 41598   00AE46  9C7F               	bcf	127,6,c	;volsfr
 41599                           
 41600                           ; BSR set to: 0
 41601                           ;../../VLCBlib_PIC/nvm.c: 217:         EECON1bits.WREN = 1;
 41602   00AE48  847F               	bsf	127,2,c	;volsfr
 41603                           
 41604                           ; BSR set to: 0
 41605                           ;../../VLCBlib_PIC/nvm.c: 219:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 41606   00AE4A  9EF2               	bcf	242,7,c	;volatile
 41607                           
 41608                           ; BSR set to: 0
 41609   00AE4C  9CF2               	bcf	242,6,c	;volatile
 41610                           
 41611                           ; BSR set to: 0
 41612                           ;../../VLCBlib_PIC/nvm.c: 220:         EECON2 = 0x55;
 41613   00AE4E  0E55               	movlw	85
 41614   00AE50  6E7E               	movwf	126,c	;volsfr
 41615                           
 41616                           ; BSR set to: 0
 41617                           ;../../VLCBlib_PIC/nvm.c: 221:         EECON2 = 0xAA;
 41618   00AE52  0EAA               	movlw	170
 41619   00AE54  6E7E               	movwf	126,c	;volsfr
 41620                           
 41621                           ; BSR set to: 0
 41622                           ;../../VLCBlib_PIC/nvm.c: 222:         EECON1bits.WR = 1;
 41623   00AE56  827F               	bsf	127,1,c	;volsfr
 41624   00AE58                     l2554:
 41625                           
 41626                           ;../../VLCBlib_PIC/nvm.c: 223:         while (EECON1bits.WR)
 41627   00AE58  B27F               	btfsc	127,1,c	;volsfr
 41628   00AE5A  D7FE               	goto	l2554
 41629   00AE5C                     u17910:
 41630                           
 41631                           ;../../VLCBlib_PIC/nvm.c: 225:         while (!EEIF)
 41632                           
 41633                           ;../../VLCBlib_PIC/nvm.c: 226:             ;
 41634   00AE5C  ACB7               	btfss	4023,6,c	;volatile
 41635   00AE5E  D7FE               	goto	u17910
 41636                           
 41637                           ;../../VLCBlib_PIC/nvm.c: 227:         EEIF = 0;
 41638   00AE60  9CB7               	bcf	4023,6,c	;volatile
 41639                           
 41640                           ;../../VLCBlib_PIC/nvm.c: 228:         if (interruptEnabled) {
 41641   00AE62  0100               	movlb	0	; () banked
 41642   00AE64  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 41643   00AE66  B4D8               	btfsc	status,2,c
 41644   00AE68  D002               	goto	l2560
 41645                           
 41646                           ; BSR set to: 0
 41647                           ;../../VLCBlib_PIC/nvm.c: 230:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 41648   00AE6A  8EF2               	bsf	242,7,c	;volatile
 41649   00AE6C  8CF2               	bsf	242,6,c	;volatile
 41650   00AE6E                     l2560:
 41651                           
 41652                           ; BSR set to: 0
 41653                           ;../../VLCBlib_PIC/nvm.c: 232:         EECON1bits.WREN = 0;
 41654   00AE6E  947F               	bcf	127,2,c	;volsfr
 41655                           
 41656                           ; BSR set to: 0
 41657                           ;../../VLCBlib_PIC/nvm.c: 268:         if (EEPROM_Read(index) == value) {
 41658   00AE70  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 41659   00AE74  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 41660   00AE78  EC3F  F061         	call	_EEPROM_Read	;wreg free
 41661   00AE7C  0100               	movlb	0	; () banked
 41662   00AE7E  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 41663   00AE80  B4D8               	btfsc	status,2,c
 41664   00AE82  D006               	goto	l18216
 41665                           
 41666                           ; BSR set to: 0
 41667                           ;../../VLCBlib_PIC/nvm.c: 271:         mnsDiagnostics[0x03].asUint++;
 41668   00AE84  0101               	movlb	1	; () banked
 41669   00AE86  4BA4               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 41670   00AE88  2BA5               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 41671                           
 41672                           ; BSR set to: 1
 41673                           ;../../VLCBlib_PIC/nvm.c: 272:         updateModuleErrorStatus();
 41674   00AE8A  ECD2  F061         	call	_updateModuleErrorStatus	;wreg free
 41675                           
 41676                           ;../../VLCBlib_PIC/nvm.c: 273:     } while (1);
 41677   00AE8E  D7D3               	goto	l18182
 41678   00AE90                     l18216:
 41679                           
 41680                           ; BSR set to: 0
 41681                           ;../../VLCBlib_PIC/nvm.c: 274:     return GRSP_OK;
 41682   00AE90  0E00               	movlw	0
 41683                           
 41684                           ; BSR set to: 0
 41685   00AE92  0012               	return		;funcret
 41686   00AE94                     __end_of_EEPROM_Write:
 41687                           	callstack 0
 41688                           
 41689 ;; *************** function _updateModuleErrorStatus *****************
 41690 ;; Defined at:
 41691 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 41692 ;; Parameters:    Size  Location     Type
 41693 ;;		None
 41694 ;; Auto vars:     Size  Location     Type
 41695 ;;		None
 41696 ;; Return value:  Size  Location     Type
 41697 ;;                  1    wreg      void 
 41698 ;; Registers used:
 41699 ;;		wreg, status,2, status,0
 41700 ;; Tracked objects:
 41701 ;;		On entry : 0/0
 41702 ;;		On exit  : 0/0
 41703 ;;		Unchanged: 0/0
 41704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41709 ;;Total ram usage:        0 bytes
 41710 ;; Hardware stack levels used: 1
 41711 ;; Hardware stack levels required when called: 12
 41712 ;; This function calls:
 41713 ;;		Nothing
 41714 ;; This function is called by:
 41715 ;;		_EEPROM_Write
 41716 ;;		_canSendMessage
 41717 ;;		_processEnumeration
 41718 ;; This function uses a non-reentrant model
 41719 ;;
 41720                           
 41721                           	psect	text180
 41722   00C3A4                     __ptext180:
 41723                           	callstack 0
 41724   00C3A4                     _updateModuleErrorStatus:
 41725                           	callstack 14
 41726                           
 41727                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 41728                           
 41729                           ; BSR set to: 0
 41730                           ;incstack = 0
 41731   00C3A4  0101               	movlb	1	; () banked
 41732   00C3A6  299E               	incf	_mnsDiagnostics& (0+255),w,b
 41733   00C3A8  B4D8               	btfsc	status,2,c
 41734   00C3AA  0012               	return	
 41735                           
 41736                           ; BSR set to: 1
 41737                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 41738   00C3AC  2B9E               	incf	_mnsDiagnostics& (0+255),f,b
 41739                           
 41740                           ; BSR set to: 1
 41741   00C3AE  0012               	return		;funcret
 41742   00C3B0                     __end_of_updateModuleErrorStatus:
 41743                           	callstack 0
 41744                           
 41745 ;; *************** function _setDigitalOutput *****************
 41746 ;; Defined at:
 41747 ;;		line 224 in file "../digitalOut.c"
 41748 ;; Parameters:    Size  Location     Type
 41749 ;;  io              1    wreg     unsigned char 
 41750 ;;  state           1   55[BANK0 ] unsigned char 
 41751 ;; Auto vars:     Size  Location     Type
 41752 ;;  io              1   57[BANK0 ] unsigned char 
 41753 ;;  pinState        1   56[BANK0 ] enum E12700
 41754 ;; Return value:  Size  Location     Type
 41755 ;;                  1    wreg      void 
 41756 ;; Registers used:
 41757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41758 ;; Tracked objects:
 41759 ;;		On entry : 0/0
 41760 ;;		On exit  : 0/0
 41761 ;;		Unchanged: 0/0
 41762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41763 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41764 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41766 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41767 ;;Total ram usage:        3 bytes
 41768 ;; Hardware stack levels used: 1
 41769 ;; Hardware stack levels required when called: 13
 41770 ;; This function calls:
 41771 ;;		_getNV
 41772 ;;		_setOutputPin
 41773 ;; This function is called by:
 41774 ;;		_configIO
 41775 ;;		_setOutputPosition
 41776 ;; This function uses a non-reentrant model
 41777 ;;
 41778                           
 41779                           	psect	text181
 41780   00A3F8                     __ptext181:
 41781                           	callstack 0
 41782   00A3F8                     _setDigitalOutput:
 41783                           	callstack 14
 41784                           
 41785                           ; BSR set to: 1
 41786                           ;incstack = 0
 41787                           ;setDigitalOutput@io stored from wreg
 41788   00A3F8  0100               	movlb	0	; () banked
 41789   00A3FA  6F99               	movwf	setDigitalOutput@io& (0+255),b
 41790                           
 41791                           ;../digitalOut.c: 225:     Boolean pinState;;../digitalOut.c: 226:     switch (state) {
 41792   00A3FC  D038               	goto	l18880
 41793   00A3FE                     l18864:
 41794                           
 41795                           ; BSR set to: 0
 41796                           ;../digitalOut.c: 228:             state = 2;
 41797   00A3FE  0E02               	movlw	2
 41798   00A400  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41799   00A402                     l18866:
 41800                           
 41801                           ; BSR set to: 0
 41802                           ;../digitalOut.c: 232:             pinState = (state == 1);
 41803   00A402  0597               	decf	setDigitalOutput@state& (0+255),w,b
 41804   00A404  A4D8               	btfss	status,2,c
 41805   00A406  D002               	goto	u18830
 41806   00A408  0E01               	movlw	1
 41807   00A40A  D001               	goto	u18840
 41808   00A40C                     u18830:
 41809   00A40C  0E00               	movlw	0
 41810   00A40E                     u18840:
 41811   00A40E  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 41812                           
 41813                           ; BSR set to: 0
 41814                           ;../digitalOut.c: 236:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 41815   00A410  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41816   00A412  0D07               	mullw	7
 41817   00A414  50F3               	movf	243,w,c
 41818   00A416  0F11               	addlw	17
 41819   00A418  EC7F  F05D         	call	_getNV
 41820   00A41C  0100               	movlb	0	; () banked
 41821   00A41E  AB8D               	btfss	?_getNV& (0+255),5,b
 41822   00A420  D00B               	goto	l18872
 41823                           
 41824                           ; BSR set to: 0
 41825                           ;../digitalOut.c: 237:                 setOutputPin(io, ! pinState);
 41826   00A422  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 41827   00A424  A4D8               	btfss	status,2,c
 41828   00A426  D002               	goto	u18860
 41829   00A428  0E01               	movlw	1
 41830   00A42A  D001               	goto	u18870
 41831   00A42C                     u18860:
 41832   00A42C  0E00               	movlw	0
 41833   00A42E                     u18870:
 41834   00A42E  6F91               	movwf	setOutputPin@state& (0+255),b
 41835   00A430  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41836   00A432  EC89  F037         	call	_setOutputPin
 41837                           
 41838                           ;../digitalOut.c: 238:             } else {
 41839   00A436  0012               	return	
 41840   00A438                     l18872:
 41841                           
 41842                           ; BSR set to: 0
 41843                           ;../digitalOut.c: 239:                 setOutputPin(io, pinState);
 41844   00A438  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 41845   00A43C  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41846   00A43E  EC89  F037         	call	_setOutputPin
 41847   00A442  0012               	return	
 41848   00A444                     l18874:
 41849                           
 41850                           ; BSR set to: 0
 41851                           ;../digitalOut.c: 243:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 41852   00A444  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41853   00A446  0D07               	mullw	7
 41854   00A448  50F3               	movf	243,w,c
 41855   00A44A  0F13               	addlw	19
 41856   00A44C  EC7F  F05D         	call	_getNV
 41857   00A450  0ED4               	movlw	low _flashDelays
 41858   00A452  0100               	movlb	0	; () banked
 41859   00A454  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 41860   00A456  6ED9               	movwf	fsr2l,c
 41861   00A458  6ADA               	clrf	fsr2h,c
 41862   00A45A  0E02               	movlw	high _flashDelays
 41863   00A45C  22DA               	addwfc	fsr2h,f,c
 41864   00A45E  C08D  FFDF         	movff	?_getNV,indf2
 41865                           
 41866                           ; BSR set to: 0
 41867                           ;../digitalOut.c: 244:             setOutputPin(io, TRUE);
 41868   00A462  0E01               	movlw	1
 41869   00A464  6F91               	movwf	setOutputPin@state& (0+255),b
 41870   00A466  5199               	movf	setDigitalOutput@io& (0+255),w,b
 41871   00A468  EC89  F037         	call	_setOutputPin
 41872                           
 41873                           ;../digitalOut.c: 245:             break;
 41874   00A46C  0012               	return	
 41875   00A46E                     l18880:
 41876   00A46E  0100               	movlb	0	; () banked
 41877   00A470  5197               	movf	setDigitalOutput@state& (0+255),w,b
 41878                           
 41879                           ; Switch size 1, requested type "simple"
 41880                           ; Number of cases is 3, Range of values is 1 to 3
 41881                           ; switch strategies available:
 41882                           ; Name         Instructions Cycles
 41883                           ; simple_byte           10     6 (average)
 41884                           ;	Chosen strategy is simple_byte
 41885   00A472  0A01               	xorlw	1	; case 1
 41886   00A474  B4D8               	btfsc	status,2,c
 41887   00A476  D7C5               	goto	l18866
 41888   00A478  0A03               	xorlw	3	; case 2
 41889   00A47A  B4D8               	btfsc	status,2,c
 41890   00A47C  D7C2               	goto	l18866
 41891   00A47E  0A01               	xorlw	1	; case 3
 41892   00A480  B4D8               	btfsc	status,2,c
 41893   00A482  D7E0               	goto	l18874
 41894   00A484  D7BC               	goto	l18864
 41895   00A486                     __end_of_setDigitalOutput:
 41896                           	callstack 0
 41897                           
 41898 ;; *************** function _setOutputPin *****************
 41899 ;; Defined at:
 41900 ;;		line 254 in file "../digitalOut.c"
 41901 ;; Parameters:    Size  Location     Type
 41902 ;;  io              1    wreg     unsigned char 
 41903 ;;  state           1   49[BANK0 ] enum E12700
 41904 ;; Auto vars:     Size  Location     Type
 41905 ;;  io              1   52[BANK0 ] unsigned char 
 41906 ;; Return value:  Size  Location     Type
 41907 ;;                  1    wreg      void 
 41908 ;; Registers used:
 41909 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 41910 ;; Tracked objects:
 41911 ;;		On entry : 0/0
 41912 ;;		On exit  : 0/0
 41913 ;;		Unchanged: 0/0
 41914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41915 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41918 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41919 ;;Total ram usage:        4 bytes
 41920 ;; Hardware stack levels used: 1
 41921 ;; Hardware stack levels required when called: 12
 41922 ;; This function calls:
 41923 ;;		Nothing
 41924 ;; This function is called by:
 41925 ;;		_startDigitalOutput
 41926 ;;		_processOutputs
 41927 ;;		_setDigitalOutput
 41928 ;;		_setOutputPosition
 41929 ;;		_setupTimer1
 41930 ;;		_setupTimer3
 41931 ;; This function uses a non-reentrant model
 41932 ;;
 41933                           
 41934                           	psect	text182
 41935   006F12                     __ptext182:
 41936                           	callstack 0
 41937   006F12                     _setOutputPin:
 41938                           	callstack 15
 41939                           
 41940                           ;incstack = 0
 41941                           ;setOutputPin@io stored from wreg
 41942   006F12  0100               	movlb	0	; () banked
 41943   006F14  6F94               	movwf	setOutputPin@io& (0+255),b
 41944                           
 41945                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 41946   006F16  D0C0               	goto	l18730
 41947   006F18                     l18710:
 41948                           
 41949                           ; BSR set to: 0
 41950                           ;../digitalOut.c: 257:             if (state) {
 41951   006F18  5191               	movf	setOutputPin@state& (0+255),w,b
 41952   006F1A  B4D8               	btfsc	status,2,c
 41953   006F1C  D01E               	goto	l18714
 41954                           
 41955                           ; BSR set to: 0
 41956                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 41957   006F1E  5194               	movf	setOutputPin@io& (0+255),w,b
 41958   006F20  0D04               	mullw	4
 41959   006F22  0E02               	movlw	2
 41960   006F24  26F3               	addwf	243,f,c
 41961   006F26  0E00               	movlw	0
 41962   006F28  22F4               	addwfc	244,f,c
 41963   006F2A  0E35               	movlw	low _configs
 41964   006F2C  24F3               	addwf	243,w,c
 41965   006F2E  6EF6               	movwf	tblptrl,c
 41966   006F30  0EEE               	movlw	high _configs
 41967   006F32  20F4               	addwfc	244,w,c
 41968   006F34  6EF7               	movwf	tblptrh,c
 41969   006F36                     	if	1	;There are 3 active tblptr bytes
 41970   006F36  6AF8               	clrf	tblptru,c
 41971   006F38  0E00               	movlw	low (__mediumconst shr (0+16))
 41972   006F3A  22F8               	addwfc	tblptru,f,c
 41973   006F3C                     	endif
 41974   006F3C  0008               	tblrd		*
 41975   006F3E  CFF5 F092          	movff	tablat,??_setOutputPin
 41976   006F42  0E01               	movlw	1
 41977   006F44  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 41978   006F46  2B92               	incf	??_setOutputPin& (0+255),f,b
 41979   006F48  D002               	goto	u18574
 41980   006F4A                     u18575:
 41981   006F4A  90D8               	bcf	status,0,c
 41982   006F4C  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 41983   006F4E                     u18574:
 41984   006F4E  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 41985   006F50  D7FC               	goto	u18575
 41986   006F52  0100               	movlb	0	; () banked
 41987   006F54  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 41988   006F56  1289               	iorwf	137,f,c	;volatile
 41989                           
 41990                           ;../digitalOut.c: 260:             } else {
 41991   006F58  0012               	return	
 41992   006F5A                     l18714:
 41993                           
 41994                           ; BSR set to: 0
 41995                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 41996   006F5A  5194               	movf	setOutputPin@io& (0+255),w,b
 41997   006F5C  0D04               	mullw	4
 41998   006F5E  0E02               	movlw	2
 41999   006F60  26F3               	addwf	243,f,c
 42000   006F62  0E00               	movlw	0
 42001   006F64  22F4               	addwfc	244,f,c
 42002   006F66  0E35               	movlw	low _configs
 42003   006F68  24F3               	addwf	243,w,c
 42004   006F6A  6EF6               	movwf	tblptrl,c
 42005   006F6C  0EEE               	movlw	high _configs
 42006   006F6E  20F4               	addwfc	244,w,c
 42007   006F70  6EF7               	movwf	tblptrh,c
 42008   006F72                     	if	1	;There are 3 active tblptr bytes
 42009   006F72  6AF8               	clrf	tblptru,c
 42010   006F74  0E00               	movlw	low (__mediumconst shr (0+16))
 42011   006F76  22F8               	addwfc	tblptru,f,c
 42012   006F78                     	endif
 42013   006F78  0008               	tblrd		*
 42014   006F7A  CFF5 F092          	movff	tablat,??_setOutputPin
 42015   006F7E  0E01               	movlw	1
 42016   006F80  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42017   006F82  2B92               	incf	??_setOutputPin& (0+255),f,b
 42018   006F84  D002               	goto	u18584
 42019   006F86                     u18585:
 42020   006F86  90D8               	bcf	status,0,c
 42021   006F88  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42022   006F8A                     u18584:
 42023   006F8A  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42024   006F8C  D7FC               	goto	u18585
 42025   006F8E  0100               	movlb	0	; () banked
 42026   006F90  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42027   006F92  0AFF               	xorlw	255
 42028   006F94  1689               	andwf	137,f,c	;volatile
 42029   006F96  0012               	return	
 42030   006F98                     l18716:
 42031                           
 42032                           ; BSR set to: 0
 42033                           ;../digitalOut.c: 266:             if (state) {
 42034   006F98  5191               	movf	setOutputPin@state& (0+255),w,b
 42035   006F9A  B4D8               	btfsc	status,2,c
 42036   006F9C  D01E               	goto	l18720
 42037                           
 42038                           ; BSR set to: 0
 42039                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 42040   006F9E  5194               	movf	setOutputPin@io& (0+255),w,b
 42041   006FA0  0D04               	mullw	4
 42042   006FA2  0E02               	movlw	2
 42043   006FA4  26F3               	addwf	243,f,c
 42044   006FA6  0E00               	movlw	0
 42045   006FA8  22F4               	addwfc	244,f,c
 42046   006FAA  0E35               	movlw	low _configs
 42047   006FAC  24F3               	addwf	243,w,c
 42048   006FAE  6EF6               	movwf	tblptrl,c
 42049   006FB0  0EEE               	movlw	high _configs
 42050   006FB2  20F4               	addwfc	244,w,c
 42051   006FB4  6EF7               	movwf	tblptrh,c
 42052   006FB6                     	if	1	;There are 3 active tblptr bytes
 42053   006FB6  6AF8               	clrf	tblptru,c
 42054   006FB8  0E00               	movlw	low (__mediumconst shr (0+16))
 42055   006FBA  22F8               	addwfc	tblptru,f,c
 42056   006FBC                     	endif
 42057   006FBC  0008               	tblrd		*
 42058   006FBE  CFF5 F092          	movff	tablat,??_setOutputPin
 42059   006FC2  0E01               	movlw	1
 42060   006FC4  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42061   006FC6  2B92               	incf	??_setOutputPin& (0+255),f,b
 42062   006FC8  D002               	goto	u18604
 42063   006FCA                     u18605:
 42064   006FCA  90D8               	bcf	status,0,c
 42065   006FCC  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42066   006FCE                     u18604:
 42067   006FCE  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42068   006FD0  D7FC               	goto	u18605
 42069   006FD2  0100               	movlb	0	; () banked
 42070   006FD4  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42071   006FD6  128A               	iorwf	138,f,c	;volatile
 42072                           
 42073                           ;../digitalOut.c: 269:             } else {
 42074   006FD8  0012               	return	
 42075   006FDA                     l18720:
 42076                           
 42077                           ; BSR set to: 0
 42078                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 42079   006FDA  5194               	movf	setOutputPin@io& (0+255),w,b
 42080   006FDC  0D04               	mullw	4
 42081   006FDE  0E02               	movlw	2
 42082   006FE0  26F3               	addwf	243,f,c
 42083   006FE2  0E00               	movlw	0
 42084   006FE4  22F4               	addwfc	244,f,c
 42085   006FE6  0E35               	movlw	low _configs
 42086   006FE8  24F3               	addwf	243,w,c
 42087   006FEA  6EF6               	movwf	tblptrl,c
 42088   006FEC  0EEE               	movlw	high _configs
 42089   006FEE  20F4               	addwfc	244,w,c
 42090   006FF0  6EF7               	movwf	tblptrh,c
 42091   006FF2                     	if	1	;There are 3 active tblptr bytes
 42092   006FF2  6AF8               	clrf	tblptru,c
 42093   006FF4  0E00               	movlw	low (__mediumconst shr (0+16))
 42094   006FF6  22F8               	addwfc	tblptru,f,c
 42095   006FF8                     	endif
 42096   006FF8  0008               	tblrd		*
 42097   006FFA  CFF5 F092          	movff	tablat,??_setOutputPin
 42098   006FFE  0E01               	movlw	1
 42099   007000  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42100   007002  2B92               	incf	??_setOutputPin& (0+255),f,b
 42101   007004  D002               	goto	u18614
 42102   007006                     u18615:
 42103   007006  90D8               	bcf	status,0,c
 42104   007008  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42105   00700A                     u18614:
 42106   00700A  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42107   00700C  D7FC               	goto	u18615
 42108   00700E  0100               	movlb	0	; () banked
 42109   007010  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42110   007012  0AFF               	xorlw	255
 42111   007014  168A               	andwf	138,f,c	;volatile
 42112   007016  0012               	return	
 42113   007018                     l18722:
 42114                           
 42115                           ; BSR set to: 0
 42116                           ;../digitalOut.c: 275:             if (state) {
 42117   007018  5191               	movf	setOutputPin@state& (0+255),w,b
 42118   00701A  B4D8               	btfsc	status,2,c
 42119   00701C  D01E               	goto	l18726
 42120                           
 42121                           ; BSR set to: 0
 42122                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 42123   00701E  5194               	movf	setOutputPin@io& (0+255),w,b
 42124   007020  0D04               	mullw	4
 42125   007022  0E02               	movlw	2
 42126   007024  26F3               	addwf	243,f,c
 42127   007026  0E00               	movlw	0
 42128   007028  22F4               	addwfc	244,f,c
 42129   00702A  0E35               	movlw	low _configs
 42130   00702C  24F3               	addwf	243,w,c
 42131   00702E  6EF6               	movwf	tblptrl,c
 42132   007030  0EEE               	movlw	high _configs
 42133   007032  20F4               	addwfc	244,w,c
 42134   007034  6EF7               	movwf	tblptrh,c
 42135   007036                     	if	1	;There are 3 active tblptr bytes
 42136   007036  6AF8               	clrf	tblptru,c
 42137   007038  0E00               	movlw	low (__mediumconst shr (0+16))
 42138   00703A  22F8               	addwfc	tblptru,f,c
 42139   00703C                     	endif
 42140   00703C  0008               	tblrd		*
 42141   00703E  CFF5 F092          	movff	tablat,??_setOutputPin
 42142   007042  0E01               	movlw	1
 42143   007044  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42144   007046  2B92               	incf	??_setOutputPin& (0+255),f,b
 42145   007048  D002               	goto	u18634
 42146   00704A                     u18635:
 42147   00704A  90D8               	bcf	status,0,c
 42148   00704C  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42149   00704E                     u18634:
 42150   00704E  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42151   007050  D7FC               	goto	u18635
 42152   007052  0100               	movlb	0	; () banked
 42153   007054  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42154   007056  128B               	iorwf	139,f,c	;volatile
 42155                           
 42156                           ;../digitalOut.c: 278:             } else {
 42157   007058  0012               	return	
 42158   00705A                     l18726:
 42159                           
 42160                           ; BSR set to: 0
 42161                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 42162   00705A  5194               	movf	setOutputPin@io& (0+255),w,b
 42163   00705C  0D04               	mullw	4
 42164   00705E  0E02               	movlw	2
 42165   007060  26F3               	addwf	243,f,c
 42166   007062  0E00               	movlw	0
 42167   007064  22F4               	addwfc	244,f,c
 42168   007066  0E35               	movlw	low _configs
 42169   007068  24F3               	addwf	243,w,c
 42170   00706A  6EF6               	movwf	tblptrl,c
 42171   00706C  0EEE               	movlw	high _configs
 42172   00706E  20F4               	addwfc	244,w,c
 42173   007070  6EF7               	movwf	tblptrh,c
 42174   007072                     	if	1	;There are 3 active tblptr bytes
 42175   007072  6AF8               	clrf	tblptru,c
 42176   007074  0E00               	movlw	low (__mediumconst shr (0+16))
 42177   007076  22F8               	addwfc	tblptru,f,c
 42178   007078                     	endif
 42179   007078  0008               	tblrd		*
 42180   00707A  CFF5 F092          	movff	tablat,??_setOutputPin
 42181   00707E  0E01               	movlw	1
 42182   007080  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42183   007082  2B92               	incf	??_setOutputPin& (0+255),f,b
 42184   007084  D002               	goto	u18644
 42185   007086                     u18645:
 42186   007086  90D8               	bcf	status,0,c
 42187   007088  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42188   00708A                     u18644:
 42189   00708A  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42190   00708C  D7FC               	goto	u18645
 42191   00708E  0100               	movlb	0	; () banked
 42192   007090  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42193   007092  0AFF               	xorlw	255
 42194   007094  168B               	andwf	139,f,c	;volatile
 42195   007096  0012               	return	
 42196   007098                     l18730:
 42197   007098  0100               	movlb	0	; () banked
 42198   00709A  5194               	movf	setOutputPin@io& (0+255),w,b
 42199   00709C  0D04               	mullw	4
 42200   00709E  0E01               	movlw	1
 42201   0070A0  26F3               	addwf	243,f,c
 42202   0070A2  0E00               	movlw	0
 42203   0070A4  22F4               	addwfc	244,f,c
 42204   0070A6  0E35               	movlw	low _configs
 42205   0070A8  24F3               	addwf	243,w,c
 42206   0070AA  6EF6               	movwf	tblptrl,c
 42207   0070AC  0EEE               	movlw	high _configs
 42208   0070AE  20F4               	addwfc	244,w,c
 42209   0070B0  6EF7               	movwf	tblptrh,c
 42210   0070B2                     	if	1	;There are 3 active tblptr bytes
 42211   0070B2  6AF8               	clrf	tblptru,c
 42212   0070B4  0E00               	movlw	low (__mediumconst shr (0+16))
 42213   0070B6  22F8               	addwfc	tblptru,f,c
 42214   0070B8                     	endif
 42215   0070B8  0008               	tblrd		*
 42216   0070BA  50F5               	movf	tablat,w,c
 42217                           
 42218                           ; Switch size 1, requested type "simple"
 42219                           ; Number of cases is 3, Range of values is 65 to 67
 42220                           ; switch strategies available:
 42221                           ; Name         Instructions Cycles
 42222                           ; simple_byte           10     6 (average)
 42223                           ;	Chosen strategy is simple_byte
 42224   0070BC  0A41               	xorlw	65	; case 65
 42225   0070BE  B4D8               	btfsc	status,2,c
 42226   0070C0  D72B               	goto	l18710
 42227   0070C2  0A03               	xorlw	3	; case 66
 42228   0070C4  B4D8               	btfsc	status,2,c
 42229   0070C6  D768               	goto	l18716
 42230   0070C8  0A01               	xorlw	1	; case 67
 42231   0070CA  A4D8               	btfss	status,2,c
 42232   0070CC  0012               	return	
 42233   0070CE  D7A4               	goto	l18722
 42234   0070D0                     __end_of_setOutputPin:
 42235                           	callstack 0
 42236                           
 42237 ;; *************** function _getNV *****************
 42238 ;; Defined at:
 42239 ;;		line 171 in file "../../VLCBlib_PIC/nv.c"
 42240 ;; Parameters:    Size  Location     Type
 42241 ;;  index           1    wreg     unsigned char 
 42242 ;; Auto vars:     Size  Location     Type
 42243 ;;  index           1   48[BANK0 ] unsigned char 
 42244 ;; Return value:  Size  Location     Type
 42245 ;;                  2   45[BANK0 ] short 
 42246 ;; Registers used:
 42247 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42248 ;; Tracked objects:
 42249 ;;		On entry : 0/0
 42250 ;;		On exit  : 0/0
 42251 ;;		Unchanged: 0/0
 42252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42253 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42255 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42256 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42257 ;;Total ram usage:        4 bytes
 42258 ;; Hardware stack levels used: 1
 42259 ;; Hardware stack levels required when called: 12
 42260 ;; This function calls:
 42261 ;;		Nothing
 42262 ;; This function is called by:
 42263 ;;		_setup
 42264 ;;		_loop
 42265 ;;		_configIO
 42266 ;;		_startDigitalOutput
 42267 ;;		_processOutputs
 42268 ;;		_setDigitalOutput
 42269 ;;		_initInputScan
 42270 ;;		_inputScan
 42271 ;;		_readInput
 42272 ;;		_consumer2QProcessMessage
 42273 ;;		_processActions
 42274 ;;		_doSOD
 42275 ;;		_APP_nvValueChanged
 42276 ;;		_setOutputPosition
 42277 ;;		_initServos
 42278 ;;		_startServos
 42279 ;;		_setupTimer1
 42280 ;;		_setupTimer3
 42281 ;;		_pollServos
 42282 ;;		_startServoOutput
 42283 ;;		_startMultiOutput
 42284 ;;		_setServoState
 42285 ;;		_setBounceState
 42286 ;;		_setMultiState
 42287 ;;		_bounceDown
 42288 ;;		_bounceUp
 42289 ;;		_nvProcessMessage
 42290 ;;		_nvTRnvrdCallback
 42291 ;; This function uses a non-reentrant model
 42292 ;;
 42293                           
 42294                           	psect	text183
 42295   00BAFE                     __ptext183:
 42296                           	callstack 0
 42297   00BAFE                     _getNV:
 42298                           	callstack 14
 42299                           
 42300                           ; BSR set to: 0
 42301                           ;incstack = 0
 42302                           ;getNV@index stored from wreg
 42303   00BAFE  0100               	movlb	0	; () banked
 42304   00BB00  6F90               	movwf	getNV@index& (0+255),b
 42305                           
 42306                           ;../../VLCBlib_PIC/nv.c: 172:     if (index == 0) return 127;
 42307   00BB02  0100               	movlb	0	; () banked
 42308   00BB04  5190               	movf	getNV@index& (0+255),w,b
 42309   00BB06  A4D8               	btfss	status,2,c
 42310   00BB08  D005               	goto	l18698
 42311                           
 42312                           ; BSR set to: 0
 42313   00BB0A  0E00               	movlw	0
 42314   00BB0C  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42315   00BB0E  0E7F               	movlw	127
 42316   00BB10  6F8D               	movwf	?_getNV& (0+255),b
 42317   00BB12  0012               	return	
 42318   00BB14                     l18698:
 42319                           
 42320                           ; BSR set to: 0
 42321                           ;../../VLCBlib_PIC/nv.c: 173:     if (index > 127) return -CMDERR_INV_NV_IDX;
 42322   00BB14  0E7F               	movlw	127
 42323   00BB16  6590               	cpfsgt	getNV@index& (0+255),b
 42324   00BB18  D005               	goto	l18704
 42325                           
 42326                           ; BSR set to: 0
 42327   00BB1A  0EFF               	movlw	255
 42328   00BB1C  6F8E               	movwf	(?_getNV+1)& (0+255),b
 42329   00BB1E  0EF6               	movlw	246
 42330   00BB20  6F8D               	movwf	?_getNV& (0+255),b
 42331   00BB22  0012               	return	
 42332   00BB24                     l18704:
 42333                           
 42334                           ; BSR set to: 0
 42335                           ;../../VLCBlib_PIC/nv.c: 175:     return nvCache[index];
 42336   00BB24  0E00               	movlw	low _nvCache
 42337   00BB26  2590               	addwf	getNV@index& (0+255),w,b
 42338   00BB28  6ED9               	movwf	fsr2l,c
 42339   00BB2A  6ADA               	clrf	fsr2h,c
 42340   00BB2C  0E04               	movlw	high _nvCache
 42341   00BB2E  22DA               	addwfc	fsr2h,f,c
 42342   00BB30  50DF               	movf	indf2,w,c
 42343   00BB32  6F8F               	movwf	??_getNV& (0+255),b
 42344   00BB34  518F               	movf	??_getNV& (0+255),w,b
 42345   00BB36  6F8D               	movwf	?_getNV& (0+255),b
 42346   00BB38  6B8E               	clrf	(?_getNV+1)& (0+255),b
 42347                           
 42348                           ; BSR set to: 0
 42349   00BB3A  0012               	return		;funcret
 42350   00BB3C                     __end_of_getNV:
 42351                           	callstack 0
 42352                           
 42353 ;; *************** function _readNVM *****************
 42354 ;; Defined at:
 42355 ;;		line 537 in file "../../VLCBlib_PIC/nvm.c"
 42356 ;; Parameters:    Size  Location     Type
 42357 ;;  type            1    wreg     enum E12672
 42358 ;;  index           3   49[BANK0 ] unsigned um
 42359 ;; Auto vars:     Size  Location     Type
 42360 ;;  type            1   54[BANK0 ] enum E12672
 42361 ;; Return value:  Size  Location     Type
 42362 ;;                  2   49[BANK0 ] short 
 42363 ;; Registers used:
 42364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42365 ;; Tracked objects:
 42366 ;;		On entry : 0/0
 42367 ;;		On exit  : 0/0
 42368 ;;		Unchanged: 0/0
 42369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42370 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42371 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42372 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42373 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42374 ;;Total ram usage:        6 bytes
 42375 ;; Hardware stack levels used: 1
 42376 ;; Hardware stack levels required when called: 13
 42377 ;; This function calls:
 42378 ;;		_EEPROM_Read
 42379 ;;		_FLASH_Read
 42380 ;; This function is called by:
 42381 ;;		_configIO
 42382 ;;		_initInputScan
 42383 ;;		_doSOD
 42384 ;;		_initServos
 42385 ;;		_deleteHappeningRange
 42386 ;;		_doNnevn
 42387 ;;		_removeTableEntry
 42388 ;;		_addEvent
 42389 ;;		_writeEv
 42390 ;;		_getEv
 42391 ;;		_numEv
 42392 ;;		_getEVs
 42393 ;;		_getNN
 42394 ;;		_getEN
 42395 ;;		_validStart
 42396 ;;		_mnsPowerUp
 42397 ;;		_loadNvCache
 42398 ;;		_main
 42399 ;;		_canPowerUp
 42400 ;; This function uses a non-reentrant model
 42401 ;;
 42402                           
 42403                           	psect	text184
 42404   00B1B2                     __ptext184:
 42405                           	callstack 0
 42406   00B1B2                     _readNVM:
 42407                           	callstack 15
 42408                           
 42409                           ; BSR set to: 0
 42410                           ;incstack = 0
 42411                           ;readNVM@type stored from wreg
 42412   00B1B2  0100               	movlb	0	; () banked
 42413   00B1B4  6F96               	movwf	readNVM@type& (0+255),b
 42414                           
 42415                           ;../../VLCBlib_PIC/nvm.c: 538:     switch(type) {
 42416   00B1B6  D01D               	goto	l17978
 42417   00B1B8                     l17964:
 42418                           
 42419                           ; BSR set to: 0
 42420                           ;../../VLCBlib_PIC/nvm.c: 540:             return EEPROM_Read((uint16_t)index);
 42421   00B1B8  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 42422   00B1BC  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 42423   00B1C0  EC3F  F061         	call	_EEPROM_Read	;wreg free
 42424   00B1C4  0100               	movlb	0	; () banked
 42425   00B1C6  6F94               	movwf	??_readNVM& (0+255),b
 42426   00B1C8  5194               	movf	??_readNVM& (0+255),w,b
 42427   00B1CA  6F91               	movwf	?_readNVM& (0+255),b
 42428   00B1CC  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42429   00B1CE  0012               	return	
 42430   00B1D0                     l17968:
 42431                           
 42432                           ; BSR set to: 0
 42433                           ;../../VLCBlib_PIC/nvm.c: 543:             return FLASH_Read((uint16_t)index);
 42434   00B1D0  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 42435   00B1D4  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 42436   00B1D8  ECDD  F05B         	call	_FLASH_Read	;wreg free
 42437   00B1DC  0100               	movlb	0	; () banked
 42438   00B1DE  6F94               	movwf	??_readNVM& (0+255),b
 42439   00B1E0  5194               	movf	??_readNVM& (0+255),w,b
 42440   00B1E2  6F91               	movwf	?_readNVM& (0+255),b
 42441   00B1E4  6B92               	clrf	(?_readNVM+1)& (0+255),b
 42442   00B1E6  0012               	return	
 42443   00B1E8                     l17972:
 42444                           
 42445                           ; BSR set to: 0
 42446                           ;../../VLCBlib_PIC/nvm.c: 549:             return -GRSP_UNKNOWN_NVM_TYPE;
 42447   00B1E8  0EFF               	movlw	255
 42448   00B1EA  6F92               	movwf	(?_readNVM+1)& (0+255),b
 42449   00B1EC  0E02               	movlw	2
 42450   00B1EE  6F91               	movwf	?_readNVM& (0+255),b
 42451   00B1F0  0012               	return	
 42452   00B1F2                     l17978:
 42453   00B1F2  0100               	movlb	0	; () banked
 42454   00B1F4  5196               	movf	readNVM@type& (0+255),w,b
 42455   00B1F6  6F94               	movwf	??_readNVM& (0+255),b
 42456   00B1F8  6B95               	clrf	(??_readNVM+1)& (0+255),b
 42457                           
 42458                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42459                           ; Switch size 1, requested type "simple"
 42460                           ; Number of cases is 1, Range of values is 0 to 0
 42461                           ; switch strategies available:
 42462                           ; Name         Instructions Cycles
 42463                           ; simple_byte            4     3 (average)
 42464                           ;	Chosen strategy is simple_byte
 42465   00B1FA  5195               	movf	(??_readNVM+1)& (0+255),w,b
 42466   00B1FC  0A00               	xorlw	0	; case 0
 42467   00B1FE  A4D8               	btfss	status,2,c
 42468   00B200  D7F3               	goto	l17972
 42469                           
 42470                           ; BSR set to: 0
 42471                           ; Switch size 1, requested type "simple"
 42472                           ; Number of cases is 2, Range of values is 0 to 1
 42473                           ; switch strategies available:
 42474                           ; Name         Instructions Cycles
 42475                           ; simple_byte            7     4 (average)
 42476                           ;	Chosen strategy is simple_byte
 42477   00B202  5194               	movf	??_readNVM& (0+255),w,b
 42478   00B204  0A00               	xorlw	0	; case 0
 42479   00B206  B4D8               	btfsc	status,2,c
 42480   00B208  D7D7               	goto	l17964
 42481   00B20A  0A01               	xorlw	1	; case 1
 42482   00B20C  B4D8               	btfsc	status,2,c
 42483   00B20E  D7E0               	goto	l17968
 42484   00B210  D7EB               	goto	l17972
 42485   00B212                     __end_of_readNVM:
 42486                           	callstack 0
 42487                           
 42488 ;; *************** function _FLASH_Read *****************
 42489 ;; Defined at:
 42490 ;;		line 284 in file "../../VLCBlib_PIC/nvm.c"
 42491 ;; Parameters:    Size  Location     Type
 42492 ;;  address         2   45[BANK0 ] unsigned short 
 42493 ;; Auto vars:     Size  Location     Type
 42494 ;;		None
 42495 ;; Return value:  Size  Location     Type
 42496 ;;                  1    wreg      unsigned char 
 42497 ;; Registers used:
 42498 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42499 ;; Tracked objects:
 42500 ;;		On entry : 0/0
 42501 ;;		On exit  : 0/0
 42502 ;;		Unchanged: 0/0
 42503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42504 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42506 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42507 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42508 ;;Total ram usage:        4 bytes
 42509 ;; Hardware stack levels used: 1
 42510 ;; Hardware stack levels required when called: 12
 42511 ;; This function calls:
 42512 ;;		Nothing
 42513 ;; This function is called by:
 42514 ;;		_readNVM
 42515 ;; This function uses a non-reentrant model
 42516 ;;
 42517                           
 42518                           	psect	text185
 42519   00B7BA                     __ptext185:
 42520                           	callstack 0
 42521   00B7BA                     _FLASH_Read:
 42522                           	callstack 15
 42523                           
 42524                           ;../../VLCBlib_PIC/nvm.c: 286:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 42525                           
 42526                           ; BSR set to: 0
 42527                           ;incstack = 0
 42528   00B7BA  0EC0               	movlw	192
 42529   00B7BC  0100               	movlb	0	; () banked
 42530   00B7BE  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42531   00B7C0  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42532   00B7C2  0EFF               	movlw	255
 42533   00B7C4  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42534   00B7C6  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42535   00B7C8  51AE               	movf	_flashBlock& (0+255),w,b
 42536   00B7CA  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 42537   00B7CC  E112               	bnz	l17954
 42538   00B7CE  51AF               	movf	(_flashBlock+1)& (0+255),w,b
 42539   00B7D0  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 42540   00B7D2  A4D8               	btfss	status,2,c
 42541   00B7D4  D00E               	goto	l17954
 42542                           
 42543                           ; BSR set to: 0
 42544                           ;../../VLCBlib_PIC/nvm.c: 288:         return flashBuffer[(address&(64 -1))];
 42545   00B7D6  0E3F               	movlw	63
 42546   00B7D8  158D               	andwf	FLASH_Read@address& (0+255),w,b
 42547   00B7DA  6F8F               	movwf	??_FLASH_Read& (0+255),b
 42548   00B7DC  0E00               	movlw	0
 42549   00B7DE  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 42550   00B7E0  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 42551   00B7E2  0E48               	movlw	low _flashBuffer
 42552   00B7E4  258F               	addwf	??_FLASH_Read& (0+255),w,b
 42553   00B7E6  6ED9               	movwf	fsr2l,c
 42554   00B7E8  0E03               	movlw	high _flashBuffer
 42555   00B7EA  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 42556   00B7EC  6EDA               	movwf	fsr2h,c
 42557   00B7EE  50DF               	movf	indf2,w,c
 42558   00B7F0  0012               	return	
 42559   00B7F2                     l17954:
 42560                           
 42561                           ; BSR set to: 0
 42562                           ;../../VLCBlib_PIC/nvm.c: 292:         TBLPTR = address;
 42563   00B7F2  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 42564   00B7F6  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 42565   00B7FA  6AF8               	clrf	248,c	;volatile
 42566                           
 42567                           ; BSR set to: 0
 42568                           ;../../VLCBlib_PIC/nvm.c: 293:         TBLPTRU = 0;
 42569   00B7FC  0E00               	movlw	0
 42570   00B7FE  6EF8               	movwf	248,c	;volatile
 42571   00B800  0008               	tblrd		*	;# 
 42572                           
 42573                           ;../../VLCBlib_PIC/nvm.c: 304:         return TABLAT;
 42574   00B802  50F5               	movf	245,w,c	;volatile
 42575   00B804  0012               	return		;funcret
 42576   00B806                     __end_of_FLASH_Read:
 42577                           	callstack 0
 42578                           
 42579 ;; *************** function _EEPROM_Read *****************
 42580 ;; Defined at:
 42581 ;;		line 162 in file "../../VLCBlib_PIC/nvm.c"
 42582 ;; Parameters:    Size  Location     Type
 42583 ;;  index           2   45[BANK0 ] unsigned short 
 42584 ;; Auto vars:     Size  Location     Type
 42585 ;;		None
 42586 ;; Return value:  Size  Location     Type
 42587 ;;                  1    wreg      unsigned char 
 42588 ;; Registers used:
 42589 ;;		wreg, status,2
 42590 ;; Tracked objects:
 42591 ;;		On entry : 0/0
 42592 ;;		On exit  : 0/0
 42593 ;;		Unchanged: 0/0
 42594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42595 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42598 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42599 ;;Total ram usage:        2 bytes
 42600 ;; Hardware stack levels used: 1
 42601 ;; Hardware stack levels required when called: 12
 42602 ;; This function calls:
 42603 ;;		Nothing
 42604 ;; This function is called by:
 42605 ;;		_EEPROM_Write
 42606 ;;		_readNVM
 42607 ;; This function uses a non-reentrant model
 42608 ;;
 42609                           
 42610                           	psect	text186
 42611   00C27E                     __ptext186:
 42612                           	callstack 0
 42613   00C27E                     _EEPROM_Read:
 42614                           	callstack 15
 42615                           
 42616                           ;../../VLCBlib_PIC/nvm.c: 165:     while (EECON1bits.WR)
 42617                           
 42618                           ;../../VLCBlib_PIC/nvm.c: 166:         ;
 42619                           
 42620                           ;incstack = 0
 42621   00C27E  B27F               	btfsc	127,1,c	;volsfr
 42622   00C280  D7FE               	goto	__ptext186
 42623                           
 42624                           ;../../VLCBlib_PIC/nvm.c: 168:     EEADRH = (index >> 8)&0xFF;
 42625   00C282  0100               	movlb	0	; () banked
 42626   00C284  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 42627   00C286  6E75               	movwf	117,c	;volatile
 42628                           
 42629                           ; BSR set to: 0
 42630                           ;../../VLCBlib_PIC/nvm.c: 169:     EEADR = index & 0xFF;
 42631   00C288  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 42632                           
 42633                           ; BSR set to: 0
 42634                           ;../../VLCBlib_PIC/nvm.c: 170:     EECON1bits.EEPGD = 0;
 42635   00C28C  9E7F               	bcf	127,7,c	;volsfr
 42636                           
 42637                           ; BSR set to: 0
 42638                           ;../../VLCBlib_PIC/nvm.c: 171:     EECON1bits.CFGS = 0;
 42639   00C28E  9C7F               	bcf	127,6,c	;volsfr
 42640                           
 42641                           ; BSR set to: 0
 42642                           ;../../VLCBlib_PIC/nvm.c: 172:     EECON1bits.RD = 1;
 42643   00C290  807F               	bsf	127,0,c	;volsfr
 42644   00C292                     l2547:
 42645                           
 42646                           ;../../VLCBlib_PIC/nvm.c: 173:     while (EECON1bits.RD)
 42647   00C292  B07F               	btfsc	127,0,c	;volsfr
 42648   00C294  D7FE               	goto	l2547
 42649   00C296  0000               	nop		;# 
 42650                           
 42651                           ;../../VLCBlib_PIC/nvm.c: 178:     return EEDATA;
 42652   00C298  5073               	movf	115,w,c	;volatile
 42653   00C29A  0012               	return		;funcret
 42654   00C29C                     __end_of_EEPROM_Read:
 42655                           	callstack 0
 42656                           
 42657 ;; *************** function _factoryResetGlobalEvents *****************
 42658 ;; Defined at:
 42659 ;;		line 97 in file "../universalEvents.c"
 42660 ;; Parameters:    Size  Location     Type
 42661 ;;		None
 42662 ;; Auto vars:     Size  Location     Type
 42663 ;;		None
 42664 ;; Return value:  Size  Location     Type
 42665 ;;                  1    wreg      void 
 42666 ;; Registers used:
 42667 ;;		None
 42668 ;; Tracked objects:
 42669 ;;		On entry : 0/0
 42670 ;;		On exit  : 0/0
 42671 ;;		Unchanged: 0/0
 42672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42677 ;;Total ram usage:        0 bytes
 42678 ;; Hardware stack levels used: 1
 42679 ;; Hardware stack levels required when called: 12
 42680 ;; This function calls:
 42681 ;;		Nothing
 42682 ;; This function is called by:
 42683 ;;		_APP_factoryReset
 42684 ;; This function uses a non-reentrant model
 42685 ;;
 42686                           
 42687                           	psect	text187
 42688   00C418                     __ptext187:
 42689                           	callstack 0
 42690   00C418                     _factoryResetGlobalEvents:
 42691                           	callstack 14
 42692                           
 42693                           ;incstack = 0
 42694   00C418  0012               	return		;funcret
 42695   00C41A                     __end_of_factoryResetGlobalEvents:
 42696                           	callstack 0
 42697                           
 42698 ;; *************** function _APP_testMode *****************
 42699 ;; Defined at:
 42700 ;;		line 221 in file "../main.c"
 42701 ;; Parameters:    Size  Location     Type
 42702 ;;		None
 42703 ;; Auto vars:     Size  Location     Type
 42704 ;;		None
 42705 ;; Return value:  Size  Location     Type
 42706 ;;                  1    wreg      void 
 42707 ;; Registers used:
 42708 ;;		None
 42709 ;; Tracked objects:
 42710 ;;		On entry : 0/0
 42711 ;;		On exit  : 0/0
 42712 ;;		Unchanged: 0/0
 42713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42718 ;;Total ram usage:        0 bytes
 42719 ;; Hardware stack levels used: 1
 42720 ;; Hardware stack levels required when called: 12
 42721 ;; This function calls:
 42722 ;;		Nothing
 42723 ;; This function is called by:
 42724 ;;		_checkPowerOnPb
 42725 ;; This function uses a non-reentrant model
 42726 ;;
 42727                           
 42728                           	psect	text188
 42729   00C41A                     __ptext188:
 42730                           	callstack 0
 42731   00C41A                     _APP_testMode:
 42732                           	callstack 17
 42733                           
 42734                           ;incstack = 0
 42735   00C41A  0012               	return		;funcret
 42736   00C41C                     __end_of_APP_testMode:
 42737                           	callstack 0
 42738                           
 42739 ;; *************** function _isrLow *****************
 42740 ;; Defined at:
 42741 ;;		line 1328 in file "../../VLCBlib_PIC/vlcb.c"
 42742 ;; Parameters:    Size  Location     Type
 42743 ;;		None
 42744 ;; Auto vars:     Size  Location     Type
 42745 ;;		None
 42746 ;; Return value:  Size  Location     Type
 42747 ;;                  1    wreg      void 
 42748 ;; Registers used:
 42749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42750 ;; Tracked objects:
 42751 ;;		On entry : 0/0
 42752 ;;		On exit  : 0/0
 42753 ;;		Unchanged: 0/0
 42754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42757 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42758 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42759 ;;Total ram usage:       15 bytes
 42760 ;; Hardware stack levels used: 1
 42761 ;; Hardware stack levels required when called: 11
 42762 ;; This function calls:
 42763 ;;		_lowIsr
 42764 ;; This function is called by:
 42765 ;;		Interrupt level 1
 42766 ;; This function uses a non-reentrant model
 42767 ;;
 42768                           
 42769 ;; *************** function _isrHigh *****************
 42770 ;; Defined at:
 42771 ;;		line 1321 in file "../../VLCBlib_PIC/vlcb.c"
 42772 ;; Parameters:    Size  Location     Type
 42773 ;;		None
 42774 ;; Auto vars:     Size  Location     Type
 42775 ;;		None
 42776 ;; Return value:  Size  Location     Type
 42777 ;;                  1    wreg      void 
 42778 ;; Registers used:
 42779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42780 ;; Tracked objects:
 42781 ;;		On entry : 0/0
 42782 ;;		On exit  : 0/0
 42783 ;;		Unchanged: 0/0
 42784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42787 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42788 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42789 ;;Total ram usage:       12 bytes
 42790 ;; Hardware stack levels used: 1
 42791 ;; Hardware stack levels required when called: 5
 42792 ;; This function calls:
 42793 ;;		_highIsr
 42794 ;; This function is called by:
 42795 ;;		Interrupt level 2
 42796 ;; This function uses a non-reentrant model
 42797 ;;
 42798                           
 42799                           	psect	mainSec
 42800   0083EA                     __pmainSec:
 42801                           	callstack 0
 42802   0083EA                     _isrLow:
 42803                           	callstack 2
 42804                           
 42805                           ;incstack = 0
 42806   0083EA  8055               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 42807   0083EC  CFD8 F07E          	movff	status,??_isrLow
 42808   0083F0  CFE8 F07F          	movff	wreg,??_isrLow+1
 42809   0083F4  CFE0 F080          	movff	bsr,??_isrLow+2
 42810   0083F8  CFFA F081          	movff	pclath,??_isrLow+3
 42811   0083FC  CFFB F082          	movff	pclatu,??_isrLow+4
 42812   008400  CFE1 F083          	movff	fsr1l,??_isrLow+5
 42813   008404  CFE2 F084          	movff	fsr1h,??_isrLow+6
 42814   008408  CFD9 F085          	movff	fsr2l,??_isrLow+7
 42815   00840C  CFDA F086          	movff	fsr2h,??_isrLow+8
 42816   008410  CFF3 F087          	movff	prodl,??_isrLow+9
 42817   008414  CFF4 F088          	movff	prodh,??_isrLow+10
 42818   008418  CFF6 F089          	movff	tblptrl,??_isrLow+11
 42819   00841C  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 42820   008420  CFF8 F08B          	movff	tblptru,??_isrLow+13
 42821   008424  CFF5 F08C          	movff	tablat,??_isrLow+14
 42822   008428                     
 42823                           ;../../VLCBlib_PIC/vlcb.c: 1329:     lowIsr();
 42824   008428  EC12  F047         	call	_lowIsr	;wreg free
 42825   00842C  C08C  FFF5         	movff	??_isrLow+14,tablat
 42826   008430  C08B  FFF8         	movff	??_isrLow+13,tblptru
 42827   008434  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 42828   008438  C089  FFF6         	movff	??_isrLow+11,tblptrl
 42829   00843C  C088  FFF4         	movff	??_isrLow+10,prodh
 42830   008440  C087  FFF3         	movff	??_isrLow+9,prodl
 42831   008444  C086  FFDA         	movff	??_isrLow+8,fsr2h
 42832   008448  C085  FFD9         	movff	??_isrLow+7,fsr2l
 42833   00844C  C084  FFE2         	movff	??_isrLow+6,fsr1h
 42834   008450  C083  FFE1         	movff	??_isrLow+5,fsr1l
 42835   008454  C082  FFFB         	movff	??_isrLow+4,pclatu
 42836   008458  C081  FFFA         	movff	??_isrLow+3,pclath
 42837   00845C  C080  FFE0         	movff	??_isrLow+2,bsr
 42838   008460  C07F  FFE8         	movff	??_isrLow+1,wreg
 42839   008464  C07E  FFD8         	movff	??_isrLow,status
 42840   008468  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 42841   00846A  0010               	retfie	
 42842   00846C                     __end_of_isrLow:
 42843                           	callstack 0
 42844   00846C                     _isrHigh:
 42845                           	callstack 2
 42846                           
 42847                           ;incstack = 0
 42848   00846C  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 42849   00846E  CFFA F049          	movff	pclath,??_isrHigh
 42850   008472  CFFB F04A          	movff	pclatu,??_isrHigh+1
 42851   008476  CFE1 F04B          	movff	fsr1l,??_isrHigh+2
 42852   00847A  CFE2 F04C          	movff	fsr1h,??_isrHigh+3
 42853   00847E  CFD9 F04D          	movff	fsr2l,??_isrHigh+4
 42854   008482  CFDA F04E          	movff	fsr2h,??_isrHigh+5
 42855   008486  CFF3 F04F          	movff	prodl,??_isrHigh+6
 42856   00848A  CFF4 F050          	movff	prodh,??_isrHigh+7
 42857   00848E  CFF6 F051          	movff	tblptrl,??_isrHigh+8
 42858   008492  CFF7 F052          	movff	tblptrh,??_isrHigh+9
 42859   008496  CFF8 F053          	movff	tblptru,??_isrHigh+10
 42860   00849A  CFF5 F054          	movff	tablat,??_isrHigh+11
 42861   00849E                     
 42862                           ;../../VLCBlib_PIC/vlcb.c: 1322:     highIsr();
 42863   00849E  EC79  F047         	call	_highIsr	;wreg free
 42864   0084A2  C054  FFF5         	movff	??_isrHigh+11,tablat
 42865   0084A6  C053  FFF8         	movff	??_isrHigh+10,tblptru
 42866   0084AA  C052  FFF7         	movff	??_isrHigh+9,tblptrh
 42867   0084AE  C051  FFF6         	movff	??_isrHigh+8,tblptrl
 42868   0084B2  C050  FFF4         	movff	??_isrHigh+7,prodh
 42869   0084B6  C04F  FFF3         	movff	??_isrHigh+6,prodl
 42870   0084BA  C04E  FFDA         	movff	??_isrHigh+5,fsr2h
 42871   0084BE  C04D  FFD9         	movff	??_isrHigh+4,fsr2l
 42872   0084C2  C04C  FFE2         	movff	??_isrHigh+3,fsr1h
 42873   0084C6  C04B  FFE1         	movff	??_isrHigh+2,fsr1l
 42874   0084CA  C04A  FFFB         	movff	??_isrHigh+1,pclatu
 42875   0084CE  C049  FFFA         	movff	??_isrHigh,pclath
 42876   0084D2  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 42877   0084D4  0011               	retfie		f
 42878   0084D6                     __end_of_isrHigh:
 42879                           	callstack 0
 42880                           
 42881                           	psect	intcodelo
 42882   000818                     __pintcodelo:
 42883                           	callstack 2
 42884   000818  EFF5  F041         	goto	_isrLow
 42885                           
 42886 ;; *************** function _lowIsr *****************
 42887 ;; Defined at:
 42888 ;;		line 1075 in file "../../VLCBlib_PIC/vlcb.c"
 42889 ;; Parameters:    Size  Location     Type
 42890 ;;		None
 42891 ;; Auto vars:     Size  Location     Type
 42892 ;;  i               1   29[BANK0 ] unsigned char 
 42893 ;; Return value:  Size  Location     Type
 42894 ;;                  1    wreg      void 
 42895 ;; Registers used:
 42896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 42897 ;; Tracked objects:
 42898 ;;		On entry : 0/0
 42899 ;;		On exit  : 0/0
 42900 ;;		Unchanged: 0/0
 42901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42904 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42905 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42906 ;;Total ram usage:        5 bytes
 42907 ;; Hardware stack levels used: 1
 42908 ;; Hardware stack levels required when called: 10
 42909 ;; This function calls:
 42910 ;;		NULL
 42911 ;;		_APP_lowIsr
 42912 ;;		_canIsr
 42913 ;;		_mnsLowIsr
 42914 ;; This function is called by:
 42915 ;;		_isrLow
 42916 ;; This function uses a non-reentrant model
 42917 ;;
 42918                           
 42919                           	psect	text190
 42920   008E24                     __ptext190:
 42921                           	callstack 0
 42922   008E24                     _lowIsr:
 42923                           	callstack 2
 42924                           
 42925                           ;../../VLCBlib_PIC/vlcb.c: 1076:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1078:     for 
      +                          (i=0; i<9; i++) {
 42926                           
 42927                           ;incstack = 0
 42928   008E24  0E00               	movlw	0
 42929   008E26  0100               	movlb	0	; () banked
 42930   008E28  6F7D               	movwf	lowIsr@i& (0+255),b
 42931   008E2A                     i1l24070:
 42932                           
 42933                           ; BSR set to: 0
 42934                           ;../../VLCBlib_PIC/vlcb.c: 1079:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 42935   008E2A  517D               	movf	lowIsr@i& (0+255),w,b
 42936   008E2C  0D02               	mullw	2
 42937   008E2E  0E75               	movlw	low _services
 42938   008E30  24F3               	addwf	243,w,c
 42939   008E32  6EF6               	movwf	tblptrl,c
 42940   008E34  0EEE               	movlw	high _services
 42941   008E36  20F4               	addwfc	244,w,c
 42942   008E38  6EF7               	movwf	tblptrh,c
 42943   008E3A                     	if	1	;There are 3 active tblptr bytes
 42944   008E3A  6AF8               	clrf	tblptru,c
 42945   008E3C  0E00               	movlw	low (__mediumconst shr (0+16))
 42946   008E3E  22F8               	addwfc	tblptru,f,c
 42947   008E40                     	endif
 42948   008E40  0009               	tblrd		*+
 42949   008E42  50F5               	movf	tablat,w,c
 42950   008E44  0009               	tblrd		*+
 42951   008E46  10F5               	iorwf	tablat,w,c
 42952   008E48  B4D8               	btfsc	status,2,c
 42953   008E4A  D04B               	goto	i1u2613_29
 42954                           
 42955                           ; BSR set to: 0
 42956   008E4C  517D               	movf	lowIsr@i& (0+255),w,b
 42957   008E4E  0D02               	mullw	2
 42958   008E50  0E75               	movlw	low _services
 42959   008E52  24F3               	addwf	243,w,c
 42960   008E54  6EF6               	movwf	tblptrl,c
 42961   008E56  0EEE               	movlw	high _services
 42962   008E58  20F4               	addwfc	244,w,c
 42963   008E5A  6EF7               	movwf	tblptrh,c
 42964   008E5C                     	if	1	;There are 3 active tblptr bytes
 42965   008E5C  6AF8               	clrf	tblptru,c
 42966   008E5E  0E00               	movlw	low (__mediumconst shr (0+16))
 42967   008E60  22F8               	addwfc	tblptru,f,c
 42968   008E62                     	endif
 42969   008E62  0009               	tblrd		*+
 42970   008E64  CFF5 F079          	movff	tablat,??_lowIsr
 42971   008E68  0009               	tblrd		*+
 42972   008E6A  CFF5 F07A          	movff	tablat,??_lowIsr+1
 42973   008E6E  0E0C               	movlw	12
 42974   008E70  2779               	addwf	??_lowIsr& (0+255),f,b
 42975   008E72  0E00               	movlw	0
 42976   008E74  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 42977   008E76  C079  FFF6         	movff	??_lowIsr,tblptrl
 42978   008E7A  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 42979   008E7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 42980   008E7E  6AF8               	clrf	tblptru,c
 42981   008E80                     	endif
 42982   008E80                     	if	0	;tblptru may be non-zero
 42983   008E80                     	endif
 42984   008E80  0009               	tblrd		*+
 42985   008E82  50F5               	movf	tablat,w,c
 42986   008E84  0009               	tblrd		*+
 42987   008E86  10F5               	iorwf	tablat,w,c
 42988   008E88  B4D8               	btfsc	status,2,c
 42989   008E8A  D02B               	goto	i1u2613_29
 42990                           
 42991                           ; BSR set to: 0
 42992                           ;../../VLCBlib_PIC/vlcb.c: 1080:             services[i]->lowIsr();
 42993   008E8C  517D               	movf	lowIsr@i& (0+255),w,b
 42994   008E8E  0D02               	mullw	2
 42995   008E90  0E75               	movlw	low _services
 42996   008E92  24F3               	addwf	243,w,c
 42997   008E94  6EF6               	movwf	tblptrl,c
 42998   008E96  0EEE               	movlw	high _services
 42999   008E98  20F4               	addwfc	244,w,c
 43000   008E9A  6EF7               	movwf	tblptrh,c
 43001   008E9C                     	if	1	;There are 3 active tblptr bytes
 43002   008E9C  6AF8               	clrf	tblptru,c
 43003   008E9E  0E00               	movlw	low (__mediumconst shr (0+16))
 43004   008EA0  22F8               	addwfc	tblptru,f,c
 43005   008EA2                     	endif
 43006   008EA2  0009               	tblrd		*+
 43007   008EA4  CFF5 F079          	movff	tablat,??_lowIsr
 43008   008EA8  0009               	tblrd		*+
 43009   008EAA  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43010   008EAE  0E0C               	movlw	12
 43011   008EB0  2779               	addwf	??_lowIsr& (0+255),f,b
 43012   008EB2  0E00               	movlw	0
 43013   008EB4  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43014   008EB6  C079  FFF6         	movff	??_lowIsr,tblptrl
 43015   008EBA  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43016   008EBE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43017   008EBE  6AF8               	clrf	tblptru,c
 43018   008EC0                     	endif
 43019   008EC0                     	if	0	;tblptru may be non-zero
 43020   008EC0                     	endif
 43021   008EC0  0009               	tblrd		*+
 43022   008EC2  CFF5 F07B          	movff	tablat,??_lowIsr+2
 43023   008EC6  0009               	tblrd		*+
 43024   008EC8  CFF5 F07C          	movff	tablat,??_lowIsr+3
 43025   008ECC  D801               	call	i1u2613_28
 43026   008ECE  D009               	goto	i1u2613_29
 43027   008ED0                     i1u2613_28:
 43028   008ED0  0005               	push	
 43029   008ED2  6EFA               	movwf	pclath,c
 43030   008ED4  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 43031   008ED6  6EFD               	movwf	tosl,c
 43032   008ED8  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 43033   008EDA  6EFE               	movwf	tosh,c
 43034   008EDC  6AFF               	clrf	tosu,c
 43035   008EDE  50FA               	movf	pclath,w,c
 43036   008EE0  0012               	return		;indir
 43037   008EE2                     i1u2613_29:
 43038                           
 43039                           ;../../VLCBlib_PIC/vlcb.c: 1082:     }
 43040   008EE2  0100               	movlb	0	; () banked
 43041   008EE4  2B7D               	incf	lowIsr@i& (0+255),f,b
 43042                           
 43043                           ; BSR set to: 0
 43044   008EE6  0E08               	movlw	8
 43045   008EE8  657D               	cpfsgt	lowIsr@i& (0+255),b
 43046   008EEA  D79F               	goto	i1l24070
 43047                           
 43048                           ; BSR set to: 0
 43049                           ;../../VLCBlib_PIC/vlcb.c: 1083:     APP_lowIsr();
 43050   008EEC  EC0E  F062         	call	_APP_lowIsr	;wreg free
 43051   008EF0  0012               	return		;funcret
 43052   008EF2                     __end_of_lowIsr:
 43053                           	callstack 0
 43054                           
 43055 ;; *************** function _canIsr *****************
 43056 ;; Defined at:
 43057 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 43058 ;; Parameters:    Size  Location     Type
 43059 ;;		None
 43060 ;; Auto vars:     Size  Location     Type
 43061 ;;		None
 43062 ;; Return value:  Size  Location     Type
 43063 ;;                  1    wreg      void 
 43064 ;; Registers used:
 43065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43066 ;; Tracked objects:
 43067 ;;		On entry : 0/0
 43068 ;;		On exit  : 0/0
 43069 ;;		Unchanged: 0/0
 43070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43075 ;;Total ram usage:        0 bytes
 43076 ;; Hardware stack levels used: 1
 43077 ;; Hardware stack levels required when called: 9
 43078 ;; This function calls:
 43079 ;;		_canFillRxFifo
 43080 ;;		_canTxError
 43081 ;;		_checkCANTimeout
 43082 ;;		_checkTxFifo
 43083 ;; This function is called by:
 43084 ;;		_highIsr
 43085 ;;		_lowIsr
 43086 ;; This function uses a non-reentrant model
 43087 ;;
 43088                           
 43089                           	psect	text191
 43090   00C220                     __ptext191:
 43091                           	callstack 0
 43092   00C220                     _canIsr:
 43093                           	callstack 0
 43094                           
 43095                           ;Skip over the trampoline to the duplicate function for level 2
 43096   00C220  A255               	btfss	btemp,1,c
 43097   00C222  D002               	goto	_canIsr$intlevel1
 43098   00C224  EF8D  F061         	goto	i2_canIsr
 43099   00C228                     _canIsr$intlevel1:
 43100                           	callstack 2
 43101                           
 43102                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 43103                           
 43104                           ;incstack = 0
 43105   00C228  B077               	btfsc	119,0,c	;volatile
 43106                           
 43107                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 43108   00C22A  EC78  F03B         	call	_canFillRxFifo	;wreg free
 43109                           
 43110                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 43111   00C22E  BA77               	btfsc	119,5,c	;volatile
 43112                           
 43113                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 43114   00C230  EC47  F058         	call	_canTxError	;wreg free
 43115                           
 43116                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 43117   00C234  B877               	btfsc	119,4,c	;volatile
 43118                           
 43119                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 43120   00C236  ECE1  F029         	call	_checkTxFifo	;wreg free
 43121                           
 43122                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 43123                           
 43124                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 43125   00C23A  ECC6  F05A         	call	_checkCANTimeout	;wreg free
 43126   00C23E  0012               	return		;funcret
 43127   00C240                     __end_of_canIsr:
 43128                           	callstack 0
 43129                           
 43130 ;; *************** function _mnsLowIsr *****************
 43131 ;; Defined at:
 43132 ;;		line 712 in file "../../VLCBlib_PIC/mns.c"
 43133 ;; Parameters:    Size  Location     Type
 43134 ;;		None
 43135 ;; Auto vars:     Size  Location     Type
 43136 ;;		None
 43137 ;; Return value:  Size  Location     Type
 43138 ;;                  1    wreg      void 
 43139 ;; Registers used:
 43140 ;;		wreg, status,2, status,0
 43141 ;; Tracked objects:
 43142 ;;		On entry : 0/0
 43143 ;;		On exit  : 0/0
 43144 ;;		Unchanged: 0/0
 43145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43150 ;;Total ram usage:        0 bytes
 43151 ;; Hardware stack levels used: 1
 43152 ;; Hardware stack levels required when called: 6
 43153 ;; This function calls:
 43154 ;;		Nothing
 43155 ;; This function is called by:
 43156 ;;		_lowIsr
 43157 ;; This function uses a non-reentrant model
 43158 ;;
 43159                           
 43160                           	psect	text192
 43161   00C35C                     __ptext192:
 43162                           	callstack 0
 43163   00C35C                     _mnsLowIsr:
 43164                           	callstack 5
 43165                           
 43166                           ;../../VLCBlib_PIC/mns.c: 715:     if(INTCONbits.TMR0IF) {
 43167                           
 43168                           ;incstack = 0
 43169   00C35C  A4F2               	btfss	242,2,c	;volatile
 43170   00C35E  0012               	return	
 43171                           
 43172                           ;../../VLCBlib_PIC/mns.c: 717:         INTCONbits.TMR0IF = 0;
 43173   00C360  94F2               	bcf	242,2,c	;volatile
 43174                           
 43175                           ;../../VLCBlib_PIC/mns.c: 718:         timerExtension1++;
 43176   00C362  0100               	movlb	0	; () banked
 43177   00C364  2BC4               	incf	_timerExtension1& (0+255),f,b	;volatile
 43178                           
 43179                           ; BSR set to: 0
 43180                           ;../../VLCBlib_PIC/mns.c: 719:         if(timerExtension1 == 0) {
 43181   00C366  51C4               	movf	_timerExtension1& (0+255),w,b	;volatile
 43182   00C368  A4D8               	btfss	status,2,c
 43183   00C36A  0012               	return	
 43184                           
 43185                           ; BSR set to: 0
 43186                           ;../../VLCBlib_PIC/mns.c: 720:             timerExtension2++;
 43187   00C36C  2BC3               	incf	_timerExtension2& (0+255),f,b	;volatile
 43188   00C36E  0012               	return		;funcret
 43189   00C370                     __end_of_mnsLowIsr:
 43190                           	callstack 0
 43191                           
 43192 ;; *************** function _checkCANTimeout *****************
 43193 ;; Defined at:
 43194 ;;		line 685 in file "../../VLCBlib_PIC/can18_ecan.c"
 43195 ;; Parameters:    Size  Location     Type
 43196 ;;		None
 43197 ;; Auto vars:     Size  Location     Type
 43198 ;;		None
 43199 ;; Return value:  Size  Location     Type
 43200 ;;                  1    wreg      void 
 43201 ;; Registers used:
 43202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43203 ;; Tracked objects:
 43204 ;;		On entry : 0/0
 43205 ;;		On exit  : 0/0
 43206 ;;		Unchanged: 0/0
 43207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43210 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43211 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43212 ;;Total ram usage:        4 bytes
 43213 ;; Hardware stack levels used: 1
 43214 ;; Hardware stack levels required when called: 8
 43215 ;; This function calls:
 43216 ;;		_checkTxFifo
 43217 ;;		i1_tickGet
 43218 ;;		i1_updateModuleErrorStatus
 43219 ;; This function is called by:
 43220 ;;		_canIsr
 43221 ;; This function uses a non-reentrant model
 43222 ;;
 43223                           
 43224                           	psect	text193
 43225   00B58C                     __ptext193:
 43226                           	callstack 0
 43227   00B58C                     _checkCANTimeout:
 43228                           	callstack 2
 43229                           
 43230                           ;../../VLCBlib_PIC/can18_ecan.c: 686:     if (canTransmitTimeout.val != 0) {
 43231                           
 43232                           ;incstack = 0
 43233   00B58C  5015               	movf	_canTransmitTimeout^0,w,c
 43234   00B58E  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 43235   00B590  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 43236   00B592  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 43237   00B594  B4D8               	btfsc	status,2,c
 43238   00B596  0012               	return	
 43239                           
 43240                           ;../../VLCBlib_PIC/can18_ecan.c: 687:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 43241   00B598  EC45  F05A         	call	i1_tickGet	;wreg free
 43242   00B59C  5015               	movf	_canTransmitTimeout^0,w,c
 43243   00B59E  0100               	movlb	0	; () banked
 43244   00B5A0  5D60               	subwf	?i1_tickGet& (0+255),w,b
 43245   00B5A2  6F75               	movwf	??_checkCANTimeout& (0+255),b
 43246   00B5A4  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 43247   00B5A6  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 43248   00B5A8  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 43249   00B5AA  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 43250   00B5AC  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 43251   00B5AE  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 43252   00B5B0  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 43253   00B5B2  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 43254   00B5B4  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 43255   00B5B6  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 43256   00B5B8  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 43257   00B5BA  E106               	bnz	i1u2293_20
 43258   00B5BC  0E25               	movlw	37
 43259   00B5BE  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 43260   00B5C0  0EF4               	movlw	244
 43261   00B5C2  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 43262   00B5C4  A0D8               	btfss	status,0,c
 43263   00B5C6  0012               	return	
 43264   00B5C8                     i1u2293_20:
 43265                           
 43266                           ; BSR set to: 0
 43267                           ;../../VLCBlib_PIC/can18_ecan.c: 688:             canTransmitFailed = 1;
 43268   00B5C8  0E01               	movlw	1
 43269   00B5CA  6FB7               	movwf	_canTransmitFailed& (0+255),b
 43270                           
 43271                           ; BSR set to: 0
 43272                           ;../../VLCBlib_PIC/can18_ecan.c: 689:             TXB0CONbits.TXREQ = 0;
 43273   00B5CC  010F               	movlb	15	; () banked
 43274   00B5CE  9720               	bcf	32,3,b	;volatile
 43275                           
 43276                           ; BSR set to: 15
 43277                           ;../../VLCBlib_PIC/can18_ecan.c: 690:             checkTxFifo();
 43278   00B5D0  ECE1  F029         	call	_checkTxFifo	;wreg free
 43279                           
 43280                           ;../../VLCBlib_PIC/can18_ecan.c: 691:             canDiagnostics[0x01].asUint++;
 43281   00B5D4  0101               	movlb	1	; () banked
 43282   00B5D6  4B80               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43283   00B5D8  2B81               	incf	(_canDiagnostics+3)& (0+255),f,b
 43284                           
 43285                           ; BSR set to: 1
 43286                           ;../../VLCBlib_PIC/can18_ecan.c: 692:             updateModuleErrorStatus();
 43287   00B5DA  ECD8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43288   00B5DE  0012               	return		;funcret
 43289   00B5E0                     __end_of_checkCANTimeout:
 43290                           	callstack 0
 43291                           
 43292 ;; *************** function _canTxError *****************
 43293 ;; Defined at:
 43294 ;;		line 702 in file "../../VLCBlib_PIC/can18_ecan.c"
 43295 ;; Parameters:    Size  Location     Type
 43296 ;;		None
 43297 ;; Auto vars:     Size  Location     Type
 43298 ;;		None
 43299 ;; Return value:  Size  Location     Type
 43300 ;;                  1    wreg      void 
 43301 ;; Registers used:
 43302 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43303 ;; Tracked objects:
 43304 ;;		On entry : 0/0
 43305 ;;		On exit  : 0/0
 43306 ;;		Unchanged: 0/0
 43307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43312 ;;Total ram usage:        0 bytes
 43313 ;; Hardware stack levels used: 1
 43314 ;; Hardware stack levels required when called: 8
 43315 ;; This function calls:
 43316 ;;		_checkTxFifo
 43317 ;;		i1_updateModuleErrorStatus
 43318 ;; This function is called by:
 43319 ;;		_canIsr
 43320 ;; This function uses a non-reentrant model
 43321 ;;
 43322                           
 43323                           	psect	text194
 43324   00B08E                     __ptext194:
 43325                           	callstack 0
 43326   00B08E                     _canTxError:
 43327                           	callstack 2
 43328                           
 43329                           ;../../VLCBlib_PIC/can18_ecan.c: 703:     if (TXB0CONbits.TXLARB) {
 43330                           
 43331                           ;incstack = 0
 43332   00B08E  010F               	movlb	15	; () banked
 43333   00B090  AB20               	btfss	32,5,b	;volatile
 43334   00B092  D012               	goto	i1l21658
 43335                           
 43336                           ; BSR set to: 15
 43337                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         canTransmitFailed = 1;
 43338   00B094  0E01               	movlw	1
 43339   00B096  0100               	movlb	0	; () banked
 43340   00B098  6FB7               	movwf	_canTransmitFailed& (0+255),b
 43341                           
 43342                           ;../../VLCBlib_PIC/can18_ecan.c: 705:         canTransmitTimeout.val = 0;
 43343   00B09A  0E00               	movlw	0
 43344   00B09C  6E15               	movwf	_canTransmitTimeout^0,c
 43345   00B09E  0E00               	movlw	0
 43346   00B0A0  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43347   00B0A2  0E00               	movlw	0
 43348   00B0A4  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43349   00B0A6  0E00               	movlw	0
 43350   00B0A8  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43351                           
 43352                           ; BSR set to: 0
 43353                           ;../../VLCBlib_PIC/can18_ecan.c: 706:         TXB0CONbits.TXREQ = 0;
 43354   00B0AA  010F               	movlb	15	; () banked
 43355   00B0AC  9720               	bcf	32,3,b	;volatile
 43356                           
 43357                           ; BSR set to: 15
 43358                           ;../../VLCBlib_PIC/can18_ecan.c: 707:         canDiagnostics[0x0B].asUint++;
 43359   00B0AE  0101               	movlb	1	; () banked
 43360   00B0B0  4B94               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 43361   00B0B2  2B95               	incf	(_canDiagnostics+23)& (0+255),f,b
 43362                           
 43363                           ; BSR set to: 1
 43364                           ;../../VLCBlib_PIC/can18_ecan.c: 708:         updateModuleErrorStatus();
 43365   00B0B4  ECD8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43366   00B0B8                     i1l21658:
 43367                           
 43368                           ;../../VLCBlib_PIC/can18_ecan.c: 710:     if (TXB0CONbits.TXERR) {
 43369   00B0B8  010F               	movlb	15	; () banked
 43370   00B0BA  A920               	btfss	32,4,b	;volatile
 43371   00B0BC  D012               	goto	i1l21668
 43372                           
 43373                           ; BSR set to: 15
 43374                           ;../../VLCBlib_PIC/can18_ecan.c: 711:         canTransmitFailed = 1;
 43375   00B0BE  0E01               	movlw	1
 43376   00B0C0  0100               	movlb	0	; () banked
 43377   00B0C2  6FB7               	movwf	_canTransmitFailed& (0+255),b
 43378                           
 43379                           ;../../VLCBlib_PIC/can18_ecan.c: 712:         canTransmitTimeout.val = 0;
 43380   00B0C4  0E00               	movlw	0
 43381   00B0C6  6E15               	movwf	_canTransmitTimeout^0,c
 43382   00B0C8  0E00               	movlw	0
 43383   00B0CA  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43384   00B0CC  0E00               	movlw	0
 43385   00B0CE  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43386   00B0D0  0E00               	movlw	0
 43387   00B0D2  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43388                           
 43389                           ; BSR set to: 0
 43390                           ;../../VLCBlib_PIC/can18_ecan.c: 713:         TXB0CONbits.TXREQ = 0;
 43391   00B0D4  010F               	movlb	15	; () banked
 43392   00B0D6  9720               	bcf	32,3,b	;volatile
 43393                           
 43394                           ; BSR set to: 15
 43395                           ;../../VLCBlib_PIC/can18_ecan.c: 714:         canDiagnostics[0x01].asUint++;
 43396   00B0D8  0101               	movlb	1	; () banked
 43397   00B0DA  4B80               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 43398   00B0DC  2B81               	incf	(_canDiagnostics+3)& (0+255),f,b
 43399                           
 43400                           ; BSR set to: 1
 43401                           ;../../VLCBlib_PIC/can18_ecan.c: 715:         updateModuleErrorStatus();
 43402   00B0DE  ECD8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43403   00B0E2                     i1l21668:
 43404                           
 43405                           ;../../VLCBlib_PIC/can18_ecan.c: 717:     if (canTransmitFailed) {
 43406   00B0E2  0100               	movlb	0	; () banked
 43407   00B0E4  51B7               	movf	_canTransmitFailed& (0+255),w,b
 43408   00B0E6  A4D8               	btfss	status,2,c
 43409                           
 43410                           ; BSR set to: 0
 43411                           ;../../VLCBlib_PIC/can18_ecan.c: 718:         checkTxFifo();
 43412   00B0E8  ECE1  F029         	call	_checkTxFifo	;wreg free
 43413                           
 43414                           ;../../VLCBlib_PIC/can18_ecan.c: 720:     PIR5bits.ERRIF = 0;
 43415   00B0EC  9A77               	bcf	119,5,c	;volatile
 43416   00B0EE  0012               	return		;funcret
 43417   00B0F0                     __end_of_canTxError:
 43418                           	callstack 0
 43419                           
 43420 ;; *************** function _checkTxFifo *****************
 43421 ;; Defined at:
 43422 ;;		line 616 in file "../../VLCBlib_PIC/can18_ecan.c"
 43423 ;; Parameters:    Size  Location     Type
 43424 ;;		None
 43425 ;; Auto vars:     Size  Location     Type
 43426 ;;  mp              2   19[BANK0 ] PTR struct Message
 43427 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43428 ;;  m               2   17[BANK0 ] PTR struct Message
 43429 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 43430 ;; Return value:  Size  Location     Type
 43431 ;;                  1    wreg      void 
 43432 ;; Registers used:
 43433 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43434 ;; Tracked objects:
 43435 ;;		On entry : 0/0
 43436 ;;		On exit  : 0/0
 43437 ;;		Unchanged: 0/0
 43438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43440 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43441 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43442 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43443 ;;Total ram usage:        9 bytes
 43444 ;; Hardware stack levels used: 1
 43445 ;; Hardware stack levels required when called: 7
 43446 ;; This function calls:
 43447 ;;		i1_getNextWriteMessage
 43448 ;;		i1_isEvent
 43449 ;;		i1_pop
 43450 ;;		i1_tickGet
 43451 ;;		i1_updateModuleErrorStatus
 43452 ;; This function is called by:
 43453 ;;		_canIsr
 43454 ;;		_checkCANTimeout
 43455 ;;		_canTxError
 43456 ;; This function uses a non-reentrant model
 43457 ;;
 43458                           
 43459                           	psect	text195
 43460   0053C2                     __ptext195:
 43461                           	callstack 0
 43462   0053C2                     _checkTxFifo:
 43463                           	callstack 3
 43464                           
 43465                           ;../../VLCBlib_PIC/can18_ecan.c: 617:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          619:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 622:     PIR5bits.TXBnIF = 0;
 43466                           
 43467                           ;incstack = 0
 43468   0053C2  9877               	bcf	119,4,c	;volatile
 43469                           
 43470                           ;../../VLCBlib_PIC/can18_ecan.c: 623:     if (!TXB0CONbits.TXREQ) {
 43471   0053C4  010F               	movlb	15	; () banked
 43472   0053C6  B720               	btfsc	32,3,b	;volatile
 43473   0053C8  D15A               	goto	i1l2923
 43474                           
 43475                           ; BSR set to: 15
 43476                           ;../../VLCBlib_PIC/can18_ecan.c: 624:         mp = pop(&txQueue);
 43477   0053CA  0EB3               	movlw	low _txQueue
 43478   0053CC  0100               	movlb	0	; () banked
 43479   0053CE  6F60               	movwf	i1pop@q& (0+255),b
 43480   0053D0  0E01               	movlw	high _txQueue
 43481   0053D2  6F61               	movwf	(i1pop@q+1)& (0+255),b
 43482   0053D4  EC88  F04C         	call	i1_pop	;wreg free
 43483   0053D8  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 43484   0053DC  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 43485                           
 43486                           ;../../VLCBlib_PIC/can18_ecan.c: 625:         if (mp != ((void*)0)) {
 43487   0053E0  0100               	movlb	0	; () banked
 43488   0053E2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43489   0053E4  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 43490   0053E6  B4D8               	btfsc	status,2,c
 43491   0053E8  D13C               	goto	i1l20352
 43492                           
 43493                           ; BSR set to: 0
 43494                           ;../../VLCBlib_PIC/can18_ecan.c: 627:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 43495   0053EA  EE20 F001          	lfsr	2,1
 43496   0053EE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43497   0053F0  26D9               	addwf	fsr2l,f,c
 43498   0053F2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43499   0053F4  22DA               	addwfc	fsr2h,f,c
 43500   0053F6  50DF               	movf	indf2,w,c
 43501   0053F8  6F6C               	movwf	??_checkTxFifo& (0+255),b
 43502   0053FA  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 43503   0053FC  0E35               	movlw	low _priorities
 43504   0053FE  256C               	addwf	??_checkTxFifo& (0+255),w,b
 43505   005400  6EF6               	movwf	tblptrl,c
 43506   005402  0EED               	movlw	high _priorities
 43507   005404  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 43508   005406  6EF7               	movwf	tblptrh,c
 43509   005408                     	if	1	;There are 3 active tblptr bytes
 43510   005408  6AF8               	clrf	tblptru,c
 43511   00540A  0E00               	movlw	low (__mediumconst shr (0+16))
 43512   00540C  22F8               	addwfc	tblptru,f,c
 43513   00540E                     	endif
 43514   00540E  0008               	tblrd		*
 43515   005410  50F5               	movf	tablat,w,c
 43516   005412  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 43517   005414  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 43518   005416  0E87               	movlw	low _canPri
 43519   005418  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 43520   00541A  6EF6               	movwf	tblptrl,c
 43521   00541C  0EEE               	movlw	high _canPri
 43522   00541E  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 43523   005420  6EF7               	movwf	tblptrh,c
 43524   005422                     	if	1	;There are 3 active tblptr bytes
 43525   005422  6AF8               	clrf	tblptru,c
 43526   005424  0E00               	movlw	low (__mediumconst shr (0+16))
 43527   005426  22F8               	addwfc	tblptru,f,c
 43528   005428                     	endif
 43529   005428  0008               	tblrd		*
 43530   00542A  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 43531   00542E  39B8               	swapf	_canId& (0+255),w,b
 43532   005430  46E8               	rlncf	wreg,f,c
 43533   005432  0B1F               	andlw	31
 43534   005434  0B0F               	andlw	15
 43535   005436  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 43536   005438  010F               	movlb	15	; () banked
 43537   00543A  6F21               	movwf	33,b	;volatile
 43538                           
 43539                           ; BSR set to: 15
 43540                           ;../../VLCBlib_PIC/can18_ecan.c: 628:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 43541   00543C  C0B8  F06C         	movff	_canId,??_checkTxFifo
 43542   005440  0E07               	movlw	7
 43543   005442  0100               	movlb	0	; () banked
 43544   005444  176C               	andwf	??_checkTxFifo& (0+255),f,b
 43545   005446  0E05               	movlw	5
 43546   005448  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 43547   00544A                     i1u2084_25:
 43548   00544A  90D8               	bcf	status,0,c
 43549   00544C  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 43550   00544E  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 43551   005450  D7FC               	goto	i1u2084_25
 43552   005452  516C               	movf	??_checkTxFifo& (0+255),w,b
 43553   005454  010F               	movlb	15	; () banked
 43554   005456  6F22               	movwf	34,b	;volatile
 43555                           
 43556                           ; BSR set to: 15
 43557                           ;../../VLCBlib_PIC/can18_ecan.c: 629:             TXB0D0 = mp->opc;
 43558   005458  0100               	movlb	0	; () banked
 43559   00545A  EE20 F001          	lfsr	2,1
 43560   00545E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43561   005460  26D9               	addwf	fsr2l,f,c
 43562   005462  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43563   005464  22DA               	addwfc	fsr2h,f,c
 43564   005466  50DF               	movf	indf2,w,c
 43565   005468  010F               	movlb	15	; () banked
 43566   00546A  6F26               	movwf	38,b	;volatile
 43567                           
 43568                           ; BSR set to: 15
 43569                           ;../../VLCBlib_PIC/can18_ecan.c: 630:             TXB0D1 = mp->bytes[0];
 43570   00546C  0100               	movlb	0	; () banked
 43571   00546E  EE20 F002          	lfsr	2,2
 43572   005472  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43573   005474  26D9               	addwf	fsr2l,f,c
 43574   005476  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43575   005478  22DA               	addwfc	fsr2h,f,c
 43576   00547A  50DF               	movf	indf2,w,c
 43577   00547C  010F               	movlb	15	; () banked
 43578   00547E  6F27               	movwf	39,b	;volatile
 43579                           
 43580                           ; BSR set to: 15
 43581                           ;../../VLCBlib_PIC/can18_ecan.c: 631:             TXB0D2 = mp->bytes[1];
 43582   005480  0100               	movlb	0	; () banked
 43583   005482  EE20 F003          	lfsr	2,3
 43584   005486  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43585   005488  26D9               	addwf	fsr2l,f,c
 43586   00548A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43587   00548C  22DA               	addwfc	fsr2h,f,c
 43588   00548E  50DF               	movf	indf2,w,c
 43589   005490  010F               	movlb	15	; () banked
 43590   005492  6F28               	movwf	40,b	;volatile
 43591                           
 43592                           ; BSR set to: 15
 43593                           ;../../VLCBlib_PIC/can18_ecan.c: 632:             TXB0D3 = mp->bytes[2];
 43594   005494  0100               	movlb	0	; () banked
 43595   005496  EE20 F004          	lfsr	2,4
 43596   00549A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43597   00549C  26D9               	addwf	fsr2l,f,c
 43598   00549E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43599   0054A0  22DA               	addwfc	fsr2h,f,c
 43600   0054A2  50DF               	movf	indf2,w,c
 43601   0054A4  010F               	movlb	15	; () banked
 43602   0054A6  6F29               	movwf	41,b	;volatile
 43603                           
 43604                           ; BSR set to: 15
 43605                           ;../../VLCBlib_PIC/can18_ecan.c: 633:             TXB0D4 = mp->bytes[3];
 43606   0054A8  0100               	movlb	0	; () banked
 43607   0054AA  EE20 F005          	lfsr	2,5
 43608   0054AE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43609   0054B0  26D9               	addwf	fsr2l,f,c
 43610   0054B2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43611   0054B4  22DA               	addwfc	fsr2h,f,c
 43612   0054B6  50DF               	movf	indf2,w,c
 43613   0054B8  010F               	movlb	15	; () banked
 43614   0054BA  6F2A               	movwf	42,b	;volatile
 43615                           
 43616                           ; BSR set to: 15
 43617                           ;../../VLCBlib_PIC/can18_ecan.c: 634:             TXB0D5 = mp->bytes[4];
 43618   0054BC  0100               	movlb	0	; () banked
 43619   0054BE  EE20 F006          	lfsr	2,6
 43620   0054C2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43621   0054C4  26D9               	addwf	fsr2l,f,c
 43622   0054C6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43623   0054C8  22DA               	addwfc	fsr2h,f,c
 43624   0054CA  50DF               	movf	indf2,w,c
 43625   0054CC  010F               	movlb	15	; () banked
 43626   0054CE  6F2B               	movwf	43,b	;volatile
 43627                           
 43628                           ; BSR set to: 15
 43629                           ;../../VLCBlib_PIC/can18_ecan.c: 635:             TXB0D6 = mp->bytes[5];
 43630   0054D0  0100               	movlb	0	; () banked
 43631   0054D2  EE20 F007          	lfsr	2,7
 43632   0054D6  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43633   0054D8  26D9               	addwf	fsr2l,f,c
 43634   0054DA  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43635   0054DC  22DA               	addwfc	fsr2h,f,c
 43636   0054DE  50DF               	movf	indf2,w,c
 43637   0054E0  010F               	movlb	15	; () banked
 43638   0054E2  6F2C               	movwf	44,b	;volatile
 43639                           
 43640                           ; BSR set to: 15
 43641                           ;../../VLCBlib_PIC/can18_ecan.c: 636:             TXB0D7 = mp->bytes[6];
 43642   0054E4  0100               	movlb	0	; () banked
 43643   0054E6  EE20 F008          	lfsr	2,8
 43644   0054EA  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43645   0054EC  26D9               	addwf	fsr2l,f,c
 43646   0054EE  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43647   0054F0  22DA               	addwfc	fsr2h,f,c
 43648   0054F2  50DF               	movf	indf2,w,c
 43649   0054F4  010F               	movlb	15	; () banked
 43650   0054F6  6F2D               	movwf	45,b	;volatile
 43651                           
 43652                           ; BSR set to: 15
 43653                           ;../../VLCBlib_PIC/can18_ecan.c: 637:             TXB0DLC = mp->len;
 43654   0054F8  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43655   0054FC  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43656   005500  50DF               	movf	indf2,w,c
 43657   005502  6F25               	movwf	37,b	;volatile
 43658                           
 43659                           ; BSR set to: 15
 43660                           ;../../VLCBlib_PIC/can18_ecan.c: 639:             canTransmitTimeout.val = tickGet();
 43661   005504  EC45  F05A         	call	i1_tickGet	;wreg free
 43662   005508  C060  F015         	movff	?i1_tickGet,_canTransmitTimeout
 43663   00550C  C061  F016         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 43664   005510  C062  F017         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 43665   005514  C063  F018         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 43666                           
 43667                           ;../../VLCBlib_PIC/can18_ecan.c: 640:             canTransmitFailed = 0;
 43668   005518  0E00               	movlw	0
 43669   00551A  0100               	movlb	0	; () banked
 43670   00551C  6FB7               	movwf	_canTransmitFailed& (0+255),b
 43671                           
 43672                           ; BSR set to: 0
 43673                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0CONbits.TXREQ = 1;
 43674   00551E  010F               	movlb	15	; () banked
 43675   005520  8720               	bsf	32,3,b	;volatile
 43676                           
 43677                           ; BSR set to: 15
 43678                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             PIE5bits.TXBnIE = 1;
 43679   005522  8876               	bsf	118,4,c	;volatile
 43680                           
 43681                           ; BSR set to: 15
 43682                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             canDiagnostics[0x05].asUint++;
 43683   005524  0101               	movlb	1	; () banked
 43684   005526  4B88               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 43685   005528  2B89               	incf	(_canDiagnostics+11)& (0+255),f,b
 43686                           
 43687                           ; BSR set to: 1
 43688                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             if (isEvent(mp->opc)) {
 43689   00552A  0100               	movlb	0	; () banked
 43690   00552C  EE20 F001          	lfsr	2,1
 43691   005530  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43692   005532  26D9               	addwf	fsr2l,f,c
 43693   005534  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43694   005536  22DA               	addwfc	fsr2h,f,c
 43695   005538  50DF               	movf	indf2,w,c
 43696   00553A  EC60  F060         	call	i1_isEvent
 43697   00553E  0900               	iorlw	0
 43698   005540  B4D8               	btfsc	status,2,c
 43699   005542  0012               	return	
 43700                           
 43701                           ;../../VLCBlib_PIC/can18_ecan.c: 648:                 m = getNextWriteMessage(&rxQueue);
 43702   005544  0E26               	movlw	low _rxQueue
 43703   005546  0100               	movlb	0	; () banked
 43704   005548  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 43705   00554A  EC72  F045         	call	i1_getNextWriteMessage	;wreg free
 43706   00554E  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 43707   005552  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 43708                           
 43709                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 if (m == ((void*)0)) {
 43710   005556  0100               	movlb	0	; () banked
 43711   005558  5171               	movf	checkTxFifo@m& (0+255),w,b
 43712   00555A  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 43713   00555C  A4D8               	btfss	status,2,c
 43714   00555E  D006               	goto	i1l20334
 43715                           
 43716                           ; BSR set to: 0
 43717                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                     canDiagnostics[0x07].asUint++;
 43718   005560  0101               	movlb	1	; () banked
 43719   005562  4B8C               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 43720   005564  2B8D               	incf	(_canDiagnostics+15)& (0+255),f,b
 43721                           
 43722                           ; BSR set to: 1
 43723                           ;../../VLCBlib_PIC/can18_ecan.c: 651:                     updateModuleErrorStatus();
 43724   005566  ECD8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 43725                           
 43726                           ;../../VLCBlib_PIC/can18_ecan.c: 652:                 } else {
 43727   00556A  0012               	return	
 43728   00556C                     i1l20334:
 43729                           
 43730                           ; BSR set to: 0
 43731                           ;../../VLCBlib_PIC/can18_ecan.c: 654:                     m->opc = mp->opc;
 43732   00556C  EE20 F001          	lfsr	2,1
 43733   005570  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43734   005572  26D9               	addwf	fsr2l,f,c
 43735   005574  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43736   005576  22DA               	addwfc	fsr2h,f,c
 43737   005578  EE10 F001          	lfsr	1,1
 43738   00557C  5171               	movf	checkTxFifo@m& (0+255),w,b
 43739   00557E  26E1               	addwf	fsr1l,f,c
 43740   005580  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43741   005582  22E2               	addwfc	fsr1h,f,c
 43742   005584  CFDF FFE7          	movff	indf2,indf1
 43743                           
 43744                           ; BSR set to: 0
 43745                           ;../../VLCBlib_PIC/can18_ecan.c: 655:                     m->len = mp->len;
 43746   005588  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 43747   00558C  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 43748   005590  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 43749   005594  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 43750   005598  CFDF FFE7          	movff	indf2,indf1
 43751                           
 43752                           ; BSR set to: 0
 43753                           ;../../VLCBlib_PIC/can18_ecan.c: 656:                     m->bytes[0] = mp->bytes[0];
 43754   00559C  EE20 F002          	lfsr	2,2
 43755   0055A0  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43756   0055A2  26D9               	addwf	fsr2l,f,c
 43757   0055A4  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43758   0055A6  22DA               	addwfc	fsr2h,f,c
 43759   0055A8  EE10 F002          	lfsr	1,2
 43760   0055AC  5171               	movf	checkTxFifo@m& (0+255),w,b
 43761   0055AE  26E1               	addwf	fsr1l,f,c
 43762   0055B0  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43763   0055B2  22E2               	addwfc	fsr1h,f,c
 43764   0055B4  CFDF FFE7          	movff	indf2,indf1
 43765                           
 43766                           ; BSR set to: 0
 43767                           ;../../VLCBlib_PIC/can18_ecan.c: 657:                     m->bytes[1] = mp->bytes[1];
 43768   0055B8  EE20 F003          	lfsr	2,3
 43769   0055BC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43770   0055BE  26D9               	addwf	fsr2l,f,c
 43771   0055C0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43772   0055C2  22DA               	addwfc	fsr2h,f,c
 43773   0055C4  EE10 F003          	lfsr	1,3
 43774   0055C8  5171               	movf	checkTxFifo@m& (0+255),w,b
 43775   0055CA  26E1               	addwf	fsr1l,f,c
 43776   0055CC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43777   0055CE  22E2               	addwfc	fsr1h,f,c
 43778   0055D0  CFDF FFE7          	movff	indf2,indf1
 43779                           
 43780                           ; BSR set to: 0
 43781                           ;../../VLCBlib_PIC/can18_ecan.c: 658:                     m->bytes[2] = mp->bytes[2];
 43782   0055D4  EE20 F004          	lfsr	2,4
 43783   0055D8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43784   0055DA  26D9               	addwf	fsr2l,f,c
 43785   0055DC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43786   0055DE  22DA               	addwfc	fsr2h,f,c
 43787   0055E0  EE10 F004          	lfsr	1,4
 43788   0055E4  5171               	movf	checkTxFifo@m& (0+255),w,b
 43789   0055E6  26E1               	addwf	fsr1l,f,c
 43790   0055E8  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43791   0055EA  22E2               	addwfc	fsr1h,f,c
 43792   0055EC  CFDF FFE7          	movff	indf2,indf1
 43793                           
 43794                           ; BSR set to: 0
 43795                           ;../../VLCBlib_PIC/can18_ecan.c: 659:                     m->bytes[3] = mp->bytes[3];
 43796   0055F0  EE20 F005          	lfsr	2,5
 43797   0055F4  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43798   0055F6  26D9               	addwf	fsr2l,f,c
 43799   0055F8  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43800   0055FA  22DA               	addwfc	fsr2h,f,c
 43801   0055FC  EE10 F005          	lfsr	1,5
 43802   005600  5171               	movf	checkTxFifo@m& (0+255),w,b
 43803   005602  26E1               	addwf	fsr1l,f,c
 43804   005604  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43805   005606  22E2               	addwfc	fsr1h,f,c
 43806   005608  CFDF FFE7          	movff	indf2,indf1
 43807                           
 43808                           ; BSR set to: 0
 43809                           ;../../VLCBlib_PIC/can18_ecan.c: 660:                     m->bytes[4] = mp->bytes[4];
 43810   00560C  EE20 F006          	lfsr	2,6
 43811   005610  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43812   005612  26D9               	addwf	fsr2l,f,c
 43813   005614  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43814   005616  22DA               	addwfc	fsr2h,f,c
 43815   005618  EE10 F006          	lfsr	1,6
 43816   00561C  5171               	movf	checkTxFifo@m& (0+255),w,b
 43817   00561E  26E1               	addwf	fsr1l,f,c
 43818   005620  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43819   005622  22E2               	addwfc	fsr1h,f,c
 43820   005624  CFDF FFE7          	movff	indf2,indf1
 43821                           
 43822                           ; BSR set to: 0
 43823                           ;../../VLCBlib_PIC/can18_ecan.c: 661:                     m->bytes[5] = mp->bytes[5];
 43824   005628  EE20 F007          	lfsr	2,7
 43825   00562C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43826   00562E  26D9               	addwf	fsr2l,f,c
 43827   005630  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43828   005632  22DA               	addwfc	fsr2h,f,c
 43829   005634  EE10 F007          	lfsr	1,7
 43830   005638  5171               	movf	checkTxFifo@m& (0+255),w,b
 43831   00563A  26E1               	addwf	fsr1l,f,c
 43832   00563C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43833   00563E  22E2               	addwfc	fsr1h,f,c
 43834   005640  CFDF FFE7          	movff	indf2,indf1
 43835                           
 43836                           ; BSR set to: 0
 43837                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                     m->bytes[6] = mp->bytes[6];
 43838   005644  EE20 F008          	lfsr	2,8
 43839   005648  5173               	movf	checkTxFifo@mp& (0+255),w,b
 43840   00564A  26D9               	addwf	fsr2l,f,c
 43841   00564C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 43842   00564E  22DA               	addwfc	fsr2h,f,c
 43843   005650  EE10 F008          	lfsr	1,8
 43844   005654  5171               	movf	checkTxFifo@m& (0+255),w,b
 43845   005656  26E1               	addwf	fsr1l,f,c
 43846   005658  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 43847   00565A  22E2               	addwfc	fsr1h,f,c
 43848   00565C  CFDF FFE7          	movff	indf2,indf1
 43849   005660  0012               	return	
 43850   005662                     i1l20352:
 43851                           
 43852                           ; BSR set to: 0
 43853                           ;../../VLCBlib_PIC/can18_ecan.c: 668:             canTransmitTimeout.val = 0;
 43854   005662  0E00               	movlw	0
 43855   005664  6E15               	movwf	_canTransmitTimeout^0,c
 43856   005666  0E00               	movlw	0
 43857   005668  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 43858   00566A  0E00               	movlw	0
 43859   00566C  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 43860   00566E  0E00               	movlw	0
 43861   005670  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 43862                           
 43863                           ;../../VLCBlib_PIC/can18_ecan.c: 669:             TXB0CON = 0;
 43864   005672  0E00               	movlw	0
 43865   005674  010F               	movlb	15	; () banked
 43866   005676  6F20               	movwf	32,b	;volatile
 43867                           
 43868                           ; BSR set to: 15
 43869                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             PIR5bits.TXBnIF = 0;
 43870   005678  9877               	bcf	119,4,c	;volatile
 43871                           
 43872                           ; BSR set to: 15
 43873                           ;../../VLCBlib_PIC/can18_ecan.c: 671:             PIE5bits.TXBnIE = 0;
 43874   00567A  9876               	bcf	118,4,c	;volatile
 43875   00567C  0012               	return	
 43876   00567E                     i1l2923:
 43877                           
 43878                           ; BSR set to: 15
 43879                           ;../../VLCBlib_PIC/can18_ecan.c: 675:         PIR5bits.TXBnIF = 0;
 43880   00567E  9877               	bcf	119,4,c	;volatile
 43881                           
 43882                           ;../../VLCBlib_PIC/can18_ecan.c: 676:         PIE5bits.TXBnIE = 1;
 43883   005680  8876               	bsf	118,4,c	;volatile
 43884   005682  0012               	return		;funcret
 43885   005684                     __end_of_checkTxFifo:
 43886                           	callstack 0
 43887                           
 43888 ;; *************** function i1_tickGet *****************
 43889 ;; Defined at:
 43890 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 43891 ;; Parameters:    Size  Location     Type
 43892 ;;		None
 43893 ;; Auto vars:     Size  Location     Type
 43894 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 43895 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 43896 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 43897 ;; Return value:  Size  Location     Type
 43898 ;;                  4    0[BANK0 ] unsigned long 
 43899 ;; Registers used:
 43900 ;;		wreg, status,2, status,0
 43901 ;; Tracked objects:
 43902 ;;		On entry : 0/0
 43903 ;;		On exit  : 0/0
 43904 ;;		Unchanged: 0/0
 43905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43907 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43909 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43910 ;;Total ram usage:       10 bytes
 43911 ;; Hardware stack levels used: 1
 43912 ;; Hardware stack levels required when called: 6
 43913 ;; This function calls:
 43914 ;;		Nothing
 43915 ;; This function is called by:
 43916 ;;		_checkTxFifo
 43917 ;;		_checkCANTimeout
 43918 ;; This function uses a non-reentrant model
 43919 ;;
 43920                           
 43921                           	psect	text196
 43922   00B48A                     __ptext196:
 43923                           	callstack 0
 43924   00B48A                     i1_tickGet:
 43925                           	callstack 3
 43926                           
 43927                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 43928                           
 43929                           ;incstack = 0
 43930   00B48A  0E00               	movlw	0
 43931   00B48C  0100               	movlb	0	; () banked
 43932   00B48E  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 43933                           
 43934                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 43935   00B490  0E00               	movlw	0
 43936   00B492  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 43937                           
 43938                           ; BSR set to: 0
 43939                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 43940   00B494  9AF2               	bcf	242,5,c	;volatile
 43941   00B496                     i1l19452:
 43942                           
 43943                           ; BSR set to: 0
 43944                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 43945   00B496  0E00               	movlw	0
 43946   00B498  B4F2               	btfsc	242,2,c	;volatile
 43947   00B49A  0E01               	movlw	1
 43948   00B49C  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 43949                           
 43950                           ; BSR set to: 0
 43951                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 43952   00B49E  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 43953                           
 43954                           ; BSR set to: 0
 43955                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 43956   00B4A2  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 43957                           
 43958                           ; BSR set to: 0
 43959                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 43960   00B4A6  0E00               	movlw	0
 43961   00B4A8  B4F2               	btfsc	242,2,c	;volatile
 43962   00B4AA  0E01               	movlw	1
 43963   00B4AC  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 43964                           
 43965                           ; BSR set to: 0
 43966                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 43967   00B4AE  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 43968   00B4B0  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 43969   00B4B2  A4D8               	btfss	status,2,c
 43970   00B4B4  D7F0               	goto	i1l19452
 43971                           
 43972                           ; BSR set to: 0
 43973                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 43974   00B4B6  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 43975   00B4B8  B4D8               	btfsc	status,2,c
 43976   00B4BA  D005               	goto	i1l19472
 43977                           
 43978                           ; BSR set to: 0
 43979                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 43980   00B4BC  94F2               	bcf	242,2,c	;volatile
 43981                           
 43982                           ; BSR set to: 0
 43983                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 43984   00B4BE  2BC4               	incf	_timerExtension1& (0+255),f,b	;volatile
 43985                           
 43986                           ; BSR set to: 0
 43987                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 43988   00B4C0  51C4               	movf	_timerExtension1& (0+255),w,b	;volatile
 43989   00B4C2  B4D8               	btfsc	status,2,c
 43990                           
 43991                           ; BSR set to: 0
 43992                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 43993   00B4C4  2BC3               	incf	_timerExtension2& (0+255),f,b	;volatile
 43994   00B4C6                     i1l19472:
 43995                           
 43996                           ; BSR set to: 0
 43997                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 43998   00B4C6  51C4               	movf	_timerExtension1& (0+255),w,b	;volatile
 43999   00B4C8  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 44000                           
 44001                           ; BSR set to: 0
 44002                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44003   00B4CA  51C3               	movf	_timerExtension2& (0+255),w,b	;volatile
 44004   00B4CC  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 44005                           
 44006                           ; BSR set to: 0
 44007                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 44008   00B4CE  8AF2               	bsf	242,5,c	;volatile
 44009                           
 44010                           ; BSR set to: 0
 44011                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44012   00B4D0  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 44013   00B4D4  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 44014   00B4D8  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 44015   00B4DC  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 44016                           
 44017                           ; BSR set to: 0
 44018   00B4E0  0012               	return		;funcret
 44019   00B4E2                     __end_ofi1_tickGet:
 44020                           	callstack 0
 44021                           
 44022 ;; *************** function i1_pop *****************
 44023 ;; Defined at:
 44024 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 44025 ;; Parameters:    Size  Location     Type
 44026 ;;  q               2    0[BANK0 ] PTR struct MessageQueue
 44027 ;;		 -> txQueue(5), rxQueue(5), 
 44028 ;; Auto vars:     Size  Location     Type
 44029 ;;  ret             2    7[BANK0 ] PTR struct Message
 44030 ;;		 -> txBuffers(72), rxBuffers(288), 
 44031 ;; Return value:  Size  Location     Type
 44032 ;;                  2    0[BANK0 ] PTR struct Message
 44033 ;; Registers used:
 44034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44035 ;; Tracked objects:
 44036 ;;		On entry : 0/0
 44037 ;;		On exit  : 0/0
 44038 ;;		Unchanged: 0/0
 44039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44041 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44042 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44043 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44044 ;;Total ram usage:        9 bytes
 44045 ;; Hardware stack levels used: 1
 44046 ;; Hardware stack levels required when called: 6
 44047 ;; This function calls:
 44048 ;;		Nothing
 44049 ;; This function is called by:
 44050 ;;		_checkTxFifo
 44051 ;; This function uses a non-reentrant model
 44052 ;;
 44053                           
 44054                           	psect	text197
 44055   009910                     __ptext197:
 44056                           	callstack 0
 44057   009910                     i1_pop:
 44058                           	callstack 3
 44059                           
 44060                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 44061                           
 44062                           ; BSR set to: 0
 44063                           ;incstack = 0
 44064   009910  0100               	movlb	0	; () banked
 44065   009912  EE20 F002          	lfsr	2,2
 44066   009916  5160               	movf	i1pop@q& (0+255),w,b
 44067   009918  26D9               	addwf	fsr2l,f,c
 44068   00991A  5161               	movf	(i1pop@q+1)& (0+255),w,b
 44069   00991C  22DA               	addwfc	fsr2h,f,c
 44070   00991E  EE10 F003          	lfsr	1,3
 44071   009922  5160               	movf	i1pop@q& (0+255),w,b
 44072   009924  26E1               	addwf	fsr1l,f,c
 44073   009926  5161               	movf	(i1pop@q+1)& (0+255),w,b
 44074   009928  22E2               	addwfc	fsr1h,f,c
 44075   00992A  50DE               	movf	postinc2,w,c
 44076   00992C  18E6               	xorwf	postinc1,w,c
 44077   00992E  A4D8               	btfss	status,2,c
 44078   009930  D005               	goto	i1l19514
 44079                           
 44080                           ; BSR set to: 0
 44081                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 44082   009932  0E00               	movlw	0
 44083   009934  6F60               	movwf	?i1_pop& (0+255),b
 44084   009936  0E00               	movlw	0
 44085   009938  6F61               	movwf	(?i1_pop+1)& (0+255),b
 44086   00993A  0012               	return	
 44087   00993C                     i1l19514:
 44088                           
 44089                           ; BSR set to: 0
 44090                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 44091   00993C  EE20 F002          	lfsr	2,2
 44092   009940  5160               	movf	i1pop@q& (0+255),w,b
 44093   009942  26D9               	addwf	fsr2l,f,c
 44094   009944  5161               	movf	(i1pop@q+1)& (0+255),w,b
 44095   009946  22DA               	addwfc	fsr2h,f,c
 44096   009948  50DF               	movf	indf2,w,c
 44097   00994A  6F62               	movwf	??i1_pop& (0+255),b
 44098   00994C  5162               	movf	??i1_pop& (0+255),w,b
 44099   00994E  0D09               	mullw	9
 44100   009950  CFF3 F063          	movff	prodl,??i1_pop+1
 44101   009954  CFF4 F064          	movff	prodh,??i1_pop+2
 44102   009958  C060  FFD9         	movff	i1pop@q,fsr2l
 44103   00995C  C061  FFDA         	movff	i1pop@q+1,fsr2h
 44104   009960  CFDE F065          	movff	postinc2,??i1_pop+3
 44105   009964  CFDD F066          	movff	postdec2,??i1_pop+4
 44106   009968  5163               	movf	(??i1_pop+1)& (0+255),w,b
 44107   00996A  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 44108   00996C  6F67               	movwf	i1pop@ret& (0+255),b
 44109   00996E  5164               	movf	(??i1_pop+2)& (0+255),w,b
 44110   009970  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 44111   009972  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 44112                           
 44113                           ; BSR set to: 0
 44114   009974  EE20 F002          	lfsr	2,2
 44115   009978  5160               	movf	i1pop@q& (0+255),w,b
 44116   00997A  26D9               	addwf	fsr2l,f,c
 44117   00997C  5161               	movf	(i1pop@q+1)& (0+255),w,b
 44118   00997E  22DA               	addwfc	fsr2h,f,c
 44119   009980  2ADF               	incf	indf2,f,c
 44120                           
 44121                           ; BSR set to: 0
 44122                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 44123   009982  EE20 F004          	lfsr	2,4
 44124   009986  5160               	movf	i1pop@q& (0+255),w,b
 44125   009988  26D9               	addwf	fsr2l,f,c
 44126   00998A  5161               	movf	(i1pop@q+1)& (0+255),w,b
 44127   00998C  22DA               	addwfc	fsr2h,f,c
 44128   00998E  EE10 F002          	lfsr	1,2
 44129   009992  5160               	movf	i1pop@q& (0+255),w,b
 44130   009994  26E1               	addwf	fsr1l,f,c
 44131   009996  5161               	movf	(i1pop@q+1)& (0+255),w,b
 44132   009998  22E2               	addwfc	fsr1h,f,c
 44133   00999A  50DE               	movf	postinc2,w,c
 44134   00999C  5CE6               	subwf	postinc1,w,c
 44135   00999E  A0D8               	btfss	status,0,c
 44136   0099A0  D007               	goto	i1l19522
 44137                           
 44138                           ; BSR set to: 0
 44139   0099A2  EE20 F002          	lfsr	2,2
 44140   0099A6  5160               	movf	i1pop@q& (0+255),w,b
 44141   0099A8  26D9               	addwf	fsr2l,f,c
 44142   0099AA  5161               	movf	(i1pop@q+1)& (0+255),w,b
 44143   0099AC  22DA               	addwfc	fsr2h,f,c
 44144   0099AE  6ADF               	clrf	indf2,c
 44145   0099B0                     i1l19522:
 44146                           
 44147                           ; BSR set to: 0
 44148                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 44149   0099B0  C067  F060         	movff	i1pop@ret,?i1_pop
 44150   0099B4  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 44151                           
 44152                           ; BSR set to: 0
 44153   0099B8  0012               	return		;funcret
 44154   0099BA                     __end_ofi1_pop:
 44155                           	callstack 0
 44156                           
 44157 ;; *************** function i1_isEvent *****************
 44158 ;; Defined at:
 44159 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 44160 ;; Parameters:    Size  Location     Type
 44161 ;;  opc             1    wreg     unsigned char 
 44162 ;; Auto vars:     Size  Location     Type
 44163 ;;  opc             1    1[BANK0 ] unsigned char 
 44164 ;; Return value:  Size  Location     Type
 44165 ;;                  1    wreg      enum E12700
 44166 ;; Registers used:
 44167 ;;		wreg, status,2, status,0
 44168 ;; Tracked objects:
 44169 ;;		On entry : 0/0
 44170 ;;		On exit  : 0/0
 44171 ;;		Unchanged: 0/0
 44172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44177 ;;Total ram usage:        2 bytes
 44178 ;; Hardware stack levels used: 1
 44179 ;; Hardware stack levels required when called: 6
 44180 ;; This function calls:
 44181 ;;		Nothing
 44182 ;; This function is called by:
 44183 ;;		_checkTxFifo
 44184 ;; This function uses a non-reentrant model
 44185 ;;
 44186                           
 44187                           	psect	text198
 44188   00C0C0                     __ptext198:
 44189                           	callstack 0
 44190   00C0C0                     i1_isEvent:
 44191                           	callstack 3
 44192                           
 44193                           ; BSR set to: 0
 44194                           ;incstack = 0
 44195                           ;i1isEvent@opc stored from wreg
 44196   00C0C0  0100               	movlb	0	; () banked
 44197   00C0C2  6F61               	movwf	i1isEvent@opc& (0+255),b
 44198                           
 44199                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 44200   00C0C4  0E00               	movlw	0
 44201   00C0C6  0100               	movlb	0	; () banked
 44202   00C0C8  6F60               	movwf	i1_isEvent$5817& (0+255),b
 44203                           
 44204                           ; BSR set to: 0
 44205   00C0CA  5161               	movf	i1isEvent@opc& (0+255),w,b
 44206   00C0CC  0B90               	andlw	144
 44207   00C0CE  0A90               	xorlw	144
 44208   00C0D0  A4D8               	btfss	status,2,c
 44209   00C0D2  D008               	goto	i1l2429
 44210                           
 44211                           ; BSR set to: 0
 44212   00C0D4  5161               	movf	i1isEvent@opc& (0+255),w,b
 44213   00C0D6  0AFF               	xorlw	255
 44214   00C0D8  0B06               	andlw	6
 44215   00C0DA  0A06               	xorlw	6
 44216   00C0DC  A4D8               	btfss	status,2,c
 44217   00C0DE  D002               	goto	i1l2429
 44218                           
 44219                           ; BSR set to: 0
 44220   00C0E0  0E01               	movlw	1
 44221   00C0E2  6F60               	movwf	i1_isEvent$5817& (0+255),b
 44222   00C0E4                     i1l2429:
 44223                           
 44224                           ; BSR set to: 0
 44225   00C0E4  5160               	movf	i1_isEvent$5817& (0+255),w,b
 44226                           
 44227                           ; BSR set to: 0
 44228   00C0E6  0012               	return		;funcret
 44229   00C0E8                     __end_ofi1_isEvent:
 44230                           	callstack 0
 44231                           
 44232 ;; *************** function _canFillRxFifo *****************
 44233 ;; Defined at:
 44234 ;;		line 761 in file "../../VLCBlib_PIC/can18_ecan.c"
 44235 ;; Parameters:    Size  Location     Type
 44236 ;;		None
 44237 ;; Auto vars:     Size  Location     Type
 44238 ;;  m               2   14[BANK0 ] PTR struct Message
 44239 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44240 ;;  ptr             2   12[BANK0 ] PTR unsigned char 
 44241 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 44242 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 44243 ;;		 -> NULL(0), 
 44244 ;;  hiIndex         1    0        unsigned char 
 44245 ;; Return value:  Size  Location     Type
 44246 ;;                  1    wreg      void 
 44247 ;; Registers used:
 44248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44249 ;; Tracked objects:
 44250 ;;		On entry : 0/0
 44251 ;;		On exit  : 0/0
 44252 ;;		Unchanged: 0/0
 44253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44255 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44257 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44258 ;;Total ram usage:        4 bytes
 44259 ;; Hardware stack levels used: 1
 44260 ;; Hardware stack levels required when called: 7
 44261 ;; This function calls:
 44262 ;;		i1_getBufferPointer
 44263 ;;		i1_getNextWriteMessage
 44264 ;;		i1_updateModuleErrorStatus
 44265 ;; This function is called by:
 44266 ;;		_canIsr
 44267 ;; This function uses a non-reentrant model
 44268 ;;
 44269                           
 44270                           	psect	text199
 44271   0076F0                     __ptext199:
 44272                           	callstack 0
 44273   0076F0                     _canFillRxFifo:
 44274                           	callstack 3
 44275                           
 44276                           ;../../VLCBlib_PIC/can18_ecan.c: 762:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          763:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 764:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 766:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44277                           
 44278                           ; BSR set to: 0
 44279                           ;incstack = 0
 44280   0076F0  D0A8               	goto	i1l21646
 44281   0076F2                     i1l21612:
 44282                           
 44283                           ;../../VLCBlib_PIC/can18_ecan.c: 767:         ptr = getBufferPointer(CANCON & 0x07U);
 44284   0076F2  506F               	movf	111,w,c	;volatile
 44285   0076F4  0B07               	andlw	7
 44286   0076F6  EC8F  F050         	call	i1_getBufferPointer
 44287   0076FA  C060  F06C         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 44288   0076FE  C061  F06D         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 44289                           
 44290                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         PIR5bits.RXBnIF = 0;
 44291   007702  9277               	bcf	119,1,c	;volatile
 44292                           
 44293                           ;../../VLCBlib_PIC/can18_ecan.c: 769:         if (COMSTATbits.RXB1OVFL) {
 44294   007704  BC71               	btfsc	113,6,c	;volatile
 44295                           
 44296                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             COMSTATbits.RXB1OVFL = 0;
 44297   007706  9C71               	bcf	113,6,c	;volatile
 44298                           
 44299                           ;../../VLCBlib_PIC/can18_ecan.c: 774:         m = getNextWriteMessage(&rxQueue);
 44300   007708  0E26               	movlw	low _rxQueue
 44301   00770A  0100               	movlb	0	; () banked
 44302   00770C  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44303   00770E  EC72  F045         	call	i1_getNextWriteMessage	;wreg free
 44304   007712  C060  F06E         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 44305   007716  C061  F06F         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 44306                           
 44307                           ;../../VLCBlib_PIC/can18_ecan.c: 775:         if (m == ((void*)0)) {
 44308   00771A  0100               	movlb	0	; () banked
 44309   00771C  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44310   00771E  116F               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 44311   007720  A4D8               	btfss	status,2,c
 44312   007722  D009               	goto	i1l21634
 44313                           
 44314                           ; BSR set to: 0
 44315                           ;../../VLCBlib_PIC/can18_ecan.c: 776:             canDiagnostics[0x07].asUint++;
 44316   007724  0101               	movlb	1	; () banked
 44317   007726  4B8C               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 44318   007728  2B8D               	incf	(_canDiagnostics+15)& (0+255),f,b
 44319                           
 44320                           ; BSR set to: 1
 44321                           ;../../VLCBlib_PIC/can18_ecan.c: 777:             updateModuleErrorStatus();
 44322   00772A  ECD8  F061         	call	i1_updateModuleErrorStatus	;wreg free
 44323                           
 44324                           ;../../VLCBlib_PIC/can18_ecan.c: 779:             if (PIR5bits.IRXIF) {
 44325   00772E  AE77               	btfss	119,7,c	;volatile
 44326   007730  0012               	return	
 44327                           
 44328                           ;../../VLCBlib_PIC/can18_ecan.c: 780:                 PIR5bits.IRXIF = 0;
 44329   007732  9E77               	bcf	119,7,c	;volatile
 44330   007734  0012               	return	
 44331   007736                     i1l21634:
 44332                           
 44333                           ; BSR set to: 0
 44334                           ;../../VLCBlib_PIC/can18_ecan.c: 785:             m->opc = ptr[6];
 44335   007736  EE20 F006          	lfsr	2,6
 44336   00773A  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44337   00773C  26D9               	addwf	fsr2l,f,c
 44338   00773E  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44339   007740  22DA               	addwfc	fsr2h,f,c
 44340   007742  EE10 F001          	lfsr	1,1
 44341   007746  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44342   007748  26E1               	addwf	fsr1l,f,c
 44343   00774A  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44344   00774C  22E2               	addwfc	fsr1h,f,c
 44345   00774E  CFDF FFE7          	movff	indf2,indf1
 44346                           
 44347                           ;../../VLCBlib_PIC/can18_ecan.c: 786:             m->bytes[0] = ptr[7];
 44348   007752  EE20 F007          	lfsr	2,7
 44349   007756  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44350   007758  26D9               	addwf	fsr2l,f,c
 44351   00775A  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44352   00775C  22DA               	addwfc	fsr2h,f,c
 44353   00775E  EE10 F002          	lfsr	1,2
 44354   007762  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44355   007764  26E1               	addwf	fsr1l,f,c
 44356   007766  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44357   007768  22E2               	addwfc	fsr1h,f,c
 44358   00776A  CFDF FFE7          	movff	indf2,indf1
 44359                           
 44360                           ;../../VLCBlib_PIC/can18_ecan.c: 787:             m->bytes[1] = ptr[8];
 44361   00776E  EE20 F008          	lfsr	2,8
 44362   007772  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44363   007774  26D9               	addwf	fsr2l,f,c
 44364   007776  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44365   007778  22DA               	addwfc	fsr2h,f,c
 44366   00777A  EE10 F003          	lfsr	1,3
 44367   00777E  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44368   007780  26E1               	addwf	fsr1l,f,c
 44369   007782  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44370   007784  22E2               	addwfc	fsr1h,f,c
 44371   007786  CFDF FFE7          	movff	indf2,indf1
 44372                           
 44373                           ;../../VLCBlib_PIC/can18_ecan.c: 788:             m->bytes[2] = ptr[9];
 44374   00778A  EE20 F009          	lfsr	2,9
 44375   00778E  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44376   007790  26D9               	addwf	fsr2l,f,c
 44377   007792  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44378   007794  22DA               	addwfc	fsr2h,f,c
 44379   007796  EE10 F004          	lfsr	1,4
 44380   00779A  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44381   00779C  26E1               	addwf	fsr1l,f,c
 44382   00779E  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44383   0077A0  22E2               	addwfc	fsr1h,f,c
 44384   0077A2  CFDF FFE7          	movff	indf2,indf1
 44385                           
 44386                           ;../../VLCBlib_PIC/can18_ecan.c: 789:             m->bytes[3] = ptr[10];
 44387   0077A6  EE20 F00A          	lfsr	2,10
 44388   0077AA  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44389   0077AC  26D9               	addwf	fsr2l,f,c
 44390   0077AE  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44391   0077B0  22DA               	addwfc	fsr2h,f,c
 44392   0077B2  EE10 F005          	lfsr	1,5
 44393   0077B6  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44394   0077B8  26E1               	addwf	fsr1l,f,c
 44395   0077BA  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44396   0077BC  22E2               	addwfc	fsr1h,f,c
 44397   0077BE  CFDF FFE7          	movff	indf2,indf1
 44398                           
 44399                           ;../../VLCBlib_PIC/can18_ecan.c: 790:             m->bytes[4] = ptr[11];
 44400   0077C2  EE20 F00B          	lfsr	2,11
 44401   0077C6  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44402   0077C8  26D9               	addwf	fsr2l,f,c
 44403   0077CA  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44404   0077CC  22DA               	addwfc	fsr2h,f,c
 44405   0077CE  EE10 F006          	lfsr	1,6
 44406   0077D2  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44407   0077D4  26E1               	addwf	fsr1l,f,c
 44408   0077D6  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44409   0077D8  22E2               	addwfc	fsr1h,f,c
 44410   0077DA  CFDF FFE7          	movff	indf2,indf1
 44411                           
 44412                           ;../../VLCBlib_PIC/can18_ecan.c: 791:             m->bytes[5] = ptr[12];
 44413   0077DE  EE20 F00C          	lfsr	2,12
 44414   0077E2  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44415   0077E4  26D9               	addwf	fsr2l,f,c
 44416   0077E6  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44417   0077E8  22DA               	addwfc	fsr2h,f,c
 44418   0077EA  EE10 F007          	lfsr	1,7
 44419   0077EE  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44420   0077F0  26E1               	addwf	fsr1l,f,c
 44421   0077F2  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44422   0077F4  22E2               	addwfc	fsr1h,f,c
 44423   0077F6  CFDF FFE7          	movff	indf2,indf1
 44424                           
 44425                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             m->bytes[6] = ptr[13];
 44426   0077FA  EE20 F00D          	lfsr	2,13
 44427   0077FE  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44428   007800  26D9               	addwf	fsr2l,f,c
 44429   007802  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44430   007804  22DA               	addwfc	fsr2h,f,c
 44431   007806  EE10 F008          	lfsr	1,8
 44432   00780A  516E               	movf	canFillRxFifo@m& (0+255),w,b
 44433   00780C  26E1               	addwf	fsr1l,f,c
 44434   00780E  516F               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 44435   007810  22E2               	addwfc	fsr1h,f,c
 44436   007812  CFDF FFE7          	movff	indf2,indf1
 44437                           
 44438                           ; BSR set to: 0
 44439                           ;../../VLCBlib_PIC/can18_ecan.c: 793:             m->len = ptr[5]&0xF;
 44440   007816  EE20 F005          	lfsr	2,5
 44441   00781A  516C               	movf	canFillRxFifo@ptr& (0+255),w,b
 44442   00781C  26D9               	addwf	fsr2l,f,c
 44443   00781E  516D               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 44444   007820  22DA               	addwfc	fsr2h,f,c
 44445   007822  50DF               	movf	indf2,w,c
 44446   007824  0B0F               	andlw	15
 44447   007826  C06E  FFD9         	movff	canFillRxFifo@m,fsr2l
 44448   00782A  C06F  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 44449   00782E  6EDF               	movwf	indf2,c
 44450                           
 44451                           ; BSR set to: 0
 44452                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         if (PIR5bits.IRXIF) {
 44453   007830  BE77               	btfsc	119,7,c	;volatile
 44454                           
 44455                           ; BSR set to: 0
 44456                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             PIR5bits.IRXIF = 0;
 44457   007832  9E77               	bcf	119,7,c	;volatile
 44458                           
 44459                           ; BSR set to: 0
 44460                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         ptr[0] &= 0x7f;
 44461   007834  C06C  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 44462   007838  C06D  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 44463   00783C  0E7F               	movlw	127
 44464   00783E  16DF               	andwf	indf2,f,c
 44465                           
 44466                           ; BSR set to: 0
 44467                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         PIR5bits.FIFOWMIF = 0;
 44468   007840  9077               	bcf	119,0,c	;volatile
 44469   007842                     i1l21646:
 44470                           
 44471                           ;../../VLCBlib_PIC/can18_ecan.c: 766:     while (COMSTATbits.NOT_FIFOEMPTY) {
 44472   007842  AE71               	btfss	113,7,c	;volatile
 44473   007844  0012               	return	
 44474   007846  D755               	goto	i1l21612
 44475   007848                     __end_of_canFillRxFifo:
 44476                           	callstack 0
 44477                           
 44478 ;; *************** function i1_updateModuleErrorStatus *****************
 44479 ;; Defined at:
 44480 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 44481 ;; Parameters:    Size  Location     Type
 44482 ;;		None
 44483 ;; Auto vars:     Size  Location     Type
 44484 ;;		None
 44485 ;; Return value:  Size  Location     Type
 44486 ;;                  1    wreg      void 
 44487 ;; Registers used:
 44488 ;;		wreg, status,2, status,0
 44489 ;; Tracked objects:
 44490 ;;		On entry : 0/0
 44491 ;;		On exit  : 0/0
 44492 ;;		Unchanged: 0/0
 44493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44498 ;;Total ram usage:        0 bytes
 44499 ;; Hardware stack levels used: 1
 44500 ;; Hardware stack levels required when called: 6
 44501 ;; This function calls:
 44502 ;;		Nothing
 44503 ;; This function is called by:
 44504 ;;		_checkTxFifo
 44505 ;;		_checkCANTimeout
 44506 ;;		_canTxError
 44507 ;;		_canFillRxFifo
 44508 ;; This function uses a non-reentrant model
 44509 ;;
 44510                           
 44511                           	psect	text200
 44512   00C3B0                     __ptext200:
 44513                           	callstack 0
 44514   00C3B0                     i1_updateModuleErrorStatus:
 44515                           	callstack 3
 44516                           
 44517                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 44518                           
 44519                           ;incstack = 0
 44520   00C3B0  0101               	movlb	1	; () banked
 44521   00C3B2  299E               	incf	_mnsDiagnostics& (0+255),w,b
 44522   00C3B4  B4D8               	btfsc	status,2,c
 44523   00C3B6  0012               	return	
 44524                           
 44525                           ; BSR set to: 1
 44526                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 44527   00C3B8  2B9E               	incf	_mnsDiagnostics& (0+255),f,b
 44528                           
 44529                           ; BSR set to: 1
 44530   00C3BA  0012               	return		;funcret
 44531   00C3BC                     __end_ofi1_updateModuleErrorStatus:
 44532                           	callstack 0
 44533                           
 44534 ;; *************** function i1_getNextWriteMessage *****************
 44535 ;; Defined at:
 44536 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 44537 ;; Parameters:    Size  Location     Type
 44538 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44539 ;;		 -> rxQueue(5), 
 44540 ;; Auto vars:     Size  Location     Type
 44541 ;;  wr              1   11[BANK0 ] unsigned char 
 44542 ;; Return value:  Size  Location     Type
 44543 ;;                  2    0[BANK0 ] PTR struct Message
 44544 ;; Registers used:
 44545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44546 ;; Tracked objects:
 44547 ;;		On entry : 0/0
 44548 ;;		On exit  : 0/0
 44549 ;;		Unchanged: 0/0
 44550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44551 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44553 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44554 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44555 ;;Total ram usage:       12 bytes
 44556 ;; Hardware stack levels used: 1
 44557 ;; Hardware stack levels required when called: 6
 44558 ;; This function calls:
 44559 ;;		Nothing
 44560 ;; This function is called by:
 44561 ;;		_checkTxFifo
 44562 ;;		_canFillRxFifo
 44563 ;; This function uses a non-reentrant model
 44564 ;;
 44565                           
 44566                           	psect	text201
 44567   008AE4                     __ptext201:
 44568                           	callstack 0
 44569   008AE4                     i1_getNextWriteMessage:
 44570                           	callstack 3
 44571                           
 44572                           ; BSR set to: 1
 44573                           ;incstack = 0
 44574   008AE4  0100               	movlb	0	; () banked
 44575   008AE6  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44576   008AE8  6ED9               	movwf	fsr2l,c
 44577   008AEA  6ADA               	clrf	fsr2h,c
 44578   008AEC  0E02               	movlw	2
 44579   008AEE  26D9               	addwf	fsr2l,f,c
 44580   008AF0  50DF               	movf	indf2,w,c
 44581   008AF2  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 44582   008AF4  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 44583   008AF6  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44584   008AF8  6ED9               	movwf	fsr2l,c
 44585   008AFA  6ADA               	clrf	fsr2h,c
 44586   008AFC  0E04               	movlw	4
 44587   008AFE  26D9               	addwf	fsr2l,f,c
 44588   008B00  50DF               	movf	indf2,w,c
 44589   008B02  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 44590   008B04  0EFF               	movlw	255
 44591   008B06  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44592   008B08  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 44593   008B0A  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 44594   008B0C  0EFF               	movlw	255
 44595   008B0E  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 44596   008B10  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44597   008B12  6ED9               	movwf	fsr2l,c
 44598   008B14  6ADA               	clrf	fsr2h,c
 44599   008B16  0E03               	movlw	3
 44600   008B18  26D9               	addwf	fsr2l,f,c
 44601   008B1A  50DF               	movf	indf2,w,c
 44602   008B1C  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 44603   008B1E  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 44604   008B20  0E01               	movlw	1
 44605   008B22  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 44606   008B24  0E00               	movlw	0
 44607   008B26  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 44608   008B28  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44609   008B2A  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 44610   008B2C  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 44611   008B2E  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 44612   008B30  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 44613   008B32  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 44614   008B34  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44615   008B36  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 44616   008B38  E109               	bnz	i1l19498
 44617   008B3A  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44618   008B3C  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 44619   008B3E  A4D8               	btfss	status,2,c
 44620   008B40  D005               	goto	i1l19498
 44621                           
 44622                           ; BSR set to: 0
 44623   008B42  0E00               	movlw	0
 44624   008B44  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44625   008B46  0E00               	movlw	0
 44626   008B48  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44627   008B4A  0012               	return	
 44628   008B4C                     i1l19498:
 44629                           
 44630                           ; BSR set to: 0
 44631   008B4C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44632   008B4E  6ED9               	movwf	fsr2l,c
 44633   008B50  6ADA               	clrf	fsr2h,c
 44634   008B52  0E03               	movlw	3
 44635   008B54  26D9               	addwf	fsr2l,f,c
 44636   008B56  50DF               	movf	indf2,w,c
 44637   008B58  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 44638   008B5A  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44639   008B5C  6ED9               	movwf	fsr2l,c
 44640   008B5E  6ADA               	clrf	fsr2h,c
 44641   008B60  0E03               	movlw	3
 44642   008B62  26D9               	addwf	fsr2l,f,c
 44643   008B64  2ADF               	incf	indf2,f,c
 44644                           
 44645                           ; BSR set to: 0
 44646   008B66  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44647   008B68  6ED9               	movwf	fsr2l,c
 44648   008B6A  6ADA               	clrf	fsr2h,c
 44649   008B6C  0E04               	movlw	4
 44650   008B6E  26D9               	addwf	fsr2l,f,c
 44651   008B70  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44652   008B72  6EE1               	movwf	fsr1l,c
 44653   008B74  6AE2               	clrf	fsr1h,c
 44654   008B76  0E03               	movlw	3
 44655   008B78  26E1               	addwf	fsr1l,f,c
 44656   008B7A  50DE               	movf	postinc2,w,c
 44657   008B7C  5CE6               	subwf	postinc1,w,c
 44658   008B7E  A0D8               	btfss	status,0,c
 44659   008B80  D006               	goto	i1l19504
 44660                           
 44661                           ; BSR set to: 0
 44662   008B82  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44663   008B84  6ED9               	movwf	fsr2l,c
 44664   008B86  6ADA               	clrf	fsr2h,c
 44665   008B88  0E03               	movlw	3
 44666   008B8A  26D9               	addwf	fsr2l,f,c
 44667   008B8C  6ADF               	clrf	indf2,c
 44668   008B8E                     i1l19504:
 44669                           
 44670                           ; BSR set to: 0
 44671   008B8E  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 44672   008B90  0D09               	mullw	9
 44673   008B92  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 44674   008B96  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 44675   008B9A  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 44676   008B9C  6ED9               	movwf	fsr2l,c
 44677   008B9E  6ADA               	clrf	fsr2h,c
 44678   008BA0  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 44679   008BA4  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 44680   008BA8  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 44681   008BAA  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 44682   008BAC  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 44683   008BAE  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 44684   008BB0  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 44685   008BB2  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 44686                           
 44687                           ; BSR set to: 0
 44688   008BB4  0012               	return		;funcret
 44689   008BB6                     __end_ofi1_getNextWriteMessage:
 44690                           	callstack 0
 44691                           
 44692 ;; *************** function i1_getBufferPointer *****************
 44693 ;; Defined at:
 44694 ;;		line 588 in file "../../VLCBlib_PIC/can18_ecan.c"
 44695 ;; Parameters:    Size  Location     Type
 44696 ;;  b               1    wreg     unsigned char 
 44697 ;; Auto vars:     Size  Location     Type
 44698 ;;  b               1    2[BANK0 ] unsigned char 
 44699 ;; Return value:  Size  Location     Type
 44700 ;;                  2    0[BANK0 ] PTR unsigned char 
 44701 ;; Registers used:
 44702 ;;		wreg, status,2, status,0
 44703 ;; Tracked objects:
 44704 ;;		On entry : 0/0
 44705 ;;		On exit  : 0/0
 44706 ;;		Unchanged: 0/0
 44707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44711 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44712 ;;Total ram usage:        3 bytes
 44713 ;; Hardware stack levels used: 1
 44714 ;; Hardware stack levels required when called: 6
 44715 ;; This function calls:
 44716 ;;		Nothing
 44717 ;; This function is called by:
 44718 ;;		_canFillRxFifo
 44719 ;; This function uses a non-reentrant model
 44720 ;;
 44721                           
 44722                           	psect	text202
 44723   00A11E                     __ptext202:
 44724                           	callstack 0
 44725   00A11E                     i1_getBufferPointer:
 44726                           	callstack 3
 44727                           
 44728                           ; BSR set to: 0
 44729                           ;incstack = 0
 44730                           ;i1getBufferPointer@b stored from wreg
 44731   00A11E  0100               	movlb	0	; () banked
 44732   00A120  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 44733                           
 44734                           ;../../VLCBlib_PIC/can18_ecan.c: 589:     switch (b) {
 44735   00A122  D02D               	goto	i1l20440
 44736   00A124                     i1l20402:
 44737                           
 44738                           ; BSR set to: 0
 44739                           ;../../VLCBlib_PIC/can18_ecan.c: 591:             return (uint8_t*) & RXB0CON;
 44740   00A124  0E60               	movlw	96
 44741   00A126  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44742   00A128  0E0F               	movlw	15
 44743   00A12A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44744   00A12C  0012               	return	
 44745   00A12E                     i1l20406:
 44746                           
 44747                           ; BSR set to: 0
 44748                           ;../../VLCBlib_PIC/can18_ecan.c: 593:             return (uint8_t*) & RXB1CON;
 44749   00A12E  0E30               	movlw	48
 44750   00A130  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44751   00A132  0E0F               	movlw	15
 44752   00A134  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44753   00A136  0012               	return	
 44754   00A138                     i1l20410:
 44755                           
 44756                           ; BSR set to: 0
 44757                           ;../../VLCBlib_PIC/can18_ecan.c: 595:             return (uint8_t*) & B0CON;
 44758   00A138  0E80               	movlw	128
 44759   00A13A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44760   00A13C  0E0E               	movlw	14
 44761   00A13E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44762   00A140  0012               	return	
 44763   00A142                     i1l20414:
 44764                           
 44765                           ; BSR set to: 0
 44766                           ;../../VLCBlib_PIC/can18_ecan.c: 597:             return (uint8_t*) & B1CON;
 44767   00A142  0E90               	movlw	144
 44768   00A144  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44769   00A146  0E0E               	movlw	14
 44770   00A148  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44771   00A14A  0012               	return	
 44772   00A14C                     i1l20418:
 44773                           
 44774                           ; BSR set to: 0
 44775                           ;../../VLCBlib_PIC/can18_ecan.c: 599:             return (uint8_t*) & B2CON;
 44776   00A14C  0EA0               	movlw	160
 44777   00A14E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44778   00A150  0E0E               	movlw	14
 44779   00A152  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44780   00A154  0012               	return	
 44781   00A156                     i1l20422:
 44782                           
 44783                           ; BSR set to: 0
 44784                           ;../../VLCBlib_PIC/can18_ecan.c: 601:             return (uint8_t*) & B3CON;
 44785   00A156  0EB0               	movlw	176
 44786   00A158  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44787   00A15A  0E0E               	movlw	14
 44788   00A15C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44789   00A15E  0012               	return	
 44790   00A160                     i1l20426:
 44791                           
 44792                           ; BSR set to: 0
 44793                           ;../../VLCBlib_PIC/can18_ecan.c: 603:             return (uint8_t*) & B4CON;
 44794   00A160  0EC0               	movlw	192
 44795   00A162  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44796   00A164  0E0E               	movlw	14
 44797   00A166  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44798   00A168  0012               	return	
 44799   00A16A                     i1l20430:
 44800                           
 44801                           ; BSR set to: 0
 44802                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & B5CON;
 44803   00A16A  0ED0               	movlw	208
 44804   00A16C  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44805   00A16E  0E0E               	movlw	14
 44806   00A170  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44807   00A172  0012               	return	
 44808   00A174                     i1l20434:
 44809                           
 44810                           ; BSR set to: 0
 44811                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return ((void*)0);
 44812   00A174  0E00               	movlw	0
 44813   00A176  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 44814   00A178  0E00               	movlw	0
 44815   00A17A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 44816   00A17C  0012               	return	
 44817   00A17E                     i1l20440:
 44818   00A17E  0100               	movlb	0	; () banked
 44819   00A180  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 44820                           
 44821                           ; Switch size 1, requested type "simple"
 44822                           ; Number of cases is 8, Range of values is 0 to 7
 44823                           ; switch strategies available:
 44824                           ; Name         Instructions Cycles
 44825                           ; simple_byte           25    13 (average)
 44826                           ;	Chosen strategy is simple_byte
 44827   00A182  0A00               	xorlw	0	; case 0
 44828   00A184  B4D8               	btfsc	status,2,c
 44829   00A186  D7CE               	goto	i1l20402
 44830   00A188  0A01               	xorlw	1	; case 1
 44831   00A18A  B4D8               	btfsc	status,2,c
 44832   00A18C  D7D0               	goto	i1l20406
 44833   00A18E  0A03               	xorlw	3	; case 2
 44834   00A190  B4D8               	btfsc	status,2,c
 44835   00A192  D7D2               	goto	i1l20410
 44836   00A194  0A01               	xorlw	1	; case 3
 44837   00A196  B4D8               	btfsc	status,2,c
 44838   00A198  D7D4               	goto	i1l20414
 44839   00A19A  0A07               	xorlw	7	; case 4
 44840   00A19C  B4D8               	btfsc	status,2,c
 44841   00A19E  D7D6               	goto	i1l20418
 44842   00A1A0  0A01               	xorlw	1	; case 5
 44843   00A1A2  B4D8               	btfsc	status,2,c
 44844   00A1A4  D7D8               	goto	i1l20422
 44845   00A1A6  0A03               	xorlw	3	; case 6
 44846   00A1A8  B4D8               	btfsc	status,2,c
 44847   00A1AA  D7DA               	goto	i1l20426
 44848   00A1AC  0A01               	xorlw	1	; case 7
 44849   00A1AE  B4D8               	btfsc	status,2,c
 44850   00A1B0  D7DC               	goto	i1l20430
 44851   00A1B2  D7E0               	goto	i1l20434
 44852   00A1B4                     __end_ofi1_getBufferPointer:
 44853                           	callstack 0
 44854                           
 44855 ;; *************** function _APP_lowIsr *****************
 44856 ;; Defined at:
 44857 ;;		line 588 in file "../main.c"
 44858 ;; Parameters:    Size  Location     Type
 44859 ;;		None
 44860 ;; Auto vars:     Size  Location     Type
 44861 ;;		None
 44862 ;; Return value:  Size  Location     Type
 44863 ;;                  1    wreg      void 
 44864 ;; Registers used:
 44865 ;;		None
 44866 ;; Tracked objects:
 44867 ;;		On entry : 0/0
 44868 ;;		On exit  : 0/0
 44869 ;;		Unchanged: 0/0
 44870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44875 ;;Total ram usage:        0 bytes
 44876 ;; Hardware stack levels used: 1
 44877 ;; Hardware stack levels required when called: 6
 44878 ;; This function calls:
 44879 ;;		Nothing
 44880 ;; This function is called by:
 44881 ;;		_lowIsr
 44882 ;; This function uses a non-reentrant model
 44883 ;;
 44884                           
 44885                           	psect	text203
 44886   00C41C                     __ptext203:
 44887                           	callstack 0
 44888   00C41C                     _APP_lowIsr:
 44889                           	callstack 5
 44890                           
 44891                           ; BSR set to: 0
 44892                           ;incstack = 0
 44893   00C41C  0012               	return		;funcret
 44894   00C41E                     __end_of_APP_lowIsr:
 44895                           	callstack 0
 44896                           
 44897                           	psect	intcode
 44898   000808                     __pintcode:
 44899                           	callstack 2
 44900   000808  EF36  F042         	goto	_isrHigh
 44901                           
 44902 ;; *************** function _highIsr *****************
 44903 ;; Defined at:
 44904 ;;		line 1055 in file "../../VLCBlib_PIC/vlcb.c"
 44905 ;; Parameters:    Size  Location     Type
 44906 ;;		None
 44907 ;; Auto vars:     Size  Location     Type
 44908 ;;  i               1   29[COMRAM] unsigned char 
 44909 ;; Return value:  Size  Location     Type
 44910 ;;                  1    wreg      void 
 44911 ;; Registers used:
 44912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 44913 ;; Tracked objects:
 44914 ;;		On entry : 0/0
 44915 ;;		On exit  : 0/0
 44916 ;;		Unchanged: 0/0
 44917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44920 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44921 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44922 ;;Total ram usage:        5 bytes
 44923 ;; Hardware stack levels used: 1
 44924 ;; Hardware stack levels required when called: 4
 44925 ;; This function calls:
 44926 ;;		NULL
 44927 ;;		_APP_highIsr
 44928 ;;		i2_canIsr
 44929 ;; This function is called by:
 44930 ;;		_isrHigh
 44931 ;; This function uses a non-reentrant model
 44932 ;;
 44933                           
 44934                           	psect	text205
 44935   008EF2                     __ptext205:
 44936                           	callstack 0
 44937   008EF2                     _highIsr:
 44938                           	callstack 2
 44939                           
 44940                           ;../../VLCBlib_PIC/vlcb.c: 1056:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1058:     for 
      +                          (i=0; i<9; i++) {
 44941                           
 44942                           ;incstack = 0
 44943   008EF2  0E00               	movlw	0
 44944   008EF4  6E48               	movwf	highIsr@i^0,c
 44945   008EF6                     i2l24052:
 44946                           
 44947                           ;../../VLCBlib_PIC/vlcb.c: 1059:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 44948   008EF6  5048               	movf	highIsr@i^0,w,c
 44949   008EF8  0D02               	mullw	2
 44950   008EFA  0E75               	movlw	low _services
 44951   008EFC  24F3               	addwf	243,w,c
 44952   008EFE  6EF6               	movwf	tblptrl,c
 44953   008F00  0EEE               	movlw	high _services
 44954   008F02  20F4               	addwfc	244,w,c
 44955   008F04  6EF7               	movwf	tblptrh,c
 44956   008F06                     	if	1	;There are 3 active tblptr bytes
 44957   008F06  6AF8               	clrf	tblptru,c
 44958   008F08  0E00               	movlw	low (__mediumconst shr (0+16))
 44959   008F0A  22F8               	addwfc	tblptru,f,c
 44960   008F0C                     	endif
 44961   008F0C  0009               	tblrd		*+
 44962   008F0E  50F5               	movf	tablat,w,c
 44963   008F10  0009               	tblrd		*+
 44964   008F12  10F5               	iorwf	tablat,w,c
 44965   008F14  B4D8               	btfsc	status,2,c
 44966   008F16  D04B               	goto	i2u2609_49
 44967   008F18  5048               	movf	highIsr@i^0,w,c
 44968   008F1A  0D02               	mullw	2
 44969   008F1C  0E75               	movlw	low _services
 44970   008F1E  24F3               	addwf	243,w,c
 44971   008F20  6EF6               	movwf	tblptrl,c
 44972   008F22  0EEE               	movlw	high _services
 44973   008F24  20F4               	addwfc	244,w,c
 44974   008F26  6EF7               	movwf	tblptrh,c
 44975   008F28                     	if	1	;There are 3 active tblptr bytes
 44976   008F28  6AF8               	clrf	tblptru,c
 44977   008F2A  0E00               	movlw	low (__mediumconst shr (0+16))
 44978   008F2C  22F8               	addwfc	tblptru,f,c
 44979   008F2E                     	endif
 44980   008F2E  0009               	tblrd		*+
 44981   008F30  CFF5 F044          	movff	tablat,??_highIsr
 44982   008F34  0009               	tblrd		*+
 44983   008F36  CFF5 F045          	movff	tablat,??_highIsr+1
 44984   008F3A  0E0A               	movlw	10
 44985   008F3C  2644               	addwf	??_highIsr^0,f,c
 44986   008F3E  0E00               	movlw	0
 44987   008F40  2245               	addwfc	(??_highIsr+1)^0,f,c
 44988   008F42  C044  FFF6         	movff	??_highIsr,tblptrl
 44989   008F46  C045  FFF7         	movff	??_highIsr+1,tblptrh
 44990   008F4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 44991   008F4A  6AF8               	clrf	tblptru,c
 44992   008F4C                     	endif
 44993   008F4C                     	if	0	;tblptru may be non-zero
 44994   008F4C                     	endif
 44995   008F4C  0009               	tblrd		*+
 44996   008F4E  50F5               	movf	tablat,w,c
 44997   008F50  0009               	tblrd		*+
 44998   008F52  10F5               	iorwf	tablat,w,c
 44999   008F54  B4D8               	btfsc	status,2,c
 45000   008F56  D02B               	goto	i2u2609_49
 45001                           
 45002                           ;../../VLCBlib_PIC/vlcb.c: 1060:             services[i]->highIsr();
 45003   008F58  5048               	movf	highIsr@i^0,w,c
 45004   008F5A  0D02               	mullw	2
 45005   008F5C  0E75               	movlw	low _services
 45006   008F5E  24F3               	addwf	243,w,c
 45007   008F60  6EF6               	movwf	tblptrl,c
 45008   008F62  0EEE               	movlw	high _services
 45009   008F64  20F4               	addwfc	244,w,c
 45010   008F66  6EF7               	movwf	tblptrh,c
 45011   008F68                     	if	1	;There are 3 active tblptr bytes
 45012   008F68  6AF8               	clrf	tblptru,c
 45013   008F6A  0E00               	movlw	low (__mediumconst shr (0+16))
 45014   008F6C  22F8               	addwfc	tblptru,f,c
 45015   008F6E                     	endif
 45016   008F6E  0009               	tblrd		*+
 45017   008F70  CFF5 F044          	movff	tablat,??_highIsr
 45018   008F74  0009               	tblrd		*+
 45019   008F76  CFF5 F045          	movff	tablat,??_highIsr+1
 45020   008F7A  0E0A               	movlw	10
 45021   008F7C  2644               	addwf	??_highIsr^0,f,c
 45022   008F7E  0E00               	movlw	0
 45023   008F80  2245               	addwfc	(??_highIsr+1)^0,f,c
 45024   008F82  C044  FFF6         	movff	??_highIsr,tblptrl
 45025   008F86  C045  FFF7         	movff	??_highIsr+1,tblptrh
 45026   008F8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45027   008F8A  6AF8               	clrf	tblptru,c
 45028   008F8C                     	endif
 45029   008F8C                     	if	0	;tblptru may be non-zero
 45030   008F8C                     	endif
 45031   008F8C  0009               	tblrd		*+
 45032   008F8E  CFF5 F046          	movff	tablat,??_highIsr+2
 45033   008F92  0009               	tblrd		*+
 45034   008F94  CFF5 F047          	movff	tablat,??_highIsr+3
 45035   008F98  D801               	call	i2u2609_48
 45036   008F9A  D009               	goto	i2u2609_49
 45037   008F9C                     i2u2609_48:
 45038   008F9C  0005               	push	
 45039   008F9E  6EFA               	movwf	pclath,c
 45040   008FA0  5046               	movf	(??_highIsr+2)^0,w,c
 45041   008FA2  6EFD               	movwf	tosl,c
 45042   008FA4  5047               	movf	(??_highIsr+3)^0,w,c
 45043   008FA6  6EFE               	movwf	tosh,c
 45044   008FA8  6AFF               	clrf	tosu,c
 45045   008FAA  50FA               	movf	pclath,w,c
 45046   008FAC  0012               	return		;indir
 45047   008FAE                     i2u2609_49:
 45048                           
 45049                           ;../../VLCBlib_PIC/vlcb.c: 1062:     }
 45050   008FAE  2A48               	incf	highIsr@i^0,f,c
 45051   008FB0  0E08               	movlw	8
 45052   008FB2  6448               	cpfsgt	highIsr@i^0,c
 45053   008FB4  D7A0               	goto	i2l24052
 45054                           
 45055                           ;../../VLCBlib_PIC/vlcb.c: 1063:     APP_highIsr();
 45056   008FB6  EC99  F061         	call	_APP_highIsr	;wreg free
 45057   008FBA  0012               	return		;funcret
 45058   008FBC                     __end_of_highIsr:
 45059                           	callstack 0
 45060                           
 45061 ;; *************** function i2_canIsr *****************
 45062 ;; Defined at:
 45063 ;;		line 397 in file "../../VLCBlib_PIC/can18_ecan.c"
 45064 ;; Parameters:    Size  Location     Type
 45065 ;;		None
 45066 ;; Auto vars:     Size  Location     Type
 45067 ;;		None
 45068 ;; Return value:  Size  Location     Type
 45069 ;;                  1    wreg      void 
 45070 ;; Registers used:
 45071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45072 ;; Tracked objects:
 45073 ;;		On entry : 0/0
 45074 ;;		On exit  : 0/0
 45075 ;;		Unchanged: 0/0
 45076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45081 ;;Total ram usage:        0 bytes
 45082 ;; Hardware stack levels used: 1
 45083 ;; Hardware stack levels required when called: 3
 45084 ;; This function calls:
 45085 ;;		i2_canFillRxFifo
 45086 ;;		i2_canTxError
 45087 ;;		i2_checkCANTimeout
 45088 ;;		i2_checkTxFifo
 45089 ;; This function is called by:
 45090 ;;		_highIsr
 45091 ;;		_lowIsr
 45092 ;; This function uses a non-reentrant model
 45093 ;;
 45094                           
 45095                           	psect	text206
 45096   00C31A                     __ptext206:
 45097                           	callstack 0
 45098   00C31A                     i2_canIsr:
 45099                           	callstack 2
 45100                           
 45101                           ;../../VLCBlib_PIC/can18_ecan.c: 399:     if (PIR5bits.FIFOWMIF) {
 45102                           
 45103                           ;incstack = 0
 45104   00C31A  B077               	btfsc	119,0,c	;volatile
 45105                           
 45106                           ;../../VLCBlib_PIC/can18_ecan.c: 400:         canFillRxFifo();
 45107   00C31C  EC79  F03D         	call	i2_canFillRxFifo	;wreg free
 45108                           
 45109                           ;../../VLCBlib_PIC/can18_ecan.c: 402:     if (PIR5bits.ERRIF) {
 45110   00C320  BA77               	btfsc	119,5,c	;volatile
 45111                           
 45112                           ;../../VLCBlib_PIC/can18_ecan.c: 403:         canTxError();
 45113   00C322  EC78  F058         	call	i2_canTxError	;wreg free
 45114                           
 45115                           ;../../VLCBlib_PIC/can18_ecan.c: 405:     if (PIR5bits.TXBnIF) {
 45116   00C326  B877               	btfsc	119,4,c	;volatile
 45117                           
 45118                           ;../../VLCBlib_PIC/can18_ecan.c: 406:         checkTxFifo();
 45119   00C328  EC3C  F02F         	call	i2_checkTxFifo	;wreg free
 45120                           
 45121                           ;../../VLCBlib_PIC/can18_ecan.c: 408:     checkCANTimeout();
 45122                           
 45123                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     }
 45124   00C32C  ECF0  F05A         	call	i2_checkCANTimeout	;wreg free
 45125   00C330  0012               	return		;funcret
 45126   00C332                     __end_ofi2_canIsr:
 45127                           	callstack 0
 45128                           
 45129 ;; *************** function i2_checkCANTimeout *****************
 45130 ;; Defined at:
 45131 ;;		line 685 in file "../../VLCBlib_PIC/can18_ecan.c"
 45132 ;; Parameters:    Size  Location     Type
 45133 ;;		None
 45134 ;; Auto vars:     Size  Location     Type
 45135 ;;		None
 45136 ;; Return value:  Size  Location     Type
 45137 ;;                  1    wreg      void 
 45138 ;; Registers used:
 45139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45140 ;; Tracked objects:
 45141 ;;		On entry : 0/0
 45142 ;;		On exit  : 0/0
 45143 ;;		Unchanged: 0/0
 45144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45147 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45148 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45149 ;;Total ram usage:        4 bytes
 45150 ;; Hardware stack levels used: 1
 45151 ;; Hardware stack levels required when called: 2
 45152 ;; This function calls:
 45153 ;;		i2_checkTxFifo
 45154 ;;		i2_tickGet
 45155 ;;		i2_updateModuleErrorStatus
 45156 ;; This function is called by:
 45157 ;;		i2_canIsr
 45158 ;; This function uses a non-reentrant model
 45159 ;;
 45160                           
 45161                           	psect	text207
 45162   00B5E0                     __ptext207:
 45163                           	callstack 0
 45164   00B5E0                     i2_checkCANTimeout:
 45165                           	callstack 2
 45166                           
 45167                           ;../../VLCBlib_PIC/can18_ecan.c: 686:     if (canTransmitTimeout.val != 0) {
 45168                           
 45169                           ;incstack = 0
 45170   00B5E0  5015               	movf	_canTransmitTimeout^0,w,c
 45171   00B5E2  1016               	iorwf	(_canTransmitTimeout+1)^0,w,c
 45172   00B5E4  1017               	iorwf	(_canTransmitTimeout+2)^0,w,c
 45173   00B5E6  1018               	iorwf	(_canTransmitTimeout+3)^0,w,c
 45174   00B5E8  B4D8               	btfsc	status,2,c
 45175   00B5EA  0012               	return	
 45176                           
 45177                           ;../../VLCBlib_PIC/can18_ecan.c: 687:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 45178   00B5EC  EC94  F059         	call	i2_tickGet	;wreg free
 45179   00B5F0  5015               	movf	_canTransmitTimeout^0,w,c
 45180   00B5F2  5C2B               	subwf	?i2_tickGet^0,w,c
 45181   00B5F4  6E40               	movwf	??i2_checkCANTimeout^0,c
 45182   00B5F6  5016               	movf	(_canTransmitTimeout+1)^0,w,c
 45183   00B5F8  582C               	subwfb	(?i2_tickGet+1)^0,w,c
 45184   00B5FA  6E41               	movwf	(??i2_checkCANTimeout+1)^0,c
 45185   00B5FC  5017               	movf	(_canTransmitTimeout+2)^0,w,c
 45186   00B5FE  582D               	subwfb	(?i2_tickGet+2)^0,w,c
 45187   00B600  6E42               	movwf	(??i2_checkCANTimeout+2)^0,c
 45188   00B602  5018               	movf	(_canTransmitTimeout+3)^0,w,c
 45189   00B604  582E               	subwfb	(?i2_tickGet+3)^0,w,c
 45190   00B606  6E43               	movwf	(??i2_checkCANTimeout+3)^0,c
 45191   00B608  5043               	movf	(??i2_checkCANTimeout+3)^0,w,c
 45192   00B60A  1042               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 45193   00B60C  E106               	bnz	i2u2314_40
 45194   00B60E  0E25               	movlw	37
 45195   00B610  5C40               	subwf	??i2_checkCANTimeout^0,w,c
 45196   00B612  0EF4               	movlw	244
 45197   00B614  5841               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 45198   00B616  A0D8               	btfss	status,0,c
 45199   00B618  0012               	return	
 45200   00B61A                     i2u2314_40:
 45201                           
 45202                           ;../../VLCBlib_PIC/can18_ecan.c: 688:             canTransmitFailed = 1;
 45203   00B61A  0E01               	movlw	1
 45204   00B61C  0100               	movlb	0	; () banked
 45205   00B61E  6FB7               	movwf	_canTransmitFailed& (0+255),b
 45206                           
 45207                           ; BSR set to: 0
 45208                           ;../../VLCBlib_PIC/can18_ecan.c: 689:             TXB0CONbits.TXREQ = 0;
 45209   00B620  010F               	movlb	15	; () banked
 45210   00B622  9720               	bcf	32,3,b	;volatile
 45211                           
 45212                           ; BSR set to: 15
 45213                           ;../../VLCBlib_PIC/can18_ecan.c: 690:             checkTxFifo();
 45214   00B624  EC3C  F02F         	call	i2_checkTxFifo	;wreg free
 45215                           
 45216                           ;../../VLCBlib_PIC/can18_ecan.c: 691:             canDiagnostics[0x01].asUint++;
 45217   00B628  0101               	movlb	1	; () banked
 45218   00B62A  4B80               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45219   00B62C  2B81               	incf	(_canDiagnostics+3)& (0+255),f,b
 45220                           
 45221                           ; BSR set to: 1
 45222                           ;../../VLCBlib_PIC/can18_ecan.c: 692:             updateModuleErrorStatus();
 45223   00B62E  ECDE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45224   00B632  0012               	return		;funcret
 45225   00B634                     __end_ofi2_checkCANTimeout:
 45226                           	callstack 0
 45227                           
 45228 ;; *************** function i2_canTxError *****************
 45229 ;; Defined at:
 45230 ;;		line 702 in file "../../VLCBlib_PIC/can18_ecan.c"
 45231 ;; Parameters:    Size  Location     Type
 45232 ;;		None
 45233 ;; Auto vars:     Size  Location     Type
 45234 ;;		None
 45235 ;; Return value:  Size  Location     Type
 45236 ;;                  1    wreg      void 
 45237 ;; Registers used:
 45238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45239 ;; Tracked objects:
 45240 ;;		On entry : 0/0
 45241 ;;		On exit  : 0/0
 45242 ;;		Unchanged: 0/0
 45243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45248 ;;Total ram usage:        0 bytes
 45249 ;; Hardware stack levels used: 1
 45250 ;; Hardware stack levels required when called: 2
 45251 ;; This function calls:
 45252 ;;		i2_checkTxFifo
 45253 ;;		i2_updateModuleErrorStatus
 45254 ;; This function is called by:
 45255 ;;		i2_canIsr
 45256 ;; This function uses a non-reentrant model
 45257 ;;
 45258                           
 45259                           	psect	text208
 45260   00B0F0                     __ptext208:
 45261                           	callstack 0
 45262   00B0F0                     i2_canTxError:
 45263                           	callstack 2
 45264                           
 45265                           ;../../VLCBlib_PIC/can18_ecan.c: 703:     if (TXB0CONbits.TXLARB) {
 45266                           
 45267                           ;incstack = 0
 45268   00B0F0  010F               	movlb	15	; () banked
 45269   00B0F2  AB20               	btfss	32,5,b	;volatile
 45270   00B0F4  D012               	goto	i2l21882
 45271                           
 45272                           ; BSR set to: 15
 45273                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         canTransmitFailed = 1;
 45274   00B0F6  0E01               	movlw	1
 45275   00B0F8  0100               	movlb	0	; () banked
 45276   00B0FA  6FB7               	movwf	_canTransmitFailed& (0+255),b
 45277                           
 45278                           ;../../VLCBlib_PIC/can18_ecan.c: 705:         canTransmitTimeout.val = 0;
 45279   00B0FC  0E00               	movlw	0
 45280   00B0FE  6E15               	movwf	_canTransmitTimeout^0,c
 45281   00B100  0E00               	movlw	0
 45282   00B102  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45283   00B104  0E00               	movlw	0
 45284   00B106  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45285   00B108  0E00               	movlw	0
 45286   00B10A  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45287                           
 45288                           ; BSR set to: 0
 45289                           ;../../VLCBlib_PIC/can18_ecan.c: 706:         TXB0CONbits.TXREQ = 0;
 45290   00B10C  010F               	movlb	15	; () banked
 45291   00B10E  9720               	bcf	32,3,b	;volatile
 45292                           
 45293                           ; BSR set to: 15
 45294                           ;../../VLCBlib_PIC/can18_ecan.c: 707:         canDiagnostics[0x0B].asUint++;
 45295   00B110  0101               	movlb	1	; () banked
 45296   00B112  4B94               	infsnz	(_canDiagnostics+22)& (0+255),f,b
 45297   00B114  2B95               	incf	(_canDiagnostics+23)& (0+255),f,b
 45298                           
 45299                           ; BSR set to: 1
 45300                           ;../../VLCBlib_PIC/can18_ecan.c: 708:         updateModuleErrorStatus();
 45301   00B116  ECDE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45302   00B11A                     i2l21882:
 45303                           
 45304                           ;../../VLCBlib_PIC/can18_ecan.c: 710:     if (TXB0CONbits.TXERR) {
 45305   00B11A  010F               	movlb	15	; () banked
 45306   00B11C  A920               	btfss	32,4,b	;volatile
 45307   00B11E  D012               	goto	i2l21892
 45308                           
 45309                           ; BSR set to: 15
 45310                           ;../../VLCBlib_PIC/can18_ecan.c: 711:         canTransmitFailed = 1;
 45311   00B120  0E01               	movlw	1
 45312   00B122  0100               	movlb	0	; () banked
 45313   00B124  6FB7               	movwf	_canTransmitFailed& (0+255),b
 45314                           
 45315                           ;../../VLCBlib_PIC/can18_ecan.c: 712:         canTransmitTimeout.val = 0;
 45316   00B126  0E00               	movlw	0
 45317   00B128  6E15               	movwf	_canTransmitTimeout^0,c
 45318   00B12A  0E00               	movlw	0
 45319   00B12C  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45320   00B12E  0E00               	movlw	0
 45321   00B130  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45322   00B132  0E00               	movlw	0
 45323   00B134  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45324                           
 45325                           ; BSR set to: 0
 45326                           ;../../VLCBlib_PIC/can18_ecan.c: 713:         TXB0CONbits.TXREQ = 0;
 45327   00B136  010F               	movlb	15	; () banked
 45328   00B138  9720               	bcf	32,3,b	;volatile
 45329                           
 45330                           ; BSR set to: 15
 45331                           ;../../VLCBlib_PIC/can18_ecan.c: 714:         canDiagnostics[0x01].asUint++;
 45332   00B13A  0101               	movlb	1	; () banked
 45333   00B13C  4B80               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45334   00B13E  2B81               	incf	(_canDiagnostics+3)& (0+255),f,b
 45335                           
 45336                           ; BSR set to: 1
 45337                           ;../../VLCBlib_PIC/can18_ecan.c: 715:         updateModuleErrorStatus();
 45338   00B140  ECDE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45339   00B144                     i2l21892:
 45340                           
 45341                           ;../../VLCBlib_PIC/can18_ecan.c: 717:     if (canTransmitFailed) {
 45342   00B144  0100               	movlb	0	; () banked
 45343   00B146  51B7               	movf	_canTransmitFailed& (0+255),w,b
 45344   00B148  A4D8               	btfss	status,2,c
 45345                           
 45346                           ; BSR set to: 0
 45347                           ;../../VLCBlib_PIC/can18_ecan.c: 718:         checkTxFifo();
 45348   00B14A  EC3C  F02F         	call	i2_checkTxFifo	;wreg free
 45349                           
 45350                           ;../../VLCBlib_PIC/can18_ecan.c: 720:     PIR5bits.ERRIF = 0;
 45351   00B14E  9A77               	bcf	119,5,c	;volatile
 45352   00B150  0012               	return		;funcret
 45353   00B152                     __end_ofi2_canTxError:
 45354                           	callstack 0
 45355                           
 45356 ;; *************** function i2_checkTxFifo *****************
 45357 ;; Defined at:
 45358 ;;		line 616 in file "../../VLCBlib_PIC/can18_ecan.c"
 45359 ;; Parameters:    Size  Location     Type
 45360 ;;		None
 45361 ;; Auto vars:     Size  Location     Type
 45362 ;;  mp              2   19[COMRAM] PTR struct Message
 45363 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45364 ;;  m               2   17[COMRAM] PTR struct Message
 45365 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45366 ;; Return value:  Size  Location     Type
 45367 ;;                  1    wreg      void 
 45368 ;; Registers used:
 45369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45370 ;; Tracked objects:
 45371 ;;		On entry : 0/0
 45372 ;;		On exit  : 0/0
 45373 ;;		Unchanged: 0/0
 45374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45376 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45377 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45378 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45379 ;;Total ram usage:        9 bytes
 45380 ;; Hardware stack levels used: 1
 45381 ;; Hardware stack levels required when called: 1
 45382 ;; This function calls:
 45383 ;;		i2_getNextWriteMessage
 45384 ;;		i2_isEvent
 45385 ;;		i2_pop
 45386 ;;		i2_tickGet
 45387 ;;		i2_updateModuleErrorStatus
 45388 ;; This function is called by:
 45389 ;;		i2_canIsr
 45390 ;;		i2_checkCANTimeout
 45391 ;;		i2_canTxError
 45392 ;; This function uses a non-reentrant model
 45393 ;;
 45394                           
 45395                           	psect	text209
 45396   005E78                     __ptext209:
 45397                           	callstack 0
 45398   005E78                     i2_checkTxFifo:
 45399                           	callstack 3
 45400                           
 45401                           ;../../VLCBlib_PIC/can18_ecan.c: 617:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          619:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 622:     PIR5bits.TXBnIF = 0;
 45402                           
 45403                           ;incstack = 0
 45404   005E78  9877               	bcf	119,4,c	;volatile
 45405                           
 45406                           ;../../VLCBlib_PIC/can18_ecan.c: 623:     if (!TXB0CONbits.TXREQ) {
 45407   005E7A  010F               	movlb	15	; () banked
 45408   005E7C  B720               	btfsc	32,3,b	;volatile
 45409   005E7E  D144               	goto	i2l2923
 45410                           
 45411                           ; BSR set to: 15
 45412                           ;../../VLCBlib_PIC/can18_ecan.c: 624:         mp = pop(&txQueue);
 45413   005E80  0EB3               	movlw	low _txQueue
 45414   005E82  6E2B               	movwf	i2pop@q^0,c
 45415   005E84  0E01               	movlw	high _txQueue
 45416   005E86  6E2C               	movwf	(i2pop@q+1)^0,c
 45417   005E88  ECDD  F04C         	call	i2_pop	;wreg free
 45418   005E8C  C02B  F03E         	movff	?i2_pop,i2checkTxFifo@mp
 45419   005E90  C02C  F03F         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 45420                           
 45421                           ;../../VLCBlib_PIC/can18_ecan.c: 625:         if (mp != ((void*)0)) {
 45422   005E94  503E               	movf	i2checkTxFifo@mp^0,w,c
 45423   005E96  103F               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 45424   005E98  B4D8               	btfsc	status,2,c
 45425   005E9A  D128               	goto	i2l20508
 45426                           
 45427                           ;../../VLCBlib_PIC/can18_ecan.c: 627:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 45428   005E9C  EE20 F001          	lfsr	2,1
 45429   005EA0  503E               	movf	i2checkTxFifo@mp^0,w,c
 45430   005EA2  26D9               	addwf	fsr2l,f,c
 45431   005EA4  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45432   005EA6  22DA               	addwfc	fsr2h,f,c
 45433   005EA8  50DF               	movf	indf2,w,c
 45434   005EAA  6E37               	movwf	??i2_checkTxFifo^0,c
 45435   005EAC  6A38               	clrf	(??i2_checkTxFifo+1)^0,c
 45436   005EAE  0E35               	movlw	low _priorities
 45437   005EB0  2437               	addwf	??i2_checkTxFifo^0,w,c
 45438   005EB2  6EF6               	movwf	tblptrl,c
 45439   005EB4  0EED               	movlw	high _priorities
 45440   005EB6  2038               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 45441   005EB8  6EF7               	movwf	tblptrh,c
 45442   005EBA                     	if	1	;There are 3 active tblptr bytes
 45443   005EBA  6AF8               	clrf	tblptru,c
 45444   005EBC  0E00               	movlw	low (__mediumconst shr (0+16))
 45445   005EBE  22F8               	addwfc	tblptru,f,c
 45446   005EC0                     	endif
 45447   005EC0  0008               	tblrd		*
 45448   005EC2  50F5               	movf	tablat,w,c
 45449   005EC4  6E39               	movwf	(??i2_checkTxFifo+2)^0,c
 45450   005EC6  6A3A               	clrf	(??i2_checkTxFifo+3)^0,c
 45451   005EC8  0E87               	movlw	low _canPri
 45452   005ECA  2439               	addwf	(??i2_checkTxFifo+2)^0,w,c
 45453   005ECC  6EF6               	movwf	tblptrl,c
 45454   005ECE  0EEE               	movlw	high _canPri
 45455   005ED0  203A               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 45456   005ED2  6EF7               	movwf	tblptrh,c
 45457   005ED4                     	if	1	;There are 3 active tblptr bytes
 45458   005ED4  6AF8               	clrf	tblptru,c
 45459   005ED6  0E00               	movlw	low (__mediumconst shr (0+16))
 45460   005ED8  22F8               	addwfc	tblptru,f,c
 45461   005EDA                     	endif
 45462   005EDA  0008               	tblrd		*
 45463   005EDC  CFF5 F03B          	movff	tablat,??i2_checkTxFifo+4
 45464   005EE0  0100               	movlb	0	; () banked
 45465   005EE2  39B8               	swapf	_canId& (0+255),w,b
 45466   005EE4  46E8               	rlncf	wreg,f,c
 45467   005EE6  0B1F               	andlw	31
 45468   005EE8  0B0F               	andlw	15
 45469   005EEA  103B               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 45470   005EEC  010F               	movlb	15	; () banked
 45471   005EEE  6F21               	movwf	33,b	;volatile
 45472                           
 45473                           ; BSR set to: 15
 45474                           ;../../VLCBlib_PIC/can18_ecan.c: 628:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 45475   005EF0  C0B8  F037         	movff	_canId,??i2_checkTxFifo
 45476   005EF4  0E07               	movlw	7
 45477   005EF6  1637               	andwf	??i2_checkTxFifo^0,f,c
 45478   005EF8  0E05               	movlw	5
 45479   005EFA  6E38               	movwf	(??i2_checkTxFifo+1)^0,c
 45480   005EFC                     i2u2095_45:
 45481   005EFC  90D8               	bcf	status,0,c
 45482   005EFE  3637               	rlcf	??i2_checkTxFifo^0,f,c
 45483   005F00  2E38               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 45484   005F02  D7FC               	goto	i2u2095_45
 45485   005F04  5037               	movf	??i2_checkTxFifo^0,w,c
 45486   005F06  6F22               	movwf	34,b	;volatile
 45487                           
 45488                           ; BSR set to: 15
 45489                           ;../../VLCBlib_PIC/can18_ecan.c: 629:             TXB0D0 = mp->opc;
 45490   005F08  EE20 F001          	lfsr	2,1
 45491   005F0C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45492   005F0E  26D9               	addwf	fsr2l,f,c
 45493   005F10  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45494   005F12  22DA               	addwfc	fsr2h,f,c
 45495   005F14  50DF               	movf	indf2,w,c
 45496   005F16  6F26               	movwf	38,b	;volatile
 45497                           
 45498                           ; BSR set to: 15
 45499                           ;../../VLCBlib_PIC/can18_ecan.c: 630:             TXB0D1 = mp->bytes[0];
 45500   005F18  EE20 F002          	lfsr	2,2
 45501   005F1C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45502   005F1E  26D9               	addwf	fsr2l,f,c
 45503   005F20  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45504   005F22  22DA               	addwfc	fsr2h,f,c
 45505   005F24  50DF               	movf	indf2,w,c
 45506   005F26  6F27               	movwf	39,b	;volatile
 45507                           
 45508                           ; BSR set to: 15
 45509                           ;../../VLCBlib_PIC/can18_ecan.c: 631:             TXB0D2 = mp->bytes[1];
 45510   005F28  EE20 F003          	lfsr	2,3
 45511   005F2C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45512   005F2E  26D9               	addwf	fsr2l,f,c
 45513   005F30  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45514   005F32  22DA               	addwfc	fsr2h,f,c
 45515   005F34  50DF               	movf	indf2,w,c
 45516   005F36  6F28               	movwf	40,b	;volatile
 45517                           
 45518                           ; BSR set to: 15
 45519                           ;../../VLCBlib_PIC/can18_ecan.c: 632:             TXB0D3 = mp->bytes[2];
 45520   005F38  EE20 F004          	lfsr	2,4
 45521   005F3C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45522   005F3E  26D9               	addwf	fsr2l,f,c
 45523   005F40  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45524   005F42  22DA               	addwfc	fsr2h,f,c
 45525   005F44  50DF               	movf	indf2,w,c
 45526   005F46  6F29               	movwf	41,b	;volatile
 45527                           
 45528                           ; BSR set to: 15
 45529                           ;../../VLCBlib_PIC/can18_ecan.c: 633:             TXB0D4 = mp->bytes[3];
 45530   005F48  EE20 F005          	lfsr	2,5
 45531   005F4C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45532   005F4E  26D9               	addwf	fsr2l,f,c
 45533   005F50  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45534   005F52  22DA               	addwfc	fsr2h,f,c
 45535   005F54  50DF               	movf	indf2,w,c
 45536   005F56  6F2A               	movwf	42,b	;volatile
 45537                           
 45538                           ; BSR set to: 15
 45539                           ;../../VLCBlib_PIC/can18_ecan.c: 634:             TXB0D5 = mp->bytes[4];
 45540   005F58  EE20 F006          	lfsr	2,6
 45541   005F5C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45542   005F5E  26D9               	addwf	fsr2l,f,c
 45543   005F60  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45544   005F62  22DA               	addwfc	fsr2h,f,c
 45545   005F64  50DF               	movf	indf2,w,c
 45546   005F66  6F2B               	movwf	43,b	;volatile
 45547                           
 45548                           ; BSR set to: 15
 45549                           ;../../VLCBlib_PIC/can18_ecan.c: 635:             TXB0D6 = mp->bytes[5];
 45550   005F68  EE20 F007          	lfsr	2,7
 45551   005F6C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45552   005F6E  26D9               	addwf	fsr2l,f,c
 45553   005F70  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45554   005F72  22DA               	addwfc	fsr2h,f,c
 45555   005F74  50DF               	movf	indf2,w,c
 45556   005F76  6F2C               	movwf	44,b	;volatile
 45557                           
 45558                           ; BSR set to: 15
 45559                           ;../../VLCBlib_PIC/can18_ecan.c: 636:             TXB0D7 = mp->bytes[6];
 45560   005F78  EE20 F008          	lfsr	2,8
 45561   005F7C  503E               	movf	i2checkTxFifo@mp^0,w,c
 45562   005F7E  26D9               	addwf	fsr2l,f,c
 45563   005F80  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45564   005F82  22DA               	addwfc	fsr2h,f,c
 45565   005F84  50DF               	movf	indf2,w,c
 45566   005F86  6F2D               	movwf	45,b	;volatile
 45567                           
 45568                           ; BSR set to: 15
 45569                           ;../../VLCBlib_PIC/can18_ecan.c: 637:             TXB0DLC = mp->len;
 45570   005F88  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45571   005F8C  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45572   005F90  50DF               	movf	indf2,w,c
 45573   005F92  6F25               	movwf	37,b	;volatile
 45574                           
 45575                           ; BSR set to: 15
 45576                           ;../../VLCBlib_PIC/can18_ecan.c: 639:             canTransmitTimeout.val = tickGet();
 45577   005F94  EC94  F059         	call	i2_tickGet	;wreg free
 45578   005F98  C02B  F015         	movff	?i2_tickGet,_canTransmitTimeout
 45579   005F9C  C02C  F016         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 45580   005FA0  C02D  F017         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 45581   005FA4  C02E  F018         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 45582                           
 45583                           ;../../VLCBlib_PIC/can18_ecan.c: 640:             canTransmitFailed = 0;
 45584   005FA8  0E00               	movlw	0
 45585   005FAA  0100               	movlb	0	; () banked
 45586   005FAC  6FB7               	movwf	_canTransmitFailed& (0+255),b
 45587                           
 45588                           ; BSR set to: 0
 45589                           ;../../VLCBlib_PIC/can18_ecan.c: 641:             TXB0CONbits.TXREQ = 1;
 45590   005FAE  010F               	movlb	15	; () banked
 45591   005FB0  8720               	bsf	32,3,b	;volatile
 45592                           
 45593                           ; BSR set to: 15
 45594                           ;../../VLCBlib_PIC/can18_ecan.c: 642:             PIE5bits.TXBnIE = 1;
 45595   005FB2  8876               	bsf	118,4,c	;volatile
 45596                           
 45597                           ; BSR set to: 15
 45598                           ;../../VLCBlib_PIC/can18_ecan.c: 643:             canDiagnostics[0x05].asUint++;
 45599   005FB4  0101               	movlb	1	; () banked
 45600   005FB6  4B88               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 45601   005FB8  2B89               	incf	(_canDiagnostics+11)& (0+255),f,b
 45602                           
 45603                           ; BSR set to: 1
 45604                           ;../../VLCBlib_PIC/can18_ecan.c: 646:             if (isEvent(mp->opc)) {
 45605   005FBA  EE20 F001          	lfsr	2,1
 45606   005FBE  503E               	movf	i2checkTxFifo@mp^0,w,c
 45607   005FC0  26D9               	addwf	fsr2l,f,c
 45608   005FC2  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45609   005FC4  22DA               	addwfc	fsr2h,f,c
 45610   005FC6  50DF               	movf	indf2,w,c
 45611   005FC8  ECBC  F060         	call	i2_isEvent
 45612   005FCC  0900               	iorlw	0
 45613   005FCE  B4D8               	btfsc	status,2,c
 45614   005FD0  0012               	return	
 45615                           
 45616                           ;../../VLCBlib_PIC/can18_ecan.c: 648:                 m = getNextWriteMessage(&rxQueue);
 45617   005FD2  0E26               	movlw	low _rxQueue
 45618   005FD4  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 45619   005FD6  EC43  F046         	call	i2_getNextWriteMessage	;wreg free
 45620   005FDA  C02B  F03C         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 45621   005FDE  C02C  F03D         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 45622                           
 45623                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 if (m == ((void*)0)) {
 45624   005FE2  503C               	movf	i2checkTxFifo@m^0,w,c
 45625   005FE4  103D               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 45626   005FE6  A4D8               	btfss	status,2,c
 45627   005FE8  D006               	goto	i2l20490
 45628                           
 45629                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                     canDiagnostics[0x07].asUint++;
 45630   005FEA  0101               	movlb	1	; () banked
 45631   005FEC  4B8C               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 45632   005FEE  2B8D               	incf	(_canDiagnostics+15)& (0+255),f,b
 45633                           
 45634                           ; BSR set to: 1
 45635                           ;../../VLCBlib_PIC/can18_ecan.c: 651:                     updateModuleErrorStatus();
 45636   005FF0  ECDE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 45637                           
 45638                           ;../../VLCBlib_PIC/can18_ecan.c: 652:                 } else {
 45639   005FF4  0012               	return	
 45640   005FF6                     i2l20490:
 45641                           
 45642                           ;../../VLCBlib_PIC/can18_ecan.c: 654:                     m->opc = mp->opc;
 45643   005FF6  EE20 F001          	lfsr	2,1
 45644   005FFA  503E               	movf	i2checkTxFifo@mp^0,w,c
 45645   005FFC  26D9               	addwf	fsr2l,f,c
 45646   005FFE  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45647   006000  22DA               	addwfc	fsr2h,f,c
 45648   006002  EE10 F001          	lfsr	1,1
 45649   006006  503C               	movf	i2checkTxFifo@m^0,w,c
 45650   006008  26E1               	addwf	fsr1l,f,c
 45651   00600A  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45652   00600C  22E2               	addwfc	fsr1h,f,c
 45653   00600E  CFDF FFE7          	movff	indf2,indf1
 45654                           
 45655                           ;../../VLCBlib_PIC/can18_ecan.c: 655:                     m->len = mp->len;
 45656   006012  C03E  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 45657   006016  C03F  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 45658   00601A  C03C  FFE1         	movff	i2checkTxFifo@m,fsr1l
 45659   00601E  C03D  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 45660   006022  CFDF FFE7          	movff	indf2,indf1
 45661                           
 45662                           ;../../VLCBlib_PIC/can18_ecan.c: 656:                     m->bytes[0] = mp->bytes[0];
 45663   006026  EE20 F002          	lfsr	2,2
 45664   00602A  503E               	movf	i2checkTxFifo@mp^0,w,c
 45665   00602C  26D9               	addwf	fsr2l,f,c
 45666   00602E  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45667   006030  22DA               	addwfc	fsr2h,f,c
 45668   006032  EE10 F002          	lfsr	1,2
 45669   006036  503C               	movf	i2checkTxFifo@m^0,w,c
 45670   006038  26E1               	addwf	fsr1l,f,c
 45671   00603A  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45672   00603C  22E2               	addwfc	fsr1h,f,c
 45673   00603E  CFDF FFE7          	movff	indf2,indf1
 45674                           
 45675                           ;../../VLCBlib_PIC/can18_ecan.c: 657:                     m->bytes[1] = mp->bytes[1];
 45676   006042  EE20 F003          	lfsr	2,3
 45677   006046  503E               	movf	i2checkTxFifo@mp^0,w,c
 45678   006048  26D9               	addwf	fsr2l,f,c
 45679   00604A  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45680   00604C  22DA               	addwfc	fsr2h,f,c
 45681   00604E  EE10 F003          	lfsr	1,3
 45682   006052  503C               	movf	i2checkTxFifo@m^0,w,c
 45683   006054  26E1               	addwf	fsr1l,f,c
 45684   006056  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45685   006058  22E2               	addwfc	fsr1h,f,c
 45686   00605A  CFDF FFE7          	movff	indf2,indf1
 45687                           
 45688                           ;../../VLCBlib_PIC/can18_ecan.c: 658:                     m->bytes[2] = mp->bytes[2];
 45689   00605E  EE20 F004          	lfsr	2,4
 45690   006062  503E               	movf	i2checkTxFifo@mp^0,w,c
 45691   006064  26D9               	addwf	fsr2l,f,c
 45692   006066  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45693   006068  22DA               	addwfc	fsr2h,f,c
 45694   00606A  EE10 F004          	lfsr	1,4
 45695   00606E  503C               	movf	i2checkTxFifo@m^0,w,c
 45696   006070  26E1               	addwf	fsr1l,f,c
 45697   006072  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45698   006074  22E2               	addwfc	fsr1h,f,c
 45699   006076  CFDF FFE7          	movff	indf2,indf1
 45700                           
 45701                           ;../../VLCBlib_PIC/can18_ecan.c: 659:                     m->bytes[3] = mp->bytes[3];
 45702   00607A  EE20 F005          	lfsr	2,5
 45703   00607E  503E               	movf	i2checkTxFifo@mp^0,w,c
 45704   006080  26D9               	addwf	fsr2l,f,c
 45705   006082  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45706   006084  22DA               	addwfc	fsr2h,f,c
 45707   006086  EE10 F005          	lfsr	1,5
 45708   00608A  503C               	movf	i2checkTxFifo@m^0,w,c
 45709   00608C  26E1               	addwf	fsr1l,f,c
 45710   00608E  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45711   006090  22E2               	addwfc	fsr1h,f,c
 45712   006092  CFDF FFE7          	movff	indf2,indf1
 45713                           
 45714                           ;../../VLCBlib_PIC/can18_ecan.c: 660:                     m->bytes[4] = mp->bytes[4];
 45715   006096  EE20 F006          	lfsr	2,6
 45716   00609A  503E               	movf	i2checkTxFifo@mp^0,w,c
 45717   00609C  26D9               	addwf	fsr2l,f,c
 45718   00609E  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45719   0060A0  22DA               	addwfc	fsr2h,f,c
 45720   0060A2  EE10 F006          	lfsr	1,6
 45721   0060A6  503C               	movf	i2checkTxFifo@m^0,w,c
 45722   0060A8  26E1               	addwf	fsr1l,f,c
 45723   0060AA  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45724   0060AC  22E2               	addwfc	fsr1h,f,c
 45725   0060AE  CFDF FFE7          	movff	indf2,indf1
 45726                           
 45727                           ;../../VLCBlib_PIC/can18_ecan.c: 661:                     m->bytes[5] = mp->bytes[5];
 45728   0060B2  EE20 F007          	lfsr	2,7
 45729   0060B6  503E               	movf	i2checkTxFifo@mp^0,w,c
 45730   0060B8  26D9               	addwf	fsr2l,f,c
 45731   0060BA  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45732   0060BC  22DA               	addwfc	fsr2h,f,c
 45733   0060BE  EE10 F007          	lfsr	1,7
 45734   0060C2  503C               	movf	i2checkTxFifo@m^0,w,c
 45735   0060C4  26E1               	addwf	fsr1l,f,c
 45736   0060C6  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45737   0060C8  22E2               	addwfc	fsr1h,f,c
 45738   0060CA  CFDF FFE7          	movff	indf2,indf1
 45739                           
 45740                           ;../../VLCBlib_PIC/can18_ecan.c: 662:                     m->bytes[6] = mp->bytes[6];
 45741   0060CE  EE20 F008          	lfsr	2,8
 45742   0060D2  503E               	movf	i2checkTxFifo@mp^0,w,c
 45743   0060D4  26D9               	addwf	fsr2l,f,c
 45744   0060D6  503F               	movf	(i2checkTxFifo@mp+1)^0,w,c
 45745   0060D8  22DA               	addwfc	fsr2h,f,c
 45746   0060DA  EE10 F008          	lfsr	1,8
 45747   0060DE  503C               	movf	i2checkTxFifo@m^0,w,c
 45748   0060E0  26E1               	addwf	fsr1l,f,c
 45749   0060E2  503D               	movf	(i2checkTxFifo@m+1)^0,w,c
 45750   0060E4  22E2               	addwfc	fsr1h,f,c
 45751   0060E6  CFDF FFE7          	movff	indf2,indf1
 45752   0060EA  0012               	return	
 45753   0060EC                     i2l20508:
 45754                           
 45755                           ;../../VLCBlib_PIC/can18_ecan.c: 668:             canTransmitTimeout.val = 0;
 45756   0060EC  0E00               	movlw	0
 45757   0060EE  6E15               	movwf	_canTransmitTimeout^0,c
 45758   0060F0  0E00               	movlw	0
 45759   0060F2  6E16               	movwf	(_canTransmitTimeout+1)^0,c
 45760   0060F4  0E00               	movlw	0
 45761   0060F6  6E17               	movwf	(_canTransmitTimeout+2)^0,c
 45762   0060F8  0E00               	movlw	0
 45763   0060FA  6E18               	movwf	(_canTransmitTimeout+3)^0,c
 45764                           
 45765                           ;../../VLCBlib_PIC/can18_ecan.c: 669:             TXB0CON = 0;
 45766   0060FC  0E00               	movlw	0
 45767   0060FE  010F               	movlb	15	; () banked
 45768   006100  6F20               	movwf	32,b	;volatile
 45769                           
 45770                           ; BSR set to: 15
 45771                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             PIR5bits.TXBnIF = 0;
 45772   006102  9877               	bcf	119,4,c	;volatile
 45773                           
 45774                           ; BSR set to: 15
 45775                           ;../../VLCBlib_PIC/can18_ecan.c: 671:             PIE5bits.TXBnIE = 0;
 45776   006104  9876               	bcf	118,4,c	;volatile
 45777   006106  0012               	return	
 45778   006108                     i2l2923:
 45779                           
 45780                           ; BSR set to: 15
 45781                           ;../../VLCBlib_PIC/can18_ecan.c: 675:         PIR5bits.TXBnIF = 0;
 45782   006108  9877               	bcf	119,4,c	;volatile
 45783                           
 45784                           ;../../VLCBlib_PIC/can18_ecan.c: 676:         PIE5bits.TXBnIE = 1;
 45785   00610A  8876               	bsf	118,4,c	;volatile
 45786   00610C  0012               	return		;funcret
 45787   00610E                     __end_ofi2_checkTxFifo:
 45788                           	callstack 0
 45789                           
 45790 ;; *************** function i2_tickGet *****************
 45791 ;; Defined at:
 45792 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 45793 ;; Parameters:    Size  Location     Type
 45794 ;;		None
 45795 ;; Auto vars:     Size  Location     Type
 45796 ;;  currentTime     4    6[COMRAM] struct _TickValue
 45797 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 45798 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 45799 ;; Return value:  Size  Location     Type
 45800 ;;                  4    0[COMRAM] unsigned long 
 45801 ;; Registers used:
 45802 ;;		wreg, status,2, status,0
 45803 ;; Tracked objects:
 45804 ;;		On entry : 0/0
 45805 ;;		On exit  : 0/0
 45806 ;;		Unchanged: 0/0
 45807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45809 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45811 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45812 ;;Total ram usage:       10 bytes
 45813 ;; Hardware stack levels used: 1
 45814 ;; This function calls:
 45815 ;;		Nothing
 45816 ;; This function is called by:
 45817 ;;		i2_checkTxFifo
 45818 ;;		i2_checkCANTimeout
 45819 ;; This function uses a non-reentrant model
 45820 ;;
 45821                           
 45822                           	psect	text210
 45823   00B328                     __ptext210:
 45824                           	callstack 0
 45825   00B328                     i2_tickGet:
 45826                           	callstack 3
 45827                           
 45828                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 45829                           
 45830                           ;incstack = 0
 45831   00B328  0E00               	movlw	0
 45832   00B32A  6E33               	movwf	(i2tickGet@currentTime+2)^0,c
 45833                           
 45834                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 45835   00B32C  0E00               	movlw	0
 45836   00B32E  6E34               	movwf	(i2tickGet@currentTime+3)^0,c
 45837                           
 45838                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 45839   00B330  9AF2               	bcf	242,5,c	;volatile
 45840   00B332                     i2l12342:
 45841                           
 45842                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 45843   00B332  0E00               	movlw	0
 45844   00B334  B4F2               	btfsc	242,2,c	;volatile
 45845   00B336  0E01               	movlw	1
 45846   00B338  6E30               	movwf	i2tickGet@IntFlag1^0,c
 45847                           
 45848                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 45849   00B33A  CFD6 F031          	movff	4054,i2tickGet@currentTime	;volatile
 45850                           
 45851                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 45852   00B33E  CFD7 F032          	movff	4055,i2tickGet@currentTime+1	;volatile
 45853                           
 45854                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 45855   00B342  0E00               	movlw	0
 45856   00B344  B4F2               	btfsc	242,2,c	;volatile
 45857   00B346  0E01               	movlw	1
 45858   00B348  6E2F               	movwf	i2tickGet@IntFlag2^0,c
 45859                           
 45860                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 45861   00B34A  502F               	movf	i2tickGet@IntFlag2^0,w,c
 45862   00B34C  1830               	xorwf	i2tickGet@IntFlag1^0,w,c
 45863   00B34E  A4D8               	btfss	status,2,c
 45864   00B350  D7F0               	goto	i2l12342
 45865                           
 45866                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 45867   00B352  5030               	movf	i2tickGet@IntFlag1^0,w,c
 45868   00B354  B4D8               	btfsc	status,2,c
 45869   00B356  D006               	goto	i2l12362
 45870                           
 45871                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 45872   00B358  94F2               	bcf	242,2,c	;volatile
 45873                           
 45874                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 45875   00B35A  0100               	movlb	0	; () banked
 45876   00B35C  2BC4               	incf	_timerExtension1& (0+255),f,b	;volatile
 45877                           
 45878                           ; BSR set to: 0
 45879                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 45880   00B35E  51C4               	movf	_timerExtension1& (0+255),w,b	;volatile
 45881   00B360  B4D8               	btfsc	status,2,c
 45882                           
 45883                           ; BSR set to: 0
 45884                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 45885   00B362  2BC3               	incf	_timerExtension2& (0+255),f,b	;volatile
 45886   00B364                     i2l12362:
 45887                           
 45888                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 45889   00B364  0100               	movlb	0	; () banked
 45890   00B366  51C4               	movf	_timerExtension1& (0+255),w,b	;volatile
 45891   00B368  2633               	addwf	(i2tickGet@currentTime+2)^0,f,c
 45892                           
 45893                           ; BSR set to: 0
 45894                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 45895   00B36A  51C3               	movf	_timerExtension2& (0+255),w,b	;volatile
 45896   00B36C  2634               	addwf	(i2tickGet@currentTime+3)^0,f,c
 45897                           
 45898                           ; BSR set to: 0
 45899                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 45900   00B36E  8AF2               	bsf	242,5,c	;volatile
 45901                           
 45902                           ; BSR set to: 0
 45903                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 45904   00B370  C031  F02B         	movff	i2tickGet@currentTime,?i2_tickGet
 45905   00B374  C032  F02C         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 45906   00B378  C033  F02D         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 45907   00B37C  C034  F02E         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 45908                           
 45909                           ; BSR set to: 0
 45910   00B380  0012               	return		;funcret
 45911   00B382                     __end_ofi2_tickGet:
 45912                           	callstack 0
 45913                           
 45914 ;; *************** function i2_pop *****************
 45915 ;; Defined at:
 45916 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 45917 ;; Parameters:    Size  Location     Type
 45918 ;;  q               2    0[COMRAM] PTR struct MessageQueue
 45919 ;;		 -> txQueue(5), rxQueue(5), 
 45920 ;; Auto vars:     Size  Location     Type
 45921 ;;  ret             2    7[COMRAM] PTR struct Message
 45922 ;;		 -> txBuffers(72), rxBuffers(288), 
 45923 ;; Return value:  Size  Location     Type
 45924 ;;                  2    0[COMRAM] PTR struct Message
 45925 ;; Registers used:
 45926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45927 ;; Tracked objects:
 45928 ;;		On entry : 0/0
 45929 ;;		On exit  : 0/0
 45930 ;;		Unchanged: 0/0
 45931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45933 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45934 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45935 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45936 ;;Total ram usage:        9 bytes
 45937 ;; Hardware stack levels used: 1
 45938 ;; This function calls:
 45939 ;;		Nothing
 45940 ;; This function is called by:
 45941 ;;		i2_checkTxFifo
 45942 ;; This function uses a non-reentrant model
 45943 ;;
 45944                           
 45945                           	psect	text211
 45946   0099BA                     __ptext211:
 45947                           	callstack 0
 45948   0099BA                     i2_pop:
 45949                           	callstack 3
 45950                           
 45951                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 45952                           
 45953                           ; BSR set to: 0
 45954                           ;incstack = 0
 45955   0099BA  EE20 F002          	lfsr	2,2
 45956   0099BE  502B               	movf	i2pop@q^0,w,c
 45957   0099C0  26D9               	addwf	fsr2l,f,c
 45958   0099C2  502C               	movf	(i2pop@q+1)^0,w,c
 45959   0099C4  22DA               	addwfc	fsr2h,f,c
 45960   0099C6  EE10 F003          	lfsr	1,3
 45961   0099CA  502B               	movf	i2pop@q^0,w,c
 45962   0099CC  26E1               	addwf	fsr1l,f,c
 45963   0099CE  502C               	movf	(i2pop@q+1)^0,w,c
 45964   0099D0  22E2               	addwfc	fsr1h,f,c
 45965   0099D2  50DE               	movf	postinc2,w,c
 45966   0099D4  18E6               	xorwf	postinc1,w,c
 45967   0099D6  A4D8               	btfss	status,2,c
 45968   0099D8  D005               	goto	i2l19532
 45969                           
 45970                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 45971   0099DA  0E00               	movlw	0
 45972   0099DC  6E2B               	movwf	?i2_pop^0,c
 45973   0099DE  0E00               	movlw	0
 45974   0099E0  6E2C               	movwf	(?i2_pop+1)^0,c
 45975   0099E2  0012               	return	
 45976   0099E4                     i2l19532:
 45977                           
 45978                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 45979   0099E4  EE20 F002          	lfsr	2,2
 45980   0099E8  502B               	movf	i2pop@q^0,w,c
 45981   0099EA  26D9               	addwf	fsr2l,f,c
 45982   0099EC  502C               	movf	(i2pop@q+1)^0,w,c
 45983   0099EE  22DA               	addwfc	fsr2h,f,c
 45984   0099F0  50DF               	movf	indf2,w,c
 45985   0099F2  6E2D               	movwf	??i2_pop^0,c
 45986   0099F4  502D               	movf	??i2_pop^0,w,c
 45987   0099F6  0D09               	mullw	9
 45988   0099F8  CFF3 F02E          	movff	prodl,??i2_pop+1
 45989   0099FC  CFF4 F02F          	movff	prodh,??i2_pop+2
 45990   009A00  C02B  FFD9         	movff	i2pop@q,fsr2l
 45991   009A04  C02C  FFDA         	movff	i2pop@q+1,fsr2h
 45992   009A08  CFDE F030          	movff	postinc2,??i2_pop+3
 45993   009A0C  CFDD F031          	movff	postdec2,??i2_pop+4
 45994   009A10  502E               	movf	(??i2_pop+1)^0,w,c
 45995   009A12  2430               	addwf	(??i2_pop+3)^0,w,c
 45996   009A14  6E32               	movwf	i2pop@ret^0,c
 45997   009A16  502F               	movf	(??i2_pop+2)^0,w,c
 45998   009A18  2031               	addwfc	(??i2_pop+4)^0,w,c
 45999   009A1A  6E33               	movwf	(i2pop@ret+1)^0,c
 46000   009A1C  EE20 F002          	lfsr	2,2
 46001   009A20  502B               	movf	i2pop@q^0,w,c
 46002   009A22  26D9               	addwf	fsr2l,f,c
 46003   009A24  502C               	movf	(i2pop@q+1)^0,w,c
 46004   009A26  22DA               	addwfc	fsr2h,f,c
 46005   009A28  2ADF               	incf	indf2,f,c
 46006                           
 46007                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 46008   009A2A  EE20 F004          	lfsr	2,4
 46009   009A2E  502B               	movf	i2pop@q^0,w,c
 46010   009A30  26D9               	addwf	fsr2l,f,c
 46011   009A32  502C               	movf	(i2pop@q+1)^0,w,c
 46012   009A34  22DA               	addwfc	fsr2h,f,c
 46013   009A36  EE10 F002          	lfsr	1,2
 46014   009A3A  502B               	movf	i2pop@q^0,w,c
 46015   009A3C  26E1               	addwf	fsr1l,f,c
 46016   009A3E  502C               	movf	(i2pop@q+1)^0,w,c
 46017   009A40  22E2               	addwfc	fsr1h,f,c
 46018   009A42  50DE               	movf	postinc2,w,c
 46019   009A44  5CE6               	subwf	postinc1,w,c
 46020   009A46  A0D8               	btfss	status,0,c
 46021   009A48  D007               	goto	i2l19540
 46022   009A4A  EE20 F002          	lfsr	2,2
 46023   009A4E  502B               	movf	i2pop@q^0,w,c
 46024   009A50  26D9               	addwf	fsr2l,f,c
 46025   009A52  502C               	movf	(i2pop@q+1)^0,w,c
 46026   009A54  22DA               	addwfc	fsr2h,f,c
 46027   009A56  6ADF               	clrf	indf2,c
 46028   009A58                     i2l19540:
 46029                           
 46030                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 46031   009A58  C032  F02B         	movff	i2pop@ret,?i2_pop
 46032   009A5C  C033  F02C         	movff	i2pop@ret+1,?i2_pop+1
 46033   009A60  0012               	return		;funcret
 46034   009A62                     __end_ofi2_pop:
 46035                           	callstack 0
 46036                           
 46037 ;; *************** function i2_isEvent *****************
 46038 ;; Defined at:
 46039 ;;		line 1114 in file "../../VLCBlib_PIC/vlcb.c"
 46040 ;; Parameters:    Size  Location     Type
 46041 ;;  opc             1    wreg     unsigned char 
 46042 ;; Auto vars:     Size  Location     Type
 46043 ;;  opc             1    1[COMRAM] unsigned char 
 46044 ;; Return value:  Size  Location     Type
 46045 ;;                  1    wreg      enum E12700
 46046 ;; Registers used:
 46047 ;;		wreg, status,2, status,0
 46048 ;; Tracked objects:
 46049 ;;		On entry : 0/0
 46050 ;;		On exit  : 0/0
 46051 ;;		Unchanged: 0/0
 46052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46057 ;;Total ram usage:        2 bytes
 46058 ;; Hardware stack levels used: 1
 46059 ;; This function calls:
 46060 ;;		Nothing
 46061 ;; This function is called by:
 46062 ;;		i2_checkTxFifo
 46063 ;; This function uses a non-reentrant model
 46064 ;;
 46065                           
 46066                           	psect	text212
 46067   00C178                     __ptext212:
 46068                           	callstack 0
 46069   00C178                     i2_isEvent:
 46070                           	callstack 3
 46071                           
 46072                           ;incstack = 0
 46073                           ;i2isEvent@opc stored from wreg
 46074   00C178  6E2C               	movwf	i2isEvent@opc^0,c
 46075                           
 46076                           ;../../VLCBlib_PIC/vlcb.c: 1115:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 46077   00C17A  0E00               	movlw	0
 46078   00C17C  6E2B               	movwf	i2_isEvent$5817^0,c
 46079   00C17E  502C               	movf	i2isEvent@opc^0,w,c
 46080   00C180  0B90               	andlw	144
 46081   00C182  0A90               	xorlw	144
 46082   00C184  A4D8               	btfss	status,2,c
 46083   00C186  D008               	goto	i2l2429
 46084   00C188  502C               	movf	i2isEvent@opc^0,w,c
 46085   00C18A  0AFF               	xorlw	255
 46086   00C18C  0B06               	andlw	6
 46087   00C18E  0A06               	xorlw	6
 46088   00C190  A4D8               	btfss	status,2,c
 46089   00C192  D002               	goto	i2l2429
 46090   00C194  0E01               	movlw	1
 46091   00C196  6E2B               	movwf	i2_isEvent$5817^0,c
 46092   00C198                     i2l2429:
 46093   00C198  502B               	movf	i2_isEvent$5817^0,w,c
 46094   00C19A  0012               	return		;funcret
 46095   00C19C                     __end_ofi2_isEvent:
 46096                           	callstack 0
 46097                           
 46098 ;; *************** function i2_canFillRxFifo *****************
 46099 ;; Defined at:
 46100 ;;		line 761 in file "../../VLCBlib_PIC/can18_ecan.c"
 46101 ;; Parameters:    Size  Location     Type
 46102 ;;		None
 46103 ;; Auto vars:     Size  Location     Type
 46104 ;;  m               2   14[COMRAM] PTR struct Message
 46105 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46106 ;;  ptr             2   12[COMRAM] PTR unsigned char 
 46107 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 46108 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 46109 ;;		 -> NULL(0), 
 46110 ;;  hiIndex         1    0        unsigned char 
 46111 ;; Return value:  Size  Location     Type
 46112 ;;                  1    wreg      void 
 46113 ;; Registers used:
 46114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 46115 ;; Tracked objects:
 46116 ;;		On entry : 0/0
 46117 ;;		On exit  : 0/0
 46118 ;;		Unchanged: 0/0
 46119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46123 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46124 ;;Total ram usage:        4 bytes
 46125 ;; Hardware stack levels used: 1
 46126 ;; Hardware stack levels required when called: 1
 46127 ;; This function calls:
 46128 ;;		i2_getBufferPointer
 46129 ;;		i2_getNextWriteMessage
 46130 ;;		i2_updateModuleErrorStatus
 46131 ;; This function is called by:
 46132 ;;		i2_canIsr
 46133 ;; This function uses a non-reentrant model
 46134 ;;
 46135                           
 46136                           	psect	text213
 46137   007AF2                     __ptext213:
 46138                           	callstack 0
 46139   007AF2                     i2_canFillRxFifo:
 46140                           	callstack 3
 46141                           
 46142                           ;../../VLCBlib_PIC/can18_ecan.c: 762:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          763:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 764:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 766:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46143                           
 46144                           ;incstack = 0
 46145   007AF2  D0A6               	goto	i2l14952
 46146   007AF4                     i2l14918:
 46147                           
 46148                           ;../../VLCBlib_PIC/can18_ecan.c: 767:         ptr = getBufferPointer(CANCON & 0x07U);
 46149   007AF4  506F               	movf	111,w,c	;volatile
 46150   007AF6  0B07               	andlw	7
 46151   007AF8  EC24  F051         	call	i2_getBufferPointer
 46152   007AFC  C02B  F037         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 46153   007B00  C02C  F038         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 46154                           
 46155                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         PIR5bits.RXBnIF = 0;
 46156   007B04  9277               	bcf	119,1,c	;volatile
 46157                           
 46158                           ;../../VLCBlib_PIC/can18_ecan.c: 769:         if (COMSTATbits.RXB1OVFL) {
 46159   007B06  BC71               	btfsc	113,6,c	;volatile
 46160                           
 46161                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             COMSTATbits.RXB1OVFL = 0;
 46162   007B08  9C71               	bcf	113,6,c	;volatile
 46163                           
 46164                           ;../../VLCBlib_PIC/can18_ecan.c: 774:         m = getNextWriteMessage(&rxQueue);
 46165   007B0A  0E26               	movlw	low _rxQueue
 46166   007B0C  6E2B               	movwf	i2getNextWriteMessage@q^0,c
 46167   007B0E  EC43  F046         	call	i2_getNextWriteMessage	;wreg free
 46168   007B12  C02B  F039         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 46169   007B16  C02C  F03A         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 46170                           
 46171                           ;../../VLCBlib_PIC/can18_ecan.c: 775:         if (m == ((void*)0)) {
 46172   007B1A  5039               	movf	i2canFillRxFifo@m^0,w,c
 46173   007B1C  103A               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 46174   007B1E  A4D8               	btfss	status,2,c
 46175   007B20  D009               	goto	i2l14940
 46176                           
 46177                           ;../../VLCBlib_PIC/can18_ecan.c: 776:             canDiagnostics[0x07].asUint++;
 46178   007B22  0101               	movlb	1	; () banked
 46179   007B24  4B8C               	infsnz	(_canDiagnostics+14)& (0+255),f,b
 46180   007B26  2B8D               	incf	(_canDiagnostics+15)& (0+255),f,b
 46181                           
 46182                           ; BSR set to: 1
 46183                           ;../../VLCBlib_PIC/can18_ecan.c: 777:             updateModuleErrorStatus();
 46184   007B28  ECDE  F061         	call	i2_updateModuleErrorStatus	;wreg free
 46185                           
 46186                           ;../../VLCBlib_PIC/can18_ecan.c: 779:             if (PIR5bits.IRXIF) {
 46187   007B2C  AE77               	btfss	119,7,c	;volatile
 46188   007B2E  0012               	return	
 46189                           
 46190                           ;../../VLCBlib_PIC/can18_ecan.c: 780:                 PIR5bits.IRXIF = 0;
 46191   007B30  9E77               	bcf	119,7,c	;volatile
 46192   007B32  0012               	return	
 46193   007B34                     i2l14940:
 46194                           
 46195                           ;../../VLCBlib_PIC/can18_ecan.c: 785:             m->opc = ptr[6];
 46196   007B34  EE20 F006          	lfsr	2,6
 46197   007B38  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46198   007B3A  26D9               	addwf	fsr2l,f,c
 46199   007B3C  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46200   007B3E  22DA               	addwfc	fsr2h,f,c
 46201   007B40  EE10 F001          	lfsr	1,1
 46202   007B44  5039               	movf	i2canFillRxFifo@m^0,w,c
 46203   007B46  26E1               	addwf	fsr1l,f,c
 46204   007B48  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46205   007B4A  22E2               	addwfc	fsr1h,f,c
 46206   007B4C  CFDF FFE7          	movff	indf2,indf1
 46207                           
 46208                           ;../../VLCBlib_PIC/can18_ecan.c: 786:             m->bytes[0] = ptr[7];
 46209   007B50  EE20 F007          	lfsr	2,7
 46210   007B54  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46211   007B56  26D9               	addwf	fsr2l,f,c
 46212   007B58  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46213   007B5A  22DA               	addwfc	fsr2h,f,c
 46214   007B5C  EE10 F002          	lfsr	1,2
 46215   007B60  5039               	movf	i2canFillRxFifo@m^0,w,c
 46216   007B62  26E1               	addwf	fsr1l,f,c
 46217   007B64  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46218   007B66  22E2               	addwfc	fsr1h,f,c
 46219   007B68  CFDF FFE7          	movff	indf2,indf1
 46220                           
 46221                           ;../../VLCBlib_PIC/can18_ecan.c: 787:             m->bytes[1] = ptr[8];
 46222   007B6C  EE20 F008          	lfsr	2,8
 46223   007B70  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46224   007B72  26D9               	addwf	fsr2l,f,c
 46225   007B74  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46226   007B76  22DA               	addwfc	fsr2h,f,c
 46227   007B78  EE10 F003          	lfsr	1,3
 46228   007B7C  5039               	movf	i2canFillRxFifo@m^0,w,c
 46229   007B7E  26E1               	addwf	fsr1l,f,c
 46230   007B80  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46231   007B82  22E2               	addwfc	fsr1h,f,c
 46232   007B84  CFDF FFE7          	movff	indf2,indf1
 46233                           
 46234                           ;../../VLCBlib_PIC/can18_ecan.c: 788:             m->bytes[2] = ptr[9];
 46235   007B88  EE20 F009          	lfsr	2,9
 46236   007B8C  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46237   007B8E  26D9               	addwf	fsr2l,f,c
 46238   007B90  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46239   007B92  22DA               	addwfc	fsr2h,f,c
 46240   007B94  EE10 F004          	lfsr	1,4
 46241   007B98  5039               	movf	i2canFillRxFifo@m^0,w,c
 46242   007B9A  26E1               	addwf	fsr1l,f,c
 46243   007B9C  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46244   007B9E  22E2               	addwfc	fsr1h,f,c
 46245   007BA0  CFDF FFE7          	movff	indf2,indf1
 46246                           
 46247                           ;../../VLCBlib_PIC/can18_ecan.c: 789:             m->bytes[3] = ptr[10];
 46248   007BA4  EE20 F00A          	lfsr	2,10
 46249   007BA8  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46250   007BAA  26D9               	addwf	fsr2l,f,c
 46251   007BAC  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46252   007BAE  22DA               	addwfc	fsr2h,f,c
 46253   007BB0  EE10 F005          	lfsr	1,5
 46254   007BB4  5039               	movf	i2canFillRxFifo@m^0,w,c
 46255   007BB6  26E1               	addwf	fsr1l,f,c
 46256   007BB8  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46257   007BBA  22E2               	addwfc	fsr1h,f,c
 46258   007BBC  CFDF FFE7          	movff	indf2,indf1
 46259                           
 46260                           ;../../VLCBlib_PIC/can18_ecan.c: 790:             m->bytes[4] = ptr[11];
 46261   007BC0  EE20 F00B          	lfsr	2,11
 46262   007BC4  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46263   007BC6  26D9               	addwf	fsr2l,f,c
 46264   007BC8  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46265   007BCA  22DA               	addwfc	fsr2h,f,c
 46266   007BCC  EE10 F006          	lfsr	1,6
 46267   007BD0  5039               	movf	i2canFillRxFifo@m^0,w,c
 46268   007BD2  26E1               	addwf	fsr1l,f,c
 46269   007BD4  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46270   007BD6  22E2               	addwfc	fsr1h,f,c
 46271   007BD8  CFDF FFE7          	movff	indf2,indf1
 46272                           
 46273                           ;../../VLCBlib_PIC/can18_ecan.c: 791:             m->bytes[5] = ptr[12];
 46274   007BDC  EE20 F00C          	lfsr	2,12
 46275   007BE0  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46276   007BE2  26D9               	addwf	fsr2l,f,c
 46277   007BE4  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46278   007BE6  22DA               	addwfc	fsr2h,f,c
 46279   007BE8  EE10 F007          	lfsr	1,7
 46280   007BEC  5039               	movf	i2canFillRxFifo@m^0,w,c
 46281   007BEE  26E1               	addwf	fsr1l,f,c
 46282   007BF0  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46283   007BF2  22E2               	addwfc	fsr1h,f,c
 46284   007BF4  CFDF FFE7          	movff	indf2,indf1
 46285                           
 46286                           ;../../VLCBlib_PIC/can18_ecan.c: 792:             m->bytes[6] = ptr[13];
 46287   007BF8  EE20 F00D          	lfsr	2,13
 46288   007BFC  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46289   007BFE  26D9               	addwf	fsr2l,f,c
 46290   007C00  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46291   007C02  22DA               	addwfc	fsr2h,f,c
 46292   007C04  EE10 F008          	lfsr	1,8
 46293   007C08  5039               	movf	i2canFillRxFifo@m^0,w,c
 46294   007C0A  26E1               	addwf	fsr1l,f,c
 46295   007C0C  503A               	movf	(i2canFillRxFifo@m+1)^0,w,c
 46296   007C0E  22E2               	addwfc	fsr1h,f,c
 46297   007C10  CFDF FFE7          	movff	indf2,indf1
 46298                           
 46299                           ;../../VLCBlib_PIC/can18_ecan.c: 793:             m->len = ptr[5]&0xF;
 46300   007C14  EE20 F005          	lfsr	2,5
 46301   007C18  5037               	movf	i2canFillRxFifo@ptr^0,w,c
 46302   007C1A  26D9               	addwf	fsr2l,f,c
 46303   007C1C  5038               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 46304   007C1E  22DA               	addwfc	fsr2h,f,c
 46305   007C20  50DF               	movf	indf2,w,c
 46306   007C22  0B0F               	andlw	15
 46307   007C24  C039  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 46308   007C28  C03A  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 46309   007C2C  6EDF               	movwf	indf2,c
 46310                           
 46311                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         if (PIR5bits.IRXIF) {
 46312   007C2E  BE77               	btfsc	119,7,c	;volatile
 46313                           
 46314                           ;../../VLCBlib_PIC/can18_ecan.c: 797:             PIR5bits.IRXIF = 0;
 46315   007C30  9E77               	bcf	119,7,c	;volatile
 46316                           
 46317                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         ptr[0] &= 0x7f;
 46318   007C32  C037  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 46319   007C36  C038  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 46320   007C3A  0E7F               	movlw	127
 46321   007C3C  16DF               	andwf	indf2,f,c
 46322                           
 46323                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         PIR5bits.FIFOWMIF = 0;
 46324   007C3E  9077               	bcf	119,0,c	;volatile
 46325   007C40                     i2l14952:
 46326                           
 46327                           ;../../VLCBlib_PIC/can18_ecan.c: 766:     while (COMSTATbits.NOT_FIFOEMPTY) {
 46328   007C40  AE71               	btfss	113,7,c	;volatile
 46329   007C42  0012               	return	
 46330   007C44  D757               	goto	i2l14918
 46331   007C46                     __end_ofi2_canFillRxFifo:
 46332                           	callstack 0
 46333                           
 46334 ;; *************** function i2_updateModuleErrorStatus *****************
 46335 ;; Defined at:
 46336 ;;		line 583 in file "../../VLCBlib_PIC/mns.c"
 46337 ;; Parameters:    Size  Location     Type
 46338 ;;		None
 46339 ;; Auto vars:     Size  Location     Type
 46340 ;;		None
 46341 ;; Return value:  Size  Location     Type
 46342 ;;                  1    wreg      void 
 46343 ;; Registers used:
 46344 ;;		wreg, status,2, status,0
 46345 ;; Tracked objects:
 46346 ;;		On entry : 0/0
 46347 ;;		On exit  : 0/0
 46348 ;;		Unchanged: 0/0
 46349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46354 ;;Total ram usage:        0 bytes
 46355 ;; Hardware stack levels used: 1
 46356 ;; This function calls:
 46357 ;;		Nothing
 46358 ;; This function is called by:
 46359 ;;		i2_checkTxFifo
 46360 ;;		i2_checkCANTimeout
 46361 ;;		i2_canTxError
 46362 ;;		i2_canFillRxFifo
 46363 ;; This function uses a non-reentrant model
 46364 ;;
 46365                           
 46366                           	psect	text214
 46367   00C3BC                     __ptext214:
 46368                           	callstack 0
 46369   00C3BC                     i2_updateModuleErrorStatus:
 46370                           	callstack 3
 46371                           
 46372                           ;../../VLCBlib_PIC/mns.c: 584:     if (mnsDiagnostics[0x00].asBytes.lo < 0xFF) {
 46373                           
 46374                           ;incstack = 0
 46375   00C3BC  0101               	movlb	1	; () banked
 46376   00C3BE  299E               	incf	_mnsDiagnostics& (0+255),w,b
 46377   00C3C0  B4D8               	btfsc	status,2,c
 46378   00C3C2  0012               	return	
 46379                           
 46380                           ; BSR set to: 1
 46381                           ;../../VLCBlib_PIC/mns.c: 585:         mnsDiagnostics[0x00].asBytes.lo++;
 46382   00C3C4  2B9E               	incf	_mnsDiagnostics& (0+255),f,b
 46383                           
 46384                           ; BSR set to: 1
 46385   00C3C6  0012               	return		;funcret
 46386   00C3C8                     __end_ofi2_updateModuleErrorStatus:
 46387                           	callstack 0
 46388                           
 46389 ;; *************** function i2_getNextWriteMessage *****************
 46390 ;; Defined at:
 46391 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 46392 ;; Parameters:    Size  Location     Type
 46393 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46394 ;;		 -> rxQueue(5), 
 46395 ;; Auto vars:     Size  Location     Type
 46396 ;;  wr              1   11[COMRAM] unsigned char 
 46397 ;; Return value:  Size  Location     Type
 46398 ;;                  2    0[COMRAM] PTR struct Message
 46399 ;; Registers used:
 46400 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46401 ;; Tracked objects:
 46402 ;;		On entry : 0/0
 46403 ;;		On exit  : 0/0
 46404 ;;		Unchanged: 0/0
 46405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46407 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46408 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46409 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46410 ;;Total ram usage:       12 bytes
 46411 ;; Hardware stack levels used: 1
 46412 ;; This function calls:
 46413 ;;		Nothing
 46414 ;; This function is called by:
 46415 ;;		i2_checkTxFifo
 46416 ;;		i2_canFillRxFifo
 46417 ;; This function uses a non-reentrant model
 46418 ;;
 46419                           
 46420                           	psect	text215
 46421   008C86                     __ptext215:
 46422                           	callstack 0
 46423   008C86                     i2_getNextWriteMessage:
 46424                           	callstack 3
 46425                           
 46426                           ; BSR set to: 1
 46427                           ;incstack = 0
 46428   008C86  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46429   008C88  6ED9               	movwf	fsr2l,c
 46430   008C8A  6ADA               	clrf	fsr2h,c
 46431   008C8C  0E02               	movlw	2
 46432   008C8E  26D9               	addwf	fsr2l,f,c
 46433   008C90  50DF               	movf	indf2,w,c
 46434   008C92  6E2D               	movwf	??i2_getNextWriteMessage^0,c
 46435   008C94  6A2E               	clrf	(??i2_getNextWriteMessage+1)^0,c
 46436   008C96  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46437   008C98  6ED9               	movwf	fsr2l,c
 46438   008C9A  6ADA               	clrf	fsr2h,c
 46439   008C9C  0E04               	movlw	4
 46440   008C9E  26D9               	addwf	fsr2l,f,c
 46441   008CA0  50DF               	movf	indf2,w,c
 46442   008CA2  6E2F               	movwf	(??i2_getNextWriteMessage+2)^0,c
 46443   008CA4  0EFF               	movlw	255
 46444   008CA6  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46445   008CA8  6E30               	movwf	(??i2_getNextWriteMessage+3)^0,c
 46446   008CAA  6A31               	clrf	(??i2_getNextWriteMessage+4)^0,c
 46447   008CAC  0EFF               	movlw	255
 46448   008CAE  2231               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 46449   008CB0  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46450   008CB2  6ED9               	movwf	fsr2l,c
 46451   008CB4  6ADA               	clrf	fsr2h,c
 46452   008CB6  0E03               	movlw	3
 46453   008CB8  26D9               	addwf	fsr2l,f,c
 46454   008CBA  50DF               	movf	indf2,w,c
 46455   008CBC  6E32               	movwf	(??i2_getNextWriteMessage+5)^0,c
 46456   008CBE  6A33               	clrf	(??i2_getNextWriteMessage+6)^0,c
 46457   008CC0  0E01               	movlw	1
 46458   008CC2  2632               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 46459   008CC4  0E00               	movlw	0
 46460   008CC6  2233               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 46461   008CC8  5030               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 46462   008CCA  1432               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 46463   008CCC  6E34               	movwf	(??i2_getNextWriteMessage+7)^0,c
 46464   008CCE  5031               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 46465   008CD0  1433               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 46466   008CD2  6E35               	movwf	(??i2_getNextWriteMessage+8)^0,c
 46467   008CD4  502D               	movf	??i2_getNextWriteMessage^0,w,c
 46468   008CD6  1834               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 46469   008CD8  E109               	bnz	i2l12414
 46470   008CDA  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46471   008CDC  1835               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 46472   008CDE  A4D8               	btfss	status,2,c
 46473   008CE0  D005               	goto	i2l12414
 46474   008CE2  0E00               	movlw	0
 46475   008CE4  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 46476   008CE6  0E00               	movlw	0
 46477   008CE8  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46478   008CEA  0012               	return	
 46479   008CEC                     i2l12414:
 46480   008CEC  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46481   008CEE  6ED9               	movwf	fsr2l,c
 46482   008CF0  6ADA               	clrf	fsr2h,c
 46483   008CF2  0E03               	movlw	3
 46484   008CF4  26D9               	addwf	fsr2l,f,c
 46485   008CF6  50DF               	movf	indf2,w,c
 46486   008CF8  6E36               	movwf	i2getNextWriteMessage@wr^0,c
 46487   008CFA  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46488   008CFC  6ED9               	movwf	fsr2l,c
 46489   008CFE  6ADA               	clrf	fsr2h,c
 46490   008D00  0E03               	movlw	3
 46491   008D02  26D9               	addwf	fsr2l,f,c
 46492   008D04  2ADF               	incf	indf2,f,c
 46493   008D06  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46494   008D08  6ED9               	movwf	fsr2l,c
 46495   008D0A  6ADA               	clrf	fsr2h,c
 46496   008D0C  0E04               	movlw	4
 46497   008D0E  26D9               	addwf	fsr2l,f,c
 46498   008D10  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46499   008D12  6EE1               	movwf	fsr1l,c
 46500   008D14  6AE2               	clrf	fsr1h,c
 46501   008D16  0E03               	movlw	3
 46502   008D18  26E1               	addwf	fsr1l,f,c
 46503   008D1A  50DE               	movf	postinc2,w,c
 46504   008D1C  5CE6               	subwf	postinc1,w,c
 46505   008D1E  A0D8               	btfss	status,0,c
 46506   008D20  D006               	goto	i2l12420
 46507   008D22  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46508   008D24  6ED9               	movwf	fsr2l,c
 46509   008D26  6ADA               	clrf	fsr2h,c
 46510   008D28  0E03               	movlw	3
 46511   008D2A  26D9               	addwf	fsr2l,f,c
 46512   008D2C  6ADF               	clrf	indf2,c
 46513   008D2E                     i2l12420:
 46514   008D2E  5036               	movf	i2getNextWriteMessage@wr^0,w,c
 46515   008D30  0D09               	mullw	9
 46516   008D32  CFF3 F02D          	movff	prodl,??i2_getNextWriteMessage
 46517   008D36  CFF4 F02E          	movff	prodh,??i2_getNextWriteMessage+1
 46518   008D3A  502B               	movf	i2getNextWriteMessage@q^0,w,c
 46519   008D3C  6ED9               	movwf	fsr2l,c
 46520   008D3E  6ADA               	clrf	fsr2h,c
 46521   008D40  CFDE F02F          	movff	postinc2,??i2_getNextWriteMessage+2
 46522   008D44  CFDD F030          	movff	postdec2,??i2_getNextWriteMessage+3
 46523   008D48  502D               	movf	??i2_getNextWriteMessage^0,w,c
 46524   008D4A  242F               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 46525   008D4C  6E2B               	movwf	?i2_getNextWriteMessage^0,c
 46526   008D4E  502E               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 46527   008D50  2030               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 46528   008D52  6E2C               	movwf	(?i2_getNextWriteMessage+1)^0,c
 46529   008D54  0012               	return		;funcret
 46530   008D56                     __end_ofi2_getNextWriteMessage:
 46531                           	callstack 0
 46532                           
 46533 ;; *************** function i2_getBufferPointer *****************
 46534 ;; Defined at:
 46535 ;;		line 588 in file "../../VLCBlib_PIC/can18_ecan.c"
 46536 ;; Parameters:    Size  Location     Type
 46537 ;;  b               1    wreg     unsigned char 
 46538 ;; Auto vars:     Size  Location     Type
 46539 ;;  b               1    2[COMRAM] unsigned char 
 46540 ;; Return value:  Size  Location     Type
 46541 ;;                  2    0[COMRAM] PTR unsigned char 
 46542 ;; Registers used:
 46543 ;;		wreg, status,2, status,0
 46544 ;; Tracked objects:
 46545 ;;		On entry : 0/0
 46546 ;;		On exit  : 0/0
 46547 ;;		Unchanged: 0/0
 46548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46552 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46553 ;;Total ram usage:        3 bytes
 46554 ;; Hardware stack levels used: 1
 46555 ;; This function calls:
 46556 ;;		Nothing
 46557 ;; This function is called by:
 46558 ;;		i2_canFillRxFifo
 46559 ;; This function uses a non-reentrant model
 46560 ;;
 46561                           
 46562                           	psect	text216
 46563   00A248                     __ptext216:
 46564                           	callstack 0
 46565   00A248                     i2_getBufferPointer:
 46566                           	callstack 3
 46567                           
 46568                           ;incstack = 0
 46569                           ;i2getBufferPointer@b stored from wreg
 46570   00A248  6E2D               	movwf	i2getBufferPointer@b^0,c
 46571                           
 46572                           ;../../VLCBlib_PIC/can18_ecan.c: 589:     switch (b) {
 46573   00A24A  D02D               	goto	i2l13438
 46574   00A24C                     i2l13400:
 46575                           
 46576                           ;../../VLCBlib_PIC/can18_ecan.c: 591:             return (uint8_t*) & RXB0CON;
 46577   00A24C  0E60               	movlw	96
 46578   00A24E  6E2B               	movwf	?i2_getBufferPointer^0,c
 46579   00A250  0E0F               	movlw	15
 46580   00A252  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46581   00A254  0012               	return	
 46582   00A256                     i2l13404:
 46583                           
 46584                           ;../../VLCBlib_PIC/can18_ecan.c: 593:             return (uint8_t*) & RXB1CON;
 46585   00A256  0E30               	movlw	48
 46586   00A258  6E2B               	movwf	?i2_getBufferPointer^0,c
 46587   00A25A  0E0F               	movlw	15
 46588   00A25C  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46589   00A25E  0012               	return	
 46590   00A260                     i2l13408:
 46591                           
 46592                           ;../../VLCBlib_PIC/can18_ecan.c: 595:             return (uint8_t*) & B0CON;
 46593   00A260  0E80               	movlw	128
 46594   00A262  6E2B               	movwf	?i2_getBufferPointer^0,c
 46595   00A264  0E0E               	movlw	14
 46596   00A266  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46597   00A268  0012               	return	
 46598   00A26A                     i2l13412:
 46599                           
 46600                           ;../../VLCBlib_PIC/can18_ecan.c: 597:             return (uint8_t*) & B1CON;
 46601   00A26A  0E90               	movlw	144
 46602   00A26C  6E2B               	movwf	?i2_getBufferPointer^0,c
 46603   00A26E  0E0E               	movlw	14
 46604   00A270  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46605   00A272  0012               	return	
 46606   00A274                     i2l13416:
 46607                           
 46608                           ;../../VLCBlib_PIC/can18_ecan.c: 599:             return (uint8_t*) & B2CON;
 46609   00A274  0EA0               	movlw	160
 46610   00A276  6E2B               	movwf	?i2_getBufferPointer^0,c
 46611   00A278  0E0E               	movlw	14
 46612   00A27A  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46613   00A27C  0012               	return	
 46614   00A27E                     i2l13420:
 46615                           
 46616                           ;../../VLCBlib_PIC/can18_ecan.c: 601:             return (uint8_t*) & B3CON;
 46617   00A27E  0EB0               	movlw	176
 46618   00A280  6E2B               	movwf	?i2_getBufferPointer^0,c
 46619   00A282  0E0E               	movlw	14
 46620   00A284  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46621   00A286  0012               	return	
 46622   00A288                     i2l13424:
 46623                           
 46624                           ;../../VLCBlib_PIC/can18_ecan.c: 603:             return (uint8_t*) & B4CON;
 46625   00A288  0EC0               	movlw	192
 46626   00A28A  6E2B               	movwf	?i2_getBufferPointer^0,c
 46627   00A28C  0E0E               	movlw	14
 46628   00A28E  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46629   00A290  0012               	return	
 46630   00A292                     i2l13428:
 46631                           
 46632                           ;../../VLCBlib_PIC/can18_ecan.c: 605:             return (uint8_t*) & B5CON;
 46633   00A292  0ED0               	movlw	208
 46634   00A294  6E2B               	movwf	?i2_getBufferPointer^0,c
 46635   00A296  0E0E               	movlw	14
 46636   00A298  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46637   00A29A  0012               	return	
 46638   00A29C                     i2l13432:
 46639                           
 46640                           ;../../VLCBlib_PIC/can18_ecan.c: 607:             return ((void*)0);
 46641   00A29C  0E00               	movlw	0
 46642   00A29E  6E2B               	movwf	?i2_getBufferPointer^0,c
 46643   00A2A0  0E00               	movlw	0
 46644   00A2A2  6E2C               	movwf	(?i2_getBufferPointer+1)^0,c
 46645   00A2A4  0012               	return	
 46646   00A2A6                     i2l13438:
 46647   00A2A6  502D               	movf	i2getBufferPointer@b^0,w,c
 46648                           
 46649                           ; Switch size 1, requested type "simple"
 46650                           ; Number of cases is 8, Range of values is 0 to 7
 46651                           ; switch strategies available:
 46652                           ; Name         Instructions Cycles
 46653                           ; simple_byte           25    13 (average)
 46654                           ;	Chosen strategy is simple_byte
 46655   00A2A8  0A00               	xorlw	0	; case 0
 46656   00A2AA  B4D8               	btfsc	status,2,c
 46657   00A2AC  D7CF               	goto	i2l13400
 46658   00A2AE  0A01               	xorlw	1	; case 1
 46659   00A2B0  B4D8               	btfsc	status,2,c
 46660   00A2B2  D7D1               	goto	i2l13404
 46661   00A2B4  0A03               	xorlw	3	; case 2
 46662   00A2B6  B4D8               	btfsc	status,2,c
 46663   00A2B8  D7D3               	goto	i2l13408
 46664   00A2BA  0A01               	xorlw	1	; case 3
 46665   00A2BC  B4D8               	btfsc	status,2,c
 46666   00A2BE  D7D5               	goto	i2l13412
 46667   00A2C0  0A07               	xorlw	7	; case 4
 46668   00A2C2  B4D8               	btfsc	status,2,c
 46669   00A2C4  D7D7               	goto	i2l13416
 46670   00A2C6  0A01               	xorlw	1	; case 5
 46671   00A2C8  B4D8               	btfsc	status,2,c
 46672   00A2CA  D7D9               	goto	i2l13420
 46673   00A2CC  0A03               	xorlw	3	; case 6
 46674   00A2CE  B4D8               	btfsc	status,2,c
 46675   00A2D0  D7DB               	goto	i2l13424
 46676   00A2D2  0A01               	xorlw	1	; case 7
 46677   00A2D4  B4D8               	btfsc	status,2,c
 46678   00A2D6  D7DD               	goto	i2l13428
 46679   00A2D8  D7E1               	goto	i2l13432
 46680   00A2DA                     __end_ofi2_getBufferPointer:
 46681                           	callstack 0
 46682                           
 46683 ;; *************** function _APP_highIsr *****************
 46684 ;; Defined at:
 46685 ;;		line 592 in file "../main.c"
 46686 ;; Parameters:    Size  Location     Type
 46687 ;;		None
 46688 ;; Auto vars:     Size  Location     Type
 46689 ;;		None
 46690 ;; Return value:  Size  Location     Type
 46691 ;;                  1    wreg      void 
 46692 ;; Registers used:
 46693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46694 ;; Tracked objects:
 46695 ;;		On entry : 0/0
 46696 ;;		On exit  : 0/0
 46697 ;;		Unchanged: 0/0
 46698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46703 ;;Total ram usage:        0 bytes
 46704 ;; Hardware stack levels used: 1
 46705 ;; Hardware stack levels required when called: 2
 46706 ;; This function calls:
 46707 ;;		_timer1DoneInterruptHandler
 46708 ;;		_timer3DoneInterruptHandler
 46709 ;; This function is called by:
 46710 ;;		_highIsr
 46711 ;; This function uses a non-reentrant model
 46712 ;;
 46713                           
 46714                           	psect	text217
 46715   00C332                     __ptext217:
 46716                           	callstack 0
 46717   00C332                     _APP_highIsr:
 46718                           	callstack 3
 46719                           
 46720                           ;../main.c: 595:     if (PIR1bits.TMR1IF) {
 46721                           
 46722                           ;incstack = 0
 46723   00C332  A09E               	btfss	158,0,c	;volatile
 46724   00C334  D003               	goto	i2l15302
 46725                           
 46726                           ;../main.c: 596:         timer1DoneInterruptHandler();
 46727   00C336  EC20  F061         	call	_timer1DoneInterruptHandler	;wreg free
 46728                           
 46729                           ;../main.c: 597:         PIR1bits.TMR1IF = 0;
 46730   00C33A  909E               	bcf	158,0,c	;volatile
 46731   00C33C                     i2l15302:
 46732                           
 46733                           ;../main.c: 599:     if (PIR2bits.TMR3IF) {
 46734   00C33C  A2A1               	btfss	161,1,c	;volatile
 46735   00C33E  0012               	return	
 46736                           
 46737                           ;../main.c: 600:         timer3DoneInterruptHandler();
 46738   00C340  ECDF  F060         	call	_timer3DoneInterruptHandler	;wreg free
 46739                           
 46740                           ;../main.c: 601:         PIR2bits.TMR3IF = 0;
 46741   00C344  92A1               	bcf	161,1,c	;volatile
 46742   00C346  0012               	return		;funcret
 46743   00C348                     __end_of_APP_highIsr:
 46744                           	callstack 0
 46745                           
 46746 ;; *************** function _timer3DoneInterruptHandler *****************
 46747 ;; Defined at:
 46748 ;;		line 240 in file "../servo.c"
 46749 ;; Parameters:    Size  Location     Type
 46750 ;;		None
 46751 ;; Auto vars:     Size  Location     Type
 46752 ;;		None
 46753 ;; Return value:  Size  Location     Type
 46754 ;;                  1    wreg      void 
 46755 ;; Registers used:
 46756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46757 ;; Tracked objects:
 46758 ;;		On entry : 0/0
 46759 ;;		On exit  : 0/0
 46760 ;;		Unchanged: 0/0
 46761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46766 ;;Total ram usage:        0 bytes
 46767 ;; Hardware stack levels used: 1
 46768 ;; Hardware stack levels required when called: 1
 46769 ;; This function calls:
 46770 ;;		i2_getNV
 46771 ;;		i2_setOutputPin
 46772 ;; This function is called by:
 46773 ;;		_APP_highIsr
 46774 ;; This function uses a non-reentrant model
 46775 ;;
 46776                           
 46777                           	psect	text218
 46778   00C1BE                     __ptext218:
 46779                           	callstack 0
 46780   00C1BE                     _timer3DoneInterruptHandler:
 46781                           	callstack 3
 46782                           
 46783                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 46784                           
 46785                           ;incstack = 0
 46786   00C1BE  90B1               	bcf	177,0,c	;volatile
 46787                           
 46788                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 46789   00C1C0  0100               	movlb	0	; () banked
 46790   00C1C2  51C5               	movf	_servoInBlock& (0+255),w,b
 46791   00C1C4  0D07               	mullw	7
 46792   00C1C6  50F3               	movf	243,w,c
 46793   00C1C8  0F49               	addlw	73
 46794   00C1CA  ECD9  F05D         	call	i2_getNV
 46795   00C1CE  502B               	movf	?i2_getNV^0,w,c
 46796   00C1D0  0B20               	andlw	32
 46797   00C1D2  6E2F               	movwf	i2setOutputPin@state^0,c
 46798   00C1D4  0100               	movlb	0	; () banked
 46799   00C1D6  51C5               	movf	_servoInBlock& (0+255),w,b
 46800   00C1D8  0F08               	addlw	8
 46801   00C1DA  EC43  F039         	call	i2_setOutputPin
 46802   00C1DE  0012               	return		;funcret
 46803   00C1E0                     __end_of_timer3DoneInterruptHandler:
 46804                           	callstack 0
 46805                           
 46806 ;; *************** function _timer1DoneInterruptHandler *****************
 46807 ;; Defined at:
 46808 ;;		line 235 in file "../servo.c"
 46809 ;; Parameters:    Size  Location     Type
 46810 ;;		None
 46811 ;; Auto vars:     Size  Location     Type
 46812 ;;		None
 46813 ;; Return value:  Size  Location     Type
 46814 ;;                  1    wreg      void 
 46815 ;; Registers used:
 46816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46817 ;; Tracked objects:
 46818 ;;		On entry : 0/0
 46819 ;;		On exit  : 0/0
 46820 ;;		Unchanged: 0/0
 46821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46826 ;;Total ram usage:        0 bytes
 46827 ;; Hardware stack levels used: 1
 46828 ;; Hardware stack levels required when called: 1
 46829 ;; This function calls:
 46830 ;;		i2_getNV
 46831 ;;		i2_setOutputPin
 46832 ;; This function is called by:
 46833 ;;		_APP_highIsr
 46834 ;; This function uses a non-reentrant model
 46835 ;;
 46836                           
 46837                           	psect	text219
 46838   00C240                     __ptext219:
 46839                           	callstack 0
 46840   00C240                     _timer1DoneInterruptHandler:
 46841                           	callstack 3
 46842                           
 46843                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 46844                           
 46845                           ;incstack = 0
 46846   00C240  90CD               	bcf	205,0,c	;volatile
 46847                           
 46848                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 46849   00C242  0100               	movlb	0	; () banked
 46850   00C244  51C5               	movf	_servoInBlock& (0+255),w,b
 46851   00C246  0D07               	mullw	7
 46852   00C248  50F3               	movf	243,w,c
 46853   00C24A  0F11               	addlw	17
 46854   00C24C  ECD9  F05D         	call	i2_getNV
 46855   00C250  502B               	movf	?i2_getNV^0,w,c
 46856   00C252  0B20               	andlw	32
 46857   00C254  6E2F               	movwf	i2setOutputPin@state^0,c
 46858   00C256  0100               	movlb	0	; () banked
 46859   00C258  51C5               	movf	_servoInBlock& (0+255),w,b
 46860   00C25A  EC43  F039         	call	i2_setOutputPin
 46861   00C25E  0012               	return		;funcret
 46862   00C260                     __end_of_timer1DoneInterruptHandler:
 46863                           	callstack 0
 46864                           
 46865 ;; *************** function i2_setOutputPin *****************
 46866 ;; Defined at:
 46867 ;;		line 254 in file "../digitalOut.c"
 46868 ;; Parameters:    Size  Location     Type
 46869 ;;  io              1    wreg     unsigned char 
 46870 ;;  state           1    4[COMRAM] enum E12700
 46871 ;; Auto vars:     Size  Location     Type
 46872 ;;  io              1    7[COMRAM] unsigned char 
 46873 ;; Return value:  Size  Location     Type
 46874 ;;                  1    wreg      void 
 46875 ;; Registers used:
 46876 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 46877 ;; Tracked objects:
 46878 ;;		On entry : 0/0
 46879 ;;		On exit  : 0/0
 46880 ;;		Unchanged: 0/0
 46881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46886 ;;Total ram usage:        4 bytes
 46887 ;; Hardware stack levels used: 1
 46888 ;; This function calls:
 46889 ;;		Nothing
 46890 ;; This function is called by:
 46891 ;;		_timer1DoneInterruptHandler
 46892 ;;		_timer3DoneInterruptHandler
 46893 ;; This function uses a non-reentrant model
 46894 ;;
 46895                           
 46896                           	psect	text220
 46897   007286                     __ptext220:
 46898                           	callstack 0
 46899   007286                     i2_setOutputPin:
 46900                           	callstack 3
 46901                           
 46902                           ;incstack = 0
 46903                           ;i2setOutputPin@io stored from wreg
 46904   007286  6E32               	movwf	i2setOutputPin@io^0,c
 46905                           
 46906                           ;../digitalOut.c: 255:     switch (configs[io].port) {
 46907   007288  D0BA               	goto	i2l13338
 46908   00728A                     i2l13318:
 46909                           
 46910                           ;../digitalOut.c: 257:             if (state) {
 46911   00728A  502F               	movf	i2setOutputPin@state^0,w,c
 46912   00728C  B4D8               	btfsc	status,2,c
 46913   00728E  D01D               	goto	i2l13322
 46914                           
 46915                           ;../digitalOut.c: 259:                LATA |= (1<<configs[io].no);
 46916   007290  5032               	movf	i2setOutputPin@io^0,w,c
 46917   007292  0D04               	mullw	4
 46918   007294  0E02               	movlw	2
 46919   007296  26F3               	addwf	243,f,c
 46920   007298  0E00               	movlw	0
 46921   00729A  22F4               	addwfc	244,f,c
 46922   00729C  0E35               	movlw	low _configs
 46923   00729E  24F3               	addwf	243,w,c
 46924   0072A0  6EF6               	movwf	tblptrl,c
 46925   0072A2  0EEE               	movlw	high _configs
 46926   0072A4  20F4               	addwfc	244,w,c
 46927   0072A6  6EF7               	movwf	tblptrh,c
 46928   0072A8                     	if	1	;There are 3 active tblptr bytes
 46929   0072A8  6AF8               	clrf	tblptru,c
 46930   0072AA  0E00               	movlw	low (__mediumconst shr (0+16))
 46931   0072AC  22F8               	addwfc	tblptru,f,c
 46932   0072AE                     	endif
 46933   0072AE  0008               	tblrd		*
 46934   0072B0  CFF5 F030          	movff	tablat,??i2_setOutputPin
 46935   0072B4  0E01               	movlw	1
 46936   0072B6  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 46937   0072B8  2A30               	incf	??i2_setOutputPin^0,f,c
 46938   0072BA  D002               	goto	i2u1221_44
 46939   0072BC                     i2u1221_45:
 46940   0072BC  90D8               	bcf	status,0,c
 46941   0072BE  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 46942   0072C0                     i2u1221_44:
 46943   0072C0  2E30               	decfsz	??i2_setOutputPin^0,f,c
 46944   0072C2  D7FC               	goto	i2u1221_45
 46945   0072C4  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 46946   0072C6  1289               	iorwf	137,f,c	;volatile
 46947                           
 46948                           ;../digitalOut.c: 260:             } else {
 46949   0072C8  0012               	return	
 46950   0072CA                     i2l13322:
 46951                           
 46952                           ;../digitalOut.c: 262:                 LATA &= ~(1<<configs[io].no);
 46953   0072CA  5032               	movf	i2setOutputPin@io^0,w,c
 46954   0072CC  0D04               	mullw	4
 46955   0072CE  0E02               	movlw	2
 46956   0072D0  26F3               	addwf	243,f,c
 46957   0072D2  0E00               	movlw	0
 46958   0072D4  22F4               	addwfc	244,f,c
 46959   0072D6  0E35               	movlw	low _configs
 46960   0072D8  24F3               	addwf	243,w,c
 46961   0072DA  6EF6               	movwf	tblptrl,c
 46962   0072DC  0EEE               	movlw	high _configs
 46963   0072DE  20F4               	addwfc	244,w,c
 46964   0072E0  6EF7               	movwf	tblptrh,c
 46965   0072E2                     	if	1	;There are 3 active tblptr bytes
 46966   0072E2  6AF8               	clrf	tblptru,c
 46967   0072E4  0E00               	movlw	low (__mediumconst shr (0+16))
 46968   0072E6  22F8               	addwfc	tblptru,f,c
 46969   0072E8                     	endif
 46970   0072E8  0008               	tblrd		*
 46971   0072EA  CFF5 F030          	movff	tablat,??i2_setOutputPin
 46972   0072EE  0E01               	movlw	1
 46973   0072F0  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 46974   0072F2  2A30               	incf	??i2_setOutputPin^0,f,c
 46975   0072F4  D002               	goto	i2u1222_44
 46976   0072F6                     i2u1222_45:
 46977   0072F6  90D8               	bcf	status,0,c
 46978   0072F8  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 46979   0072FA                     i2u1222_44:
 46980   0072FA  2E30               	decfsz	??i2_setOutputPin^0,f,c
 46981   0072FC  D7FC               	goto	i2u1222_45
 46982   0072FE  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 46983   007300  0AFF               	xorlw	255
 46984   007302  1689               	andwf	137,f,c	;volatile
 46985   007304  0012               	return	
 46986   007306                     i2l13324:
 46987                           
 46988                           ;../digitalOut.c: 266:             if (state) {
 46989   007306  502F               	movf	i2setOutputPin@state^0,w,c
 46990   007308  B4D8               	btfsc	status,2,c
 46991   00730A  D01D               	goto	i2l13328
 46992                           
 46993                           ;../digitalOut.c: 268:                 LATB |= (1<<configs[io].no);
 46994   00730C  5032               	movf	i2setOutputPin@io^0,w,c
 46995   00730E  0D04               	mullw	4
 46996   007310  0E02               	movlw	2
 46997   007312  26F3               	addwf	243,f,c
 46998   007314  0E00               	movlw	0
 46999   007316  22F4               	addwfc	244,f,c
 47000   007318  0E35               	movlw	low _configs
 47001   00731A  24F3               	addwf	243,w,c
 47002   00731C  6EF6               	movwf	tblptrl,c
 47003   00731E  0EEE               	movlw	high _configs
 47004   007320  20F4               	addwfc	244,w,c
 47005   007322  6EF7               	movwf	tblptrh,c
 47006   007324                     	if	1	;There are 3 active tblptr bytes
 47007   007324  6AF8               	clrf	tblptru,c
 47008   007326  0E00               	movlw	low (__mediumconst shr (0+16))
 47009   007328  22F8               	addwfc	tblptru,f,c
 47010   00732A                     	endif
 47011   00732A  0008               	tblrd		*
 47012   00732C  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47013   007330  0E01               	movlw	1
 47014   007332  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47015   007334  2A30               	incf	??i2_setOutputPin^0,f,c
 47016   007336  D002               	goto	i2u1224_44
 47017   007338                     i2u1224_45:
 47018   007338  90D8               	bcf	status,0,c
 47019   00733A  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47020   00733C                     i2u1224_44:
 47021   00733C  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47022   00733E  D7FC               	goto	i2u1224_45
 47023   007340  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47024   007342  128A               	iorwf	138,f,c	;volatile
 47025                           
 47026                           ;../digitalOut.c: 269:             } else {
 47027   007344  0012               	return	
 47028   007346                     i2l13328:
 47029                           
 47030                           ;../digitalOut.c: 271:                 LATB &= ~(1<<configs[io].no);
 47031   007346  5032               	movf	i2setOutputPin@io^0,w,c
 47032   007348  0D04               	mullw	4
 47033   00734A  0E02               	movlw	2
 47034   00734C  26F3               	addwf	243,f,c
 47035   00734E  0E00               	movlw	0
 47036   007350  22F4               	addwfc	244,f,c
 47037   007352  0E35               	movlw	low _configs
 47038   007354  24F3               	addwf	243,w,c
 47039   007356  6EF6               	movwf	tblptrl,c
 47040   007358  0EEE               	movlw	high _configs
 47041   00735A  20F4               	addwfc	244,w,c
 47042   00735C  6EF7               	movwf	tblptrh,c
 47043   00735E                     	if	1	;There are 3 active tblptr bytes
 47044   00735E  6AF8               	clrf	tblptru,c
 47045   007360  0E00               	movlw	low (__mediumconst shr (0+16))
 47046   007362  22F8               	addwfc	tblptru,f,c
 47047   007364                     	endif
 47048   007364  0008               	tblrd		*
 47049   007366  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47050   00736A  0E01               	movlw	1
 47051   00736C  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47052   00736E  2A30               	incf	??i2_setOutputPin^0,f,c
 47053   007370  D002               	goto	i2u1225_44
 47054   007372                     i2u1225_45:
 47055   007372  90D8               	bcf	status,0,c
 47056   007374  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47057   007376                     i2u1225_44:
 47058   007376  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47059   007378  D7FC               	goto	i2u1225_45
 47060   00737A  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47061   00737C  0AFF               	xorlw	255
 47062   00737E  168A               	andwf	138,f,c	;volatile
 47063   007380  0012               	return	
 47064   007382                     i2l13330:
 47065                           
 47066                           ;../digitalOut.c: 275:             if (state) {
 47067   007382  502F               	movf	i2setOutputPin@state^0,w,c
 47068   007384  B4D8               	btfsc	status,2,c
 47069   007386  D01D               	goto	i2l13334
 47070                           
 47071                           ;../digitalOut.c: 277:                 LATC |= (1<<configs[io].no);
 47072   007388  5032               	movf	i2setOutputPin@io^0,w,c
 47073   00738A  0D04               	mullw	4
 47074   00738C  0E02               	movlw	2
 47075   00738E  26F3               	addwf	243,f,c
 47076   007390  0E00               	movlw	0
 47077   007392  22F4               	addwfc	244,f,c
 47078   007394  0E35               	movlw	low _configs
 47079   007396  24F3               	addwf	243,w,c
 47080   007398  6EF6               	movwf	tblptrl,c
 47081   00739A  0EEE               	movlw	high _configs
 47082   00739C  20F4               	addwfc	244,w,c
 47083   00739E  6EF7               	movwf	tblptrh,c
 47084   0073A0                     	if	1	;There are 3 active tblptr bytes
 47085   0073A0  6AF8               	clrf	tblptru,c
 47086   0073A2  0E00               	movlw	low (__mediumconst shr (0+16))
 47087   0073A4  22F8               	addwfc	tblptru,f,c
 47088   0073A6                     	endif
 47089   0073A6  0008               	tblrd		*
 47090   0073A8  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47091   0073AC  0E01               	movlw	1
 47092   0073AE  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47093   0073B0  2A30               	incf	??i2_setOutputPin^0,f,c
 47094   0073B2  D002               	goto	i2u1227_44
 47095   0073B4                     i2u1227_45:
 47096   0073B4  90D8               	bcf	status,0,c
 47097   0073B6  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47098   0073B8                     i2u1227_44:
 47099   0073B8  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47100   0073BA  D7FC               	goto	i2u1227_45
 47101   0073BC  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47102   0073BE  128B               	iorwf	139,f,c	;volatile
 47103                           
 47104                           ;../digitalOut.c: 278:             } else {
 47105   0073C0  0012               	return	
 47106   0073C2                     i2l13334:
 47107                           
 47108                           ;../digitalOut.c: 280:                 LATC &= ~(1<<configs[io].no);
 47109   0073C2  5032               	movf	i2setOutputPin@io^0,w,c
 47110   0073C4  0D04               	mullw	4
 47111   0073C6  0E02               	movlw	2
 47112   0073C8  26F3               	addwf	243,f,c
 47113   0073CA  0E00               	movlw	0
 47114   0073CC  22F4               	addwfc	244,f,c
 47115   0073CE  0E35               	movlw	low _configs
 47116   0073D0  24F3               	addwf	243,w,c
 47117   0073D2  6EF6               	movwf	tblptrl,c
 47118   0073D4  0EEE               	movlw	high _configs
 47119   0073D6  20F4               	addwfc	244,w,c
 47120   0073D8  6EF7               	movwf	tblptrh,c
 47121   0073DA                     	if	1	;There are 3 active tblptr bytes
 47122   0073DA  6AF8               	clrf	tblptru,c
 47123   0073DC  0E00               	movlw	low (__mediumconst shr (0+16))
 47124   0073DE  22F8               	addwfc	tblptru,f,c
 47125   0073E0                     	endif
 47126   0073E0  0008               	tblrd		*
 47127   0073E2  CFF5 F030          	movff	tablat,??i2_setOutputPin
 47128   0073E6  0E01               	movlw	1
 47129   0073E8  6E31               	movwf	(??i2_setOutputPin+1)^0,c
 47130   0073EA  2A30               	incf	??i2_setOutputPin^0,f,c
 47131   0073EC  D002               	goto	i2u1228_44
 47132   0073EE                     i2u1228_45:
 47133   0073EE  90D8               	bcf	status,0,c
 47134   0073F0  3631               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47135   0073F2                     i2u1228_44:
 47136   0073F2  2E30               	decfsz	??i2_setOutputPin^0,f,c
 47137   0073F4  D7FC               	goto	i2u1228_45
 47138   0073F6  5031               	movf	(??i2_setOutputPin+1)^0,w,c
 47139   0073F8  0AFF               	xorlw	255
 47140   0073FA  168B               	andwf	139,f,c	;volatile
 47141   0073FC  0012               	return	
 47142   0073FE                     i2l13338:
 47143   0073FE  5032               	movf	i2setOutputPin@io^0,w,c
 47144   007400  0D04               	mullw	4
 47145   007402  0E01               	movlw	1
 47146   007404  26F3               	addwf	243,f,c
 47147   007406  0E00               	movlw	0
 47148   007408  22F4               	addwfc	244,f,c
 47149   00740A  0E35               	movlw	low _configs
 47150   00740C  24F3               	addwf	243,w,c
 47151   00740E  6EF6               	movwf	tblptrl,c
 47152   007410  0EEE               	movlw	high _configs
 47153   007412  20F4               	addwfc	244,w,c
 47154   007414  6EF7               	movwf	tblptrh,c
 47155   007416                     	if	1	;There are 3 active tblptr bytes
 47156   007416  6AF8               	clrf	tblptru,c
 47157   007418  0E00               	movlw	low (__mediumconst shr (0+16))
 47158   00741A  22F8               	addwfc	tblptru,f,c
 47159   00741C                     	endif
 47160   00741C  0008               	tblrd		*
 47161   00741E  50F5               	movf	tablat,w,c
 47162                           
 47163                           ; Switch size 1, requested type "simple"
 47164                           ; Number of cases is 3, Range of values is 65 to 67
 47165                           ; switch strategies available:
 47166                           ; Name         Instructions Cycles
 47167                           ; simple_byte           10     6 (average)
 47168                           ;	Chosen strategy is simple_byte
 47169   007420  0A41               	xorlw	65	; case 65
 47170   007422  B4D8               	btfsc	status,2,c
 47171   007424  D732               	goto	i2l13318
 47172   007426  0A03               	xorlw	3	; case 66
 47173   007428  B4D8               	btfsc	status,2,c
 47174   00742A  D76D               	goto	i2l13324
 47175   00742C  0A01               	xorlw	1	; case 67
 47176   00742E  A4D8               	btfss	status,2,c
 47177   007430  0012               	return	
 47178   007432  D7A7               	goto	i2l13330
 47179   007434                     __end_ofi2_setOutputPin:
 47180                           	callstack 0
 47181                           
 47182 ;; *************** function i2_getNV *****************
 47183 ;; Defined at:
 47184 ;;		line 171 in file "../../VLCBlib_PIC/nv.c"
 47185 ;; Parameters:    Size  Location     Type
 47186 ;;  index           1    wreg     unsigned char 
 47187 ;; Auto vars:     Size  Location     Type
 47188 ;;  index           1    3[COMRAM] unsigned char 
 47189 ;; Return value:  Size  Location     Type
 47190 ;;                  2    0[COMRAM] short 
 47191 ;; Registers used:
 47192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 47193 ;; Tracked objects:
 47194 ;;		On entry : 0/0
 47195 ;;		On exit  : 0/0
 47196 ;;		Unchanged: 0/0
 47197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47201 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47202 ;;Total ram usage:        4 bytes
 47203 ;; Hardware stack levels used: 1
 47204 ;; This function calls:
 47205 ;;		Nothing
 47206 ;; This function is called by:
 47207 ;;		_timer1DoneInterruptHandler
 47208 ;;		_timer3DoneInterruptHandler
 47209 ;; This function uses a non-reentrant model
 47210 ;;
 47211                           
 47212                           	psect	text221
 47213   00BBB2                     __ptext221:
 47214                           	callstack 0
 47215   00BBB2                     i2_getNV:
 47216                           	callstack 3
 47217                           
 47218                           ;incstack = 0
 47219                           ;i2getNV@index stored from wreg
 47220   00BBB2  6E2E               	movwf	i2getNV@index^0,c
 47221                           
 47222                           ;../../VLCBlib_PIC/nv.c: 172:     if (index == 0) return 127;
 47223   00BBB4  502E               	movf	i2getNV@index^0,w,c
 47224   00BBB6  A4D8               	btfss	status,2,c
 47225   00BBB8  D005               	goto	i2l13346
 47226   00BBBA  0E00               	movlw	0
 47227   00BBBC  6E2C               	movwf	(?i2_getNV+1)^0,c
 47228   00BBBE  0E7F               	movlw	127
 47229   00BBC0  6E2B               	movwf	?i2_getNV^0,c
 47230   00BBC2  0012               	return	
 47231   00BBC4                     i2l13346:
 47232                           
 47233                           ;../../VLCBlib_PIC/nv.c: 173:     if (index > 127) return -CMDERR_INV_NV_IDX;
 47234   00BBC4  0E7F               	movlw	127
 47235   00BBC6  642E               	cpfsgt	i2getNV@index^0,c
 47236   00BBC8  D005               	goto	i2l13352
 47237   00BBCA  0EFF               	movlw	255
 47238   00BBCC  6E2C               	movwf	(?i2_getNV+1)^0,c
 47239   00BBCE  0EF6               	movlw	246
 47240   00BBD0  6E2B               	movwf	?i2_getNV^0,c
 47241   00BBD2  0012               	return	
 47242   00BBD4                     i2l13352:
 47243                           
 47244                           ;../../VLCBlib_PIC/nv.c: 175:     return nvCache[index];
 47245   00BBD4  0E00               	movlw	low _nvCache
 47246   00BBD6  242E               	addwf	i2getNV@index^0,w,c
 47247   00BBD8  6ED9               	movwf	fsr2l,c
 47248   00BBDA  6ADA               	clrf	fsr2h,c
 47249   00BBDC  0E04               	movlw	high _nvCache
 47250   00BBDE  22DA               	addwfc	fsr2h,f,c
 47251   00BBE0  50DF               	movf	indf2,w,c
 47252   00BBE2  6E2D               	movwf	??i2_getNV^0,c
 47253   00BBE4  502D               	movf	??i2_getNV^0,w,c
 47254   00BBE6  6E2B               	movwf	?i2_getNV^0,c
 47255   00BBE8  6A2C               	clrf	(?i2_getNV+1)^0,c
 47256   00BBEA  0012               	return		;funcret
 47257   00BBEC                     __end_ofi2_getNV:
 47258                           	callstack 0
 47259                           
 47260                           	psect	rparam
 47261   000000                     
 47262                           	psect	temp
 47263   000055                     btemp:
 47264                           	callstack 0
 47265   000055                     	ds	1
 47266   000000                     int$flags	set	btemp
 47267   000000                     wtemp8	set	btemp+1
 47268   000000                     ttemp5	set	btemp+1
 47269   000000                     ttemp6	set	btemp+4
 47270   000000                     ttemp7	set	btemp+8
 47271                           
 47272                           	psect	config
 47273                           
 47274                           ;Config register CONFIG1L @ 0x300000
 47275                           ;	VREG Sleep Enable bit
 47276                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 47277                           ;	LF-INTOSC Low-power Enable bit
 47278                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 47279                           ;	SOSC Power Selection and mode Configuration bits
 47280                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 47281                           ;	Extended Instruction Set
 47282                           ;	XINST = OFF, Disabled
 47283   300000                     	org	3145728
 47284   300000  15                 	db	21
 47285                           
 47286                           ;Config register CONFIG1H @ 0x300001
 47287                           ;	Oscillator
 47288                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 47289                           ;	PLL x4 Enable bit
 47290                           ;	PLLCFG = OFF, Disabled
 47291                           ;	Fail-Safe Clock Monitor
 47292                           ;	FCMEN = OFF, Disabled
 47293                           ;	Internal External Oscillator Switch Over Mode
 47294                           ;	IESO = OFF, Disabled
 47295   300001                     	org	3145729
 47296   300001  03                 	db	3
 47297                           
 47298                           ;Config register CONFIG2L @ 0x300002
 47299                           ;	Power Up Timer
 47300                           ;	PWRTEN = ON, Enabled
 47301                           ;	Brown Out Detect
 47302                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 47303                           ;	Brown-out Reset Voltage bits
 47304                           ;	BORV = 0, 3.0V
 47305                           ;	BORMV Power level
 47306                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 47307   300002                     	org	3145730
 47308   300002  66                 	db	102
 47309                           
 47310                           ;Config register CONFIG2H @ 0x300003
 47311                           ;	Watchdog Timer
 47312                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 47313                           ;	Watchdog Postscaler
 47314                           ;	WDTPS = 1048576, 1:1048576
 47315   300003                     	org	3145731
 47316   300003  50                 	db	80
 47317                           
 47318                           ; Padding undefined space
 47319   300004                     	org	3145732
 47320   300004  FF                 	db	255
 47321                           
 47322                           ;Config register CONFIG3H @ 0x300005
 47323                           ;	ECAN Mux bit
 47324                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 47325                           ;	MSSP address masking
 47326                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 47327                           ;	Master Clear Enable
 47328                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 47329   300005                     	org	3145733
 47330   300005  89                 	db	137
 47331                           
 47332                           ;Config register CONFIG4L @ 0x300006
 47333                           ;	Stack Overflow Reset
 47334                           ;	STVREN = ON, Enabled
 47335                           ;	Boot Block Size
 47336                           ;	BBSIZ = BB1K, 1K word Boot Block size
 47337                           ;	Background Debugger
 47338                           ;	DEBUG = 0x1, unprogrammed default
 47339   300006                     	org	3145734
 47340   300006  81                 	db	129
 47341                           
 47342                           ; Padding undefined space
 47343   300007                     	org	3145735
 47344   300007  FF                 	db	255
 47345                           
 47346                           ;Config register CONFIG5L @ 0x300008
 47347                           ;	Code Protect 00800-03FFF
 47348                           ;	CP0 = OFF, Disabled
 47349                           ;	Code Protect 04000-07FFF
 47350                           ;	CP1 = OFF, Disabled
 47351                           ;	Code Protect 08000-0BFFF
 47352                           ;	CP2 = OFF, Disabled
 47353                           ;	Code Protect 0C000-0FFFF
 47354                           ;	CP3 = OFF, Disabled
 47355   300008                     	org	3145736
 47356   300008  0F                 	db	15
 47357                           
 47358                           ;Config register CONFIG5H @ 0x300009
 47359                           ;	Code Protect Boot
 47360                           ;	CPB = OFF, Disabled
 47361                           ;	Data EE Read Protect
 47362                           ;	CPD = OFF, Disabled
 47363   300009                     	org	3145737
 47364   300009  C0                 	db	192
 47365                           
 47366                           ;Config register CONFIG6L @ 0x30000A
 47367                           ;	Table Write Protect 00800-03FFF
 47368                           ;	WRT0 = OFF, Disabled
 47369                           ;	Table Write Protect 04000-07FFF
 47370                           ;	WRT1 = OFF, Disabled
 47371                           ;	Table Write Protect 08000-0BFFF
 47372                           ;	WRT2 = OFF, Disabled
 47373                           ;	Table Write Protect 0C000-0FFFF
 47374                           ;	WRT3 = OFF, Disabled
 47375   30000A                     	org	3145738
 47376   30000A  0F                 	db	15
 47377                           
 47378                           ;Config register CONFIG6H @ 0x30000B
 47379                           ;	Config. Write Protect
 47380                           ;	WRTC = OFF, Disabled
 47381                           ;	Table Write Protect Boot
 47382                           ;	WRTB = OFF, Disabled
 47383                           ;	Data EE Write Protect
 47384                           ;	WRTD = OFF, Disabled
 47385   30000B                     	org	3145739
 47386   30000B  E0                 	db	224
 47387                           
 47388                           ;Config register CONFIG7L @ 0x30000C
 47389                           ;	Table Read Protect 00800-03FFF
 47390                           ;	EBTR0 = OFF, Disabled
 47391                           ;	Table Read Protect 04000-07FFF
 47392                           ;	EBTR1 = OFF, Disabled
 47393                           ;	Table Read Protect 08000-0BFFF
 47394                           ;	EBTR2 = OFF, Disabled
 47395                           ;	Table Read Protect 0C000-0FFFF
 47396                           ;	EBTR3 = OFF, Disabled
 47397   30000C                     	org	3145740
 47398   30000C  0F                 	db	15
 47399                           
 47400                           ;Config register CONFIG7H @ 0x30000D
 47401                           ;	Table Read Protect Boot
 47402                           ;	EBTRB = OFF, Disabled
 47403   30000D                     	org	3145741
 47404   30000D  40                 	db	64
 47405                           tosu	equ	0xFFF
 47406                           tosh	equ	0xFFE
 47407                           tosl	equ	0xFFD
 47408                           stkptr	equ	0xFFC
 47409                           pclatu	equ	0xFFB
 47410                           pclath	equ	0xFFA
 47411                           pcl	equ	0xFF9
 47412                           tblptru	equ	0xFF8
 47413                           tblptrh	equ	0xFF7
 47414                           tblptrl	equ	0xFF6
 47415                           tablat	equ	0xFF5
 47416                           prodh	equ	0xFF4
 47417                           prodl	equ	0xFF3
 47418                           indf0	equ	0xFEF
 47419                           postinc0	equ	0xFEE
 47420                           postdec0	equ	0xFED
 47421                           preinc0	equ	0xFEC
 47422                           plusw0	equ	0xFEB
 47423                           fsr0h	equ	0xFEA
 47424                           fsr0l	equ	0xFE9
 47425                           wreg	equ	0xFE8
 47426                           indf1	equ	0xFE7
 47427                           postinc1	equ	0xFE6
 47428                           postdec1	equ	0xFE5
 47429                           preinc1	equ	0xFE4
 47430                           plusw1	equ	0xFE3
 47431                           fsr1h	equ	0xFE2
 47432                           fsr1l	equ	0xFE1
 47433                           bsr	equ	0xFE0
 47434                           indf2	equ	0xFDF
 47435                           postinc2	equ	0xFDE
 47436                           postdec2	equ	0xFDD
 47437                           preinc2	equ	0xFDC
 47438                           plusw2	equ	0xFDB
 47439                           fsr2h	equ	0xFDA
 47440                           fsr2l	equ	0xFD9
 47441                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    586
    Data        0
    BSS         1845
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      84
    BANK0           160     74     115
    BANK1           256     65     255
    BANK2           256     12     256
    BANK3           256     45     245
    BANK4           256      0     200
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$7968	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    poll$7969	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$7970	const PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$7970$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    pop@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(BANK1[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> txQueue(BANK1[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    quantity@q	PTR struct MessageQueue size(2) Largest target is 6
		 -> txQueue(BANK1[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    S6057MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), nvGetESDdata(), teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12732 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 32
		 -> ackDiagnostics(BANK0[2]), canDiagnostics(BANK1[32]), consumer2QDiagnostics(BANK1[2]), mnsDiagnostics(BANK1[12]), 
		 -> nvDiagnostics(BANK0[4]), producerDiagnostics(BANK1[2]), teachDiagnostics(BANK1[2]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12937 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK3[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12937 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12843 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12847 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK4[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _powerUp->_teachPowerUp
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _teachProcessMessage->_sendMessage3
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _producerProcessMessage->_sendMessage4
    _numEv->_validStart
    _nvTRnvrdCallback->_sendMessage4
    _mnsTRrqnpnCallback->_sendMessage4
    _nvProcessMessage->_sendMessage3
    _nvProcessMessage->_sendMessage4
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awmod
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_sendMessage4
    _mnsProcessMessage->_writeNVM
    _startTimedResponse->_findServiceIndex
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_bounceDown
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_push
    _readInput->_getNV
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _teachPowerUp->_rebuildHashtable
    _poll->_ackEventProcessMessage
    _poll->_bootProcessMessage
    _poll->_canProcessMessage
    _poll->_consumer2QProcessMessage
    _poll->_mnsProcessMessage
    _poll->_nvProcessMessage
    _poll->_producerProcessMessage
    _poll->_teachProcessMessage
    _teachCheckLen->_checkLen
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _nerdCallback->_sendMessage7
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _doSOD->_alwaysSendInvertedProducedEvent
    _alwaysSendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _poll->_producerProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 3749673
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   31895
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0    9755
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4468
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   37393
                                              9 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   23111
                                             73 BANK0      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4322
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    4736
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4510
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2315040
                                             30 BANK3     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  716108
                                             63 BANK1      2     0      2
                                              0 BANK2      6     6      0
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   61265
                                             72 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   19374
                                              8 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   65705
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   86855
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   19312
                                              8 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   73031
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1638
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   56344
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  108108
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   52677
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  179096
                                             51 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         7     0      7  123029
                                             44 BANK1      7     0      7
                           _addEvent
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              14    12      2   49153
                                             63 BANK1      2     0      2
                                              0 BANK2     12    12      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                    1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  133502
                                             30 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   38564
                                             15 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8418
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13456
                                             15 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   26175
                                             15 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   28530
                                             15 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   13604
                                             15 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   13139
                                             15 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  557727
                                             63 BANK1      2     0      2
                                              0 BANK2      4     4      0
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  486917
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  474563
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    2056
                                             51 BANK0      2     1      1
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  653215
                                             63 BANK1      2     0      2
                                              0 BANK2      4     4      0
                                              0 BANK3     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                         _canEsdData *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
              _producerGetDiagnostic *
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1446
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   12237
                                             70 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15114
                                             70 BANK0      4     1      3
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     436
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     244
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     5     3      2      93
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   50102
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   11573
                                             70 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            21    19      2   29996
                                             63 BANK1      2     0      2
                                              0 BANK2      6     6      0
                                              0 BANK3     12    12      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                    9     7      2   13149
                                              9 BANK1      8     6      2
                   _getBufferPointer
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              2 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              1 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   28626
                                             63 BANK1      2     0      2
                                              0 BANK2      2     2      0
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      2     0      2
                                              0 BANK2      2     2      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   63831
                                             63 BANK1      2     0      2
                                              0 BANK2      9     9      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                              _getEv
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13348
                                             70 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                         _canEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   29405
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29163
                                             71 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   28406
                                             70 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  253668
                                             45 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   70554
                                             29 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   66569
                                             17 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    7538
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12234
                                             63 BANK0     11    11      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       3     3      0   26721
                                             17 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   95982
                                             36 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   40989
                                             33 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   38337
                                             25 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendInvertedProducedEvent                            8     4      4   25653
                                             17 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                6     6      0   38165
                                             22 BANK1      6     6      0
                            ___awdiv
    _alwaysSendInvertedProducedEvent
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _alwaysSendInvertedProducedEvent                      5     3      2   26215
                                             17 BANK1      5     3      2
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   34570
                                             17 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendProducedEvent                                    8     7      1   24254
                                              9 BANK1      8     7      1
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13075
                                             70 BANK0      4     0      4
                                              8 BANK1      1     1      0
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9320
                                             67 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                       9     7      2    3281
                                             58 BANK0      9     7      2
                _getNextWriteMessage
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _quantity                                             6     4      2     183
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (7) _push                                                13     9      4    1234
                                             45 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  562647
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    8694
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    8694
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    6703
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  545002
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   33052
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   33052
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   22861
                                              1 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   12957
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    6385
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  459606
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  459272
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14583
                                              5 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              1 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4223
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        4     3      1  416916
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  293934
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  156027
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  137814
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  122362
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _writeEv                                             12    10      2   69906
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (7) _checkRemoveTableEntry                                2     2      0   54316
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   41362
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   23012
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9076
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (8) _getEVs                                               8     8      0    8638
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4124
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   11008
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4223
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4158
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17140
                                              1 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      6     2      4
                                              0 BANK1      1     1      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4028
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7771
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7771
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7610
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1040
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    7293
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    7293
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    6456
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    2047
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1836
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1836
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     317
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     737
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         ___awdiv
         _alwaysSendInvertedProducedEvent
           _getNV (ARG)
           _sendProducedEvent (ARG)
         _getNV
         _readNVM
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _canEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _canEsdData *
       _canGetDiagnostic *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerGetDiagnostic *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
         _findServiceIndex (ARG)
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      67       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      65        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      64        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      63        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      62        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      61        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      60        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      59        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      58        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      57        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     2D      F5      11       95.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      C     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     41      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      54       1       89.4%
BITBANK14           41      0       0      66        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRlllhl      2B      0       0      54        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      47        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      48        0.0%
BITBIGSFRllhllh      F      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRhh          4      0       0      24        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      55        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     483      56        0.0%
DATA                 0      0     823       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue May 21 16:03:10 2024

                   nerdCallback@nodeNumber 01CF                        findEvent@tableIndex 01CA  
                __end_of_pollTimedResponse A9A4                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 002B                           sendMessage@data1 01BF  
                         sendMessage@data2 01C0                           sendMessage@data3 01C1  
                         sendMessage@data4 01C2                           sendMessage@data5 01C3  
                         sendMessage@data6 01C4                           sendMessage@data7 01C5  
                      findEvent@nodeNumber 01BE              __end_of_setTimedResponseDelay C3E6  
            __end_of_producerGetDiagnostic BCC6                          ackEventCheckLen@m 01CF  
                           _completed$1459 0091                              ?_APP_addEvent 01EA  
                    _timedResponseCallback 0021                               ___awdiv@sign 009C  
                          _normalReadIndex 00C9                                         _io 00CB  
                                       _nn 00B4                                         bsr 0FE0  
                              ?_APP_lowIsr 002B                        ___wmul@multiplicand 0093  
                             configIO@type 01C5                         i2_getBufferPointer A248  
           _sendInvertedProducedEvent$1329 01D4                           ?_flushFlashBlock 002B  
                   _eventConsumer2QService EF0F                               ?_APP_highIsr 002B  
                  __end_of_eraseFlashBlock B7BA                __end_of_universalEventsInit C382  
                ?_consumer2QProcessMessage 01FD                                _startServos 9B08  
                           ??_getTwoAction 008F                                        l225 5A36  
                __end_of_deleteActionRange 9664                                        l500 A584  
                                      l245 6CAC                                        l318 4C02  
                                      l510 A892                                        l247 6D42  
                                      l424 34FA                                        l408 32D8  
                                      l505 A850                                        l417 32E4  
                                      l460 35DE                                        l428 34EE  
                                      l449 362C                                        l459 35D2  
                              _startOutput B2CE                                        l583 7478  
                                      l496 A542                                        l772 2DE0  
                                      l778 B3D6                                        l875 A220  
                          checkPowerOnPb@i 01F7                         _enumerationResults 0254  
                    deleteHappeningRange@h 01E2            ?_APP_isSuitableTimeToWriteFlash 002B  
         ??_APP_isSuitableTimeToWriteFlash 008D                        _expeditedWriteIndex 00C6  
                          _initServos$7956 00A7                            _initServos$7957 00A6  
                                      _evs 0240                                        _pop 9866  
                            _APP_nvDefault 9084                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 0036  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 002B  
     sendInvertedProducedEvent@can_send_on 01D1                    APP_nvValueChanged@index 01F6  
                  APP_nvValueChanged@value 01F1        __end_of_mnsTRallDiagnosticsCallback 85BC  
              _mnsTRallDiagnosticsCallback 84D6                                       l1132 C39C  
                                     l1048 1436                                       l1232 6830  
                                     l3020 A71A                                       l2140 6166  
                                     l2142 616E                                       l2151 61FE  
                                     l2160 6272                                       l2153 6210  
                                     l2162 627A                                       l2171 6304  
                                     l2155 6216                                       l2173 6314  
                                     l2157 621C                                       l2149 61EE  
                                     l2190 8FE0                                       l1470 23BA  
                                     l2175 631E                                       l2177 6328  
                                     l2169 62F4                                       l2373 94CA  
                                     l2429 C094                                       l2366 957A  
                                     l1903 2258                                       l2560 AE6E  
                                     l1912 B67C                                       l1568 BC06  
                                     l1833 8044                                       l2554 AE58  
                                     l2547 C292                                       l1835 8070  
                                     l1668 78B4                                       l1941 4A84  
                                     l1829 7FF8                                       l2574 B7A6  
                                     l2902 713C                                       l1934 49AE  
                                     l2398 4498                                       l1871 1B0C  
                                     l2592 B8FC                                       l1929 4924  
                                     l2845 69EE                                       l2849 6A30  
                                     l2895 50DC              __end_ofi2_getNextWriteMessage 8D56  
                                     l2898 7118                                       _BIE0 0E7E  
                       doEvuln@eventNumber 01D4                                       ?_pop 008D  
                         setOutputState@io 0095                                       _EEIF 7DBE  
                   __end_of_checkPowerOnPb B2CE                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _IPR5 0F78                          doEvuln@nodeNumber 01D2  
                           configIO@action 01C4                                       _WPUB 0F5B  
                        setOutputPin@state 0091                             i2_setOutputPin 7286  
                              _outputState 02B4                              _pushTwoAction B212  
                    i1_getNextWriteMessage 8AE4                                       _have AC70  
                                     _main B806                                       _name 0848  
                                     _loop 6D4E                                       _poll 4138  
               __end_of_mnsTRrqnpnCallback BDC2                                       fsr1h 0FE2  
                                     fsr2h 0FDA                                       indf1 0FE7  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       _push 3DAC  
                      setMultiState@action 0091                                       btemp 0055  
                        ?_removeTableEntry 002B                                       pop@q 008D  
                                     prodh 0FF4                                       prodl 0FF3  
                          __end_ofi2_getNV BBEC                                       start 081C  
                             ?_loadNvCache 002B                         bounceDown@reversed 00A6  
                            setupTimer1@io 009C                        _setExpeditedActions C3FA  
                            setupTimer3@io 009C                 __end_of_startDigitalOutput 5BDC  
                           _setBounceState 9710                consumer2QProcessMessage@end 03C8  
                     ??i2_getBufferPointer 002D                consumer2QProcessMessage@opc 03CA  
                       ??_removeTableEntry 01C7                              ?_APP_testMode 002B  
                          getEN@tableIndex 00A1                               ___param_bank 0000  
                           ??_APP_addEvent 00AA                      __end_of_defaultEvents 7596  
                        findServiceIndex@i 0090                                completed@io 0092  
                     __end_of_EEPROM_Write AE94                                _uptimeTimer 0164  
                                    ??_pop 008F                                      l20004 BCAC  
                                    _B0CON 0E80                                      l21010 15AA  
                                    l21002 14EA                                      l20050 BA5C  
                                    l20018 BD18                                      l20036 AC64  
                                    l20028 AC08                                      l20140 86B4  
                                    l20132 86AC                                      l20108 C03E  
                                    l21014 160A                                      l21006 154A  
                                    l21022 1678                                      l21110 9F64  
                                    l20054 BA70                                      l20240 8FEA  
                                    l20232 8FC2                                      l21024 16A6  
                                    l21032 172A                                      l20160 86C4  
                                    l20152 86BC                                      l20144 86B8  
                                    l20136 86B0                                      l20128 86A8  
                                    l20216 870A                                      l20080 8992  
                                    _B1CON 0E90                                      l20242 8FFC  
                                    l20234 8FCC                                      l20250 9022  
                                    l22010 4B26                                      l21034 175A  
                                    l21018 1640                                      l20226 BC76  
                                    l20244 9006                                      l20236 8FD6  
                                    l20164 86CA                                      l20156 86C0  
                                    l20092 8A04                                      l21212 7D66  
                                    l21204 7D14                                      l20246 9010  
                                    l22006 4B1E                                      l22110 63E4  
                                    l21118 9FE0                                      l20182 86E2  
                                    l20174 86DE                                      l21302 C13A  
                                    l20078 8954                                      l21230 ADCE  
                                    l21134 B194                                      l21142 B19C  
                                    l20264 BB42                                      l22024 4BB2  
                                    l22104 63CC                                      l21072 9E66  
                                    l20168 86CE                                      l21312 C142  
                                    l21320 AF06                                      _B2CON 0EA0  
                                    l20530 816C                                      l20522 80F4  
                                    l22130 64A0                                      l22210 6D0A  
                                    l20194 86E6                                      l21306 C13E  
                                    l21162 91E2                                      l21154 9188  
                                    l21138 B198                                      l23010 196C  
                                    l23002 1940                                      l15010 BF9E  
                                    l22060 4D5E                                      l22044 4CC2  
                                    l22036 4C4C                                      l20620 36B0  
                                    l22132 64A8                                      l22116 63FC  
                                    l20526 8130                                      l22054 4D20  
                                    l22062 4D74                                      l22046 4CD2  
                                    l22070 4DE6                                      l20630 3816  
                                    l20622 36DA                                      l20614 3646  
                                    l20702 A750                                      l21350 BFF2  
                                    l20198 86F8                                      l20278 BECE  
                                    l20366 BC40                                      l21430 A9B4  
                                    l21326 AF5C                                      l21262 AD86  
                                    l21246 BBF6                                      l23102 1B5E  
                                    l20392 B444                                      l21504 61C6  
                                    l20536 81A8                                      l22056 4D36  
                                    l22072 4DF6                                      l20632 383E  
                                    l20616 365E                                      l22208 6CFE  
                                    l21088 9DCC                                      l21352 BFFA  
                                    l21344 A084                                      l22304 34A8  
                                    l22312 34BE                                      _B3CON 0EB0  
                                    l20538 81DC                                      l22066 4DB2  
                                    l20634 385C                                      l20618 3688  
                                    l20650 3A0C                                      l20714 A788  
                                    l20730 B2EC                                      l20722 B2D4  
                                    l22162 6572                                      l20802 0910  
                                    l21354 C002                                      l21338 A02E  
                                    l21418 BD9E                                      l21178 AA6E  
                                    l21194 7CCE                                      l21290 9428  
                                    l21282 93F4                                      l21274 93C4  
                                    l22322 3502                                      l22234 3266  
                                    l23202 2176                                      l23114 1BB6  
                                    l23106 1B88                                      l23026 19B2  
                                    l20396 B458                                      l21532 6222  
                                    l22068 4DD4                                      l20628 37E0  
                                    l20740 B304                                      l22164 6576  
                                    l22092 639C                                      l22084 6390  
                                    l20820 0A0E                                      l20812 0978  
                                    l20804 0932                                      l21452 C2DA  
                                    l21700 C2C4                                      l21436 A9C8  
                                    l21188 7C96                                      l21284 9406  
                                    l22332 3524                                      l22308 34B4  
                                    l22420 9EDE                                      l23140 1D74  
                                    l23044 19FC                                      l23036 19C0  
                                    l21366 85C2                                      l21550 62CE  
                                    l21534 6274                                      l20734 B2F8  
                                    l20726 B2E0                                      l22158 6554  
                                    l20830 0A8C                                      l20806 0944  
                                    l21606 9906                                      l20558 B246  
                                    l21358 C00A                                      l23310 48BC  
                                    l21294 9440                                      l22254 32EC  
                                    l23134 1D22                                      l23118 1C34  
                                    l23038 19EC                                      l21544 62A8  
                                    l20752 A1D8                                      l20744 A1BA  
                                    l20592 A868                                      l20648 39D6  
                                    l20680 B4F4                                      l20920 0F86  
                                    l20904 0EA2                                      l21712 75DA  
                                    l21704 7598                                      l23304 4898  
                                    l21448 C2D6                                      l22256 336E  
                                    l22432 9F0E                                      l22512 6854  
                                    l23224 21EE                                      l23128 1C6A  
                                    l23072 1AA2                                      l23064 1A5C  
                                    l23056 1A30                                      _B4CON 0EC0  
                                    l21538 627E                                      l20666 A4A8  
                                    l20690 B50C                                      l22098 63B4  
                                    l22194 6C60                                      l22178 6B82  
                                    l20850 0B98                                      l20842 0B04  
                                    l20826 0A58                                      l20818 09EC  
                                    l21810 A0CA                                      l21802 A0B6  
                                    l21730 7660                                      l23322 493E  
                                    l21298 C136                                      l21458 C2DE  
                                    l21386 A376                                      l21466 BA0E  
                                    l22290 3438                                      l22426 9EF8  
                                    l22514 68A6                                      l23226 2200  
                                    l23154 1DE4                                      l23410 44BA  
                                    l24034 4476                                      l24026 43A4  
                                    l21492 6172                                      l20748 A1BE  
                                    l20684 B500                                      l20676 B4E8  
                                    l22188 6C0A                                      l20940 10CE  
                                    l20860 0C16                                      l20836 0AD0  
                                    l21740 769A                                      l21732 7662  
                                    l22356 3560                                      l22292 347E  
                                    l22276 3400                                      l22444 9F2C  
                                    l22516 68BC                                      l22524 68D8  
                                    l23164 1E12                                      l23148 1DA0  
                                    l24108 B846                                      l20766 A224  
                                    l20694 A732                                      l22198 6C88  
                                    l20934 103E                                      l21814 A0D4  
                                    l21806 A0C0                                      l21726 761C  
                                    l21398 851C                                      l22374 35E8  
                                    l22366 35C6                                      l22358 35A6  
                                    l22526 6912                                      l22470 67CA  
                                    l23238 222C                                      l23182 211A  
                                    l23174 20EC                                      l23094 1B32  
                                    l23422 44EC                                      l20774 AB92  
                                    l21910 7DBE                                      l21488 6168  
                                    l20952 11DC                                      l20944 1128  
                                    l20936 1076                                      l20856 0BE2  
                                    l20848 0B76                                      l21824 A0E8  
                                    l21744 76A0                                      l22712 24CE  
                                    l22632 22CC                                      l22376 35EE  
                                    l22384 35FC                                      l22296 3494  
                                    l22560 5744                                      l22552 56A8  
                                    l23168 1EF8                                      l23432 4534  
                                    l22616 BFCE                                      l22456 C1E6  
                                    l21904 7D8C                                      _B5CON 0ED0  
                                    l21498 619E                                      l21578 632E  
                                    l20698 A736                                      l20970 12EA  
                                    l20962 127E                                      l20954 11EE  
                                    l20890 0DD0                                      l20866 0C52  
                                    l20882 0D6C                                      l20794 085A  
                                    l21818 A0DE                                      l21762 76C6  
                                    l21754 76BE                                      l23354 4A76  
                                    l23346 4A1A                                      l21690 C2BC  
                                    l22810 26E2                                      l22626 22AC  
                                    l23186 2138                                      l23258 225E  
                                    l23506 472A                                      l23426 452A  
                                    l20778 AB9E                                      l20786 ABD2  
                                    l21922 7E68                                      l23604 9520  
                                    l20964 12A0                                      l20948 1182  
                                    l20884 0DAA                                      l20876 0D0C  
                                    l21844 8298                                      l21836 820E  
                                    l23348 4A20                                      l23292 4854  
                                    l22644 2308                                      l22484 6814  
                                    l22492 682C                                      l22556 56AC  
                                    l22548 5686                                      l23444 4590  
                                    l23428 4530                                      l23532 47B4  
                                    l21908 7DB0                                      l20990 141A  
                                    l20982 13AE                                      l20974 1320  
                                    l20878 0D34                                      l20798 08B6  
                                    l21790 A098                                      l21854 82C4  
                                    l21774 B9CE                                      l21782 B9EE  
                                    l21598 9892                                      l21766 76CE  
                                    l21694 C2C0                                      l22830 2734  
                                    l22638 2302                                      l22582 5834  
                                    l23518 4786                                      l21918 7E36  
                                    l19000 51DA                                      l23616 9470  
                                    l20984 13D0                                      l23376 4B06  
                                    l22728 2566                                      l22672 2380  
                                    l22584 588C                                      l23456 45EA  
                                    l21960 9804                                      l21952 97CA  
                                    l18034 A65A                                      l18018 A636  
                                    l19010 526A                                      l18122 7878  
                                    l21794 A0A2                                      l21786 A08E  
                                    l23802 71A6                                      l23298 4870  
                                    l22850 2796                                      l22770 263E  
                                    l22674 2384                                      l23466 4616  
                                    l23722 9BF6                                      l23706 9BC0  
                                    l23554 B984                                      l22922 8048  
                                    l23650 69FA                                      l19020 52FA  
                                    l18140 7934                                      l18116 7866  
                                    l14860 A6CC                                      l21980 9B1A  
                                    l23900 6DFE                                      l23580 A93C  
                                    l22748 25B4                                      l22588 58D2  
                                    l22596 590A                                      l23484 4692  
                                    l22916 8020                                      l23396 C0EE  
                                    l23644 69F2                                      l21948 97C2  
                                    l18230 8D86                                      l14862 A6D8  
                                    l21798 A0AC                                      l23590 A974  
                                    l23582 A962                                      l22870 2808  
                                    l22790 2690                                      l22678 2388  
                                    l22598 5936                                      l23494 46BE  
                                    l23478 4666                                      l23718 9BF2  
                                    l21966 9854                                      l18216 AE90  
                                    l18064 A6A2                                      l18232 8D8A  
                                    l19008 522C                                      l19032 538A  
                                    l18128 78C2                                      l18320 7F4A  
                                    l19200 B082                                      l19112 A5B2  
                                    l14872 A70C                                      l19040 9C6C  
                                    l21992 9B62                                      l23592 A97A  
                                    l22768 2638                                      l22696 2446  
                                    l22952 179C                                      l23736 9C22  
                                    l22936 8092                                      l22928 8074  
                                    l18250 B728                                      l19018 52BC  
                                    l18402 7A2C                                      l23914 6EB4  
                                    l23906 6E54                                      l23818 726E  
                                    l22970 1814                                      l18244 8E20  
                                    l18236 8D9C                                      l18260 B74C  
                                    l19028 534C                                      l18332 7FB8  
                                    l18308 7F08                                      l18412 7AA6  
                                    l18420 7AEE                                      l19124 A5D8  
                                    l19140 A60A                                      l19052 9CC4  
                                    l23596 A980                                      l22892 28DC  
                                    l22964 180C                                      l22948 1770  
                                    l18182 AE36                                      l18254 B73A  
                                    l18158 9324                                      l18078 B71E  
                                    l18414 7AE0                                      l19126 A5E0  
                                    l19118 A5C2                                      l18502 8A7A  
                                    l19302 9698                                      l22982 18C0  
                                    l22966 1810                                      l22990 18E2  
                                    l23934 879A                                      l18352 8302  
                                    l18328 7F74                                      l19144 A618  
                                    l19136 A600                                      l19160 AD04  
                                    l23960 B296                                      l19056 9CCE  
                                    l19048 9CB6                                      l19304 96B4  
                                    l19312 96FE                                      l19208 B862  
                                    l22992 191A                                      l22976 183A  
                                    l23872 9AA6                                      l18346 82FC  
                                    l18274 7EB4                                      l19090 74A2  
                                    l19058 9CD2                                      l19322 9246  
                                    l18380 83AA                                      l18292 7ED4  
                                    l18436 B954                                      l18524 3A2C  
                                    l19092 74CA                                      l19076 B68E  
                                    l19180 AD4A                                      l19172 AD32  
                                    l19164 AD12                                      l19156 ACF8  
                                    l18508 8ABC                                      l18460 ACD6  
                                    l18452 AC7A                                      l19236 BF26  
                                    l19340 9716                                      l19308 96E2  
                                    l19324 9256                                      l19316 9218  
                                    l22996 191E                                      l18710 6F18  
                                    l18374 8398                                      l18358 8306  
                                    l18286 7ED0                                      l19166 AD1A  
                                    l19270 909E                                      l19262 9096  
                                    l19254 9092                                      l19406 B53E  
                                    l19350 978E                                      l19318 9226  
                                    l23982 41CA                                      l18704 BB24  
                                    l18720 6FDA                                      l18384 83AE  
                                    l18544 3AB8                                      l19088 744E  
                                    l19096 7576                                      l19176 AD3C  
                                    l18624 4E4A                                      l19344 9744  
                                    l19360 AF7C                                      l19328 9284  
                                    l19424 B64A                                      l18722 7018  
                                    l18714 6F5A                                      l18730 7098  
                                    l18562 3C00                                      l18538 3AAE  
                                    l18802 9654                                      l19274 90A2  
                                    l19266 909A                                      l18618 4E2E  
                                    l19346 9760                                      l19354 97AA  
                                    l19370 8BBC                                      l23994 422E  
                                    l18716 6F98                                      l18740 A2F6  
                                    l18548 3ABE                                      l18900 65C6  
                                    l19284 90A6                                      l18492 4134  
                                    l18484 3E14                                      l19372 8BD8  
                                    l19364 AF96                                      l19436 B672  
                                    l19428 B65A                                      l23988 4228  
                                    l18726 705A                                      l18814 8868  
                                    l19286 90DA                                      l18662 4FBC  
                                    l19374 8BF4                                      l19366 AFA6  
                                    l19358 AF66                                      l19614 59F8  
                                    l18576 3CB2                                      l19552 C15E  
                                    l19384 8C68                                      l19392 9D3C  
                                    l17954 B7F2                                      l18578 3CB4  
                                    l18586 3CC6                                      l18826 8926  
                                    l19570 B3E6                                      l18682 50B2  
                                    l19378 8C2E                                      l19298 966A  
                                    l19642 5AEC                                      l19626 5A54  
                                    l19802 2C66                                      l17972 B1E8  
                                    l17964 B1B8                                      l18748 A320  
                                    l18772 95C0                                      l19732 BF4E  
                                    l19660 5BA0                                      l19652 5B3E  
                                    l19636 5ACC                                      l19900 5DE6  
                                    l19820 2D20                                      l18758 A360  
                                    l18598 3D9C                                      l18942 6790  
                                    l18918 6720                                      l18926 6766  
                                    l19590 B416                                      l19646 5B16  
                                    l19670 BCE2                                      l19814 2CE2  
                                    l19830 2DB2                                      l17968 B1D0  
                                    l18872 A438                                      l18864 A3FE  
                                    l18880 A46E                                      l18936 6778  
                                    l19912 5E44                                      l19808 2CA4  
                                    l19760 2A0C                                      l19752 29BC  
                                    l17978 B1F2                                      l18698 BB14  
                                    l18874 A444                                      l18866 A402  
                                    l18794 9640                                      l18786 95E4  
                                    l19682 A534                                      l19930 2EA8  
                                    l19914 5E74                                      l19850 B3B6  
                                    l18980 5146                                      l18964 B8DA  
                                    l18956 B8A0                                      l19940 3048  
                                    l19844 B3B2                                      l19780 2B16  
                                    l19772 2A8A                                      l19748 29AC  
                                    l18974 50EE                                      l18894 65BE  
                                    l19694 A55A                                      l19950 31FA  
                                    l19862 5C18                                      l19766 2A4C  
                                    l18992 51A2                                      l18984 5164  
                                    l18976 5104                                      l19944 309C  
                                    l19784 2B56                                      l19954 324C  
                                    l19882 5D30                                      l19874 5CC0  
                                    l19796 2C26                                      l19788 2B94  
                                    l18998 51C4                                      l19958 3250  
                                    l19886 5D58                                      l19974 A824  
                                    l19990 BEFC                                      l19888 5D70  
                                    l19978 A828                                      ?_have 002B  
                                    ?_main 002B                  ??_consumer2QGetDiagnostic 008F  
                             ?_initOutputs 002B                        processEnumeration@i 01C6  
                          __end_of___awdiv A622                                      _EEADR 0F74  
                                    ?_loop 002B                          setOutputState@act 0093  
                          __end_of___awmod AD54                                      ?_poll 002B  
                                    ?_push 008D                                      _BSEL0 0E7D  
                      doSOD@event_inverted 01D8                            __end_of___lldiv A72C  
                                    u20000 5BAE                                      u20020 BCD8  
                                    u20120 BF58                                      u20040 A530  
                                    _T0CON 0FD5                                      u20130 BF5A  
                                    u20211 2AA8                                      u21004 8160  
                          ___awdiv@divisor 0099                                      u21005 815C  
                                    u21014 819C                                      u21015 8198  
                                    u21200 3730                                      u21210 376C  
                                    u21300 38B2                                      u21220 376E  
                                    u20500 2EA8                                      u20261 2BB2  
                                    u21310 38EE                                      u21150 36BE  
                                    u20510 2ED8                                      u22110 1598  
                                    u21320 38F0                                      u21240 37FA  
                                    u21160 36C0                                      u20520 2EDA  
                                    u22120 159A                                      u22200 9EB4  
                                    u21330 3908                                      u21250 37FC  
                                    u20450 5DD2                                      u22050 14D8  
                                    u22210 9EB6                                      u20610 BEF2  
                                    u21340 3944                                      u21180 3716  
                                    u20380 5C12                                      u22140 15F8  
                                    u22060 14DA                                      u21350 3946  
                                    u21190 3718                                      u20390 5C14  
                                    u22150 15FA                                      u22230 9E1A  
                                    u23110 82E2                                      u20710 BA6C  
                                    u20630 BCA2                                      u21280 3898  
                                    u21440 A74C                                      u22080 1538  
                                    u22240 9E1C                                      u20720 8950  
                                    u21530 A21C                                      u21370 397E  
                                    u21290 389A                                      u20490 2E86  
                                    u22170 171A                                      u22090 153A  
                                    u20650 BD0E                                      u20810 BEC4  
                                    u21380 39BA                                      u21540 ABC6  
                                    u21390 39BC                                      u21470 A784  
                                    u23070 8262                                      u23230 9800  
                                    u21550 ABC8                                      u23055 8222  
                                    u14520 A6DC                                      u21800 0D24  
                                    u20760 86DA                                      u23240 9802  
                                    u21490 A1D4                                      u21650 0ABC  
                                    u23330 9B90                                      u24130 67C6  
                                    u21820 0E58                                      u21660 0ABE  
                                    u23084 8276                                      u20780 BC6C  
                                    u23085 8272                                      u21830 0E5A  
                                    u22630 BA0A                                      u24310 22C8  
                                    u24070 3636                                      u23440 4C48  
                                    u20880 BC36                                      u24080 9EDA  
                                    u25008 1FCE                                      u25009 1FE2  
                                    u22650 614C                                      u23450 4C4A  
                                    u21770 0CF8                                      u23290 9B48  
                                    u25210 4A5E                                      u22570 8518  
                                    u24330 22FC                                      u25018 204C  
                                    u25019 2060                                      u18100 82F8  
                                    u22548 8668                                      u23700 657C  
                                    u21860 0F3E                                      u21780 0CFA  
                                    u25140 48FC                                      u25028 20CA  
                                    u22549 867A                                      u25029 20DE  
                                    u23550 4D9C                                      u23710 6590  
                                    u21870 0F40                                      u21790 0D22  
                                    u18120 8390                                      u23560 4D9E  
                                    u23480 4C8C                                      u25240 4AC8  
                                    u25160 4928                                      u26040 4480  
                                    u22770 62FA                                      u20994 8124  
                                    u23490 4C8E                                      u23570 638A  
                                    u21970 1306                                      u25170 497E  
                                    u25090 4832                                      u20995 8120  
                                    u22780 630A                                      u22940 75D6  
                                    u22588 8560                                      u25420 A938  
                                    u26028 4456                                      u24700 7FEE  
                                    u22589 8574                                      u26029 4468  
                                    u25405 B9A8                                      u19030 51F0  
                                    u23750 6C32                                      u25190 49F2  
                                    u25350 4652                                      u25406 B9AA  
                                    u25510 6A24                                      u19104 52EC  
                                    u18080 7FC0                                      u23760 6C34  
                                    u22960 765A                                      u23840 3262  
                                    u25280 44B6                                      u19105 52E8  
                                    u19130 5310                                      u25370 46FA  
                                    u25530 9BBC                                      u19044 5220  
                                    u19300 AD1E                                      u22980 767A  
                                    u25620 7136                                      u19045 521C  
                                    u19054 525C                                      u18350 3AB4  
                                    u25438 A940                                      u19055 5258  
                                    u25439 A95C                                      u19144 5340  
                                    u19080 5280                                      u19240 A5E4  
                                    u19400 B882                                      u25720 6E3C  
                                    u19145 533C                                      u17650 C398  
                                    u19154 537C                                      u19155 5378  
                                    u18604 6FCE                                      u19420 B88E  
                                    u25740 6E9C                                      u18605 6FCA  
                                    u18614 700A                                      u17910 AE5C  
                                    u17670 C390                                      u19094 52B0  
                                    u18390 3CBA                                      u19350 B072  
                                    u25750 6EF4                                      u18615 7006  
                                    u19095 52AC                                      u17840 785A  
                                    u18634 704E                                      u18650 A31C  
                                    u19530 8C12                                      u19370 B86C  
                                    u18635 704A                                      u18644 708A  
                                    u17860 78B8                                      u19540 8C4C  
                                    u19380 B86E                                      u24948 1CD0  
                                    u18645 7086                                      u24949 1CF2  
                                    u18574 6F4E                                      u18830 A40C  
                                    u17950 8D72                                      u18575 6F4A  
                                    u18495 4EAA                                      u18584 6F8A  
                                    u18840 A40E                                      u19800 5998  
                                    u25928 42D4                                      u18585 6F86  
                                    u25929 42E6                                      u18930 676E  
                                    u19810 5A10                                      u25890 4210  
                          reqevCallback@ev 01D5                                      u18915 66DC  
                     __end_of_factoryReset 86A2                                      u18860 A42C  
                                    u17980 8DC8                                      u18916 66E0  
                                    u18828 A916                                      u19820 5A12  
                                    u25788 8840                                      u25789 8852  
                                    u18870 A42E                                      u19840 5A32  
                                    u25968 4362                                      u25969 4374  
                                    u18890 65BA                                      u19930 5B3A  
                                    u19850 5A34                                      u19940 5B3C  
                                    u17998 8DCC                                      u19790 5996  
                        _initTimedResponse C3EE                                      u19970 5B70  
                                    u19980 5B72                                      u19990 5BAC  
                           ?_APP_nvDefault 002B                            ___awdiv@counter 009B  
                                    _MSEL0 0E79                                      _MSEL1 0E7A  
                                    _MSEL2 0E7B                                      _MSEL3 0E7C  
                 __end_of_nvTRnvrdCallback BA44                               i2_canTxError B0F0  
         __end_of_factoryResetGlobalEvents C41A                             _APP_nvValidate B382  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0032  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 9212  
                          __end_of_doNenrd ADC4                       ?_setExpeditedActions 002B  
             nvProcessMessage@valueOrError 02F6                            __end_of_doEvuln AA9A  
                           _ackDiagnostics 00D1                            __end_of_doNnclr BD92  
                          __end_of_doNnevn AE2C         sendInvertedProducedEvent@happening 01D3  
                          __end_of_doReqev 7D86                            __end_of_doReval 9456  
                                    i1_pop 9910                                      i2_pop 99BA  
                          __end_of_doRqevn BC24                            __end_of_getHash C220  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 0015  
                       ?_initTimedResponse 002B                         __p_paramBlock_text 0820  
                          __end_of_highIsr 8FBC                              ?_leds_powerUp 002B  
                          __end_of_isEvent C098                            __end_of_configs EE75  
                                    _canId 00B8                                      _doSOD 3640  
              ??_sendInvertedProducedEvent 00AA                                      _getEN AA9A  
                                    _getNN 92D6                                      _getNV BAFE  
                                    _getEv 7848                           needsStarting@act 008D  
                     _enumerationStartTime 0011                            __end_of_readNVM B212  
                          __end_of_isrHigh 84D6                                      _setNV A9A4  
                   __end_ofi2_setOutputPin 7434                                      _numEv 893A  
                                    have@i 0090                                      _speed 0100  
                                    _setup 9A62                        canReceiveMessage@mp 01CB  
                          __end_of_mnsPoll 4B18                              setNV@oldValue 01FB  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B432  
                          ?_checkPowerOnPb 002B                            __end_of_setType B08E  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 002B  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01CE            mnsTRallDiagnosticsCallback@type 002B  
                                    poll@i 03EB                                      poll@m 03EC  
                         __end_ofi2_canIsr C332                            __end_of_powerUp 885E  
                                    plusw2 0FDB                                      push@m 008F  
                                    push@q 008D                    reqevCallback@tableIndex 01DB  
                                    ttemp5 0056                                      ttemp6 0059  
                                    ttemp7 005D                           _setServoPosition C10C  
                                    status 0FD8                                      wtemp8 0056  
                            ?_nvGetESDdata 002B                     __end_of_setBounceState 97BC  
                  reqevCallback@nodeNumber 01D7                            __end_of_writeEv 3DAC  
                 ?_updateModuleErrorStatus 002B                 __end_of_startTimedResponse BA82  
                             bounceDown@io 00A9                           ?_nvGetDiagnostic 008D  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01C4                            __initialization AE94  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have ACE2                               __end_of_main B850  
                             __end_of_name 0850                               __end_of_loop 6F12  
                             __end_of_poll 44A8                               __end_of_push 4138  
                            ?_nerdCallback 01CD                           i2canFillRxFifo@m 0039  
                         _setupTimer1$1841 0098                           _setupTimer3$1845 0098  
                     __end_of_getParameter 8782                  __end_of_initTimedResponse C3F4  
                   __end_of_APP_nvValidate B3DA                                     ??_have 008D  
                             ?_setNewCanId 002B                                     ??_main 00AA  
                         ?_eraseFlashBlock 002B                                     ??_loop 01EB  
                             ?_sendMessage 01BE                                     ??_poll 03E6  
                                   ??_push 0091                      __end_of_reqevCallback A088  
                 __end_of_ackEventCheckLen C31A                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01FD                          _pollsPerStepSpeed 0294  
                                   ?i1_pop 0060                                     ?i2_pop 002B  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00C8  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 8C86                                     ?_doSOD 002B  
                    __end_of_setServoState 9710                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 0174                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 679A  
                                   ?_setNV 01F8                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7B                                     ?_numEv 002B  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 002F  
                                   _CIOCON 0F70                                     ?_setup 002B  
                      APP_nvValidate@index 0094        consumer2QProcessMessage@firstAction 03CC  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 0093  
                       setOutputState@type 0094                                  ??i2_getNV 002D  
                   ?i1_getNextWriteMessage 0060                           reqevCallback@nEv 01D4  
                                   i1l2429 C0E4                                     i1l2478 842C  
                                   i1l2923 567E                                     i2l2429 C198  
                                   i2l2473 84A2                                     i2l2923 6108  
                                   _TABLAT 0FF5                         rebuildHashtable@ev 01C1  
                   _producerProcessMessage 5684                    ackEventProcessMessage@m 01FD  
                                   _TBLPTR 0FF6                             ??_nvGetESDdata 008D  
                            _needsStarting A72C            __end_of_consumer2QGetDiagnostic BCFC  
                                   _TXB0D0 0F26                                     _TXB0D1 0F27  
                                   _TXB0D2 0F28                                     _TXB0D3 0F29  
                                   _TXB0D4 0F2A                                     _TXB0D5 0F2B  
                                   _TXB0D6 0F2C                                     _TXB0D7 0F2D  
                         __end_of_checkLen A82C                               ?_removeEvent 01CD  
                          ?_setBounceState 0091                        setServoPosition@pos 009F  
                           _clearAllEvents B538                   __end_of_APP_factoryReset C178  
                     __end_of_getTwoAction C3EE                        setServoState@action 0091  
                          setMultiState@io 0092                              _canFillRxFifo 76F0  
                              initTicker@i 008F                          ?_findServiceIndex 002B  
                         _rebuildHashtable 7EAE                           ??_processActions 00AA  
                        _canProcessMessage 9BAE                                     i1pop@q 0060  
                            teachPowerUp@i 00A9                                     i2pop@q 002B  
                          completed@action 008D                   reqevCallback@eventNumber 01D9  
               __end_of_APP_nvValueChanged 2DE2                            setServoState@io 0092  
                         __end_of_configIO 53C2                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent B850                         _processEnumeration 7596  
                              readInput@io 0093                         ?_canProcessMessage 01FD  
                         pollServos@midway 01D9                 startDigitalOutput@pinState 01DC  
                           teachCheckLen@m 01CF               ??_timer3DoneInterruptHandler 0033  
                         __end_of_bounceUp 5E78                           pollServos@target 01D7  
                                   ___lmul B432                   __end_of_mnsGetDiagnostic BC90  
                           ??_nerdCallback 00AA                                     _canIsr C220  
          checkRemoveTableEntry@tableIndex 01CD                                     _canPri EE87  
                                   ___wmul C098                                  ??___awdiv 009B  
                                   _doNerd C29C                                  ??___awmod 0091  
                    _APP_preProcessMessage C410                                     _doWait A486  
                                   _getEVs 82E6                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                              _nvDiagnostics 00CD  
                          getParameter@idx 0092                          needsStarting@type 008E  
                                   _memcpy B9BC                                  ??_doEvlrn 00AA  
                                ??_doNenrd 00AA                                     _isrLow 83EA  
                                ??_doEvuln 00AA                                     getNN@f 00A1  
                                ??_doNnclr 00AA                                     clear_0 AE9C  
                                   clear_1 AEAE                                     clear_2 AEBA  
                                ??_doNnevn 01C6                                     clear_3 AEC6  
                                   clear_4 AED2                                     clear_5 AEDE  
                                   clear_6 AEEA                                  ??_doReqev 00AA  
                                ??_doReval 01CC                                     _lowIsr 8E24  
                                   _saveNV BB78                           ___awdiv@quotient 009D  
                                   getEv@f 00A4                   __end_of_setDigitalOutput A486  
                          ___awmod@divisor 008F                                  ??_doRqevn 00AA  
                         flushFlashBlock@i 008F                        ?_processEnumeration 002B  
                                   have@id 008F                                  ??_getHash 00A7  
                          ??_APP_nvDefault 009F                        ??_canProcessMessage 02F4  
                                   isa$std 0001                            ___awmod@counter 0091  
                          ?_APP_nvValidate 0093                           ??_processOutputs 01CF  
                                ??_highIsr 0044                                  ??_isEvent 008D  
           __end_of_ackEventProcessMessage 699C                   __end_of_setNormalActions C3FA  
              producerProcessMessage@index 02FF                                  ??_readNVM 0094  
                 nerdCallback@serviceIndex 01CD                                  ??_isrHigh 0049  
                            i2_checkTxFifo 5E78                      ackGetDiagnostic@index 0090  
                        _canReceiveMessage 70D0                 __end_of_teachGetDiagnostic BD32  
                         _nvProcessMessage 44A8                                     numEv@f 00A2  
                                ??_mnsPoll 01CB                                     pop@ret 0094  
                         canFillRxFifo@ptr 006C                          ??_mnsFactoryReset 00AA  
                             __mediumconst ED34                                  ??_tickGet 0091  
                         __end_of_services EE87                         _tableIndexToEvtIdx C3D2  
              findServiceIndex@serviceType 008F                                  ??_setType 00AA  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                        doEvlrn@nodeNumber 01F1                                     tblptru 0FF8  
                             ??_FLASH_Read 008F                              _initInputScan 97BC  
                         __end_of_quantity BAC0                          nvProcessMessage@m 01FD  
                       ?_canReceiveMessage 01C7                                  ??_powerUp 01C7  
                        __end_ofi1_isEvent C0E8                               i2getNV@index 002E  
               __end_of_peekTwoActionQueue A59C                     getParameterFlags@flags 0091  
                             ?_setupTimer1 002B          mnsTRserviceDiscoveryCallback@step 01CE  
                             ?_setupTimer3 002B                            ??_pushTwoAction 008D  
        mnsTRserviceDiscoveryCallback@type 002B                              checkTxFifo@mp 0073  
                        __end_ofi2_isEvent C19C                          i2_checkCANTimeout B5E0  
                     __end_of_APP_addEvent C1BE                                  ??_writeEv 01D1  
                             __p_name_text 0848                      _checkRemoveTableEntry B92E  
                      addEvent@eventNumber 01DD                          _expeditedQueueBuf 0150  
             nvTRnvrdCallback@valueOrError 01CF                           __end_of_writeNVM B76E  
                           ?_needsStarting 008D                        ?_tableIndexToEvtIdx 002B  
                   __end_of_clearAllEvents B58C                      mnsGetDiagnostic@index 0091  
                        __end_ofi1_tickGet B4E2                     startServoOutput@action 0091  
                     ??_processEnumeration 01C0                         ?i2_checkCANTimeout 002B  
                               __accesstop 0060                    __end_of__initialization AEF0  
                __end_of_canProcessMessage 9C50                          __end_ofi2_tickGet B382  
                            bounceDown@tmp 00A7                        ??_canReceiveMessage 01C9  
                        EEPROM_Write@index 008F                             nvGetESDdata@id 008D  
                        EEPROM_Write@value 0091                             ?_canFillRxFifo 002B  
                           setOutputPin@io 0094                     checkRemoveTableEntry@e 01CE  
                            doEvuln@result 01D6                              ___rparam_used 0001  
                       teachCheckLen@learn 01D2                                 _eeBootFlag 0024  
                        i1tickGet@IntFlag1 0065                          i1tickGet@IntFlag2 0064  
                  ??_handleSelfEnumeration 0099                  ?_factoryResetGlobalEvents 002B  
                            ?_teachPowerUp 002B                           FLASH_Write@index 0090  
                        _getParameterFlags B634                              __end_ofi1_pop 99BA  
                         FLASH_Write@value 0092                              __end_ofi2_pop 9A62  
                      ??i2_checkCANTimeout 0040                             __pcstackCOMRAM 002B  
               ?i1_updateModuleErrorStatus 002B  mnsTRserviceDiscoveryCallback@serviceIndex 01CD  
                           _io@inputs$F843 00CA                                 _canEsdData C2B6  
                            __end_of_doSOD 3A18                         ?_getParameterFlags 002B  
                            __end_of_getEN AB14                              __end_of_getNN 9398  
                            __end_of_getNV BB3C                              __end_of_getEv 799E  
                       __end_of_FLASH_Read B806                                 _ackPowerUp C1E0  
                   ackEventCheckLen@needed 01D1                              __end_of_setNV AA20  
                            __end_of_numEv 8A12                              __end_of_setup 9B08  
                     ??_tableIndexToEvtIdx 008D                               i1isEvent@opc 0061  
                             ??_APP_lowIsr 0060                         APP_factoryReset@io 01F1  
                             ?_startServos 002B                  __end_of_canReceiveMessage 7286  
                             ?_startOutput 01DF               nvTRnvrdCallback@serviceIndex 01CD  
               __end_of_bootProcessMessage 9F5A                                  ?i2_canIsr 002B  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 002B  
                               _canTxError B08E                                 _canService EF69  
                               _canPowerUp 699C                    producerProcessMessage@h 02FE  
                  producerProcessMessage@m 01FD                                    ??i1_pop 0062  
                                  ??i2_pop 002D                             ?_initInputScan 002B  
                reqevCallback@serviceIndex 01CD                       __end_of_APP_testMode C41C  
               rebuildHashtable@tableIndex 01C6               __end_of_deleteHappeningRange 893A  
                __end_ofi2_checkCANTimeout B634               consumer2QGetDiagnostic@index 0091  
                                  ??_doSOD 01D4                              completed@type 008E  
                                  ??_getEN 0099                                    ??_getNN 0099  
                                  ??_getNV 008F                                    ??_getEv 009F  
                  startDigitalOutput@state 01D7                                saveNV@index 01C2  
                           canFillRxFifo@m 006E                                    ??_setNV 01F9  
                            ?_sendMessage2 00A6                              ?_sendMessage3 00A6  
                            ?_sendMessage4 00A6                              ?_sendMessage5 01C6  
                            ?_sendMessage6 01C6                              ?_sendMessage7 01C6  
                                  ??_numEv 009D                      _setupModePreviousMode 00BF  
                                  ??_setup 00AA                               canEsdData@id 008D  
                              saveNV@value 01BF                               readNVM@index 0091  
     _alwaysSendInvertedProducedEvent$1334 01D2                   mnsProcessMessage@newMode 02F7  
                        initTicker@divider 008E                               _EEPROM_Write AE2C  
                               __pbssBANK0 00AA                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                               loadNvCache@i 009B  
                             i2isEvent@opc 002C                            ?_clearAllEvents 002B  
               startTimedResponse@callback 0092                            canSendMessage@m 00A1  
                               doSOD@state 01D7                                 _defaultNVs B684  
                       __end_of_APP_lowIsr C41E                        setNewCanId@newCanId 01BF  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B684  
                               _delayCount 02A4                             _loadFlashBlock B8E4  
                             _factoryReset 85BC                             ??_teachPowerUp 00A9  
                            _setLEDsByMode BFF0                              addEvent@evVal 01E0  
                            addEvent@evNum 01DF                             _canDiagnostics 017E  
                            addEvent@error 01E6             __end_of_eventConsumer2QService EF21  
                   processActions@ioAction 01E8                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 02F5                         mnsProcessMessage@i 02F4  
                       mnsProcessMessage@m 01FD                       __end_of_leds_powerUp BD62  
                   ?_APP_preProcessMessage 008D                                    ?___lmul 0091  
                                  ?_canIsr 002B                       i2tickGet@currentTime 0031  
                                  ?___wmul 0091                               initBounce@io 008D  
                                  ?_doNerd 002B                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C3BC                                    ?_getEVs 002B  
                        i2tickGet@IntFlag1 0030                          i2tickGet@IntFlag2 002F  
                                  ?_memcpy 008D                                  ?_addEvent 01DB  
                                  _ECANCON 0F72                                    ?_isrLow 002B  
                       _mnsTRrqnpnCallback BD92                             ___lmul@product 0099  
                      i1getBufferPointer@b 0062                                    ?_lowIsr 002B  
                                  ?_saveNV 01BF                        setOutputPosition@io 00A3  
                    _setTimedResponseDelay C3DC                      _producerGetDiagnostic BC90  
                                  _BRGCON1 0E43                                    _BRGCON2 0E44  
                                  _BRGCON3 0E45                     processActions@peekItem 01E3  
                 __end_of_setServoPosition C130                       __end_of_nvGetESDdata C2EA  
                               ??i2_canIsr 0044                         _startDigitalOutput 593A  
                         _canGetDiagnostic BC24                                 _flashBlock 00AE  
                               _flashFlags 00B9                                    i1l20410 A138  
                                  i1l20402 A124                                    i1l20430 A16A  
                                  i1l20422 A156                                    i1l20414 A142  
                                  i1l20406 A12E                                    i1l20334 556C  
                                  i1l20440 A17E                                    i1l20352 5662  
                                  i1l20434 A174                                    i1l20426 A160  
                                  i1l20418 A14C                                    i1l21612 76F2  
                                  i1l21634 7736                                    i1l24114 8428  
                                  i1l21646 7842                                    i1l24070 8E2A  
                                  i1l21658 B0B8                                    i1l21668 B0E2  
                                  i1l19504 8B8E                                    i1l19522 99B0  
                                  i1l19514 993C                                    i2l12420 8D2E  
                                  i1l19452 B496                                    i2l12414 8CEC  
                                  i2l12342 B332                                    i2l13400 A24C  
                                  i1l19472 B4C6                                    i2l13330 7382  
                                  i2l13322 72CA                                    i2l12362 B364  
                                  i2l13324 7306                                    i2l13420 A27E  
                                  i2l13412 A26A                                    i2l13404 A256  
                                  i2l20508 60EC                                    i2l13334 73C2  
                                  i2l13318 728A                                    i2l13352 BBD4  
                                  i2l13328 7346                                    i2l13432 A29C  
                                  i2l13424 A288                                    i2l13416 A274  
                                  i2l13408 A260                                    i2l13346 BBC4  
                                  i2l13338 73FE                                    i2l20490 5FF6  
                                  i1l19498 8B4C                                    i2l13428 A292  
                                  i2l15302 C33C                                    i2l13438 A2A6  
                                  i2l24112 849E                                    i2l24052 8EF6  
                                  i2l21882 B11A                                    i2l14940 7B34  
                                  i2l21892 B144                                    i2l14918 7AF4  
                                  i2l14952 7C40                                  ?_checkLen 01CB  
                                  i2l19540 9A58                                    i2l19532 99E4  
                           _setOutputState B4E2                          ?_nvTRnvrdCallback 01CD  
                        reqevCallback@step 01CE                     processActions@nextType 01E5  
                      ?_mnsTRrqnpnCallback 01CD                           ??_checkPowerOnPb 00AA  
                 ackEventProcessMessage@ev 02F6                          ??i2_canFillRxFifo 0037  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00AA                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A8  
                           ??_sendMessage3 00A9                             ??_sendMessage4 00AA  
                           ??_sendMessage5 00A6                             ??_sendMessage6 00A6  
                           ??_sendMessage7 00A6                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D7                     ?_checkRemoveTableEntry 002B  
                         _teachDiagnostics 01B8                            ??_needsStarting 008F  
                                ?_configIO 002B                                 _bounceDown 2DE2  
                     __end_of_nerdCallback AF60                             inputScan@input 01D2  
                                ?_bounceUp 002B                                    i2_getNV BBB2  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01CD                               _getParameter 86A2  
                   __end_of_loadFlashBlock B92E                          _sendProducedEvent 9C50  
                    i2_getNextWriteMessage 8C86                            _timerExtension1 00C4  
                          _timerExtension2 00C3                             ?_setLEDsByMode 002B  
                   mnsTRrqnpnCallback@step 01CE                     mnsTRrqnpnCallback@type 002B  
                       ?_sendProducedEvent 01C7                                poll@handled 03EA  
                     ??_mnsTRrqnpnCallback 00AA                          __end_of_findEvent A36A  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 002B  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C1E0  
               _timer3DoneInterruptHandler C1BE                                 _initBounce C046  
                   _APP_postProcessMessage C414                                 _eventTable EF80  
                     ??_startDigitalOutput 01D8                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 002B                          __end_of_pbUpTimer 9506  
                         pbUpTimer@timeout 00A8                                 _initTicker B976  
                                  ___awdiv A59C                                 _initRomOps C348  
                                  ___awmod ACE2                   _consumer2QProcessMessage 3254  
                         _ackGetDiagnostic BEE0                                 _initServos 7D86  
                                ?_quantity 008D                                    ___lldiv A6A8  
                      ??_sendProducedEvent 01C8                          __end_of_completed A248  
                              ?_ackPowerUp 002B                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01DE  
                               ??_addEvent 01E2                                 _currentPos 0140  
                                  _doEvlrn 914C                                 _paramBlock 0820  
                                  _doNenrd AD54                         canProcessMessage@m 01FD  
                                  doSOD@io 01D9                                    _doEvuln AA20  
                                  _doNnclr BD62                                    _doNnevn ADC4  
                                  _doReqev 7C46                                    _doReval 9398  
                                  __pcinit AE94                            ??i2_checkTxFifo 0037  
                              setType@type 01EE                              _teachCheckLen B152  
                                  _doRqevn BBEC                          __end_of_leds_poll 637C  
                       _startTimedResponse BA44                                    __ramtop 0F00  
                                  _getHash C200                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01F3                              ??_checkTxFifo 006C  
                                  __ptext0 B806                                    __ptext1 9A62  
                                  __ptext2 C370                                    __ptext3 7D86  
                                  __ptext4 AB8C                                    __ptext5 BF98  
                                  __ptext6 97BC                                    __ptext7 8782  
                                  __ptext8 699C                                    __ptext9 C0E8  
                   __end_of_setOutputState B538                                    _highIsr 8EF2  
                                  _isEvent C070                                    _configs EE35  
                                  _pbTimer 00AA                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 002B                           _EnumerationState 0023  
                        ??_canFactoryReset 00AA                          _mnsProcessMessage 1766  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 017D                                  _T1CONbits 0FCD  
                              ?_canPowerUp 002B                                    _readNVM B1B2  
                        __end_of_readInput 81E0                             _nvFactoryReset BB3C  
                             _getTwoAction C3E6                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01CF  
                                  _isrHigh 846C                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 7FCC                                 ??_checkLen 00A7  
                         ??i2_setOutputPin 0030                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C2                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$741 01C2  
                       doReqev@eventNumber 01CE                                    _mnsPoll 47E8  
                       ?_mnsProcessMessage 01FD                                    _tickGet B3DA  
                             _flashCounter 00B0                          doNenrd@tableIndex 01D0  
                      ?_startTimedResponse 0091                                    _setType B02A  
                             _isEvent$5817 008D                         ??_ackEventCheckLen 00A8  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 02C4  
                                  _rxQueue 0026                          doNenrd@nodeNumber 01CC  
                 processActions@nextAction 01E9                                    _powerUp 8782  
                        __end_of_inputScan 4DFC                          __end_of_mnsLowIsr C370  
                                  _txQueue 01B3                    ?_producerProcessMessage 01FD  
                          defaultEvents@en 01EB                            defaultEvents@io 01ED  
                                  _started 00CC                                 ??_configIO 01BF  
                               _mnsService EF57                          __end_of_nvService EF57  
                         ??_setBounceState 0092                                 _mnsPowerUp 7FCC  
                        __end_of_nvPowerUp C10C                                    _writeEv 3A18  
                __end_of_sendProducedEvent 9CF2                                 ??_bounceUp 009F  
                     end_of_initialization AEF0                         _expeditedReadIndex 00C7  
                            startOutput@io 01E1                        ??_mnsProcessMessage 03C8  
                             writeNVM@type 01BE                                 getEv@evNum 009D  
                                  memcpy@d 0094                                    memcpy@n 0091  
                                  memcpy@s 0096                 APP_nvValueChanged@oldValue 01F2  
                              ?_defaultNVs 01C3                              ??_EEPROM_Read 008F  
                          ?_loadFlashBlock 002B                              ??_clearEvents 00AA  
                                i1u2084_25 544A                      __end_of_doneTwoAction C406  
                                i1u2293_20 B5C8                                  i1u2613_28 8ED0  
                                i1u2613_29 8EE2                                  i2u1221_44 72C0  
                                i2u1221_45 72BC                                    lowIsr@i 007D  
                                i2u1222_44 72FA                                  i2u1222_45 72F6  
                                i2u1224_44 733C                                  i2u1224_45 7338  
                                i2u1225_44 7376                                  i2u1225_45 7372  
                        _consumer2QPowerUp C2EA                                  i2u1227_44 73B8  
                                i2u1227_45 73B4                                  i2u1228_44 73F2  
                                i2u1228_45 73EE                                  i2u2314_40 B61A  
                                i2u2095_45 5EFC                          ?_APP_factoryReset 002B  
                                i2u2609_48 8F9C                                  i2u2609_49 8FAE  
                           ??_popTwoAction 008D                                 _validStart B6D4  
                          ___lldiv@divisor 009B                               writeEv@evVal 01D0  
                 __end_of_nvProcessMessage 47E8                               writeEv@evNum 01CF  
                          ___lldiv@counter 00A3                       ??_startTimedResponse 0094  
                       ?_consumer2QPowerUp 002B                               writeEv@nextF 01D6  
                  pollTimedResponse@result 01DE                         ??_APP_factoryReset 00AA  
          eraseFlashBlock@interruptEnabled 008D                                 _pollServos 0850  
                   pollServos@beforeMidway 01D8                           ??_APP_nvValidate 0094  
                consumer2QProcessMessage@e 03D2                  consumer2QProcessMessage@m 01FD  
                     _deleteHappeningRange 885E                              ??_FLASH_Write 0093  
                     nvGetDiagnostic@index 0090                                    postdec1 0FE5  
                                  postdec2 0FDD                                    postinc0 0FEE  
                                  postinc1 0FE6                                    postinc2 0FDE  
                 ?_consumer2QGetDiagnostic 008D                            _mnsFactoryReset AB14  
                        ?_mnsGetDiagnostic 008D                                 ??_quantity 008F  
              __end_of_setExpeditedActions C400                     ?_setTimedResponseDelay 002B  
                             _APP_addEvent C19C                          ??_isNoServoPulses 008D  
                   ?_producerGetDiagnostic 008D                             ?_teachCheckLen 01CF  
                      ??_consumer2QPowerUp 008D                  __end_of_mnsProcessMessage 22AA  
                               _tmpMessage 01AA                         ??_mnsGetDiagnostic 008F  
           startTimedResponse@serviceIndex 0091                     __end_of_nvFactoryReset BB78  
                               _servoState 0130                                 ??_writeNVM 00A8  
                               _showStatus 8FBC                                  _PORTAbits 0F80  
                        ?_setDigitalOutput 0097                            ?_setOutputState 0093  
                               _previousNN 0178             deleteHappeningRange@tableIndex 01E3  
                        ?_setNormalActions 002B                         _APP_nvValueChanged 294C  
                _timedResponseServiceIndex 00BD                         setDigitalOutput@io 0099  
                       ??_setDigitalOutput 0098                         deleteActionRange@e 01E3  
                               _priorities ED35                         _lastActionPollTime 016C  
                            ??_pbDownTimer 00A4          __end_of_sendInvertedProducedEvent B89A  
                          sendMessage2@opc 00A8                       __end_of_teachPowerUp BFF0  
                          sendMessage3@opc 00A9                            sendMessage4@opc 01C6  
                          sendMessage5@opc 00A6                            sendMessage6@opc 00A6  
                          sendMessage7@opc 00A6                          _eventTeachService EF21  
           __end_of_producerProcessMessage 593A                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01CA                           setupTimer3@ticks 009A  
                       _timedResponseDelay 017C                        __end_of_checkTxFifo 5684  
                     APP_nvValueChanged@io 01F7                                showStatus@s 008F  
                            ??_findService 008F                            loadNvCache@temp 0099  
                              ?_bounceDown 002B                             i1_isEvent$5817 0060  
                      ?_APP_nvValueChanged 01F1                              clearEvents@io 01E5  
                               isEvent@opc 008E                     ?i2_getNextWriteMessage 002B  
                  peekTwoActionQueue@index 008E                     i2getNextWriteMessage@q 002B  
                          ??_setLEDsByMode 0090                  __end_of_consumer2QPowerUp C302  
                                i1_isEvent C0C0                        teachCheckLen@needed 01D1  
          ??_mnsTRserviceDiscoveryCallback 01CF                          ??_flushFlashBlock 008E  
                                i2_isEvent C178                         _teachGetDiagnostic BCFC  
   sendInvertedProducedEvent@state_to_send 01D6                 deleteHappeningRange@number 01DB  
                        _heartbeatSequence 00BE                        _teachProcessMessage 22AA  
         sendProducedEvent@producedEventEN 01CA           sendProducedEvent@producedEventNN 01CD  
                                i1_tickGet B48A                          removeTableEntry@f 01CB  
                           bounceUp@midway 00A6                             _normalQueueBuf 0388  
                       _peekTwoActionQueue A512                 consumer2QProcessMessage@ca 03D1  
                                i2_tickGet B328                 consumer2QProcessMessage@io 03CF  
                               bounceUp@io 00A7                                ?_initBounce 002B  
                             _APP_testMode C41A                      ?_deleteHappeningRange 01DB  
            __end_of_handleSelfEnumeration 82E6               ??_timer1DoneInterruptHandler 0033  
                      __end_of_EEPROM_Read C29C                        ?_teachGetDiagnostic 008D  
                      __end_of_clearEvents BAFE                          _canTransmitFailed 00B7  
              ??i1_updateModuleErrorStatus 0060                                ?_initTicker 002B  
                              ?_initRomOps 002B                       ??_APP_nvValueChanged 01F3  
                              ?_initServos 002B                       __end_of_sendMessage2 BE52  
                     __end_of_sendMessage3 BE22                       __end_of_sendMessage4 BF98  
                     __end_of_sendMessage5 BEB2                       __end_of_sendMessage6 BDF2  
                     __end_of_sendMessage7 BE82                             __end_of___lmul B48A  
                            _defaultEvents 7434                             __end_of_canIsr C240  
                           __end_of_canPri EE8C                             __end_of___wmul C0C0  
                      ?_peekTwoActionQueue 002B                             __end_of_doNerd C2B6  
               removeTableEntry@tableIndex 01CC                             __end_of_doWait A512  
                           __end_of_getEVs 83EA                              ??_APP_highIsr 0033  
                          ?_nvFactoryReset 002B                           _removeTableEntry 799E  
                          needsStarting@io 0091                             __end_of_memcpy BA02  
                           __end_of_isrLow 846C                         canReceiveMessage@m 01C7  
                       canReceiveMessage@p 01CD                             __end_of_lowIsr 8EF2  
                           __end_of_saveNV BBB2                 __end_ofi1_getBufferPointer A1B4  
                     ?_teachProcessMessage 01FD                  __end_of_eventTeachService EF33  
                      __end_of_FLASH_Write 8E24                      __end_of_APP_nvDefault 914C  
                           _canSendMessage 4DFC                               _name_absaddr 0848  
                      start_initialization AE94                           ??_clearAllEvents 01C7  
                          _checkCANTimeout B58C                               _leds_powerUp BD32  
                     ??_teachGetDiagnostic 008F                                __end_of_pop 9910  
                            factoryReset@i 01F6                                ?_mnsPowerUp 002B  
             ?_mnsTRallDiagnosticsCallback 01CD                       setBounceState@action 0091  
                 setDigitalOutput@pinState 0098                       ??_peekTwoActionQueue 008D  
                              _CANSTATbits 0F6E                         i2canFillRxFifo@ptr 0037  
                    __end_of_pushTwoAction B270                        __end_of_pbDownTimer 95B6  
                       _bootProcessMessage 9EC2                                 ?i1_isEvent 002B  
                 producerProcessMessage@ev 02FC                        _getNextWriteMessage 8A12  
                               ?i2_isEvent 002B                               _nvGetESDdata C2D0  
                 __end_of_canGetDiagnostic BC5A                    ??_APP_preProcessMessage 008F  
                  __end_of_mnsFactoryReset AB8C                        __end_of_findService 9FF2  
                            ??_loadNvCache 0097                                 ?i1_tickGet 0060  
                              ?_validStart 002B                         setServoPosition@io 00A0  
                      ?_bootProcessMessage 01FD                                 ?i2_tickGet 002B  
                             doEvlrn@evVal 01F6                               doEvlrn@evNum 01F5  
                          numEv@tableIndex 00A3                     startTimedResponse@type 0094  
             __end_of_deleteTwoActionQueue A8AA                               doEvlrn@error 01F7  
                              ?_pollServos 002B                 __end_of_evtIdxToTableIndex C3D2  
                 rebuildHashtable@chainIdx 01C5                       __end_of_setOutputPin 70D0  
                                 ??___lmul 0099                            ??_teachCheckLen 00A8  
                                 ??_canIsr 0079                        _universalEventsInit C370  
                                 ??___wmul 0095                               doNenrd@index 01CB  
                                 ??_doNerd 0095                                   ??_doWait 009F  
                                 ??_getEVs 009D                             ?_defaultEvents 01EA  
                      bootProcessMessage@m 01FD                         addEvent@forceOwnNN 01E1  
                             _nerdCallback AEFA                            i2_canFillRxFifo 7AF2  
               ?i2_updateModuleErrorStatus 002B                    _updateModuleErrorStatus C3A4  
                      __end_of_bootService EF45                                   ??_memcpy 0093  
                                 ??_isrLow 007E                                   ??_lowIsr 0079  
                                 ??_saveNV 01C0                     __end_of_canSendMessage 50E0  
                              ?_showStatus 002B                              ??_initOutputs 008D  
                     ?_getNextWriteMessage 008D                      ??_teachProcessMessage 02F4  
                             checkTxFifo@m 0071                                _checkTxFifo 53C2  
                         _startMultiOutput 9CF2                          ?_setServoPosition 009F  
                            ?i2_canTxError 002B                         startMultiOutput@io 0093  
                         _startServoOutput 9212                                __pbssBIGRAM 04C8  
                              doSOD@midway 01D6                              _reqevCallback 9FF2  
       consumer2QProcessMessage@tableIndex 03CD                    ??_checkRemoveTableEntry 00AA  
    consumer2QProcessMessage@masked_action 03D0                       ??_bootProcessMessage 02F4  
                              __pbssCOMRAM 0001                      peekTwoActionQueue@qty 008D  
                        ??_nvGetDiagnostic 008F                       __end_of_popTwoAction BF3C  
                       ??_setServoPosition 00A0                           canSendMessage@mp 009A  
                            __pcstackBANK0 0060                              __pcstackBANK1 01BE  
                            __pcstackBANK2 02F4                              __pcstackBANK3 03C8  
                      __end_of_APP_highIsr C348                  i1_updateModuleErrorStatus C3B0  
       consumer2QProcessMessage@nextAction 03CB                       ?_universalEventsInit 002B  
                               setNV@index 01FC                              _setMultiState 8BB6  
                          _happening2Event 0300                              _setServoState 9664  
                               setNV@value 01F8                         startServoOutput@io 0093  
                       addEvent@tableIndex 01E9                   __end_of_ackGetDiagnostic BF0E  
                           i2_isEvent$5817 002B                 setTimedResponseDelay@delay 008D  
                                addEvent@e 01E8                                  addEvent@f 01E7  
                                 ?i2_getNV 002B                         addEvent@nodeNumber 01DB  
            ??_mnsTRallDiagnosticsCallback 01CF                   _factoryResetGlobalEvents C418  
                       initInputScan@input 0099      sendInvertedProducedEvent@can_send_off 01D2  
                              _EEPROM_Read C27E                 ??_consumer2QProcessMessage 02F4  
                       initTicker@priority 008D                                _clearEvents BAC0  
                  ?_APP_postProcessMessage 008D                          ??_eraseFlashBlock 008D  
                          i2checkTxFifo@mp 003E                           setBounceState@io 0092  
                   ??_deleteHappeningRange 01DC                             mnsPowerUp@temp 0098  
                             doNnevn@count 01CB                                  __pmainSec 83EA  
                     teachProcessMessage@m 01FD                           _getBufferPointer A088  
                          _canFactoryReset C260                ?_timer3DoneInterruptHandler 002B  
    __end_of_mnsTRserviceDiscoveryCallback A3F8              _mnsTRserviceDiscoveryCallback A36A  
     alwaysSendInvertedProducedEvent@state 01CF               mnsTRallDiagnosticsCallback@d 01D3  
                               nvPowerUp@i 009C                            tickGet@IntFlag1 0092  
                          tickGet@IntFlag2 0091                                  __pintcode 0808  
                          _teachGetESDdata C130                               ??_canEsdData 008D  
       handleSelfEnumeration@incomingCanId 009D                          _lastInputScanTime 0170  
                            __pmediumconst ED34                   ??_ackEventProcessMessage 02F4  
                     i1tickGet@currentTime 0066                                ackPowerUp@i 008D  
                         getEVs@tableIndex 00A3                                   ?___awdiv 0097  
                                __ptext100 B2CE                                  __ptext101 9212  
                                __ptext110 A72C                                  __ptext102 9CF2  
                                __ptext111 C3E6                                  __ptext103 593A  
                                __ptext200 C3B0                                  __ptext120 4B18  
                                __ptext112 A512                                  __ptext104 B850  
                                __ptext201 8AE4                                  __ptext121 9C50  
                                __ptext113 A486                                  __ptext105 AF60  
                                __ptext210 B328                                  __ptext202 A11E  
                                __ptext130 80D6                                  __ptext122 BF6A  
                                __ptext114 C400                                  __ptext106 B4E2  
                                __ptext211 99BA                                  __ptext203 C41C  
                                __ptext131 C348                                  __ptext123 A8AA  
                                __ptext115 BF0E                                  __ptext107 9664  
                                __ptext220 7286                                  __ptext212 C178  
                                __ptext140 85BC                                  __ptext132 B270  
                                __ptext124 4DFC                                  __ptext116 3640  
                                __ptext108 8BB6                                  __ptext221 BBB2  
                                __ptext213 7AF2                                  __ptext205 8EF2  
                                __ptext141 C260                                  __ptext133 8FBC  
                                __ptext125 BA82                                  __ptext117 BF3C  
                                __ptext109 9710                                _FLASH_Write 8D56  
                                __ptext214 C3BC                                  __ptext206 C31A  
                                __ptext150 C154                                  __ptext142 BB3C  
                                __ptext134 9456                                  __ptext126 3DAC  
                                __ptext118 A82C                                  __ptext215 8C86  
                                __ptext207 B5E0                                  __ptext151 B02A  
                                __ptext143 AB14                                  __ptext135 9506  
                                __ptext127 C070                                  __ptext119 A1B4  
                                __ptext216 A248                                  __ptext208 B0F0  
                                __ptext160 3A18                                  __ptext152 B684  
                                __ptext144 C406                                  __ptext136 610E  
                                __ptext128 AC70                                  __ptext217 C332  
                                __ptext209 5E78                                  __ptext161 B92E  
                                __ptext153 BB78                                  __ptext145 B538  
                                __ptext137 B3DA                                  __ptext129 8A12  
                                __ptext218 C1BE                                  __ptext170 AA9A  
                                __ptext162 799E                                  __ptext154 B89A  
                                __ptext146 9084                                  __ptext138 B432  
                                __ptext219 C240                                  __ptext171 50E0  
                                __ptext163 7EAE                                  __ptext155 7434  
                                __ptext147 C098                                  __ptext139 A6A8  
                                __ptext180 C3A4                                  __ptext172 B722  
                                __ptext164 7848                                  __ptext156 BAC0  
                                __ptext148 ACE2                                  __ptext181 A3F8  
                                __ptext173 8D56                                  __ptext165 82E6  
                                __ptext157 885E                                  __ptext149 A59C  
                                __ptext190 8E24                                  __ptext182 6F12  
                                __ptext174 B8E4                                  __ptext166 B6D4  
                                __ptext158 95B6                                  __ptext191 C220  
                                __ptext183 BAFE                                  __ptext175 A622  
                                __ptext167 A2DA                                  __ptext159 6596  
                                __ptext192 C35C                                  __ptext184 B1B2  
                                __ptext176 B76E                                  __ptext168 92D6  
                                __ptext193 B58C                                  __ptext185 B7BA  
                                __ptext177 C382                                  __ptext169 C200  
                                __ptext194 B08E                                  __ptext186 C27E  
                                __ptext178 C394                                  __ptext195 53C2  
                                __ptext187 C418                                  __ptext179 AE2C  
                                 ?___awmod 008D                                  __ptext196 B48A  
                                __ptext188 C41A                                  __ptext197 9910  
                                __ptext198 C0C0                                  __ptext199 76F0  
                             defaultNVs@io 01C6                                  _findEvent A2DA  
                                 ?___lldiv 0097                     _startDigitalOutput$802 01DA  
                             ??_ackPowerUp 008D                        __end_of_loadNvCache B8E4  
                             doReqev@evVal 01D1                               doReqev@evNum 01D0  
                          getNN@tableIndex 00A2                           processActions@io 01E7  
                             doReval@enNum 01CE                               doReval@evVal 01CF  
                             doReval@evNum 01CB                                   ?_doEvlrn 01F1  
                                 ?_doNenrd 002B                                   ?_doEvuln 01D2  
                              __pintcodelo 0818                                   ?_doNnclr 002B  
                                 ?_doNnevn 002B                        i2getBufferPointer@b 002D  
                                 ?_doReqev 01CC                                   ?_doReval 01CB  
                        teachGetESDdata@id 008D          __end_ofi2_updateModuleErrorStatus C3C8  
                                 ?_doRqevn 002B                      ??_getNextWriteMessage 008F  
                                 ?_getHash 00A3                   deleteActionRange@updated 01E1  
                  __end_of_checkCANTimeout B5E0                              ??_setNewCanId 00AA  
                                _pbUpTimer 9456                            ?_canSendMessage 009A  
                            ??_sendMessage 00A3                                   ?_highIsr 002B  
                           ??i2_canTxError 0040                                   ?_isEvent 002B  
                             ??_canTxError 0075                           _findServiceIndex ABFE  
                                _completed A1B4                           nerdCallback@step 01CE  
                         nerdCallback@type 002B                             ?_reqevCallback 01CD  
                             ??_canPowerUp 0097                             _heartbeatTimer 0168  
                                 ?_readNVM 0091                                   ?_isrHigh 002B  
                              _COMSTATbits 0F71                    i1getNextWriteMessage@wr 006B  
                                _leds_poll 610E                 producerGetDiagnostic@index 0091  
                                 ?_mnsPoll 002B                          ?_rebuildHashtable 002B  
                         _canIsr$intlevel1 C228                       setOutputPosition@pos 00A1  
                                 ?_tickGet 008D    mnsTRallDiagnosticsCallback@serviceIndex 01CD  
                              _pbDownTimer 9506                                  checkLen@m 01CB  
                                 ?_setType 01EE           ackEventProcessMessage@eventIndex 02FA  
                    ??_universalEventsInit 008D                             defaultNVs@type 01C3  
                           ?_setMultiState 0091                    startBounceOutput@action 008D  
                      __end_of_initOutputs BFC4                           ??_loadFlashBlock 008D  
                           ?_setServoState 0091                                   ?_powerUp 002B  
                                _readInput 80D6                         ??_rebuildHashtable 01BE  
                              _findService 9F5A              __end_ofi1_getNextWriteMessage 8BB6  
                                 ?_writeEv 01CF                            startServos@type 01DB  
                              _flashDelays 02D4                         processActions@type 01E4  
                                _expedited 0025                         __end_of_canEsdData C2D0  
                    __end_of_needsStarting A7AE                                _flashBuffer 0348  
                           doReval@evIndex 01CD                                ??i1_isEvent 0060  
            deleteHappeningRange@happening 01E1                               ??_defaultNVs 01C4  
                                _inputScan 4B18             __end_of_APP_postProcessMessage C418  
                          _eventAckService EED9                                  _mnsLowIsr C35C  
                       __end_of_ackPowerUp C200                                  _nvService EF45  
                           ___wmul@product 0095                                  _loopCount 0274  
                            ??_removeEvent 00AA                                ??i2_isEvent 002B  
                     sendProducedEvent@opc 01C9                                   _LATBbits 0F8A  
                                _nvPowerUp C0E8                      __end_of_canFillRxFifo 7848  
                        findEvent@chainIdx 01C9                            _isNoServoPulses C394  
               __end_ofi2_getBufferPointer A2DA                                   _PIE1bits 0F9D  
                                 _PIE2bits 0FA0                       rebuildHashtable@hash 01C3  
                         ?_mnsFactoryReset 002B                                   _PIE5bits 0F76  
                              ??i1_tickGet 0064                                  _rxBuffers 0748  
                       __p_eventTable_text EF80                                  getHash@en 00A5  
                                getHash@nn 00A3                    __end_ofi2_canFillRxFifo 7C46  
                           _flashFlushTime 0158     __end_of_APP_isSuitableTimeToWriteFlash C394  
           _APP_isSuitableTimeToWriteFlash C382                          _channelDefaultNVs EE8C  
                                _targetPos 0001                                _bootService EF33  
       __end_of_timer1DoneInterruptHandler C260                 _timer1DoneInterruptHandler C240  
                              ??i2_tickGet 002F                         __end_of_canTxError B0F0  
                       __end_of_canService EF7B                               _teachPowerUp BFC4  
                                _pollCount 0284                                   _PIR1bits 0F9E  
                                 _PIR2bits 0FA1                         __end_of_canPowerUp 6B7C  
                        ?_nvProcessMessage 01FD                    ??_setTimedResponseDelay 008D  
                                 _PIR5bits 0F77                          doReqev@tableIndex 01D3  
                  ??_producerGetDiagnostic 008F                            ??_defaultEvents 00AA  
                                _txBuffers 0480                             _mnsDiagnostics 019E  
                ??_updateModuleErrorStatus 008D                                   _RCONbits 0FD0  
                        doReqev@nodeNumber 01CC                           ??_setOutputState 0095  
                                 _RXF0SIDL 0EE1              startDigitalOutput@actionState 01DD  
                       ??_nvProcessMessage 02F4                                   _RXM0EIDH 0EFA  
                                 _RXM0EIDL 0EFB                                 ?_findEvent 01BE  
                                 _TXB0SIDH 0F21                                   _RXM1EIDH 0EFE  
                                 _TXB0SIDL 0F22                                   _RXM1EIDL 0EFF  
                                 _TXB1SIDH 0F11                                   _TXB1SIDL 0F12  
                                 _TXB2SIDH 0F01                                   _TXB2SIDL 0F02  
                                 _RXFBCON0 0E71                                   _RXFBCON1 0E72  
                                 _RXFBCON2 0E73                                   _RXFBCON3 0E74  
                                 _RXFBCON4 0E75                                   _RXFBCON5 0E76  
                                 _RXFBCON6 0E77                                   _RXFBCON7 0E78  
                                 _RXM0SIDH 0EF8                                   _RXM0SIDL 0EF9  
                                 _RXM1SIDH 0EFC                                   _RXM1SIDL 0EFD  
                           pushTwoAction@a 008D                            inputScan@change 01D1  
                      i2setOutputPin@state 002F                          _stepsPerPollSpeed 0120  
                        _teachFactoryReset C406                                 ?_pbUpTimer 002B  
                                configIO@i 01C6                                _bounceState 0264  
                              _APP_highIsr C332                             sendMessage@len 01BE  
                           sendMessage@opc 00A5                          _timedResponseTime 015C  
                        ___wmul@multiplier 0091                          _timedResponseStep 00BA  
                        _timedResponseType 00BB                                  _startWait 0019  
                                _startTime 001D                                 ?_completed 008D  
                                 i2_canIsr C31A                      __end_ofi2_checkTxFifo 610E  
                         _enumerationState 00B6                               doRqevn@count 01C6  
                                _transport 017A                         ?_teachFactoryReset 002B  
                        defaultEvents@type 01EA                         __end_of_defaultNVs B6D4  
                               ?_leds_poll 002B                      __end_of_initInputScan 9866  
                          _flushFlashBlock A622                 processActions@simultaneous 01E2  
                  ??i2_getNextWriteMessage 002D                        __end_of_setNewCanId B02A  
                      __end_of_sendMessage A928                                 ?_readInput 002B  
                           doWait@duration 009D                              ??_setupTimer1 0095  
                            ??_setupTimer3 0095                       _deleteTwoActionQueue A82C  
                          _eventCoeService EEEB                               ??_bounceDown 009F  
                      ??_teachFactoryReset 00AA                            checkLen@service 01CE  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 BE22                               _sendMessage3 BDF2  
                             _sendMessage4 BF6A                               _sendMessage5 BE82  
                             _sendMessage6 BDC2                               _sendMessage7 BE52  
                                 i1pop@ret 0067                                   i2pop@ret 0032  
                          startOutput@type 01E0                            nvFactoryReset@i 01C1  
                               ?_inputScan 002B                                 ?_mnsLowIsr 002B  
                  __end_of_canFactoryReset C27E                   __end_of_removeTableEntry 7AF2  
                  __end_of_teachGetESDdata C154                                 ?_nvPowerUp 002B  
  __end_of_alwaysSendInvertedProducedEvent BF6A          ??_alwaysSendInvertedProducedEvent 00AA  
         ?_alwaysSendInvertedProducedEvent 01CF            _alwaysSendInvertedProducedEvent BF3C  
                __end_of_channelDefaultNVs EED9               __end_of_eventProducerService EF0F  
                   handleSelfEnumeration@p 0097                                 _EECON1bits 0F7F  
                      startBounceOutput@io 008E                                _loadNvCache B89A  
                                 __Hrparam 0000                                _eventChains 04C8  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01EC                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01D1  
                         ??_nvFactoryReset 01BF                               ??_initTicker 008D  
                      __end_of_removeEvent C046                               ??_initRomOps 008D  
                   removeEvent@eventNumber 01CF   consumer2QProcessMessage@nextSimultaneous 03CE  
                             ??_initServos 00A4                  __end_of_teachFactoryReset C40C  
                                 _addEvent 6596                          _startBounceOutput AF60  
           ?_mnsTRserviceDiscoveryCallback 01CD                             _processActions 637C  
                       __end_of_bounceDown 3254                            ??_reqevCallback 01CF  
                            ??_startServos 00AA                           ?_checkCANTimeout 002B  
                            ??_startOutput 00AA                                _initOutputs BF98  
                       ?_startBounceOutput 008D                         doNenrd@eventNumber 01CE  
                rebuildHashtable@happening 01C4                               setType@index 01EF  
                                 _checkLen A7AE                            ??_setMultiState 0092  
                          ??_setServoState 0092                             i2checkTxFifo@m 003C  
                      _producerDiagnostics 01BA                    deleteActionRange@action 01E2  
                            initOutputs@io 008D                       processActions@action 01EA  
          __end_of_updateModuleErrorStatus C3B0                    __end_of_eventAckService EEEB  
                               _FLASH_Read B7BA                 ?_sendInvertedProducedEvent 01CF  
                    ?_deleteTwoActionQueue 002B                      getNextWriteMessage@wr 0098  
                                 __ptext10 7FCC                                   __ptext11 C1E0  
                                 __ptext20 1766                                   __ptext12 C2EA  
                                 __ptext21 5684                                   __ptext13 BFC4  
                               _T1GCONbits 0FAA                                   __ptext30 ADC4  
                                 __ptext22 679A                                   __ptext14 BD32  
                                 __ptext31 BD62                                   __ptext23 9EC2  
                                 __ptext15 C3EE                                defaultNVs@i 01C7  
                                 __ptext40 A928                                   __ptext32 C29C  
                                 __ptext24 3254                                   __ptext16 B976  
                                 __ptext41 BA02                                   __ptext33 AD54  
                                 __ptext25 22AA                                   __ptext17 4138  
                                 __ptext50 294C                                   __ptext42 A36A  
                                 __ptext34 C3C8                                   __ptext26 B152  
                                 __ptext18 9BAE                                   __ptext51 C3DC  
                                 __ptext43 84D6                                   __ptext35 AA20  
                                 __ptext27 BBEC                                   __ptext19 44A8  
                                 __ptext60 BC90                                   __ptext52 C10C  
                                 __ptext44 BD92                                   __ptext36 C01C  
                                 __ptext28 9398                                   __ptext61 BEE0  
                                 __ptext53 B382                                   __ptext45 AEFA  
                                 __ptext37 914C                                   __ptext29 7C46  
                                 __ptext70 47E8                                   __ptext62 BCC6  
                                 __ptext54 C2B6                                   __ptext46 9FF2  
                                 __ptext38 C19C                                   __ptext71 BFF0  
                                 __ptext63 BCFC                                   __ptext55 C2D0  
                                 __ptext47 893A                                   __ptext39 C40C  
                                 __ptext80 B9BC                                   __ptext72 BE22  
                                 __ptext64 BA44                                   __ptext56 C130  
                                 __ptext48 C3D2                                   __ptext81 81E0  
                                 __ptext73 C3F4                                   __ptext65 BDC2  
                                 __ptext57 BC24                                   __ptext49 A9A4  
                                 __ptext90 6D4E                                   __ptext82 A088  
                                 __ptext74 C3FA                                   __ptext66 BDF2  
                                 __ptext58 BEB2                                   __ptext91 9B08  
                                 __ptext83 BE52                                   __ptext75 B212  
                                 __ptext67 86A2                                   __ptext59 BC5A  
                                 __ptext92 9D8E                                   __ptext84 9F5A  
                                 __ptext76 70D0                                   __ptext68 B634  
                                 __ptext93 9E28                                   __ptext85 C302  
                                 __ptext77 7596                                   __ptext69 ABFE  
                                 __ptext94 0850                                   __ptext86 A7AE  
                                 __ptext78 AFC6                                   __ptext95 C046  
                                 __ptext87 BE82                                   __ptext79 9866  
                                 __ptext96 5BDC                                   __ptext88 C410  
                                 __ptext97 2DE2                                   __ptext89 C414  
                                 __ptext98 6B7C                                   __ptext99 637C  
                      ??_startBounceOutput 008E                    __end_of_isNoServoPulses C3A4  
                             _setOutputPin 6F12                       processActions@nextIo 01E6  
                             ??_mnsPowerUp 0097                                   _configIO 50E0  
                                 _ledTimer 0160                    deleteActionRange@number 01DB  
                           _processOutputs 6B7C                          _APP_GetEventState C40C  
                                 _ledState 00B2                         __end_of_initBounce C070  
                            ?_EEPROM_Write 008F                         __end_of_eventTable FF70  
                                 _bounceUp 5BDC                                 _T3GCONbits 0FB0  
                   i1getNextWriteMessage@q 0060                         __end_of_initTicker B9BC  
                       __end_of_initRomOps C35C                         i1_getBufferPointer A11E  
                       ?_APP_GetEventState 002B                         __end_of_initServos 7EAE  
         __end_of_consumer2QProcessMessage 3640                                  setType@io 01F0  
                                 doNnevn@f 01CA                                   doNnevn@i 01CC  
               sendProducedEvent@happening 01CC                         __end_of_paramBlock 0840  
                           canPowerUp@temp 0098                      __end_of_setLEDsByMode C01C  
                      __end_of_setupTimer1 9EC2                        __end_of_setupTimer3 9E28  
                     __end_ofi2_canTxError B152                              ?_factoryReset 002B  
                 __end_of_startMultiOutput 9D8E                           _nvTRnvrdCallback BA02  
                            _configIO$7955 01C1                              findEvent@hash 01C8  
                 __end_of_startServoOutput 92D6                               ??_validStart 0097  
                                 doRqevn@i 01C7                          ?_canGetDiagnostic 008D  
                           writeEv@nextIdx 01DA                                getEVs@evIdx 00A2  
           consumer2QProcessMessage@change 03C9             consumer2QProcessMessage@action 03D3  
                         ?i2_canFillRxFifo 002B                                getEVs@evNum 00A4  
                      ?i1_getBufferPointer 0060                        ??_APP_GetEventState 008D  
            __end_of_APP_preProcessMessage C414              ackEventProcessMessage@eventEN 02F8  
            ackEventProcessMessage@eventNN 02FB                               _popTwoAction BF0E  
                       ??_canGetDiagnostic 008F                               ??_pollServos 01CF  
                                 isa$xinst 0000                                   _services EE75  
                __end_of_startBounceOutput AFC6                     __end_of_processActions 6596  
                 clearAllEvents@tableIndex 01CB                                   int$flags 0055  
                          _nvGetDiagnostic BEB2                                   highIsr@i 0048  
                              ??_findEvent 01C2                                   _quantity BA82  
                    _handleSelfEnumeration 81E0                ??i2_updateModuleErrorStatus 002B  
                               _APP_lowIsr C41C                     sendProducedEvent@onOff 01C7  
                       __end_of_mnsService EF69                    __end_of_flushFlashBlock A6A8  
                        writeEv@tableIndex 01D9                         __end_of_mnsPowerUp 80D6  
                        _setOutputPosition AB8C                               ??_showStatus 008D  
                              ??_pbUpTimer 00A4                           processOutputs@io 01D0  
                                 _writeNVM B722                 processEnumeration@newCanId 01C5  
                   APP_addEvent@forceOwnNN 01F0                                _setNewCanId AFC6  
                             ?_checkTxFifo 002B                               pollServos@io 01DA  
                              ??_completed 008F                                _sendMessage A8AA  
                           startOutput@act 01DF                    __end_of_eventCoeService EEFD  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C3C8                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 0091                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6D4E  
                __end_of_APP_GetEventState C410                   __end_of_getBufferPointer A11E  
                          _eraseFlashBlock B76E                          APP_addEvent@evVal 01EF  
            __end_of_checkRemoveTableEntry B976                          APP_addEvent@evNum 01EE  
                       __end_of_validStart B722                        __end_of_startServos 9BAE  
                  teachGetDiagnostic@index 0091                                ??_readInput 0091  
                      __end_of_startOutput B328                     _ackEventProcessMessage 679A  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 76F0  
                              getHash@hash 00A8                         __end_of_pollServos 1766  
                        ?_ackGetDiagnostic 008D                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 002B  
    alwaysSendInvertedProducedEvent@action 01D1                              ?_getParameter 002B  
                              ??_inputScan 01CF                               _servoInBlock 00C5  
                              ??_mnsLowIsr 0060                       getNextWriteMessage@q 008D  
                         ?_canFactoryReset 002B                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 008F      alwaysSendInvertedProducedEvent@invert 01D0  
          sendInvertedProducedEvent@invert 01D0                             ??_factoryReset 01F2  
                              ??_nvPowerUp 009C                               ?_clearEvents 002B  
                         _ackEventCheckLen C302                      removeEvent@tableIndex 01D1  
                         ?_teachGetESDdata 002B                   __end_of_findServiceIndex AC70  
                              _removeEvent C01C                     APP_addEvent@nodeNumber 01EA  
                              _TXB0CONbits 0F20                              _doneTwoAction C400  
                       __end_of_showStatus 9084             mnsTRrqnpnCallback@serviceIndex 01CD  
                    removeEvent@nodeNumber 01CD                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01E4                         __end_of_priorities EE35  
                         ??_canSendMessage 009C                __end_of_teachProcessMessage 294C  
               __end_of_tableIndexToEvtIdx C3DC                       __end_of_canTransport EF7F  
                             ?_FLASH_Write 0090                         tickGet@currentTime 0093  
                          ?_processActions 002B                              findService@id 0091  
                __end_of_setOutputPosition ABFE                                   powerUp@i 01CB  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse A928  
                    __end_of_teachCheckLen B1B2                   ??_producerProcessMessage 02F4  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 002B                          FLASH_Read@address 008D  
                         _APP_factoryReset C154                    nerdCallback@eventNumber 01D1  
                            ?_getTwoAction 002B                           _ticksWhenStopped 0200  
                         ___lldiv@quotient 009F                       _eventProducerService EEFD  
           sendInvertedProducedEvent@state 01CF                    _consumer2QGetDiagnostic BCC6  
                   ??_deleteTwoActionQueue 008D                          _deleteActionRange 95B6  
                             ?_pbDownTimer 002B                                findEvent@en 01C6  
                              findEvent@nn 01C4                          writeEv@startIndex 01D5  
                     findEvent@eventNumber 01C0                                   writeEv@e 01D7  
                                 writeEv@f 01D8                            ?_processOutputs 002B  
                              ?_FLASH_Read 008D                        ??_pollTimedResponse 01DC  
                         _mnsGetDiagnostic BC5A                               findService@i 0092  
                       ?_deleteActionRange 01DB               _timedResponseAllServicesFlag 00BC  
                              _setupTimer1 9E28                                _setupTimer3 9D8E  
                         ?_isNoServoPulses 002B                               ?_findService 008D  
                   startMultiOutput@action 0091                  i2_updateModuleErrorStatus C3BC  
                           ??_getParameter 0092                          sendMessage2@data1 00A6  
                        sendMessage2@data2 00A7                          sendMessage3@data1 00A6  
                        sendMessage3@data2 00A7                          sendMessage3@data3 00A8  
                        sendMessage4@data1 00A6                          sendMessage4@data2 00A7  
                        sendMessage4@data3 00A8                          sendMessage4@data4 00A9  
                         _setDigitalOutput A3F8                          getBufferPointer@b 008F  
                        sendMessage5@data1 01C6                          sendMessage5@data2 01C7  
                        sendMessage5@data3 01C8                          sendMessage5@data4 01C9  
                        sendMessage5@data5 01CA                      _consumer2QDiagnostics 01BC  
                        sendMessage6@data1 01C6                          sendMessage6@data2 01C7  
                        sendMessage6@data3 01C8                          sendMessage6@data4 01C9  
                        sendMessage6@data5 01CA                          sendMessage6@data6 01CB  
                          _last_mode_flags 00C0                          sendMessage7@data1 01C6  
                        sendMessage7@data2 01C7                          sendMessage7@data3 01C8  
                        sendMessage7@data4 01C9                          sendMessage7@data5 01CA  
                        sendMessage7@data6 01CB                          sendMessage7@data7 01CC  
                           _checkPowerOnPb B270                           EEPROM_Read@index 008D  
                      ??_deleteActionRange 01DC                           _setNormalActions C3F4  
                           ?_doneTwoAction 002B                            _last_mode_state 00C1  
                  __end_of_nvGetDiagnostic BEE0                       validStart@tableIndex 009B  
                     nvTRnvrdCallback@step 01CE                ?_timer1DoneInterruptHandler 002B  
                     nvTRnvrdCallback@type 002B                                _pulseDelays 02E4  
              __end_of_getNextWriteMessage 8AE4  
