

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 27 21:25:43 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	_eventTable_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     8                           	psect	_paramBlock_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	_name_text,global,ovrld,reloc=2,class=CODE,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	mainSec,global,reloc=2,class=CODE,delta=1
   220                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	text204,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	text225,global,reloc=2,class=CODE,delta=1
   250                           	psect	text226,global,reloc=2,class=CODE,delta=1
   251                           	psect	text227,global,reloc=2,class=CODE,delta=1
   252                           	psect	text228,global,reloc=2,class=CODE,delta=1
   253                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   254                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   255                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   256                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   257   000000                     
   258                           ; Generated 12/10/2023 GMT
   259                           ; 
   260                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   261                           ; All rights reserved.
   262                           ; 
   263                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   264                           ; 
   265                           ; Redistribution and use in source and binary forms, with or without modification, are
   266                           ; permitted provided that the following conditions are met:
   267                           ; 
   268                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   269                           ;        conditions and the following disclaimer.
   270                           ; 
   271                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   272                           ;        of conditions and the following disclaimer in the documentation and/or other
   273                           ;        materials provided with the distribution. Publication is not required when
   274                           ;        this file is used in an embedded application.
   275                           ; 
   276                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   277                           ;        software without specific prior written permission.
   278                           ; 
   279                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   280                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   281                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   282                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   283                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   284                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   285                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   286                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   287                           ; 
   288                           ; 
   289                           ; Code-generator required, PIC18F26K80 Definitions
   290                           ; 
   291                           ; SFR Addresses
   292   000000                     
   293                           	psect	eeprom_data
   294   F003FF                     	org	1023	;# 
   295   F003FF  00                 	db	0	;# 
   296   000000                     _eventTable_absaddr	set	61312
   297                           
   298                           	psect	mediumconst
   299   00ED34                     __pmediumconst:
   300                           	callstack 0
   301   00ED34  00                 	db	0
   302   00ED35                     _priorities:
   303                           	callstack 0
   304   00ED35  01                 	db	1
   305   00ED36  01                 	db	1
   306   00ED37  03                 	db	3
   307   00ED38  02                 	db	2
   308   00ED39  02                 	db	2
   309   00ED3A  02                 	db	2
   310   00ED3B  02                 	db	2
   311   00ED3C  03                 	db	3
   312   00ED3D  02                 	db	2
   313   00ED3E  02                 	db	2
   314   00ED3F  03                 	db	3
   315   00ED40  01                 	db	1
   316   00ED41  00                 	db	0
   317   00ED42  00                 	db	0
   318   00ED43  01                 	db	1
   319   00ED44  01                 	db	1
   320   00ED45  01                 	db	1
   321   00ED46  01                 	db	1
   322   00ED47  01                 	db	1
   323   00ED48  01                 	db	1
   324   00ED49  01                 	db	1
   325   00ED4A  01                 	db	1
   326   00ED4B  01                 	db	1
   327   00ED4C  01                 	db	1
   328   00ED4D  01                 	db	1
   329   00ED4E  01                 	db	1
   330   00ED4F  01                 	db	1
   331   00ED50  01                 	db	1
   332   00ED51  01                 	db	1
   333   00ED52  01                 	db	1
   334   00ED53  01                 	db	1
   335   00ED54  01                 	db	1
   336   00ED55  01                 	db	1
   337   00ED56  01                 	db	1
   338   00ED57  01                 	db	1
   339   00ED58  01                 	db	1
   340   00ED59  01                 	db	1
   341   00ED5A  01                 	db	1
   342   00ED5B  01                 	db	1
   343   00ED5C  01                 	db	1
   344   00ED5D  01                 	db	1
   345   00ED5E  01                 	db	1
   346   00ED5F  01                 	db	1
   347   00ED60  01                 	db	1
   348   00ED61  01                 	db	1
   349   00ED62  01                 	db	1
   350   00ED63  01                 	db	1
   351   00ED64  01                 	db	1
   352   00ED65  01                 	db	1
   353   00ED66  01                 	db	1
   354   00ED67  01                 	db	1
   355   00ED68  01                 	db	1
   356   00ED69  01                 	db	1
   357   00ED6A  01                 	db	1
   358   00ED6B  01                 	db	1
   359   00ED6C  01                 	db	1
   360   00ED6D  01                 	db	1
   361   00ED6E  01                 	db	1
   362   00ED6F  01                 	db	1
   363   00ED70  01                 	db	1
   364   00ED71  01                 	db	1
   365   00ED72  01                 	db	1
   366   00ED73  01                 	db	1
   367   00ED74  00                 	db	0
   368   00ED75  01                 	db	1
   369   00ED76  01                 	db	1
   370   00ED77  01                 	db	1
   371   00ED78  01                 	db	1
   372   00ED79  01                 	db	1
   373   00ED7A  01                 	db	1
   374   00ED7B  01                 	db	1
   375   00ED7C  01                 	db	1
   376   00ED7D  01                 	db	1
   377   00ED7E  00                 	db	0
   378   00ED7F  01                 	db	1
   379   00ED80  01                 	db	1
   380   00ED81  00                 	db	0
   381   00ED82  00                 	db	0
   382   00ED83  00                 	db	0
   383   00ED84  00                 	db	0
   384   00ED85  00                 	db	0
   385   00ED86  00                 	db	0
   386   00ED87  00                 	db	0
   387   00ED88  00                 	db	0
   388   00ED89  00                 	db	0
   389   00ED8A  00                 	db	0
   390   00ED8B  00                 	db	0
   391   00ED8C  00                 	db	0
   392   00ED8D  00                 	db	0
   393   00ED8E  00                 	db	0
   394   00ED8F  00                 	db	0
   395   00ED90  00                 	db	0
   396   00ED91  00                 	db	0
   397   00ED92  01                 	db	1
   398   00ED93  01                 	db	1
   399   00ED94  01                 	db	1
   400   00ED95  01                 	db	1
   401   00ED96  01                 	db	1
   402   00ED97  03                 	db	3
   403   00ED98  01                 	db	1
   404   00ED99  01                 	db	1
   405   00ED9A  01                 	db	1
   406   00ED9B  01                 	db	1
   407   00ED9C  01                 	db	1
   408   00ED9D  01                 	db	1
   409   00ED9E  01                 	db	1
   410   00ED9F  01                 	db	1
   411   00EDA0  00                 	db	0
   412   00EDA1  00                 	db	0
   413   00EDA2  00                 	db	0
   414   00EDA3  00                 	db	0
   415   00EDA4  00                 	db	0
   416   00EDA5  00                 	db	0
   417   00EDA6  00                 	db	0
   418   00EDA7  00                 	db	0
   419   00EDA8  01                 	db	1
   420   00EDA9  00                 	db	0
   421   00EDAA  01                 	db	1
   422   00EDAB  01                 	db	1
   423   00EDAC  01                 	db	1
   424   00EDAD  01                 	db	1
   425   00EDAE  01                 	db	1
   426   00EDAF  01                 	db	1
   427   00EDB0  00                 	db	0
   428   00EDB1  01                 	db	1
   429   00EDB2  01                 	db	1
   430   00EDB3  01                 	db	1
   431   00EDB4  01                 	db	1
   432   00EDB5  01                 	db	1
   433   00EDB6  01                 	db	1
   434   00EDB7  01                 	db	1
   435   00EDB8  00                 	db	0
   436   00EDB9  01                 	db	1
   437   00EDBA  01                 	db	1
   438   00EDBB  01                 	db	1
   439   00EDBC  01                 	db	1
   440   00EDBD  01                 	db	1
   441   00EDBE  01                 	db	1
   442   00EDBF  00                 	db	0
   443   00EDC0  01                 	db	1
   444   00EDC1  00                 	db	0
   445   00EDC2  00                 	db	0
   446   00EDC3  00                 	db	0
   447   00EDC4  00                 	db	0
   448   00EDC5  00                 	db	0
   449   00EDC6  00                 	db	0
   450   00EDC7  00                 	db	0
   451   00EDC8  00                 	db	0
   452   00EDC9  00                 	db	0
   453   00EDCA  00                 	db	0
   454   00EDCB  00                 	db	0
   455   00EDCC  00                 	db	0
   456   00EDCD  00                 	db	0
   457   00EDCE  00                 	db	0
   458   00EDCF  00                 	db	0
   459   00EDD0  00                 	db	0
   460   00EDD1  01                 	db	1
   461   00EDD2  01                 	db	1
   462   00EDD3  01                 	db	1
   463   00EDD4  01                 	db	1
   464   00EDD5  01                 	db	1
   465   00EDD6  01                 	db	1
   466   00EDD7  01                 	db	1
   467   00EDD8  01                 	db	1
   468   00EDD9  01                 	db	1
   469   00EDDA  01                 	db	1
   470   00EDDB  01                 	db	1
   471   00EDDC  00                 	db	0
   472   00EDDD  00                 	db	0
   473   00EDDE  01                 	db	1
   474   00EDDF  01                 	db	1
   475   00EDE0  00                 	db	0
   476   00EDE1  00                 	db	0
   477   00EDE2  00                 	db	0
   478   00EDE3  00                 	db	0
   479   00EDE4  00                 	db	0
   480   00EDE5  00                 	db	0
   481   00EDE6  00                 	db	0
   482   00EDE7  00                 	db	0
   483   00EDE8  01                 	db	1
   484   00EDE9  00                 	db	0
   485   00EDEA  00                 	db	0
   486   00EDEB  01                 	db	1
   487   00EDEC  01                 	db	1
   488   00EDED  01                 	db	1
   489   00EDEE  00                 	db	0
   490   00EDEF  00                 	db	0
   491   00EDF0  00                 	db	0
   492   00EDF1  01                 	db	1
   493   00EDF2  01                 	db	1
   494   00EDF3  01                 	db	1
   495   00EDF4  01                 	db	1
   496   00EDF5  01                 	db	1
   497   00EDF6  01                 	db	1
   498   00EDF7  01                 	db	1
   499   00EDF8  00                 	db	0
   500   00EDF9  01                 	db	1
   501   00EDFA  01                 	db	1
   502   00EDFB  01                 	db	1
   503   00EDFC  01                 	db	1
   504   00EDFD  01                 	db	1
   505   00EDFE  01                 	db	1
   506   00EDFF  01                 	db	1
   507   00EE00  01                 	db	1
   508   00EE01  00                 	db	0
   509   00EE02  00                 	db	0
   510   00EE03  00                 	db	0
   511   00EE04  00                 	db	0
   512   00EE05  00                 	db	0
   513   00EE06  00                 	db	0
   514   00EE07  01                 	db	1
   515   00EE08  01                 	db	1
   516   00EE09  00                 	db	0
   517   00EE0A  00                 	db	0
   518   00EE0B  01                 	db	1
   519   00EE0C  01                 	db	1
   520   00EE0D  01                 	db	1
   521   00EE0E  00                 	db	0
   522   00EE0F  00                 	db	0
   523   00EE10  00                 	db	0
   524   00EE11  01                 	db	1
   525   00EE12  01                 	db	1
   526   00EE13  00                 	db	0
   527   00EE14  01                 	db	1
   528   00EE15  01                 	db	1
   529   00EE16  01                 	db	1
   530   00EE17  00                 	db	0
   531   00EE18  00                 	db	0
   532   00EE19  01                 	db	1
   533   00EE1A  00                 	db	0
   534   00EE1B  01                 	db	1
   535   00EE1C  01                 	db	1
   536   00EE1D  01                 	db	1
   537   00EE1E  01                 	db	1
   538   00EE1F  01                 	db	1
   539   00EE20  00                 	db	0
   540   00EE21  00                 	db	0
   541   00EE22  00                 	db	0
   542   00EE23  00                 	db	0
   543   00EE24  00                 	db	0
   544   00EE25  00                 	db	0
   545   00EE26  00                 	db	0
   546   00EE27  00                 	db	0
   547   00EE28  00                 	db	0
   548   00EE29  00                 	db	0
   549   00EE2A  00                 	db	0
   550   00EE2B  00                 	db	0
   551   00EE2C  00                 	db	0
   552   00EE2D  00                 	db	0
   553   00EE2E  00                 	db	0
   554   00EE2F  01                 	db	1
   555   00EE30  00                 	db	0
   556   00EE31  00                 	db	0
   557   00EE32  00                 	db	0
   558   00EE33  00                 	db	0
   559   00EE34  00                 	db	0
   560   00EE35                     __end_of_priorities:
   561                           	callstack 0
   562   00EE35                     _configs:
   563                           	callstack 0
   564   00EE35  0B                 	db	11
   565   00EE36  43                 	db	67
   566   00EE37  00                 	db	0
   567   00EE38  FF                 	db	255
   568   00EE39  0C                 	db	12
   569   00EE3A  43                 	db	67
   570   00EE3B  01                 	db	1
   571   00EE3C  FF                 	db	255
   572   00EE3D  0D                 	db	13
   573   00EE3E  43                 	db	67
   574   00EE3F  02                 	db	2
   575   00EE40  FF                 	db	255
   576   00EE41  0E                 	db	14
   577   00EE42  43                 	db	67
   578   00EE43  03                 	db	3
   579   00EE44  FF                 	db	255
   580   00EE45  0F                 	db	15
   581   00EE46  43                 	db	67
   582   00EE47  04                 	db	4
   583   00EE48  FF                 	db	255
   584   00EE49  10                 	db	16
   585   00EE4A  43                 	db	67
   586   00EE4B  05                 	db	5
   587   00EE4C  FF                 	db	255
   588   00EE4D  11                 	db	17
   589   00EE4E  43                 	db	67
   590   00EE4F  06                 	db	6
   591   00EE50  FF                 	db	255
   592   00EE51  12                 	db	18
   593   00EE52  43                 	db	67
   594   00EE53  07                 	db	7
   595   00EE54  FF                 	db	255
   596   00EE55  15                 	db	21
   597   00EE56  42                 	db	66
   598   00EE57  00                 	db	0
   599   00EE58  0A                 	db	10
   600   00EE59  16                 	db	22
   601   00EE5A  42                 	db	66
   602   00EE5B  01                 	db	1
   603   00EE5C  08                 	db	8
   604   00EE5D  19                 	db	25
   605   00EE5E  42                 	db	66
   606   00EE5F  04                 	db	4
   607   00EE60  09                 	db	9
   608   00EE61  1A                 	db	26
   609   00EE62  42                 	db	66
   610   00EE63  05                 	db	5
   611   00EE64  FF                 	db	255
   612   00EE65  03                 	db	3
   613   00EE66  41                 	db	65
   614   00EE67  01                 	db	1
   615   00EE68  01                 	db	1
   616   00EE69  02                 	db	2
   617   00EE6A  41                 	db	65
   618   00EE6B  00                 	db	0
   619   00EE6C  00                 	db	0
   620   00EE6D  05                 	db	5
   621   00EE6E  41                 	db	65
   622   00EE6F  03                 	db	3
   623   00EE70  03                 	db	3
   624   00EE71  07                 	db	7
   625   00EE72  41                 	db	65
   626   00EE73  05                 	db	5
   627   00EE74  04                 	db	4
   628   00EE75                     __end_of_configs:
   629                           	callstack 0
   630   000000                     _paramBlock_absaddr	set	2080
   631   00EE75                     _services:
   632                           	callstack 0
   633   00EE75  69                 	db	low _canService
   634   00EE76  EF                 	db	high _canService
   635   00EE77  57                 	db	low _mnsService
   636   00EE78  EF                 	db	high _mnsService
   637   00EE79  45                 	db	low _nvService
   638   00EE7A  EF                 	db	high _nvService
   639   00EE7B  33                 	db	low _bootService
   640   00EE7C  EF                 	db	high _bootService
   641   00EE7D  21                 	db	low _eventTeachService
   642   00EE7E  EF                 	db	high _eventTeachService
   643   00EE7F  0F                 	db	low _eventConsumer2QService
   644   00EE80  EF                 	db	high _eventConsumer2QService
   645   00EE81  FD                 	db	low _eventProducerService
   646   00EE82  EE                 	db	high _eventProducerService
   647   00EE83  EB                 	db	low _eventCoeService
   648   00EE84  EE                 	db	high _eventCoeService
   649   00EE85  D9                 	db	low _eventAckService
   650   00EE86  EE                 	db	high _eventAckService
   651   00EE87                     __end_of_services:
   652                           	callstack 0
   653   000000                     _name_absaddr	set	2120
   654   00EE87                     _canPri:
   655                           	callstack 0
   656   00EE87  B0                 	db	176
   657   00EE88  A0                 	db	160
   658   00EE89  90                 	db	144
   659   00EE8A  80                 	db	128
   660   00EE8B  00                 	db	0
   661   00EE8C                     __end_of_canPri:
   662                           	callstack 0
   663   00EE8C                     _channelDefaultNVs:
   664                           	callstack 0
   665   00EE8C  00                 	db	0
   666   00EE8D  06                 	db	6
   667   00EE8E  04                 	db	4
   668   00EE8F  04                 	db	4
   669   00EE90  00                 	db	0
   670   00EE91  00                 	db	0
   671   00EE92  00                 	db	0
   672   00EE93  01                 	db	1
   673   00EE94  06                 	db	6
   674   00EE95  00                 	db	0
   675   00EE96  00                 	db	0
   676   00EE97  00                 	db	0
   677   00EE98  00                 	db	0
   678   00EE99  00                 	db	0
   679   00EE9A  02                 	db	2
   680   00EE9B  06                 	db	6
   681   00EE9C  80                 	db	128
   682   00EE9D  80                 	db	128
   683   00EE9E  EB                 	db	235
   684   00EE9F  EB                 	db	235
   685   00EEA0  00                 	db	0
   686   00EEA1  03                 	db	3
   687   00EEA2  06                 	db	6
   688   00EEA3  80                 	db	128
   689   00EEA4  7F                 	db	127
   690   00EEA5  40                 	db	64
   691   00EEA6  03                 	db	3
   692   00EEA7  3C                 	db	60
   693   00EEA8  04                 	db	4
   694   00EEA9  06                 	db	6
   695   00EEAA  03                 	db	3
   696   00EEAB  80                 	db	128
   697   00EEAC  80                 	db	128
   698   00EEAD  80                 	db	128
   699   00EEAE  00                 	db	0
   700   00EEAF  05                 	db	5
   701   00EEB0  06                 	db	6
   702   00EEB1  80                 	db	128
   703   00EEB2  10                 	db	16
   704   00EEB3  00                 	db	0
   705   00EEB4  00                 	db	0
   706   00EEB5  00                 	db	0
   707   00EEB6  06                 	db	6
   708   00EEB7  06                 	db	6
   709   00EEB8  00                 	db	0
   710   00EEB9  7B                 	db	123
   711   00EEBA  20                 	db	32
   712   00EEBB  07                 	db	7
   713   00EEBC  FF                 	db	255
   714   00EEBD  07                 	db	7
   715   00EEBE  06                 	db	6
   716   00EEBF  05                 	db	5
   717   00EEC0  00                 	db	0
   718   00EEC1  00                 	db	0
   719   00EEC2  00                 	db	0
   720   00EEC3  00                 	db	0
   721   00EEC4  08                 	db	8
   722   00EEC5  00                 	db	0
   723   00EEC6  00                 	db	0
   724   00EEC7  00                 	db	0
   725   00EEC8  00                 	db	0
   726   00EEC9  00                 	db	0
   727   00EECA  00                 	db	0
   728   00EECB  00                 	db	0
   729   00EECC  00                 	db	0
   730   00EECD  00                 	db	0
   731   00EECE  00                 	db	0
   732   00EECF  00                 	db	0
   733   00EED0  00                 	db	0
   734   00EED1  00                 	db	0
   735   00EED2  00                 	db	0
   736   00EED3  00                 	db	0
   737   00EED4  00                 	db	0
   738   00EED5  00                 	db	0
   739   00EED6  00                 	db	0
   740   00EED7  00                 	db	0
   741   00EED8  00                 	db	0
   742   00EED9                     __end_of_channelDefaultNVs:
   743                           	callstack 0
   744   00EED9                     _eventAckService:
   745                           	callstack 0
   746   00EED9  09                 	db	9
   747   00EEDA  01                 	db	1
   748   00EEDB  00                 	db	0
   749   00EEDC  00                 	db	0
   750   00EEDD  5E                 	db	low _ackPowerUp
   751   00EEDE  BF                 	db	high _ackPowerUp
   752   00EEDF  E2                 	db	low _ackEventProcessMessage
   753   00EEE0  65                 	db	high _ackEventProcessMessage
   754   00EEE1  00                 	db	0
   755   00EEE2  00                 	db	0
   756   00EEE3  00                 	db	0
   757   00EEE4  00                 	db	0
   758   00EEE5  00                 	db	0
   759   00EEE6  00                 	db	0
   760   00EEE7  00                 	db	0
   761   00EEE8  00                 	db	0
   762   00EEE9  0C                 	db	low _ackGetDiagnostic
   763   00EEEA  C1                 	db	high _ackGetDiagnostic
   764   00EEEB                     __end_of_eventAckService:
   765                           	callstack 0
   766   00EEEB                     _eventCoeService:
   767                           	callstack 0
   768   00EEEB  08                 	db	8
   769   00EEEC  01                 	db	1
   770   00EEED  00                 	db	0
   771   00EEEE  00                 	db	0
   772   00EEEF  00                 	db	0
   773   00EEF0  00                 	db	0
   774   00EEF1  00                 	db	0
   775   00EEF2  00                 	db	0
   776   00EEF3  00                 	db	0
   777   00EEF4  00                 	db	0
   778   00EEF5  00                 	db	0
   779   00EEF6  00                 	db	0
   780   00EEF7  00                 	db	0
   781   00EEF8  00                 	db	0
   782   00EEF9  00                 	db	0
   783   00EEFA  00                 	db	0
   784   00EEFB  00                 	db	0
   785   00EEFC  00                 	db	0
   786   00EEFD                     __end_of_eventCoeService:
   787                           	callstack 0
   788   00EEFD                     _eventProducerService:
   789                           	callstack 0
   790   00EEFD  05                 	db	5
   791   00EEFE  01                 	db	1
   792   00EEFF  00                 	db	0
   793   00EF00  00                 	db	0
   794   00EF01  30                 	db	low _producerPowerUp
   795   00EF02  BF                 	db	high _producerPowerUp
   796   00EF03  3E                 	db	low _producerProcessMessage
   797   00EF04  5F                 	db	high _producerProcessMessage
   798   00EF05  00                 	db	0
   799   00EF06  00                 	db	0
   800   00EF07  00                 	db	0
   801   00EF08  00                 	db	0
   802   00EF09  00                 	db	0
   803   00EF0A  00                 	db	0
   804   00EF0B  D2                 	db	low _producerEsdData
   805   00EF0C  C2                 	db	high _producerEsdData
   806   00EF0D  94                 	db	low _producerGetDiagnostic
   807   00EF0E  C0                 	db	high _producerGetDiagnostic
   808   00EF0F                     __end_of_eventProducerService:
   809                           	callstack 0
   810   00EF0F                     _eventConsumer2QService:
   811                           	callstack 0
   812   00EF0F  06                 	db	6
   813   00EF10  01                 	db	1
   814   00EF11  00                 	db	0
   815   00EF12  00                 	db	0
   816   00EF13  DA                 	db	low _consumer2QPowerUp
   817   00EF14  B9                 	db	high _consumer2QPowerUp
   818   00EF15  76                 	db	low _consumer2QProcessMessage
   819   00EF16  35                 	db	high _consumer2QProcessMessage
   820   00EF17  00                 	db	0
   821   00EF18  00                 	db	0
   822   00EF19  00                 	db	0
   823   00EF1A  00                 	db	0
   824   00EF1B  00                 	db	0
   825   00EF1C  00                 	db	0
   826   00EF1D  F2                 	db	low _consumer2QEsdData
   827   00EF1E  C2                 	db	high _consumer2QEsdData
   828   00EF1F  34                 	db	low _consumer2QGetDiagnostic
   829   00EF20  C1                 	db	high _consumer2QGetDiagnostic
   830   00EF21                     __end_of_eventConsumer2QService:
   831                           	callstack 0
   832   00EF21                     _eventTeachService:
   833                           	callstack 0
   834   00EF21  04                 	db	4
   835   00EF22  01                 	db	1
   836   00EF23  2E                 	db	low _teachFactoryReset
   837   00EF24  C5                 	db	high _teachFactoryReset
   838   00EF25  7C                 	db	low _teachPowerUp
   839   00EF26  BD                 	db	high _teachPowerUp
   840   00EF27  FE                 	db	low _teachProcessMessage
   841   00EF28  21                 	db	high _teachProcessMessage
   842   00EF29  00                 	db	0
   843   00EF2A  00                 	db	0
   844   00EF2B  00                 	db	0
   845   00EF2C  00                 	db	0
   846   00EF2D  00                 	db	0
   847   00EF2E  00                 	db	0
   848   00EF2F  20                 	db	low _teachGetESDdata
   849   00EF30  C2                 	db	high _teachGetESDdata
   850   00EF31  5C                 	db	low _teachGetDiagnostic
   851   00EF32  C1                 	db	high _teachGetDiagnostic
   852   00EF33                     __end_of_eventTeachService:
   853                           	callstack 0
   854   00EF33                     _bootService:
   855                           	callstack 0
   856   00EF33  0A                 	db	10
   857   00EF34  01                 	db	1
   858   00EF35  00                 	db	0
   859   00EF36  00                 	db	0
   860   00EF37  00                 	db	0
   861   00EF38  00                 	db	0
   862   00EF39  A6                 	db	low _bootProcessMessage
   863   00EF3A  9F                 	db	high _bootProcessMessage
   864   00EF3B  00                 	db	0
   865   00EF3C  00                 	db	0
   866   00EF3D  00                 	db	0
   867   00EF3E  00                 	db	0
   868   00EF3F  00                 	db	0
   869   00EF40  00                 	db	0
   870   00EF41  00                 	db	0
   871   00EF42  00                 	db	0
   872   00EF43  00                 	db	0
   873   00EF44  00                 	db	0
   874   00EF45                     __end_of_bootService:
   875                           	callstack 0
   876   00EF45                     _nvService:
   877                           	callstack 0
   878   00EF45  02                 	db	2
   879   00EF46  01                 	db	1
   880   00EF47  F0                 	db	low _nvFactoryReset
   881   00EF48  BB                 	db	high _nvFactoryReset
   882   00EF49  4A                 	db	low _nvPowerUp
   883   00EF4A  BD                 	db	high _nvPowerUp
   884   00EF4B  80                 	db	low _nvProcessMessage
   885   00EF4C  46                 	db	high _nvProcessMessage
   886   00EF4D  00                 	db	0
   887   00EF4E  00                 	db	0
   888   00EF4F  00                 	db	0
   889   00EF50  00                 	db	0
   890   00EF51  00                 	db	0
   891   00EF52  00                 	db	0
   892   00EF53  E2                 	db	low _nvGetESDdata
   893   00EF54  C3                 	db	high _nvGetESDdata
   894   00EF55  BC                 	db	low _nvGetDiagnostic
   895   00EF56  C0                 	db	high _nvGetDiagnostic
   896   00EF57                     __end_of_nvService:
   897                           	callstack 0
   898   00EF57                     _mnsService:
   899                           	callstack 0
   900   00EF57  01                 	db	1
   901   00EF58  01                 	db	1
   902   00EF59  BE                 	db	low _mnsFactoryReset
   903   00EF5A  AA                 	db	high _mnsFactoryReset
   904   00EF5B  3E                 	db	low _mnsPowerUp
   905   00EF5C  7E                 	db	high _mnsPowerUp
   906   00EF5D  CE                 	db	low _mnsProcessMessage
   907   00EF5E  16                 	db	high _mnsProcessMessage
   908   00EF5F  30                 	db	low _mnsPoll
   909   00EF60  43                 	db	high _mnsPoll
   910   00EF61  00                 	db	0
   911   00EF62  00                 	db	0
   912   00EF63  70                 	db	low _mnsLowIsr
   913   00EF64  C4                 	db	high _mnsLowIsr
   914   00EF65  00                 	db	0
   915   00EF66  00                 	db	0
   916   00EF67  E4                 	db	low _mnsGetDiagnostic
   917   00EF68  C0                 	db	high _mnsGetDiagnostic
   918   00EF69                     __end_of_mnsService:
   919                           	callstack 0
   920   00EF69                     _canService:
   921                           	callstack 0
   922   00EF69  03                 	db	3
   923   00EF6A  01                 	db	1
   924   00EF6B  72                 	db	low _canFactoryReset
   925   00EF6C  C3                 	db	high _canFactoryReset
   926   00EF6D  08                 	db	low _canPowerUp
   927   00EF6E  6F                 	db	high _canPowerUp
   928   00EF6F  46                 	db	low _canProcessMessage
   929   00EF70  9A                 	db	high _canProcessMessage
   930   00EF71  00                 	db	0
   931   00EF72  00                 	db	0
   932   00EF73  32                 	db	low _canIsr
   933   00EF74  C3                 	db	high _canIsr
   934   00EF75  32                 	db	low _canIsr
   935   00EF76  C3                 	db	high _canIsr
   936   00EF77  C8                 	db	low _canEsdData
   937   00EF78  C3                 	db	high _canEsdData
   938   00EF79  BE                 	db	low _canGetDiagnostic
   939   00EF7A  AE                 	db	high _canGetDiagnostic
   940   00EF7B                     __end_of_canService:
   941                           	callstack 0
   942   00EF7B                     _canTransport:
   943                           	callstack 0
   944   00EF7B  A0                 	db	low _canSendMessage
   945   00EF7C  49                 	db	high _canSendMessage
   946   00EF7D  D0                 	db	low _canReceiveMessage
   947   00EF7E  67                 	db	high _canReceiveMessage
   948   00EF7F                     __end_of_canTransport:
   949                           	callstack 0
   950   000000                     _eventTable_absaddr	set	61312
   951   00EF7F  00                 	db	0	; dummy byte at the end
   952   000000                     
   953                           	psect	_eventTable_text
   954   00EF80                     __p_eventTable_text:
   955                           	callstack 0
   956   00EF80                     _eventTable:
   957                           	callstack 0
   958   00EF80  FF                 	db	255
   959   00EF81  FF                 	db	255
   960   00EF82  FF                 	db	255
   961   00EF83  FF                 	db	255
   962   00EF84  FF                 	db	255
   963   00EF85  FF                 	db	255
   964   00EF86  FF                 	db	255
   965   00EF87  FF                 	db	255
   966   00EF88  FF                 	db	255
   967   00EF89  FF                 	db	255
   968   00EF8A  FF                 	db	255
   969   00EF8B  FF                 	db	255
   970   00EF8C  FF                 	db	255
   971   00EF8D  FF                 	db	255
   972   00EF8E  FF                 	db	255
   973   00EF8F  FF                 	db	255
   974   00EF90  FF                 	db	255
   975   00EF91  FF                 	db	255
   976   00EF92  FF                 	db	255
   977   00EF93  FF                 	db	255
   978   00EF94  FF                 	db	255
   979   00EF95  FF                 	db	255
   980   00EF96  FF                 	db	255
   981   00EF97  FF                 	db	255
   982   00EF98  FF                 	db	255
   983   00EF99  FF                 	db	255
   984   00EF9A  FF                 	db	255
   985   00EF9B  FF                 	db	255
   986   00EF9C  FF                 	db	255
   987   00EF9D  FF                 	db	255
   988   00EF9E  FF                 	db	255
   989   00EF9F  FF                 	db	255
   990   00EFA0  FF                 	db	255
   991   00EFA1  FF                 	db	255
   992   00EFA2  FF                 	db	255
   993   00EFA3  FF                 	db	255
   994   00EFA4  FF                 	db	255
   995   00EFA5  FF                 	db	255
   996   00EFA6  FF                 	db	255
   997   00EFA7  FF                 	db	255
   998   00EFA8  FF                 	db	255
   999   00EFA9  FF                 	db	255
  1000   00EFAA  FF                 	db	255
  1001   00EFAB  FF                 	db	255
  1002   00EFAC  FF                 	db	255
  1003   00EFAD  FF                 	db	255
  1004   00EFAE  FF                 	db	255
  1005   00EFAF  FF                 	db	255
  1006   00EFB0  FF                 	db	255
  1007   00EFB1  FF                 	db	255
  1008   00EFB2  FF                 	db	255
  1009   00EFB3  FF                 	db	255
  1010   00EFB4  FF                 	db	255
  1011   00EFB5  FF                 	db	255
  1012   00EFB6  FF                 	db	255
  1013   00EFB7  FF                 	db	255
  1014   00EFB8  FF                 	db	255
  1015   00EFB9  FF                 	db	255
  1016   00EFBA  FF                 	db	255
  1017   00EFBB  FF                 	db	255
  1018   00EFBC  FF                 	db	255
  1019   00EFBD  FF                 	db	255
  1020   00EFBE  FF                 	db	255
  1021   00EFBF  FF                 	db	255
  1022   00EFC0  FF                 	db	255
  1023   00EFC1  FF                 	db	255
  1024   00EFC2  FF                 	db	255
  1025   00EFC3  FF                 	db	255
  1026   00EFC4  FF                 	db	255
  1027   00EFC5  FF                 	db	255
  1028   00EFC6  FF                 	db	255
  1029   00EFC7  FF                 	db	255
  1030   00EFC8  FF                 	db	255
  1031   00EFC9  FF                 	db	255
  1032   00EFCA  FF                 	db	255
  1033   00EFCB  FF                 	db	255
  1034   00EFCC  FF                 	db	255
  1035   00EFCD  FF                 	db	255
  1036   00EFCE  FF                 	db	255
  1037   00EFCF  FF                 	db	255
  1038   00EFD0  FF                 	db	255
  1039   00EFD1  FF                 	db	255
  1040   00EFD2  FF                 	db	255
  1041   00EFD3  FF                 	db	255
  1042   00EFD4  FF                 	db	255
  1043   00EFD5  FF                 	db	255
  1044   00EFD6  FF                 	db	255
  1045   00EFD7  FF                 	db	255
  1046   00EFD8  FF                 	db	255
  1047   00EFD9  FF                 	db	255
  1048   00EFDA  FF                 	db	255
  1049   00EFDB  FF                 	db	255
  1050   00EFDC  FF                 	db	255
  1051   00EFDD  FF                 	db	255
  1052   00EFDE  FF                 	db	255
  1053   00EFDF  FF                 	db	255
  1054   00EFE0  FF                 	db	255
  1055   00EFE1  FF                 	db	255
  1056   00EFE2  FF                 	db	255
  1057   00EFE3  FF                 	db	255
  1058   00EFE4  FF                 	db	255
  1059   00EFE5  FF                 	db	255
  1060   00EFE6  FF                 	db	255
  1061   00EFE7  FF                 	db	255
  1062   00EFE8  FF                 	db	255
  1063   00EFE9  FF                 	db	255
  1064   00EFEA  FF                 	db	255
  1065   00EFEB  FF                 	db	255
  1066   00EFEC  FF                 	db	255
  1067   00EFED  FF                 	db	255
  1068   00EFEE  FF                 	db	255
  1069   00EFEF  FF                 	db	255
  1070   00EFF0  FF                 	db	255
  1071   00EFF1  FF                 	db	255
  1072   00EFF2  FF                 	db	255
  1073   00EFF3  FF                 	db	255
  1074   00EFF4  FF                 	db	255
  1075   00EFF5  FF                 	db	255
  1076   00EFF6  FF                 	db	255
  1077   00EFF7  FF                 	db	255
  1078   00EFF8  FF                 	db	255
  1079   00EFF9  FF                 	db	255
  1080   00EFFA  FF                 	db	255
  1081   00EFFB  FF                 	db	255
  1082   00EFFC  FF                 	db	255
  1083   00EFFD  FF                 	db	255
  1084   00EFFE  FF                 	db	255
  1085   00EFFF  FF                 	db	255
  1086   00F000  FF                 	db	255
  1087   00F001  FF                 	db	255
  1088   00F002  FF                 	db	255
  1089   00F003  FF                 	db	255
  1090   00F004  FF                 	db	255
  1091   00F005  FF                 	db	255
  1092   00F006  FF                 	db	255
  1093   00F007  FF                 	db	255
  1094   00F008  FF                 	db	255
  1095   00F009  FF                 	db	255
  1096   00F00A  FF                 	db	255
  1097   00F00B  FF                 	db	255
  1098   00F00C  FF                 	db	255
  1099   00F00D  FF                 	db	255
  1100   00F00E  FF                 	db	255
  1101   00F00F  FF                 	db	255
  1102   00F010  FF                 	db	255
  1103   00F011  FF                 	db	255
  1104   00F012  FF                 	db	255
  1105   00F013  FF                 	db	255
  1106   00F014  FF                 	db	255
  1107   00F015  FF                 	db	255
  1108   00F016  FF                 	db	255
  1109   00F017  FF                 	db	255
  1110   00F018  FF                 	db	255
  1111   00F019  FF                 	db	255
  1112   00F01A  FF                 	db	255
  1113   00F01B  FF                 	db	255
  1114   00F01C  FF                 	db	255
  1115   00F01D  FF                 	db	255
  1116   00F01E  FF                 	db	255
  1117   00F01F  FF                 	db	255
  1118   00F020  FF                 	db	255
  1119   00F021  FF                 	db	255
  1120   00F022  FF                 	db	255
  1121   00F023  FF                 	db	255
  1122   00F024  FF                 	db	255
  1123   00F025  FF                 	db	255
  1124   00F026  FF                 	db	255
  1125   00F027  FF                 	db	255
  1126   00F028  FF                 	db	255
  1127   00F029  FF                 	db	255
  1128   00F02A  FF                 	db	255
  1129   00F02B  FF                 	db	255
  1130   00F02C  FF                 	db	255
  1131   00F02D  FF                 	db	255
  1132   00F02E  FF                 	db	255
  1133   00F02F  FF                 	db	255
  1134   00F030  FF                 	db	255
  1135   00F031  FF                 	db	255
  1136   00F032  FF                 	db	255
  1137   00F033  FF                 	db	255
  1138   00F034  FF                 	db	255
  1139   00F035  FF                 	db	255
  1140   00F036  FF                 	db	255
  1141   00F037  FF                 	db	255
  1142   00F038  FF                 	db	255
  1143   00F039  FF                 	db	255
  1144   00F03A  FF                 	db	255
  1145   00F03B  FF                 	db	255
  1146   00F03C  FF                 	db	255
  1147   00F03D  FF                 	db	255
  1148   00F03E  FF                 	db	255
  1149   00F03F  FF                 	db	255
  1150   00F040  FF                 	db	255
  1151   00F041  FF                 	db	255
  1152   00F042  FF                 	db	255
  1153   00F043  FF                 	db	255
  1154   00F044  FF                 	db	255
  1155   00F045  FF                 	db	255
  1156   00F046  FF                 	db	255
  1157   00F047  FF                 	db	255
  1158   00F048  FF                 	db	255
  1159   00F049  FF                 	db	255
  1160   00F04A  FF                 	db	255
  1161   00F04B  FF                 	db	255
  1162   00F04C  FF                 	db	255
  1163   00F04D  FF                 	db	255
  1164   00F04E  FF                 	db	255
  1165   00F04F  FF                 	db	255
  1166   00F050  FF                 	db	255
  1167   00F051  FF                 	db	255
  1168   00F052  FF                 	db	255
  1169   00F053  FF                 	db	255
  1170   00F054  FF                 	db	255
  1171   00F055  FF                 	db	255
  1172   00F056  FF                 	db	255
  1173   00F057  FF                 	db	255
  1174   00F058  FF                 	db	255
  1175   00F059  FF                 	db	255
  1176   00F05A  FF                 	db	255
  1177   00F05B  FF                 	db	255
  1178   00F05C  FF                 	db	255
  1179   00F05D  FF                 	db	255
  1180   00F05E  FF                 	db	255
  1181   00F05F  FF                 	db	255
  1182   00F060  FF                 	db	255
  1183   00F061  FF                 	db	255
  1184   00F062  FF                 	db	255
  1185   00F063  FF                 	db	255
  1186   00F064  FF                 	db	255
  1187   00F065  FF                 	db	255
  1188   00F066  FF                 	db	255
  1189   00F067  FF                 	db	255
  1190   00F068  FF                 	db	255
  1191   00F069  FF                 	db	255
  1192   00F06A  FF                 	db	255
  1193   00F06B  FF                 	db	255
  1194   00F06C  FF                 	db	255
  1195   00F06D  FF                 	db	255
  1196   00F06E  FF                 	db	255
  1197   00F06F  FF                 	db	255
  1198   00F070  FF                 	db	255
  1199   00F071  FF                 	db	255
  1200   00F072  FF                 	db	255
  1201   00F073  FF                 	db	255
  1202   00F074  FF                 	db	255
  1203   00F075  FF                 	db	255
  1204   00F076  FF                 	db	255
  1205   00F077  FF                 	db	255
  1206   00F078  FF                 	db	255
  1207   00F079  FF                 	db	255
  1208   00F07A  FF                 	db	255
  1209   00F07B  FF                 	db	255
  1210   00F07C  FF                 	db	255
  1211   00F07D  FF                 	db	255
  1212   00F07E  FF                 	db	255
  1213   00F07F  FF                 	db	255
  1214   00F080  FF                 	db	255
  1215   00F081  FF                 	db	255
  1216   00F082  FF                 	db	255
  1217   00F083  FF                 	db	255
  1218   00F084  FF                 	db	255
  1219   00F085  FF                 	db	255
  1220   00F086  FF                 	db	255
  1221   00F087  FF                 	db	255
  1222   00F088  FF                 	db	255
  1223   00F089  FF                 	db	255
  1224   00F08A  FF                 	db	255
  1225   00F08B  FF                 	db	255
  1226   00F08C  FF                 	db	255
  1227   00F08D  FF                 	db	255
  1228   00F08E  FF                 	db	255
  1229   00F08F  FF                 	db	255
  1230   00F090  FF                 	db	255
  1231   00F091  FF                 	db	255
  1232   00F092  FF                 	db	255
  1233   00F093  FF                 	db	255
  1234   00F094  FF                 	db	255
  1235   00F095  FF                 	db	255
  1236   00F096  FF                 	db	255
  1237   00F097  FF                 	db	255
  1238   00F098  FF                 	db	255
  1239   00F099  FF                 	db	255
  1240   00F09A  FF                 	db	255
  1241   00F09B  FF                 	db	255
  1242   00F09C  FF                 	db	255
  1243   00F09D  FF                 	db	255
  1244   00F09E  FF                 	db	255
  1245   00F09F  FF                 	db	255
  1246   00F0A0  FF                 	db	255
  1247   00F0A1  FF                 	db	255
  1248   00F0A2  FF                 	db	255
  1249   00F0A3  FF                 	db	255
  1250   00F0A4  FF                 	db	255
  1251   00F0A5  FF                 	db	255
  1252   00F0A6  FF                 	db	255
  1253   00F0A7  FF                 	db	255
  1254   00F0A8  FF                 	db	255
  1255   00F0A9  FF                 	db	255
  1256   00F0AA  FF                 	db	255
  1257   00F0AB  FF                 	db	255
  1258   00F0AC  FF                 	db	255
  1259   00F0AD  FF                 	db	255
  1260   00F0AE  FF                 	db	255
  1261   00F0AF  FF                 	db	255
  1262   00F0B0  FF                 	db	255
  1263   00F0B1  FF                 	db	255
  1264   00F0B2  FF                 	db	255
  1265   00F0B3  FF                 	db	255
  1266   00F0B4  FF                 	db	255
  1267   00F0B5  FF                 	db	255
  1268   00F0B6  FF                 	db	255
  1269   00F0B7  FF                 	db	255
  1270   00F0B8  FF                 	db	255
  1271   00F0B9  FF                 	db	255
  1272   00F0BA  FF                 	db	255
  1273   00F0BB  FF                 	db	255
  1274   00F0BC  FF                 	db	255
  1275   00F0BD  FF                 	db	255
  1276   00F0BE  FF                 	db	255
  1277   00F0BF  FF                 	db	255
  1278   00F0C0  FF                 	db	255
  1279   00F0C1  FF                 	db	255
  1280   00F0C2  FF                 	db	255
  1281   00F0C3  FF                 	db	255
  1282   00F0C4  FF                 	db	255
  1283   00F0C5  FF                 	db	255
  1284   00F0C6  FF                 	db	255
  1285   00F0C7  FF                 	db	255
  1286   00F0C8  FF                 	db	255
  1287   00F0C9  FF                 	db	255
  1288   00F0CA  FF                 	db	255
  1289   00F0CB  FF                 	db	255
  1290   00F0CC  FF                 	db	255
  1291   00F0CD  FF                 	db	255
  1292   00F0CE  FF                 	db	255
  1293   00F0CF  FF                 	db	255
  1294   00F0D0  FF                 	db	255
  1295   00F0D1  FF                 	db	255
  1296   00F0D2  FF                 	db	255
  1297   00F0D3  FF                 	db	255
  1298   00F0D4  FF                 	db	255
  1299   00F0D5  FF                 	db	255
  1300   00F0D6  FF                 	db	255
  1301   00F0D7  FF                 	db	255
  1302   00F0D8  FF                 	db	255
  1303   00F0D9  FF                 	db	255
  1304   00F0DA  FF                 	db	255
  1305   00F0DB  FF                 	db	255
  1306   00F0DC  FF                 	db	255
  1307   00F0DD  FF                 	db	255
  1308   00F0DE  FF                 	db	255
  1309   00F0DF  FF                 	db	255
  1310   00F0E0  FF                 	db	255
  1311   00F0E1  FF                 	db	255
  1312   00F0E2  FF                 	db	255
  1313   00F0E3  FF                 	db	255
  1314   00F0E4  FF                 	db	255
  1315   00F0E5  FF                 	db	255
  1316   00F0E6  FF                 	db	255
  1317   00F0E7  FF                 	db	255
  1318   00F0E8  FF                 	db	255
  1319   00F0E9  FF                 	db	255
  1320   00F0EA  FF                 	db	255
  1321   00F0EB  FF                 	db	255
  1322   00F0EC  FF                 	db	255
  1323   00F0ED  FF                 	db	255
  1324   00F0EE  FF                 	db	255
  1325   00F0EF  FF                 	db	255
  1326   00F0F0  FF                 	db	255
  1327   00F0F1  FF                 	db	255
  1328   00F0F2  FF                 	db	255
  1329   00F0F3  FF                 	db	255
  1330   00F0F4  FF                 	db	255
  1331   00F0F5  FF                 	db	255
  1332   00F0F6  FF                 	db	255
  1333   00F0F7  FF                 	db	255
  1334   00F0F8  FF                 	db	255
  1335   00F0F9  FF                 	db	255
  1336   00F0FA  FF                 	db	255
  1337   00F0FB  FF                 	db	255
  1338   00F0FC  FF                 	db	255
  1339   00F0FD  FF                 	db	255
  1340   00F0FE  FF                 	db	255
  1341   00F0FF  FF                 	db	255
  1342   00F100  FF                 	db	255
  1343   00F101  FF                 	db	255
  1344   00F102  FF                 	db	255
  1345   00F103  FF                 	db	255
  1346   00F104  FF                 	db	255
  1347   00F105  FF                 	db	255
  1348   00F106  FF                 	db	255
  1349   00F107  FF                 	db	255
  1350   00F108  FF                 	db	255
  1351   00F109  FF                 	db	255
  1352   00F10A  FF                 	db	255
  1353   00F10B  FF                 	db	255
  1354   00F10C  FF                 	db	255
  1355   00F10D  FF                 	db	255
  1356   00F10E  FF                 	db	255
  1357   00F10F  FF                 	db	255
  1358   00F110  FF                 	db	255
  1359   00F111  FF                 	db	255
  1360   00F112  FF                 	db	255
  1361   00F113  FF                 	db	255
  1362   00F114  FF                 	db	255
  1363   00F115  FF                 	db	255
  1364   00F116  FF                 	db	255
  1365   00F117  FF                 	db	255
  1366   00F118  FF                 	db	255
  1367   00F119  FF                 	db	255
  1368   00F11A  FF                 	db	255
  1369   00F11B  FF                 	db	255
  1370   00F11C  FF                 	db	255
  1371   00F11D  FF                 	db	255
  1372   00F11E  FF                 	db	255
  1373   00F11F  FF                 	db	255
  1374   00F120  FF                 	db	255
  1375   00F121  FF                 	db	255
  1376   00F122  FF                 	db	255
  1377   00F123  FF                 	db	255
  1378   00F124  FF                 	db	255
  1379   00F125  FF                 	db	255
  1380   00F126  FF                 	db	255
  1381   00F127  FF                 	db	255
  1382   00F128  FF                 	db	255
  1383   00F129  FF                 	db	255
  1384   00F12A  FF                 	db	255
  1385   00F12B  FF                 	db	255
  1386   00F12C  FF                 	db	255
  1387   00F12D  FF                 	db	255
  1388   00F12E  FF                 	db	255
  1389   00F12F  FF                 	db	255
  1390   00F130  FF                 	db	255
  1391   00F131  FF                 	db	255
  1392   00F132  FF                 	db	255
  1393   00F133  FF                 	db	255
  1394   00F134  FF                 	db	255
  1395   00F135  FF                 	db	255
  1396   00F136  FF                 	db	255
  1397   00F137  FF                 	db	255
  1398   00F138  FF                 	db	255
  1399   00F139  FF                 	db	255
  1400   00F13A  FF                 	db	255
  1401   00F13B  FF                 	db	255
  1402   00F13C  FF                 	db	255
  1403   00F13D  FF                 	db	255
  1404   00F13E  FF                 	db	255
  1405   00F13F  FF                 	db	255
  1406   00F140  FF                 	db	255
  1407   00F141  FF                 	db	255
  1408   00F142  FF                 	db	255
  1409   00F143  FF                 	db	255
  1410   00F144  FF                 	db	255
  1411   00F145  FF                 	db	255
  1412   00F146  FF                 	db	255
  1413   00F147  FF                 	db	255
  1414   00F148  FF                 	db	255
  1415   00F149  FF                 	db	255
  1416   00F14A  FF                 	db	255
  1417   00F14B  FF                 	db	255
  1418   00F14C  FF                 	db	255
  1419   00F14D  FF                 	db	255
  1420   00F14E  FF                 	db	255
  1421   00F14F  FF                 	db	255
  1422   00F150  FF                 	db	255
  1423   00F151  FF                 	db	255
  1424   00F152  FF                 	db	255
  1425   00F153  FF                 	db	255
  1426   00F154  FF                 	db	255
  1427   00F155  FF                 	db	255
  1428   00F156  FF                 	db	255
  1429   00F157  FF                 	db	255
  1430   00F158  FF                 	db	255
  1431   00F159  FF                 	db	255
  1432   00F15A  FF                 	db	255
  1433   00F15B  FF                 	db	255
  1434   00F15C  FF                 	db	255
  1435   00F15D  FF                 	db	255
  1436   00F15E  FF                 	db	255
  1437   00F15F  FF                 	db	255
  1438   00F160  FF                 	db	255
  1439   00F161  FF                 	db	255
  1440   00F162  FF                 	db	255
  1441   00F163  FF                 	db	255
  1442   00F164  FF                 	db	255
  1443   00F165  FF                 	db	255
  1444   00F166  FF                 	db	255
  1445   00F167  FF                 	db	255
  1446   00F168  FF                 	db	255
  1447   00F169  FF                 	db	255
  1448   00F16A  FF                 	db	255
  1449   00F16B  FF                 	db	255
  1450   00F16C  FF                 	db	255
  1451   00F16D  FF                 	db	255
  1452   00F16E  FF                 	db	255
  1453   00F16F  FF                 	db	255
  1454   00F170  FF                 	db	255
  1455   00F171  FF                 	db	255
  1456   00F172  FF                 	db	255
  1457   00F173  FF                 	db	255
  1458   00F174  FF                 	db	255
  1459   00F175  FF                 	db	255
  1460   00F176  FF                 	db	255
  1461   00F177  FF                 	db	255
  1462   00F178  FF                 	db	255
  1463   00F179  FF                 	db	255
  1464   00F17A  FF                 	db	255
  1465   00F17B  FF                 	db	255
  1466   00F17C  FF                 	db	255
  1467   00F17D  FF                 	db	255
  1468   00F17E  FF                 	db	255
  1469   00F17F  FF                 	db	255
  1470   00F180  FF                 	db	255
  1471   00F181  FF                 	db	255
  1472   00F182  FF                 	db	255
  1473   00F183  FF                 	db	255
  1474   00F184  FF                 	db	255
  1475   00F185  FF                 	db	255
  1476   00F186  FF                 	db	255
  1477   00F187  FF                 	db	255
  1478   00F188  FF                 	db	255
  1479   00F189  FF                 	db	255
  1480   00F18A  FF                 	db	255
  1481   00F18B  FF                 	db	255
  1482   00F18C  FF                 	db	255
  1483   00F18D  FF                 	db	255
  1484   00F18E  FF                 	db	255
  1485   00F18F  FF                 	db	255
  1486   00F190  FF                 	db	255
  1487   00F191  FF                 	db	255
  1488   00F192  FF                 	db	255
  1489   00F193  FF                 	db	255
  1490   00F194  FF                 	db	255
  1491   00F195  FF                 	db	255
  1492   00F196  FF                 	db	255
  1493   00F197  FF                 	db	255
  1494   00F198  FF                 	db	255
  1495   00F199  FF                 	db	255
  1496   00F19A  FF                 	db	255
  1497   00F19B  FF                 	db	255
  1498   00F19C  FF                 	db	255
  1499   00F19D  FF                 	db	255
  1500   00F19E  FF                 	db	255
  1501   00F19F  FF                 	db	255
  1502   00F1A0  FF                 	db	255
  1503   00F1A1  FF                 	db	255
  1504   00F1A2  FF                 	db	255
  1505   00F1A3  FF                 	db	255
  1506   00F1A4  FF                 	db	255
  1507   00F1A5  FF                 	db	255
  1508   00F1A6  FF                 	db	255
  1509   00F1A7  FF                 	db	255
  1510   00F1A8  FF                 	db	255
  1511   00F1A9  FF                 	db	255
  1512   00F1AA  FF                 	db	255
  1513   00F1AB  FF                 	db	255
  1514   00F1AC  FF                 	db	255
  1515   00F1AD  FF                 	db	255
  1516   00F1AE  FF                 	db	255
  1517   00F1AF  FF                 	db	255
  1518   00F1B0  FF                 	db	255
  1519   00F1B1  FF                 	db	255
  1520   00F1B2  FF                 	db	255
  1521   00F1B3  FF                 	db	255
  1522   00F1B4  FF                 	db	255
  1523   00F1B5  FF                 	db	255
  1524   00F1B6  FF                 	db	255
  1525   00F1B7  FF                 	db	255
  1526   00F1B8  FF                 	db	255
  1527   00F1B9  FF                 	db	255
  1528   00F1BA  FF                 	db	255
  1529   00F1BB  FF                 	db	255
  1530   00F1BC  FF                 	db	255
  1531   00F1BD  FF                 	db	255
  1532   00F1BE  FF                 	db	255
  1533   00F1BF  FF                 	db	255
  1534   00F1C0  FF                 	db	255
  1535   00F1C1  FF                 	db	255
  1536   00F1C2  FF                 	db	255
  1537   00F1C3  FF                 	db	255
  1538   00F1C4  FF                 	db	255
  1539   00F1C5  FF                 	db	255
  1540   00F1C6  FF                 	db	255
  1541   00F1C7  FF                 	db	255
  1542   00F1C8  FF                 	db	255
  1543   00F1C9  FF                 	db	255
  1544   00F1CA  FF                 	db	255
  1545   00F1CB  FF                 	db	255
  1546   00F1CC  FF                 	db	255
  1547   00F1CD  FF                 	db	255
  1548   00F1CE  FF                 	db	255
  1549   00F1CF  FF                 	db	255
  1550   00F1D0  FF                 	db	255
  1551   00F1D1  FF                 	db	255
  1552   00F1D2  FF                 	db	255
  1553   00F1D3  FF                 	db	255
  1554   00F1D4  FF                 	db	255
  1555   00F1D5  FF                 	db	255
  1556   00F1D6  FF                 	db	255
  1557   00F1D7  FF                 	db	255
  1558   00F1D8  FF                 	db	255
  1559   00F1D9  FF                 	db	255
  1560   00F1DA  FF                 	db	255
  1561   00F1DB  FF                 	db	255
  1562   00F1DC  FF                 	db	255
  1563   00F1DD  FF                 	db	255
  1564   00F1DE  FF                 	db	255
  1565   00F1DF  FF                 	db	255
  1566   00F1E0  FF                 	db	255
  1567   00F1E1  FF                 	db	255
  1568   00F1E2  FF                 	db	255
  1569   00F1E3  FF                 	db	255
  1570   00F1E4  FF                 	db	255
  1571   00F1E5  FF                 	db	255
  1572   00F1E6  FF                 	db	255
  1573   00F1E7  FF                 	db	255
  1574   00F1E8  FF                 	db	255
  1575   00F1E9  FF                 	db	255
  1576   00F1EA  FF                 	db	255
  1577   00F1EB  FF                 	db	255
  1578   00F1EC  FF                 	db	255
  1579   00F1ED  FF                 	db	255
  1580   00F1EE  FF                 	db	255
  1581   00F1EF  FF                 	db	255
  1582   00F1F0  FF                 	db	255
  1583   00F1F1  FF                 	db	255
  1584   00F1F2  FF                 	db	255
  1585   00F1F3  FF                 	db	255
  1586   00F1F4  FF                 	db	255
  1587   00F1F5  FF                 	db	255
  1588   00F1F6  FF                 	db	255
  1589   00F1F7  FF                 	db	255
  1590   00F1F8  FF                 	db	255
  1591   00F1F9  FF                 	db	255
  1592   00F1FA  FF                 	db	255
  1593   00F1FB  FF                 	db	255
  1594   00F1FC  FF                 	db	255
  1595   00F1FD  FF                 	db	255
  1596   00F1FE  FF                 	db	255
  1597   00F1FF  FF                 	db	255
  1598   00F200  FF                 	db	255
  1599   00F201  FF                 	db	255
  1600   00F202  FF                 	db	255
  1601   00F203  FF                 	db	255
  1602   00F204  FF                 	db	255
  1603   00F205  FF                 	db	255
  1604   00F206  FF                 	db	255
  1605   00F207  FF                 	db	255
  1606   00F208  FF                 	db	255
  1607   00F209  FF                 	db	255
  1608   00F20A  FF                 	db	255
  1609   00F20B  FF                 	db	255
  1610   00F20C  FF                 	db	255
  1611   00F20D  FF                 	db	255
  1612   00F20E  FF                 	db	255
  1613   00F20F  FF                 	db	255
  1614   00F210  FF                 	db	255
  1615   00F211  FF                 	db	255
  1616   00F212  FF                 	db	255
  1617   00F213  FF                 	db	255
  1618   00F214  FF                 	db	255
  1619   00F215  FF                 	db	255
  1620   00F216  FF                 	db	255
  1621   00F217  FF                 	db	255
  1622   00F218  FF                 	db	255
  1623   00F219  FF                 	db	255
  1624   00F21A  FF                 	db	255
  1625   00F21B  FF                 	db	255
  1626   00F21C  FF                 	db	255
  1627   00F21D  FF                 	db	255
  1628   00F21E  FF                 	db	255
  1629   00F21F  FF                 	db	255
  1630   00F220  FF                 	db	255
  1631   00F221  FF                 	db	255
  1632   00F222  FF                 	db	255
  1633   00F223  FF                 	db	255
  1634   00F224  FF                 	db	255
  1635   00F225  FF                 	db	255
  1636   00F226  FF                 	db	255
  1637   00F227  FF                 	db	255
  1638   00F228  FF                 	db	255
  1639   00F229  FF                 	db	255
  1640   00F22A  FF                 	db	255
  1641   00F22B  FF                 	db	255
  1642   00F22C  FF                 	db	255
  1643   00F22D  FF                 	db	255
  1644   00F22E  FF                 	db	255
  1645   00F22F  FF                 	db	255
  1646   00F230  FF                 	db	255
  1647   00F231  FF                 	db	255
  1648   00F232  FF                 	db	255
  1649   00F233  FF                 	db	255
  1650   00F234  FF                 	db	255
  1651   00F235  FF                 	db	255
  1652   00F236  FF                 	db	255
  1653   00F237  FF                 	db	255
  1654   00F238  FF                 	db	255
  1655   00F239  FF                 	db	255
  1656   00F23A  FF                 	db	255
  1657   00F23B  FF                 	db	255
  1658   00F23C  FF                 	db	255
  1659   00F23D  FF                 	db	255
  1660   00F23E  FF                 	db	255
  1661   00F23F  FF                 	db	255
  1662   00F240  FF                 	db	255
  1663   00F241  FF                 	db	255
  1664   00F242  FF                 	db	255
  1665   00F243  FF                 	db	255
  1666   00F244  FF                 	db	255
  1667   00F245  FF                 	db	255
  1668   00F246  FF                 	db	255
  1669   00F247  FF                 	db	255
  1670   00F248  FF                 	db	255
  1671   00F249  FF                 	db	255
  1672   00F24A  FF                 	db	255
  1673   00F24B  FF                 	db	255
  1674   00F24C  FF                 	db	255
  1675   00F24D  FF                 	db	255
  1676   00F24E  FF                 	db	255
  1677   00F24F  FF                 	db	255
  1678   00F250  FF                 	db	255
  1679   00F251  FF                 	db	255
  1680   00F252  FF                 	db	255
  1681   00F253  FF                 	db	255
  1682   00F254  FF                 	db	255
  1683   00F255  FF                 	db	255
  1684   00F256  FF                 	db	255
  1685   00F257  FF                 	db	255
  1686   00F258  FF                 	db	255
  1687   00F259  FF                 	db	255
  1688   00F25A  FF                 	db	255
  1689   00F25B  FF                 	db	255
  1690   00F25C  FF                 	db	255
  1691   00F25D  FF                 	db	255
  1692   00F25E  FF                 	db	255
  1693   00F25F  FF                 	db	255
  1694   00F260  FF                 	db	255
  1695   00F261  FF                 	db	255
  1696   00F262  FF                 	db	255
  1697   00F263  FF                 	db	255
  1698   00F264  FF                 	db	255
  1699   00F265  FF                 	db	255
  1700   00F266  FF                 	db	255
  1701   00F267  FF                 	db	255
  1702   00F268  FF                 	db	255
  1703   00F269  FF                 	db	255
  1704   00F26A  FF                 	db	255
  1705   00F26B  FF                 	db	255
  1706   00F26C  FF                 	db	255
  1707   00F26D  FF                 	db	255
  1708   00F26E  FF                 	db	255
  1709   00F26F  FF                 	db	255
  1710   00F270  FF                 	db	255
  1711   00F271  FF                 	db	255
  1712   00F272  FF                 	db	255
  1713   00F273  FF                 	db	255
  1714   00F274  FF                 	db	255
  1715   00F275  FF                 	db	255
  1716   00F276  FF                 	db	255
  1717   00F277  FF                 	db	255
  1718   00F278  FF                 	db	255
  1719   00F279  FF                 	db	255
  1720   00F27A  FF                 	db	255
  1721   00F27B  FF                 	db	255
  1722   00F27C  FF                 	db	255
  1723   00F27D  FF                 	db	255
  1724   00F27E  FF                 	db	255
  1725   00F27F  FF                 	db	255
  1726   00F280  FF                 	db	255
  1727   00F281  FF                 	db	255
  1728   00F282  FF                 	db	255
  1729   00F283  FF                 	db	255
  1730   00F284  FF                 	db	255
  1731   00F285  FF                 	db	255
  1732   00F286  FF                 	db	255
  1733   00F287  FF                 	db	255
  1734   00F288  FF                 	db	255
  1735   00F289  FF                 	db	255
  1736   00F28A  FF                 	db	255
  1737   00F28B  FF                 	db	255
  1738   00F28C  FF                 	db	255
  1739   00F28D  FF                 	db	255
  1740   00F28E  FF                 	db	255
  1741   00F28F  FF                 	db	255
  1742   00F290  FF                 	db	255
  1743   00F291  FF                 	db	255
  1744   00F292  FF                 	db	255
  1745   00F293  FF                 	db	255
  1746   00F294  FF                 	db	255
  1747   00F295  FF                 	db	255
  1748   00F296  FF                 	db	255
  1749   00F297  FF                 	db	255
  1750   00F298  FF                 	db	255
  1751   00F299  FF                 	db	255
  1752   00F29A  FF                 	db	255
  1753   00F29B  FF                 	db	255
  1754   00F29C  FF                 	db	255
  1755   00F29D  FF                 	db	255
  1756   00F29E  FF                 	db	255
  1757   00F29F  FF                 	db	255
  1758   00F2A0  FF                 	db	255
  1759   00F2A1  FF                 	db	255
  1760   00F2A2  FF                 	db	255
  1761   00F2A3  FF                 	db	255
  1762   00F2A4  FF                 	db	255
  1763   00F2A5  FF                 	db	255
  1764   00F2A6  FF                 	db	255
  1765   00F2A7  FF                 	db	255
  1766   00F2A8  FF                 	db	255
  1767   00F2A9  FF                 	db	255
  1768   00F2AA  FF                 	db	255
  1769   00F2AB  FF                 	db	255
  1770   00F2AC  FF                 	db	255
  1771   00F2AD  FF                 	db	255
  1772   00F2AE  FF                 	db	255
  1773   00F2AF  FF                 	db	255
  1774   00F2B0  FF                 	db	255
  1775   00F2B1  FF                 	db	255
  1776   00F2B2  FF                 	db	255
  1777   00F2B3  FF                 	db	255
  1778   00F2B4  FF                 	db	255
  1779   00F2B5  FF                 	db	255
  1780   00F2B6  FF                 	db	255
  1781   00F2B7  FF                 	db	255
  1782   00F2B8  FF                 	db	255
  1783   00F2B9  FF                 	db	255
  1784   00F2BA  FF                 	db	255
  1785   00F2BB  FF                 	db	255
  1786   00F2BC  FF                 	db	255
  1787   00F2BD  FF                 	db	255
  1788   00F2BE  FF                 	db	255
  1789   00F2BF  FF                 	db	255
  1790   00F2C0  FF                 	db	255
  1791   00F2C1  FF                 	db	255
  1792   00F2C2  FF                 	db	255
  1793   00F2C3  FF                 	db	255
  1794   00F2C4  FF                 	db	255
  1795   00F2C5  FF                 	db	255
  1796   00F2C6  FF                 	db	255
  1797   00F2C7  FF                 	db	255
  1798   00F2C8  FF                 	db	255
  1799   00F2C9  FF                 	db	255
  1800   00F2CA  FF                 	db	255
  1801   00F2CB  FF                 	db	255
  1802   00F2CC  FF                 	db	255
  1803   00F2CD  FF                 	db	255
  1804   00F2CE  FF                 	db	255
  1805   00F2CF  FF                 	db	255
  1806   00F2D0  FF                 	db	255
  1807   00F2D1  FF                 	db	255
  1808   00F2D2  FF                 	db	255
  1809   00F2D3  FF                 	db	255
  1810   00F2D4  FF                 	db	255
  1811   00F2D5  FF                 	db	255
  1812   00F2D6  FF                 	db	255
  1813   00F2D7  FF                 	db	255
  1814   00F2D8  FF                 	db	255
  1815   00F2D9  FF                 	db	255
  1816   00F2DA  FF                 	db	255
  1817   00F2DB  FF                 	db	255
  1818   00F2DC  FF                 	db	255
  1819   00F2DD  FF                 	db	255
  1820   00F2DE  FF                 	db	255
  1821   00F2DF  FF                 	db	255
  1822   00F2E0  FF                 	db	255
  1823   00F2E1  FF                 	db	255
  1824   00F2E2  FF                 	db	255
  1825   00F2E3  FF                 	db	255
  1826   00F2E4  FF                 	db	255
  1827   00F2E5  FF                 	db	255
  1828   00F2E6  FF                 	db	255
  1829   00F2E7  FF                 	db	255
  1830   00F2E8  FF                 	db	255
  1831   00F2E9  FF                 	db	255
  1832   00F2EA  FF                 	db	255
  1833   00F2EB  FF                 	db	255
  1834   00F2EC  FF                 	db	255
  1835   00F2ED  FF                 	db	255
  1836   00F2EE  FF                 	db	255
  1837   00F2EF  FF                 	db	255
  1838   00F2F0  FF                 	db	255
  1839   00F2F1  FF                 	db	255
  1840   00F2F2  FF                 	db	255
  1841   00F2F3  FF                 	db	255
  1842   00F2F4  FF                 	db	255
  1843   00F2F5  FF                 	db	255
  1844   00F2F6  FF                 	db	255
  1845   00F2F7  FF                 	db	255
  1846   00F2F8  FF                 	db	255
  1847   00F2F9  FF                 	db	255
  1848   00F2FA  FF                 	db	255
  1849   00F2FB  FF                 	db	255
  1850   00F2FC  FF                 	db	255
  1851   00F2FD  FF                 	db	255
  1852   00F2FE  FF                 	db	255
  1853   00F2FF  FF                 	db	255
  1854   00F300  FF                 	db	255
  1855   00F301  FF                 	db	255
  1856   00F302  FF                 	db	255
  1857   00F303  FF                 	db	255
  1858   00F304  FF                 	db	255
  1859   00F305  FF                 	db	255
  1860   00F306  FF                 	db	255
  1861   00F307  FF                 	db	255
  1862   00F308  FF                 	db	255
  1863   00F309  FF                 	db	255
  1864   00F30A  FF                 	db	255
  1865   00F30B  FF                 	db	255
  1866   00F30C  FF                 	db	255
  1867   00F30D  FF                 	db	255
  1868   00F30E  FF                 	db	255
  1869   00F30F  FF                 	db	255
  1870   00F310  FF                 	db	255
  1871   00F311  FF                 	db	255
  1872   00F312  FF                 	db	255
  1873   00F313  FF                 	db	255
  1874   00F314  FF                 	db	255
  1875   00F315  FF                 	db	255
  1876   00F316  FF                 	db	255
  1877   00F317  FF                 	db	255
  1878   00F318  FF                 	db	255
  1879   00F319  FF                 	db	255
  1880   00F31A  FF                 	db	255
  1881   00F31B  FF                 	db	255
  1882   00F31C  FF                 	db	255
  1883   00F31D  FF                 	db	255
  1884   00F31E  FF                 	db	255
  1885   00F31F  FF                 	db	255
  1886   00F320  FF                 	db	255
  1887   00F321  FF                 	db	255
  1888   00F322  FF                 	db	255
  1889   00F323  FF                 	db	255
  1890   00F324  FF                 	db	255
  1891   00F325  FF                 	db	255
  1892   00F326  FF                 	db	255
  1893   00F327  FF                 	db	255
  1894   00F328  FF                 	db	255
  1895   00F329  FF                 	db	255
  1896   00F32A  FF                 	db	255
  1897   00F32B  FF                 	db	255
  1898   00F32C  FF                 	db	255
  1899   00F32D  FF                 	db	255
  1900   00F32E  FF                 	db	255
  1901   00F32F  FF                 	db	255
  1902   00F330  FF                 	db	255
  1903   00F331  FF                 	db	255
  1904   00F332  FF                 	db	255
  1905   00F333  FF                 	db	255
  1906   00F334  FF                 	db	255
  1907   00F335  FF                 	db	255
  1908   00F336  FF                 	db	255
  1909   00F337  FF                 	db	255
  1910   00F338  FF                 	db	255
  1911   00F339  FF                 	db	255
  1912   00F33A  FF                 	db	255
  1913   00F33B  FF                 	db	255
  1914   00F33C  FF                 	db	255
  1915   00F33D  FF                 	db	255
  1916   00F33E  FF                 	db	255
  1917   00F33F  FF                 	db	255
  1918   00F340  FF                 	db	255
  1919   00F341  FF                 	db	255
  1920   00F342  FF                 	db	255
  1921   00F343  FF                 	db	255
  1922   00F344  FF                 	db	255
  1923   00F345  FF                 	db	255
  1924   00F346  FF                 	db	255
  1925   00F347  FF                 	db	255
  1926   00F348  FF                 	db	255
  1927   00F349  FF                 	db	255
  1928   00F34A  FF                 	db	255
  1929   00F34B  FF                 	db	255
  1930   00F34C  FF                 	db	255
  1931   00F34D  FF                 	db	255
  1932   00F34E  FF                 	db	255
  1933   00F34F  FF                 	db	255
  1934   00F350  FF                 	db	255
  1935   00F351  FF                 	db	255
  1936   00F352  FF                 	db	255
  1937   00F353  FF                 	db	255
  1938   00F354  FF                 	db	255
  1939   00F355  FF                 	db	255
  1940   00F356  FF                 	db	255
  1941   00F357  FF                 	db	255
  1942   00F358  FF                 	db	255
  1943   00F359  FF                 	db	255
  1944   00F35A  FF                 	db	255
  1945   00F35B  FF                 	db	255
  1946   00F35C  FF                 	db	255
  1947   00F35D  FF                 	db	255
  1948   00F35E  FF                 	db	255
  1949   00F35F  FF                 	db	255
  1950   00F360  FF                 	db	255
  1951   00F361  FF                 	db	255
  1952   00F362  FF                 	db	255
  1953   00F363  FF                 	db	255
  1954   00F364  FF                 	db	255
  1955   00F365  FF                 	db	255
  1956   00F366  FF                 	db	255
  1957   00F367  FF                 	db	255
  1958   00F368  FF                 	db	255
  1959   00F369  FF                 	db	255
  1960   00F36A  FF                 	db	255
  1961   00F36B  FF                 	db	255
  1962   00F36C  FF                 	db	255
  1963   00F36D  FF                 	db	255
  1964   00F36E  FF                 	db	255
  1965   00F36F  FF                 	db	255
  1966   00F370  FF                 	db	255
  1967   00F371  FF                 	db	255
  1968   00F372  FF                 	db	255
  1969   00F373  FF                 	db	255
  1970   00F374  FF                 	db	255
  1971   00F375  FF                 	db	255
  1972   00F376  FF                 	db	255
  1973   00F377  FF                 	db	255
  1974   00F378  FF                 	db	255
  1975   00F379  FF                 	db	255
  1976   00F37A  FF                 	db	255
  1977   00F37B  FF                 	db	255
  1978   00F37C  FF                 	db	255
  1979   00F37D  FF                 	db	255
  1980   00F37E  FF                 	db	255
  1981   00F37F  FF                 	db	255
  1982   00F380  FF                 	db	255
  1983   00F381  FF                 	db	255
  1984   00F382  FF                 	db	255
  1985   00F383  FF                 	db	255
  1986   00F384  FF                 	db	255
  1987   00F385  FF                 	db	255
  1988   00F386  FF                 	db	255
  1989   00F387  FF                 	db	255
  1990   00F388  FF                 	db	255
  1991   00F389  FF                 	db	255
  1992   00F38A  FF                 	db	255
  1993   00F38B  FF                 	db	255
  1994   00F38C  FF                 	db	255
  1995   00F38D  FF                 	db	255
  1996   00F38E  FF                 	db	255
  1997   00F38F  FF                 	db	255
  1998   00F390  FF                 	db	255
  1999   00F391  FF                 	db	255
  2000   00F392  FF                 	db	255
  2001   00F393  FF                 	db	255
  2002   00F394  FF                 	db	255
  2003   00F395  FF                 	db	255
  2004   00F396  FF                 	db	255
  2005   00F397  FF                 	db	255
  2006   00F398  FF                 	db	255
  2007   00F399  FF                 	db	255
  2008   00F39A  FF                 	db	255
  2009   00F39B  FF                 	db	255
  2010   00F39C  FF                 	db	255
  2011   00F39D  FF                 	db	255
  2012   00F39E  FF                 	db	255
  2013   00F39F  FF                 	db	255
  2014   00F3A0  FF                 	db	255
  2015   00F3A1  FF                 	db	255
  2016   00F3A2  FF                 	db	255
  2017   00F3A3  FF                 	db	255
  2018   00F3A4  FF                 	db	255
  2019   00F3A5  FF                 	db	255
  2020   00F3A6  FF                 	db	255
  2021   00F3A7  FF                 	db	255
  2022   00F3A8  FF                 	db	255
  2023   00F3A9  FF                 	db	255
  2024   00F3AA  FF                 	db	255
  2025   00F3AB  FF                 	db	255
  2026   00F3AC  FF                 	db	255
  2027   00F3AD  FF                 	db	255
  2028   00F3AE  FF                 	db	255
  2029   00F3AF  FF                 	db	255
  2030   00F3B0  FF                 	db	255
  2031   00F3B1  FF                 	db	255
  2032   00F3B2  FF                 	db	255
  2033   00F3B3  FF                 	db	255
  2034   00F3B4  FF                 	db	255
  2035   00F3B5  FF                 	db	255
  2036   00F3B6  FF                 	db	255
  2037   00F3B7  FF                 	db	255
  2038   00F3B8  FF                 	db	255
  2039   00F3B9  FF                 	db	255
  2040   00F3BA  FF                 	db	255
  2041   00F3BB  FF                 	db	255
  2042   00F3BC  FF                 	db	255
  2043   00F3BD  FF                 	db	255
  2044   00F3BE  FF                 	db	255
  2045   00F3BF  FF                 	db	255
  2046   00F3C0  FF                 	db	255
  2047   00F3C1  FF                 	db	255
  2048   00F3C2  FF                 	db	255
  2049   00F3C3  FF                 	db	255
  2050   00F3C4  FF                 	db	255
  2051   00F3C5  FF                 	db	255
  2052   00F3C6  FF                 	db	255
  2053   00F3C7  FF                 	db	255
  2054   00F3C8  FF                 	db	255
  2055   00F3C9  FF                 	db	255
  2056   00F3CA  FF                 	db	255
  2057   00F3CB  FF                 	db	255
  2058   00F3CC  FF                 	db	255
  2059   00F3CD  FF                 	db	255
  2060   00F3CE  FF                 	db	255
  2061   00F3CF  FF                 	db	255
  2062   00F3D0  FF                 	db	255
  2063   00F3D1  FF                 	db	255
  2064   00F3D2  FF                 	db	255
  2065   00F3D3  FF                 	db	255
  2066   00F3D4  FF                 	db	255
  2067   00F3D5  FF                 	db	255
  2068   00F3D6  FF                 	db	255
  2069   00F3D7  FF                 	db	255
  2070   00F3D8  FF                 	db	255
  2071   00F3D9  FF                 	db	255
  2072   00F3DA  FF                 	db	255
  2073   00F3DB  FF                 	db	255
  2074   00F3DC  FF                 	db	255
  2075   00F3DD  FF                 	db	255
  2076   00F3DE  FF                 	db	255
  2077   00F3DF  FF                 	db	255
  2078   00F3E0  FF                 	db	255
  2079   00F3E1  FF                 	db	255
  2080   00F3E2  FF                 	db	255
  2081   00F3E3  FF                 	db	255
  2082   00F3E4  FF                 	db	255
  2083   00F3E5  FF                 	db	255
  2084   00F3E6  FF                 	db	255
  2085   00F3E7  FF                 	db	255
  2086   00F3E8  FF                 	db	255
  2087   00F3E9  FF                 	db	255
  2088   00F3EA  FF                 	db	255
  2089   00F3EB  FF                 	db	255
  2090   00F3EC  FF                 	db	255
  2091   00F3ED  FF                 	db	255
  2092   00F3EE  FF                 	db	255
  2093   00F3EF  FF                 	db	255
  2094   00F3F0  FF                 	db	255
  2095   00F3F1  FF                 	db	255
  2096   00F3F2  FF                 	db	255
  2097   00F3F3  FF                 	db	255
  2098   00F3F4  FF                 	db	255
  2099   00F3F5  FF                 	db	255
  2100   00F3F6  FF                 	db	255
  2101   00F3F7  FF                 	db	255
  2102   00F3F8  FF                 	db	255
  2103   00F3F9  FF                 	db	255
  2104   00F3FA  FF                 	db	255
  2105   00F3FB  FF                 	db	255
  2106   00F3FC  FF                 	db	255
  2107   00F3FD  FF                 	db	255
  2108   00F3FE  FF                 	db	255
  2109   00F3FF  FF                 	db	255
  2110   00F400  FF                 	db	255
  2111   00F401  FF                 	db	255
  2112   00F402  FF                 	db	255
  2113   00F403  FF                 	db	255
  2114   00F404  FF                 	db	255
  2115   00F405  FF                 	db	255
  2116   00F406  FF                 	db	255
  2117   00F407  FF                 	db	255
  2118   00F408  FF                 	db	255
  2119   00F409  FF                 	db	255
  2120   00F40A  FF                 	db	255
  2121   00F40B  FF                 	db	255
  2122   00F40C  FF                 	db	255
  2123   00F40D  FF                 	db	255
  2124   00F40E  FF                 	db	255
  2125   00F40F  FF                 	db	255
  2126   00F410  FF                 	db	255
  2127   00F411  FF                 	db	255
  2128   00F412  FF                 	db	255
  2129   00F413  FF                 	db	255
  2130   00F414  FF                 	db	255
  2131   00F415  FF                 	db	255
  2132   00F416  FF                 	db	255
  2133   00F417  FF                 	db	255
  2134   00F418  FF                 	db	255
  2135   00F419  FF                 	db	255
  2136   00F41A  FF                 	db	255
  2137   00F41B  FF                 	db	255
  2138   00F41C  FF                 	db	255
  2139   00F41D  FF                 	db	255
  2140   00F41E  FF                 	db	255
  2141   00F41F  FF                 	db	255
  2142   00F420  FF                 	db	255
  2143   00F421  FF                 	db	255
  2144   00F422  FF                 	db	255
  2145   00F423  FF                 	db	255
  2146   00F424  FF                 	db	255
  2147   00F425  FF                 	db	255
  2148   00F426  FF                 	db	255
  2149   00F427  FF                 	db	255
  2150   00F428  FF                 	db	255
  2151   00F429  FF                 	db	255
  2152   00F42A  FF                 	db	255
  2153   00F42B  FF                 	db	255
  2154   00F42C  FF                 	db	255
  2155   00F42D  FF                 	db	255
  2156   00F42E  FF                 	db	255
  2157   00F42F  FF                 	db	255
  2158   00F430  FF                 	db	255
  2159   00F431  FF                 	db	255
  2160   00F432  FF                 	db	255
  2161   00F433  FF                 	db	255
  2162   00F434  FF                 	db	255
  2163   00F435  FF                 	db	255
  2164   00F436  FF                 	db	255
  2165   00F437  FF                 	db	255
  2166   00F438  FF                 	db	255
  2167   00F439  FF                 	db	255
  2168   00F43A  FF                 	db	255
  2169   00F43B  FF                 	db	255
  2170   00F43C  FF                 	db	255
  2171   00F43D  FF                 	db	255
  2172   00F43E  FF                 	db	255
  2173   00F43F  FF                 	db	255
  2174   00F440  FF                 	db	255
  2175   00F441  FF                 	db	255
  2176   00F442  FF                 	db	255
  2177   00F443  FF                 	db	255
  2178   00F444  FF                 	db	255
  2179   00F445  FF                 	db	255
  2180   00F446  FF                 	db	255
  2181   00F447  FF                 	db	255
  2182   00F448  FF                 	db	255
  2183   00F449  FF                 	db	255
  2184   00F44A  FF                 	db	255
  2185   00F44B  FF                 	db	255
  2186   00F44C  FF                 	db	255
  2187   00F44D  FF                 	db	255
  2188   00F44E  FF                 	db	255
  2189   00F44F  FF                 	db	255
  2190   00F450  FF                 	db	255
  2191   00F451  FF                 	db	255
  2192   00F452  FF                 	db	255
  2193   00F453  FF                 	db	255
  2194   00F454  FF                 	db	255
  2195   00F455  FF                 	db	255
  2196   00F456  FF                 	db	255
  2197   00F457  FF                 	db	255
  2198   00F458  FF                 	db	255
  2199   00F459  FF                 	db	255
  2200   00F45A  FF                 	db	255
  2201   00F45B  FF                 	db	255
  2202   00F45C  FF                 	db	255
  2203   00F45D  FF                 	db	255
  2204   00F45E  FF                 	db	255
  2205   00F45F  FF                 	db	255
  2206   00F460  FF                 	db	255
  2207   00F461  FF                 	db	255
  2208   00F462  FF                 	db	255
  2209   00F463  FF                 	db	255
  2210   00F464  FF                 	db	255
  2211   00F465  FF                 	db	255
  2212   00F466  FF                 	db	255
  2213   00F467  FF                 	db	255
  2214   00F468  FF                 	db	255
  2215   00F469  FF                 	db	255
  2216   00F46A  FF                 	db	255
  2217   00F46B  FF                 	db	255
  2218   00F46C  FF                 	db	255
  2219   00F46D  FF                 	db	255
  2220   00F46E  FF                 	db	255
  2221   00F46F  FF                 	db	255
  2222   00F470  FF                 	db	255
  2223   00F471  FF                 	db	255
  2224   00F472  FF                 	db	255
  2225   00F473  FF                 	db	255
  2226   00F474  FF                 	db	255
  2227   00F475  FF                 	db	255
  2228   00F476  FF                 	db	255
  2229   00F477  FF                 	db	255
  2230   00F478  FF                 	db	255
  2231   00F479  FF                 	db	255
  2232   00F47A  FF                 	db	255
  2233   00F47B  FF                 	db	255
  2234   00F47C  FF                 	db	255
  2235   00F47D  FF                 	db	255
  2236   00F47E  FF                 	db	255
  2237   00F47F  FF                 	db	255
  2238   00F480  FF                 	db	255
  2239   00F481  FF                 	db	255
  2240   00F482  FF                 	db	255
  2241   00F483  FF                 	db	255
  2242   00F484  FF                 	db	255
  2243   00F485  FF                 	db	255
  2244   00F486  FF                 	db	255
  2245   00F487  FF                 	db	255
  2246   00F488  FF                 	db	255
  2247   00F489  FF                 	db	255
  2248   00F48A  FF                 	db	255
  2249   00F48B  FF                 	db	255
  2250   00F48C  FF                 	db	255
  2251   00F48D  FF                 	db	255
  2252   00F48E  FF                 	db	255
  2253   00F48F  FF                 	db	255
  2254   00F490  FF                 	db	255
  2255   00F491  FF                 	db	255
  2256   00F492  FF                 	db	255
  2257   00F493  FF                 	db	255
  2258   00F494  FF                 	db	255
  2259   00F495  FF                 	db	255
  2260   00F496  FF                 	db	255
  2261   00F497  FF                 	db	255
  2262   00F498  FF                 	db	255
  2263   00F499  FF                 	db	255
  2264   00F49A  FF                 	db	255
  2265   00F49B  FF                 	db	255
  2266   00F49C  FF                 	db	255
  2267   00F49D  FF                 	db	255
  2268   00F49E  FF                 	db	255
  2269   00F49F  FF                 	db	255
  2270   00F4A0  FF                 	db	255
  2271   00F4A1  FF                 	db	255
  2272   00F4A2  FF                 	db	255
  2273   00F4A3  FF                 	db	255
  2274   00F4A4  FF                 	db	255
  2275   00F4A5  FF                 	db	255
  2276   00F4A6  FF                 	db	255
  2277   00F4A7  FF                 	db	255
  2278   00F4A8  FF                 	db	255
  2279   00F4A9  FF                 	db	255
  2280   00F4AA  FF                 	db	255
  2281   00F4AB  FF                 	db	255
  2282   00F4AC  FF                 	db	255
  2283   00F4AD  FF                 	db	255
  2284   00F4AE  FF                 	db	255
  2285   00F4AF  FF                 	db	255
  2286   00F4B0  FF                 	db	255
  2287   00F4B1  FF                 	db	255
  2288   00F4B2  FF                 	db	255
  2289   00F4B3  FF                 	db	255
  2290   00F4B4  FF                 	db	255
  2291   00F4B5  FF                 	db	255
  2292   00F4B6  FF                 	db	255
  2293   00F4B7  FF                 	db	255
  2294   00F4B8  FF                 	db	255
  2295   00F4B9  FF                 	db	255
  2296   00F4BA  FF                 	db	255
  2297   00F4BB  FF                 	db	255
  2298   00F4BC  FF                 	db	255
  2299   00F4BD  FF                 	db	255
  2300   00F4BE  FF                 	db	255
  2301   00F4BF  FF                 	db	255
  2302   00F4C0  FF                 	db	255
  2303   00F4C1  FF                 	db	255
  2304   00F4C2  FF                 	db	255
  2305   00F4C3  FF                 	db	255
  2306   00F4C4  FF                 	db	255
  2307   00F4C5  FF                 	db	255
  2308   00F4C6  FF                 	db	255
  2309   00F4C7  FF                 	db	255
  2310   00F4C8  FF                 	db	255
  2311   00F4C9  FF                 	db	255
  2312   00F4CA  FF                 	db	255
  2313   00F4CB  FF                 	db	255
  2314   00F4CC  FF                 	db	255
  2315   00F4CD  FF                 	db	255
  2316   00F4CE  FF                 	db	255
  2317   00F4CF  FF                 	db	255
  2318   00F4D0  FF                 	db	255
  2319   00F4D1  FF                 	db	255
  2320   00F4D2  FF                 	db	255
  2321   00F4D3  FF                 	db	255
  2322   00F4D4  FF                 	db	255
  2323   00F4D5  FF                 	db	255
  2324   00F4D6  FF                 	db	255
  2325   00F4D7  FF                 	db	255
  2326   00F4D8  FF                 	db	255
  2327   00F4D9  FF                 	db	255
  2328   00F4DA  FF                 	db	255
  2329   00F4DB  FF                 	db	255
  2330   00F4DC  FF                 	db	255
  2331   00F4DD  FF                 	db	255
  2332   00F4DE  FF                 	db	255
  2333   00F4DF  FF                 	db	255
  2334   00F4E0  FF                 	db	255
  2335   00F4E1  FF                 	db	255
  2336   00F4E2  FF                 	db	255
  2337   00F4E3  FF                 	db	255
  2338   00F4E4  FF                 	db	255
  2339   00F4E5  FF                 	db	255
  2340   00F4E6  FF                 	db	255
  2341   00F4E7  FF                 	db	255
  2342   00F4E8  FF                 	db	255
  2343   00F4E9  FF                 	db	255
  2344   00F4EA  FF                 	db	255
  2345   00F4EB  FF                 	db	255
  2346   00F4EC  FF                 	db	255
  2347   00F4ED  FF                 	db	255
  2348   00F4EE  FF                 	db	255
  2349   00F4EF  FF                 	db	255
  2350   00F4F0  FF                 	db	255
  2351   00F4F1  FF                 	db	255
  2352   00F4F2  FF                 	db	255
  2353   00F4F3  FF                 	db	255
  2354   00F4F4  FF                 	db	255
  2355   00F4F5  FF                 	db	255
  2356   00F4F6  FF                 	db	255
  2357   00F4F7  FF                 	db	255
  2358   00F4F8  FF                 	db	255
  2359   00F4F9  FF                 	db	255
  2360   00F4FA  FF                 	db	255
  2361   00F4FB  FF                 	db	255
  2362   00F4FC  FF                 	db	255
  2363   00F4FD  FF                 	db	255
  2364   00F4FE  FF                 	db	255
  2365   00F4FF  FF                 	db	255
  2366   00F500  FF                 	db	255
  2367   00F501  FF                 	db	255
  2368   00F502  FF                 	db	255
  2369   00F503  FF                 	db	255
  2370   00F504  FF                 	db	255
  2371   00F505  FF                 	db	255
  2372   00F506  FF                 	db	255
  2373   00F507  FF                 	db	255
  2374   00F508  FF                 	db	255
  2375   00F509  FF                 	db	255
  2376   00F50A  FF                 	db	255
  2377   00F50B  FF                 	db	255
  2378   00F50C  FF                 	db	255
  2379   00F50D  FF                 	db	255
  2380   00F50E  FF                 	db	255
  2381   00F50F  FF                 	db	255
  2382   00F510  FF                 	db	255
  2383   00F511  FF                 	db	255
  2384   00F512  FF                 	db	255
  2385   00F513  FF                 	db	255
  2386   00F514  FF                 	db	255
  2387   00F515  FF                 	db	255
  2388   00F516  FF                 	db	255
  2389   00F517  FF                 	db	255
  2390   00F518  FF                 	db	255
  2391   00F519  FF                 	db	255
  2392   00F51A  FF                 	db	255
  2393   00F51B  FF                 	db	255
  2394   00F51C  FF                 	db	255
  2395   00F51D  FF                 	db	255
  2396   00F51E  FF                 	db	255
  2397   00F51F  FF                 	db	255
  2398   00F520  FF                 	db	255
  2399   00F521  FF                 	db	255
  2400   00F522  FF                 	db	255
  2401   00F523  FF                 	db	255
  2402   00F524  FF                 	db	255
  2403   00F525  FF                 	db	255
  2404   00F526  FF                 	db	255
  2405   00F527  FF                 	db	255
  2406   00F528  FF                 	db	255
  2407   00F529  FF                 	db	255
  2408   00F52A  FF                 	db	255
  2409   00F52B  FF                 	db	255
  2410   00F52C  FF                 	db	255
  2411   00F52D  FF                 	db	255
  2412   00F52E  FF                 	db	255
  2413   00F52F  FF                 	db	255
  2414   00F530  FF                 	db	255
  2415   00F531  FF                 	db	255
  2416   00F532  FF                 	db	255
  2417   00F533  FF                 	db	255
  2418   00F534  FF                 	db	255
  2419   00F535  FF                 	db	255
  2420   00F536  FF                 	db	255
  2421   00F537  FF                 	db	255
  2422   00F538  FF                 	db	255
  2423   00F539  FF                 	db	255
  2424   00F53A  FF                 	db	255
  2425   00F53B  FF                 	db	255
  2426   00F53C  FF                 	db	255
  2427   00F53D  FF                 	db	255
  2428   00F53E  FF                 	db	255
  2429   00F53F  FF                 	db	255
  2430   00F540  FF                 	db	255
  2431   00F541  FF                 	db	255
  2432   00F542  FF                 	db	255
  2433   00F543  FF                 	db	255
  2434   00F544  FF                 	db	255
  2435   00F545  FF                 	db	255
  2436   00F546  FF                 	db	255
  2437   00F547  FF                 	db	255
  2438   00F548  FF                 	db	255
  2439   00F549  FF                 	db	255
  2440   00F54A  FF                 	db	255
  2441   00F54B  FF                 	db	255
  2442   00F54C  FF                 	db	255
  2443   00F54D  FF                 	db	255
  2444   00F54E  FF                 	db	255
  2445   00F54F  FF                 	db	255
  2446   00F550  FF                 	db	255
  2447   00F551  FF                 	db	255
  2448   00F552  FF                 	db	255
  2449   00F553  FF                 	db	255
  2450   00F554  FF                 	db	255
  2451   00F555  FF                 	db	255
  2452   00F556  FF                 	db	255
  2453   00F557  FF                 	db	255
  2454   00F558  FF                 	db	255
  2455   00F559  FF                 	db	255
  2456   00F55A  FF                 	db	255
  2457   00F55B  FF                 	db	255
  2458   00F55C  FF                 	db	255
  2459   00F55D  FF                 	db	255
  2460   00F55E  FF                 	db	255
  2461   00F55F  FF                 	db	255
  2462   00F560  FF                 	db	255
  2463   00F561  FF                 	db	255
  2464   00F562  FF                 	db	255
  2465   00F563  FF                 	db	255
  2466   00F564  FF                 	db	255
  2467   00F565  FF                 	db	255
  2468   00F566  FF                 	db	255
  2469   00F567  FF                 	db	255
  2470   00F568  FF                 	db	255
  2471   00F569  FF                 	db	255
  2472   00F56A  FF                 	db	255
  2473   00F56B  FF                 	db	255
  2474   00F56C  FF                 	db	255
  2475   00F56D  FF                 	db	255
  2476   00F56E  FF                 	db	255
  2477   00F56F  FF                 	db	255
  2478   00F570  FF                 	db	255
  2479   00F571  FF                 	db	255
  2480   00F572  FF                 	db	255
  2481   00F573  FF                 	db	255
  2482   00F574  FF                 	db	255
  2483   00F575  FF                 	db	255
  2484   00F576  FF                 	db	255
  2485   00F577  FF                 	db	255
  2486   00F578  FF                 	db	255
  2487   00F579  FF                 	db	255
  2488   00F57A  FF                 	db	255
  2489   00F57B  FF                 	db	255
  2490   00F57C  FF                 	db	255
  2491   00F57D  FF                 	db	255
  2492   00F57E  FF                 	db	255
  2493   00F57F  FF                 	db	255
  2494   00F580  FF                 	db	255
  2495   00F581  FF                 	db	255
  2496   00F582  FF                 	db	255
  2497   00F583  FF                 	db	255
  2498   00F584  FF                 	db	255
  2499   00F585  FF                 	db	255
  2500   00F586  FF                 	db	255
  2501   00F587  FF                 	db	255
  2502   00F588  FF                 	db	255
  2503   00F589  FF                 	db	255
  2504   00F58A  FF                 	db	255
  2505   00F58B  FF                 	db	255
  2506   00F58C  FF                 	db	255
  2507   00F58D  FF                 	db	255
  2508   00F58E  FF                 	db	255
  2509   00F58F  FF                 	db	255
  2510   00F590  FF                 	db	255
  2511   00F591  FF                 	db	255
  2512   00F592  FF                 	db	255
  2513   00F593  FF                 	db	255
  2514   00F594  FF                 	db	255
  2515   00F595  FF                 	db	255
  2516   00F596  FF                 	db	255
  2517   00F597  FF                 	db	255
  2518   00F598  FF                 	db	255
  2519   00F599  FF                 	db	255
  2520   00F59A  FF                 	db	255
  2521   00F59B  FF                 	db	255
  2522   00F59C  FF                 	db	255
  2523   00F59D  FF                 	db	255
  2524   00F59E  FF                 	db	255
  2525   00F59F  FF                 	db	255
  2526   00F5A0  FF                 	db	255
  2527   00F5A1  FF                 	db	255
  2528   00F5A2  FF                 	db	255
  2529   00F5A3  FF                 	db	255
  2530   00F5A4  FF                 	db	255
  2531   00F5A5  FF                 	db	255
  2532   00F5A6  FF                 	db	255
  2533   00F5A7  FF                 	db	255
  2534   00F5A8  FF                 	db	255
  2535   00F5A9  FF                 	db	255
  2536   00F5AA  FF                 	db	255
  2537   00F5AB  FF                 	db	255
  2538   00F5AC  FF                 	db	255
  2539   00F5AD  FF                 	db	255
  2540   00F5AE  FF                 	db	255
  2541   00F5AF  FF                 	db	255
  2542   00F5B0  FF                 	db	255
  2543   00F5B1  FF                 	db	255
  2544   00F5B2  FF                 	db	255
  2545   00F5B3  FF                 	db	255
  2546   00F5B4  FF                 	db	255
  2547   00F5B5  FF                 	db	255
  2548   00F5B6  FF                 	db	255
  2549   00F5B7  FF                 	db	255
  2550   00F5B8  FF                 	db	255
  2551   00F5B9  FF                 	db	255
  2552   00F5BA  FF                 	db	255
  2553   00F5BB  FF                 	db	255
  2554   00F5BC  FF                 	db	255
  2555   00F5BD  FF                 	db	255
  2556   00F5BE  FF                 	db	255
  2557   00F5BF  FF                 	db	255
  2558   00F5C0  FF                 	db	255
  2559   00F5C1  FF                 	db	255
  2560   00F5C2  FF                 	db	255
  2561   00F5C3  FF                 	db	255
  2562   00F5C4  FF                 	db	255
  2563   00F5C5  FF                 	db	255
  2564   00F5C6  FF                 	db	255
  2565   00F5C7  FF                 	db	255
  2566   00F5C8  FF                 	db	255
  2567   00F5C9  FF                 	db	255
  2568   00F5CA  FF                 	db	255
  2569   00F5CB  FF                 	db	255
  2570   00F5CC  FF                 	db	255
  2571   00F5CD  FF                 	db	255
  2572   00F5CE  FF                 	db	255
  2573   00F5CF  FF                 	db	255
  2574   00F5D0  FF                 	db	255
  2575   00F5D1  FF                 	db	255
  2576   00F5D2  FF                 	db	255
  2577   00F5D3  FF                 	db	255
  2578   00F5D4  FF                 	db	255
  2579   00F5D5  FF                 	db	255
  2580   00F5D6  FF                 	db	255
  2581   00F5D7  FF                 	db	255
  2582   00F5D8  FF                 	db	255
  2583   00F5D9  FF                 	db	255
  2584   00F5DA  FF                 	db	255
  2585   00F5DB  FF                 	db	255
  2586   00F5DC  FF                 	db	255
  2587   00F5DD  FF                 	db	255
  2588   00F5DE  FF                 	db	255
  2589   00F5DF  FF                 	db	255
  2590   00F5E0  FF                 	db	255
  2591   00F5E1  FF                 	db	255
  2592   00F5E2  FF                 	db	255
  2593   00F5E3  FF                 	db	255
  2594   00F5E4  FF                 	db	255
  2595   00F5E5  FF                 	db	255
  2596   00F5E6  FF                 	db	255
  2597   00F5E7  FF                 	db	255
  2598   00F5E8  FF                 	db	255
  2599   00F5E9  FF                 	db	255
  2600   00F5EA  FF                 	db	255
  2601   00F5EB  FF                 	db	255
  2602   00F5EC  FF                 	db	255
  2603   00F5ED  FF                 	db	255
  2604   00F5EE  FF                 	db	255
  2605   00F5EF  FF                 	db	255
  2606   00F5F0  FF                 	db	255
  2607   00F5F1  FF                 	db	255
  2608   00F5F2  FF                 	db	255
  2609   00F5F3  FF                 	db	255
  2610   00F5F4  FF                 	db	255
  2611   00F5F5  FF                 	db	255
  2612   00F5F6  FF                 	db	255
  2613   00F5F7  FF                 	db	255
  2614   00F5F8  FF                 	db	255
  2615   00F5F9  FF                 	db	255
  2616   00F5FA  FF                 	db	255
  2617   00F5FB  FF                 	db	255
  2618   00F5FC  FF                 	db	255
  2619   00F5FD  FF                 	db	255
  2620   00F5FE  FF                 	db	255
  2621   00F5FF  FF                 	db	255
  2622   00F600  FF                 	db	255
  2623   00F601  FF                 	db	255
  2624   00F602  FF                 	db	255
  2625   00F603  FF                 	db	255
  2626   00F604  FF                 	db	255
  2627   00F605  FF                 	db	255
  2628   00F606  FF                 	db	255
  2629   00F607  FF                 	db	255
  2630   00F608  FF                 	db	255
  2631   00F609  FF                 	db	255
  2632   00F60A  FF                 	db	255
  2633   00F60B  FF                 	db	255
  2634   00F60C  FF                 	db	255
  2635   00F60D  FF                 	db	255
  2636   00F60E  FF                 	db	255
  2637   00F60F  FF                 	db	255
  2638   00F610  FF                 	db	255
  2639   00F611  FF                 	db	255
  2640   00F612  FF                 	db	255
  2641   00F613  FF                 	db	255
  2642   00F614  FF                 	db	255
  2643   00F615  FF                 	db	255
  2644   00F616  FF                 	db	255
  2645   00F617  FF                 	db	255
  2646   00F618  FF                 	db	255
  2647   00F619  FF                 	db	255
  2648   00F61A  FF                 	db	255
  2649   00F61B  FF                 	db	255
  2650   00F61C  FF                 	db	255
  2651   00F61D  FF                 	db	255
  2652   00F61E  FF                 	db	255
  2653   00F61F  FF                 	db	255
  2654   00F620  FF                 	db	255
  2655   00F621  FF                 	db	255
  2656   00F622  FF                 	db	255
  2657   00F623  FF                 	db	255
  2658   00F624  FF                 	db	255
  2659   00F625  FF                 	db	255
  2660   00F626  FF                 	db	255
  2661   00F627  FF                 	db	255
  2662   00F628  FF                 	db	255
  2663   00F629  FF                 	db	255
  2664   00F62A  FF                 	db	255
  2665   00F62B  FF                 	db	255
  2666   00F62C  FF                 	db	255
  2667   00F62D  FF                 	db	255
  2668   00F62E  FF                 	db	255
  2669   00F62F  FF                 	db	255
  2670   00F630  FF                 	db	255
  2671   00F631  FF                 	db	255
  2672   00F632  FF                 	db	255
  2673   00F633  FF                 	db	255
  2674   00F634  FF                 	db	255
  2675   00F635  FF                 	db	255
  2676   00F636  FF                 	db	255
  2677   00F637  FF                 	db	255
  2678   00F638  FF                 	db	255
  2679   00F639  FF                 	db	255
  2680   00F63A  FF                 	db	255
  2681   00F63B  FF                 	db	255
  2682   00F63C  FF                 	db	255
  2683   00F63D  FF                 	db	255
  2684   00F63E  FF                 	db	255
  2685   00F63F  FF                 	db	255
  2686   00F640  FF                 	db	255
  2687   00F641  FF                 	db	255
  2688   00F642  FF                 	db	255
  2689   00F643  FF                 	db	255
  2690   00F644  FF                 	db	255
  2691   00F645  FF                 	db	255
  2692   00F646  FF                 	db	255
  2693   00F647  FF                 	db	255
  2694   00F648  FF                 	db	255
  2695   00F649  FF                 	db	255
  2696   00F64A  FF                 	db	255
  2697   00F64B  FF                 	db	255
  2698   00F64C  FF                 	db	255
  2699   00F64D  FF                 	db	255
  2700   00F64E  FF                 	db	255
  2701   00F64F  FF                 	db	255
  2702   00F650  FF                 	db	255
  2703   00F651  FF                 	db	255
  2704   00F652  FF                 	db	255
  2705   00F653  FF                 	db	255
  2706   00F654  FF                 	db	255
  2707   00F655  FF                 	db	255
  2708   00F656  FF                 	db	255
  2709   00F657  FF                 	db	255
  2710   00F658  FF                 	db	255
  2711   00F659  FF                 	db	255
  2712   00F65A  FF                 	db	255
  2713   00F65B  FF                 	db	255
  2714   00F65C  FF                 	db	255
  2715   00F65D  FF                 	db	255
  2716   00F65E  FF                 	db	255
  2717   00F65F  FF                 	db	255
  2718   00F660  FF                 	db	255
  2719   00F661  FF                 	db	255
  2720   00F662  FF                 	db	255
  2721   00F663  FF                 	db	255
  2722   00F664  FF                 	db	255
  2723   00F665  FF                 	db	255
  2724   00F666  FF                 	db	255
  2725   00F667  FF                 	db	255
  2726   00F668  FF                 	db	255
  2727   00F669  FF                 	db	255
  2728   00F66A  FF                 	db	255
  2729   00F66B  FF                 	db	255
  2730   00F66C  FF                 	db	255
  2731   00F66D  FF                 	db	255
  2732   00F66E  FF                 	db	255
  2733   00F66F  FF                 	db	255
  2734   00F670  FF                 	db	255
  2735   00F671  FF                 	db	255
  2736   00F672  FF                 	db	255
  2737   00F673  FF                 	db	255
  2738   00F674  FF                 	db	255
  2739   00F675  FF                 	db	255
  2740   00F676  FF                 	db	255
  2741   00F677  FF                 	db	255
  2742   00F678  FF                 	db	255
  2743   00F679  FF                 	db	255
  2744   00F67A  FF                 	db	255
  2745   00F67B  FF                 	db	255
  2746   00F67C  FF                 	db	255
  2747   00F67D  FF                 	db	255
  2748   00F67E  FF                 	db	255
  2749   00F67F  FF                 	db	255
  2750   00F680  FF                 	db	255
  2751   00F681  FF                 	db	255
  2752   00F682  FF                 	db	255
  2753   00F683  FF                 	db	255
  2754   00F684  FF                 	db	255
  2755   00F685  FF                 	db	255
  2756   00F686  FF                 	db	255
  2757   00F687  FF                 	db	255
  2758   00F688  FF                 	db	255
  2759   00F689  FF                 	db	255
  2760   00F68A  FF                 	db	255
  2761   00F68B  FF                 	db	255
  2762   00F68C  FF                 	db	255
  2763   00F68D  FF                 	db	255
  2764   00F68E  FF                 	db	255
  2765   00F68F  FF                 	db	255
  2766   00F690  FF                 	db	255
  2767   00F691  FF                 	db	255
  2768   00F692  FF                 	db	255
  2769   00F693  FF                 	db	255
  2770   00F694  FF                 	db	255
  2771   00F695  FF                 	db	255
  2772   00F696  FF                 	db	255
  2773   00F697  FF                 	db	255
  2774   00F698  FF                 	db	255
  2775   00F699  FF                 	db	255
  2776   00F69A  FF                 	db	255
  2777   00F69B  FF                 	db	255
  2778   00F69C  FF                 	db	255
  2779   00F69D  FF                 	db	255
  2780   00F69E  FF                 	db	255
  2781   00F69F  FF                 	db	255
  2782   00F6A0  FF                 	db	255
  2783   00F6A1  FF                 	db	255
  2784   00F6A2  FF                 	db	255
  2785   00F6A3  FF                 	db	255
  2786   00F6A4  FF                 	db	255
  2787   00F6A5  FF                 	db	255
  2788   00F6A6  FF                 	db	255
  2789   00F6A7  FF                 	db	255
  2790   00F6A8  FF                 	db	255
  2791   00F6A9  FF                 	db	255
  2792   00F6AA  FF                 	db	255
  2793   00F6AB  FF                 	db	255
  2794   00F6AC  FF                 	db	255
  2795   00F6AD  FF                 	db	255
  2796   00F6AE  FF                 	db	255
  2797   00F6AF  FF                 	db	255
  2798   00F6B0  FF                 	db	255
  2799   00F6B1  FF                 	db	255
  2800   00F6B2  FF                 	db	255
  2801   00F6B3  FF                 	db	255
  2802   00F6B4  FF                 	db	255
  2803   00F6B5  FF                 	db	255
  2804   00F6B6  FF                 	db	255
  2805   00F6B7  FF                 	db	255
  2806   00F6B8  FF                 	db	255
  2807   00F6B9  FF                 	db	255
  2808   00F6BA  FF                 	db	255
  2809   00F6BB  FF                 	db	255
  2810   00F6BC  FF                 	db	255
  2811   00F6BD  FF                 	db	255
  2812   00F6BE  FF                 	db	255
  2813   00F6BF  FF                 	db	255
  2814   00F6C0  FF                 	db	255
  2815   00F6C1  FF                 	db	255
  2816   00F6C2  FF                 	db	255
  2817   00F6C3  FF                 	db	255
  2818   00F6C4  FF                 	db	255
  2819   00F6C5  FF                 	db	255
  2820   00F6C6  FF                 	db	255
  2821   00F6C7  FF                 	db	255
  2822   00F6C8  FF                 	db	255
  2823   00F6C9  FF                 	db	255
  2824   00F6CA  FF                 	db	255
  2825   00F6CB  FF                 	db	255
  2826   00F6CC  FF                 	db	255
  2827   00F6CD  FF                 	db	255
  2828   00F6CE  FF                 	db	255
  2829   00F6CF  FF                 	db	255
  2830   00F6D0  FF                 	db	255
  2831   00F6D1  FF                 	db	255
  2832   00F6D2  FF                 	db	255
  2833   00F6D3  FF                 	db	255
  2834   00F6D4  FF                 	db	255
  2835   00F6D5  FF                 	db	255
  2836   00F6D6  FF                 	db	255
  2837   00F6D7  FF                 	db	255
  2838   00F6D8  FF                 	db	255
  2839   00F6D9  FF                 	db	255
  2840   00F6DA  FF                 	db	255
  2841   00F6DB  FF                 	db	255
  2842   00F6DC  FF                 	db	255
  2843   00F6DD  FF                 	db	255
  2844   00F6DE  FF                 	db	255
  2845   00F6DF  FF                 	db	255
  2846   00F6E0  FF                 	db	255
  2847   00F6E1  FF                 	db	255
  2848   00F6E2  FF                 	db	255
  2849   00F6E3  FF                 	db	255
  2850   00F6E4  FF                 	db	255
  2851   00F6E5  FF                 	db	255
  2852   00F6E6  FF                 	db	255
  2853   00F6E7  FF                 	db	255
  2854   00F6E8  FF                 	db	255
  2855   00F6E9  FF                 	db	255
  2856   00F6EA  FF                 	db	255
  2857   00F6EB  FF                 	db	255
  2858   00F6EC  FF                 	db	255
  2859   00F6ED  FF                 	db	255
  2860   00F6EE  FF                 	db	255
  2861   00F6EF  FF                 	db	255
  2862   00F6F0  FF                 	db	255
  2863   00F6F1  FF                 	db	255
  2864   00F6F2  FF                 	db	255
  2865   00F6F3  FF                 	db	255
  2866   00F6F4  FF                 	db	255
  2867   00F6F5  FF                 	db	255
  2868   00F6F6  FF                 	db	255
  2869   00F6F7  FF                 	db	255
  2870   00F6F8  FF                 	db	255
  2871   00F6F9  FF                 	db	255
  2872   00F6FA  FF                 	db	255
  2873   00F6FB  FF                 	db	255
  2874   00F6FC  FF                 	db	255
  2875   00F6FD  FF                 	db	255
  2876   00F6FE  FF                 	db	255
  2877   00F6FF  FF                 	db	255
  2878   00F700  FF                 	db	255
  2879   00F701  FF                 	db	255
  2880   00F702  FF                 	db	255
  2881   00F703  FF                 	db	255
  2882   00F704  FF                 	db	255
  2883   00F705  FF                 	db	255
  2884   00F706  FF                 	db	255
  2885   00F707  FF                 	db	255
  2886   00F708  FF                 	db	255
  2887   00F709  FF                 	db	255
  2888   00F70A  FF                 	db	255
  2889   00F70B  FF                 	db	255
  2890   00F70C  FF                 	db	255
  2891   00F70D  FF                 	db	255
  2892   00F70E  FF                 	db	255
  2893   00F70F  FF                 	db	255
  2894   00F710  FF                 	db	255
  2895   00F711  FF                 	db	255
  2896   00F712  FF                 	db	255
  2897   00F713  FF                 	db	255
  2898   00F714  FF                 	db	255
  2899   00F715  FF                 	db	255
  2900   00F716  FF                 	db	255
  2901   00F717  FF                 	db	255
  2902   00F718  FF                 	db	255
  2903   00F719  FF                 	db	255
  2904   00F71A  FF                 	db	255
  2905   00F71B  FF                 	db	255
  2906   00F71C  FF                 	db	255
  2907   00F71D  FF                 	db	255
  2908   00F71E  FF                 	db	255
  2909   00F71F  FF                 	db	255
  2910   00F720  FF                 	db	255
  2911   00F721  FF                 	db	255
  2912   00F722  FF                 	db	255
  2913   00F723  FF                 	db	255
  2914   00F724  FF                 	db	255
  2915   00F725  FF                 	db	255
  2916   00F726  FF                 	db	255
  2917   00F727  FF                 	db	255
  2918   00F728  FF                 	db	255
  2919   00F729  FF                 	db	255
  2920   00F72A  FF                 	db	255
  2921   00F72B  FF                 	db	255
  2922   00F72C  FF                 	db	255
  2923   00F72D  FF                 	db	255
  2924   00F72E  FF                 	db	255
  2925   00F72F  FF                 	db	255
  2926   00F730  FF                 	db	255
  2927   00F731  FF                 	db	255
  2928   00F732  FF                 	db	255
  2929   00F733  FF                 	db	255
  2930   00F734  FF                 	db	255
  2931   00F735  FF                 	db	255
  2932   00F736  FF                 	db	255
  2933   00F737  FF                 	db	255
  2934   00F738  FF                 	db	255
  2935   00F739  FF                 	db	255
  2936   00F73A  FF                 	db	255
  2937   00F73B  FF                 	db	255
  2938   00F73C  FF                 	db	255
  2939   00F73D  FF                 	db	255
  2940   00F73E  FF                 	db	255
  2941   00F73F  FF                 	db	255
  2942   00F740  FF                 	db	255
  2943   00F741  FF                 	db	255
  2944   00F742  FF                 	db	255
  2945   00F743  FF                 	db	255
  2946   00F744  FF                 	db	255
  2947   00F745  FF                 	db	255
  2948   00F746  FF                 	db	255
  2949   00F747  FF                 	db	255
  2950   00F748  FF                 	db	255
  2951   00F749  FF                 	db	255
  2952   00F74A  FF                 	db	255
  2953   00F74B  FF                 	db	255
  2954   00F74C  FF                 	db	255
  2955   00F74D  FF                 	db	255
  2956   00F74E  FF                 	db	255
  2957   00F74F  FF                 	db	255
  2958   00F750  FF                 	db	255
  2959   00F751  FF                 	db	255
  2960   00F752  FF                 	db	255
  2961   00F753  FF                 	db	255
  2962   00F754  FF                 	db	255
  2963   00F755  FF                 	db	255
  2964   00F756  FF                 	db	255
  2965   00F757  FF                 	db	255
  2966   00F758  FF                 	db	255
  2967   00F759  FF                 	db	255
  2968   00F75A  FF                 	db	255
  2969   00F75B  FF                 	db	255
  2970   00F75C  FF                 	db	255
  2971   00F75D  FF                 	db	255
  2972   00F75E  FF                 	db	255
  2973   00F75F  FF                 	db	255
  2974   00F760  FF                 	db	255
  2975   00F761  FF                 	db	255
  2976   00F762  FF                 	db	255
  2977   00F763  FF                 	db	255
  2978   00F764  FF                 	db	255
  2979   00F765  FF                 	db	255
  2980   00F766  FF                 	db	255
  2981   00F767  FF                 	db	255
  2982   00F768  FF                 	db	255
  2983   00F769  FF                 	db	255
  2984   00F76A  FF                 	db	255
  2985   00F76B  FF                 	db	255
  2986   00F76C  FF                 	db	255
  2987   00F76D  FF                 	db	255
  2988   00F76E  FF                 	db	255
  2989   00F76F  FF                 	db	255
  2990   00F770  FF                 	db	255
  2991   00F771  FF                 	db	255
  2992   00F772  FF                 	db	255
  2993   00F773  FF                 	db	255
  2994   00F774  FF                 	db	255
  2995   00F775  FF                 	db	255
  2996   00F776  FF                 	db	255
  2997   00F777  FF                 	db	255
  2998   00F778  FF                 	db	255
  2999   00F779  FF                 	db	255
  3000   00F77A  FF                 	db	255
  3001   00F77B  FF                 	db	255
  3002   00F77C  FF                 	db	255
  3003   00F77D  FF                 	db	255
  3004   00F77E  FF                 	db	255
  3005   00F77F  FF                 	db	255
  3006   00F780  FF                 	db	255
  3007   00F781  FF                 	db	255
  3008   00F782  FF                 	db	255
  3009   00F783  FF                 	db	255
  3010   00F784  FF                 	db	255
  3011   00F785  FF                 	db	255
  3012   00F786  FF                 	db	255
  3013   00F787  FF                 	db	255
  3014   00F788  FF                 	db	255
  3015   00F789  FF                 	db	255
  3016   00F78A  FF                 	db	255
  3017   00F78B  FF                 	db	255
  3018   00F78C  FF                 	db	255
  3019   00F78D  FF                 	db	255
  3020   00F78E  FF                 	db	255
  3021   00F78F  FF                 	db	255
  3022   00F790  FF                 	db	255
  3023   00F791  FF                 	db	255
  3024   00F792  FF                 	db	255
  3025   00F793  FF                 	db	255
  3026   00F794  FF                 	db	255
  3027   00F795  FF                 	db	255
  3028   00F796  FF                 	db	255
  3029   00F797  FF                 	db	255
  3030   00F798  FF                 	db	255
  3031   00F799  FF                 	db	255
  3032   00F79A  FF                 	db	255
  3033   00F79B  FF                 	db	255
  3034   00F79C  FF                 	db	255
  3035   00F79D  FF                 	db	255
  3036   00F79E  FF                 	db	255
  3037   00F79F  FF                 	db	255
  3038   00F7A0  FF                 	db	255
  3039   00F7A1  FF                 	db	255
  3040   00F7A2  FF                 	db	255
  3041   00F7A3  FF                 	db	255
  3042   00F7A4  FF                 	db	255
  3043   00F7A5  FF                 	db	255
  3044   00F7A6  FF                 	db	255
  3045   00F7A7  FF                 	db	255
  3046   00F7A8  FF                 	db	255
  3047   00F7A9  FF                 	db	255
  3048   00F7AA  FF                 	db	255
  3049   00F7AB  FF                 	db	255
  3050   00F7AC  FF                 	db	255
  3051   00F7AD  FF                 	db	255
  3052   00F7AE  FF                 	db	255
  3053   00F7AF  FF                 	db	255
  3054   00F7B0  FF                 	db	255
  3055   00F7B1  FF                 	db	255
  3056   00F7B2  FF                 	db	255
  3057   00F7B3  FF                 	db	255
  3058   00F7B4  FF                 	db	255
  3059   00F7B5  FF                 	db	255
  3060   00F7B6  FF                 	db	255
  3061   00F7B7  FF                 	db	255
  3062   00F7B8  FF                 	db	255
  3063   00F7B9  FF                 	db	255
  3064   00F7BA  FF                 	db	255
  3065   00F7BB  FF                 	db	255
  3066   00F7BC  FF                 	db	255
  3067   00F7BD  FF                 	db	255
  3068   00F7BE  FF                 	db	255
  3069   00F7BF  FF                 	db	255
  3070   00F7C0  FF                 	db	255
  3071   00F7C1  FF                 	db	255
  3072   00F7C2  FF                 	db	255
  3073   00F7C3  FF                 	db	255
  3074   00F7C4  FF                 	db	255
  3075   00F7C5  FF                 	db	255
  3076   00F7C6  FF                 	db	255
  3077   00F7C7  FF                 	db	255
  3078   00F7C8  FF                 	db	255
  3079   00F7C9  FF                 	db	255
  3080   00F7CA  FF                 	db	255
  3081   00F7CB  FF                 	db	255
  3082   00F7CC  FF                 	db	255
  3083   00F7CD  FF                 	db	255
  3084   00F7CE  FF                 	db	255
  3085   00F7CF  FF                 	db	255
  3086   00F7D0  FF                 	db	255
  3087   00F7D1  FF                 	db	255
  3088   00F7D2  FF                 	db	255
  3089   00F7D3  FF                 	db	255
  3090   00F7D4  FF                 	db	255
  3091   00F7D5  FF                 	db	255
  3092   00F7D6  FF                 	db	255
  3093   00F7D7  FF                 	db	255
  3094   00F7D8  FF                 	db	255
  3095   00F7D9  FF                 	db	255
  3096   00F7DA  FF                 	db	255
  3097   00F7DB  FF                 	db	255
  3098   00F7DC  FF                 	db	255
  3099   00F7DD  FF                 	db	255
  3100   00F7DE  FF                 	db	255
  3101   00F7DF  FF                 	db	255
  3102   00F7E0  FF                 	db	255
  3103   00F7E1  FF                 	db	255
  3104   00F7E2  FF                 	db	255
  3105   00F7E3  FF                 	db	255
  3106   00F7E4  FF                 	db	255
  3107   00F7E5  FF                 	db	255
  3108   00F7E6  FF                 	db	255
  3109   00F7E7  FF                 	db	255
  3110   00F7E8  FF                 	db	255
  3111   00F7E9  FF                 	db	255
  3112   00F7EA  FF                 	db	255
  3113   00F7EB  FF                 	db	255
  3114   00F7EC  FF                 	db	255
  3115   00F7ED  FF                 	db	255
  3116   00F7EE  FF                 	db	255
  3117   00F7EF  FF                 	db	255
  3118   00F7F0  FF                 	db	255
  3119   00F7F1  FF                 	db	255
  3120   00F7F2  FF                 	db	255
  3121   00F7F3  FF                 	db	255
  3122   00F7F4  FF                 	db	255
  3123   00F7F5  FF                 	db	255
  3124   00F7F6  FF                 	db	255
  3125   00F7F7  FF                 	db	255
  3126   00F7F8  FF                 	db	255
  3127   00F7F9  FF                 	db	255
  3128   00F7FA  FF                 	db	255
  3129   00F7FB  FF                 	db	255
  3130   00F7FC  FF                 	db	255
  3131   00F7FD  FF                 	db	255
  3132   00F7FE  FF                 	db	255
  3133   00F7FF  FF                 	db	255
  3134   00F800  FF                 	db	255
  3135   00F801  FF                 	db	255
  3136   00F802  FF                 	db	255
  3137   00F803  FF                 	db	255
  3138   00F804  FF                 	db	255
  3139   00F805  FF                 	db	255
  3140   00F806  FF                 	db	255
  3141   00F807  FF                 	db	255
  3142   00F808  FF                 	db	255
  3143   00F809  FF                 	db	255
  3144   00F80A  FF                 	db	255
  3145   00F80B  FF                 	db	255
  3146   00F80C  FF                 	db	255
  3147   00F80D  FF                 	db	255
  3148   00F80E  FF                 	db	255
  3149   00F80F  FF                 	db	255
  3150   00F810  FF                 	db	255
  3151   00F811  FF                 	db	255
  3152   00F812  FF                 	db	255
  3153   00F813  FF                 	db	255
  3154   00F814  FF                 	db	255
  3155   00F815  FF                 	db	255
  3156   00F816  FF                 	db	255
  3157   00F817  FF                 	db	255
  3158   00F818  FF                 	db	255
  3159   00F819  FF                 	db	255
  3160   00F81A  FF                 	db	255
  3161   00F81B  FF                 	db	255
  3162   00F81C  FF                 	db	255
  3163   00F81D  FF                 	db	255
  3164   00F81E  FF                 	db	255
  3165   00F81F  FF                 	db	255
  3166   00F820  FF                 	db	255
  3167   00F821  FF                 	db	255
  3168   00F822  FF                 	db	255
  3169   00F823  FF                 	db	255
  3170   00F824  FF                 	db	255
  3171   00F825  FF                 	db	255
  3172   00F826  FF                 	db	255
  3173   00F827  FF                 	db	255
  3174   00F828  FF                 	db	255
  3175   00F829  FF                 	db	255
  3176   00F82A  FF                 	db	255
  3177   00F82B  FF                 	db	255
  3178   00F82C  FF                 	db	255
  3179   00F82D  FF                 	db	255
  3180   00F82E  FF                 	db	255
  3181   00F82F  FF                 	db	255
  3182   00F830  FF                 	db	255
  3183   00F831  FF                 	db	255
  3184   00F832  FF                 	db	255
  3185   00F833  FF                 	db	255
  3186   00F834  FF                 	db	255
  3187   00F835  FF                 	db	255
  3188   00F836  FF                 	db	255
  3189   00F837  FF                 	db	255
  3190   00F838  FF                 	db	255
  3191   00F839  FF                 	db	255
  3192   00F83A  FF                 	db	255
  3193   00F83B  FF                 	db	255
  3194   00F83C  FF                 	db	255
  3195   00F83D  FF                 	db	255
  3196   00F83E  FF                 	db	255
  3197   00F83F  FF                 	db	255
  3198   00F840  FF                 	db	255
  3199   00F841  FF                 	db	255
  3200   00F842  FF                 	db	255
  3201   00F843  FF                 	db	255
  3202   00F844  FF                 	db	255
  3203   00F845  FF                 	db	255
  3204   00F846  FF                 	db	255
  3205   00F847  FF                 	db	255
  3206   00F848  FF                 	db	255
  3207   00F849  FF                 	db	255
  3208   00F84A  FF                 	db	255
  3209   00F84B  FF                 	db	255
  3210   00F84C  FF                 	db	255
  3211   00F84D  FF                 	db	255
  3212   00F84E  FF                 	db	255
  3213   00F84F  FF                 	db	255
  3214   00F850  FF                 	db	255
  3215   00F851  FF                 	db	255
  3216   00F852  FF                 	db	255
  3217   00F853  FF                 	db	255
  3218   00F854  FF                 	db	255
  3219   00F855  FF                 	db	255
  3220   00F856  FF                 	db	255
  3221   00F857  FF                 	db	255
  3222   00F858  FF                 	db	255
  3223   00F859  FF                 	db	255
  3224   00F85A  FF                 	db	255
  3225   00F85B  FF                 	db	255
  3226   00F85C  FF                 	db	255
  3227   00F85D  FF                 	db	255
  3228   00F85E  FF                 	db	255
  3229   00F85F  FF                 	db	255
  3230   00F860  FF                 	db	255
  3231   00F861  FF                 	db	255
  3232   00F862  FF                 	db	255
  3233   00F863  FF                 	db	255
  3234   00F864  FF                 	db	255
  3235   00F865  FF                 	db	255
  3236   00F866  FF                 	db	255
  3237   00F867  FF                 	db	255
  3238   00F868  FF                 	db	255
  3239   00F869  FF                 	db	255
  3240   00F86A  FF                 	db	255
  3241   00F86B  FF                 	db	255
  3242   00F86C  FF                 	db	255
  3243   00F86D  FF                 	db	255
  3244   00F86E  FF                 	db	255
  3245   00F86F  FF                 	db	255
  3246   00F870  FF                 	db	255
  3247   00F871  FF                 	db	255
  3248   00F872  FF                 	db	255
  3249   00F873  FF                 	db	255
  3250   00F874  FF                 	db	255
  3251   00F875  FF                 	db	255
  3252   00F876  FF                 	db	255
  3253   00F877  FF                 	db	255
  3254   00F878  FF                 	db	255
  3255   00F879  FF                 	db	255
  3256   00F87A  FF                 	db	255
  3257   00F87B  FF                 	db	255
  3258   00F87C  FF                 	db	255
  3259   00F87D  FF                 	db	255
  3260   00F87E  FF                 	db	255
  3261   00F87F  FF                 	db	255
  3262   00F880  FF                 	db	255
  3263   00F881  FF                 	db	255
  3264   00F882  FF                 	db	255
  3265   00F883  FF                 	db	255
  3266   00F884  FF                 	db	255
  3267   00F885  FF                 	db	255
  3268   00F886  FF                 	db	255
  3269   00F887  FF                 	db	255
  3270   00F888  FF                 	db	255
  3271   00F889  FF                 	db	255
  3272   00F88A  FF                 	db	255
  3273   00F88B  FF                 	db	255
  3274   00F88C  FF                 	db	255
  3275   00F88D  FF                 	db	255
  3276   00F88E  FF                 	db	255
  3277   00F88F  FF                 	db	255
  3278   00F890  FF                 	db	255
  3279   00F891  FF                 	db	255
  3280   00F892  FF                 	db	255
  3281   00F893  FF                 	db	255
  3282   00F894  FF                 	db	255
  3283   00F895  FF                 	db	255
  3284   00F896  FF                 	db	255
  3285   00F897  FF                 	db	255
  3286   00F898  FF                 	db	255
  3287   00F899  FF                 	db	255
  3288   00F89A  FF                 	db	255
  3289   00F89B  FF                 	db	255
  3290   00F89C  FF                 	db	255
  3291   00F89D  FF                 	db	255
  3292   00F89E  FF                 	db	255
  3293   00F89F  FF                 	db	255
  3294   00F8A0  FF                 	db	255
  3295   00F8A1  FF                 	db	255
  3296   00F8A2  FF                 	db	255
  3297   00F8A3  FF                 	db	255
  3298   00F8A4  FF                 	db	255
  3299   00F8A5  FF                 	db	255
  3300   00F8A6  FF                 	db	255
  3301   00F8A7  FF                 	db	255
  3302   00F8A8  FF                 	db	255
  3303   00F8A9  FF                 	db	255
  3304   00F8AA  FF                 	db	255
  3305   00F8AB  FF                 	db	255
  3306   00F8AC  FF                 	db	255
  3307   00F8AD  FF                 	db	255
  3308   00F8AE  FF                 	db	255
  3309   00F8AF  FF                 	db	255
  3310   00F8B0  FF                 	db	255
  3311   00F8B1  FF                 	db	255
  3312   00F8B2  FF                 	db	255
  3313   00F8B3  FF                 	db	255
  3314   00F8B4  FF                 	db	255
  3315   00F8B5  FF                 	db	255
  3316   00F8B6  FF                 	db	255
  3317   00F8B7  FF                 	db	255
  3318   00F8B8  FF                 	db	255
  3319   00F8B9  FF                 	db	255
  3320   00F8BA  FF                 	db	255
  3321   00F8BB  FF                 	db	255
  3322   00F8BC  FF                 	db	255
  3323   00F8BD  FF                 	db	255
  3324   00F8BE  FF                 	db	255
  3325   00F8BF  FF                 	db	255
  3326   00F8C0  FF                 	db	255
  3327   00F8C1  FF                 	db	255
  3328   00F8C2  FF                 	db	255
  3329   00F8C3  FF                 	db	255
  3330   00F8C4  FF                 	db	255
  3331   00F8C5  FF                 	db	255
  3332   00F8C6  FF                 	db	255
  3333   00F8C7  FF                 	db	255
  3334   00F8C8  FF                 	db	255
  3335   00F8C9  FF                 	db	255
  3336   00F8CA  FF                 	db	255
  3337   00F8CB  FF                 	db	255
  3338   00F8CC  FF                 	db	255
  3339   00F8CD  FF                 	db	255
  3340   00F8CE  FF                 	db	255
  3341   00F8CF  FF                 	db	255
  3342   00F8D0  FF                 	db	255
  3343   00F8D1  FF                 	db	255
  3344   00F8D2  FF                 	db	255
  3345   00F8D3  FF                 	db	255
  3346   00F8D4  FF                 	db	255
  3347   00F8D5  FF                 	db	255
  3348   00F8D6  FF                 	db	255
  3349   00F8D7  FF                 	db	255
  3350   00F8D8  FF                 	db	255
  3351   00F8D9  FF                 	db	255
  3352   00F8DA  FF                 	db	255
  3353   00F8DB  FF                 	db	255
  3354   00F8DC  FF                 	db	255
  3355   00F8DD  FF                 	db	255
  3356   00F8DE  FF                 	db	255
  3357   00F8DF  FF                 	db	255
  3358   00F8E0  FF                 	db	255
  3359   00F8E1  FF                 	db	255
  3360   00F8E2  FF                 	db	255
  3361   00F8E3  FF                 	db	255
  3362   00F8E4  FF                 	db	255
  3363   00F8E5  FF                 	db	255
  3364   00F8E6  FF                 	db	255
  3365   00F8E7  FF                 	db	255
  3366   00F8E8  FF                 	db	255
  3367   00F8E9  FF                 	db	255
  3368   00F8EA  FF                 	db	255
  3369   00F8EB  FF                 	db	255
  3370   00F8EC  FF                 	db	255
  3371   00F8ED  FF                 	db	255
  3372   00F8EE  FF                 	db	255
  3373   00F8EF  FF                 	db	255
  3374   00F8F0  FF                 	db	255
  3375   00F8F1  FF                 	db	255
  3376   00F8F2  FF                 	db	255
  3377   00F8F3  FF                 	db	255
  3378   00F8F4  FF                 	db	255
  3379   00F8F5  FF                 	db	255
  3380   00F8F6  FF                 	db	255
  3381   00F8F7  FF                 	db	255
  3382   00F8F8  FF                 	db	255
  3383   00F8F9  FF                 	db	255
  3384   00F8FA  FF                 	db	255
  3385   00F8FB  FF                 	db	255
  3386   00F8FC  FF                 	db	255
  3387   00F8FD  FF                 	db	255
  3388   00F8FE  FF                 	db	255
  3389   00F8FF  FF                 	db	255
  3390   00F900  FF                 	db	255
  3391   00F901  FF                 	db	255
  3392   00F902  FF                 	db	255
  3393   00F903  FF                 	db	255
  3394   00F904  FF                 	db	255
  3395   00F905  FF                 	db	255
  3396   00F906  FF                 	db	255
  3397   00F907  FF                 	db	255
  3398   00F908  FF                 	db	255
  3399   00F909  FF                 	db	255
  3400   00F90A  FF                 	db	255
  3401   00F90B  FF                 	db	255
  3402   00F90C  FF                 	db	255
  3403   00F90D  FF                 	db	255
  3404   00F90E  FF                 	db	255
  3405   00F90F  FF                 	db	255
  3406   00F910  FF                 	db	255
  3407   00F911  FF                 	db	255
  3408   00F912  FF                 	db	255
  3409   00F913  FF                 	db	255
  3410   00F914  FF                 	db	255
  3411   00F915  FF                 	db	255
  3412   00F916  FF                 	db	255
  3413   00F917  FF                 	db	255
  3414   00F918  FF                 	db	255
  3415   00F919  FF                 	db	255
  3416   00F91A  FF                 	db	255
  3417   00F91B  FF                 	db	255
  3418   00F91C  FF                 	db	255
  3419   00F91D  FF                 	db	255
  3420   00F91E  FF                 	db	255
  3421   00F91F  FF                 	db	255
  3422   00F920  FF                 	db	255
  3423   00F921  FF                 	db	255
  3424   00F922  FF                 	db	255
  3425   00F923  FF                 	db	255
  3426   00F924  FF                 	db	255
  3427   00F925  FF                 	db	255
  3428   00F926  FF                 	db	255
  3429   00F927  FF                 	db	255
  3430   00F928  FF                 	db	255
  3431   00F929  FF                 	db	255
  3432   00F92A  FF                 	db	255
  3433   00F92B  FF                 	db	255
  3434   00F92C  FF                 	db	255
  3435   00F92D  FF                 	db	255
  3436   00F92E  FF                 	db	255
  3437   00F92F  FF                 	db	255
  3438   00F930  FF                 	db	255
  3439   00F931  FF                 	db	255
  3440   00F932  FF                 	db	255
  3441   00F933  FF                 	db	255
  3442   00F934  FF                 	db	255
  3443   00F935  FF                 	db	255
  3444   00F936  FF                 	db	255
  3445   00F937  FF                 	db	255
  3446   00F938  FF                 	db	255
  3447   00F939  FF                 	db	255
  3448   00F93A  FF                 	db	255
  3449   00F93B  FF                 	db	255
  3450   00F93C  FF                 	db	255
  3451   00F93D  FF                 	db	255
  3452   00F93E  FF                 	db	255
  3453   00F93F  FF                 	db	255
  3454   00F940  FF                 	db	255
  3455   00F941  FF                 	db	255
  3456   00F942  FF                 	db	255
  3457   00F943  FF                 	db	255
  3458   00F944  FF                 	db	255
  3459   00F945  FF                 	db	255
  3460   00F946  FF                 	db	255
  3461   00F947  FF                 	db	255
  3462   00F948  FF                 	db	255
  3463   00F949  FF                 	db	255
  3464   00F94A  FF                 	db	255
  3465   00F94B  FF                 	db	255
  3466   00F94C  FF                 	db	255
  3467   00F94D  FF                 	db	255
  3468   00F94E  FF                 	db	255
  3469   00F94F  FF                 	db	255
  3470   00F950  FF                 	db	255
  3471   00F951  FF                 	db	255
  3472   00F952  FF                 	db	255
  3473   00F953  FF                 	db	255
  3474   00F954  FF                 	db	255
  3475   00F955  FF                 	db	255
  3476   00F956  FF                 	db	255
  3477   00F957  FF                 	db	255
  3478   00F958  FF                 	db	255
  3479   00F959  FF                 	db	255
  3480   00F95A  FF                 	db	255
  3481   00F95B  FF                 	db	255
  3482   00F95C  FF                 	db	255
  3483   00F95D  FF                 	db	255
  3484   00F95E  FF                 	db	255
  3485   00F95F  FF                 	db	255
  3486   00F960  FF                 	db	255
  3487   00F961  FF                 	db	255
  3488   00F962  FF                 	db	255
  3489   00F963  FF                 	db	255
  3490   00F964  FF                 	db	255
  3491   00F965  FF                 	db	255
  3492   00F966  FF                 	db	255
  3493   00F967  FF                 	db	255
  3494   00F968  FF                 	db	255
  3495   00F969  FF                 	db	255
  3496   00F96A  FF                 	db	255
  3497   00F96B  FF                 	db	255
  3498   00F96C  FF                 	db	255
  3499   00F96D  FF                 	db	255
  3500   00F96E  FF                 	db	255
  3501   00F96F  FF                 	db	255
  3502   00F970  FF                 	db	255
  3503   00F971  FF                 	db	255
  3504   00F972  FF                 	db	255
  3505   00F973  FF                 	db	255
  3506   00F974  FF                 	db	255
  3507   00F975  FF                 	db	255
  3508   00F976  FF                 	db	255
  3509   00F977  FF                 	db	255
  3510   00F978  FF                 	db	255
  3511   00F979  FF                 	db	255
  3512   00F97A  FF                 	db	255
  3513   00F97B  FF                 	db	255
  3514   00F97C  FF                 	db	255
  3515   00F97D  FF                 	db	255
  3516   00F97E  FF                 	db	255
  3517   00F97F  FF                 	db	255
  3518   00F980  FF                 	db	255
  3519   00F981  FF                 	db	255
  3520   00F982  FF                 	db	255
  3521   00F983  FF                 	db	255
  3522   00F984  FF                 	db	255
  3523   00F985  FF                 	db	255
  3524   00F986  FF                 	db	255
  3525   00F987  FF                 	db	255
  3526   00F988  FF                 	db	255
  3527   00F989  FF                 	db	255
  3528   00F98A  FF                 	db	255
  3529   00F98B  FF                 	db	255
  3530   00F98C  FF                 	db	255
  3531   00F98D  FF                 	db	255
  3532   00F98E  FF                 	db	255
  3533   00F98F  FF                 	db	255
  3534   00F990  FF                 	db	255
  3535   00F991  FF                 	db	255
  3536   00F992  FF                 	db	255
  3537   00F993  FF                 	db	255
  3538   00F994  FF                 	db	255
  3539   00F995  FF                 	db	255
  3540   00F996  FF                 	db	255
  3541   00F997  FF                 	db	255
  3542   00F998  FF                 	db	255
  3543   00F999  FF                 	db	255
  3544   00F99A  FF                 	db	255
  3545   00F99B  FF                 	db	255
  3546   00F99C  FF                 	db	255
  3547   00F99D  FF                 	db	255
  3548   00F99E  FF                 	db	255
  3549   00F99F  FF                 	db	255
  3550   00F9A0  FF                 	db	255
  3551   00F9A1  FF                 	db	255
  3552   00F9A2  FF                 	db	255
  3553   00F9A3  FF                 	db	255
  3554   00F9A4  FF                 	db	255
  3555   00F9A5  FF                 	db	255
  3556   00F9A6  FF                 	db	255
  3557   00F9A7  FF                 	db	255
  3558   00F9A8  FF                 	db	255
  3559   00F9A9  FF                 	db	255
  3560   00F9AA  FF                 	db	255
  3561   00F9AB  FF                 	db	255
  3562   00F9AC  FF                 	db	255
  3563   00F9AD  FF                 	db	255
  3564   00F9AE  FF                 	db	255
  3565   00F9AF  FF                 	db	255
  3566   00F9B0  FF                 	db	255
  3567   00F9B1  FF                 	db	255
  3568   00F9B2  FF                 	db	255
  3569   00F9B3  FF                 	db	255
  3570   00F9B4  FF                 	db	255
  3571   00F9B5  FF                 	db	255
  3572   00F9B6  FF                 	db	255
  3573   00F9B7  FF                 	db	255
  3574   00F9B8  FF                 	db	255
  3575   00F9B9  FF                 	db	255
  3576   00F9BA  FF                 	db	255
  3577   00F9BB  FF                 	db	255
  3578   00F9BC  FF                 	db	255
  3579   00F9BD  FF                 	db	255
  3580   00F9BE  FF                 	db	255
  3581   00F9BF  FF                 	db	255
  3582   00F9C0  FF                 	db	255
  3583   00F9C1  FF                 	db	255
  3584   00F9C2  FF                 	db	255
  3585   00F9C3  FF                 	db	255
  3586   00F9C4  FF                 	db	255
  3587   00F9C5  FF                 	db	255
  3588   00F9C6  FF                 	db	255
  3589   00F9C7  FF                 	db	255
  3590   00F9C8  FF                 	db	255
  3591   00F9C9  FF                 	db	255
  3592   00F9CA  FF                 	db	255
  3593   00F9CB  FF                 	db	255
  3594   00F9CC  FF                 	db	255
  3595   00F9CD  FF                 	db	255
  3596   00F9CE  FF                 	db	255
  3597   00F9CF  FF                 	db	255
  3598   00F9D0  FF                 	db	255
  3599   00F9D1  FF                 	db	255
  3600   00F9D2  FF                 	db	255
  3601   00F9D3  FF                 	db	255
  3602   00F9D4  FF                 	db	255
  3603   00F9D5  FF                 	db	255
  3604   00F9D6  FF                 	db	255
  3605   00F9D7  FF                 	db	255
  3606   00F9D8  FF                 	db	255
  3607   00F9D9  FF                 	db	255
  3608   00F9DA  FF                 	db	255
  3609   00F9DB  FF                 	db	255
  3610   00F9DC  FF                 	db	255
  3611   00F9DD  FF                 	db	255
  3612   00F9DE  FF                 	db	255
  3613   00F9DF  FF                 	db	255
  3614   00F9E0  FF                 	db	255
  3615   00F9E1  FF                 	db	255
  3616   00F9E2  FF                 	db	255
  3617   00F9E3  FF                 	db	255
  3618   00F9E4  FF                 	db	255
  3619   00F9E5  FF                 	db	255
  3620   00F9E6  FF                 	db	255
  3621   00F9E7  FF                 	db	255
  3622   00F9E8  FF                 	db	255
  3623   00F9E9  FF                 	db	255
  3624   00F9EA  FF                 	db	255
  3625   00F9EB  FF                 	db	255
  3626   00F9EC  FF                 	db	255
  3627   00F9ED  FF                 	db	255
  3628   00F9EE  FF                 	db	255
  3629   00F9EF  FF                 	db	255
  3630   00F9F0  FF                 	db	255
  3631   00F9F1  FF                 	db	255
  3632   00F9F2  FF                 	db	255
  3633   00F9F3  FF                 	db	255
  3634   00F9F4  FF                 	db	255
  3635   00F9F5  FF                 	db	255
  3636   00F9F6  FF                 	db	255
  3637   00F9F7  FF                 	db	255
  3638   00F9F8  FF                 	db	255
  3639   00F9F9  FF                 	db	255
  3640   00F9FA  FF                 	db	255
  3641   00F9FB  FF                 	db	255
  3642   00F9FC  FF                 	db	255
  3643   00F9FD  FF                 	db	255
  3644   00F9FE  FF                 	db	255
  3645   00F9FF  FF                 	db	255
  3646   00FA00  FF                 	db	255
  3647   00FA01  FF                 	db	255
  3648   00FA02  FF                 	db	255
  3649   00FA03  FF                 	db	255
  3650   00FA04  FF                 	db	255
  3651   00FA05  FF                 	db	255
  3652   00FA06  FF                 	db	255
  3653   00FA07  FF                 	db	255
  3654   00FA08  FF                 	db	255
  3655   00FA09  FF                 	db	255
  3656   00FA0A  FF                 	db	255
  3657   00FA0B  FF                 	db	255
  3658   00FA0C  FF                 	db	255
  3659   00FA0D  FF                 	db	255
  3660   00FA0E  FF                 	db	255
  3661   00FA0F  FF                 	db	255
  3662   00FA10  FF                 	db	255
  3663   00FA11  FF                 	db	255
  3664   00FA12  FF                 	db	255
  3665   00FA13  FF                 	db	255
  3666   00FA14  FF                 	db	255
  3667   00FA15  FF                 	db	255
  3668   00FA16  FF                 	db	255
  3669   00FA17  FF                 	db	255
  3670   00FA18  FF                 	db	255
  3671   00FA19  FF                 	db	255
  3672   00FA1A  FF                 	db	255
  3673   00FA1B  FF                 	db	255
  3674   00FA1C  FF                 	db	255
  3675   00FA1D  FF                 	db	255
  3676   00FA1E  FF                 	db	255
  3677   00FA1F  FF                 	db	255
  3678   00FA20  FF                 	db	255
  3679   00FA21  FF                 	db	255
  3680   00FA22  FF                 	db	255
  3681   00FA23  FF                 	db	255
  3682   00FA24  FF                 	db	255
  3683   00FA25  FF                 	db	255
  3684   00FA26  FF                 	db	255
  3685   00FA27  FF                 	db	255
  3686   00FA28  FF                 	db	255
  3687   00FA29  FF                 	db	255
  3688   00FA2A  FF                 	db	255
  3689   00FA2B  FF                 	db	255
  3690   00FA2C  FF                 	db	255
  3691   00FA2D  FF                 	db	255
  3692   00FA2E  FF                 	db	255
  3693   00FA2F  FF                 	db	255
  3694   00FA30  FF                 	db	255
  3695   00FA31  FF                 	db	255
  3696   00FA32  FF                 	db	255
  3697   00FA33  FF                 	db	255
  3698   00FA34  FF                 	db	255
  3699   00FA35  FF                 	db	255
  3700   00FA36  FF                 	db	255
  3701   00FA37  FF                 	db	255
  3702   00FA38  FF                 	db	255
  3703   00FA39  FF                 	db	255
  3704   00FA3A  FF                 	db	255
  3705   00FA3B  FF                 	db	255
  3706   00FA3C  FF                 	db	255
  3707   00FA3D  FF                 	db	255
  3708   00FA3E  FF                 	db	255
  3709   00FA3F  FF                 	db	255
  3710   00FA40  FF                 	db	255
  3711   00FA41  FF                 	db	255
  3712   00FA42  FF                 	db	255
  3713   00FA43  FF                 	db	255
  3714   00FA44  FF                 	db	255
  3715   00FA45  FF                 	db	255
  3716   00FA46  FF                 	db	255
  3717   00FA47  FF                 	db	255
  3718   00FA48  FF                 	db	255
  3719   00FA49  FF                 	db	255
  3720   00FA4A  FF                 	db	255
  3721   00FA4B  FF                 	db	255
  3722   00FA4C  FF                 	db	255
  3723   00FA4D  FF                 	db	255
  3724   00FA4E  FF                 	db	255
  3725   00FA4F  FF                 	db	255
  3726   00FA50  FF                 	db	255
  3727   00FA51  FF                 	db	255
  3728   00FA52  FF                 	db	255
  3729   00FA53  FF                 	db	255
  3730   00FA54  FF                 	db	255
  3731   00FA55  FF                 	db	255
  3732   00FA56  FF                 	db	255
  3733   00FA57  FF                 	db	255
  3734   00FA58  FF                 	db	255
  3735   00FA59  FF                 	db	255
  3736   00FA5A  FF                 	db	255
  3737   00FA5B  FF                 	db	255
  3738   00FA5C  FF                 	db	255
  3739   00FA5D  FF                 	db	255
  3740   00FA5E  FF                 	db	255
  3741   00FA5F  FF                 	db	255
  3742   00FA60  FF                 	db	255
  3743   00FA61  FF                 	db	255
  3744   00FA62  FF                 	db	255
  3745   00FA63  FF                 	db	255
  3746   00FA64  FF                 	db	255
  3747   00FA65  FF                 	db	255
  3748   00FA66  FF                 	db	255
  3749   00FA67  FF                 	db	255
  3750   00FA68  FF                 	db	255
  3751   00FA69  FF                 	db	255
  3752   00FA6A  FF                 	db	255
  3753   00FA6B  FF                 	db	255
  3754   00FA6C  FF                 	db	255
  3755   00FA6D  FF                 	db	255
  3756   00FA6E  FF                 	db	255
  3757   00FA6F  FF                 	db	255
  3758   00FA70  FF                 	db	255
  3759   00FA71  FF                 	db	255
  3760   00FA72  FF                 	db	255
  3761   00FA73  FF                 	db	255
  3762   00FA74  FF                 	db	255
  3763   00FA75  FF                 	db	255
  3764   00FA76  FF                 	db	255
  3765   00FA77  FF                 	db	255
  3766   00FA78  FF                 	db	255
  3767   00FA79  FF                 	db	255
  3768   00FA7A  FF                 	db	255
  3769   00FA7B  FF                 	db	255
  3770   00FA7C  FF                 	db	255
  3771   00FA7D  FF                 	db	255
  3772   00FA7E  FF                 	db	255
  3773   00FA7F  FF                 	db	255
  3774   00FA80  FF                 	db	255
  3775   00FA81  FF                 	db	255
  3776   00FA82  FF                 	db	255
  3777   00FA83  FF                 	db	255
  3778   00FA84  FF                 	db	255
  3779   00FA85  FF                 	db	255
  3780   00FA86  FF                 	db	255
  3781   00FA87  FF                 	db	255
  3782   00FA88  FF                 	db	255
  3783   00FA89  FF                 	db	255
  3784   00FA8A  FF                 	db	255
  3785   00FA8B  FF                 	db	255
  3786   00FA8C  FF                 	db	255
  3787   00FA8D  FF                 	db	255
  3788   00FA8E  FF                 	db	255
  3789   00FA8F  FF                 	db	255
  3790   00FA90  FF                 	db	255
  3791   00FA91  FF                 	db	255
  3792   00FA92  FF                 	db	255
  3793   00FA93  FF                 	db	255
  3794   00FA94  FF                 	db	255
  3795   00FA95  FF                 	db	255
  3796   00FA96  FF                 	db	255
  3797   00FA97  FF                 	db	255
  3798   00FA98  FF                 	db	255
  3799   00FA99  FF                 	db	255
  3800   00FA9A  FF                 	db	255
  3801   00FA9B  FF                 	db	255
  3802   00FA9C  FF                 	db	255
  3803   00FA9D  FF                 	db	255
  3804   00FA9E  FF                 	db	255
  3805   00FA9F  FF                 	db	255
  3806   00FAA0  FF                 	db	255
  3807   00FAA1  FF                 	db	255
  3808   00FAA2  FF                 	db	255
  3809   00FAA3  FF                 	db	255
  3810   00FAA4  FF                 	db	255
  3811   00FAA5  FF                 	db	255
  3812   00FAA6  FF                 	db	255
  3813   00FAA7  FF                 	db	255
  3814   00FAA8  FF                 	db	255
  3815   00FAA9  FF                 	db	255
  3816   00FAAA  FF                 	db	255
  3817   00FAAB  FF                 	db	255
  3818   00FAAC  FF                 	db	255
  3819   00FAAD  FF                 	db	255
  3820   00FAAE  FF                 	db	255
  3821   00FAAF  FF                 	db	255
  3822   00FAB0  FF                 	db	255
  3823   00FAB1  FF                 	db	255
  3824   00FAB2  FF                 	db	255
  3825   00FAB3  FF                 	db	255
  3826   00FAB4  FF                 	db	255
  3827   00FAB5  FF                 	db	255
  3828   00FAB6  FF                 	db	255
  3829   00FAB7  FF                 	db	255
  3830   00FAB8  FF                 	db	255
  3831   00FAB9  FF                 	db	255
  3832   00FABA  FF                 	db	255
  3833   00FABB  FF                 	db	255
  3834   00FABC  FF                 	db	255
  3835   00FABD  FF                 	db	255
  3836   00FABE  FF                 	db	255
  3837   00FABF  FF                 	db	255
  3838   00FAC0  FF                 	db	255
  3839   00FAC1  FF                 	db	255
  3840   00FAC2  FF                 	db	255
  3841   00FAC3  FF                 	db	255
  3842   00FAC4  FF                 	db	255
  3843   00FAC5  FF                 	db	255
  3844   00FAC6  FF                 	db	255
  3845   00FAC7  FF                 	db	255
  3846   00FAC8  FF                 	db	255
  3847   00FAC9  FF                 	db	255
  3848   00FACA  FF                 	db	255
  3849   00FACB  FF                 	db	255
  3850   00FACC  FF                 	db	255
  3851   00FACD  FF                 	db	255
  3852   00FACE  FF                 	db	255
  3853   00FACF  FF                 	db	255
  3854   00FAD0  FF                 	db	255
  3855   00FAD1  FF                 	db	255
  3856   00FAD2  FF                 	db	255
  3857   00FAD3  FF                 	db	255
  3858   00FAD4  FF                 	db	255
  3859   00FAD5  FF                 	db	255
  3860   00FAD6  FF                 	db	255
  3861   00FAD7  FF                 	db	255
  3862   00FAD8  FF                 	db	255
  3863   00FAD9  FF                 	db	255
  3864   00FADA  FF                 	db	255
  3865   00FADB  FF                 	db	255
  3866   00FADC  FF                 	db	255
  3867   00FADD  FF                 	db	255
  3868   00FADE  FF                 	db	255
  3869   00FADF  FF                 	db	255
  3870   00FAE0  FF                 	db	255
  3871   00FAE1  FF                 	db	255
  3872   00FAE2  FF                 	db	255
  3873   00FAE3  FF                 	db	255
  3874   00FAE4  FF                 	db	255
  3875   00FAE5  FF                 	db	255
  3876   00FAE6  FF                 	db	255
  3877   00FAE7  FF                 	db	255
  3878   00FAE8  FF                 	db	255
  3879   00FAE9  FF                 	db	255
  3880   00FAEA  FF                 	db	255
  3881   00FAEB  FF                 	db	255
  3882   00FAEC  FF                 	db	255
  3883   00FAED  FF                 	db	255
  3884   00FAEE  FF                 	db	255
  3885   00FAEF  FF                 	db	255
  3886   00FAF0  FF                 	db	255
  3887   00FAF1  FF                 	db	255
  3888   00FAF2  FF                 	db	255
  3889   00FAF3  FF                 	db	255
  3890   00FAF4  FF                 	db	255
  3891   00FAF5  FF                 	db	255
  3892   00FAF6  FF                 	db	255
  3893   00FAF7  FF                 	db	255
  3894   00FAF8  FF                 	db	255
  3895   00FAF9  FF                 	db	255
  3896   00FAFA  FF                 	db	255
  3897   00FAFB  FF                 	db	255
  3898   00FAFC  FF                 	db	255
  3899   00FAFD  FF                 	db	255
  3900   00FAFE  FF                 	db	255
  3901   00FAFF  FF                 	db	255
  3902   00FB00  FF                 	db	255
  3903   00FB01  FF                 	db	255
  3904   00FB02  FF                 	db	255
  3905   00FB03  FF                 	db	255
  3906   00FB04  FF                 	db	255
  3907   00FB05  FF                 	db	255
  3908   00FB06  FF                 	db	255
  3909   00FB07  FF                 	db	255
  3910   00FB08  FF                 	db	255
  3911   00FB09  FF                 	db	255
  3912   00FB0A  FF                 	db	255
  3913   00FB0B  FF                 	db	255
  3914   00FB0C  FF                 	db	255
  3915   00FB0D  FF                 	db	255
  3916   00FB0E  FF                 	db	255
  3917   00FB0F  FF                 	db	255
  3918   00FB10  FF                 	db	255
  3919   00FB11  FF                 	db	255
  3920   00FB12  FF                 	db	255
  3921   00FB13  FF                 	db	255
  3922   00FB14  FF                 	db	255
  3923   00FB15  FF                 	db	255
  3924   00FB16  FF                 	db	255
  3925   00FB17  FF                 	db	255
  3926   00FB18  FF                 	db	255
  3927   00FB19  FF                 	db	255
  3928   00FB1A  FF                 	db	255
  3929   00FB1B  FF                 	db	255
  3930   00FB1C  FF                 	db	255
  3931   00FB1D  FF                 	db	255
  3932   00FB1E  FF                 	db	255
  3933   00FB1F  FF                 	db	255
  3934   00FB20  FF                 	db	255
  3935   00FB21  FF                 	db	255
  3936   00FB22  FF                 	db	255
  3937   00FB23  FF                 	db	255
  3938   00FB24  FF                 	db	255
  3939   00FB25  FF                 	db	255
  3940   00FB26  FF                 	db	255
  3941   00FB27  FF                 	db	255
  3942   00FB28  FF                 	db	255
  3943   00FB29  FF                 	db	255
  3944   00FB2A  FF                 	db	255
  3945   00FB2B  FF                 	db	255
  3946   00FB2C  FF                 	db	255
  3947   00FB2D  FF                 	db	255
  3948   00FB2E  FF                 	db	255
  3949   00FB2F  FF                 	db	255
  3950   00FB30  FF                 	db	255
  3951   00FB31  FF                 	db	255
  3952   00FB32  FF                 	db	255
  3953   00FB33  FF                 	db	255
  3954   00FB34  FF                 	db	255
  3955   00FB35  FF                 	db	255
  3956   00FB36  FF                 	db	255
  3957   00FB37  FF                 	db	255
  3958   00FB38  FF                 	db	255
  3959   00FB39  FF                 	db	255
  3960   00FB3A  FF                 	db	255
  3961   00FB3B  FF                 	db	255
  3962   00FB3C  FF                 	db	255
  3963   00FB3D  FF                 	db	255
  3964   00FB3E  FF                 	db	255
  3965   00FB3F  FF                 	db	255
  3966   00FB40  FF                 	db	255
  3967   00FB41  FF                 	db	255
  3968   00FB42  FF                 	db	255
  3969   00FB43  FF                 	db	255
  3970   00FB44  FF                 	db	255
  3971   00FB45  FF                 	db	255
  3972   00FB46  FF                 	db	255
  3973   00FB47  FF                 	db	255
  3974   00FB48  FF                 	db	255
  3975   00FB49  FF                 	db	255
  3976   00FB4A  FF                 	db	255
  3977   00FB4B  FF                 	db	255
  3978   00FB4C  FF                 	db	255
  3979   00FB4D  FF                 	db	255
  3980   00FB4E  FF                 	db	255
  3981   00FB4F  FF                 	db	255
  3982   00FB50  FF                 	db	255
  3983   00FB51  FF                 	db	255
  3984   00FB52  FF                 	db	255
  3985   00FB53  FF                 	db	255
  3986   00FB54  FF                 	db	255
  3987   00FB55  FF                 	db	255
  3988   00FB56  FF                 	db	255
  3989   00FB57  FF                 	db	255
  3990   00FB58  FF                 	db	255
  3991   00FB59  FF                 	db	255
  3992   00FB5A  FF                 	db	255
  3993   00FB5B  FF                 	db	255
  3994   00FB5C  FF                 	db	255
  3995   00FB5D  FF                 	db	255
  3996   00FB5E  FF                 	db	255
  3997   00FB5F  FF                 	db	255
  3998   00FB60  FF                 	db	255
  3999   00FB61  FF                 	db	255
  4000   00FB62  FF                 	db	255
  4001   00FB63  FF                 	db	255
  4002   00FB64  FF                 	db	255
  4003   00FB65  FF                 	db	255
  4004   00FB66  FF                 	db	255
  4005   00FB67  FF                 	db	255
  4006   00FB68  FF                 	db	255
  4007   00FB69  FF                 	db	255
  4008   00FB6A  FF                 	db	255
  4009   00FB6B  FF                 	db	255
  4010   00FB6C  FF                 	db	255
  4011   00FB6D  FF                 	db	255
  4012   00FB6E  FF                 	db	255
  4013   00FB6F  FF                 	db	255
  4014   00FB70  FF                 	db	255
  4015   00FB71  FF                 	db	255
  4016   00FB72  FF                 	db	255
  4017   00FB73  FF                 	db	255
  4018   00FB74  FF                 	db	255
  4019   00FB75  FF                 	db	255
  4020   00FB76  FF                 	db	255
  4021   00FB77  FF                 	db	255
  4022   00FB78  FF                 	db	255
  4023   00FB79  FF                 	db	255
  4024   00FB7A  FF                 	db	255
  4025   00FB7B  FF                 	db	255
  4026   00FB7C  FF                 	db	255
  4027   00FB7D  FF                 	db	255
  4028   00FB7E  FF                 	db	255
  4029   00FB7F  FF                 	db	255
  4030   00FB80  FF                 	db	255
  4031   00FB81  FF                 	db	255
  4032   00FB82  FF                 	db	255
  4033   00FB83  FF                 	db	255
  4034   00FB84  FF                 	db	255
  4035   00FB85  FF                 	db	255
  4036   00FB86  FF                 	db	255
  4037   00FB87  FF                 	db	255
  4038   00FB88  FF                 	db	255
  4039   00FB89  FF                 	db	255
  4040   00FB8A  FF                 	db	255
  4041   00FB8B  FF                 	db	255
  4042   00FB8C  FF                 	db	255
  4043   00FB8D  FF                 	db	255
  4044   00FB8E  FF                 	db	255
  4045   00FB8F  FF                 	db	255
  4046   00FB90  FF                 	db	255
  4047   00FB91  FF                 	db	255
  4048   00FB92  FF                 	db	255
  4049   00FB93  FF                 	db	255
  4050   00FB94  FF                 	db	255
  4051   00FB95  FF                 	db	255
  4052   00FB96  FF                 	db	255
  4053   00FB97  FF                 	db	255
  4054   00FB98  FF                 	db	255
  4055   00FB99  FF                 	db	255
  4056   00FB9A  FF                 	db	255
  4057   00FB9B  FF                 	db	255
  4058   00FB9C  FF                 	db	255
  4059   00FB9D  FF                 	db	255
  4060   00FB9E  FF                 	db	255
  4061   00FB9F  FF                 	db	255
  4062   00FBA0  FF                 	db	255
  4063   00FBA1  FF                 	db	255
  4064   00FBA2  FF                 	db	255
  4065   00FBA3  FF                 	db	255
  4066   00FBA4  FF                 	db	255
  4067   00FBA5  FF                 	db	255
  4068   00FBA6  FF                 	db	255
  4069   00FBA7  FF                 	db	255
  4070   00FBA8  FF                 	db	255
  4071   00FBA9  FF                 	db	255
  4072   00FBAA  FF                 	db	255
  4073   00FBAB  FF                 	db	255
  4074   00FBAC  FF                 	db	255
  4075   00FBAD  FF                 	db	255
  4076   00FBAE  FF                 	db	255
  4077   00FBAF  FF                 	db	255
  4078   00FBB0  FF                 	db	255
  4079   00FBB1  FF                 	db	255
  4080   00FBB2  FF                 	db	255
  4081   00FBB3  FF                 	db	255
  4082   00FBB4  FF                 	db	255
  4083   00FBB5  FF                 	db	255
  4084   00FBB6  FF                 	db	255
  4085   00FBB7  FF                 	db	255
  4086   00FBB8  FF                 	db	255
  4087   00FBB9  FF                 	db	255
  4088   00FBBA  FF                 	db	255
  4089   00FBBB  FF                 	db	255
  4090   00FBBC  FF                 	db	255
  4091   00FBBD  FF                 	db	255
  4092   00FBBE  FF                 	db	255
  4093   00FBBF  FF                 	db	255
  4094   00FBC0  FF                 	db	255
  4095   00FBC1  FF                 	db	255
  4096   00FBC2  FF                 	db	255
  4097   00FBC3  FF                 	db	255
  4098   00FBC4  FF                 	db	255
  4099   00FBC5  FF                 	db	255
  4100   00FBC6  FF                 	db	255
  4101   00FBC7  FF                 	db	255
  4102   00FBC8  FF                 	db	255
  4103   00FBC9  FF                 	db	255
  4104   00FBCA  FF                 	db	255
  4105   00FBCB  FF                 	db	255
  4106   00FBCC  FF                 	db	255
  4107   00FBCD  FF                 	db	255
  4108   00FBCE  FF                 	db	255
  4109   00FBCF  FF                 	db	255
  4110   00FBD0  FF                 	db	255
  4111   00FBD1  FF                 	db	255
  4112   00FBD2  FF                 	db	255
  4113   00FBD3  FF                 	db	255
  4114   00FBD4  FF                 	db	255
  4115   00FBD5  FF                 	db	255
  4116   00FBD6  FF                 	db	255
  4117   00FBD7  FF                 	db	255
  4118   00FBD8  FF                 	db	255
  4119   00FBD9  FF                 	db	255
  4120   00FBDA  FF                 	db	255
  4121   00FBDB  FF                 	db	255
  4122   00FBDC  FF                 	db	255
  4123   00FBDD  FF                 	db	255
  4124   00FBDE  FF                 	db	255
  4125   00FBDF  FF                 	db	255
  4126   00FBE0  FF                 	db	255
  4127   00FBE1  FF                 	db	255
  4128   00FBE2  FF                 	db	255
  4129   00FBE3  FF                 	db	255
  4130   00FBE4  FF                 	db	255
  4131   00FBE5  FF                 	db	255
  4132   00FBE6  FF                 	db	255
  4133   00FBE7  FF                 	db	255
  4134   00FBE8  FF                 	db	255
  4135   00FBE9  FF                 	db	255
  4136   00FBEA  FF                 	db	255
  4137   00FBEB  FF                 	db	255
  4138   00FBEC  FF                 	db	255
  4139   00FBED  FF                 	db	255
  4140   00FBEE  FF                 	db	255
  4141   00FBEF  FF                 	db	255
  4142   00FBF0  FF                 	db	255
  4143   00FBF1  FF                 	db	255
  4144   00FBF2  FF                 	db	255
  4145   00FBF3  FF                 	db	255
  4146   00FBF4  FF                 	db	255
  4147   00FBF5  FF                 	db	255
  4148   00FBF6  FF                 	db	255
  4149   00FBF7  FF                 	db	255
  4150   00FBF8  FF                 	db	255
  4151   00FBF9  FF                 	db	255
  4152   00FBFA  FF                 	db	255
  4153   00FBFB  FF                 	db	255
  4154   00FBFC  FF                 	db	255
  4155   00FBFD  FF                 	db	255
  4156   00FBFE  FF                 	db	255
  4157   00FBFF  FF                 	db	255
  4158   00FC00  FF                 	db	255
  4159   00FC01  FF                 	db	255
  4160   00FC02  FF                 	db	255
  4161   00FC03  FF                 	db	255
  4162   00FC04  FF                 	db	255
  4163   00FC05  FF                 	db	255
  4164   00FC06  FF                 	db	255
  4165   00FC07  FF                 	db	255
  4166   00FC08  FF                 	db	255
  4167   00FC09  FF                 	db	255
  4168   00FC0A  FF                 	db	255
  4169   00FC0B  FF                 	db	255
  4170   00FC0C  FF                 	db	255
  4171   00FC0D  FF                 	db	255
  4172   00FC0E  FF                 	db	255
  4173   00FC0F  FF                 	db	255
  4174   00FC10  FF                 	db	255
  4175   00FC11  FF                 	db	255
  4176   00FC12  FF                 	db	255
  4177   00FC13  FF                 	db	255
  4178   00FC14  FF                 	db	255
  4179   00FC15  FF                 	db	255
  4180   00FC16  FF                 	db	255
  4181   00FC17  FF                 	db	255
  4182   00FC18  FF                 	db	255
  4183   00FC19  FF                 	db	255
  4184   00FC1A  FF                 	db	255
  4185   00FC1B  FF                 	db	255
  4186   00FC1C  FF                 	db	255
  4187   00FC1D  FF                 	db	255
  4188   00FC1E  FF                 	db	255
  4189   00FC1F  FF                 	db	255
  4190   00FC20  FF                 	db	255
  4191   00FC21  FF                 	db	255
  4192   00FC22  FF                 	db	255
  4193   00FC23  FF                 	db	255
  4194   00FC24  FF                 	db	255
  4195   00FC25  FF                 	db	255
  4196   00FC26  FF                 	db	255
  4197   00FC27  FF                 	db	255
  4198   00FC28  FF                 	db	255
  4199   00FC29  FF                 	db	255
  4200   00FC2A  FF                 	db	255
  4201   00FC2B  FF                 	db	255
  4202   00FC2C  FF                 	db	255
  4203   00FC2D  FF                 	db	255
  4204   00FC2E  FF                 	db	255
  4205   00FC2F  FF                 	db	255
  4206   00FC30  FF                 	db	255
  4207   00FC31  FF                 	db	255
  4208   00FC32  FF                 	db	255
  4209   00FC33  FF                 	db	255
  4210   00FC34  FF                 	db	255
  4211   00FC35  FF                 	db	255
  4212   00FC36  FF                 	db	255
  4213   00FC37  FF                 	db	255
  4214   00FC38  FF                 	db	255
  4215   00FC39  FF                 	db	255
  4216   00FC3A  FF                 	db	255
  4217   00FC3B  FF                 	db	255
  4218   00FC3C  FF                 	db	255
  4219   00FC3D  FF                 	db	255
  4220   00FC3E  FF                 	db	255
  4221   00FC3F  FF                 	db	255
  4222   00FC40  FF                 	db	255
  4223   00FC41  FF                 	db	255
  4224   00FC42  FF                 	db	255
  4225   00FC43  FF                 	db	255
  4226   00FC44  FF                 	db	255
  4227   00FC45  FF                 	db	255
  4228   00FC46  FF                 	db	255
  4229   00FC47  FF                 	db	255
  4230   00FC48  FF                 	db	255
  4231   00FC49  FF                 	db	255
  4232   00FC4A  FF                 	db	255
  4233   00FC4B  FF                 	db	255
  4234   00FC4C  FF                 	db	255
  4235   00FC4D  FF                 	db	255
  4236   00FC4E  FF                 	db	255
  4237   00FC4F  FF                 	db	255
  4238   00FC50  FF                 	db	255
  4239   00FC51  FF                 	db	255
  4240   00FC52  FF                 	db	255
  4241   00FC53  FF                 	db	255
  4242   00FC54  FF                 	db	255
  4243   00FC55  FF                 	db	255
  4244   00FC56  FF                 	db	255
  4245   00FC57  FF                 	db	255
  4246   00FC58  FF                 	db	255
  4247   00FC59  FF                 	db	255
  4248   00FC5A  FF                 	db	255
  4249   00FC5B  FF                 	db	255
  4250   00FC5C  FF                 	db	255
  4251   00FC5D  FF                 	db	255
  4252   00FC5E  FF                 	db	255
  4253   00FC5F  FF                 	db	255
  4254   00FC60  FF                 	db	255
  4255   00FC61  FF                 	db	255
  4256   00FC62  FF                 	db	255
  4257   00FC63  FF                 	db	255
  4258   00FC64  FF                 	db	255
  4259   00FC65  FF                 	db	255
  4260   00FC66  FF                 	db	255
  4261   00FC67  FF                 	db	255
  4262   00FC68  FF                 	db	255
  4263   00FC69  FF                 	db	255
  4264   00FC6A  FF                 	db	255
  4265   00FC6B  FF                 	db	255
  4266   00FC6C  FF                 	db	255
  4267   00FC6D  FF                 	db	255
  4268   00FC6E  FF                 	db	255
  4269   00FC6F  FF                 	db	255
  4270   00FC70  FF                 	db	255
  4271   00FC71  FF                 	db	255
  4272   00FC72  FF                 	db	255
  4273   00FC73  FF                 	db	255
  4274   00FC74  FF                 	db	255
  4275   00FC75  FF                 	db	255
  4276   00FC76  FF                 	db	255
  4277   00FC77  FF                 	db	255
  4278   00FC78  FF                 	db	255
  4279   00FC79  FF                 	db	255
  4280   00FC7A  FF                 	db	255
  4281   00FC7B  FF                 	db	255
  4282   00FC7C  FF                 	db	255
  4283   00FC7D  FF                 	db	255
  4284   00FC7E  FF                 	db	255
  4285   00FC7F  FF                 	db	255
  4286   00FC80  FF                 	db	255
  4287   00FC81  FF                 	db	255
  4288   00FC82  FF                 	db	255
  4289   00FC83  FF                 	db	255
  4290   00FC84  FF                 	db	255
  4291   00FC85  FF                 	db	255
  4292   00FC86  FF                 	db	255
  4293   00FC87  FF                 	db	255
  4294   00FC88  FF                 	db	255
  4295   00FC89  FF                 	db	255
  4296   00FC8A  FF                 	db	255
  4297   00FC8B  FF                 	db	255
  4298   00FC8C  FF                 	db	255
  4299   00FC8D  FF                 	db	255
  4300   00FC8E  FF                 	db	255
  4301   00FC8F  FF                 	db	255
  4302   00FC90  FF                 	db	255
  4303   00FC91  FF                 	db	255
  4304   00FC92  FF                 	db	255
  4305   00FC93  FF                 	db	255
  4306   00FC94  FF                 	db	255
  4307   00FC95  FF                 	db	255
  4308   00FC96  FF                 	db	255
  4309   00FC97  FF                 	db	255
  4310   00FC98  FF                 	db	255
  4311   00FC99  FF                 	db	255
  4312   00FC9A  FF                 	db	255
  4313   00FC9B  FF                 	db	255
  4314   00FC9C  FF                 	db	255
  4315   00FC9D  FF                 	db	255
  4316   00FC9E  FF                 	db	255
  4317   00FC9F  FF                 	db	255
  4318   00FCA0  FF                 	db	255
  4319   00FCA1  FF                 	db	255
  4320   00FCA2  FF                 	db	255
  4321   00FCA3  FF                 	db	255
  4322   00FCA4  FF                 	db	255
  4323   00FCA5  FF                 	db	255
  4324   00FCA6  FF                 	db	255
  4325   00FCA7  FF                 	db	255
  4326   00FCA8  FF                 	db	255
  4327   00FCA9  FF                 	db	255
  4328   00FCAA  FF                 	db	255
  4329   00FCAB  FF                 	db	255
  4330   00FCAC  FF                 	db	255
  4331   00FCAD  FF                 	db	255
  4332   00FCAE  FF                 	db	255
  4333   00FCAF  FF                 	db	255
  4334   00FCB0  FF                 	db	255
  4335   00FCB1  FF                 	db	255
  4336   00FCB2  FF                 	db	255
  4337   00FCB3  FF                 	db	255
  4338   00FCB4  FF                 	db	255
  4339   00FCB5  FF                 	db	255
  4340   00FCB6  FF                 	db	255
  4341   00FCB7  FF                 	db	255
  4342   00FCB8  FF                 	db	255
  4343   00FCB9  FF                 	db	255
  4344   00FCBA  FF                 	db	255
  4345   00FCBB  FF                 	db	255
  4346   00FCBC  FF                 	db	255
  4347   00FCBD  FF                 	db	255
  4348   00FCBE  FF                 	db	255
  4349   00FCBF  FF                 	db	255
  4350   00FCC0  FF                 	db	255
  4351   00FCC1  FF                 	db	255
  4352   00FCC2  FF                 	db	255
  4353   00FCC3  FF                 	db	255
  4354   00FCC4  FF                 	db	255
  4355   00FCC5  FF                 	db	255
  4356   00FCC6  FF                 	db	255
  4357   00FCC7  FF                 	db	255
  4358   00FCC8  FF                 	db	255
  4359   00FCC9  FF                 	db	255
  4360   00FCCA  FF                 	db	255
  4361   00FCCB  FF                 	db	255
  4362   00FCCC  FF                 	db	255
  4363   00FCCD  FF                 	db	255
  4364   00FCCE  FF                 	db	255
  4365   00FCCF  FF                 	db	255
  4366   00FCD0  FF                 	db	255
  4367   00FCD1  FF                 	db	255
  4368   00FCD2  FF                 	db	255
  4369   00FCD3  FF                 	db	255
  4370   00FCD4  FF                 	db	255
  4371   00FCD5  FF                 	db	255
  4372   00FCD6  FF                 	db	255
  4373   00FCD7  FF                 	db	255
  4374   00FCD8  FF                 	db	255
  4375   00FCD9  FF                 	db	255
  4376   00FCDA  FF                 	db	255
  4377   00FCDB  FF                 	db	255
  4378   00FCDC  FF                 	db	255
  4379   00FCDD  FF                 	db	255
  4380   00FCDE  FF                 	db	255
  4381   00FCDF  FF                 	db	255
  4382   00FCE0  FF                 	db	255
  4383   00FCE1  FF                 	db	255
  4384   00FCE2  FF                 	db	255
  4385   00FCE3  FF                 	db	255
  4386   00FCE4  FF                 	db	255
  4387   00FCE5  FF                 	db	255
  4388   00FCE6  FF                 	db	255
  4389   00FCE7  FF                 	db	255
  4390   00FCE8  FF                 	db	255
  4391   00FCE9  FF                 	db	255
  4392   00FCEA  FF                 	db	255
  4393   00FCEB  FF                 	db	255
  4394   00FCEC  FF                 	db	255
  4395   00FCED  FF                 	db	255
  4396   00FCEE  FF                 	db	255
  4397   00FCEF  FF                 	db	255
  4398   00FCF0  FF                 	db	255
  4399   00FCF1  FF                 	db	255
  4400   00FCF2  FF                 	db	255
  4401   00FCF3  FF                 	db	255
  4402   00FCF4  FF                 	db	255
  4403   00FCF5  FF                 	db	255
  4404   00FCF6  FF                 	db	255
  4405   00FCF7  FF                 	db	255
  4406   00FCF8  FF                 	db	255
  4407   00FCF9  FF                 	db	255
  4408   00FCFA  FF                 	db	255
  4409   00FCFB  FF                 	db	255
  4410   00FCFC  FF                 	db	255
  4411   00FCFD  FF                 	db	255
  4412   00FCFE  FF                 	db	255
  4413   00FCFF  FF                 	db	255
  4414   00FD00  FF                 	db	255
  4415   00FD01  FF                 	db	255
  4416   00FD02  FF                 	db	255
  4417   00FD03  FF                 	db	255
  4418   00FD04  FF                 	db	255
  4419   00FD05  FF                 	db	255
  4420   00FD06  FF                 	db	255
  4421   00FD07  FF                 	db	255
  4422   00FD08  FF                 	db	255
  4423   00FD09  FF                 	db	255
  4424   00FD0A  FF                 	db	255
  4425   00FD0B  FF                 	db	255
  4426   00FD0C  FF                 	db	255
  4427   00FD0D  FF                 	db	255
  4428   00FD0E  FF                 	db	255
  4429   00FD0F  FF                 	db	255
  4430   00FD10  FF                 	db	255
  4431   00FD11  FF                 	db	255
  4432   00FD12  FF                 	db	255
  4433   00FD13  FF                 	db	255
  4434   00FD14  FF                 	db	255
  4435   00FD15  FF                 	db	255
  4436   00FD16  FF                 	db	255
  4437   00FD17  FF                 	db	255
  4438   00FD18  FF                 	db	255
  4439   00FD19  FF                 	db	255
  4440   00FD1A  FF                 	db	255
  4441   00FD1B  FF                 	db	255
  4442   00FD1C  FF                 	db	255
  4443   00FD1D  FF                 	db	255
  4444   00FD1E  FF                 	db	255
  4445   00FD1F  FF                 	db	255
  4446   00FD20  FF                 	db	255
  4447   00FD21  FF                 	db	255
  4448   00FD22  FF                 	db	255
  4449   00FD23  FF                 	db	255
  4450   00FD24  FF                 	db	255
  4451   00FD25  FF                 	db	255
  4452   00FD26  FF                 	db	255
  4453   00FD27  FF                 	db	255
  4454   00FD28  FF                 	db	255
  4455   00FD29  FF                 	db	255
  4456   00FD2A  FF                 	db	255
  4457   00FD2B  FF                 	db	255
  4458   00FD2C  FF                 	db	255
  4459   00FD2D  FF                 	db	255
  4460   00FD2E  FF                 	db	255
  4461   00FD2F  FF                 	db	255
  4462   00FD30  FF                 	db	255
  4463   00FD31  FF                 	db	255
  4464   00FD32  FF                 	db	255
  4465   00FD33  FF                 	db	255
  4466   00FD34  FF                 	db	255
  4467   00FD35  FF                 	db	255
  4468   00FD36  FF                 	db	255
  4469   00FD37  FF                 	db	255
  4470   00FD38  FF                 	db	255
  4471   00FD39  FF                 	db	255
  4472   00FD3A  FF                 	db	255
  4473   00FD3B  FF                 	db	255
  4474   00FD3C  FF                 	db	255
  4475   00FD3D  FF                 	db	255
  4476   00FD3E  FF                 	db	255
  4477   00FD3F  FF                 	db	255
  4478   00FD40  FF                 	db	255
  4479   00FD41  FF                 	db	255
  4480   00FD42  FF                 	db	255
  4481   00FD43  FF                 	db	255
  4482   00FD44  FF                 	db	255
  4483   00FD45  FF                 	db	255
  4484   00FD46  FF                 	db	255
  4485   00FD47  FF                 	db	255
  4486   00FD48  FF                 	db	255
  4487   00FD49  FF                 	db	255
  4488   00FD4A  FF                 	db	255
  4489   00FD4B  FF                 	db	255
  4490   00FD4C  FF                 	db	255
  4491   00FD4D  FF                 	db	255
  4492   00FD4E  FF                 	db	255
  4493   00FD4F  FF                 	db	255
  4494   00FD50  FF                 	db	255
  4495   00FD51  FF                 	db	255
  4496   00FD52  FF                 	db	255
  4497   00FD53  FF                 	db	255
  4498   00FD54  FF                 	db	255
  4499   00FD55  FF                 	db	255
  4500   00FD56  FF                 	db	255
  4501   00FD57  FF                 	db	255
  4502   00FD58  FF                 	db	255
  4503   00FD59  FF                 	db	255
  4504   00FD5A  FF                 	db	255
  4505   00FD5B  FF                 	db	255
  4506   00FD5C  FF                 	db	255
  4507   00FD5D  FF                 	db	255
  4508   00FD5E  FF                 	db	255
  4509   00FD5F  FF                 	db	255
  4510   00FD60  FF                 	db	255
  4511   00FD61  FF                 	db	255
  4512   00FD62  FF                 	db	255
  4513   00FD63  FF                 	db	255
  4514   00FD64  FF                 	db	255
  4515   00FD65  FF                 	db	255
  4516   00FD66  FF                 	db	255
  4517   00FD67  FF                 	db	255
  4518   00FD68  FF                 	db	255
  4519   00FD69  FF                 	db	255
  4520   00FD6A  FF                 	db	255
  4521   00FD6B  FF                 	db	255
  4522   00FD6C  FF                 	db	255
  4523   00FD6D  FF                 	db	255
  4524   00FD6E  FF                 	db	255
  4525   00FD6F  FF                 	db	255
  4526   00FD70  FF                 	db	255
  4527   00FD71  FF                 	db	255
  4528   00FD72  FF                 	db	255
  4529   00FD73  FF                 	db	255
  4530   00FD74  FF                 	db	255
  4531   00FD75  FF                 	db	255
  4532   00FD76  FF                 	db	255
  4533   00FD77  FF                 	db	255
  4534   00FD78  FF                 	db	255
  4535   00FD79  FF                 	db	255
  4536   00FD7A  FF                 	db	255
  4537   00FD7B  FF                 	db	255
  4538   00FD7C  FF                 	db	255
  4539   00FD7D  FF                 	db	255
  4540   00FD7E  FF                 	db	255
  4541   00FD7F  FF                 	db	255
  4542   00FD80  FF                 	db	255
  4543   00FD81  FF                 	db	255
  4544   00FD82  FF                 	db	255
  4545   00FD83  FF                 	db	255
  4546   00FD84  FF                 	db	255
  4547   00FD85  FF                 	db	255
  4548   00FD86  FF                 	db	255
  4549   00FD87  FF                 	db	255
  4550   00FD88  FF                 	db	255
  4551   00FD89  FF                 	db	255
  4552   00FD8A  FF                 	db	255
  4553   00FD8B  FF                 	db	255
  4554   00FD8C  FF                 	db	255
  4555   00FD8D  FF                 	db	255
  4556   00FD8E  FF                 	db	255
  4557   00FD8F  FF                 	db	255
  4558   00FD90  FF                 	db	255
  4559   00FD91  FF                 	db	255
  4560   00FD92  FF                 	db	255
  4561   00FD93  FF                 	db	255
  4562   00FD94  FF                 	db	255
  4563   00FD95  FF                 	db	255
  4564   00FD96  FF                 	db	255
  4565   00FD97  FF                 	db	255
  4566   00FD98  FF                 	db	255
  4567   00FD99  FF                 	db	255
  4568   00FD9A  FF                 	db	255
  4569   00FD9B  FF                 	db	255
  4570   00FD9C  FF                 	db	255
  4571   00FD9D  FF                 	db	255
  4572   00FD9E  FF                 	db	255
  4573   00FD9F  FF                 	db	255
  4574   00FDA0  FF                 	db	255
  4575   00FDA1  FF                 	db	255
  4576   00FDA2  FF                 	db	255
  4577   00FDA3  FF                 	db	255
  4578   00FDA4  FF                 	db	255
  4579   00FDA5  FF                 	db	255
  4580   00FDA6  FF                 	db	255
  4581   00FDA7  FF                 	db	255
  4582   00FDA8  FF                 	db	255
  4583   00FDA9  FF                 	db	255
  4584   00FDAA  FF                 	db	255
  4585   00FDAB  FF                 	db	255
  4586   00FDAC  FF                 	db	255
  4587   00FDAD  FF                 	db	255
  4588   00FDAE  FF                 	db	255
  4589   00FDAF  FF                 	db	255
  4590   00FDB0  FF                 	db	255
  4591   00FDB1  FF                 	db	255
  4592   00FDB2  FF                 	db	255
  4593   00FDB3  FF                 	db	255
  4594   00FDB4  FF                 	db	255
  4595   00FDB5  FF                 	db	255
  4596   00FDB6  FF                 	db	255
  4597   00FDB7  FF                 	db	255
  4598   00FDB8  FF                 	db	255
  4599   00FDB9  FF                 	db	255
  4600   00FDBA  FF                 	db	255
  4601   00FDBB  FF                 	db	255
  4602   00FDBC  FF                 	db	255
  4603   00FDBD  FF                 	db	255
  4604   00FDBE  FF                 	db	255
  4605   00FDBF  FF                 	db	255
  4606   00FDC0  FF                 	db	255
  4607   00FDC1  FF                 	db	255
  4608   00FDC2  FF                 	db	255
  4609   00FDC3  FF                 	db	255
  4610   00FDC4  FF                 	db	255
  4611   00FDC5  FF                 	db	255
  4612   00FDC6  FF                 	db	255
  4613   00FDC7  FF                 	db	255
  4614   00FDC8  FF                 	db	255
  4615   00FDC9  FF                 	db	255
  4616   00FDCA  FF                 	db	255
  4617   00FDCB  FF                 	db	255
  4618   00FDCC  FF                 	db	255
  4619   00FDCD  FF                 	db	255
  4620   00FDCE  FF                 	db	255
  4621   00FDCF  FF                 	db	255
  4622   00FDD0  FF                 	db	255
  4623   00FDD1  FF                 	db	255
  4624   00FDD2  FF                 	db	255
  4625   00FDD3  FF                 	db	255
  4626   00FDD4  FF                 	db	255
  4627   00FDD5  FF                 	db	255
  4628   00FDD6  FF                 	db	255
  4629   00FDD7  FF                 	db	255
  4630   00FDD8  FF                 	db	255
  4631   00FDD9  FF                 	db	255
  4632   00FDDA  FF                 	db	255
  4633   00FDDB  FF                 	db	255
  4634   00FDDC  FF                 	db	255
  4635   00FDDD  FF                 	db	255
  4636   00FDDE  FF                 	db	255
  4637   00FDDF  FF                 	db	255
  4638   00FDE0  FF                 	db	255
  4639   00FDE1  FF                 	db	255
  4640   00FDE2  FF                 	db	255
  4641   00FDE3  FF                 	db	255
  4642   00FDE4  FF                 	db	255
  4643   00FDE5  FF                 	db	255
  4644   00FDE6  FF                 	db	255
  4645   00FDE7  FF                 	db	255
  4646   00FDE8  FF                 	db	255
  4647   00FDE9  FF                 	db	255
  4648   00FDEA  FF                 	db	255
  4649   00FDEB  FF                 	db	255
  4650   00FDEC  FF                 	db	255
  4651   00FDED  FF                 	db	255
  4652   00FDEE  FF                 	db	255
  4653   00FDEF  FF                 	db	255
  4654   00FDF0  FF                 	db	255
  4655   00FDF1  FF                 	db	255
  4656   00FDF2  FF                 	db	255
  4657   00FDF3  FF                 	db	255
  4658   00FDF4  FF                 	db	255
  4659   00FDF5  FF                 	db	255
  4660   00FDF6  FF                 	db	255
  4661   00FDF7  FF                 	db	255
  4662   00FDF8  FF                 	db	255
  4663   00FDF9  FF                 	db	255
  4664   00FDFA  FF                 	db	255
  4665   00FDFB  FF                 	db	255
  4666   00FDFC  FF                 	db	255
  4667   00FDFD  FF                 	db	255
  4668   00FDFE  FF                 	db	255
  4669   00FDFF  FF                 	db	255
  4670   00FE00  FF                 	db	255
  4671   00FE01  FF                 	db	255
  4672   00FE02  FF                 	db	255
  4673   00FE03  FF                 	db	255
  4674   00FE04  FF                 	db	255
  4675   00FE05  FF                 	db	255
  4676   00FE06  FF                 	db	255
  4677   00FE07  FF                 	db	255
  4678   00FE08  FF                 	db	255
  4679   00FE09  FF                 	db	255
  4680   00FE0A  FF                 	db	255
  4681   00FE0B  FF                 	db	255
  4682   00FE0C  FF                 	db	255
  4683   00FE0D  FF                 	db	255
  4684   00FE0E  FF                 	db	255
  4685   00FE0F  FF                 	db	255
  4686   00FE10  FF                 	db	255
  4687   00FE11  FF                 	db	255
  4688   00FE12  FF                 	db	255
  4689   00FE13  FF                 	db	255
  4690   00FE14  FF                 	db	255
  4691   00FE15  FF                 	db	255
  4692   00FE16  FF                 	db	255
  4693   00FE17  FF                 	db	255
  4694   00FE18  FF                 	db	255
  4695   00FE19  FF                 	db	255
  4696   00FE1A  FF                 	db	255
  4697   00FE1B  FF                 	db	255
  4698   00FE1C  FF                 	db	255
  4699   00FE1D  FF                 	db	255
  4700   00FE1E  FF                 	db	255
  4701   00FE1F  FF                 	db	255
  4702   00FE20  FF                 	db	255
  4703   00FE21  FF                 	db	255
  4704   00FE22  FF                 	db	255
  4705   00FE23  FF                 	db	255
  4706   00FE24  FF                 	db	255
  4707   00FE25  FF                 	db	255
  4708   00FE26  FF                 	db	255
  4709   00FE27  FF                 	db	255
  4710   00FE28  FF                 	db	255
  4711   00FE29  FF                 	db	255
  4712   00FE2A  FF                 	db	255
  4713   00FE2B  FF                 	db	255
  4714   00FE2C  FF                 	db	255
  4715   00FE2D  FF                 	db	255
  4716   00FE2E  FF                 	db	255
  4717   00FE2F  FF                 	db	255
  4718   00FE30  FF                 	db	255
  4719   00FE31  FF                 	db	255
  4720   00FE32  FF                 	db	255
  4721   00FE33  FF                 	db	255
  4722   00FE34  FF                 	db	255
  4723   00FE35  FF                 	db	255
  4724   00FE36  FF                 	db	255
  4725   00FE37  FF                 	db	255
  4726   00FE38  FF                 	db	255
  4727   00FE39  FF                 	db	255
  4728   00FE3A  FF                 	db	255
  4729   00FE3B  FF                 	db	255
  4730   00FE3C  FF                 	db	255
  4731   00FE3D  FF                 	db	255
  4732   00FE3E  FF                 	db	255
  4733   00FE3F  FF                 	db	255
  4734   00FE40  FF                 	db	255
  4735   00FE41  FF                 	db	255
  4736   00FE42  FF                 	db	255
  4737   00FE43  FF                 	db	255
  4738   00FE44  FF                 	db	255
  4739   00FE45  FF                 	db	255
  4740   00FE46  FF                 	db	255
  4741   00FE47  FF                 	db	255
  4742   00FE48  FF                 	db	255
  4743   00FE49  FF                 	db	255
  4744   00FE4A  FF                 	db	255
  4745   00FE4B  FF                 	db	255
  4746   00FE4C  FF                 	db	255
  4747   00FE4D  FF                 	db	255
  4748   00FE4E  FF                 	db	255
  4749   00FE4F  FF                 	db	255
  4750   00FE50  FF                 	db	255
  4751   00FE51  FF                 	db	255
  4752   00FE52  FF                 	db	255
  4753   00FE53  FF                 	db	255
  4754   00FE54  FF                 	db	255
  4755   00FE55  FF                 	db	255
  4756   00FE56  FF                 	db	255
  4757   00FE57  FF                 	db	255
  4758   00FE58  FF                 	db	255
  4759   00FE59  FF                 	db	255
  4760   00FE5A  FF                 	db	255
  4761   00FE5B  FF                 	db	255
  4762   00FE5C  FF                 	db	255
  4763   00FE5D  FF                 	db	255
  4764   00FE5E  FF                 	db	255
  4765   00FE5F  FF                 	db	255
  4766   00FE60  FF                 	db	255
  4767   00FE61  FF                 	db	255
  4768   00FE62  FF                 	db	255
  4769   00FE63  FF                 	db	255
  4770   00FE64  FF                 	db	255
  4771   00FE65  FF                 	db	255
  4772   00FE66  FF                 	db	255
  4773   00FE67  FF                 	db	255
  4774   00FE68  FF                 	db	255
  4775   00FE69  FF                 	db	255
  4776   00FE6A  FF                 	db	255
  4777   00FE6B  FF                 	db	255
  4778   00FE6C  FF                 	db	255
  4779   00FE6D  FF                 	db	255
  4780   00FE6E  FF                 	db	255
  4781   00FE6F  FF                 	db	255
  4782   00FE70  FF                 	db	255
  4783   00FE71  FF                 	db	255
  4784   00FE72  FF                 	db	255
  4785   00FE73  FF                 	db	255
  4786   00FE74  FF                 	db	255
  4787   00FE75  FF                 	db	255
  4788   00FE76  FF                 	db	255
  4789   00FE77  FF                 	db	255
  4790   00FE78  FF                 	db	255
  4791   00FE79  FF                 	db	255
  4792   00FE7A  FF                 	db	255
  4793   00FE7B  FF                 	db	255
  4794   00FE7C  FF                 	db	255
  4795   00FE7D  FF                 	db	255
  4796   00FE7E  FF                 	db	255
  4797   00FE7F  FF                 	db	255
  4798   00FE80  FF                 	db	255
  4799   00FE81  FF                 	db	255
  4800   00FE82  FF                 	db	255
  4801   00FE83  FF                 	db	255
  4802   00FE84  FF                 	db	255
  4803   00FE85  FF                 	db	255
  4804   00FE86  FF                 	db	255
  4805   00FE87  FF                 	db	255
  4806   00FE88  FF                 	db	255
  4807   00FE89  FF                 	db	255
  4808   00FE8A  FF                 	db	255
  4809   00FE8B  FF                 	db	255
  4810   00FE8C  FF                 	db	255
  4811   00FE8D  FF                 	db	255
  4812   00FE8E  FF                 	db	255
  4813   00FE8F  FF                 	db	255
  4814   00FE90  FF                 	db	255
  4815   00FE91  FF                 	db	255
  4816   00FE92  FF                 	db	255
  4817   00FE93  FF                 	db	255
  4818   00FE94  FF                 	db	255
  4819   00FE95  FF                 	db	255
  4820   00FE96  FF                 	db	255
  4821   00FE97  FF                 	db	255
  4822   00FE98  FF                 	db	255
  4823   00FE99  FF                 	db	255
  4824   00FE9A  FF                 	db	255
  4825   00FE9B  FF                 	db	255
  4826   00FE9C  FF                 	db	255
  4827   00FE9D  FF                 	db	255
  4828   00FE9E  FF                 	db	255
  4829   00FE9F  FF                 	db	255
  4830   00FEA0  FF                 	db	255
  4831   00FEA1  FF                 	db	255
  4832   00FEA2  FF                 	db	255
  4833   00FEA3  FF                 	db	255
  4834   00FEA4  FF                 	db	255
  4835   00FEA5  FF                 	db	255
  4836   00FEA6  FF                 	db	255
  4837   00FEA7  FF                 	db	255
  4838   00FEA8  FF                 	db	255
  4839   00FEA9  FF                 	db	255
  4840   00FEAA  FF                 	db	255
  4841   00FEAB  FF                 	db	255
  4842   00FEAC  FF                 	db	255
  4843   00FEAD  FF                 	db	255
  4844   00FEAE  FF                 	db	255
  4845   00FEAF  FF                 	db	255
  4846   00FEB0  FF                 	db	255
  4847   00FEB1  FF                 	db	255
  4848   00FEB2  FF                 	db	255
  4849   00FEB3  FF                 	db	255
  4850   00FEB4  FF                 	db	255
  4851   00FEB5  FF                 	db	255
  4852   00FEB6  FF                 	db	255
  4853   00FEB7  FF                 	db	255
  4854   00FEB8  FF                 	db	255
  4855   00FEB9  FF                 	db	255
  4856   00FEBA  FF                 	db	255
  4857   00FEBB  FF                 	db	255
  4858   00FEBC  FF                 	db	255
  4859   00FEBD  FF                 	db	255
  4860   00FEBE  FF                 	db	255
  4861   00FEBF  FF                 	db	255
  4862   00FEC0  FF                 	db	255
  4863   00FEC1  FF                 	db	255
  4864   00FEC2  FF                 	db	255
  4865   00FEC3  FF                 	db	255
  4866   00FEC4  FF                 	db	255
  4867   00FEC5  FF                 	db	255
  4868   00FEC6  FF                 	db	255
  4869   00FEC7  FF                 	db	255
  4870   00FEC8  FF                 	db	255
  4871   00FEC9  FF                 	db	255
  4872   00FECA  FF                 	db	255
  4873   00FECB  FF                 	db	255
  4874   00FECC  FF                 	db	255
  4875   00FECD  FF                 	db	255
  4876   00FECE  FF                 	db	255
  4877   00FECF  FF                 	db	255
  4878   00FED0  FF                 	db	255
  4879   00FED1  FF                 	db	255
  4880   00FED2  FF                 	db	255
  4881   00FED3  FF                 	db	255
  4882   00FED4  FF                 	db	255
  4883   00FED5  FF                 	db	255
  4884   00FED6  FF                 	db	255
  4885   00FED7  FF                 	db	255
  4886   00FED8  FF                 	db	255
  4887   00FED9  FF                 	db	255
  4888   00FEDA  FF                 	db	255
  4889   00FEDB  FF                 	db	255
  4890   00FEDC  FF                 	db	255
  4891   00FEDD  FF                 	db	255
  4892   00FEDE  FF                 	db	255
  4893   00FEDF  FF                 	db	255
  4894   00FEE0  FF                 	db	255
  4895   00FEE1  FF                 	db	255
  4896   00FEE2  FF                 	db	255
  4897   00FEE3  FF                 	db	255
  4898   00FEE4  FF                 	db	255
  4899   00FEE5  FF                 	db	255
  4900   00FEE6  FF                 	db	255
  4901   00FEE7  FF                 	db	255
  4902   00FEE8  FF                 	db	255
  4903   00FEE9  FF                 	db	255
  4904   00FEEA  FF                 	db	255
  4905   00FEEB  FF                 	db	255
  4906   00FEEC  FF                 	db	255
  4907   00FEED  FF                 	db	255
  4908   00FEEE  FF                 	db	255
  4909   00FEEF  FF                 	db	255
  4910   00FEF0  FF                 	db	255
  4911   00FEF1  FF                 	db	255
  4912   00FEF2  FF                 	db	255
  4913   00FEF3  FF                 	db	255
  4914   00FEF4  FF                 	db	255
  4915   00FEF5  FF                 	db	255
  4916   00FEF6  FF                 	db	255
  4917   00FEF7  FF                 	db	255
  4918   00FEF8  FF                 	db	255
  4919   00FEF9  FF                 	db	255
  4920   00FEFA  FF                 	db	255
  4921   00FEFB  FF                 	db	255
  4922   00FEFC  FF                 	db	255
  4923   00FEFD  FF                 	db	255
  4924   00FEFE  FF                 	db	255
  4925   00FEFF  FF                 	db	255
  4926   00FF00  FF                 	db	255
  4927   00FF01  FF                 	db	255
  4928   00FF02  FF                 	db	255
  4929   00FF03  FF                 	db	255
  4930   00FF04  FF                 	db	255
  4931   00FF05  FF                 	db	255
  4932   00FF06  FF                 	db	255
  4933   00FF07  FF                 	db	255
  4934   00FF08  FF                 	db	255
  4935   00FF09  FF                 	db	255
  4936   00FF0A  FF                 	db	255
  4937   00FF0B  FF                 	db	255
  4938   00FF0C  FF                 	db	255
  4939   00FF0D  FF                 	db	255
  4940   00FF0E  FF                 	db	255
  4941   00FF0F  FF                 	db	255
  4942   00FF10  FF                 	db	255
  4943   00FF11  FF                 	db	255
  4944   00FF12  FF                 	db	255
  4945   00FF13  FF                 	db	255
  4946   00FF14  FF                 	db	255
  4947   00FF15  FF                 	db	255
  4948   00FF16  FF                 	db	255
  4949   00FF17  FF                 	db	255
  4950   00FF18  FF                 	db	255
  4951   00FF19  FF                 	db	255
  4952   00FF1A  FF                 	db	255
  4953   00FF1B  FF                 	db	255
  4954   00FF1C  FF                 	db	255
  4955   00FF1D  FF                 	db	255
  4956   00FF1E  FF                 	db	255
  4957   00FF1F  FF                 	db	255
  4958   00FF20  FF                 	db	255
  4959   00FF21  FF                 	db	255
  4960   00FF22  FF                 	db	255
  4961   00FF23  FF                 	db	255
  4962   00FF24  FF                 	db	255
  4963   00FF25  FF                 	db	255
  4964   00FF26  FF                 	db	255
  4965   00FF27  FF                 	db	255
  4966   00FF28  FF                 	db	255
  4967   00FF29  FF                 	db	255
  4968   00FF2A  FF                 	db	255
  4969   00FF2B  FF                 	db	255
  4970   00FF2C  FF                 	db	255
  4971   00FF2D  FF                 	db	255
  4972   00FF2E  FF                 	db	255
  4973   00FF2F  FF                 	db	255
  4974   00FF30  FF                 	db	255
  4975   00FF31  FF                 	db	255
  4976   00FF32  FF                 	db	255
  4977   00FF33  FF                 	db	255
  4978   00FF34  FF                 	db	255
  4979   00FF35  FF                 	db	255
  4980   00FF36  FF                 	db	255
  4981   00FF37  FF                 	db	255
  4982   00FF38  FF                 	db	255
  4983   00FF39  FF                 	db	255
  4984   00FF3A  FF                 	db	255
  4985   00FF3B  FF                 	db	255
  4986   00FF3C  FF                 	db	255
  4987   00FF3D  FF                 	db	255
  4988   00FF3E  FF                 	db	255
  4989   00FF3F  FF                 	db	255
  4990   00FF40  FF                 	db	255
  4991   00FF41  FF                 	db	255
  4992   00FF42  FF                 	db	255
  4993   00FF43  FF                 	db	255
  4994   00FF44  FF                 	db	255
  4995   00FF45  FF                 	db	255
  4996   00FF46  FF                 	db	255
  4997   00FF47  FF                 	db	255
  4998   00FF48  FF                 	db	255
  4999   00FF49  FF                 	db	255
  5000   00FF4A  FF                 	db	255
  5001   00FF4B  FF                 	db	255
  5002   00FF4C  FF                 	db	255
  5003   00FF4D  FF                 	db	255
  5004   00FF4E  FF                 	db	255
  5005   00FF4F  FF                 	db	255
  5006   00FF50  FF                 	db	255
  5007   00FF51  FF                 	db	255
  5008   00FF52  FF                 	db	255
  5009   00FF53  FF                 	db	255
  5010   00FF54  FF                 	db	255
  5011   00FF55  FF                 	db	255
  5012   00FF56  FF                 	db	255
  5013   00FF57  FF                 	db	255
  5014   00FF58  FF                 	db	255
  5015   00FF59  FF                 	db	255
  5016   00FF5A  FF                 	db	255
  5017   00FF5B  FF                 	db	255
  5018   00FF5C  FF                 	db	255
  5019   00FF5D  FF                 	db	255
  5020   00FF5E  FF                 	db	255
  5021   00FF5F  FF                 	db	255
  5022   00FF60  FF                 	db	255
  5023   00FF61  FF                 	db	255
  5024   00FF62  FF                 	db	255
  5025   00FF63  FF                 	db	255
  5026   00FF64  FF                 	db	255
  5027   00FF65  FF                 	db	255
  5028   00FF66  FF                 	db	255
  5029   00FF67  FF                 	db	255
  5030   00FF68  FF                 	db	255
  5031   00FF69  FF                 	db	255
  5032   00FF6A  FF                 	db	255
  5033   00FF6B  FF                 	db	255
  5034   00FF6C  FF                 	db	255
  5035   00FF6D  FF                 	db	255
  5036   00FF6E  FF                 	db	255
  5037   00FF6F  FF                 	db	255
  5038   00FF70                     __end_of_eventTable:
  5039                           	callstack 0
  5040   000000                     _paramBlock_absaddr	set	2080
  5041                           
  5042                           	psect	_paramBlock_text
  5043   000820                     __p_paramBlock_text:
  5044                           	callstack 0
  5045   000820                     _paramBlock:
  5046                           	callstack 0
  5047   000820  A5                 	db	165
  5048   000821  61                 	db	97
  5049   000822  20                 	db	32
  5050   000823  FF                 	db	255
  5051   000824  14                 	db	20
  5052   000825  7F                 	db	127
  5053   000826  04                 	db	4
  5054   000827  0B                 	db	11
  5055   000828  0F                 	db	15
  5056   000829  01                 	db	1
  5057   00082A  00                 	db	0
  5058   00082B  08                 	db	8
  5059   00082C  00                 	db	0
  5060   00082D  00                 	db	0
  5061   00082E  00                 	db	0
  5062   00082F  00                 	db	0
  5063   000830  00                 	db	0
  5064   000831  00                 	db	0
  5065   000832  01                 	db	1
  5066   000833  03                 	db	3
  5067   000834  00                 	db	0
  5068   000835  00                 	db	0
  5069   000836  00                 	db	0
  5070   000837  00                 	db	0
  5071   000838  14                 	db	20
  5072   000839  00                 	db	0
  5073   00083A  48                 	db	72
  5074   00083B  08                 	db	8
  5075   00083C  00                 	db	0
  5076   00083D  00                 	db	0
  5077   00083E  47                 	db	71
  5078   00083F  03                 	db	3
  5079   000840                     __end_of_paramBlock:
  5080                           	callstack 0
  5081   000000                     _name_absaddr	set	2120
  5082                           
  5083                           	psect	_name_text
  5084   000848                     __p_name_text:
  5085                           	callstack 0
  5086   000848                     _name:
  5087                           	callstack 0
  5088   000848  4D                 	db	77
  5089   000849  49                 	db	73
  5090   00084A  4F                 	db	79
  5091   00084B  20                 	db	32
  5092   00084C  20                 	db	32
  5093   00084D  20                 	db	32
  5094   00084E  20                 	db	32
  5095   00084F  00                 	db	0
  5096   000850                     __end_of_name:
  5097                           	callstack 0
  5098   000000                     _COMSTAT	set	3953
  5099   000000                     _PIR5bits	set	3959
  5100   000000                     _PIE5bits	set	3958
  5101   000000                     _TXBIEbits	set	3711
  5102   000000                     _BIE0	set	3710
  5103   000000                     _RXF0SIDL	set	3809
  5104   000000                     _RXM0SIDH	set	3832
  5105   000000                     _CIOCON	set	3952
  5106   000000                     _ECANCON	set	3954
  5107   000000                     _IPR5	set	3960
  5108   000000                     _EECON2	set	3966
  5109   000000                     _TMR0L	set	4054
  5110   000000                     _TMR0H	set	4055
  5111   000000                     _TMR3L	set	4018
  5112   000000                     _TMR3H	set	4019
  5113   000000                     _TMR1L	set	4046
  5114   000000                     _TMR1H	set	4047
  5115   000000                     _T3CONbits	set	4017
  5116   000000                     _ANCON1	set	3932
  5117   000000                     _ANCON0	set	3933
  5118   000000                     _B0CON	set	3712
  5119   000000                     _TXB2CONbits	set	3840
  5120   000000                     _TXB1CONbits	set	3856
  5121   000000                     _TXB0CONbits	set	3872
  5122   000000                     _COMSTATbits	set	3953
  5123   000000                     _EECON1	set	3967
  5124   000000                     _T0CONbits	set	4053
  5125   000000                     _LATBbits	set	3978
  5126   000000                     _TRISAbits	set	3986
  5127   000000                     _TRISBbits	set	3987
  5128   000000                     _PORTAbits	set	3968
  5129   000000                     _BRGCON1	set	3651
  5130   000000                     _BSEL0	set	3709
  5131   000000                     _WPUB	set	3931
  5132   000000                     _INTCON2bits	set	4081
  5133   000000                     _TBLPTR	set	4086
  5134   000000                     _TABLAT	set	4085
  5135   000000                     _TBLPTRU	set	4088
  5136   000000                     _INTCONbits	set	4082
  5137   000000                     _CANSTATbits	set	3950
  5138   000000                     _CANCON	set	3951
  5139   000000                     _EEDATA	set	3955
  5140   000000                     _EEADR	set	3956
  5141   000000                     _EEADRH	set	3957
  5142   000000                     _EECON1bits	set	3967
  5143   000000                     _PORTA	set	3968
  5144   000000                     _LATA	set	3977
  5145   000000                     _TRISA	set	3986
  5146   000000                     _RXB0CON	set	3936
  5147   000000                     _OSCTUNEbits	set	3995
  5148   000000                     _PIE1bits	set	3997
  5149   000000                     _PIR1bits	set	3998
  5150   000000                     _TRISC	set	3988
  5151   000000                     _TRISB	set	3987
  5152   000000                     _PIE2bits	set	4000
  5153   000000                     _PIR2bits	set	4001
  5154   000000                     _T1GCONbits	set	4010
  5155   000000                     _LATC	set	3979
  5156   000000                     _LATB	set	3978
  5157   000000                     _PORTC	set	3970
  5158   000000                     _PORTB	set	3969
  5159   000000                     _T3GCONbits	set	4016
  5160   000000                     _T1CONbits	set	4045
  5161   000000                     _RCONbits	set	4048
  5162   000000                     _T0CON	set	4053
  5163   000000                     _EEIF	set	32190
  5164   000000                     _RXFCON0	set	3654
  5165   000000                     _RXFBCON0	set	3697
  5166   000000                     _BRGCON3	set	3653
  5167   000000                     _BRGCON2	set	3652
  5168   000000                     _TXB2CON	set	3840
  5169   000000                     _TXB1CON	set	3856
  5170   000000                     _TXB0CON	set	3872
  5171   000000                     _RXM0EIDL	set	3835
  5172   000000                     _RXM0EIDH	set	3834
  5173   000000                     _RXM0SIDL	set	3833
  5174   000000                     _RXB1CON	set	3888
  5175   000000                     _MSEL0	set	3705
  5176   000000                     _B1CON	set	3728
  5177   000000                     _B2CON	set	3744
  5178   000000                     _B3CON	set	3760
  5179   000000                     _B4CON	set	3776
  5180   000000                     _B5CON	set	3792
  5181   000000                     _TXB0SIDL	set	3874
  5182   000000                     _TXB0SIDH	set	3873
  5183   000000                     _TXB0DLC	set	3877
  5184   000000                     _TXB0D7	set	3885
  5185   000000                     _TXB0D6	set	3884
  5186   000000                     _TXB0D5	set	3883
  5187   000000                     _TXB0D4	set	3882
  5188   000000                     _TXB0D3	set	3881
  5189   000000                     _TXB0D2	set	3880
  5190   000000                     _TXB0D1	set	3879
  5191   000000                     _TXB0D0	set	3878
  5192   000000                     _TXB1SIDL	set	3858
  5193   000000                     _TXB1SIDH	set	3857
  5194   000000                     _TXB1DLC	set	3861
  5195   000000                     _TXB2SIDL	set	3842
  5196   000000                     _TXB2SIDH	set	3841
  5197   000000                     _TXB2DLC	set	3845
  5198                           
  5199                           ; #config settings
  5200                           
  5201                           	psect	cinit
  5202   00AB36                     __pcinit:
  5203                           	callstack 0
  5204   00AB36                     start_initialization:
  5205                           	callstack 0
  5206   00AB36                     __initialization:
  5207                           	callstack 0
  5208                           
  5209                           ; Clear objects allocated to BIGRAM (928 bytes)
  5210   00AB36  EE05  F048         	lfsr	0,__pbssBIGRAM
  5211   00AB3A  EE13 F0A0          	lfsr	1,928
  5212   00AB3E                     clear_0:
  5213   00AB3E  6AEE               	clrf	postinc0,c
  5214   00AB40  50E5               	movf	postdec1,w,c
  5215   00AB42  50E1               	movf	fsr1l,w,c
  5216   00AB44  E1FC               	bnz	clear_0
  5217   00AB46  50E2               	movf	fsr1h,w,c
  5218   00AB48  E1FA               	bnz	clear_0
  5219                           
  5220                           ; Clear objects allocated to BANK5 (72 bytes)
  5221   00AB4A  EE05  F000         	lfsr	0,__pbssBANK5
  5222   00AB4E  0E48               	movlw	72
  5223   00AB50                     clear_1:
  5224   00AB50  6AEE               	clrf	postinc0,c
  5225   00AB52  06E8               	decf	wreg,f,c
  5226   00AB54  E1FD               	bnz	clear_1
  5227                           
  5228                           ; Clear objects allocated to BANK4 (192 bytes)
  5229   00AB56  EE04  F000         	lfsr	0,__pbssBANK4
  5230   00AB5A  0EC0               	movlw	192
  5231   00AB5C                     clear_2:
  5232   00AB5C  6AEE               	clrf	postinc0,c
  5233   00AB5E  06E8               	decf	wreg,f,c
  5234   00AB60  E1FD               	bnz	clear_2
  5235                           
  5236                           ; Clear objects allocated to BANK3 (200 bytes)
  5237   00AB62  EE03  F000         	lfsr	0,__pbssBANK3
  5238   00AB66  0EC8               	movlw	200
  5239   00AB68                     clear_3:
  5240   00AB68  6AEE               	clrf	postinc0,c
  5241   00AB6A  06E8               	decf	wreg,f,c
  5242   00AB6C  E1FD               	bnz	clear_3
  5243                           
  5244                           ; Clear objects allocated to BANK2 (204 bytes)
  5245   00AB6E  EE02  F000         	lfsr	0,__pbssBANK2
  5246   00AB72  0ECC               	movlw	204
  5247   00AB74                     clear_4:
  5248   00AB74  6AEE               	clrf	postinc0,c
  5249   00AB76  06E8               	decf	wreg,f,c
  5250   00AB78  E1FD               	bnz	clear_4
  5251                           
  5252                           ; Clear objects allocated to BANK1 (186 bytes)
  5253   00AB7A  EE01  F000         	lfsr	0,__pbssBANK1
  5254   00AB7E  0EBA               	movlw	186
  5255   00AB80                     clear_5:
  5256   00AB80  6AEE               	clrf	postinc0,c
  5257   00AB82  06E8               	decf	wreg,f,c
  5258   00AB84  E1FD               	bnz	clear_5
  5259                           
  5260                           ; Clear objects allocated to BANK0 (42 bytes)
  5261   00AB86  EE00  F0A9         	lfsr	0,__pbssBANK0
  5262   00AB8A  0E2A               	movlw	42
  5263   00AB8C                     clear_6:
  5264   00AB8C  6AEE               	clrf	postinc0,c
  5265   00AB8E  06E8               	decf	wreg,f,c
  5266   00AB90  E1FD               	bnz	clear_6
  5267                           
  5268                           ; Clear objects allocated to COMRAM (39 bytes)
  5269   00AB92  EE00  F02B         	lfsr	0,__pbssCOMRAM
  5270   00AB96  0E27               	movlw	39
  5271   00AB98                     clear_7:
  5272   00AB98  6AEE               	clrf	postinc0,c
  5273   00AB9A  06E8               	decf	wreg,f,c
  5274   00AB9C  E1FD               	bnz	clear_7
  5275   00AB9E                     end_of_initialization:
  5276                           	callstack 0
  5277   00AB9E                     __end_of__initialization:
  5278                           	callstack 0
  5279   00AB9E  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5280   00ABA0  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5281   00ABA2  0100               	movlb	0
  5282   00ABA4  EF59  F05C         	goto	_main	;jump to C main() function
  5283                           
  5284                           	psect	bssCOMRAM
  5285   00002B                     __pbssCOMRAM:
  5286                           	callstack 0
  5287   00002B                     _enumerationStartTime:
  5288                           	callstack 0
  5289   00002B                     	ds	4
  5290   00002F                     _canTransmitTimeout:
  5291                           	callstack 0
  5292   00002F                     	ds	4
  5293   000033                     _pbTimer:
  5294                           	callstack 0
  5295   000033                     	ds	4
  5296   000037                     _startWait:
  5297                           	callstack 0
  5298   000037                     	ds	4
  5299   00003B                     _startTime:
  5300                           	callstack 0
  5301   00003B                     	ds	4
  5302   00003F                     _timedResponseCallback:
  5303                           	callstack 0
  5304   00003F                     	ds	2
  5305   000041                     _EnumerationState:
  5306                           	callstack 0
  5307   000041                     	ds	1
  5308   000042                     _eeBootFlag:
  5309                           	callstack 0
  5310   000042                     	ds	1
  5311   000043                     _timedResponseStep:
  5312                           	callstack 0
  5313   000043                     	ds	1
  5314   000044                     _timedResponseAllServicesFlag:
  5315                           	callstack 0
  5316   000044                     	ds	1
  5317   000045                     _heartbeatSequence:
  5318                           	callstack 0
  5319   000045                     	ds	1
  5320   000046                     _last_mode_flags:
  5321                           	callstack 0
  5322   000046                     	ds	1
  5323   000047                     _expedited:
  5324                           	callstack 0
  5325   000047                     	ds	1
  5326   000048                     _txQueue:
  5327                           	callstack 0
  5328   000048                     	ds	5
  5329   00004D                     _rxQueue:
  5330                           	callstack 0
  5331   00004D                     	ds	5
  5332                           
  5333                           	psect	bssBANK0
  5334   0000A9                     __pbssBANK0:
  5335                           	callstack 0
  5336   0000A9                     _currentPos:
  5337                           	callstack 0
  5338   0000A9                     	ds	16
  5339   0000B9                     _flashBlock:
  5340                           	callstack 0
  5341   0000B9                     	ds	2
  5342   0000BB                     _flashCounter:
  5343                           	callstack 0
  5344   0000BB                     	ds	2
  5345   0000BD                     _ledState:
  5346                           	callstack 0
  5347   0000BD                     	ds	2
  5348   0000BF                     _nn:
  5349                           	callstack 0
  5350   0000BF                     	ds	2
  5351   0000C1                     _enumerationState:
  5352                           	callstack 0
  5353   0000C1                     	ds	1
  5354   0000C2                     _canTransmitFailed:
  5355                           	callstack 0
  5356   0000C2                     	ds	1
  5357   0000C3                     _canId:
  5358                           	callstack 0
  5359   0000C3                     	ds	1
  5360   0000C4                     _flashFlags:
  5361                           	callstack 0
  5362   0000C4                     	ds	1
  5363   0000C5                     _timedResponseType:
  5364                           	callstack 0
  5365   0000C5                     	ds	1
  5366   0000C6                     _timedResponseServiceIndex:
  5367                           	callstack 0
  5368   0000C6                     	ds	1
  5369   0000C7                     _last_mode_state:
  5370                           	callstack 0
  5371   0000C7                     	ds	1
  5372   0000C8                     _mode_state:
  5373                           	callstack 0
  5374   0000C8                     	ds	1
  5375   0000C9                     _timerExtension2:
  5376                           	callstack 0
  5377   0000C9                     	ds	1
  5378   0000CA                     _timerExtension1:
  5379                           	callstack 0
  5380   0000CA                     	ds	1
  5381   0000CB                     _servoInBlock:
  5382                           	callstack 0
  5383   0000CB                     	ds	1
  5384   0000CC                     _expeditedWriteIndex:
  5385                           	callstack 0
  5386   0000CC                     	ds	1
  5387   0000CD                     _expeditedReadIndex:
  5388                           	callstack 0
  5389   0000CD                     	ds	1
  5390   0000CE                     _normalWriteIndex:
  5391                           	callstack 0
  5392   0000CE                     	ds	1
  5393   0000CF                     _normalReadIndex:
  5394                           	callstack 0
  5395   0000CF                     	ds	1
  5396   0000D0                     _io@inputs$F849:
  5397                           	callstack 0
  5398   0000D0                     	ds	1
  5399   0000D1                     _io:
  5400                           	callstack 0
  5401   0000D1                     	ds	1
  5402   0000D2                     _started:
  5403                           	callstack 0
  5404   0000D2                     	ds	1
  5405                           
  5406                           	psect	bssBANK1
  5407   000100                     __pbssBANK1:
  5408                           	callstack 0
  5409   000100                     _stepsPerPollSpeed:
  5410                           	callstack 0
  5411   000100                     	ds	16
  5412   000110                     _servoState:
  5413                           	callstack 0
  5414   000110                     	ds	16
  5415   000120                     _targetPos:
  5416                           	callstack 0
  5417   000120                     	ds	16
  5418   000130                     _flashDelays:
  5419                           	callstack 0
  5420   000130                     	ds	16
  5421   000140                     _flashFlushTime:
  5422                           	callstack 0
  5423   000140                     	ds	4
  5424   000144                     _timedResponseTime:
  5425                           	callstack 0
  5426   000144                     	ds	4
  5427   000148                     _ledTimer:
  5428                           	callstack 0
  5429   000148                     	ds	4
  5430   00014C                     _uptimeTimer:
  5431                           	callstack 0
  5432   00014C                     	ds	4
  5433   000150                     _heartbeatTimer:
  5434                           	callstack 0
  5435   000150                     	ds	4
  5436   000154                     _lastActionPollTime:
  5437                           	callstack 0
  5438   000154                     	ds	4
  5439   000158                     _lastInputScanTime:
  5440                           	callstack 0
  5441   000158                     	ds	4
  5442   00015C                     _lastServoStartTime:
  5443                           	callstack 0
  5444   00015C                     	ds	4
  5445   000160                     _previousNN:
  5446                           	callstack 0
  5447   000160                     	ds	2
  5448   000162                     _transport:
  5449                           	callstack 0
  5450   000162                     	ds	2
  5451   000164                     _timedResponseDelay:
  5452                           	callstack 0
  5453   000164                     	ds	1
  5454   000165                     _setupModePreviousMode:
  5455                           	callstack 0
  5456   000165                     	ds	1
  5457   000166                     _mode_flags:
  5458                           	callstack 0
  5459   000166                     	ds	1
  5460   000167                     _canDiagnostics:
  5461                           	callstack 0
  5462   000167                     	ds	38
  5463   00018D                     _mnsDiagnostics:
  5464                           	callstack 0
  5465   00018D                     	ds	14
  5466   00019B                     _tmpMessage:
  5467                           	callstack 0
  5468   00019B                     	ds	9
  5469   0001A4                     _nvDiagnostics:
  5470                           	callstack 0
  5471   0001A4                     	ds	6
  5472   0001AA                     _producerDiagnostics:
  5473                           	callstack 0
  5474   0001AA                     	ds	4
  5475   0001AE                     _teachDiagnostics:
  5476                           	callstack 0
  5477   0001AE                     	ds	4
  5478   0001B2                     _ackDiagnostics:
  5479                           	callstack 0
  5480   0001B2                     	ds	4
  5481   0001B6                     _consumer2QDiagnostics:
  5482                           	callstack 0
  5483   0001B6                     	ds	4
  5484                           
  5485                           	psect	bssBANK2
  5486   000200                     __pbssBANK2:
  5487                           	callstack 0
  5488   000200                     _speed:
  5489                           	callstack 0
  5490   000200                     	ds	32
  5491   000220                     _evs:
  5492                           	callstack 0
  5493   000220                     	ds	20
  5494   000234                     _enumerationResults:
  5495                           	callstack 0
  5496   000234                     	ds	16
  5497   000244                     _bounceState:
  5498                           	callstack 0
  5499   000244                     	ds	16
  5500   000254                     _loopCount:
  5501                           	callstack 0
  5502   000254                     	ds	16
  5503   000264                     _pollCount:
  5504                           	callstack 0
  5505   000264                     	ds	16
  5506   000274                     _pollsPerStepSpeed:
  5507                           	callstack 0
  5508   000274                     	ds	16
  5509   000284                     _delayCount:
  5510                           	callstack 0
  5511   000284                     	ds	16
  5512   000294                     _inputState:
  5513                           	callstack 0
  5514   000294                     	ds	16
  5515   0002A4                     _pulseDelays:
  5516                           	callstack 0
  5517   0002A4                     	ds	16
  5518   0002B4                     _outputState:
  5519                           	callstack 0
  5520   0002B4                     	ds	16
  5521   0002C4                     _expeditedQueueBuf:
  5522                           	callstack 0
  5523   0002C4                     	ds	8
  5524                           
  5525                           	psect	bssBANK3
  5526   000300                     __pbssBANK3:
  5527                           	callstack 0
  5528   000300                     _happening2Event:
  5529                           	callstack 0
  5530   000300                     	ds	72
  5531   000348                     _flashBuffer:
  5532                           	callstack 0
  5533   000348                     	ds	64
  5534   000388                     _ticksWhenStopped:
  5535                           	callstack 0
  5536   000388                     	ds	64
  5537                           
  5538                           	psect	bssBANK4
  5539   000400                     __pbssBANK4:
  5540                           	callstack 0
  5541   000400                     _nvCache:
  5542                           	callstack 0
  5543   000400                     	ds	128
  5544   000480                     _normalQueueBuf:
  5545                           	callstack 0
  5546   000480                     	ds	64
  5547                           
  5548                           	psect	bssBANK5
  5549   000500                     __pbssBANK5:
  5550                           	callstack 0
  5551   000500                     _txBuffers:
  5552                           	callstack 0
  5553   000500                     	ds	72
  5554                           
  5555                           	psect	bssBIGRAM
  5556   000548                     __pbssBIGRAM:
  5557                           	callstack 0
  5558   000548                     _eventChains:
  5559                           	callstack 0
  5560   000548                     	ds	640
  5561   0007C8                     _rxBuffers:
  5562                           	callstack 0
  5563   0007C8                     	ds	288
  5564                           
  5565                           	psect	cstackBANK2
  5566   0002CC                     __pcstackBANK2:
  5567                           	callstack 0
  5568   0002CC                     ??_mnsProcessMessage:
  5569   0002CC                     ??_teachProcessMessage:
  5570   0002CC                     ??_producerProcessMessage:
  5571   0002CC                     consumer2QProcessMessage@end:
  5572                           	callstack 0
  5573   0002CC                     ackEventProcessMessage@eventEN:
  5574                           	callstack 0
  5575                           
  5576                           ; 2 bytes @ 0x0
  5577   0002CC                     	ds	1
  5578   0002CD                     consumer2QProcessMessage@change:
  5579                           	callstack 0
  5580                           
  5581                           ; 1 bytes @ 0x1
  5582   0002CD                     	ds	1
  5583   0002CE                     consumer2QProcessMessage@opc:
  5584                           	callstack 0
  5585   0002CE                     ackEventProcessMessage@eventIndex:
  5586                           	callstack 0
  5587                           
  5588                           ; 1 bytes @ 0x2
  5589   0002CE                     	ds	1
  5590   0002CF                     consumer2QProcessMessage@enn:
  5591                           	callstack 0
  5592   0002CF                     ackEventProcessMessage@eventNN:
  5593                           	callstack 0
  5594                           
  5595                           ; 2 bytes @ 0x3
  5596   0002CF                     	ds	2
  5597   0002D1                     consumer2QProcessMessage@tableIndex:
  5598                           	callstack 0
  5599                           
  5600                           ; 1 bytes @ 0x5
  5601   0002D1                     	ds	1
  5602   0002D2                     consumer2QProcessMessage@nextAction:
  5603                           	callstack 0
  5604                           
  5605                           ; 1 bytes @ 0x6
  5606   0002D2                     	ds	1
  5607   0002D3                     consumer2QProcessMessage@firstAction:
  5608                           	callstack 0
  5609                           
  5610                           ; 1 bytes @ 0x7
  5611   0002D3                     	ds	1
  5612   0002D4                     consumer2QProcessMessage@nextSimultaneous:
  5613                           	callstack 0
  5614                           
  5615                           ; 1 bytes @ 0x8
  5616   0002D4                     	ds	1
  5617   0002D5                     consumer2QProcessMessage@io:
  5618                           	callstack 0
  5619                           
  5620                           ; 1 bytes @ 0x9
  5621   0002D5                     	ds	1
  5622   0002D6                     consumer2QProcessMessage@masked_action:
  5623                           	callstack 0
  5624                           
  5625                           ; 1 bytes @ 0xA
  5626   0002D6                     	ds	1
  5627   0002D7                     consumer2QProcessMessage@ca:
  5628                           	callstack 0
  5629                           
  5630                           ; 1 bytes @ 0xB
  5631   0002D7                     	ds	1
  5632   0002D8                     consumer2QProcessMessage@e:
  5633                           	callstack 0
  5634                           
  5635                           ; 1 bytes @ 0xC
  5636   0002D8                     	ds	1
  5637   0002D9                     consumer2QProcessMessage@action:
  5638                           	callstack 0
  5639                           
  5640                           ; 1 bytes @ 0xD
  5641   0002D9                     	ds	17
  5642   0002EA                     ??_poll:
  5643                           
  5644                           ; 1 bytes @ 0x1E
  5645   0002EA                     	ds	4
  5646   0002EE                     poll@handled:
  5647                           	callstack 0
  5648                           
  5649                           ; 1 bytes @ 0x22
  5650   0002EE                     	ds	1
  5651   0002EF                     poll@i:
  5652                           	callstack 0
  5653                           
  5654                           ; 1 bytes @ 0x23
  5655   0002EF                     	ds	1
  5656   0002F0                     poll@m:
  5657                           	callstack 0
  5658                           
  5659                           ; 9 bytes @ 0x24
  5660   0002F0                     	ds	9
  5661                           
  5662                           	psect	cstackBANK1
  5663   0001BA                     __pcstackBANK1:
  5664                           	callstack 0
  5665   0001BA                     ??_writeNVM:
  5666   0001BA                     ??_rebuildHashtable:
  5667   0001BA                     APP_GetEventState@flags:
  5668                           	callstack 0
  5669   0001BA                     bounceDown@reversed:
  5670                           	callstack 0
  5671   0001BA                     sendMessage@len:
  5672                           	callstack 0
  5673   0001BA                     findEvent@nodeNumber:
  5674                           	callstack 0
  5675                           
  5676                           ; 2 bytes @ 0x0
  5677   0001BA                     	ds	1
  5678   0001BB                     APP_GetEventState@disable_off:
  5679                           	callstack 0
  5680   0001BB                     sendMessage@data1:
  5681                           	callstack 0
  5682   0001BB                     bounceDown@tmp:
  5683                           	callstack 0
  5684                           
  5685                           ; 2 bytes @ 0x1
  5686   0001BB                     	ds	1
  5687   0001BC                     ??_configIO:
  5688   0001BC                     ??_nvFactoryReset:
  5689   0001BC                     APP_GetEventState@h:
  5690                           	callstack 0
  5691   0001BC                     saveNV@value:
  5692                           	callstack 0
  5693   0001BC                     sendMessage@data2:
  5694                           	callstack 0
  5695   0001BC                     setNewCanId@newCanId:
  5696                           	callstack 0
  5697   0001BC                     findEvent@eventNumber:
  5698                           	callstack 0
  5699                           
  5700                           ; 2 bytes @ 0x2
  5701   0001BC                     	ds	1
  5702   0001BD                     ??_saveNV:
  5703   0001BD                     ??_processEnumeration:
  5704   0001BD                     APP_GetEventState@happeningIndex:
  5705                           	callstack 0
  5706   0001BD                     bounceDown@io:
  5707                           	callstack 0
  5708   0001BD                     sendMessage@data3:
  5709                           	callstack 0
  5710   0001BD                     rebuildHashtable@ev:
  5711                           	callstack 0
  5712                           
  5713                           ; 2 bytes @ 0x3
  5714   0001BD                     	ds	1
  5715   0001BE                     ??_findEvent:
  5716   0001BE                     nvFactoryReset@i:
  5717                           	callstack 0
  5718   0001BE                     sendMessage@data4:
  5719                           	callstack 0
  5720   0001BE                     _configIO$8063:
  5721                           	callstack 0
  5722                           
  5723                           ; 1 bytes @ 0x4
  5724   0001BE                     	ds	1
  5725   0001BF                     saveNV@index:
  5726                           	callstack 0
  5727   0001BF                     sendMessage@data5:
  5728                           	callstack 0
  5729   0001BF                     rebuildHashtable@hash:
  5730                           	callstack 0
  5731   0001BF                     _configIO$746:
  5732                           	callstack 0
  5733                           
  5734                           ; 2 bytes @ 0x5
  5735   0001BF                     	ds	1
  5736   0001C0                     defaultNVs@type:
  5737                           	callstack 0
  5738   0001C0                     sendMessage@data6:
  5739                           	callstack 0
  5740   0001C0                     rebuildHashtable@happening:
  5741                           	callstack 0
  5742   0001C0                     findEvent@nn:
  5743                           	callstack 0
  5744                           
  5745                           ; 2 bytes @ 0x6
  5746   0001C0                     	ds	1
  5747   0001C1                     ??_defaultNVs:
  5748   0001C1                     configIO@action:
  5749                           	callstack 0
  5750   0001C1                     sendMessage@data7:
  5751                           	callstack 0
  5752   0001C1                     processEnumeration@enumResult:
  5753                           	callstack 0
  5754   0001C1                     rebuildHashtable@chainIdx:
  5755                           	callstack 0
  5756                           
  5757                           ; 1 bytes @ 0x7
  5758   0001C1                     	ds	1
  5759   0001C2                     configIO@type:
  5760                           	callstack 0
  5761   0001C2                     sendMessage3@opc:
  5762                           	callstack 0
  5763   0001C2                     sendMessage4@data1:
  5764                           	callstack 0
  5765   0001C2                     sendMessage5@data1:
  5766                           	callstack 0
  5767   0001C2                     sendMessage6@data1:
  5768                           	callstack 0
  5769   0001C2                     sendMessage7@data1:
  5770                           	callstack 0
  5771   0001C2                     processEnumeration@newCanId:
  5772                           	callstack 0
  5773   0001C2                     rebuildHashtable@tableIndex:
  5774                           	callstack 0
  5775   0001C2                     findEvent@en:
  5776                           	callstack 0
  5777                           
  5778                           ; 2 bytes @ 0x8
  5779   0001C2                     	ds	1
  5780   0001C3                     ??_clearAllEvents:
  5781   0001C3                     ??_doNnevn:
  5782   0001C3                     ??_removeTableEntry:
  5783   0001C3                     configIO@i:
  5784                           	callstack 0
  5785   0001C3                     defaultNVs@io:
  5786                           	callstack 0
  5787   0001C3                     sendMessage4@data2:
  5788                           	callstack 0
  5789   0001C3                     sendMessage5@data2:
  5790                           	callstack 0
  5791   0001C3                     sendMessage6@data2:
  5792                           	callstack 0
  5793   0001C3                     sendMessage7@data2:
  5794                           	callstack 0
  5795   0001C3                     processEnumeration@i:
  5796                           	callstack 0
  5797   0001C3                     teachPowerUp@i:
  5798                           	callstack 0
  5799   0001C3                     doRqevn@count:
  5800                           	callstack 0
  5801                           
  5802                           ; 1 bytes @ 0x9
  5803   0001C3                     	ds	1
  5804   0001C4                     ??_powerUp:
  5805   0001C4                     defaultNVs@i:
  5806                           	callstack 0
  5807   0001C4                     sendMessage4@data3:
  5808                           	callstack 0
  5809   0001C4                     sendMessage5@data3:
  5810                           	callstack 0
  5811   0001C4                     sendMessage6@data3:
  5812                           	callstack 0
  5813   0001C4                     sendMessage7@data3:
  5814                           	callstack 0
  5815   0001C4                     doRqevn@i:
  5816                           	callstack 0
  5817   0001C4                     findEvent@hash:
  5818                           	callstack 0
  5819   0001C4                     canReceiveMessage@m:
  5820                           	callstack 0
  5821                           
  5822                           ; 2 bytes @ 0xA
  5823   0001C4                     	ds	1
  5824   0001C5                     sendMessage4@data4:
  5825                           	callstack 0
  5826   0001C5                     sendMessage5@data4:
  5827                           	callstack 0
  5828   0001C5                     sendMessage6@data4:
  5829                           	callstack 0
  5830   0001C5                     sendMessage7@data4:
  5831                           	callstack 0
  5832   0001C5                     findEvent@chainIdx:
  5833                           	callstack 0
  5834                           
  5835                           ; 1 bytes @ 0xB
  5836   0001C5                     	ds	1
  5837   0001C6                     sendMessage5@data5:
  5838                           	callstack 0
  5839   0001C6                     sendMessage6@data5:
  5840                           	callstack 0
  5841   0001C6                     sendMessage7@data5:
  5842                           	callstack 0
  5843   0001C6                     findEvent@tableIndex:
  5844                           	callstack 0
  5845   0001C6                     sendProducedEvent@opc:
  5846                           	callstack 0
  5847                           
  5848                           ; 1 bytes @ 0xC
  5849   0001C6                     	ds	1
  5850   0001C7                     ??_mnsPoll:
  5851   0001C7                     sendMessage6@data6:
  5852                           	callstack 0
  5853   0001C7                     sendMessage7@data6:
  5854                           	callstack 0
  5855   0001C7                     canReceiveMessage@messageAvailable:
  5856                           	callstack 0
  5857   0001C7                     clearAllEvents@tableIndex:
  5858                           	callstack 0
  5859   0001C7                     doNnevn@f:
  5860                           	callstack 0
  5861   0001C7                     doNenrd@index:
  5862                           	callstack 0
  5863   0001C7                     doReval@evNum:
  5864                           	callstack 0
  5865   0001C7                     removeTableEntry@f:
  5866                           	callstack 0
  5867   0001C7                     checkLen@m:
  5868                           	callstack 0
  5869   0001C7                     sendProducedEvent@producedEventEN:
  5870                           	callstack 0
  5871                           
  5872                           ; 2 bytes @ 0xD
  5873   0001C7                     	ds	1
  5874   0001C8                     ??_doReval:
  5875   0001C8                     powerUp@i:
  5876                           	callstack 0
  5877   0001C8                     sendMessage7@data7:
  5878                           	callstack 0
  5879   0001C8                     doNnevn@count:
  5880                           	callstack 0
  5881   0001C8                     removeTableEntry@tableIndex:
  5882                           	callstack 0
  5883   0001C8                     canReceiveMessage@mp:
  5884                           	callstack 0
  5885   0001C8                     doNenrd@nodeNumber:
  5886                           	callstack 0
  5887   0001C8                     doReqev@nodeNumber:
  5888                           	callstack 0
  5889                           
  5890                           ; 2 bytes @ 0xE
  5891   0001C8                     	ds	1
  5892   0001C9                     checkLen@needed:
  5893                           	callstack 0
  5894   0001C9                     doNnevn@i:
  5895                           	callstack 0
  5896   0001C9                     doReval@evIndex:
  5897                           	callstack 0
  5898   0001C9                     checkRemoveTableEntry@tableIndex:
  5899                           	callstack 0
  5900   0001C9                     removeEvent@nodeNumber:
  5901                           	callstack 0
  5902   0001C9                     sendProducedEvent@producedEventNN:
  5903                           	callstack 0
  5904                           
  5905                           ; 2 bytes @ 0xF
  5906   0001C9                     	ds	1
  5907   0001CA                     checkLen@service:
  5908                           	callstack 0
  5909   0001CA                     canReceiveMessage@no:
  5910                           	callstack 0
  5911   0001CA                     doReval@enNum:
  5912                           	callstack 0
  5913   0001CA                     checkRemoveTableEntry@e:
  5914                           	callstack 0
  5915   0001CA                     doNenrd@eventNumber:
  5916                           	callstack 0
  5917   0001CA                     doReqev@eventNumber:
  5918                           	callstack 0
  5919                           
  5920                           ; 2 bytes @ 0x10
  5921   0001CA                     	ds	1
  5922   0001CB                     writeEv@evNum:
  5923                           	callstack 0
  5924   0001CB                     sendProducedEvent@happening:
  5925                           	callstack 0
  5926   0001CB                     ackEventCheckLen@m:
  5927                           	callstack 0
  5928   0001CB                     canReceiveMessage@p:
  5929                           	callstack 0
  5930   0001CB                     teachCheckLen@m:
  5931                           	callstack 0
  5932   0001CB                     doReval@evVal:
  5933                           	callstack 0
  5934   0001CB                     removeEvent@eventNumber:
  5935                           	callstack 0
  5936                           
  5937                           ; 2 bytes @ 0x11
  5938   0001CB                     	ds	1
  5939   0001CC                     ??_inputScan:
  5940   0001CC                     ??_pollServos:
  5941   0001CC                     sendInvertedProducedEvent@state:
  5942                           	callstack 0
  5943   0001CC                     doNenrd@tableIndex:
  5944                           	callstack 0
  5945   0001CC                     doReqev@evNum:
  5946                           	callstack 0
  5947   0001CC                     writeEv@evVal:
  5948                           	callstack 0
  5949                           
  5950                           ; 1 bytes @ 0x12
  5951   0001CC                     	ds	1
  5952   0001CD                     ??_writeEv:
  5953   0001CD                     processOutputs@io:
  5954                           	callstack 0
  5955   0001CD                     sendInvertedProducedEvent@invert:
  5956                           	callstack 0
  5957   0001CD                     ackEventCheckLen@needed:
  5958                           	callstack 0
  5959   0001CD                     teachCheckLen@needed:
  5960                           	callstack 0
  5961   0001CD                     doReval@tableIndex:
  5962                           	callstack 0
  5963   0001CD                     removeEvent@tableIndex:
  5964                           	callstack 0
  5965   0001CD                     doReqev@evVal:
  5966                           	callstack 0
  5967                           
  5968                           ; 2 bytes @ 0x13
  5969   0001CD                     	ds	1
  5970   0001CE                     inputScan@change:
  5971                           	callstack 0
  5972   0001CE                     sendInvertedProducedEvent@can_send_on:
  5973                           	callstack 0
  5974   0001CE                     teachCheckLen@learn:
  5975                           	callstack 0
  5976   0001CE                     doEvuln@nodeNumber:
  5977                           	callstack 0
  5978                           
  5979                           ; 2 bytes @ 0x14
  5980   0001CE                     	ds	1
  5981   0001CF                     inputScan@input:
  5982                           	callstack 0
  5983   0001CF                     sendInvertedProducedEvent@can_send_off:
  5984                           	callstack 0
  5985   0001CF                     doReqev@tableIndex:
  5986                           	callstack 0
  5987                           
  5988                           ; 1 bytes @ 0x15
  5989   0001CF                     	ds	1
  5990   0001D0                     sendInvertedProducedEvent@happening:
  5991                           	callstack 0
  5992   0001D0                     doEvuln@eventNumber:
  5993                           	callstack 0
  5994                           
  5995                           ; 2 bytes @ 0x16
  5996   0001D0                     	ds	1
  5997   0001D1                     writeEv@startIndex:
  5998                           	callstack 0
  5999   0001D1                     _sendInvertedProducedEvent$1404:
  6000                           	callstack 0
  6001                           
  6002                           ; 2 bytes @ 0x17
  6003   0001D1                     	ds	1
  6004   0001D2                     doEvuln@result:
  6005                           	callstack 0
  6006   0001D2                     writeEv@nextF:
  6007                           	callstack 0
  6008                           
  6009                           ; 1 bytes @ 0x18
  6010   0001D2                     	ds	1
  6011   0001D3                     sendInvertedProducedEvent@state_to_send:
  6012                           	callstack 0
  6013   0001D3                     writeEv@e:
  6014                           	callstack 0
  6015                           
  6016                           ; 1 bytes @ 0x19
  6017   0001D3                     	ds	1
  6018   0001D4                     startDigitalOutput@state:
  6019                           	callstack 0
  6020   0001D4                     pollServos@target:
  6021                           	callstack 0
  6022   0001D4                     mnsTRallDiagnosticsCallback@serviceIndex:
  6023                           	callstack 0
  6024   0001D4                     reqevCallback@serviceIndex:
  6025                           	callstack 0
  6026   0001D4                     writeEv@f:
  6027                           	callstack 0
  6028                           
  6029                           ; 1 bytes @ 0x1A
  6030   0001D4                     	ds	1
  6031   0001D5                     ??_startDigitalOutput:
  6032   0001D5                     sodTRCallback@step:
  6033                           	callstack 0
  6034   0001D5                     pollServos@beforeMidway:
  6035                           	callstack 0
  6036   0001D5                     mnsTRserviceDiscoveryCallback@step:
  6037                           	callstack 0
  6038   0001D5                     mnsTRallDiagnosticsCallback@step:
  6039                           	callstack 0
  6040   0001D5                     mnsTRrqnpnCallback@step:
  6041                           	callstack 0
  6042   0001D5                     nvTRnvrdCallback@step:
  6043                           	callstack 0
  6044   0001D5                     nerdCallback@step:
  6045                           	callstack 0
  6046   0001D5                     reqevCallback@step:
  6047                           	callstack 0
  6048   0001D5                     writeEv@tableIndex:
  6049                           	callstack 0
  6050                           
  6051                           ; 1 bytes @ 0x1B
  6052   0001D5                     	ds	1
  6053   0001D6                     ??_mnsTRallDiagnosticsCallback:
  6054   0001D6                     ??_mnsTRserviceDiscoveryCallback:
  6055   0001D6                     ??_reqevCallback:
  6056   0001D6                     sodTRCallback@disable_SOD_response:
  6057                           	callstack 0
  6058   0001D6                     pollServos@midway:
  6059                           	callstack 0
  6060   0001D6                     writeEv@nextIdx:
  6061                           	callstack 0
  6062   0001D6                     nvTRnvrdCallback@valueOrError:
  6063                           	callstack 0
  6064   0001D6                     nerdCallback@nodeNumber:
  6065                           	callstack 0
  6066                           
  6067                           ; 2 bytes @ 0x1C
  6068   0001D6                     	ds	1
  6069   0001D7                     deleteActionRange@number:
  6070                           	callstack 0
  6071   0001D7                     sodTRCallback@send_on_ok:
  6072                           	callstack 0
  6073   0001D7                     pollServos@io:
  6074                           	callstack 0
  6075   0001D7                     deleteHappeningRange@number:
  6076                           	callstack 0
  6077   0001D7                     _startDigitalOutput$808:
  6078                           	callstack 0
  6079   0001D7                     addEvent@nodeNumber:
  6080                           	callstack 0
  6081                           
  6082                           ; 2 bytes @ 0x1D
  6083   0001D7                     	ds	1
  6084   0001D8                     ??_deleteHappeningRange:
  6085   0001D8                     ??_deleteActionRange:
  6086   0001D8                     sodTRCallback@send_off_ok:
  6087                           	callstack 0
  6088   0001D8                     startServos@type:
  6089                           	callstack 0
  6090   0001D8                     nerdCallback@eventNumber:
  6091                           	callstack 0
  6092                           
  6093                           ; 2 bytes @ 0x1E
  6094   0001D8                     	ds	1
  6095   0001D9                     startDigitalOutput@pinState:
  6096                           	callstack 0
  6097   0001D9                     _sodTRCallback$1424:
  6098                           	callstack 0
  6099   0001D9                     addEvent@eventNumber:
  6100                           	callstack 0
  6101                           
  6102                           ; 2 bytes @ 0x1F
  6103   0001D9                     	ds	1
  6104   0001DA                     startDigitalOutput@actionState:
  6105                           	callstack 0
  6106   0001DA                     _sodTRCallback$1425:
  6107                           	callstack 0
  6108   0001DA                     mnsTRallDiagnosticsCallback@d:
  6109                           	callstack 0
  6110                           
  6111                           ; 2 bytes @ 0x20
  6112   0001DA                     	ds	1
  6113   0001DB                     startDigitalOutput@io:
  6114                           	callstack 0
  6115   0001DB                     sodTRCallback@happeningIndex:
  6116                           	callstack 0
  6117   0001DB                     reqevCallback@nEv:
  6118                           	callstack 0
  6119   0001DB                     addEvent@evNum:
  6120                           	callstack 0
  6121                           
  6122                           ; 1 bytes @ 0x21
  6123   0001DB                     	ds	1
  6124   0001DC                     sodTRCallback@disable_off:
  6125                           	callstack 0
  6126   0001DC                     startOutput@act:
  6127                           	callstack 0
  6128   0001DC                     addEvent@evVal:
  6129                           	callstack 0
  6130   0001DC                     reqevCallback@ev:
  6131                           	callstack 0
  6132                           
  6133                           ; 2 bytes @ 0x22
  6134   0001DC                     	ds	1
  6135   0001DD                     deleteActionRange@updated:
  6136                           	callstack 0
  6137   0001DD                     sodTRCallback@value:
  6138                           	callstack 0
  6139   0001DD                     startOutput@type:
  6140                           	callstack 0
  6141   0001DD                     addEvent@forceOwnNN:
  6142                           	callstack 0
  6143   0001DD                     deleteHappeningRange@happening:
  6144                           	callstack 0
  6145                           
  6146                           ; 1 bytes @ 0x23
  6147   0001DD                     	ds	1
  6148   0001DE                     ??_addEvent:
  6149   0001DE                     deleteActionRange@action:
  6150                           	callstack 0
  6151   0001DE                     sodTRCallback@event_inverted:
  6152                           	callstack 0
  6153   0001DE                     startOutput@io:
  6154                           	callstack 0
  6155   0001DE                     deleteHappeningRange@h:
  6156                           	callstack 0
  6157   0001DE                     reqevCallback@nodeNumber:
  6158                           	callstack 0
  6159                           
  6160                           ; 2 bytes @ 0x24
  6161   0001DE                     	ds	1
  6162   0001DF                     deleteActionRange@e:
  6163                           	callstack 0
  6164   0001DF                     processActions@simultaneous:
  6165                           	callstack 0
  6166   0001DF                     sodTRCallback@flags:
  6167                           	callstack 0
  6168   0001DF                     deleteHappeningRange@tableIndex:
  6169                           	callstack 0
  6170                           
  6171                           ; 1 bytes @ 0x25
  6172   0001DF                     	ds	1
  6173   0001E0                     deleteActionRange@tableIndex:
  6174                           	callstack 0
  6175   0001E0                     processActions@peekItem:
  6176                           	callstack 0
  6177   0001E0                     sodTRCallback@io:
  6178                           	callstack 0
  6179   0001E0                     reqevCallback@eventNumber:
  6180                           	callstack 0
  6181                           
  6182                           ; 2 bytes @ 0x26
  6183   0001E0                     	ds	1
  6184   0001E1                     clearEvents@io:
  6185                           	callstack 0
  6186   0001E1                     processActions@nextType:
  6187                           	callstack 0
  6188                           
  6189                           ; 1 bytes @ 0x27
  6190   0001E1                     	ds	1
  6191   0001E2                     processActions@nextIo:
  6192                           	callstack 0
  6193   0001E2                     reqevCallback@tableIndex:
  6194                           	callstack 0
  6195   0001E2                     addEvent@error:
  6196                           	callstack 0
  6197                           
  6198                           ; 1 bytes @ 0x28
  6199   0001E2                     	ds	1
  6200   0001E3                     ??_pollTimedResponse:
  6201   0001E3                     processActions@type:
  6202                           	callstack 0
  6203   0001E3                     addEvent@f:
  6204                           	callstack 0
  6205                           
  6206                           ; 1 bytes @ 0x29
  6207   0001E3                     	ds	1
  6208   0001E4                     processActions@ioAction:
  6209                           	callstack 0
  6210   0001E4                     addEvent@e:
  6211                           	callstack 0
  6212                           
  6213                           ; 1 bytes @ 0x2A
  6214   0001E4                     	ds	1
  6215   0001E5                     processActions@nextAction:
  6216                           	callstack 0
  6217   0001E5                     pollTimedResponse@result:
  6218                           	callstack 0
  6219   0001E5                     addEvent@tableIndex:
  6220                           	callstack 0
  6221                           
  6222                           ; 1 bytes @ 0x2B
  6223   0001E5                     	ds	1
  6224   0001E6                     defaultEvents@type:
  6225                           	callstack 0
  6226   0001E6                     processActions@io:
  6227                           	callstack 0
  6228   0001E6                     APP_addEvent@nodeNumber:
  6229                           	callstack 0
  6230                           
  6231                           ; 2 bytes @ 0x2C
  6232   0001E6                     	ds	1
  6233   0001E7                     processActions@action:
  6234                           	callstack 0
  6235   0001E7                     defaultEvents@en:
  6236                           	callstack 0
  6237                           
  6238                           ; 2 bytes @ 0x2D
  6239   0001E7                     	ds	1
  6240   0001E8                     ??_loop:
  6241   0001E8                     APP_addEvent@eventNumber:
  6242                           	callstack 0
  6243                           
  6244                           ; 2 bytes @ 0x2E
  6245   0001E8                     	ds	1
  6246   0001E9                     defaultEvents@io:
  6247                           	callstack 0
  6248                           
  6249                           ; 1 bytes @ 0x2F
  6250   0001E9                     	ds	1
  6251   0001EA                     setType@type:
  6252                           	callstack 0
  6253   0001EA                     APP_addEvent@evNum:
  6254                           	callstack 0
  6255                           
  6256                           ; 1 bytes @ 0x30
  6257   0001EA                     	ds	1
  6258   0001EB                     setType@index:
  6259                           	callstack 0
  6260   0001EB                     APP_addEvent@evVal:
  6261                           	callstack 0
  6262                           
  6263                           ; 1 bytes @ 0x31
  6264   0001EB                     	ds	1
  6265   0001EC                     setType@io:
  6266                           	callstack 0
  6267   0001EC                     APP_addEvent@forceOwnNN:
  6268                           	callstack 0
  6269                           
  6270                           ; 1 bytes @ 0x32
  6271   0001EC                     	ds	1
  6272   0001ED                     APP_factoryReset@io:
  6273                           	callstack 0
  6274   0001ED                     APP_addEvent@tableIndex:
  6275                           	callstack 0
  6276   0001ED                     APP_nvValueChanged@value:
  6277                           	callstack 0
  6278                           
  6279                           ; 1 bytes @ 0x33
  6280   0001ED                     	ds	1
  6281   0001EE                     ??_factoryReset:
  6282   0001EE                     APP_nvValueChanged@oldValue:
  6283                           	callstack 0
  6284   0001EE                     doEvlrn@nodeNumber:
  6285                           	callstack 0
  6286                           
  6287                           ; 2 bytes @ 0x34
  6288   0001EE                     	ds	1
  6289   0001EF                     ??_APP_nvValueChanged:
  6290                           
  6291                           ; 1 bytes @ 0x35
  6292   0001EF                     	ds	1
  6293   0001F0                     doEvlrn@eventNumber:
  6294                           	callstack 0
  6295                           
  6296                           ; 2 bytes @ 0x36
  6297   0001F0                     	ds	2
  6298   0001F2                     APP_nvValueChanged@index:
  6299                           	callstack 0
  6300   0001F2                     factoryReset@i:
  6301                           	callstack 0
  6302   0001F2                     doEvlrn@evNum:
  6303                           	callstack 0
  6304                           
  6305                           ; 1 bytes @ 0x38
  6306   0001F2                     	ds	1
  6307   0001F3                     APP_nvValueChanged@io:
  6308                           	callstack 0
  6309   0001F3                     checkPowerOnPb@i:
  6310                           	callstack 0
  6311   0001F3                     doEvlrn@evVal:
  6312                           	callstack 0
  6313                           
  6314                           ; 1 bytes @ 0x39
  6315   0001F3                     	ds	1
  6316   0001F4                     setNV@value:
  6317                           	callstack 0
  6318   0001F4                     doEvlrn@error:
  6319                           	callstack 0
  6320                           
  6321                           ; 1 bytes @ 0x3A
  6322   0001F4                     	ds	1
  6323   0001F5                     ??_setNV:
  6324                           
  6325                           ; 1 bytes @ 0x3B
  6326   0001F5                     	ds	2
  6327   0001F7                     setNV@oldValue:
  6328                           	callstack 0
  6329                           
  6330                           ; 1 bytes @ 0x3D
  6331   0001F7                     	ds	1
  6332   0001F8                     setNV@index:
  6333                           	callstack 0
  6334                           
  6335                           ; 1 bytes @ 0x3E
  6336   0001F8                     	ds	1
  6337   0001F9                     consumer2QProcessMessage@m:
  6338                           	callstack 0
  6339   0001F9                     bootProcessMessage@m:
  6340                           	callstack 0
  6341   0001F9                     ackEventProcessMessage@m:
  6342                           	callstack 0
  6343   0001F9                     mnsProcessMessage@m:
  6344                           	callstack 0
  6345   0001F9                     nvProcessMessage@m:
  6346                           	callstack 0
  6347   0001F9                     canProcessMessage@m:
  6348                           	callstack 0
  6349   0001F9                     teachProcessMessage@m:
  6350                           	callstack 0
  6351   0001F9                     producerProcessMessage@m:
  6352                           	callstack 0
  6353                           
  6354                           ; 2 bytes @ 0x3F
  6355   0001F9                     	ds	2
  6356   0001FB                     ??_consumer2QProcessMessage:
  6357   0001FB                     ??_bootProcessMessage:
  6358   0001FB                     ??_ackEventProcessMessage:
  6359   0001FB                     ??_nvProcessMessage:
  6360   0001FB                     ??_canProcessMessage:
  6361   0001FB                     mnsProcessMessage@i:
  6362                           	callstack 0
  6363   0001FB                     producerProcessMessage@ev:
  6364                           	callstack 0
  6365                           
  6366                           ; 2 bytes @ 0x41
  6367   0001FB                     	ds	1
  6368   0001FC                     mnsProcessMessage@d:
  6369                           	callstack 0
  6370                           
  6371                           ; 2 bytes @ 0x42
  6372   0001FC                     	ds	1
  6373   0001FD                     producerProcessMessage@h:
  6374                           	callstack 0
  6375   0001FD                     nvProcessMessage@valueOrError:
  6376                           	callstack 0
  6377                           
  6378                           ; 2 bytes @ 0x43
  6379   0001FD                     	ds	1
  6380   0001FE                     mnsProcessMessage@newMode:
  6381                           	callstack 0
  6382   0001FE                     producerProcessMessage@index:
  6383                           	callstack 0
  6384                           
  6385                           ; 1 bytes @ 0x44
  6386   0001FE                     	ds	1
  6387                           
  6388                           	psect	cstackBANK0
  6389   000060                     __pcstackBANK0:
  6390                           	callstack 0
  6391   000060                     ?i1_getNextWriteMessage:
  6392                           	callstack 0
  6393   000060                     ?i1_pop:
  6394                           	callstack 0
  6395   000060                     ?i1_getBufferPointer:
  6396                           	callstack 0
  6397   000060                     ?i1_tickGet:
  6398                           	callstack 0
  6399   000060                     i1_isEvent$4867:
  6400                           	callstack 0
  6401   000060                     i1getNextWriteMessage@q:
  6402                           	callstack 0
  6403   000060                     i1pop@q:
  6404                           	callstack 0
  6405                           
  6406                           ; 1 bytes @ 0x0
  6407   000060                     	ds	1
  6408   000061                     i1isEvent@opc:
  6409                           	callstack 0
  6410                           
  6411                           ; 1 bytes @ 0x1
  6412   000061                     	ds	1
  6413   000062                     ??i1_getNextWriteMessage:
  6414   000062                     ??i1_pop:
  6415   000062                     i1getBufferPointer@b:
  6416                           	callstack 0
  6417                           
  6418                           ; 1 bytes @ 0x2
  6419   000062                     	ds	2
  6420   000064                     i1tickGet@IntFlag2:
  6421                           	callstack 0
  6422                           
  6423                           ; 1 bytes @ 0x4
  6424   000064                     	ds	1
  6425   000065                     i1tickGet@IntFlag1:
  6426                           	callstack 0
  6427                           
  6428                           ; 1 bytes @ 0x5
  6429   000065                     	ds	1
  6430   000066                     i1tickGet@currentTime:
  6431                           	callstack 0
  6432                           
  6433                           ; 4 bytes @ 0x6
  6434   000066                     	ds	1
  6435   000067                     i1pop@ret:
  6436                           	callstack 0
  6437                           
  6438                           ; 2 bytes @ 0x7
  6439   000067                     	ds	4
  6440   00006B                     i1getNextWriteMessage@wr:
  6441                           	callstack 0
  6442                           
  6443                           ; 1 bytes @ 0xB
  6444   00006B                     	ds	1
  6445   00006C                     ??_checkTxFifo:
  6446   00006C                     canFillRxFifo@m:
  6447                           	callstack 0
  6448                           
  6449                           ; 2 bytes @ 0xC
  6450   00006C                     	ds	2
  6451   00006E                     canFillRxFifo@ptr:
  6452                           	callstack 0
  6453                           
  6454                           ; 2 bytes @ 0xE
  6455   00006E                     	ds	3
  6456   000071                     checkTxFifo@m:
  6457                           	callstack 0
  6458                           
  6459                           ; 2 bytes @ 0x11
  6460   000071                     	ds	2
  6461   000073                     checkTxFifo@mp:
  6462                           	callstack 0
  6463                           
  6464                           ; 2 bytes @ 0x13
  6465   000073                     	ds	2
  6466   000075                     ??_checkCANTimeout:
  6467                           
  6468                           ; 1 bytes @ 0x15
  6469   000075                     	ds	4
  6470   000079                     ??_lowIsr:
  6471                           
  6472                           ; 1 bytes @ 0x19
  6473   000079                     	ds	4
  6474   00007D                     lowIsr@i:
  6475                           	callstack 0
  6476                           
  6477                           ; 1 bytes @ 0x1D
  6478   00007D                     	ds	1
  6479   00007E                     ??_isrLow:
  6480                           
  6481                           ; 1 bytes @ 0x1E
  6482   00007E                     	ds	15
  6483   00008D                     ??_findServiceIndex:
  6484   00008D                     ??_have:
  6485   00008D                     ??_showStatus:
  6486   00008D                     ?_getNV:
  6487                           	callstack 0
  6488   00008D                     ?_findService:
  6489                           	callstack 0
  6490   00008D                     ?_getNextWriteMessage:
  6491                           	callstack 0
  6492   00008D                     ?_pop:
  6493                           	callstack 0
  6494   00008D                     ?_getBufferPointer:
  6495                           	callstack 0
  6496   00008D                     ?___awmod:
  6497                           	callstack 0
  6498   00008D                     ?_tickGet:
  6499                           	callstack 0
  6500   00008D                     initOutputs@io:
  6501                           	callstack 0
  6502   00008D                     consumer2QEsdData@index:
  6503                           	callstack 0
  6504   00008D                     pushTwoAction@a:
  6505                           	callstack 0
  6506   00008D                     peekTwoActionQueue@qty:
  6507                           	callstack 0
  6508   00008D                     deleteTwoActionQueue@qty:
  6509                           	callstack 0
  6510   00008D                     needsStarting@act:
  6511                           	callstack 0
  6512   00008D                     completed@action:
  6513                           	callstack 0
  6514   00008D                     finaliseOutput@type:
  6515                           	callstack 0
  6516   00008D                     startBounceOutput@action:
  6517                           	callstack 0
  6518   00008D                     initBounce@io:
  6519                           	callstack 0
  6520   00008D                     ackPowerUp@i:
  6521                           	callstack 0
  6522   00008D                     nvGetESDdata@id:
  6523                           	callstack 0
  6524   00008D                     initTicker@priority:
  6525                           	callstack 0
  6526   00008D                     setTimedResponseDelay@delay:
  6527                           	callstack 0
  6528   00008D                     _isEvent$4867:
  6529                           	callstack 0
  6530   00008D                     push@q:
  6531                           	callstack 0
  6532   00008D                     getNextWriteMessage@q:
  6533                           	callstack 0
  6534   00008D                     pop@q:
  6535                           	callstack 0
  6536   00008D                     quantity@q:
  6537                           	callstack 0
  6538   00008D                     eraseFlashBlock@interruptEnabled:
  6539                           	callstack 0
  6540   00008D                     loadFlashBlock@i:
  6541                           	callstack 0
  6542   00008D                     canEsdData@id:
  6543                           	callstack 0
  6544   00008D                     teachGetESDdata@id:
  6545                           	callstack 0
  6546   00008D                     evtIdxToTableIndex@evtIdx:
  6547                           	callstack 0
  6548   00008D                     tableIndexToEvtIdx@tableIndex:
  6549                           	callstack 0
  6550   00008D                     producerPowerUp@i:
  6551                           	callstack 0
  6552   00008D                     producerEsdData@index:
  6553                           	callstack 0
  6554   00008D                     APP_preProcessMessage@m:
  6555                           	callstack 0
  6556   00008D                     APP_postProcessMessage@m:
  6557                           	callstack 0
  6558   00008D                     EEPROM_Read@index:
  6559                           	callstack 0
  6560   00008D                     FLASH_Read@address:
  6561                           	callstack 0
  6562   00008D                     ___awmod@dividend:
  6563                           	callstack 0
  6564   00008D                     memcpy@d1:
  6565                           	callstack 0
  6566                           
  6567                           ; 2 bytes @ 0x2D
  6568   00008D                     	ds	1
  6569   00008E                     ??_quantity:
  6570   00008E                     peekTwoActionQueue@index:
  6571                           	callstack 0
  6572   00008E                     deleteTwoActionQueue@index:
  6573                           	callstack 0
  6574   00008E                     needsStarting@type:
  6575                           	callstack 0
  6576   00008E                     completed@type:
  6577                           	callstack 0
  6578   00008E                     startBounceOutput@io:
  6579                           	callstack 0
  6580   00008E                     initTicker@divider:
  6581                           	callstack 0
  6582   00008E                     isEvent@opc:
  6583                           	callstack 0
  6584   00008E                     flushFlashBlock@interruptEnabled:
  6585                           	callstack 0
  6586   00008E                     push@m:
  6587                           	callstack 0
  6588                           
  6589                           ; 2 bytes @ 0x2E
  6590   00008E                     	ds	1
  6591   00008F                     ??_getNV:
  6592   00008F                     ??_findService:
  6593   00008F                     ??_getNextWriteMessage:
  6594   00008F                     ??_pop:
  6595   00008F                     ??_FLASH_Read:
  6596   00008F                     showStatus@s:
  6597                           	callstack 0
  6598   00008F                     initTicker@i:
  6599                           	callstack 0
  6600   00008F                     findServiceIndex@serviceType:
  6601                           	callstack 0
  6602   00008F                     have@id:
  6603                           	callstack 0
  6604   00008F                     flushFlashBlock@i:
  6605                           	callstack 0
  6606   00008F                     getBufferPointer@b:
  6607                           	callstack 0
  6608   00008F                     EEPROM_Write@index:
  6609                           	callstack 0
  6610   00008F                     ___awmod@divisor:
  6611                           	callstack 0
  6612   00008F                     memcpy@s1:
  6613                           	callstack 0
  6614                           
  6615                           ; 2 bytes @ 0x2F
  6616   00008F                     	ds	1
  6617   000090                     ??_push:
  6618   000090                     getNV@index:
  6619                           	callstack 0
  6620   000090                     findServiceIndex@i:
  6621                           	callstack 0
  6622   000090                     have@i:
  6623                           	callstack 0
  6624   000090                     FLASH_Write@index:
  6625                           	callstack 0
  6626                           
  6627                           ; 2 bytes @ 0x30
  6628   000090                     	ds	1
  6629   000091                     ??_readInput:
  6630   000091                     ?_readNVM:
  6631                           	callstack 0
  6632   000091                     ?___wmul:
  6633                           	callstack 0
  6634   000091                     ?___lmul:
  6635                           	callstack 0
  6636   000091                     setOutputPin@state:
  6637                           	callstack 0
  6638   000091                     needsStarting@io:
  6639                           	callstack 0
  6640   000091                     _completed$1545:
  6641                           	callstack 0
  6642   000091                     startServoOutput@action:
  6643                           	callstack 0
  6644   000091                     startMultiOutput@action:
  6645                           	callstack 0
  6646   000091                     setServoState@action:
  6647                           	callstack 0
  6648   000091                     setBounceState@action:
  6649                           	callstack 0
  6650   000091                     setMultiState@action:
  6651                           	callstack 0
  6652   000091                     getParameterFlags@flags:
  6653                           	callstack 0
  6654   000091                     tickGet@IntFlag2:
  6655                           	callstack 0
  6656   000091                     startTimedResponse@serviceIndex:
  6657                           	callstack 0
  6658   000091                     findService@id:
  6659                           	callstack 0
  6660   000091                     EEPROM_Write@value:
  6661                           	callstack 0
  6662   000091                     ___awmod@counter:
  6663                           	callstack 0
  6664   000091                     ___wmul@multiplier:
  6665                           	callstack 0
  6666   000091                     memcpy@n:
  6667                           	callstack 0
  6668   000091                     readNVM@index:
  6669                           	callstack 0
  6670   000091                     ___lmul@multiplier:
  6671                           	callstack 0
  6672                           
  6673                           ; 4 bytes @ 0x31
  6674   000091                     	ds	1
  6675   000092                     ??_setOutputPin:
  6676   000092                     ??_startServoOutput:
  6677   000092                     ??_startMultiOutput:
  6678   000092                     completed@io:
  6679                           	callstack 0
  6680   000092                     setServoState@io:
  6681                           	callstack 0
  6682   000092                     setBounceState@io:
  6683                           	callstack 0
  6684   000092                     setMultiState@io:
  6685                           	callstack 0
  6686   000092                     getParameter@idx:
  6687                           	callstack 0
  6688   000092                     tickGet@IntFlag1:
  6689                           	callstack 0
  6690   000092                     findService@i:
  6691                           	callstack 0
  6692   000092                     EEPROM_Write@interruptEnabled:
  6693                           	callstack 0
  6694   000092                     FLASH_Write@value:
  6695                           	callstack 0
  6696   000092                     ___awmod@sign:
  6697                           	callstack 0
  6698   000092                     startTimedResponse@callback:
  6699                           	callstack 0
  6700   000092                     getNumRxBuffersInUse@ptr:
  6701                           	callstack 0
  6702                           
  6703                           ; 2 bytes @ 0x32
  6704   000092                     	ds	1
  6705   000093                     ??_FLASH_Write:
  6706   000093                     readInput@io:
  6707                           	callstack 0
  6708   000093                     setOutputState@act:
  6709                           	callstack 0
  6710   000093                     startServoOutput@io:
  6711                           	callstack 0
  6712   000093                     startMultiOutput@io:
  6713                           	callstack 0
  6714   000093                     memcpy@tmp:
  6715                           	callstack 0
  6716   000093                     ___wmul@multiplicand:
  6717                           	callstack 0
  6718   000093                     tickGet@currentTime:
  6719                           	callstack 0
  6720                           
  6721                           ; 4 bytes @ 0x33
  6722   000093                     	ds	1
  6723   000094                     ??_readNVM:
  6724   000094                     setOutputPin@io:
  6725                           	callstack 0
  6726   000094                     setOutputState@type:
  6727                           	callstack 0
  6728   000094                     startTimedResponse@type:
  6729                           	callstack 0
  6730   000094                     getNumRxBuffersInUse@no:
  6731                           	callstack 0
  6732   000094                     pop@ret:
  6733                           	callstack 0
  6734   000094                     memcpy@d:
  6735                           	callstack 0
  6736                           
  6737                           ; 2 bytes @ 0x34
  6738   000094                     	ds	1
  6739   000095                     ??_setupTimer1:
  6740   000095                     ??_setupTimer3:
  6741   000095                     setOutputState@io:
  6742                           	callstack 0
  6743   000095                     getNumRxBuffersInUse@i:
  6744                           	callstack 0
  6745   000095                     ___wmul@product:
  6746                           	callstack 0
  6747   000095                     ___lmul@multiplicand:
  6748                           	callstack 0
  6749                           
  6750                           ; 4 bytes @ 0x35
  6751   000095                     	ds	1
  6752   000096                     ?_consumer2QGetDiagnostic:
  6753                           	callstack 0
  6754   000096                     ?_ackGetDiagnostic:
  6755                           	callstack 0
  6756   000096                     ?_mnsGetDiagnostic:
  6757                           	callstack 0
  6758   000096                     ?_nvGetDiagnostic:
  6759                           	callstack 0
  6760   000096                     ?_canGetDiagnostic:
  6761                           	callstack 0
  6762   000096                     ?_teachGetDiagnostic:
  6763                           	callstack 0
  6764   000096                     ?_producerGetDiagnostic:
  6765                           	callstack 0
  6766   000096                     readNVM@type:
  6767                           	callstack 0
  6768   000096                     memcpy@s:
  6769                           	callstack 0
  6770                           
  6771                           ; 2 bytes @ 0x36
  6772   000096                     	ds	1
  6773   000097                     ??_initInputScan:
  6774   000097                     ??_validStart:
  6775   000097                     ??_loadNvCache:
  6776   000097                     ??_canPowerUp:
  6777   000097                     ?_getNN:
  6778                           	callstack 0
  6779   000097                     ?_getEN:
  6780                           	callstack 0
  6781   000097                     ?___awdiv:
  6782                           	callstack 0
  6783   000097                     ?___lldiv:
  6784                           	callstack 0
  6785   000097                     setDigitalOutput@state:
  6786                           	callstack 0
  6787   000097                     mnsPowerUp@i:
  6788                           	callstack 0
  6789   000097                     handleSelfEnumeration@p:
  6790                           	callstack 0
  6791   000097                     ___awdiv@dividend:
  6792                           	callstack 0
  6793   000097                     ___lldiv@dividend:
  6794                           	callstack 0
  6795                           
  6796                           ; 4 bytes @ 0x37
  6797   000097                     	ds	1
  6798   000098                     ??_canGetDiagnostic:
  6799   000098                     setDigitalOutput@pinState:
  6800                           	callstack 0
  6801   000098                     consumer2QGetDiagnostic@index:
  6802                           	callstack 0
  6803   000098                     ackGetDiagnostic@index:
  6804                           	callstack 0
  6805   000098                     mnsGetDiagnostic@index:
  6806                           	callstack 0
  6807   000098                     nvGetDiagnostic@index:
  6808                           	callstack 0
  6809   000098                     getNextWriteMessage@wr:
  6810                           	callstack 0
  6811   000098                     teachGetDiagnostic@index:
  6812                           	callstack 0
  6813   000098                     producerGetDiagnostic@index:
  6814                           	callstack 0
  6815   000098                     _setupTimer1$1931:
  6816                           	callstack 0
  6817   000098                     _setupTimer3$1935:
  6818                           	callstack 0
  6819   000098                     mnsPowerUp@temp:
  6820                           	callstack 0
  6821   000098                     canPowerUp@temp:
  6822                           	callstack 0
  6823                           
  6824                           ; 2 bytes @ 0x38
  6825   000098                     	ds	1
  6826   000099                     ??_handleSelfEnumeration:
  6827   000099                     ??_getNN:
  6828   000099                     ??_getEN:
  6829   000099                     setDigitalOutput@io:
  6830                           	callstack 0
  6831   000099                     initInputScan@input:
  6832                           	callstack 0
  6833   000099                     canGetDiagnostic@index:
  6834                           	callstack 0
  6835   000099                     loadNvCache@temp:
  6836                           	callstack 0
  6837   000099                     canSendMessage@mp:
  6838                           	callstack 0
  6839   000099                     ___awdiv@divisor:
  6840                           	callstack 0
  6841   000099                     ___lmul@product:
  6842                           	callstack 0
  6843                           
  6844                           ; 4 bytes @ 0x39
  6845   000099                     	ds	1
  6846   00009A                     setupTimer1@ticks:
  6847                           	callstack 0
  6848   00009A                     setupTimer3@ticks:
  6849                           	callstack 0
  6850                           
  6851                           ; 2 bytes @ 0x3A
  6852   00009A                     	ds	1
  6853   00009B                     ??_canSendMessage:
  6854   00009B                     loadNvCache@i:
  6855                           	callstack 0
  6856   00009B                     validStart@tableIndex:
  6857                           	callstack 0
  6858   00009B                     ___awdiv@counter:
  6859                           	callstack 0
  6860   00009B                     ___lldiv@divisor:
  6861                           	callstack 0
  6862                           
  6863                           ; 4 bytes @ 0x3B
  6864   00009B                     	ds	1
  6865   00009C                     setupTimer1@io:
  6866                           	callstack 0
  6867   00009C                     setupTimer3@io:
  6868                           	callstack 0
  6869   00009C                     nvPowerUp@i:
  6870                           	callstack 0
  6871   00009C                     validStart@f:
  6872                           	callstack 0
  6873   00009C                     ___awdiv@sign:
  6874                           	callstack 0
  6875                           
  6876                           ; 1 bytes @ 0x3C
  6877   00009C                     	ds	1
  6878   00009D                     ??_getEVs:
  6879   00009D                     ??_numEv:
  6880   00009D                     ?_getEv:
  6881                           	callstack 0
  6882   00009D                     handleSelfEnumeration@incomingCanId:
  6883                           	callstack 0
  6884   00009D                     getEv@evNum:
  6885                           	callstack 0
  6886   00009D                     doWait@duration:
  6887                           	callstack 0
  6888   00009D                     getNN@hi:
  6889                           	callstack 0
  6890   00009D                     getEN@hi:
  6891                           	callstack 0
  6892   00009D                     ___awdiv@quotient:
  6893                           	callstack 0
  6894                           
  6895                           ; 2 bytes @ 0x3D
  6896   00009D                     	ds	2
  6897   00009F                     ??_getEv:
  6898   00009F                     ??_doWait:
  6899   00009F                     ??_bounceUp:
  6900   00009F                     ??_bounceDown:
  6901   00009F                     ??_APP_GetEventState:
  6902   00009F                     ??_APP_nvDefault:
  6903   00009F                     ??_leds_poll:
  6904   00009F                     APP_nvValidate@value:
  6905                           	callstack 0
  6906   00009F                     setServoPosition@pos:
  6907                           	callstack 0
  6908   00009F                     getNN@lo:
  6909                           	callstack 0
  6910   00009F                     getEN@lo:
  6911                           	callstack 0
  6912   00009F                     ___lldiv@quotient:
  6913                           	callstack 0
  6914                           
  6915                           ; 4 bytes @ 0x3F
  6916   00009F                     	ds	1
  6917   0000A0                     APP_nvValidate@index:
  6918                           	callstack 0
  6919   0000A0                     setServoPosition@io:
  6920                           	callstack 0
  6921   0000A0                     canSendMessage@no:
  6922                           	callstack 0
  6923                           
  6924                           ; 1 bytes @ 0x40
  6925   0000A0                     	ds	1
  6926   0000A1                     setOutputPosition@pos:
  6927                           	callstack 0
  6928   0000A1                     numEv@num:
  6929                           	callstack 0
  6930   0000A1                     getEVs@f:
  6931                           	callstack 0
  6932   0000A1                     getNN@f:
  6933                           	callstack 0
  6934   0000A1                     getEN@tableIndex:
  6935                           	callstack 0
  6936   0000A1                     canSendMessage@m:
  6937                           	callstack 0
  6938                           
  6939                           ; 2 bytes @ 0x41
  6940   0000A1                     	ds	1
  6941   0000A2                     setOutputPosition@type:
  6942                           	callstack 0
  6943   0000A2                     numEv@f:
  6944                           	callstack 0
  6945   0000A2                     getEVs@evIdx:
  6946                           	callstack 0
  6947   0000A2                     getNN@tableIndex:
  6948                           	callstack 0
  6949                           
  6950                           ; 1 bytes @ 0x42
  6951   0000A2                     	ds	1
  6952   0000A3                     ??_sendMessage:
  6953   0000A3                     APP_nvDefault@index:
  6954                           	callstack 0
  6955   0000A3                     setOutputPosition@io:
  6956                           	callstack 0
  6957   0000A3                     numEv@tableIndex:
  6958                           	callstack 0
  6959   0000A3                     getEVs@tableIndex:
  6960                           	callstack 0
  6961   0000A3                     ___lldiv@counter:
  6962                           	callstack 0
  6963   0000A3                     getHash@nn:
  6964                           	callstack 0
  6965                           
  6966                           ; 2 bytes @ 0x43
  6967   0000A3                     	ds	1
  6968   0000A4                     ??_initServos:
  6969   0000A4                     ??_pbDownTimer:
  6970   0000A4                     ??_pbUpTimer:
  6971   0000A4                     getEv@f:
  6972                           	callstack 0
  6973   0000A4                     getEVs@evNum:
  6974                           	callstack 0
  6975   0000A4                     writeNVM@index:
  6976                           	callstack 0
  6977                           
  6978                           ; 3 bytes @ 0x44
  6979   0000A4                     	ds	1
  6980   0000A5                     bounceUp@reversed:
  6981                           	callstack 0
  6982   0000A5                     sendMessage@opc:
  6983                           	callstack 0
  6984   0000A5                     getEv@tableIndex:
  6985                           	callstack 0
  6986   0000A5                     getHash@en:
  6987                           	callstack 0
  6988                           
  6989                           ; 2 bytes @ 0x45
  6990   0000A5                     	ds	1
  6991   0000A6                     isConsumedEvent@eventIndex:
  6992                           	callstack 0
  6993   0000A6                     bounceUp@midway:
  6994                           	callstack 0
  6995   0000A6                     sendMessage2@data1:
  6996                           	callstack 0
  6997   0000A6                     sendMessage3@data1:
  6998                           	callstack 0
  6999   0000A6                     sendMessage4@opc:
  7000                           	callstack 0
  7001   0000A6                     sendMessage5@opc:
  7002                           	callstack 0
  7003   0000A6                     sendMessage6@opc:
  7004                           	callstack 0
  7005   0000A6                     sendMessage7@opc:
  7006                           	callstack 0
  7007   0000A6                     _initServos$8065:
  7008                           	callstack 0
  7009                           
  7010                           ; 1 bytes @ 0x46
  7011   0000A6                     	ds	1
  7012   0000A7                     ??_getHash:
  7013   0000A7                     isConsumedEvent@ev:
  7014                           	callstack 0
  7015   0000A7                     bounceUp@io:
  7016                           	callstack 0
  7017   0000A7                     sendMessage2@data2:
  7018                           	callstack 0
  7019   0000A7                     sendMessage3@data2:
  7020                           	callstack 0
  7021   0000A7                     writeNVM@value:
  7022                           	callstack 0
  7023   0000A7                     sendProducedEvent@onOff:
  7024                           	callstack 0
  7025   0000A7                     _initServos$8064:
  7026                           	callstack 0
  7027                           
  7028                           ; 1 bytes @ 0x47
  7029   0000A7                     	ds	1
  7030   0000A8                     initServos@io:
  7031                           	callstack 0
  7032   0000A8                     pbDownTimer@timeout:
  7033                           	callstack 0
  7034   0000A8                     pbUpTimer@timeout:
  7035                           	callstack 0
  7036   0000A8                     sendMessage2@opc:
  7037                           	callstack 0
  7038   0000A8                     sendMessage3@data3:
  7039                           	callstack 0
  7040   0000A8                     writeNVM@type:
  7041                           	callstack 0
  7042   0000A8                     getHash@hash:
  7043                           	callstack 0
  7044                           
  7045                           ; 1 bytes @ 0x48
  7046   0000A8                     	ds	1
  7047   0000A9                     
  7048                           ; 1 bytes @ 0x49
  7049                           
  7050                           	psect	cstackCOMRAM
  7051   000001                     __pcstackCOMRAM:
  7052                           	callstack 0
  7053   000001                     ?i2_getNV:
  7054                           	callstack 0
  7055   000001                     ?i2_getNextWriteMessage:
  7056                           	callstack 0
  7057   000001                     ?i2_pop:
  7058                           	callstack 0
  7059   000001                     ?i2_getBufferPointer:
  7060                           	callstack 0
  7061   000001                     ?i2_tickGet:
  7062                           	callstack 0
  7063   000001                     i2_isEvent$4867:
  7064                           	callstack 0
  7065   000001                     i2getNextWriteMessage@q:
  7066                           	callstack 0
  7067   000001                     i2pop@q:
  7068                           	callstack 0
  7069                           
  7070                           ; 1 bytes @ 0x0
  7071   000001                     	ds	1
  7072   000002                     i2isEvent@opc:
  7073                           	callstack 0
  7074                           
  7075                           ; 1 bytes @ 0x1
  7076   000002                     	ds	1
  7077   000003                     ??i2_getNV:
  7078   000003                     ??i2_getNextWriteMessage:
  7079   000003                     ??i2_pop:
  7080   000003                     i2getBufferPointer@b:
  7081                           	callstack 0
  7082                           
  7083                           ; 1 bytes @ 0x2
  7084   000003                     	ds	1
  7085   000004                     i2getNV@index:
  7086                           	callstack 0
  7087                           
  7088                           ; 1 bytes @ 0x3
  7089   000004                     	ds	1
  7090   000005                     i2setOutputPin@state:
  7091                           	callstack 0
  7092   000005                     i2tickGet@IntFlag2:
  7093                           	callstack 0
  7094                           
  7095                           ; 1 bytes @ 0x4
  7096   000005                     	ds	1
  7097   000006                     ??i2_setOutputPin:
  7098   000006                     i2tickGet@IntFlag1:
  7099                           	callstack 0
  7100                           
  7101                           ; 1 bytes @ 0x5
  7102   000006                     	ds	1
  7103   000007                     i2tickGet@currentTime:
  7104                           	callstack 0
  7105                           
  7106                           ; 4 bytes @ 0x6
  7107   000007                     	ds	1
  7108   000008                     i2setOutputPin@io:
  7109                           	callstack 0
  7110   000008                     i2pop@ret:
  7111                           	callstack 0
  7112                           
  7113                           ; 2 bytes @ 0x7
  7114   000008                     	ds	1
  7115   000009                     
  7116                           ; 1 bytes @ 0x8
  7117   000009                     	ds	3
  7118   00000C                     i2getNextWriteMessage@wr:
  7119                           	callstack 0
  7120                           
  7121                           ; 1 bytes @ 0xB
  7122   00000C                     	ds	1
  7123   00000D                     ??i2_checkTxFifo:
  7124   00000D                     i2canFillRxFifo@m:
  7125                           	callstack 0
  7126                           
  7127                           ; 2 bytes @ 0xC
  7128   00000D                     	ds	2
  7129   00000F                     i2canFillRxFifo@ptr:
  7130                           	callstack 0
  7131                           
  7132                           ; 2 bytes @ 0xE
  7133   00000F                     	ds	3
  7134   000012                     i2checkTxFifo@m:
  7135                           	callstack 0
  7136                           
  7137                           ; 2 bytes @ 0x11
  7138   000012                     	ds	2
  7139   000014                     i2checkTxFifo@mp:
  7140                           	callstack 0
  7141                           
  7142                           ; 2 bytes @ 0x13
  7143   000014                     	ds	2
  7144   000016                     ??i2_checkCANTimeout:
  7145   000016                     
  7146                           ; 1 bytes @ 0x15
  7147   000016                     	ds	4
  7148   00001A                     ??_highIsr:
  7149   00001A                     
  7150                           ; 1 bytes @ 0x19
  7151   00001A                     	ds	4
  7152   00001E                     highIsr@i:
  7153                           	callstack 0
  7154                           
  7155                           ; 1 bytes @ 0x1D
  7156   00001E                     	ds	1
  7157   00001F                     ??_isrHigh:
  7158                           
  7159                           ; 1 bytes @ 0x1E
  7160   00001F                     	ds	12
  7161                           
  7162 ;;
  7163 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  7164 ;;
  7165 ;; *************** function _main *****************
  7166 ;; Defined at:
  7167 ;;		line 1248 in file "../../VLCBlib_PIC/vlcb.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;		None
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  i               1    0        unsigned char 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  1    wreg      void 
  7174 ;; Registers used:
  7175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;Total ram usage:        0 bytes
  7186 ;; Hardware stack levels required when called: 29
  7187 ;; This function calls:
  7188 ;;		_checkPowerOnPb
  7189 ;;		_factoryReset
  7190 ;;		_initRomOps
  7191 ;;		_loop
  7192 ;;		_poll
  7193 ;;		_powerUp
  7194 ;;		_readNVM
  7195 ;;		_setup
  7196 ;; This function is called by:
  7197 ;;		Startup code after reset
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text0
  7202   00B8B2                     __ptext0:
  7203                           	callstack 0
  7204   00B8B2                     _main:
  7205                           	callstack 2
  7206                           
  7207                           ;../../VLCBlib_PIC/vlcb.c: 1249:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1255:     OSCT
      +                          UNEbits.PLLEN = 1;
  7208                           
  7209                           ;incstack = 0
  7210   00B8B2  8C9B               	bsf	155,6,c	;volatile
  7211                           
  7212                           ;../../VLCBlib_PIC/vlcb.c: 1270:     RCONbits.IPEN = 1;
  7213   00B8B4  8ED0               	bsf	208,7,c	;volatile
  7214                           
  7215                           ;../../VLCBlib_PIC/vlcb.c: 1292:     initRomOps();
  7216   00B8B6  EC2E  F062         	call	_initRomOps	;wreg free
  7217                           
  7218                           ;../../VLCBlib_PIC/vlcb.c: 1294:     if (readNVM(EEPROM_NVM_TYPE, 0x3FA) != 1) {
  7219   00B8BA  0EFA               	movlw	250
  7220   00B8BC  0100               	movlb	0	; () banked
  7221   00B8BE  6F91               	movwf	readNVM@index& (0+255),b
  7222   00B8C0  0E03               	movlw	3
  7223   00B8C2  6F92               	movwf	(readNVM@index+1)& (0+255),b
  7224   00B8C4  0E00               	movlw	0
  7225   00B8C6  6F93               	movwf	(readNVM@index+2)& (0+255),b
  7226   00B8C8  0E00               	movlw	0
  7227   00B8CA  EC57  F059         	call	_readNVM
  7228   00B8CE  0100               	movlb	0	; () banked
  7229   00B8D0  0591               	decf	?_readNVM& (0+255),w,b
  7230   00B8D2  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
  7231   00B8D4  A4D8               	btfss	status,2,c
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;../../VLCBlib_PIC/vlcb.c: 1295:         factoryReset();
  7235   00B8D6  EC9C  F042         	call	_factoryReset	;wreg free
  7236                           
  7237                           ;../../VLCBlib_PIC/vlcb.c: 1299:     powerUp();
  7238                           
  7239                           ;../../VLCBlib_PIC/vlcb.c: 1296:     }
  7240   00B8DA  EC63  F044         	call	_powerUp	;wreg free
  7241                           
  7242                           ;../../VLCBlib_PIC/vlcb.c: 1302:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7243   00B8DE  8EF2               	bsf	242,7,c	;volatile
  7244   00B8E0  8CF2               	bsf	242,6,c	;volatile
  7245                           
  7246                           ;../../VLCBlib_PIC/vlcb.c: 1303:     checkPowerOnPb();
  7247   00B8E2  ECB6  F059         	call	_checkPowerOnPb	;wreg free
  7248                           
  7249                           ;../../VLCBlib_PIC/vlcb.c: 1306:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
  7250   00B8E6  9EF2               	bcf	242,7,c	;volatile
  7251   00B8E8  9CF2               	bcf	242,6,c	;volatile
  7252                           
  7253                           ;../../VLCBlib_PIC/vlcb.c: 1307:     setup();
  7254   00B8EA  EC26  F04C         	call	_setup	;wreg free
  7255                           
  7256                           ;../../VLCBlib_PIC/vlcb.c: 1310:     {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
  7257   00B8EE  8EF2               	bsf	242,7,c	;volatile
  7258   00B8F0  8CF2               	bsf	242,6,c	;volatile
  7259   00B8F2                     l24838:
  7260                           
  7261                           ;../../VLCBlib_PIC/vlcb.c: 1314:         poll();
  7262   00B8F2  EC80  F01C         	call	_poll	;wreg free
  7263                           
  7264                           ;../../VLCBlib_PIC/vlcb.c: 1315:         loop();
  7265   00B8F6  ECC4  F035         	call	_loop	;wreg free
  7266   00B8FA  D7FB               	goto	l24838
  7267   00B8FC                     __end_of_main:
  7268                           	callstack 0
  7269                           
  7270 ;; *************** function _setup *****************
  7271 ;; Defined at:
  7272 ;;		line 236 in file "../main.c"
  7273 ;; Parameters:    Size  Location     Type
  7274 ;;		None
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;		None
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  1    wreg      void 
  7279 ;; Registers used:
  7280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;Total ram usage:        0 bytes
  7291 ;; Hardware stack levels used: 1
  7292 ;; Hardware stack levels required when called: 19
  7293 ;; This function calls:
  7294 ;;		_configIO
  7295 ;;		_getNV
  7296 ;;		_initInputScan
  7297 ;;		_initOutputs
  7298 ;;		_initServos
  7299 ;;		_setTimedResponseDelay
  7300 ;;		_tickGet
  7301 ;;		_universalEventsInit
  7302 ;; This function is called by:
  7303 ;;		_main
  7304 ;; This function uses a non-reentrant model
  7305 ;;
  7306                           
  7307                           	psect	text1
  7308   00984C                     __ptext1:
  7309                           	callstack 0
  7310   00984C                     _setup:
  7311                           	callstack 11
  7312                           
  7313                           ;../main.c: 241:     transport = &canTransport;
  7314                           
  7315                           ;incstack = 0
  7316   00984C  0E7B               	movlw	low _canTransport
  7317   00984E  0101               	movlb	1	; () banked
  7318   009850  6F62               	movwf	_transport& (0+255),b
  7319   009852  0EEF               	movlw	high _canTransport
  7320   009854  6F63               	movwf	(_transport+1)& (0+255),b
  7321                           
  7322                           ; BSR set to: 1
  7323                           ;../main.c: 248:     INTCON2bits.RBPU = 0;
  7324   009856  9EF1               	bcf	241,7,c	;volatile
  7325                           
  7326                           ; BSR set to: 1
  7327                           ;../main.c: 250:     WPUB = (uint8_t)getNV(4);
  7328   009858  0E04               	movlw	4
  7329   00985A  ECD9  F05D         	call	_getNV
  7330   00985E  0100               	movlb	0	; () banked
  7331   009860  518D               	movf	?_getNV& (0+255),w,b
  7332   009862  010F               	movlb	15	; () banked
  7333   009864  6F5B               	movwf	91,b	;volatile
  7334                           
  7335                           ; BSR set to: 15
  7336                           ;../main.c: 304:     setTimedResponseDelay((uint8_t)getNV(5));
  7337   009866  0E05               	movlw	5
  7338   009868  ECD9  F05D         	call	_getNV
  7339   00986C  0100               	movlb	0	; () banked
  7340   00986E  518D               	movf	?_getNV& (0+255),w,b
  7341   009870  EC7E  F062         	call	_setTimedResponseDelay
  7342                           
  7343                           ;../main.c: 305:     universalEventsInit();
  7344   009874  EC42  F062         	call	_universalEventsInit	;wreg free
  7345                           
  7346                           ;../main.c: 312:     ANCON0 = 0x00;
  7347   009878  0E00               	movlw	0
  7348   00987A  010F               	movlb	15	; () banked
  7349   00987C  6F5D               	movwf	93,b	;volatile
  7350                           
  7351                           ; BSR set to: 15
  7352                           ;../main.c: 313:     ANCON1 = 0x00;
  7353   00987E  0E00               	movlw	0
  7354   009880  6F5C               	movwf	92,b	;volatile
  7355                           
  7356                           ; BSR set to: 15
  7357                           ;../main.c: 326:     initServos();
  7358   009882  ECF9  F03D         	call	_initServos	;wreg free
  7359                           
  7360                           ;../main.c: 328:     initOutputs();
  7361   009886  ECF4  F05F         	call	_initOutputs	;wreg free
  7362                           
  7363                           ;../main.c: 331:     for (io=0; io< 16; io++) {
  7364   00988A  0E00               	movlw	0
  7365   00988C  0100               	movlb	0	; () banked
  7366   00988E  6FD1               	movwf	_io& (0+255),b
  7367   009890                     l24586:
  7368                           
  7369                           ; BSR set to: 0
  7370   009890  0E0F               	movlw	15
  7371   009892  65D1               	cpfsgt	_io& (0+255),b
  7372   009894  D001               	goto	l24590
  7373   009896  D006               	goto	l24596
  7374   009898                     l24590:
  7375                           
  7376                           ; BSR set to: 0
  7377                           ;../main.c: 332:         configIO(io);
  7378   009898  51D1               	movf	_io& (0+255),w,b
  7379   00989A  EC4C  F026         	call	_configIO
  7380                           
  7381                           ;../main.c: 333:     }
  7382   00989E  0100               	movlb	0	; () banked
  7383   0098A0  2BD1               	incf	_io& (0+255),f,b
  7384   0098A2  D7F6               	goto	l24586
  7385   0098A4                     l24596:
  7386                           
  7387                           ; BSR set to: 0
  7388                           ;../main.c: 334:     initInputScan();
  7389   0098A4  EC7B  F04C         	call	_initInputScan	;wreg free
  7390                           
  7391                           ;../main.c: 340:     (INTCONbits.GIE = 1);
  7392   0098A8  8EF2               	bsf	242,7,c	;volatile
  7393                           
  7394                           ;../main.c: 342:     startTime.val = tickGet();
  7395   0098AA  EC6B  F05A         	call	_tickGet	;wreg free
  7396   0098AE  C08D  F03B         	movff	?_tickGet,_startTime
  7397   0098B2  C08E  F03C         	movff	?_tickGet+1,_startTime+1
  7398   0098B6  C08F  F03D         	movff	?_tickGet+2,_startTime+2
  7399   0098BA  C090  F03E         	movff	?_tickGet+3,_startTime+3
  7400                           
  7401                           ;../main.c: 343:     lastServoStartTime.val = startTime.val;
  7402   0098BE  C03B  F15C         	movff	_startTime,_lastServoStartTime
  7403   0098C2  C03C  F15D         	movff	_startTime+1,_lastServoStartTime+1
  7404   0098C6  C03D  F15E         	movff	_startTime+2,_lastServoStartTime+2
  7405   0098CA  C03E  F15F         	movff	_startTime+3,_lastServoStartTime+3
  7406                           
  7407                           ;../main.c: 344:     lastInputScanTime.val = startTime.val;
  7408   0098CE  C03B  F158         	movff	_startTime,_lastInputScanTime
  7409   0098D2  C03C  F159         	movff	_startTime+1,_lastInputScanTime+1
  7410   0098D6  C03D  F15A         	movff	_startTime+2,_lastInputScanTime+2
  7411   0098DA  C03E  F15B         	movff	_startTime+3,_lastInputScanTime+3
  7412                           
  7413                           ;../main.c: 345:     lastActionPollTime.val = startTime.val;
  7414   0098DE  C03B  F154         	movff	_startTime,_lastActionPollTime
  7415   0098E2  C03C  F155         	movff	_startTime+1,_lastActionPollTime+1
  7416   0098E6  C03D  F156         	movff	_startTime+2,_lastActionPollTime+2
  7417   0098EA  C03E  F157         	movff	_startTime+3,_lastActionPollTime+3
  7418                           
  7419                           ;../main.c: 350:     started = FALSE;
  7420   0098EE  0E00               	movlw	0
  7421   0098F0  0100               	movlb	0	; () banked
  7422   0098F2  6FD2               	movwf	_started& (0+255),b
  7423                           
  7424                           ; BSR set to: 0
  7425   0098F4  0012               	return		;funcret
  7426   0098F6                     __end_of_setup:
  7427                           	callstack 0
  7428                           
  7429 ;; *************** function _universalEventsInit *****************
  7430 ;; Defined at:
  7431 ;;		line 93 in file "../universalEvents.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;		None
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1    wreg      void 
  7438 ;; Registers used:
  7439 ;;		wreg, status,2
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 0/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;Total ram usage:        0 bytes
  7450 ;; Hardware stack levels used: 1
  7451 ;; Hardware stack levels required when called: 12
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_setup
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text2
  7460   00C484                     __ptext2:
  7461                           	callstack 0
  7462   00C484                     _universalEventsInit:
  7463                           	callstack 17
  7464                           
  7465                           ;../universalEvents.c: 94:     startWait.val = 0;
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;incstack = 0
  7469   00C484  0E00               	movlw	0
  7470   00C486  6E37               	movwf	_startWait^0,c
  7471   00C488  0E00               	movlw	0
  7472   00C48A  6E38               	movwf	(_startWait+1)^0,c
  7473   00C48C  0E00               	movlw	0
  7474   00C48E  6E39               	movwf	(_startWait+2)^0,c
  7475   00C490  0E00               	movlw	0
  7476   00C492  6E3A               	movwf	(_startWait+3)^0,c
  7477   00C494  0012               	return		;funcret
  7478   00C496                     __end_of_universalEventsInit:
  7479                           	callstack 0
  7480                           
  7481 ;; *************** function _initServos *****************
  7482 ;; Defined at:
  7483 ;;		line 123 in file "../servo.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;		None
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  io              1   72[BANK0 ] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7498 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7500 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7501 ;;Total ram usage:        5 bytes
  7502 ;; Hardware stack levels used: 1
  7503 ;; Hardware stack levels required when called: 15
  7504 ;; This function calls:
  7505 ;;		_getNV
  7506 ;;		_readNVM
  7507 ;;		_setOutputPosition
  7508 ;;		_tickGet
  7509 ;; This function is called by:
  7510 ;;		_setup
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text3
  7515   007BF2                     __ptext3:
  7516                           	callstack 0
  7517   007BF2                     _initServos:
  7518                           	callstack 14
  7519                           
  7520                           ;incstack = 0
  7521   007BF2  0E00               	movlw	0
  7522   007BF4  0100               	movlb	0	; () banked
  7523   007BF6  6FA8               	movwf	initServos@io& (0+255),b
  7524   007BF8                     l22578:
  7525                           
  7526                           ; BSR set to: 0
  7527   007BF8  51A8               	movf	initServos@io& (0+255),w,b
  7528   007BFA  0D07               	mullw	7
  7529   007BFC  50F3               	movf	243,w,c
  7530   007BFE  0F11               	addlw	17
  7531   007C00  ECD9  F05D         	call	_getNV
  7532   007C04  0100               	movlb	0	; () banked
  7533   007C06  A58D               	btfss	?_getNV& (0+255),2,b
  7534   007C08  D009               	goto	l22582
  7535                           
  7536                           ; BSR set to: 0
  7537   007C0A  0E10               	movlw	low _servoState
  7538   007C0C  25A8               	addwf	initServos@io& (0+255),w,b
  7539   007C0E  6ED9               	movwf	fsr2l,c
  7540   007C10  6ADA               	clrf	fsr2h,c
  7541   007C12  0E01               	movlw	high _servoState
  7542   007C14  22DA               	addwfc	fsr2h,f,c
  7543   007C16  0E01               	movlw	1
  7544   007C18  6EDF               	movwf	indf2,c
  7545   007C1A  D007               	goto	l22584
  7546   007C1C                     l22582:
  7547                           
  7548                           ; BSR set to: 0
  7549   007C1C  0E10               	movlw	low _servoState
  7550   007C1E  25A8               	addwf	initServos@io& (0+255),w,b
  7551   007C20  6ED9               	movwf	fsr2l,c
  7552   007C22  6ADA               	clrf	fsr2h,c
  7553   007C24  0E01               	movlw	high _servoState
  7554   007C26  22DA               	addwfc	fsr2h,f,c
  7555   007C28  6ADF               	clrf	indf2,c
  7556   007C2A                     l22584:
  7557                           
  7558                           ; BSR set to: 0
  7559   007C2A  EC6B  F05A         	call	_tickGet	;wreg free
  7560   007C2E  0100               	movlb	0	; () banked
  7561   007C30  51A8               	movf	initServos@io& (0+255),w,b
  7562   007C32  0D04               	mullw	4
  7563   007C34  0E88               	movlw	low _ticksWhenStopped
  7564   007C36  24F3               	addwf	243,w,c
  7565   007C38  6ED9               	movwf	fsr2l,c
  7566   007C3A  0E03               	movlw	high _ticksWhenStopped
  7567   007C3C  20F4               	addwfc	prodh,w,c
  7568   007C3E  6EDA               	movwf	fsr2h,c
  7569   007C40  C08D  FFDE         	movff	?_tickGet,postinc2
  7570   007C44  C08E  FFDE         	movff	?_tickGet+1,postinc2
  7571   007C48  C08F  FFDE         	movff	?_tickGet+2,postinc2
  7572   007C4C  C090  FFDE         	movff	?_tickGet+3,postinc2
  7573                           
  7574                           ; BSR set to: 0
  7575   007C50  51A8               	movf	initServos@io& (0+255),w,b
  7576   007C52  0D07               	mullw	7
  7577   007C54  50F3               	movf	243,w,c
  7578   007C56  0F11               	addlw	17
  7579   007C58  ECD9  F05D         	call	_getNV
  7580   007C5C  0100               	movlb	0	; () banked
  7581   007C5E  A58D               	btfss	?_getNV& (0+255),2,b
  7582   007C60  D020               	goto	l22592
  7583                           
  7584                           ; BSR set to: 0
  7585   007C62  51A8               	movf	initServos@io& (0+255),w,b
  7586   007C64  0D07               	mullw	7
  7587   007C66  50F3               	movf	243,w,c
  7588   007C68  0F10               	addlw	16
  7589   007C6A  ECD9  F05D         	call	_getNV
  7590   007C6E  0100               	movlb	0	; () banked
  7591   007C70  518D               	movf	?_getNV& (0+255),w,b
  7592   007C72  6FA7               	movwf	_initServos$8064& (0+255),b
  7593                           
  7594                           ; BSR set to: 0
  7595   007C74  0EDE               	movlw	222
  7596   007C76  25A8               	addwf	initServos@io& (0+255),w,b
  7597   007C78  6FA4               	movwf	??_initServos& (0+255),b
  7598   007C7A  6BA5               	clrf	(??_initServos+1)& (0+255),b
  7599   007C7C  0E03               	movlw	3
  7600   007C7E  23A5               	addwfc	(??_initServos+1)& (0+255),f,b
  7601   007C80  C0A4  F091         	movff	??_initServos,readNVM@index
  7602   007C84  C0A5  F092         	movff	??_initServos+1,readNVM@index+1
  7603   007C88  6B93               	clrf	(readNVM@index+2)& (0+255),b
  7604   007C8A  0E00               	movlw	0
  7605   007C8C  EC57  F059         	call	_readNVM
  7606   007C90  0100               	movlb	0	; () banked
  7607   007C92  5191               	movf	?_readNVM& (0+255),w,b
  7608   007C94  6FA1               	movwf	setOutputPosition@pos& (0+255),b
  7609   007C96  C0A7  F0A2         	movff	_initServos$8064,setOutputPosition@type
  7610   007C9A  51A8               	movf	initServos@io& (0+255),w,b
  7611   007C9C  ECD4  F055         	call	_setOutputPosition
  7612   007CA0  D019               	goto	l22596
  7613   007CA2                     l22592:
  7614                           
  7615                           ; BSR set to: 0
  7616   007CA2  51A8               	movf	initServos@io& (0+255),w,b
  7617   007CA4  0D07               	mullw	7
  7618   007CA6  50F3               	movf	243,w,c
  7619   007CA8  0F12               	addlw	18
  7620   007CAA  ECD9  F05D         	call	_getNV
  7621   007CAE  0100               	movlb	0	; () banked
  7622   007CB0  518D               	movf	?_getNV& (0+255),w,b
  7623   007CB2  6FA7               	movwf	_initServos$8064& (0+255),b
  7624   007CB4  51A8               	movf	initServos@io& (0+255),w,b
  7625   007CB6  0D07               	mullw	7
  7626   007CB8  50F3               	movf	243,w,c
  7627   007CBA  0F10               	addlw	16
  7628   007CBC  ECD9  F05D         	call	_getNV
  7629   007CC0  0100               	movlb	0	; () banked
  7630   007CC2  518D               	movf	?_getNV& (0+255),w,b
  7631   007CC4  6FA6               	movwf	_initServos$8065& (0+255),b
  7632                           
  7633                           ; BSR set to: 0
  7634   007CC6  C0A7  F0A1         	movff	_initServos$8064,setOutputPosition@pos
  7635   007CCA  C0A6  F0A2         	movff	_initServos$8065,setOutputPosition@type
  7636   007CCE  51A8               	movf	initServos@io& (0+255),w,b
  7637   007CD0  ECD4  F055         	call	_setOutputPosition
  7638   007CD4                     l22596:
  7639   007CD4  0E00               	movlw	low _stepsPerPollSpeed
  7640   007CD6  0100               	movlb	0	; () banked
  7641   007CD8  25A8               	addwf	initServos@io& (0+255),w,b
  7642   007CDA  6ED9               	movwf	fsr2l,c
  7643   007CDC  6ADA               	clrf	fsr2h,c
  7644   007CDE  0E01               	movlw	high _stepsPerPollSpeed
  7645   007CE0  22DA               	addwfc	fsr2h,f,c
  7646   007CE2  6ADF               	clrf	indf2,c
  7647                           
  7648                           ; BSR set to: 0
  7649   007CE4  2BA8               	incf	initServos@io& (0+255),f,b
  7650                           
  7651                           ; BSR set to: 0
  7652   007CE6  0E0F               	movlw	15
  7653   007CE8  65A8               	cpfsgt	initServos@io& (0+255),b
  7654   007CEA  D786               	goto	l22578
  7655                           
  7656                           ; BSR set to: 0
  7657   007CEC  9EAA               	bcf	170,7,c	;volatile
  7658                           
  7659                           ; BSR set to: 0
  7660   007CEE  0E3F               	movlw	-193
  7661   007CF0  16CD               	andwf	205,f,c	;volatile
  7662   007CF2  50CD               	movf	205,w,c	;volatile
  7663   007CF4  0BCF               	andlw	-49
  7664   007CF6  0920               	iorlw	32
  7665   007CF8  6ECD               	movwf	205,c	;volatile
  7666                           
  7667                           ; BSR set to: 0
  7668   007CFA  86CD               	bsf	205,3,c	;volatile
  7669                           
  7670                           ; BSR set to: 0
  7671   007CFC  82CD               	bsf	205,1,c	;volatile
  7672                           
  7673                           ; BSR set to: 0
  7674   007CFE  809D               	bsf	157,0,c	;volatile
  7675                           
  7676                           ; BSR set to: 0
  7677   007D00  9EB0               	bcf	176,7,c	;volatile
  7678   007D02  0E3F               	movlw	-193
  7679   007D04  16B1               	andwf	177,f,c	;volatile
  7680   007D06  50B1               	movf	177,w,c	;volatile
  7681   007D08  0BCF               	andlw	-49
  7682   007D0A  0920               	iorlw	32
  7683   007D0C  6EB1               	movwf	177,c	;volatile
  7684                           
  7685                           ; BSR set to: 0
  7686   007D0E  86B1               	bsf	177,3,c	;volatile
  7687                           
  7688                           ; BSR set to: 0
  7689   007D10  82B1               	bsf	177,1,c	;volatile
  7690                           
  7691                           ; BSR set to: 0
  7692   007D12  82A0               	bsf	160,1,c	;volatile
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;../servo.c: 175:     servoInBlock = io -1;
  7696   007D14  05A8               	decf	initServos@io& (0+255),w,b
  7697   007D16  6FCB               	movwf	_servoInBlock& (0+255),b
  7698                           
  7699                           ; BSR set to: 0
  7700   007D18  0012               	return		;funcret
  7701   007D1A                     __end_of_initServos:
  7702                           	callstack 0
  7703                           
  7704 ;; *************** function _setOutputPosition *****************
  7705 ;; Defined at:
  7706 ;;		line 148 in file "../outputs.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  io              1    wreg     unsigned char 
  7709 ;;  pos             1   65[BANK0 ] unsigned char 
  7710 ;;  type            1   66[BANK0 ] unsigned char 
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;  io              1   67[BANK0 ] unsigned char 
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1    wreg      void 
  7715 ;; Registers used:
  7716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7717 ;; Tracked objects:
  7718 ;;		On entry : 0/0
  7719 ;;		On exit  : 0/0
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7722 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7723 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7725 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;Total ram usage:        3 bytes
  7727 ;; Hardware stack levels used: 1
  7728 ;; Hardware stack levels required when called: 14
  7729 ;; This function calls:
  7730 ;;		_getNV
  7731 ;;		_setDigitalOutput
  7732 ;;		_setOutputPin
  7733 ;;		_setServoPosition
  7734 ;; This function is called by:
  7735 ;;		_initServos
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text4
  7740   00ABA8                     __ptext4:
  7741                           	callstack 0
  7742   00ABA8                     _setOutputPosition:
  7743                           	callstack 14
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;incstack = 0
  7747                           ;setOutputPosition@io stored from wreg
  7748   00ABA8  0100               	movlb	0	; () banked
  7749   00ABAA  6FA3               	movwf	setOutputPosition@io& (0+255),b
  7750                           
  7751                           ;../outputs.c: 149:     switch(type) {
  7752   00ABAC  D020               	goto	l21520
  7753   00ABAE                     l21508:
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;../outputs.c: 156:             setDigitalOutput(io, pos);
  7757   00ABAE  C0A1  F097         	movff	setOutputPosition@pos,setDigitalOutput@state
  7758   00ABB2  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7759   00ABB4  ECD1  F051         	call	_setDigitalOutput
  7760   00ABB8  0012               	return	
  7761   00ABBA                     l21512:
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;../outputs.c: 166:             setServoPosition(io, pos);
  7765   00ABBA  C0A1  F09F         	movff	setOutputPosition@pos,setServoPosition@pos
  7766   00ABBE  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7767   00ABC0  ECFE  F060         	call	_setServoPosition
  7768                           
  7769                           ;../outputs.c: 167:             setOutputPin(io, getNV((16 + 7*(io) + 1) & 0x20)?TRUE:FA
      +                          LSE);
  7770   00ABC4  0100               	movlb	0	; () banked
  7771   00ABC6  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7772   00ABC8  0D07               	mullw	7
  7773   00ABCA  50F3               	movf	243,w,c
  7774   00ABCC  0F11               	addlw	17
  7775   00ABCE  0B20               	andlw	32
  7776   00ABD0  ECD9  F05D         	call	_getNV
  7777   00ABD4  0100               	movlb	0	; () banked
  7778   00ABD6  518D               	movf	?_getNV& (0+255),w,b
  7779   00ABD8  118E               	iorwf	(?_getNV+1)& (0+255),w,b
  7780   00ABDA  B4D8               	btfsc	status,2,c
  7781   00ABDC  D002               	goto	u22100
  7782   00ABDE  0E01               	movlw	1
  7783   00ABE0  D001               	goto	u22110
  7784   00ABE2                     u22100:
  7785   00ABE2  0E00               	movlw	0
  7786   00ABE4                     u22110:
  7787   00ABE4  6F91               	movwf	setOutputPin@state& (0+255),b
  7788   00ABE6  51A3               	movf	setOutputPosition@io& (0+255),w,b
  7789   00ABE8  ECA5  F036         	call	_setOutputPin
  7790   00ABEC  0012               	return	
  7791   00ABEE                     l21520:
  7792   00ABEE  0100               	movlb	0	; () banked
  7793   00ABF0  51A2               	movf	setOutputPosition@type& (0+255),w,b
  7794                           
  7795                           ; Switch size 1, requested type "simple"
  7796                           ; Number of cases is 7, Range of values is 0 to 6
  7797                           ; switch strategies available:
  7798                           ; Name         Instructions Cycles
  7799                           ; simple_byte           22    12 (average)
  7800                           ;	Chosen strategy is simple_byte
  7801   00ABF2  0A00               	xorlw	0	; case 0
  7802   00ABF4  B4D8               	btfsc	status,2,c
  7803   00ABF6  0012               	return	
  7804   00ABF8  0A01               	xorlw	1	; case 1
  7805   00ABFA  B4D8               	btfsc	status,2,c
  7806   00ABFC  D7D8               	goto	l21508
  7807   00ABFE  0A03               	xorlw	3	; case 2
  7808   00AC00  B4D8               	btfsc	status,2,c
  7809   00AC02  D7DB               	goto	l21512
  7810   00AC04  0A01               	xorlw	1	; case 3
  7811   00AC06  B4D8               	btfsc	status,2,c
  7812   00AC08  D7D8               	goto	l21512
  7813   00AC0A  0A07               	xorlw	7	; case 4
  7814   00AC0C  B4D8               	btfsc	status,2,c
  7815   00AC0E  D7D5               	goto	l21512
  7816   00AC10  0A01               	xorlw	1	; case 5
  7817   00AC12  B4D8               	btfsc	status,2,c
  7818   00AC14  0012               	return	
  7819   00AC16  0A03               	xorlw	3	; case 6
  7820   00AC18  0012               	return	
  7821   00AC1A                     __end_of_setOutputPosition:
  7822                           	callstack 0
  7823                           
  7824 ;; *************** function _initOutputs *****************
  7825 ;; Defined at:
  7826 ;;		line 86 in file "../digitalOut.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  io              1   45[BANK0 ] unsigned char 
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7843 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7844 ;;Total ram usage:        1 bytes
  7845 ;; Hardware stack levels used: 1
  7846 ;; Hardware stack levels required when called: 12
  7847 ;; This function calls:
  7848 ;;		Nothing
  7849 ;; This function is called by:
  7850 ;;		_setup
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           	psect	text5
  7855   00BFE8                     __ptext5:
  7856                           	callstack 0
  7857   00BFE8                     _initOutputs:
  7858                           	callstack 17
  7859                           
  7860                           ;../digitalOut.c: 88:     uint8_t io;;../digitalOut.c: 89:     for (io=0; io<16; io++) {
  7861                           
  7862                           ;incstack = 0
  7863   00BFE8  0E00               	movlw	0
  7864   00BFEA  0100               	movlb	0	; () banked
  7865   00BFEC  6F8D               	movwf	initOutputs@io& (0+255),b
  7866   00BFEE                     l15562:
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;../digitalOut.c: 90:        pulseDelays[io] = 0;
  7870   00BFEE  0EA4               	movlw	low _pulseDelays
  7871   00BFF0  258D               	addwf	initOutputs@io& (0+255),w,b
  7872   00BFF2  6ED9               	movwf	fsr2l,c
  7873   00BFF4  6ADA               	clrf	fsr2h,c
  7874   00BFF6  0E02               	movlw	high _pulseDelays
  7875   00BFF8  22DA               	addwfc	fsr2h,f,c
  7876   00BFFA  6ADF               	clrf	indf2,c
  7877                           
  7878                           ;../digitalOut.c: 91:        flashDelays[io] = 0;
  7879   00BFFC  0E30               	movlw	low _flashDelays
  7880   00BFFE  258D               	addwf	initOutputs@io& (0+255),w,b
  7881   00C000  6ED9               	movwf	fsr2l,c
  7882   00C002  6ADA               	clrf	fsr2h,c
  7883   00C004  0E01               	movlw	high _flashDelays
  7884   00C006  22DA               	addwfc	fsr2h,f,c
  7885   00C008  6ADF               	clrf	indf2,c
  7886                           
  7887                           ; BSR set to: 0
  7888                           ;../digitalOut.c: 92:     }
  7889   00C00A  2B8D               	incf	initOutputs@io& (0+255),f,b
  7890                           
  7891                           ; BSR set to: 0
  7892   00C00C  0E0F               	movlw	15
  7893   00C00E  658D               	cpfsgt	initOutputs@io& (0+255),b
  7894   00C010  D7EE               	goto	l15562
  7895   00C012  0012               	return	
  7896   00C014                     __end_of_initOutputs:
  7897                           	callstack 0
  7898                           
  7899 ;; *************** function _initInputScan *****************
  7900 ;; Defined at:
  7901 ;;		line 76 in file "../inputs.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;		None
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  input           1   57[BANK0 ] unsigned char 
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1    wreg      void 
  7908 ;; Registers used:
  7909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 0/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;Total ram usage:        3 bytes
  7920 ;; Hardware stack levels used: 1
  7921 ;; Hardware stack levels required when called: 14
  7922 ;; This function calls:
  7923 ;;		_getNV
  7924 ;;		_readInput
  7925 ;;		_readNVM
  7926 ;; This function is called by:
  7927 ;;		_setup
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text6
  7932   0098F6                     __ptext6:
  7933                           	callstack 0
  7934   0098F6                     _initInputScan:
  7935                           	callstack 15
  7936                           
  7937                           ;../inputs.c: 77:     for (io=0; io<16; io++) {
  7938                           
  7939                           ; BSR set to: 0
  7940                           ;incstack = 0
  7941   0098F6  0E00               	movlw	0
  7942   0098F8  0100               	movlb	0	; () banked
  7943   0098FA  6FD0               	movwf	_io@inputs$F849& (0+255),b
  7944   0098FC                     l22622:
  7945                           
  7946                           ; BSR set to: 0
  7947   0098FC  0E0F               	movlw	15
  7948   0098FE  65D0               	cpfsgt	_io@inputs$F849& (0+255),b
  7949   009900  D001               	goto	l22626
  7950   009902  0012               	return	
  7951   009904                     l22626:
  7952                           
  7953                           ; BSR set to: 0
  7954                           ;../inputs.c: 78:         uint8_t input = readInput(io);
  7955   009904  51D0               	movf	_io@inputs$F849& (0+255),w,b
  7956   009906  ECAA  F03F         	call	_readInput
  7957   00990A  0100               	movlb	0	; () banked
  7958   00990C  6F99               	movwf	initInputScan@input& (0+255),b
  7959                           
  7960                           ; BSR set to: 0
  7961                           ;../inputs.c: 79:         inputState[io] = input;
  7962   00990E  0E94               	movlw	low _inputState
  7963   009910  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  7964   009912  6ED9               	movwf	fsr2l,c
  7965   009914  6ADA               	clrf	fsr2h,c
  7966   009916  0E02               	movlw	high _inputState
  7967   009918  22DA               	addwfc	fsr2h,f,c
  7968   00991A  C099  FFDF         	movff	initInputScan@input,indf2
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;../inputs.c: 80:         if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
  7972   00991E  51D0               	movf	_io@inputs$F849& (0+255),w,b
  7973   009920  0D07               	mullw	7
  7974   009922  50F3               	movf	243,w,c
  7975   009924  0F11               	addlw	17
  7976   009926  ECD9  F05D         	call	_getNV
  7977   00992A  0100               	movlb	0	; () banked
  7978   00992C  B18D               	btfsc	?_getNV& (0+255),0,b
  7979   00992E  D007               	goto	l22634
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;../inputs.c: 81:             input = !input;
  7983   009930  5199               	movf	initInputScan@input& (0+255),w,b
  7984   009932  A4D8               	btfss	status,2,c
  7985   009934  D002               	goto	u23750
  7986   009936  0E01               	movlw	1
  7987   009938  D001               	goto	u23760
  7988   00993A                     u23750:
  7989   00993A  0E00               	movlw	0
  7990   00993C                     u23760:
  7991   00993C  6F99               	movwf	initInputScan@input& (0+255),b
  7992   00993E                     l22634:
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;../inputs.c: 83:         outputState[io] = input;
  7996   00993E  0EB4               	movlw	low _outputState
  7997   009940  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  7998   009942  6ED9               	movwf	fsr2l,c
  7999   009944  6ADA               	clrf	fsr2h,c
  8000   009946  0E02               	movlw	high _outputState
  8001   009948  22DA               	addwfc	fsr2h,f,c
  8002   00994A  C099  FFDF         	movff	initInputScan@input,indf2
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;../inputs.c: 84:         if (getNV((16 + 7*(io) + 1)) & 0x10) {
  8006   00994E  51D0               	movf	_io@inputs$F849& (0+255),w,b
  8007   009950  0D07               	mullw	7
  8008   009952  50F3               	movf	243,w,c
  8009   009954  0F11               	addlw	17
  8010   009956  ECD9  F05D         	call	_getNV
  8011   00995A  0100               	movlb	0	; () banked
  8012   00995C  A98D               	btfss	?_getNV& (0+255),4,b
  8013   00995E  D017               	goto	l22640
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;../inputs.c: 85:             outputState[io] = (uint8_t)readNVM(EEPROM_NVM_TYPE, ((eepr
      +                          om_address_t)((0x3FF -8))-25)+io);
  8017   009960  0EDE               	movlw	222
  8018   009962  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  8019   009964  6F97               	movwf	??_initInputScan& (0+255),b
  8020   009966  6B98               	clrf	(??_initInputScan+1)& (0+255),b
  8021   009968  0E03               	movlw	3
  8022   00996A  2398               	addwfc	(??_initInputScan+1)& (0+255),f,b
  8023   00996C  C097  F091         	movff	??_initInputScan,readNVM@index
  8024   009970  C098  F092         	movff	??_initInputScan+1,readNVM@index+1
  8025   009974  6B93               	clrf	(readNVM@index+2)& (0+255),b
  8026   009976  0E00               	movlw	0
  8027   009978  EC57  F059         	call	_readNVM
  8028   00997C  0EB4               	movlw	low _outputState
  8029   00997E  0100               	movlb	0	; () banked
  8030   009980  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  8031   009982  6ED9               	movwf	fsr2l,c
  8032   009984  6ADA               	clrf	fsr2h,c
  8033   009986  0E02               	movlw	high _outputState
  8034   009988  22DA               	addwfc	fsr2h,f,c
  8035   00998A  C091  FFDF         	movff	?_readNVM,indf2
  8036   00998E                     l22640:
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;../inputs.c: 87:         delayCount[io] = 0;
  8040   00998E  0E84               	movlw	low _delayCount
  8041   009990  25D0               	addwf	_io@inputs$F849& (0+255),w,b
  8042   009992  6ED9               	movwf	fsr2l,c
  8043   009994  6ADA               	clrf	fsr2h,c
  8044   009996  0E02               	movlw	high _delayCount
  8045   009998  22DA               	addwfc	fsr2h,f,c
  8046   00999A  6ADF               	clrf	indf2,c
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;../inputs.c: 88:     }
  8050   00999C  2BD0               	incf	_io@inputs$F849& (0+255),f,b
  8051   00999E  D7AE               	goto	l22622
  8052   0099A0                     __end_of_initInputScan:
  8053                           	callstack 0
  8054                           
  8055 ;; *************** function _powerUp *****************
  8056 ;; Defined at:
  8057 ;;		line 875 in file "../../VLCBlib_PIC/vlcb.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;		None
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  i               1   14[BANK1 ] unsigned char 
  8062 ;;  divider         1    0        unsigned char 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  1    wreg      void 
  8065 ;; Registers used:
  8066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8073 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8074 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8075 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8076 ;;Total ram usage:        5 bytes
  8077 ;; Hardware stack levels used: 1
  8078 ;; Hardware stack levels required when called: 18
  8079 ;; This function calls:
  8080 ;;		NULL
  8081 ;;		_ackPowerUp
  8082 ;;		_canPowerUp
  8083 ;;		_consumer2QPowerUp
  8084 ;;		_initTicker
  8085 ;;		_initTimedResponse
  8086 ;;		_leds_powerUp
  8087 ;;		_mnsPowerUp
  8088 ;;		_nvPowerUp
  8089 ;;		_producerPowerUp
  8090 ;;		_teachPowerUp
  8091 ;; This function is called by:
  8092 ;;		_main
  8093 ;; This function uses a non-reentrant model
  8094 ;;
  8095                           
  8096                           	psect	text7
  8097   0088C6                     __ptext7:
  8098                           	callstack 0
  8099   0088C6                     _powerUp:
  8100                           	callstack 12
  8101                           
  8102                           ;../../VLCBlib_PIC/vlcb.c: 876:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 877:     uint8_
      +                          t divider;;../../VLCBlib_PIC/vlcb.c: 880:     initTicker(0);
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;incstack = 0
  8106   0088C6  0E00               	movlw	0
  8107   0088C8  EC35  F05D         	call	_initTicker
  8108                           
  8109                           ;../../VLCBlib_PIC/vlcb.c: 881:     initTimedResponse();
  8110   0088CC  EC8B  F062         	call	_initTimedResponse	;wreg free
  8111                           
  8112                           ;../../VLCBlib_PIC/vlcb.c: 882:     leds_powerUp();
  8113   0088D0  ECF0  F05E         	call	_leds_powerUp	;wreg free
  8114                           
  8115                           ;../../VLCBlib_PIC/vlcb.c: 883:     timedResponseDelay = 5;
  8116   0088D4  0E05               	movlw	5
  8117   0088D6  0101               	movlb	1	; () banked
  8118   0088D8  6F64               	movwf	_timedResponseDelay& (0+255),b
  8119                           
  8120                           ; BSR set to: 1
  8121                           ;../../VLCBlib_PIC/vlcb.c: 885:     for (i=0; i<9; i++) {
  8122   0088DA  0E00               	movlw	0
  8123   0088DC  6FC8               	movwf	powerUp@i& (0+255),b
  8124   0088DE                     l24652:
  8125                           
  8126                           ; BSR set to: 1
  8127                           ;../../VLCBlib_PIC/vlcb.c: 886:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >powerUp != ((void*)0))) {
  8128   0088DE  51C8               	movf	powerUp@i& (0+255),w,b
  8129   0088E0  0D02               	mullw	2
  8130   0088E2  0E75               	movlw	low _services
  8131   0088E4  24F3               	addwf	243,w,c
  8132   0088E6  6EF6               	movwf	tblptrl,c
  8133   0088E8  0EEE               	movlw	high _services
  8134   0088EA  20F4               	addwfc	244,w,c
  8135   0088EC  6EF7               	movwf	tblptrh,c
  8136   0088EE                     	if	1	;There are 3 active tblptr bytes
  8137   0088EE  6AF8               	clrf	tblptru,c
  8138   0088F0  0E00               	movlw	low (__mediumconst shr (0+16))
  8139   0088F2  22F8               	addwfc	tblptru,f,c
  8140   0088F4                     	endif
  8141   0088F4  0009               	tblrd		*+
  8142   0088F6  50F5               	movf	tablat,w,c
  8143   0088F8  0009               	tblrd		*+
  8144   0088FA  10F5               	iorwf	tablat,w,c
  8145   0088FC  B4D8               	btfsc	status,2,c
  8146   0088FE  D04B               	goto	u26349
  8147                           
  8148                           ; BSR set to: 1
  8149   008900  51C8               	movf	powerUp@i& (0+255),w,b
  8150   008902  0D02               	mullw	2
  8151   008904  0E75               	movlw	low _services
  8152   008906  24F3               	addwf	243,w,c
  8153   008908  6EF6               	movwf	tblptrl,c
  8154   00890A  0EEE               	movlw	high _services
  8155   00890C  20F4               	addwfc	244,w,c
  8156   00890E  6EF7               	movwf	tblptrh,c
  8157   008910                     	if	1	;There are 3 active tblptr bytes
  8158   008910  6AF8               	clrf	tblptru,c
  8159   008912  0E00               	movlw	low (__mediumconst shr (0+16))
  8160   008914  22F8               	addwfc	tblptru,f,c
  8161   008916                     	endif
  8162   008916  0009               	tblrd		*+
  8163   008918  CFF5 F1C4          	movff	tablat,??_powerUp
  8164   00891C  0009               	tblrd		*+
  8165   00891E  CFF5 F1C5          	movff	tablat,??_powerUp+1
  8166   008922  0E04               	movlw	4
  8167   008924  27C4               	addwf	??_powerUp& (0+255),f,b
  8168   008926  0E00               	movlw	0
  8169   008928  23C5               	addwfc	(??_powerUp+1)& (0+255),f,b
  8170   00892A  C1C4  FFF6         	movff	??_powerUp,tblptrl
  8171   00892E  C1C5  FFF7         	movff	??_powerUp+1,tblptrh
  8172   008932                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8173   008932  6AF8               	clrf	tblptru,c
  8174   008934                     	endif
  8175   008934                     	if	0	;tblptru may be non-zero
  8176   008934                     	endif
  8177   008934  0009               	tblrd		*+
  8178   008936  50F5               	movf	tablat,w,c
  8179   008938  0009               	tblrd		*+
  8180   00893A  10F5               	iorwf	tablat,w,c
  8181   00893C  B4D8               	btfsc	status,2,c
  8182   00893E  D02B               	goto	u26349
  8183                           
  8184                           ; BSR set to: 1
  8185                           ;../../VLCBlib_PIC/vlcb.c: 887:             services[i]->powerUp();
  8186   008940  51C8               	movf	powerUp@i& (0+255),w,b
  8187   008942  0D02               	mullw	2
  8188   008944  0E75               	movlw	low _services
  8189   008946  24F3               	addwf	243,w,c
  8190   008948  6EF6               	movwf	tblptrl,c
  8191   00894A  0EEE               	movlw	high _services
  8192   00894C  20F4               	addwfc	244,w,c
  8193   00894E  6EF7               	movwf	tblptrh,c
  8194   008950                     	if	1	;There are 3 active tblptr bytes
  8195   008950  6AF8               	clrf	tblptru,c
  8196   008952  0E00               	movlw	low (__mediumconst shr (0+16))
  8197   008954  22F8               	addwfc	tblptru,f,c
  8198   008956                     	endif
  8199   008956  0009               	tblrd		*+
  8200   008958  CFF5 F1C4          	movff	tablat,??_powerUp
  8201   00895C  0009               	tblrd		*+
  8202   00895E  CFF5 F1C5          	movff	tablat,??_powerUp+1
  8203   008962  0E04               	movlw	4
  8204   008964  27C4               	addwf	??_powerUp& (0+255),f,b
  8205   008966  0E00               	movlw	0
  8206   008968  23C5               	addwfc	(??_powerUp+1)& (0+255),f,b
  8207   00896A  C1C4  FFF6         	movff	??_powerUp,tblptrl
  8208   00896E  C1C5  FFF7         	movff	??_powerUp+1,tblptrh
  8209   008972                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8210   008972  6AF8               	clrf	tblptru,c
  8211   008974                     	endif
  8212   008974                     	if	0	;tblptru may be non-zero
  8213   008974                     	endif
  8214   008974  0009               	tblrd		*+
  8215   008976  CFF5 F1C6          	movff	tablat,??_powerUp+2
  8216   00897A  0009               	tblrd		*+
  8217   00897C  CFF5 F1C7          	movff	tablat,??_powerUp+3
  8218   008980  D801               	call	u26348
  8219   008982  D009               	goto	u26349
  8220   008984                     u26348:
  8221   008984  0005               	push	
  8222   008986  6EFA               	movwf	pclath,c
  8223   008988  51C6               	movf	(??_powerUp+2)& (0+255),w,b
  8224   00898A  6EFD               	movwf	tosl,c
  8225   00898C  51C7               	movf	(??_powerUp+3)& (0+255),w,b
  8226   00898E  6EFE               	movwf	tosh,c
  8227   008990  6AFF               	clrf	tosu,c
  8228   008992  50FA               	movf	pclath,w,c
  8229   008994  0012               	return		;indir
  8230   008996                     u26349:
  8231                           
  8232                           ;../../VLCBlib_PIC/vlcb.c: 889:     }
  8233   008996  0101               	movlb	1	; () banked
  8234   008998  2BC8               	incf	powerUp@i& (0+255),f,b
  8235                           
  8236                           ; BSR set to: 1
  8237   00899A  0E08               	movlw	8
  8238   00899C  65C8               	cpfsgt	powerUp@i& (0+255),b
  8239   00899E  D79F               	goto	l24652
  8240   0089A0  0012               	return	
  8241   0089A2                     __end_of_powerUp:
  8242                           	callstack 0
  8243                           
  8244 ;; *************** function _producerPowerUp *****************
  8245 ;; Defined at:
  8246 ;;		line 108 in file "../../VLCBlib_PIC/event_producer_happening.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;		None
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;  i               1   45[BANK0 ] unsigned char 
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8263 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8264 ;;Total ram usage:        1 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; Hardware stack levels required when called: 12
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_powerUp
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text8
  8275   00BF30                     __ptext8:
  8276                           	callstack 0
  8277   00BF30                     _producerPowerUp:
  8278                           	callstack 17
  8279                           
  8280                           ;../../VLCBlib_PIC/event_producer_happening.c: 109:     uint8_t i;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 110:     for (i=1; i <= 1; i++) {
  8281                           
  8282                           ; BSR set to: 1
  8283                           ;incstack = 0
  8284   00BF30  0E01               	movlw	1
  8285   00BF32  0100               	movlb	0	; () banked
  8286   00BF34  6F8D               	movwf	producerPowerUp@i& (0+255),b
  8287   00BF36                     l24496:
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;../../VLCBlib_PIC/event_producer_happening.c: 111:         producerDiagnostics[i].asUin
      +                          t = 0;
  8291   00BF36  518D               	movf	producerPowerUp@i& (0+255),w,b
  8292   00BF38  0D02               	mullw	2
  8293   00BF3A  0EAA               	movlw	low _producerDiagnostics
  8294   00BF3C  24F3               	addwf	243,w,c
  8295   00BF3E  6ED9               	movwf	fsr2l,c
  8296   00BF40  0E01               	movlw	high _producerDiagnostics
  8297   00BF42  20F4               	addwfc	prodh,w,c
  8298   00BF44  6EDA               	movwf	fsr2h,c
  8299   00BF46  6ADE               	clrf	postinc2,c
  8300   00BF48  6ADD               	clrf	postdec2,c
  8301                           
  8302                           ; BSR set to: 0
  8303                           ;../../VLCBlib_PIC/event_producer_happening.c: 112:     }
  8304   00BF4A  2B8D               	incf	producerPowerUp@i& (0+255),f,b
  8305                           
  8306                           ; BSR set to: 0
  8307   00BF4C  0E01               	movlw	1
  8308   00BF4E  658D               	cpfsgt	producerPowerUp@i& (0+255),b
  8309   00BF50  D7F2               	goto	l24496
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;../../VLCBlib_PIC/event_producer_happening.c: 113:     producerDiagnostics[0].asUint = 
      +                          1;
  8313   00BF52  0E00               	movlw	0
  8314   00BF54  0101               	movlb	1	; () banked
  8315   00BF56  6FAB               	movwf	(_producerDiagnostics+1)& (0+255),b
  8316   00BF58  0E01               	movlw	1
  8317   00BF5A  6FAA               	movwf	_producerDiagnostics& (0+255),b
  8318                           
  8319                           ; BSR set to: 1
  8320   00BF5C  0012               	return		;funcret
  8321   00BF5E                     __end_of_producerPowerUp:
  8322                           	callstack 0
  8323                           
  8324 ;; *************** function _canPowerUp *****************
  8325 ;; Defined at:
  8326 ;;		line 217 in file "../../VLCBlib_PIC/can18_ecan.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;		None
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  temp            2   56[BANK0 ] int 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      void 
  8333 ;; Registers used:
  8334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8341 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8342 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8343 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8344 ;;Total ram usage:        3 bytes
  8345 ;; Hardware stack levels used: 1
  8346 ;; Hardware stack levels required when called: 14
  8347 ;; This function calls:
  8348 ;;		_readNVM
  8349 ;;		_tickGet
  8350 ;; This function is called by:
  8351 ;;		_powerUp
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text9
  8356   006F08                     __ptext9:
  8357                           	callstack 0
  8358   006F08                     _canPowerUp:
  8359                           	callstack 15
  8360                           
  8361                           ;../../VLCBlib_PIC/can18_ecan.c: 218:     int temp;;../../VLCBlib_PIC/can18_ecan.c: 221:
      +                               rxQueue.readIndex = 0;
  8362                           
  8363                           ; BSR set to: 1
  8364                           ;incstack = 0
  8365   006F08  0E00               	movlw	0
  8366   006F0A  6E4F               	movwf	(_rxQueue+2)^0,c
  8367                           
  8368                           ;../../VLCBlib_PIC/can18_ecan.c: 222:     rxQueue.writeIndex = 0;
  8369   006F0C  0E00               	movlw	0
  8370   006F0E  6E50               	movwf	(_rxQueue+3)^0,c
  8371                           
  8372                           ;../../VLCBlib_PIC/can18_ecan.c: 223:     rxQueue.messages = rxBuffers;
  8373   006F10  0EC8               	movlw	low _rxBuffers
  8374   006F12  6E4D               	movwf	_rxQueue^0,c
  8375   006F14  0E07               	movlw	high _rxBuffers
  8376   006F16  6E4E               	movwf	(_rxQueue+1)^0,c
  8377                           
  8378                           ;../../VLCBlib_PIC/can18_ecan.c: 224:     rxQueue.size = 32;
  8379   006F18  0E20               	movlw	32
  8380   006F1A  6E51               	movwf	(_rxQueue+4)^0,c
  8381                           
  8382                           ;../../VLCBlib_PIC/can18_ecan.c: 226:     txQueue.readIndex = 0;
  8383   006F1C  0E00               	movlw	0
  8384   006F1E  6E4A               	movwf	(_txQueue+2)^0,c
  8385                           
  8386                           ;../../VLCBlib_PIC/can18_ecan.c: 227:     txQueue.writeIndex = 0;
  8387   006F20  0E00               	movlw	0
  8388   006F22  6E4B               	movwf	(_txQueue+3)^0,c
  8389                           
  8390                           ;../../VLCBlib_PIC/can18_ecan.c: 228:     txQueue.messages = txBuffers;
  8391   006F24  0E00               	movlw	low _txBuffers
  8392   006F26  6E48               	movwf	_txQueue^0,c
  8393   006F28  0E05               	movlw	high _txBuffers
  8394   006F2A  6E49               	movwf	(_txQueue+1)^0,c
  8395                           
  8396                           ;../../VLCBlib_PIC/can18_ecan.c: 229:     txQueue.size = 8;
  8397   006F2C  0E08               	movlw	8
  8398   006F2E  6E4C               	movwf	(_txQueue+4)^0,c
  8399                           
  8400                           ;../../VLCBlib_PIC/can18_ecan.c: 233:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FE);
  8401   006F30  0EFE               	movlw	254
  8402   006F32  0100               	movlb	0	; () banked
  8403   006F34  6F91               	movwf	readNVM@index& (0+255),b
  8404   006F36  0E03               	movlw	3
  8405   006F38  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8406   006F3A  0E00               	movlw	0
  8407   006F3C  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8408   006F3E  0E00               	movlw	0
  8409   006F40  EC57  F059         	call	_readNVM
  8410   006F44  C091  F098         	movff	?_readNVM,canPowerUp@temp
  8411   006F48  C092  F099         	movff	?_readNVM+1,canPowerUp@temp+1
  8412                           
  8413                           ;../../VLCBlib_PIC/can18_ecan.c: 234:     if (temp < 0) {
  8414   006F4C  0100               	movlb	0	; () banked
  8415   006F4E  AF99               	btfss	(canPowerUp@temp+1)& (0+255),7,b
  8416   006F50  D003               	goto	l2414
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;../../VLCBlib_PIC/can18_ecan.c: 236:         canId = 0;
  8420   006F52  0E00               	movlw	0
  8421   006F54  6FC3               	movwf	_canId& (0+255),b
  8422                           
  8423                           ;../../VLCBlib_PIC/can18_ecan.c: 237:     } else {
  8424   006F56  D002               	goto	l23984
  8425   006F58                     l2414:
  8426                           
  8427                           ; BSR set to: 0
  8428                           ;../../VLCBlib_PIC/can18_ecan.c: 238:         canId = (uint8_t)temp;
  8429   006F58  C098  F0C3         	movff	canPowerUp@temp,_canId
  8430   006F5C                     l23984:
  8431                           
  8432                           ; BSR set to: 0
  8433                           ;../../VLCBlib_PIC/can18_ecan.c: 242:     for (temp=1; temp <= 18; temp++) {
  8434   006F5C  0E00               	movlw	0
  8435   006F5E  6F99               	movwf	(canPowerUp@temp+1)& (0+255),b
  8436   006F60  0E01               	movlw	1
  8437   006F62  6F98               	movwf	canPowerUp@temp& (0+255),b
  8438   006F64                     l23990:
  8439                           
  8440                           ; BSR set to: 0
  8441                           ;../../VLCBlib_PIC/can18_ecan.c: 243:         canDiagnostics[temp].asUint = 0;
  8442   006F64  90D8               	bcf	status,0,c
  8443   006F66  3598               	rlcf	canPowerUp@temp& (0+255),w,b
  8444   006F68  6ED9               	movwf	fsr2l,c
  8445   006F6A  3599               	rlcf	(canPowerUp@temp+1)& (0+255),w,b
  8446   006F6C  6EDA               	movwf	fsr2h,c
  8447   006F6E  0E67               	movlw	low _canDiagnostics
  8448   006F70  26D9               	addwf	fsr2l,f,c
  8449   006F72  0E01               	movlw	high _canDiagnostics
  8450   006F74  22DA               	addwfc	fsr2h,f,c
  8451   006F76  6ADE               	clrf	postinc2,c
  8452   006F78  6ADD               	clrf	postdec2,c
  8453                           
  8454                           ; BSR set to: 0
  8455                           ;../../VLCBlib_PIC/can18_ecan.c: 244:     }
  8456   006F7A  4B98               	infsnz	canPowerUp@temp& (0+255),f,b
  8457   006F7C  2B99               	incf	(canPowerUp@temp+1)& (0+255),f,b
  8458                           
  8459                           ; BSR set to: 0
  8460   006F7E  BF99               	btfsc	(canPowerUp@temp+1)& (0+255),7,b
  8461   006F80  D7F1               	goto	l23990
  8462   006F82  5199               	movf	(canPowerUp@temp+1)& (0+255),w,b
  8463   006F84  E104               	bnz	u25590
  8464   006F86  0E13               	movlw	19
  8465   006F88  5D98               	subwf	canPowerUp@temp& (0+255),w,b
  8466   006F8A  A0D8               	btfss	status,0,c
  8467   006F8C  D7EB               	goto	l23990
  8468   006F8E                     u25590:
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;../../VLCBlib_PIC/can18_ecan.c: 245:     canDiagnostics[0x00].asUint = 18;
  8472   006F8E  0E00               	movlw	0
  8473   006F90  0101               	movlb	1	; () banked
  8474   006F92  6F68               	movwf	(_canDiagnostics+1)& (0+255),b
  8475   006F94  0E12               	movlw	18
  8476   006F96  6F67               	movwf	_canDiagnostics& (0+255),b
  8477                           
  8478                           ;../../VLCBlib_PIC/can18_ecan.c: 248:     canTransmitFailed=0;
  8479   006F98  0E00               	movlw	0
  8480   006F9A  0100               	movlb	0	; () banked
  8481   006F9C  6FC2               	movwf	_canTransmitFailed& (0+255),b
  8482                           
  8483                           ;../../VLCBlib_PIC/can18_ecan.c: 249:     IPR5 = 0;
  8484   006F9E  0E00               	movlw	0
  8485   006FA0  6E78               	movwf	120,c	;volatile
  8486                           
  8487                           ;../../VLCBlib_PIC/can18_ecan.c: 252:     CANCON = 0b10000000;
  8488   006FA2  0E80               	movlw	128
  8489   006FA4  6E6F               	movwf	111,c	;volatile
  8490   006FA6                     l2418:
  8491   006FA6  AE6E               	btfss	110,7,c	;volatile
  8492   006FA8  D7FE               	goto	l2418
  8493                           
  8494                           ;../../VLCBlib_PIC/can18_ecan.c: 256:     ECANCON = 0b10110000;
  8495   006FAA  0EB0               	movlw	176
  8496   006FAC  6E72               	movwf	114,c	;volatile
  8497                           
  8498                           ;../../VLCBlib_PIC/can18_ecan.c: 257:     BSEL0 = 0;
  8499   006FAE  0E00               	movlw	0
  8500   006FB0  010E               	movlb	14	; () banked
  8501   006FB2  6F7D               	movwf	125,b	;volatile
  8502                           
  8503                           ;../../VLCBlib_PIC/can18_ecan.c: 281:       BRGCON1 = 0b00001111;
  8504   006FB4  0E0F               	movlw	15
  8505   006FB6  6F43               	movwf	67,b	;volatile
  8506                           
  8507                           ;../../VLCBlib_PIC/can18_ecan.c: 284:     BRGCON2 = 0b10011110;
  8508   006FB8  0E9E               	movlw	158
  8509   006FBA  6F44               	movwf	68,b	;volatile
  8510                           
  8511                           ;../../VLCBlib_PIC/can18_ecan.c: 285:     BRGCON3 = 0b00000011;
  8512   006FBC  0E03               	movlw	3
  8513   006FBE  6F45               	movwf	69,b	;volatile
  8514                           
  8515                           ;../../VLCBlib_PIC/can18_ecan.c: 286:     CIOCON = 0b00100000;
  8516   006FC0  0E20               	movlw	32
  8517   006FC2  6E70               	movwf	112,c	;volatile
  8518                           
  8519                           ;../../VLCBlib_PIC/can18_ecan.c: 290:     RXM0SIDH = 0;
  8520   006FC4  0E00               	movlw	0
  8521   006FC6  6FF8               	movwf	248,b	;volatile
  8522                           
  8523                           ;../../VLCBlib_PIC/can18_ecan.c: 291:     RXM0SIDL = 0x08;
  8524   006FC8  0E08               	movlw	8
  8525   006FCA  6FF9               	movwf	249,b	;volatile
  8526                           
  8527                           ;../../VLCBlib_PIC/can18_ecan.c: 292:     RXM0EIDH = 0;
  8528   006FCC  0E00               	movlw	0
  8529   006FCE  6FFA               	movwf	250,b	;volatile
  8530                           
  8531                           ;../../VLCBlib_PIC/can18_ecan.c: 293:     RXM0EIDL = 0;
  8532   006FD0  0E00               	movlw	0
  8533   006FD2  6FFB               	movwf	251,b	;volatile
  8534                           
  8535                           ;../../VLCBlib_PIC/can18_ecan.c: 295:     RXF0SIDL = 0x00;
  8536   006FD4  0E00               	movlw	0
  8537   006FD6  6FE1               	movwf	225,b	;volatile
  8538                           
  8539                           ;../../VLCBlib_PIC/can18_ecan.c: 297:     RXFBCON0 = 0;
  8540   006FD8  0E00               	movlw	0
  8541   006FDA  6F71               	movwf	113,b	;volatile
  8542                           
  8543                           ;../../VLCBlib_PIC/can18_ecan.c: 299:     MSEL0 = 0;
  8544   006FDC  0E00               	movlw	0
  8545   006FDE  6F79               	movwf	121,b	;volatile
  8546                           
  8547                           ;../../VLCBlib_PIC/can18_ecan.c: 301:     RXFCON0 = 1;
  8548   006FE0  0E01               	movlw	1
  8549   006FE2  6F46               	movwf	70,b	;volatile
  8550                           
  8551                           ;../../VLCBlib_PIC/can18_ecan.c: 308:     RXB0CON = 0x00;
  8552   006FE4  0E00               	movlw	0
  8553   006FE6  6E60               	movwf	96,c	;volatile
  8554                           
  8555                           ;../../VLCBlib_PIC/can18_ecan.c: 309:     RXB1CON = 0x00;
  8556   006FE8  0E00               	movlw	0
  8557   006FEA  010F               	movlb	15	; () banked
  8558   006FEC  6F30               	movwf	48,b	;volatile
  8559                           
  8560                           ;../../VLCBlib_PIC/can18_ecan.c: 310:     B0CON = 0;
  8561   006FEE  0E00               	movlw	0
  8562   006FF0  010E               	movlb	14	; () banked
  8563   006FF2  6F80               	movwf	128,b	;volatile
  8564                           
  8565                           ;../../VLCBlib_PIC/can18_ecan.c: 311:     B1CON = 0;
  8566   006FF4  0E00               	movlw	0
  8567   006FF6  6F90               	movwf	144,b	;volatile
  8568                           
  8569                           ;../../VLCBlib_PIC/can18_ecan.c: 312:     B2CON = 0;
  8570   006FF8  0E00               	movlw	0
  8571   006FFA  6FA0               	movwf	160,b	;volatile
  8572                           
  8573                           ;../../VLCBlib_PIC/can18_ecan.c: 313:     B3CON = 0;
  8574   006FFC  0E00               	movlw	0
  8575   006FFE  6FB0               	movwf	176,b	;volatile
  8576                           
  8577                           ;../../VLCBlib_PIC/can18_ecan.c: 314:     B4CON = 0;
  8578   007000  0E00               	movlw	0
  8579   007002  6FC0               	movwf	192,b	;volatile
  8580                           
  8581                           ;../../VLCBlib_PIC/can18_ecan.c: 315:     B5CON = 0;
  8582   007004  0E00               	movlw	0
  8583   007006  6FD0               	movwf	208,b	;volatile
  8584                           
  8585                           ;../../VLCBlib_PIC/can18_ecan.c: 317:     BIE0 = 0;
  8586   007008  0E00               	movlw	0
  8587   00700A  6F7E               	movwf	126,b	;volatile
  8588                           
  8589                           ; BSR set to: 14
  8590                           ;../../VLCBlib_PIC/can18_ecan.c: 318:     TXBIEbits.TXB0IE = 1;
  8591   00700C  857F               	bsf	127,2,b	;volatile
  8592                           
  8593                           ; BSR set to: 14
  8594                           ;../../VLCBlib_PIC/can18_ecan.c: 319:     TXBIEbits.TXB1IE = 0;
  8595   00700E  977F               	bcf	127,3,b	;volatile
  8596                           
  8597                           ; BSR set to: 14
  8598                           ;../../VLCBlib_PIC/can18_ecan.c: 320:     TXBIEbits.TXB2IE = 0;
  8599   007010  997F               	bcf	127,4,b	;volatile
  8600                           
  8601                           ;../../VLCBlib_PIC/can18_ecan.c: 322:     CANCON = 0;
  8602   007012  0E00               	movlw	0
  8603   007014  6E6F               	movwf	111,c	;volatile
  8604   007016                     l2421:
  8605   007016  BE6E               	btfsc	110,7,c	;volatile
  8606   007018  D7FE               	goto	l2421
  8607                           
  8608                           ;../../VLCBlib_PIC/can18_ecan.c: 327:     TXB0CON = 0;
  8609   00701A  0E00               	movlw	0
  8610   00701C  010F               	movlb	15	; () banked
  8611   00701E  6F20               	movwf	32,b	;volatile
  8612                           
  8613                           ; BSR set to: 15
  8614                           ;../../VLCBlib_PIC/can18_ecan.c: 328:     TXB0CONbits.TXPRI0 = 0;
  8615   007020  9120               	bcf	32,0,b	;volatile
  8616                           
  8617                           ; BSR set to: 15
  8618                           ;../../VLCBlib_PIC/can18_ecan.c: 329:     TXB0CONbits.TXPRI1 = 0;
  8619   007022  9320               	bcf	32,1,b	;volatile
  8620                           
  8621                           ;../../VLCBlib_PIC/can18_ecan.c: 330:     TXB0DLC = 0;
  8622   007024  0E00               	movlw	0
  8623   007026  6F25               	movwf	37,b	;volatile
  8624                           
  8625                           ;../../VLCBlib_PIC/can18_ecan.c: 332:     TXB0SIDH = 0;
  8626   007028  0E00               	movlw	0
  8627   00702A  6F21               	movwf	33,b	;volatile
  8628                           
  8629                           ;../../VLCBlib_PIC/can18_ecan.c: 333:     TXB0SIDL = 0;
  8630   00702C  0E00               	movlw	0
  8631   00702E  6F22               	movwf	34,b	;volatile
  8632                           
  8633                           ;../../VLCBlib_PIC/can18_ecan.c: 337:     TXB1CON = 0;
  8634   007030  0E00               	movlw	0
  8635   007032  6F10               	movwf	16,b	;volatile
  8636                           
  8637                           ; BSR set to: 15
  8638                           ;../../VLCBlib_PIC/can18_ecan.c: 338:     TXB1CONbits.TXPRI0 = 0;
  8639   007034  9110               	bcf	16,0,b	;volatile
  8640                           
  8641                           ; BSR set to: 15
  8642                           ;../../VLCBlib_PIC/can18_ecan.c: 339:     TXB1CONbits.TXPRI1 = 1;
  8643   007036  8310               	bsf	16,1,b	;volatile
  8644                           
  8645                           ;../../VLCBlib_PIC/can18_ecan.c: 340:     TXB1DLC = 0x40;
  8646   007038  0E40               	movlw	64
  8647   00703A  6F15               	movwf	21,b	;volatile
  8648                           
  8649                           ; BSR set to: 15
  8650                           ;../../VLCBlib_PIC/can18_ecan.c: 341:     TXB1SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8651   00703C  0E8B               	movlw	low (_canPri+4)
  8652   00703E  6EF6               	movwf	tblptrl,c
  8653   007040  0EEE               	movlw	high (_canPri+4)
  8654   007042  6EF7               	movwf	tblptrh,c
  8655   007044                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8656   007044  6AF8               	clrf	tblptru,c
  8657   007046                     	endif
  8658   007046                     	if	0	;tblptru may be non-zero
  8659   007046                     	endif
  8660   007046  0008               	tblrd		*
  8661   007048  CFF5 F097          	movff	tablat,??_canPowerUp
  8662   00704C  0100               	movlb	0	; () banked
  8663   00704E  39C3               	swapf	_canId& (0+255),w,b
  8664   007050  46E8               	rlncf	wreg,f,c
  8665   007052  0B1F               	andlw	31
  8666   007054  0B0F               	andlw	15
  8667   007056  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8668   007058  010F               	movlb	15	; () banked
  8669   00705A  6F11               	movwf	17,b	;volatile
  8670                           
  8671                           ; BSR set to: 15
  8672                           ;../../VLCBlib_PIC/can18_ecan.c: 342:     TXB1SIDL = TXB0SIDL;
  8673   00705C  CF22 FF12          	movff	3874,3858	;volatile
  8674                           
  8675                           ; BSR set to: 15
  8676                           ;../../VLCBlib_PIC/can18_ecan.c: 346:     TXB2CON = 0;
  8677   007060  0E00               	movlw	0
  8678   007062  6F00               	movwf	0,b	;volatile
  8679                           
  8680                           ; BSR set to: 15
  8681                           ;../../VLCBlib_PIC/can18_ecan.c: 347:     TXB2CONbits.TXPRI0 = 1;
  8682   007064  8100               	bsf	0,0,b	;volatile
  8683                           
  8684                           ; BSR set to: 15
  8685                           ;../../VLCBlib_PIC/can18_ecan.c: 348:     TXB2CONbits.TXPRI1 = 1;
  8686   007066  8300               	bsf	0,1,b	;volatile
  8687                           
  8688                           ; BSR set to: 15
  8689                           ;../../VLCBlib_PIC/can18_ecan.c: 349:     TXB2DLC = 0;
  8690   007068  0E00               	movlw	0
  8691   00706A  6F05               	movwf	5,b	;volatile
  8692                           
  8693                           ; BSR set to: 15
  8694                           ;../../VLCBlib_PIC/can18_ecan.c: 350:     TXB2SIDH = canPri[4] | ((canId & 0x78) >> 3);
  8695   00706C  0E8B               	movlw	low (_canPri+4)
  8696   00706E  6EF6               	movwf	tblptrl,c
  8697   007070  0EEE               	movlw	high (_canPri+4)
  8698   007072  6EF7               	movwf	tblptrh,c
  8699   007074                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8700   007074  6AF8               	clrf	tblptru,c
  8701   007076                     	endif
  8702   007076                     	if	0	;tblptru may be non-zero
  8703   007076                     	endif
  8704   007076  0008               	tblrd		*
  8705   007078  CFF5 F097          	movff	tablat,??_canPowerUp
  8706   00707C  0100               	movlb	0	; () banked
  8707   00707E  39C3               	swapf	_canId& (0+255),w,b
  8708   007080  46E8               	rlncf	wreg,f,c
  8709   007082  0B1F               	andlw	31
  8710   007084  0B0F               	andlw	15
  8711   007086  1197               	iorwf	??_canPowerUp& (0+255),w,b
  8712   007088  010F               	movlb	15	; () banked
  8713   00708A  6F01               	movwf	1,b	;volatile
  8714                           
  8715                           ; BSR set to: 15
  8716                           ;../../VLCBlib_PIC/can18_ecan.c: 351:     TXB2SIDL = TXB0SIDL;
  8717   00708C  CF22 FF02          	movff	3874,3842	;volatile
  8718                           
  8719                           ;../../VLCBlib_PIC/can18_ecan.c: 355:     enumerationState = NO_ENUMERATION;
  8720   007090  0E00               	movlw	0
  8721   007092  0100               	movlb	0	; () banked
  8722   007094  6FC1               	movwf	_enumerationState& (0+255),b
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;../../VLCBlib_PIC/can18_ecan.c: 356:     enumerationStartTime.val = tickGet();
  8726   007096  EC6B  F05A         	call	_tickGet	;wreg free
  8727   00709A  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
  8728   00709E  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
  8729   0070A2  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
  8730   0070A6  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
  8731                           
  8732                           ;../../VLCBlib_PIC/can18_ecan.c: 359:     canTransmitTimeout.val = enumerationStartTime.
      +                          val;
  8733   0070AA  C02B  F02F         	movff	_enumerationStartTime,_canTransmitTimeout
  8734   0070AE  C02C  F030         	movff	_enumerationStartTime+1,_canTransmitTimeout+1
  8735   0070B2  C02D  F031         	movff	_enumerationStartTime+2,_canTransmitTimeout+2
  8736   0070B6  C02E  F032         	movff	_enumerationStartTime+3,_canTransmitTimeout+3
  8737                           
  8738                           ;../../VLCBlib_PIC/can18_ecan.c: 361:     PIE5bits.FIFOWMIE = 1;
  8739   0070BA  8076               	bsf	118,0,c	;volatile
  8740                           
  8741                           ;../../VLCBlib_PIC/can18_ecan.c: 362:     PIE5bits.TXBnIE = 1;
  8742   0070BC  8876               	bsf	118,4,c	;volatile
  8743                           
  8744                           ;../../VLCBlib_PIC/can18_ecan.c: 363:     PIE5bits.ERRIE = 1;
  8745   0070BE  8A76               	bsf	118,5,c	;volatile
  8746   0070C0  0012               	return		;funcret
  8747   0070C2                     __end_of_canPowerUp:
  8748                           	callstack 0
  8749                           
  8750 ;; *************** function _nvPowerUp *****************
  8751 ;; Defined at:
  8752 ;;		line 136 in file "../../VLCBlib_PIC/nv.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;		None
  8755 ;; Auto vars:     Size  Location     Type
  8756 ;;  i               1   60[BANK0 ] unsigned char 
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  1    wreg      void 
  8759 ;; Registers used:
  8760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/0
  8763 ;;		On exit  : 0/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8769 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8770 ;;Total ram usage:        1 bytes
  8771 ;; Hardware stack levels used: 1
  8772 ;; Hardware stack levels required when called: 15
  8773 ;; This function calls:
  8774 ;;		_loadNvCache
  8775 ;; This function is called by:
  8776 ;;		_powerUp
  8777 ;; This function uses a non-reentrant model
  8778 ;;
  8779                           
  8780                           	psect	text10
  8781   00BD4A                     __ptext10:
  8782                           	callstack 0
  8783   00BD4A                     _nvPowerUp:
  8784                           	callstack 14
  8785                           
  8786                           ;../../VLCBlib_PIC/nv.c: 138:     uint8_t i;;../../VLCBlib_PIC/nv.c: 139:     for (i=1; 
      +                          i <= 2; i++) {
  8787                           
  8788                           ;incstack = 0
  8789   00BD4A  0E01               	movlw	1
  8790   00BD4C  0100               	movlb	0	; () banked
  8791   00BD4E  6F9C               	movwf	nvPowerUp@i& (0+255),b
  8792   00BD50                     l23732:
  8793                           
  8794                           ; BSR set to: 0
  8795                           ;../../VLCBlib_PIC/nv.c: 140:         nvDiagnostics[i].asUint = 0;
  8796   00BD50  519C               	movf	nvPowerUp@i& (0+255),w,b
  8797   00BD52  0D02               	mullw	2
  8798   00BD54  0EA4               	movlw	low _nvDiagnostics
  8799   00BD56  24F3               	addwf	243,w,c
  8800   00BD58  6ED9               	movwf	fsr2l,c
  8801   00BD5A  0E01               	movlw	high _nvDiagnostics
  8802   00BD5C  20F4               	addwfc	prodh,w,c
  8803   00BD5E  6EDA               	movwf	fsr2h,c
  8804   00BD60  6ADE               	clrf	postinc2,c
  8805   00BD62  6ADD               	clrf	postdec2,c
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;../../VLCBlib_PIC/nv.c: 141:     }
  8809   00BD64  2B9C               	incf	nvPowerUp@i& (0+255),f,b
  8810                           
  8811                           ; BSR set to: 0
  8812   00BD66  0E02               	movlw	2
  8813   00BD68  659C               	cpfsgt	nvPowerUp@i& (0+255),b
  8814   00BD6A  D7F2               	goto	l23732
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;../../VLCBlib_PIC/nv.c: 142:     nvDiagnostics[0x00].asUint = 2;
  8818   00BD6C  0E00               	movlw	0
  8819   00BD6E  0101               	movlb	1	; () banked
  8820   00BD70  6FA5               	movwf	(_nvDiagnostics+1)& (0+255),b
  8821   00BD72  0E02               	movlw	2
  8822   00BD74  6FA4               	movwf	_nvDiagnostics& (0+255),b
  8823                           
  8824                           ; BSR set to: 1
  8825                           ;../../VLCBlib_PIC/nv.c: 145:     loadNvCache();
  8826   00BD76  ECA3  F05C         	call	_loadNvCache	;wreg free
  8827   00BD7A  0012               	return		;funcret
  8828   00BD7C                     __end_of_nvPowerUp:
  8829                           	callstack 0
  8830                           
  8831 ;; *************** function _mnsPowerUp *****************
  8832 ;; Defined at:
  8833 ;;		line 295 in file "../../VLCBlib_PIC/mns.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;  temp            2   56[BANK0 ] int 
  8838 ;;  i               1   55[BANK0 ] unsigned char 
  8839 ;; Return value:  Size  Location     Type
  8840 ;;                  1    wreg      void 
  8841 ;; Registers used:
  8842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8843 ;; Tracked objects:
  8844 ;;		On entry : 0/0
  8845 ;;		On exit  : 0/0
  8846 ;;		Unchanged: 0/0
  8847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8849 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8851 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8852 ;;Total ram usage:        3 bytes
  8853 ;; Hardware stack levels used: 1
  8854 ;; Hardware stack levels required when called: 14
  8855 ;; This function calls:
  8856 ;;		_readNVM
  8857 ;;		_setLEDsByMode
  8858 ;;		_tickGet
  8859 ;; This function is called by:
  8860 ;;		_powerUp
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text11
  8865   007E3E                     __ptext11:
  8866                           	callstack 0
  8867   007E3E                     _mnsPowerUp:
  8868                           	callstack 15
  8869                           
  8870                           ;../../VLCBlib_PIC/mns.c: 296:     int temp;;../../VLCBlib_PIC/mns.c: 297:     uint8_t i
      +                          ;;../../VLCBlib_PIC/mns.c: 299:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FC);
  8871                           
  8872                           ;incstack = 0
  8873   007E3E  0EFC               	movlw	252
  8874   007E40  0100               	movlb	0	; () banked
  8875   007E42  6F91               	movwf	readNVM@index& (0+255),b
  8876   007E44  0E03               	movlw	3
  8877   007E46  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8878   007E48  0E00               	movlw	0
  8879   007E4A  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8880   007E4C  0E00               	movlw	0
  8881   007E4E  EC57  F059         	call	_readNVM
  8882   007E52  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8883   007E56  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8884                           
  8885                           ;../../VLCBlib_PIC/mns.c: 300:     if (temp < 0) {
  8886   007E5A  0100               	movlb	0	; () banked
  8887   007E5C  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8888   007E5E  D005               	goto	l1405
  8889   007E60                     u24750:
  8890                           
  8891                           ; BSR set to: 0
  8892                           ;../../VLCBlib_PIC/mns.c: 301:         nn.bytes.hi = 0;
  8893   007E60  0E00               	movlw	0
  8894   007E62  6FC0               	movwf	(_nn+1)& (0+255),b
  8895                           
  8896                           ;../../VLCBlib_PIC/mns.c: 302:         nn.bytes.lo = 0;
  8897   007E64  0E00               	movlw	0
  8898   007E66  6FBF               	movwf	_nn& (0+255),b
  8899                           
  8900                           ;../../VLCBlib_PIC/mns.c: 303:     } else {
  8901   007E68  D014               	goto	l23242
  8902   007E6A                     l1405:
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;../../VLCBlib_PIC/mns.c: 304:         nn.bytes.hi = (uint8_t)temp;
  8906   007E6A  C098  F0C0         	movff	mnsPowerUp@temp,_nn+1
  8907                           
  8908                           ; BSR set to: 0
  8909                           ;../../VLCBlib_PIC/mns.c: 305:         temp = readNVM(EEPROM_NVM_TYPE, 0x3FC +1);
  8910   007E6E  0EFD               	movlw	253
  8911   007E70  6F91               	movwf	readNVM@index& (0+255),b
  8912   007E72  0E03               	movlw	3
  8913   007E74  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8914   007E76  0E00               	movlw	0
  8915   007E78  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8916   007E7A  0E00               	movlw	0
  8917   007E7C  EC57  F059         	call	_readNVM
  8918   007E80  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8919   007E84  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8920                           
  8921                           ;../../VLCBlib_PIC/mns.c: 306:         if (temp < 0) {
  8922   007E88  0100               	movlb	0	; () banked
  8923   007E8A  BF99               	btfsc	(mnsPowerUp@temp+1)& (0+255),7,b
  8924   007E8C  D7E9               	goto	u24750
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;../../VLCBlib_PIC/mns.c: 310:             nn.bytes.lo = (uint8_t)temp;
  8928   007E8E  C098  F0BF         	movff	mnsPowerUp@temp,_nn
  8929   007E92                     l23242:
  8930                           
  8931                           ; BSR set to: 0
  8932                           ;../../VLCBlib_PIC/mns.c: 313:     temp = readNVM(EEPROM_NVM_TYPE, 0x3FB);
  8933   007E92  0EFB               	movlw	251
  8934   007E94  6F91               	movwf	readNVM@index& (0+255),b
  8935   007E96  0E03               	movlw	3
  8936   007E98  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8937   007E9A  0E00               	movlw	0
  8938   007E9C  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8939   007E9E  0E00               	movlw	0
  8940   007EA0  EC57  F059         	call	_readNVM
  8941   007EA4  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8942   007EA8  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8943                           
  8944                           ;../../VLCBlib_PIC/mns.c: 314:     if (temp < 0) {
  8945   007EAC  0100               	movlb	0	; () banked
  8946   007EAE  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8947   007EB0  D002               	goto	l1409
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;../../VLCBlib_PIC/mns.c: 315:         mode_state = MODE_UNINITIALISED;
  8951   007EB2  69C8               	setf	_mode_state& (0+255),b
  8952                           
  8953                           ;../../VLCBlib_PIC/mns.c: 316:     } else {
  8954   007EB4  D002               	goto	l1410
  8955   007EB6                     l1409:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;../../VLCBlib_PIC/mns.c: 317:         mode_state = (uint8_t)temp;
  8959   007EB6  C098  F0C8         	movff	mnsPowerUp@temp,_mode_state
  8960   007EBA                     l1410:
  8961                           
  8962                           ; BSR set to: 0
  8963                           ;../../VLCBlib_PIC/mns.c: 319:     setupModePreviousMode = mode_state;
  8964   007EBA  C0C8  F165         	movff	_mode_state,_setupModePreviousMode
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;../../VLCBlib_PIC/mns.c: 320:     temp = readNVM(EEPROM_NVM_TYPE, 0x3F9);
  8968   007EBE  0EF9               	movlw	249
  8969   007EC0  6F91               	movwf	readNVM@index& (0+255),b
  8970   007EC2  0E03               	movlw	3
  8971   007EC4  6F92               	movwf	(readNVM@index+1)& (0+255),b
  8972   007EC6  0E00               	movlw	0
  8973   007EC8  6F93               	movwf	(readNVM@index+2)& (0+255),b
  8974   007ECA  0E00               	movlw	0
  8975   007ECC  EC57  F059         	call	_readNVM
  8976   007ED0  C091  F098         	movff	?_readNVM,mnsPowerUp@temp
  8977   007ED4  C092  F099         	movff	?_readNVM+1,mnsPowerUp@temp+1
  8978                           
  8979                           ;../../VLCBlib_PIC/mns.c: 321:     if (temp < 0) {
  8980   007ED8  0100               	movlb	0	; () banked
  8981   007EDA  AF99               	btfss	(mnsPowerUp@temp+1)& (0+255),7,b
  8982   007EDC  D004               	goto	l1411
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;../../VLCBlib_PIC/mns.c: 322:         mode_flags = 4;
  8986   007EDE  0E04               	movlw	4
  8987   007EE0  0101               	movlb	1	; () banked
  8988   007EE2  6F66               	movwf	_mode_flags& (0+255),b
  8989                           
  8990                           ;../../VLCBlib_PIC/mns.c: 323:     } else {
  8991   007EE4  D002               	goto	l23254
  8992   007EE6                     l1411:
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;../../VLCBlib_PIC/mns.c: 324:         mode_flags = (uint8_t)temp;
  8996   007EE6  C098  F166         	movff	mnsPowerUp@temp,_mode_flags
  8997   007EEA                     l23254:
  8998                           
  8999                           ;../../VLCBlib_PIC/mns.c: 327:     setLEDsByMode();
  9000   007EEA  ECD7  F05E         	call	_setLEDsByMode	;wreg free
  9001                           
  9002                           ;../../VLCBlib_PIC/mns.c: 329:     pbTimer.val = tickGet();
  9003   007EEE  EC6B  F05A         	call	_tickGet	;wreg free
  9004   007EF2  C08D  F033         	movff	?_tickGet,_pbTimer
  9005   007EF6  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
  9006   007EFA  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
  9007   007EFE  C090  F036         	movff	?_tickGet+3,_pbTimer+3
  9008                           
  9009                           ;../../VLCBlib_PIC/mns.c: 333:     for (i=1; i<= 6; i++) {
  9010   007F02  0E01               	movlw	1
  9011   007F04  0100               	movlb	0	; () banked
  9012   007F06  6F97               	movwf	mnsPowerUp@i& (0+255),b
  9013   007F08                     l23262:
  9014                           
  9015                           ; BSR set to: 0
  9016                           ;../../VLCBlib_PIC/mns.c: 334:         mnsDiagnostics[i].asInt = 0;
  9017   007F08  5197               	movf	mnsPowerUp@i& (0+255),w,b
  9018   007F0A  0D02               	mullw	2
  9019   007F0C  0E8D               	movlw	low _mnsDiagnostics
  9020   007F0E  24F3               	addwf	243,w,c
  9021   007F10  6ED9               	movwf	fsr2l,c
  9022   007F12  0E01               	movlw	high _mnsDiagnostics
  9023   007F14  20F4               	addwfc	prodh,w,c
  9024   007F16  6EDA               	movwf	fsr2h,c
  9025   007F18  6ADE               	clrf	postinc2,c
  9026   007F1A  6ADD               	clrf	postdec2,c
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;../../VLCBlib_PIC/mns.c: 335:     }
  9030   007F1C  2B97               	incf	mnsPowerUp@i& (0+255),f,b
  9031                           
  9032                           ; BSR set to: 0
  9033   007F1E  0E06               	movlw	6
  9034   007F20  6597               	cpfsgt	mnsPowerUp@i& (0+255),b
  9035   007F22  D7F2               	goto	l23262
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;../../VLCBlib_PIC/mns.c: 336:     mnsDiagnostics[0x00].asInt = 6;
  9039   007F24  0E00               	movlw	0
  9040   007F26  0101               	movlb	1	; () banked
  9041   007F28  6F8E               	movwf	(_mnsDiagnostics+1)& (0+255),b
  9042   007F2A  0E06               	movlw	6
  9043   007F2C  6F8D               	movwf	_mnsDiagnostics& (0+255),b
  9044                           
  9045                           ;../../VLCBlib_PIC/mns.c: 338:     heartbeatSequence = 0;
  9046   007F2E  0E00               	movlw	0
  9047   007F30  6E45               	movwf	_heartbeatSequence^0,c
  9048                           
  9049                           ;../../VLCBlib_PIC/mns.c: 339:     heartbeatTimer.val = 0;
  9050   007F32  0E00               	movlw	0
  9051   007F34  6F50               	movwf	_heartbeatTimer& (0+255),b
  9052   007F36  0E00               	movlw	0
  9053   007F38  6F51               	movwf	(_heartbeatTimer+1)& (0+255),b
  9054   007F3A  0E00               	movlw	0
  9055   007F3C  6F52               	movwf	(_heartbeatTimer+2)& (0+255),b
  9056   007F3E  0E00               	movlw	0
  9057   007F40  6F53               	movwf	(_heartbeatTimer+3)& (0+255),b
  9058                           
  9059                           ;../../VLCBlib_PIC/mns.c: 340:     uptimeTimer.val = 0;
  9060   007F42  0E00               	movlw	0
  9061   007F44  6F4C               	movwf	_uptimeTimer& (0+255),b
  9062   007F46  0E00               	movlw	0
  9063   007F48  6F4D               	movwf	(_uptimeTimer+1)& (0+255),b
  9064   007F4A  0E00               	movlw	0
  9065   007F4C  6F4E               	movwf	(_uptimeTimer+2)& (0+255),b
  9066   007F4E  0E00               	movlw	0
  9067   007F50  6F4F               	movwf	(_uptimeTimer+3)& (0+255),b
  9068                           
  9069                           ; BSR set to: 1
  9070   007F52  0012               	return		;funcret
  9071   007F54                     __end_of_mnsPowerUp:
  9072                           	callstack 0
  9073                           
  9074 ;; *************** function _ackPowerUp *****************
  9075 ;; Defined at:
  9076 ;;		line 97 in file "../../VLCBlib_PIC/event_acknowledge.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;		None
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  i               1   45[BANK0 ] unsigned char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      void 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 0/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9091 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9093 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9094 ;;Total ram usage:        1 bytes
  9095 ;; Hardware stack levels used: 1
  9096 ;; Hardware stack levels required when called: 12
  9097 ;; This function calls:
  9098 ;;		Nothing
  9099 ;; This function is called by:
  9100 ;;		_powerUp
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           	psect	text12
  9105   00BF5E                     __ptext12:
  9106                           	callstack 0
  9107   00BF5E                     _ackPowerUp:
  9108                           	callstack 17
  9109                           
  9110                           ;../../VLCBlib_PIC/event_acknowledge.c: 98:     uint8_t i;;../../VLCBlib_PIC/event_ackno
      +                          wledge.c: 101:     for (i=1; i<= 1; i++) {
  9111                           
  9112                           ; BSR set to: 1
  9113                           ;incstack = 0
  9114   00BF5E  0E01               	movlw	1
  9115   00BF60  0100               	movlb	0	; () banked
  9116   00BF62  6F8D               	movwf	ackPowerUp@i& (0+255),b
  9117   00BF64                     l23142:
  9118                           
  9119                           ; BSR set to: 0
  9120                           ;../../VLCBlib_PIC/event_acknowledge.c: 102:         ackDiagnostics[i].asUint = 0;
  9121   00BF64  518D               	movf	ackPowerUp@i& (0+255),w,b
  9122   00BF66  0D02               	mullw	2
  9123   00BF68  0EB2               	movlw	low _ackDiagnostics
  9124   00BF6A  24F3               	addwf	243,w,c
  9125   00BF6C  6ED9               	movwf	fsr2l,c
  9126   00BF6E  0E01               	movlw	high _ackDiagnostics
  9127   00BF70  20F4               	addwfc	prodh,w,c
  9128   00BF72  6EDA               	movwf	fsr2h,c
  9129   00BF74  6ADE               	clrf	postinc2,c
  9130   00BF76  6ADD               	clrf	postdec2,c
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;../../VLCBlib_PIC/event_acknowledge.c: 103:     }
  9134   00BF78  2B8D               	incf	ackPowerUp@i& (0+255),f,b
  9135                           
  9136                           ; BSR set to: 0
  9137   00BF7A  0E01               	movlw	1
  9138   00BF7C  658D               	cpfsgt	ackPowerUp@i& (0+255),b
  9139   00BF7E  D7F2               	goto	l23142
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;../../VLCBlib_PIC/event_acknowledge.c: 104:     ackDiagnostics[0x00].asUint = 1;
  9143   00BF80  0E00               	movlw	0
  9144   00BF82  0101               	movlb	1	; () banked
  9145   00BF84  6FB3               	movwf	(_ackDiagnostics+1)& (0+255),b
  9146   00BF86  0E01               	movlw	1
  9147   00BF88  6FB2               	movwf	_ackDiagnostics& (0+255),b
  9148                           
  9149                           ; BSR set to: 1
  9150   00BF8A  0012               	return		;funcret
  9151   00BF8C                     __end_of_ackPowerUp:
  9152                           	callstack 0
  9153                           
  9154 ;; *************** function _consumer2QPowerUp *****************
  9155 ;; Defined at:
  9156 ;;		line 109 in file "../event_consumerDualActionQueue.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;		None
  9159 ;; Auto vars:     Size  Location     Type
  9160 ;;		None
  9161 ;; Return value:  Size  Location     Type
  9162 ;;                  1    wreg      void 
  9163 ;; Registers used:
  9164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9165 ;; Tracked objects:
  9166 ;;		On entry : 0/0
  9167 ;;		On exit  : 0/0
  9168 ;;		Unchanged: 0/0
  9169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9174 ;;Total ram usage:        0 bytes
  9175 ;; Hardware stack levels used: 1
  9176 ;; Hardware stack levels required when called: 12
  9177 ;; This function calls:
  9178 ;;		Nothing
  9179 ;; This function is called by:
  9180 ;;		_powerUp
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text13
  9185   00B9DA                     __ptext13:
  9186                           	callstack 0
  9187   00B9DA                     _consumer2QPowerUp:
  9188                           	callstack 17
  9189                           
  9190                           ;../event_consumerDualActionQueue.c: 110:     for (normalReadIndex=1; normalReadIndex <=
      +                           1; normalReadIndex++) {
  9191                           
  9192                           ; BSR set to: 1
  9193                           ;incstack = 0
  9194   00B9DA  0E01               	movlw	1
  9195   00B9DC  0100               	movlb	0	; () banked
  9196   00B9DE  6FCF               	movwf	_normalReadIndex& (0+255),b
  9197   00B9E0                     l22906:
  9198                           
  9199                           ; BSR set to: 0
  9200   00B9E0  0E01               	movlw	1
  9201   00B9E2  65CF               	cpfsgt	_normalReadIndex& (0+255),b
  9202   00B9E4  D001               	goto	l22910
  9203   00B9E6  D00C               	goto	l22916
  9204   00B9E8                     l22910:
  9205                           
  9206                           ; BSR set to: 0
  9207                           ;../event_consumerDualActionQueue.c: 111:         consumer2QDiagnostics[normalReadIndex]
      +                          .asUint = 0;
  9208   00B9E8  51CF               	movf	_normalReadIndex& (0+255),w,b
  9209   00B9EA  0D02               	mullw	2
  9210   00B9EC  0EB6               	movlw	low _consumer2QDiagnostics
  9211   00B9EE  24F3               	addwf	243,w,c
  9212   00B9F0  6ED9               	movwf	fsr2l,c
  9213   00B9F2  0E01               	movlw	high _consumer2QDiagnostics
  9214   00B9F4  20F4               	addwfc	prodh,w,c
  9215   00B9F6  6EDA               	movwf	fsr2h,c
  9216   00B9F8  6ADE               	clrf	postinc2,c
  9217   00B9FA  6ADD               	clrf	postdec2,c
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;../event_consumerDualActionQueue.c: 112:     }
  9221   00B9FC  2BCF               	incf	_normalReadIndex& (0+255),f,b
  9222   00B9FE  D7F0               	goto	l22906
  9223   00BA00                     l22916:
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;../event_consumerDualActionQueue.c: 113:     consumer2QDiagnostics[0].asUint = 1;
  9227   00BA00  0E00               	movlw	0
  9228   00BA02  0101               	movlb	1	; () banked
  9229   00BA04  6FB7               	movwf	(_consumer2QDiagnostics+1)& (0+255),b
  9230   00BA06  0E01               	movlw	1
  9231   00BA08  6FB6               	movwf	_consumer2QDiagnostics& (0+255),b
  9232                           
  9233                           ;../event_consumerDualActionQueue.c: 115:     normalReadIndex = 0;
  9234   00BA0A  0E00               	movlw	0
  9235   00BA0C  0100               	movlb	0	; () banked
  9236   00BA0E  6FCF               	movwf	_normalReadIndex& (0+255),b
  9237                           
  9238                           ;../event_consumerDualActionQueue.c: 116:     normalWriteIndex = 0;
  9239   00BA10  0E00               	movlw	0
  9240   00BA12  6FCE               	movwf	_normalWriteIndex& (0+255),b
  9241                           
  9242                           ;../event_consumerDualActionQueue.c: 117:     expeditedReadIndex = 0;
  9243   00BA14  0E00               	movlw	0
  9244   00BA16  6FCD               	movwf	_expeditedReadIndex& (0+255),b
  9245                           
  9246                           ;../event_consumerDualActionQueue.c: 118:     expeditedWriteIndex = 0;
  9247   00BA18  0E00               	movlw	0
  9248   00BA1A  6FCC               	movwf	_expeditedWriteIndex& (0+255),b
  9249                           
  9250                           ;../event_consumerDualActionQueue.c: 120:     expedited = FALSE;
  9251   00BA1C  0E00               	movlw	0
  9252   00BA1E  6E47               	movwf	_expedited^0,c
  9253                           
  9254                           ; BSR set to: 0
  9255   00BA20  0012               	return		;funcret
  9256   00BA22                     __end_of_consumer2QPowerUp:
  9257                           	callstack 0
  9258                           
  9259 ;; *************** function _teachPowerUp *****************
  9260 ;; Defined at:
  9261 ;;		line 359 in file "../../VLCBlib_PIC/event_teach_large.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;		None
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;  i               1    9[BANK1 ] unsigned char 
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      void 
  9268 ;; Registers used:
  9269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9276 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9278 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9279 ;;Total ram usage:        1 bytes
  9280 ;; Hardware stack levels used: 1
  9281 ;; Hardware stack levels required when called: 17
  9282 ;; This function calls:
  9283 ;;		_rebuildHashtable
  9284 ;; This function is called by:
  9285 ;;		_powerUp
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           	psect	text14
  9290   00BD7C                     __ptext14:
  9291                           	callstack 0
  9292   00BD7C                     _teachPowerUp:
  9293                           	callstack 12
  9294                           
  9295                           ;../../VLCBlib_PIC/event_teach_large.c: 360:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 362:     rebuildHashtable();
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;incstack = 0
  9299   00BD7C  EC8D  F03E         	call	_rebuildHashtable	;wreg free
  9300                           
  9301                           ;../../VLCBlib_PIC/event_teach_large.c: 366:     for (i=1; i<= 1; i++) {
  9302   00BD80  0E01               	movlw	1
  9303   00BD82  0101               	movlb	1	; () banked
  9304   00BD84  6FC3               	movwf	teachPowerUp@i& (0+255),b
  9305   00BD86                     l24200:
  9306                           
  9307                           ; BSR set to: 1
  9308                           ;../../VLCBlib_PIC/event_teach_large.c: 367:         teachDiagnostics[i].asUint = 0;
  9309   00BD86  51C3               	movf	teachPowerUp@i& (0+255),w,b
  9310   00BD88  0D02               	mullw	2
  9311   00BD8A  0EAE               	movlw	low _teachDiagnostics
  9312   00BD8C  24F3               	addwf	243,w,c
  9313   00BD8E  6ED9               	movwf	fsr2l,c
  9314   00BD90  0E01               	movlw	high _teachDiagnostics
  9315   00BD92  20F4               	addwfc	prodh,w,c
  9316   00BD94  6EDA               	movwf	fsr2h,c
  9317   00BD96  6ADE               	clrf	postinc2,c
  9318   00BD98  6ADD               	clrf	postdec2,c
  9319                           
  9320                           ; BSR set to: 1
  9321                           ;../../VLCBlib_PIC/event_teach_large.c: 368:     }
  9322   00BD9A  2BC3               	incf	teachPowerUp@i& (0+255),f,b
  9323                           
  9324                           ; BSR set to: 1
  9325   00BD9C  0E01               	movlw	1
  9326   00BD9E  65C3               	cpfsgt	teachPowerUp@i& (0+255),b
  9327   00BDA0  D7F2               	goto	l24200
  9328                           
  9329                           ; BSR set to: 1
  9330                           ;../../VLCBlib_PIC/event_teach_large.c: 369:     teachDiagnostics[0x00].asUint = 1;
  9331   00BDA2  0E00               	movlw	0
  9332   00BDA4  6FAF               	movwf	(_teachDiagnostics+1)& (0+255),b
  9333   00BDA6  0E01               	movlw	1
  9334   00BDA8  6FAE               	movwf	_teachDiagnostics& (0+255),b
  9335                           
  9336                           ; BSR set to: 1
  9337                           ;../../VLCBlib_PIC/event_teach_large.c: 371:     mode_flags &= ~1;
  9338   00BDAA  9166               	bcf	_mode_flags& (0+255),0,b
  9339                           
  9340                           ; BSR set to: 1
  9341   00BDAC  0012               	return		;funcret
  9342   00BDAE                     __end_of_teachPowerUp:
  9343                           	callstack 0
  9344                           
  9345 ;; *************** function _leds_powerUp *****************
  9346 ;; Defined at:
  9347 ;;		line 77 in file "../../VLCBlib_PIC/statusLeds2.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;		None
  9350 ;; Auto vars:     Size  Location     Type
  9351 ;;		None
  9352 ;; Return value:  Size  Location     Type
  9353 ;;                  1    wreg      void 
  9354 ;; Registers used:
  9355 ;;		wreg, status,2, status,0, cstack
  9356 ;; Tracked objects:
  9357 ;;		On entry : 0/0
  9358 ;;		On exit  : 0/0
  9359 ;;		Unchanged: 0/0
  9360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9365 ;;Total ram usage:        0 bytes
  9366 ;; Hardware stack levels used: 1
  9367 ;; Hardware stack levels required when called: 13
  9368 ;; This function calls:
  9369 ;;		_tickGet
  9370 ;; This function is called by:
  9371 ;;		_powerUp
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           	psect	text15
  9376   00BDE0                     __ptext15:
  9377                           	callstack 0
  9378   00BDE0                     _leds_powerUp:
  9379                           	callstack 16
  9380                           
  9381                           ;../../VLCBlib_PIC/statusLeds2.c: 79:     {ANCON0=ANCON1=0; TRISBbits.TRISB6=TRISBbits.T
      +                          RISB7=0,TRISAbits.TRISA2=1;};
  9382                           
  9383                           ; BSR set to: 1
  9384                           ;incstack = 0
  9385   00BDE0  0E00               	movlw	0
  9386   00BDE2  010F               	movlb	15	; () banked
  9387   00BDE4  6F5C               	movwf	92,b	;volatile
  9388   00BDE6  CF5C FF5D          	movff	3932,3933	;volatile
  9389                           
  9390                           ; BSR set to: 15
  9391   00BDEA  9E93               	bcf	147,7,c	;volatile
  9392   00BDEC  9C93               	bcf	147,6,c	;volatile
  9393                           
  9394                           ; BSR set to: 15
  9395   00BDEE  8492               	bsf	146,2,c	;volatile
  9396                           
  9397                           ;../../VLCBlib_PIC/statusLeds2.c: 80:     flashCounter[0] = 0;
  9398   00BDF0  0E00               	movlw	0
  9399   00BDF2  0100               	movlb	0	; () banked
  9400   00BDF4  6FBB               	movwf	_flashCounter& (0+255),b
  9401                           
  9402                           ;../../VLCBlib_PIC/statusLeds2.c: 81:     flashCounter[1] = 0;
  9403   00BDF6  0E00               	movlw	0
  9404   00BDF8  6FBC               	movwf	(_flashCounter+1)& (0+255),b
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;../../VLCBlib_PIC/statusLeds2.c: 82:     ledTimer.val = tickGet();
  9408   00BDFA  EC6B  F05A         	call	_tickGet	;wreg free
  9409   00BDFE  C08D  F148         	movff	?_tickGet,_ledTimer
  9410   00BE02  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
  9411   00BE06  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
  9412   00BE0A  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
  9413   00BE0E  0012               	return		;funcret
  9414   00BE10                     __end_of_leds_powerUp:
  9415                           	callstack 0
  9416                           
  9417 ;; *************** function _initTimedResponse *****************
  9418 ;; Defined at:
  9419 ;;		line 74 in file "../../VLCBlib_PIC/timedResponse.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;		None
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;		None
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  1    wreg      void 
  9426 ;; Registers used:
  9427 ;;		None
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;Total ram usage:        0 bytes
  9438 ;; Hardware stack levels used: 1
  9439 ;; Hardware stack levels required when called: 12
  9440 ;; This function calls:
  9441 ;;		Nothing
  9442 ;; This function is called by:
  9443 ;;		_powerUp
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           	psect	text16
  9448   00C516                     __ptext16:
  9449                           	callstack 0
  9450   00C516                     _initTimedResponse:
  9451                           	callstack 17
  9452                           
  9453                           ;../../VLCBlib_PIC/timedResponse.c: 75:     timedResponseType = 0xFF;
  9454                           
  9455                           ;incstack = 0
  9456   00C516  0100               	movlb	0	; () banked
  9457   00C518  69C5               	setf	_timedResponseType& (0+255),b
  9458                           
  9459                           ; BSR set to: 0
  9460   00C51A  0012               	return		;funcret
  9461   00C51C                     __end_of_initTimedResponse:
  9462                           	callstack 0
  9463                           
  9464 ;; *************** function _initTicker *****************
  9465 ;; Defined at:
  9466 ;;		line 101 in file "../../VLCBlib_PIC/ticktime.c"
  9467 ;; Parameters:    Size  Location     Type
  9468 ;;  priority        1    wreg     unsigned char 
  9469 ;; Auto vars:     Size  Location     Type
  9470 ;;  priority        1   45[BANK0 ] unsigned char 
  9471 ;;  i               1   47[BANK0 ] unsigned char 
  9472 ;;  divider         1   46[BANK0 ] unsigned char 
  9473 ;; Return value:  Size  Location     Type
  9474 ;;                  1    wreg      void 
  9475 ;; Registers used:
  9476 ;;		wreg, status,2, status,0
  9477 ;; Tracked objects:
  9478 ;;		On entry : 0/0
  9479 ;;		On exit  : 0/0
  9480 ;;		Unchanged: 0/0
  9481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9483 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9485 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9486 ;;Total ram usage:        3 bytes
  9487 ;; Hardware stack levels used: 1
  9488 ;; Hardware stack levels required when called: 12
  9489 ;; This function calls:
  9490 ;;		Nothing
  9491 ;; This function is called by:
  9492 ;;		_powerUp
  9493 ;; This function uses a non-reentrant model
  9494 ;;
  9495                           
  9496                           	psect	text17
  9497   00BA6A                     __ptext17:
  9498                           	callstack 0
  9499   00BA6A                     _initTicker:
  9500                           	callstack 17
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;incstack = 0
  9504                           ;initTicker@priority stored from wreg
  9505   00BA6A  0100               	movlb	0	; () banked
  9506   00BA6C  6F8D               	movwf	initTicker@priority& (0+255),b
  9507                           
  9508                           ;../../VLCBlib_PIC/ticktime.c: 102:     uint8_t divider, i;;../../VLCBlib_PIC/ticktime.c
      +                          : 104:     divider = 0;
  9509   00BA6E  0E00               	movlw	0
  9510   00BA70  0100               	movlb	0	; () banked
  9511   00BA72  6F8E               	movwf	initTicker@divider& (0+255),b
  9512                           
  9513                           ;../../VLCBlib_PIC/ticktime.c: 105:     for (i=64;i>0;i>>=1)
  9514   00BA74  0E40               	movlw	64
  9515   00BA76  6F8F               	movwf	initTicker@i& (0+255),b
  9516   00BA78                     l23892:
  9517                           
  9518                           ; BSR set to: 0
  9519                           ;../../VLCBlib_PIC/ticktime.c: 106:         divider++;
  9520   00BA78  2B8E               	incf	initTicker@divider& (0+255),f,b
  9521                           
  9522                           ; BSR set to: 0
  9523   00BA7A  90D8               	bcf	status,0,c
  9524   00BA7C  338F               	rrcf	initTicker@i& (0+255),f,b
  9525                           
  9526                           ; BSR set to: 0
  9527   00BA7E  518F               	movf	initTicker@i& (0+255),w,b
  9528   00BA80  A4D8               	btfss	status,2,c
  9529   00BA82  D7FA               	goto	l23892
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;../../VLCBlib_PIC/ticktime.c: 109:     T0CON = (uint8_t)(0b00000000 | divider);
  9533   00BA84  C08E  FFD5         	movff	initTicker@divider,4053	;volatile
  9534                           
  9535                           ;../../VLCBlib_PIC/ticktime.c: 110:     T0CONbits.T08BIT = 0;
  9536   00BA88  9CD5               	bcf	213,6,c	;volatile
  9537                           
  9538                           ;../../VLCBlib_PIC/ticktime.c: 111:     T0CONbits.T0CS = 0;
  9539   00BA8A  9AD5               	bcf	213,5,c	;volatile
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;../../VLCBlib_PIC/ticktime.c: 112:     TMR0H = 0;
  9543   00BA8C  0E00               	movlw	0
  9544   00BA8E  6ED7               	movwf	215,c	;volatile
  9545                           
  9546                           ;../../VLCBlib_PIC/ticktime.c: 113:     TMR0L = 0;
  9547   00BA90  0E00               	movlw	0
  9548   00BA92  6ED6               	movwf	214,c	;volatile
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;../../VLCBlib_PIC/ticktime.c: 114:     INTCON2bits.TMR0IP = priority;
  9552   00BA94  B18D               	btfsc	initTicker@priority& (0+255),0,b
  9553   00BA96  D002               	bra	u25485
  9554   00BA98  94F1               	bcf	241,2,c	;volatile
  9555   00BA9A  D001               	bra	u25486
  9556   00BA9C                     u25485:
  9557   00BA9C  84F1               	bsf	241,2,c	;volatile
  9558   00BA9E                     u25486:
  9559                           
  9560                           ;../../VLCBlib_PIC/ticktime.c: 115:     INTCONbits.TMR0IF = 0;
  9561   00BA9E  94F2               	bcf	242,2,c	;volatile
  9562                           
  9563                           ;../../VLCBlib_PIC/ticktime.c: 116:     INTCONbits.TMR0IE = 1;
  9564   00BAA0  8AF2               	bsf	242,5,c	;volatile
  9565                           
  9566                           ;../../VLCBlib_PIC/ticktime.c: 117:     T0CONbits.TMR0ON = 1;
  9567   00BAA2  8ED5               	bsf	213,7,c	;volatile
  9568                           
  9569                           ;../../VLCBlib_PIC/ticktime.c: 119:     timerExtension1 = 0;
  9570   00BAA4  0E00               	movlw	0
  9571   00BAA6  0100               	movlb	0	; () banked
  9572   00BAA8  6FCA               	movwf	_timerExtension1& (0+255),b	;volatile
  9573                           
  9574                           ;../../VLCBlib_PIC/ticktime.c: 120:     timerExtension2 = 0;
  9575   00BAAA  0E00               	movlw	0
  9576   00BAAC  6FC9               	movwf	_timerExtension2& (0+255),b	;volatile
  9577                           
  9578                           ; BSR set to: 0
  9579   00BAAE  0012               	return		;funcret
  9580   00BAB0                     __end_of_initTicker:
  9581                           	callstack 0
  9582                           
  9583 ;; *************** function _poll *****************
  9584 ;; Defined at:
  9585 ;;		line 992 in file "../../VLCBlib_PIC/vlcb.c"
  9586 ;; Parameters:    Size  Location     Type
  9587 ;;		None
  9588 ;; Auto vars:     Size  Location     Type
  9589 ;;  m               9   36[BANK2 ] struct Message
  9590 ;;  i               1   35[BANK2 ] unsigned char 
  9591 ;;  handled         1   34[BANK2 ] enum E12793
  9592 ;; Return value:  Size  Location     Type
  9593 ;;                  1    wreg      void 
  9594 ;; Registers used:
  9595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  9596 ;; Tracked objects:
  9597 ;;		On entry : 0/0
  9598 ;;		On exit  : 0/0
  9599 ;;		Unchanged: 0/0
  9600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9602 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9603 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9604 ;;      Totals:         0       0       0      15       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9605 ;;Total ram usage:       15 bytes
  9606 ;; Hardware stack levels used: 1
  9607 ;; Hardware stack levels required when called: 28
  9608 ;; This function calls:
  9609 ;;		NULL
  9610 ;;		_APP_postProcessMessage
  9611 ;;		_APP_preProcessMessage
  9612 ;;		___lmul
  9613 ;;		_ackEventProcessMessage
  9614 ;;		_bootProcessMessage
  9615 ;;		_canProcessMessage
  9616 ;;		_canReceiveMessage
  9617 ;;		_consumer2QProcessMessage
  9618 ;;		_flushFlashBlock
  9619 ;;		_leds_poll
  9620 ;;		_mnsPoll
  9621 ;;		_mnsProcessMessage
  9622 ;;		_nvProcessMessage
  9623 ;;		_pollTimedResponse
  9624 ;;		_producerProcessMessage
  9625 ;;		_showStatus
  9626 ;;		_teachProcessMessage
  9627 ;;		_tickGet
  9628 ;; This function is called by:
  9629 ;;		_main
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text18
  9634   003900                     __ptext18:
  9635                           	callstack 0
  9636   003900                     _poll:
  9637                           	callstack 2
  9638                           
  9639                           ;../../VLCBlib_PIC/vlcb.c: 993:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 994:     Messag
      +                          e m;;../../VLCBlib_PIC/vlcb.c: 995:     Processed handled;;../../VLCBlib_PIC/vlcb.c: 998
      +                          :     if ((tickGet() - timedResponseTime.val) > (long)timedResponseDelay*(62500/1000)) {
  9640                           
  9641                           ; BSR set to: 0
  9642                           ;incstack = 0
  9643   003900  EC6B  F05A         	call	_tickGet	;wreg free
  9644   003904  0101               	movlb	1	; () banked
  9645   003906  5144               	movf	_timedResponseTime& (0+255),w,b
  9646   003908  0100               	movlb	0	; () banked
  9647   00390A  5D8D               	subwf	?_tickGet& (0+255),w,b
  9648   00390C  0102               	movlb	2	; () banked
  9649   00390E  6FEA               	movwf	??_poll& (0+255),b
  9650   003910  0101               	movlb	1	; () banked
  9651   003912  5145               	movf	(_timedResponseTime+1)& (0+255),w,b
  9652   003914  0100               	movlb	0	; () banked
  9653   003916  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9654   003918  0102               	movlb	2	; () banked
  9655   00391A  6FEB               	movwf	(??_poll+1)& (0+255),b
  9656   00391C  0101               	movlb	1	; () banked
  9657   00391E  5146               	movf	(_timedResponseTime+2)& (0+255),w,b
  9658   003920  0100               	movlb	0	; () banked
  9659   003922  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9660   003924  0102               	movlb	2	; () banked
  9661   003926  6FEC               	movwf	(??_poll+2)& (0+255),b
  9662   003928  0101               	movlb	1	; () banked
  9663   00392A  5147               	movf	(_timedResponseTime+3)& (0+255),w,b
  9664   00392C  0100               	movlb	0	; () banked
  9665   00392E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9666   003930  0102               	movlb	2	; () banked
  9667   003932  6FED               	movwf	(??_poll+3)& (0+255),b
  9668   003934  0101               	movlb	1	; () banked
  9669   003936  5164               	movf	_timedResponseDelay& (0+255),w,b
  9670   003938  0100               	movlb	0	; () banked
  9671   00393A  6F91               	movwf	___lmul@multiplier& (0+255),b
  9672   00393C  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
  9673   00393E  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
  9674   003940  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
  9675   003942  0E3E               	movlw	62
  9676   003944  6F95               	movwf	___lmul@multiplicand& (0+255),b
  9677   003946  0E00               	movlw	0
  9678   003948  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9679   00394A  0E00               	movlw	0
  9680   00394C  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9681   00394E  0E00               	movlw	0
  9682   003950  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9683   003952  EC97  F05A         	call	___lmul	;wreg free
  9684   003956  0102               	movlb	2	; () banked
  9685   003958  51EA               	movf	??_poll& (0+255),w,b
  9686   00395A  0100               	movlb	0	; () banked
  9687   00395C  5D91               	subwf	?___lmul& (0+255),w,b
  9688   00395E  0102               	movlb	2	; () banked
  9689   003960  51EB               	movf	(??_poll+1)& (0+255),w,b
  9690   003962  0100               	movlb	0	; () banked
  9691   003964  5992               	subwfb	(?___lmul+1)& (0+255),w,b
  9692   003966  0102               	movlb	2	; () banked
  9693   003968  51EC               	movf	(??_poll+2)& (0+255),w,b
  9694   00396A  0100               	movlb	0	; () banked
  9695   00396C  5993               	subwfb	(?___lmul+2)& (0+255),w,b
  9696   00396E  0102               	movlb	2	; () banked
  9697   003970  51ED               	movf	(??_poll+3)& (0+255),w,b
  9698   003972  0100               	movlb	0	; () banked
  9699   003974  5994               	subwfb	(?___lmul+3)& (0+255),w,b
  9700   003976  B0D8               	btfsc	status,0,c
  9701   003978  D00C               	goto	l24700
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;../../VLCBlib_PIC/vlcb.c: 999:         pollTimedResponse();
  9705   00397A  EC69  F054         	call	_pollTimedResponse	;wreg free
  9706                           
  9707                           ;../../VLCBlib_PIC/vlcb.c: 1000:         timedResponseTime.val = tickGet();
  9708   00397E  EC6B  F05A         	call	_tickGet	;wreg free
  9709   003982  C08D  F144         	movff	?_tickGet,_timedResponseTime
  9710   003986  C08E  F145         	movff	?_tickGet+1,_timedResponseTime+1
  9711   00398A  C08F  F146         	movff	?_tickGet+2,_timedResponseTime+2
  9712   00398E  C090  F147         	movff	?_tickGet+3,_timedResponseTime+3
  9713   003992                     l24700:
  9714                           
  9715                           ;../../VLCBlib_PIC/vlcb.c: 1002:     if ((tickGet() - flashFlushTime.val) > 62500) {
  9716   003992  EC6B  F05A         	call	_tickGet	;wreg free
  9717   003996  0101               	movlb	1	; () banked
  9718   003998  5140               	movf	_flashFlushTime& (0+255),w,b
  9719   00399A  0100               	movlb	0	; () banked
  9720   00399C  5D8D               	subwf	?_tickGet& (0+255),w,b
  9721   00399E  0102               	movlb	2	; () banked
  9722   0039A0  6FEA               	movwf	??_poll& (0+255),b
  9723   0039A2  0101               	movlb	1	; () banked
  9724   0039A4  5141               	movf	(_flashFlushTime+1)& (0+255),w,b
  9725   0039A6  0100               	movlb	0	; () banked
  9726   0039A8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
  9727   0039AA  0102               	movlb	2	; () banked
  9728   0039AC  6FEB               	movwf	(??_poll+1)& (0+255),b
  9729   0039AE  0101               	movlb	1	; () banked
  9730   0039B0  5142               	movf	(_flashFlushTime+2)& (0+255),w,b
  9731   0039B2  0100               	movlb	0	; () banked
  9732   0039B4  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
  9733   0039B6  0102               	movlb	2	; () banked
  9734   0039B8  6FEC               	movwf	(??_poll+2)& (0+255),b
  9735   0039BA  0101               	movlb	1	; () banked
  9736   0039BC  5143               	movf	(_flashFlushTime+3)& (0+255),w,b
  9737   0039BE  0100               	movlb	0	; () banked
  9738   0039C0  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
  9739   0039C2  0102               	movlb	2	; () banked
  9740   0039C4  6FED               	movwf	(??_poll+3)& (0+255),b
  9741   0039C6  51ED               	movf	(??_poll+3)& (0+255),w,b
  9742   0039C8  11EC               	iorwf	(??_poll+2)& (0+255),w,b
  9743   0039CA  E106               	bnz	u26450
  9744   0039CC  0E25               	movlw	37
  9745   0039CE  5DEA               	subwf	??_poll& (0+255),w,b
  9746   0039D0  0EF4               	movlw	244
  9747   0039D2  59EB               	subwfb	(??_poll+1)& (0+255),w,b
  9748   0039D4  A0D8               	btfss	status,0,c
  9749   0039D6  D00C               	goto	l24706
  9750   0039D8                     u26450:
  9751                           
  9752                           ; BSR set to: 2
  9753                           ;../../VLCBlib_PIC/vlcb.c: 1003:         flushFlashBlock();
  9754   0039D8  ECE6  F052         	call	_flushFlashBlock	;wreg free
  9755                           
  9756                           ;../../VLCBlib_PIC/vlcb.c: 1004:         flashFlushTime.val = tickGet();
  9757   0039DC  EC6B  F05A         	call	_tickGet	;wreg free
  9758   0039E0  C08D  F140         	movff	?_tickGet,_flashFlushTime
  9759   0039E4  C08E  F141         	movff	?_tickGet+1,_flashFlushTime+1
  9760   0039E8  C08F  F142         	movff	?_tickGet+2,_flashFlushTime+2
  9761   0039EC  C090  F143         	movff	?_tickGet+3,_flashFlushTime+3
  9762   0039F0                     l24706:
  9763                           
  9764                           ;../../VLCBlib_PIC/vlcb.c: 1007:     for (i=0; i<9; i++) {
  9765   0039F0  0E00               	movlw	0
  9766   0039F2  0102               	movlb	2	; () banked
  9767   0039F4  6FEF               	movwf	poll@i& (0+255),b
  9768   0039F6                     l24712:
  9769                           
  9770                           ; BSR set to: 2
  9771                           ;../../VLCBlib_PIC/vlcb.c: 1008:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->poll != ((void*)0))) {
  9772   0039F6  51EF               	movf	poll@i& (0+255),w,b
  9773   0039F8  0D02               	mullw	2
  9774   0039FA  0E75               	movlw	low _services
  9775   0039FC  24F3               	addwf	243,w,c
  9776   0039FE  6EF6               	movwf	tblptrl,c
  9777   003A00  0EEE               	movlw	high _services
  9778   003A02  20F4               	addwfc	244,w,c
  9779   003A04  6EF7               	movwf	tblptrh,c
  9780   003A06                     	if	1	;There are 3 active tblptr bytes
  9781   003A06  6AF8               	clrf	tblptru,c
  9782   003A08  0E00               	movlw	low (__mediumconst shr (0+16))
  9783   003A0A  22F8               	addwfc	tblptru,f,c
  9784   003A0C                     	endif
  9785   003A0C  0009               	tblrd		*+
  9786   003A0E  50F5               	movf	tablat,w,c
  9787   003A10  0009               	tblrd		*+
  9788   003A12  10F5               	iorwf	tablat,w,c
  9789   003A14  B4D8               	btfsc	status,2,c
  9790   003A16  D04B               	goto	u26489
  9791                           
  9792                           ; BSR set to: 2
  9793   003A18  51EF               	movf	poll@i& (0+255),w,b
  9794   003A1A  0D02               	mullw	2
  9795   003A1C  0E75               	movlw	low _services
  9796   003A1E  24F3               	addwf	243,w,c
  9797   003A20  6EF6               	movwf	tblptrl,c
  9798   003A22  0EEE               	movlw	high _services
  9799   003A24  20F4               	addwfc	244,w,c
  9800   003A26  6EF7               	movwf	tblptrh,c
  9801   003A28                     	if	1	;There are 3 active tblptr bytes
  9802   003A28  6AF8               	clrf	tblptru,c
  9803   003A2A  0E00               	movlw	low (__mediumconst shr (0+16))
  9804   003A2C  22F8               	addwfc	tblptru,f,c
  9805   003A2E                     	endif
  9806   003A2E  0009               	tblrd		*+
  9807   003A30  CFF5 F2EA          	movff	tablat,??_poll
  9808   003A34  0009               	tblrd		*+
  9809   003A36  CFF5 F2EB          	movff	tablat,??_poll+1
  9810   003A3A  0E08               	movlw	8
  9811   003A3C  27EA               	addwf	??_poll& (0+255),f,b
  9812   003A3E  0E00               	movlw	0
  9813   003A40  23EB               	addwfc	(??_poll+1)& (0+255),f,b
  9814   003A42  C2EA  FFF6         	movff	??_poll,tblptrl
  9815   003A46  C2EB  FFF7         	movff	??_poll+1,tblptrh
  9816   003A4A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9817   003A4A  6AF8               	clrf	tblptru,c
  9818   003A4C                     	endif
  9819   003A4C                     	if	0	;tblptru may be non-zero
  9820   003A4C                     	endif
  9821   003A4C  0009               	tblrd		*+
  9822   003A4E  50F5               	movf	tablat,w,c
  9823   003A50  0009               	tblrd		*+
  9824   003A52  10F5               	iorwf	tablat,w,c
  9825   003A54  B4D8               	btfsc	status,2,c
  9826   003A56  D02B               	goto	u26489
  9827                           
  9828                           ; BSR set to: 2
  9829                           ;../../VLCBlib_PIC/vlcb.c: 1009:             services[i]->poll();
  9830   003A58  51EF               	movf	poll@i& (0+255),w,b
  9831   003A5A  0D02               	mullw	2
  9832   003A5C  0E75               	movlw	low _services
  9833   003A5E  24F3               	addwf	243,w,c
  9834   003A60  6EF6               	movwf	tblptrl,c
  9835   003A62  0EEE               	movlw	high _services
  9836   003A64  20F4               	addwfc	244,w,c
  9837   003A66  6EF7               	movwf	tblptrh,c
  9838   003A68                     	if	1	;There are 3 active tblptr bytes
  9839   003A68  6AF8               	clrf	tblptru,c
  9840   003A6A  0E00               	movlw	low (__mediumconst shr (0+16))
  9841   003A6C  22F8               	addwfc	tblptru,f,c
  9842   003A6E                     	endif
  9843   003A6E  0009               	tblrd		*+
  9844   003A70  CFF5 F2EA          	movff	tablat,??_poll
  9845   003A74  0009               	tblrd		*+
  9846   003A76  CFF5 F2EB          	movff	tablat,??_poll+1
  9847   003A7A  0E08               	movlw	8
  9848   003A7C  27EA               	addwf	??_poll& (0+255),f,b
  9849   003A7E  0E00               	movlw	0
  9850   003A80  23EB               	addwfc	(??_poll+1)& (0+255),f,b
  9851   003A82  C2EA  FFF6         	movff	??_poll,tblptrl
  9852   003A86  C2EB  FFF7         	movff	??_poll+1,tblptrh
  9853   003A8A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9854   003A8A  6AF8               	clrf	tblptru,c
  9855   003A8C                     	endif
  9856   003A8C                     	if	0	;tblptru may be non-zero
  9857   003A8C                     	endif
  9858   003A8C  0009               	tblrd		*+
  9859   003A8E  CFF5 F2EC          	movff	tablat,??_poll+2
  9860   003A92  0009               	tblrd		*+
  9861   003A94  CFF5 F2ED          	movff	tablat,??_poll+3
  9862   003A98  D801               	call	u26488
  9863   003A9A  D009               	goto	u26489
  9864   003A9C                     u26488:
  9865   003A9C  0005               	push	
  9866   003A9E  6EFA               	movwf	pclath,c
  9867   003AA0  51EC               	movf	(??_poll+2)& (0+255),w,b
  9868   003AA2  6EFD               	movwf	tosl,c
  9869   003AA4  51ED               	movf	(??_poll+3)& (0+255),w,b
  9870   003AA6  6EFE               	movwf	tosh,c
  9871   003AA8  6AFF               	clrf	tosu,c
  9872   003AAA  50FA               	movf	pclath,w,c
  9873   003AAC  0012               	return		;indir
  9874   003AAE                     u26489:
  9875                           
  9876                           ;../../VLCBlib_PIC/vlcb.c: 1011:     }
  9877   003AAE  0102               	movlb	2	; () banked
  9878   003AB0  2BEF               	incf	poll@i& (0+255),f,b
  9879                           
  9880                           ; BSR set to: 2
  9881   003AB2  0E08               	movlw	8
  9882   003AB4  65EF               	cpfsgt	poll@i& (0+255),b
  9883   003AB6  D79F               	goto	l24712
  9884                           
  9885                           ; BSR set to: 2
  9886                           ;../../VLCBlib_PIC/vlcb.c: 1013:     leds_poll();
  9887   003AB8  EC68  F02E         	call	_leds_poll	;wreg free
  9888                           
  9889                           ;../../VLCBlib_PIC/vlcb.c: 1016:     handled = NOT_PROCESSED;
  9890   003ABC  0E00               	movlw	0
  9891   003ABE  0102               	movlb	2	; () banked
  9892   003AC0  6FEE               	movwf	poll@handled& (0+255),b
  9893                           
  9894                           ; BSR set to: 2
  9895                           ;../../VLCBlib_PIC/vlcb.c: 1017:     if (transport != ((void*)0)) {
  9896   003AC2  0101               	movlb	1	; () banked
  9897   003AC4  5162               	movf	_transport& (0+255),w,b
  9898   003AC6  1163               	iorwf	(_transport+1)& (0+255),w,b
  9899   003AC8  B4D8               	btfsc	status,2,c
  9900   003ACA  D0CA               	goto	l1987
  9901                           
  9902                           ; BSR set to: 1
  9903                           ;../../VLCBlib_PIC/vlcb.c: 1018:         if (transport->receiveMessage != ((void*)0)) {
  9904   003ACC  0E02               	movlw	2
  9905   003ACE  2562               	addwf	_transport& (0+255),w,b
  9906   003AD0  0102               	movlb	2	; () banked
  9907   003AD2  6FEA               	movwf	??_poll& (0+255),b
  9908   003AD4  0E00               	movlw	0
  9909   003AD6  0101               	movlb	1	; () banked
  9910   003AD8  2163               	addwfc	(_transport+1)& (0+255),w,b
  9911   003ADA  0102               	movlb	2	; () banked
  9912   003ADC  6FEB               	movwf	(??_poll+1)& (0+255),b
  9913   003ADE  C2EA  FFF6         	movff	??_poll,tblptrl
  9914   003AE2  C2EB  FFF7         	movff	??_poll+1,tblptrh
  9915   003AE6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9916   003AE6  6AF8               	clrf	tblptru,c
  9917   003AE8                     	endif
  9918   003AE8                     	if	0	;tblptru may be non-zero
  9919   003AE8                     	endif
  9920   003AE8  0009               	tblrd		*+
  9921   003AEA  50F5               	movf	tablat,w,c
  9922   003AEC  0009               	tblrd		*+
  9923   003AEE  10F5               	iorwf	tablat,w,c
  9924   003AF0  B4D8               	btfsc	status,2,c
  9925   003AF2  D0B6               	goto	l1987
  9926                           
  9927                           ; BSR set to: 2
  9928                           ;../../VLCBlib_PIC/vlcb.c: 1019:             if (transport->receiveMessage(&m)) {
  9929   003AF4  0EF0               	movlw	low poll@m
  9930   003AF6  0101               	movlb	1	; () banked
  9931   003AF8  6FC4               	movwf	canReceiveMessage@m& (0+255),b
  9932   003AFA  0E02               	movlw	high poll@m
  9933   003AFC  6FC5               	movwf	(canReceiveMessage@m+1)& (0+255),b
  9934   003AFE  0E02               	movlw	2
  9935   003B00  2562               	addwf	_transport& (0+255),w,b
  9936   003B02  0102               	movlb	2	; () banked
  9937   003B04  6FEA               	movwf	??_poll& (0+255),b
  9938   003B06  0E00               	movlw	0
  9939   003B08  0101               	movlb	1	; () banked
  9940   003B0A  2163               	addwfc	(_transport+1)& (0+255),w,b
  9941   003B0C  0102               	movlb	2	; () banked
  9942   003B0E  6FEB               	movwf	(??_poll+1)& (0+255),b
  9943   003B10  C2EA  FFF6         	movff	??_poll,tblptrl
  9944   003B14  C2EB  FFF7         	movff	??_poll+1,tblptrh
  9945   003B18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  9946   003B18  6AF8               	clrf	tblptru,c
  9947   003B1A                     	endif
  9948   003B1A                     	if	0	;tblptru may be non-zero
  9949   003B1A                     	endif
  9950   003B1A  0009               	tblrd		*+
  9951   003B1C  CFF5 F2EC          	movff	tablat,??_poll+2
  9952   003B20  0009               	tblrd		*+
  9953   003B22  CFF5 F2ED          	movff	tablat,??_poll+3
  9954   003B26  D801               	call	u26528
  9955   003B28  D009               	goto	u26529
  9956   003B2A                     u26528:
  9957   003B2A  0005               	push	
  9958   003B2C  6EFA               	movwf	pclath,c
  9959   003B2E  51EC               	movf	(??_poll+2)& (0+255),w,b
  9960   003B30  6EFD               	movwf	tosl,c
  9961   003B32  51ED               	movf	(??_poll+3)& (0+255),w,b
  9962   003B34  6EFE               	movwf	tosh,c
  9963   003B36  6AFF               	clrf	tosu,c
  9964   003B38  50FA               	movf	pclath,w,c
  9965   003B3A  0012               	return		;indir
  9966   003B3C                     u26529:
  9967   003B3C  0900               	iorlw	0
  9968   003B3E  B4D8               	btfsc	status,2,c
  9969   003B40  D08F               	goto	l1987
  9970                           
  9971                           ;../../VLCBlib_PIC/vlcb.c: 1020:                 if (m.len > 0) {
  9972   003B42  0102               	movlb	2	; () banked
  9973   003B44  51F0               	movf	poll@m& (0+255),w,b
  9974   003B46  B4D8               	btfsc	status,2,c
  9975   003B48  D08B               	goto	l1987
  9976                           
  9977                           ; BSR set to: 2
  9978                           ;../../VLCBlib_PIC/vlcb.c: 1021:                     showStatus(STATUS_MESSAGE_RECEIVED)
      +                          ;
  9979   003B4A  0E07               	movlw	7
  9980   003B4C  EC81  F043         	call	_showStatus
  9981                           
  9982                           ;../../VLCBlib_PIC/vlcb.c: 1022:                     handled = APP_preProcessMessage(&m)
      +                          ;
  9983   003B50  0EF0               	movlw	low poll@m
  9984   003B52  0100               	movlb	0	; () banked
  9985   003B54  6F8D               	movwf	APP_preProcessMessage@m& (0+255),b
  9986   003B56  0E02               	movlw	high poll@m
  9987   003B58  6F8E               	movwf	(APP_preProcessMessage@m+1)& (0+255),b
  9988   003B5A  EC9A  F062         	call	_APP_preProcessMessage	;wreg free
  9989   003B5E  0102               	movlb	2	; () banked
  9990   003B60  6FEE               	movwf	poll@handled& (0+255),b
  9991                           
  9992                           ; BSR set to: 2
  9993                           ;../../VLCBlib_PIC/vlcb.c: 1023:                     if (handled == NOT_PROCESSED) {
  9994   003B62  51EE               	movf	poll@handled& (0+255),w,b
  9995   003B64  A4D8               	btfss	status,2,c
  9996   003B66  D07C               	goto	l1987
  9997                           
  9998                           ; BSR set to: 2
  9999                           ;../../VLCBlib_PIC/vlcb.c: 1024:                         for (i=0; i<9; i++) {
 10000   003B68  0E00               	movlw	0
 10001   003B6A  6FEF               	movwf	poll@i& (0+255),b
 10002   003B6C                     l24744:
 10003                           
 10004                           ; BSR set to: 2
 10005                           ;../../VLCBlib_PIC/vlcb.c: 1025:                             if ((services[i] != ((void*
      +                          )0)) && (services[i]->processMessage != ((void*)0))) {
 10006   003B6C  51EF               	movf	poll@i& (0+255),w,b
 10007   003B6E  0D02               	mullw	2
 10008   003B70  0E75               	movlw	low _services
 10009   003B72  24F3               	addwf	243,w,c
 10010   003B74  6EF6               	movwf	tblptrl,c
 10011   003B76  0EEE               	movlw	high _services
 10012   003B78  20F4               	addwfc	244,w,c
 10013   003B7A  6EF7               	movwf	tblptrh,c
 10014   003B7C                     	if	1	;There are 3 active tblptr bytes
 10015   003B7C  6AF8               	clrf	tblptru,c
 10016   003B7E  0E00               	movlw	low (__mediumconst shr (0+16))
 10017   003B80  22F8               	addwfc	tblptru,f,c
 10018   003B82                     	endif
 10019   003B82  0009               	tblrd		*+
 10020   003B84  50F5               	movf	tablat,w,c
 10021   003B86  0009               	tblrd		*+
 10022   003B88  10F5               	iorwf	tablat,w,c
 10023   003B8A  B4D8               	btfsc	status,2,c
 10024   003B8C  D058               	goto	l24752
 10025                           
 10026                           ; BSR set to: 2
 10027   003B8E  51EF               	movf	poll@i& (0+255),w,b
 10028   003B90  0D02               	mullw	2
 10029   003B92  0E75               	movlw	low _services
 10030   003B94  24F3               	addwf	243,w,c
 10031   003B96  6EF6               	movwf	tblptrl,c
 10032   003B98  0EEE               	movlw	high _services
 10033   003B9A  20F4               	addwfc	244,w,c
 10034   003B9C  6EF7               	movwf	tblptrh,c
 10035   003B9E                     	if	1	;There are 3 active tblptr bytes
 10036   003B9E  6AF8               	clrf	tblptru,c
 10037   003BA0  0E00               	movlw	low (__mediumconst shr (0+16))
 10038   003BA2  22F8               	addwfc	tblptru,f,c
 10039   003BA4                     	endif
 10040   003BA4  0009               	tblrd		*+
 10041   003BA6  CFF5 F2EA          	movff	tablat,??_poll
 10042   003BAA  0009               	tblrd		*+
 10043   003BAC  CFF5 F2EB          	movff	tablat,??_poll+1
 10044   003BB0  0E06               	movlw	6
 10045   003BB2  27EA               	addwf	??_poll& (0+255),f,b
 10046   003BB4  0E00               	movlw	0
 10047   003BB6  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10048   003BB8  C2EA  FFF6         	movff	??_poll,tblptrl
 10049   003BBC  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10050   003BC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10051   003BC0  6AF8               	clrf	tblptru,c
 10052   003BC2                     	endif
 10053   003BC2                     	if	0	;tblptru may be non-zero
 10054   003BC2                     	endif
 10055   003BC2  0009               	tblrd		*+
 10056   003BC4  50F5               	movf	tablat,w,c
 10057   003BC6  0009               	tblrd		*+
 10058   003BC8  10F5               	iorwf	tablat,w,c
 10059   003BCA  B4D8               	btfsc	status,2,c
 10060   003BCC  D038               	goto	l24752
 10061                           
 10062                           ; BSR set to: 2
 10063                           ;../../VLCBlib_PIC/vlcb.c: 1026:                                 if (services[i]->proces
      +                          sMessage(&m) == PROCESSED) {
 10064   003BCE  0EF0               	movlw	low poll@m
 10065   003BD0  0101               	movlb	1	; () banked
 10066   003BD2  6FF9               	movwf	producerProcessMessage@m& (0+255),b
 10067   003BD4  0E02               	movlw	high poll@m
 10068   003BD6  6FFA               	movwf	(producerProcessMessage@m+1)& (0+255),b
 10069   003BD8  0102               	movlb	2	; () banked
 10070   003BDA  51EF               	movf	poll@i& (0+255),w,b
 10071   003BDC  0D02               	mullw	2
 10072   003BDE  0E75               	movlw	low _services
 10073   003BE0  24F3               	addwf	243,w,c
 10074   003BE2  6EF6               	movwf	tblptrl,c
 10075   003BE4  0EEE               	movlw	high _services
 10076   003BE6  20F4               	addwfc	244,w,c
 10077   003BE8  6EF7               	movwf	tblptrh,c
 10078   003BEA                     	if	1	;There are 3 active tblptr bytes
 10079   003BEA  6AF8               	clrf	tblptru,c
 10080   003BEC  0E00               	movlw	low (__mediumconst shr (0+16))
 10081   003BEE  22F8               	addwfc	tblptru,f,c
 10082   003BF0                     	endif
 10083   003BF0  0009               	tblrd		*+
 10084   003BF2  CFF5 F2EA          	movff	tablat,??_poll
 10085   003BF6  0009               	tblrd		*+
 10086   003BF8  CFF5 F2EB          	movff	tablat,??_poll+1
 10087   003BFC  0E06               	movlw	6
 10088   003BFE  27EA               	addwf	??_poll& (0+255),f,b
 10089   003C00  0E00               	movlw	0
 10090   003C02  23EB               	addwfc	(??_poll+1)& (0+255),f,b
 10091   003C04  C2EA  FFF6         	movff	??_poll,tblptrl
 10092   003C08  C2EB  FFF7         	movff	??_poll+1,tblptrh
 10093   003C0C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 10094   003C0C  6AF8               	clrf	tblptru,c
 10095   003C0E                     	endif
 10096   003C0E                     	if	0	;tblptru may be non-zero
 10097   003C0E                     	endif
 10098   003C0E  0009               	tblrd		*+
 10099   003C10  CFF5 F2EC          	movff	tablat,??_poll+2
 10100   003C14  0009               	tblrd		*+
 10101   003C16  CFF5 F2ED          	movff	tablat,??_poll+3
 10102   003C1A  D801               	call	u26588
 10103   003C1C  D009               	goto	u26589
 10104   003C1E                     u26588:
 10105   003C1E  0005               	push	
 10106   003C20  6EFA               	movwf	pclath,c
 10107   003C22  51EC               	movf	(??_poll+2)& (0+255),w,b
 10108   003C24  6EFD               	movwf	tosl,c
 10109   003C26  51ED               	movf	(??_poll+3)& (0+255),w,b
 10110   003C28  6EFE               	movwf	tosh,c
 10111   003C2A  6AFF               	clrf	tosu,c
 10112   003C2C  50FA               	movf	pclath,w,c
 10113   003C2E  0012               	return		;indir
 10114   003C30                     u26589:
 10115   003C30  06E8               	decf	wreg,f,c
 10116   003C32  A4D8               	btfss	status,2,c
 10117   003C34  D004               	goto	l24752
 10118                           
 10119                           ;../../VLCBlib_PIC/vlcb.c: 1027:                                     handled = PROCESSED
      +                          ;
 10120   003C36  0E01               	movlw	1
 10121   003C38  0102               	movlb	2	; () banked
 10122   003C3A  6FEE               	movwf	poll@handled& (0+255),b
 10123                           
 10124                           ;../../VLCBlib_PIC/vlcb.c: 1028:                                     break;
 10125   003C3C  D005               	goto	u26600
 10126   003C3E                     l24752:
 10127                           
 10128                           ;../../VLCBlib_PIC/vlcb.c: 1031:                         }
 10129   003C3E  0102               	movlb	2	; () banked
 10130   003C40  2BEF               	incf	poll@i& (0+255),f,b
 10131                           
 10132                           ; BSR set to: 2
 10133   003C42  0E08               	movlw	8
 10134   003C44  65EF               	cpfsgt	poll@i& (0+255),b
 10135   003C46  D792               	goto	l24744
 10136   003C48                     u26600:
 10137                           
 10138                           ; BSR set to: 2
 10139                           ;../../VLCBlib_PIC/vlcb.c: 1032:                         if (handled == NOT_PROCESSED) {
 10140   003C48  51EE               	movf	poll@handled& (0+255),w,b
 10141   003C4A  A4D8               	btfss	status,2,c
 10142   003C4C  D009               	goto	l1987
 10143                           
 10144                           ; BSR set to: 2
 10145                           ;../../VLCBlib_PIC/vlcb.c: 1033:                             handled = APP_postProcessMe
      +                          ssage(&m);
 10146   003C4E  0EF0               	movlw	low poll@m
 10147   003C50  0100               	movlb	0	; () banked
 10148   003C52  6F8D               	movwf	APP_postProcessMessage@m& (0+255),b
 10149   003C54  0E02               	movlw	high poll@m
 10150   003C56  6F8E               	movwf	(APP_postProcessMessage@m+1)& (0+255),b
 10151   003C58  EC9C  F062         	call	_APP_postProcessMessage	;wreg free
 10152   003C5C  0102               	movlb	2	; () banked
 10153   003C5E  6FEE               	movwf	poll@handled& (0+255),b
 10154   003C60                     l1987:
 10155                           
 10156                           ;../../VLCBlib_PIC/vlcb.c: 1040:     if (handled) {
 10157                           
 10158                           ; BSR set to: 2
 10159   003C60  0102               	movlb	2	; () banked
 10160   003C62  51EE               	movf	poll@handled& (0+255),w,b
 10161   003C64  B4D8               	btfsc	status,2,c
 10162   003C66  0012               	return	
 10163                           
 10164                           ; BSR set to: 2
 10165                           ;../../VLCBlib_PIC/vlcb.c: 1041:         mnsDiagnostics[0x06].asUint++;
 10166   003C68  0101               	movlb	1	; () banked
 10167   003C6A  4B99               	infsnz	(_mnsDiagnostics+12)& (0+255),f,b
 10168   003C6C  2B9A               	incf	(_mnsDiagnostics+13)& (0+255),f,b
 10169                           
 10170                           ; BSR set to: 1
 10171                           ;../../VLCBlib_PIC/vlcb.c: 1042:         showStatus(STATUS_MESSAGE_ACTED);
 10172   003C6E  0E08               	movlw	8
 10173   003C70  EC81  F043         	call	_showStatus
 10174   003C74  0012               	return		;funcret
 10175   003C76                     __end_of_poll:
 10176                           	callstack 0
 10177                           
 10178 ;; *************** function _producerProcessMessage *****************
 10179 ;; Defined at:
 10180 ;;		line 124 in file "../../VLCBlib_PIC/event_producer_happening.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;  m               2   63[BANK1 ] PTR struct Message
 10183 ;;		 -> poll@m(9), 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  ev              2   65[BANK1 ] short 
 10186 ;;  index           1   68[BANK1 ] unsigned char 
 10187 ;;  h               1   67[BANK1 ] unsigned char 
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  1    wreg      enum E12743
 10190 ;; Registers used:
 10191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10197 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10198 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10199 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10200 ;;      Totals:         0       0       6       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10201 ;;Total ram usage:       12 bytes
 10202 ;; Hardware stack levels used: 1
 10203 ;; Hardware stack levels required when called: 17
 10204 ;; This function calls:
 10205 ;;		_APP_GetEventState
 10206 ;;		_findEvent
 10207 ;;		_getEv
 10208 ;;		_sendMessage3
 10209 ;;		_sendMessage4
 10210 ;; This function is called by:
 10211 ;;		_poll
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           	psect	text19
 10216   005F3E                     __ptext19:
 10217                           	callstack 0
 10218   005F3E                     _producerProcessMessage:
 10219                           	callstack 12
 10220                           
 10221                           ;../../VLCBlib_PIC/event_producer_happening.c: 125:     uint8_t index;;../../VLCBlib_PIC
      +                          /event_producer_happening.c: 126:     Happening h;;../../VLCBlib_PIC/event_producer_happ
      +                          ening.c: 127:     int16_t ev;;../../VLCBlib_PIC/event_producer_happening.c: 129:     swi
      +                          tch (m->opc) {
 10222                           
 10223                           ;incstack = 0
 10224   005F3E  D11B               	goto	l24554
 10225   005F40                     l24506:
 10226                           
 10227                           ; BSR set to: 2
 10228                           ;../../VLCBlib_PIC/event_producer_happening.c: 132:             if (m->len < 5) {
 10229   005F40  C1F9  FFD9         	movff	producerProcessMessage@m,fsr2l
 10230   005F44  C1FA  FFDA         	movff	producerProcessMessage@m+1,fsr2h
 10231   005F48  0E05               	movlw	5
 10232   005F4A  60DF               	cpfslt	indf2,c
 10233   005F4C  D00C               	goto	l24514
 10234                           
 10235                           ; BSR set to: 2
 10236                           ;../../VLCBlib_PIC/event_producer_happening.c: 133:                 sendMessage3(OPC_CMD
      +                          ERR, nn.bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 10237   005F4E  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 10238   005F52  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 10239   005F56  0E01               	movlw	1
 10240   005F58  0100               	movlb	0	; () banked
 10241   005F5A  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10242   005F5C  0E6F               	movlw	111
 10243   005F5E  ECC6  F05F         	call	_sendMessage3
 10244   005F62                     l24510:
 10245                           
 10246                           ;../../VLCBlib_PIC/event_producer_happening.c: 134:                 return PROCESSED;
 10247   005F62  0E01               	movlw	1
 10248   005F64  0012               	return	
 10249   005F66                     l24514:
 10250                           
 10251                           ; BSR set to: 2
 10252                           ;../../VLCBlib_PIC/event_producer_happening.c: 136:             if (m->opc == OPC_AREQ) 
      +                          {
 10253   005F66  0101               	movlb	1	; () banked
 10254   005F68  EE20 F001          	lfsr	2,1
 10255   005F6C  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10256   005F6E  26D9               	addwf	fsr2l,f,c
 10257   005F70  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10258   005F72  22DA               	addwfc	fsr2h,f,c
 10259   005F74  0E92               	movlw	146
 10260   005F76  18DE               	xorwf	postinc2,w,c
 10261   005F78  A4D8               	btfss	status,2,c
 10262   005F7A  D033               	goto	l24518
 10263                           
 10264                           ; BSR set to: 1
 10265                           ;../../VLCBlib_PIC/event_producer_happening.c: 137:                 index = findEvent((u
      +                          int16_t)((m->bytes[0]<<8)|(m->bytes[1])), (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10266   005F7C  EE20 F003          	lfsr	2,3
 10267   005F80  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10268   005F82  26D9               	addwf	fsr2l,f,c
 10269   005F84  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10270   005F86  22DA               	addwfc	fsr2h,f,c
 10271   005F88  50DF               	movf	indf2,w,c
 10272   005F8A  0102               	movlb	2	; () banked
 10273   005F8C  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10274   005F8E  0101               	movlb	1	; () banked
 10275   005F90  EE20 F002          	lfsr	2,2
 10276   005F94  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10277   005F96  26D9               	addwf	fsr2l,f,c
 10278   005F98  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10279   005F9A  22DA               	addwfc	fsr2h,f,c
 10280   005F9C  50DF               	movf	indf2,w,c
 10281   005F9E  0102               	movlb	2	; () banked
 10282   005FA0  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10283   005FA2  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10284   005FA4  0101               	movlb	1	; () banked
 10285   005FA6  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 10286   005FA8  C2CD  F1BB         	movff	??_producerProcessMessage+1,findEvent@nodeNumber+1
 10287   005FAC  EE20 F005          	lfsr	2,5
 10288   005FB0  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10289   005FB2  26D9               	addwf	fsr2l,f,c
 10290   005FB4  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10291   005FB6  22DA               	addwfc	fsr2h,f,c
 10292   005FB8  50DF               	movf	indf2,w,c
 10293   005FBA  0102               	movlb	2	; () banked
 10294   005FBC  6FCF               	movwf	(??_producerProcessMessage+3)& (0+255),b
 10295   005FBE  0101               	movlb	1	; () banked
 10296   005FC0  EE20 F004          	lfsr	2,4
 10297   005FC4  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10298   005FC6  26D9               	addwf	fsr2l,f,c
 10299   005FC8  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10300   005FCA  22DA               	addwfc	fsr2h,f,c
 10301   005FCC  50DF               	movf	indf2,w,c
 10302   005FCE  0102               	movlb	2	; () banked
 10303   005FD0  6FD0               	movwf	(??_producerProcessMessage+4)& (0+255),b
 10304   005FD2  51CF               	movf	(??_producerProcessMessage+3)& (0+255),w,b
 10305   005FD4  0101               	movlb	1	; () banked
 10306   005FD6  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 10307   005FD8  C2D0  F1BD         	movff	??_producerProcessMessage+4,findEvent@eventNumber+1
 10308   005FDC  EC42  F051         	call	_findEvent	;wreg free
 10309   005FE0  D01E               	goto	L1
 10310   005FE2                     l24518:
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;../../VLCBlib_PIC/event_producer_happening.c: 139:                 index = findEvent(0,
      +                           (uint16_t)((m->bytes[2]<<8)|(m->bytes[3])));
 10314   005FE2  0E00               	movlw	0
 10315   005FE4  6FBB               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 10316   005FE6  0E00               	movlw	0
 10317   005FE8  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 10318   005FEA  EE20 F005          	lfsr	2,5
 10319   005FEE  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10320   005FF0  26D9               	addwf	fsr2l,f,c
 10321   005FF2  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10322   005FF4  22DA               	addwfc	fsr2h,f,c
 10323   005FF6  50DF               	movf	indf2,w,c
 10324   005FF8  0102               	movlb	2	; () banked
 10325   005FFA  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10326   005FFC  0101               	movlb	1	; () banked
 10327   005FFE  EE20 F004          	lfsr	2,4
 10328   006002  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10329   006004  26D9               	addwf	fsr2l,f,c
 10330   006006  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10331   006008  22DA               	addwfc	fsr2h,f,c
 10332   00600A  50DF               	movf	indf2,w,c
 10333   00600C  0102               	movlb	2	; () banked
 10334   00600E  6FCD               	movwf	(??_producerProcessMessage+1)& (0+255),b
 10335   006010  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10336   006012  0101               	movlb	1	; () banked
 10337   006014  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 10338   006016  C2CD  F1BD         	movff	??_producerProcessMessage+1,findEvent@eventNumber+1
 10339   00601A  EC42  F051         	call	_findEvent	;wreg free
 10340   00601E                     L1:
 10341   00601E  0101               	movlb	1	; () banked
 10342   006020  6FFE               	movwf	producerProcessMessage@index& (0+255),b
 10343                           
 10344                           ; BSR set to: 1
 10345                           ;../../VLCBlib_PIC/event_producer_happening.c: 141:             if (index == 0xff) retur
      +                          n PROCESSED;
 10346   006022  29FE               	incf	producerProcessMessage@index& (0+255),w,b
 10347   006024  B4D8               	btfsc	status,2,c
 10348   006026  D79D               	goto	l24510
 10349                           
 10350                           ; BSR set to: 1
 10351                           ;../../VLCBlib_PIC/event_producer_happening.c: 143:             ev = getEv(index, 0);
 10352   006028  0E00               	movlw	0
 10353   00602A  0100               	movlb	0	; () banked
 10354   00602C  6F9D               	movwf	getEv@evNum& (0+255),b
 10355   00602E  0101               	movlb	1	; () banked
 10356   006030  51FE               	movf	producerProcessMessage@index& (0+255),w,b
 10357   006032  EC04  F03C         	call	_getEv
 10358   006036  C09D  F1FB         	movff	?_getEv,producerProcessMessage@ev
 10359   00603A  C09E  F1FC         	movff	?_getEv+1,producerProcessMessage@ev+1
 10360                           
 10361                           ;../../VLCBlib_PIC/event_producer_happening.c: 144:             if (ev <= 0) return PROC
      +                          ESSED;
 10362   00603E  0101               	movlb	1	; () banked
 10363   006040  BFFC               	btfsc	(producerProcessMessage@ev+1)& (0+255),7,b
 10364   006042  D78F               	goto	l24510
 10365   006044  51FC               	movf	(producerProcessMessage@ev+1)& (0+255),w,b
 10366   006046  E103               	bnz	l3026
 10367   006048  05FB               	decf	producerProcessMessage@ev& (0+255),w,b
 10368   00604A  A0D8               	btfss	status,0,c
 10369   00604C  D78A               	goto	l24510
 10370   00604E                     l3026:
 10371                           
 10372                           ; BSR set to: 1
 10373                           ;../../VLCBlib_PIC/event_producer_happening.c: 146:             h = (uint8_t)ev;
 10374   00604E  C1FB  F1FD         	movff	producerProcessMessage@ev,producerProcessMessage@h
 10375                           
 10376                           ; BSR set to: 1
 10377                           ;../../VLCBlib_PIC/event_producer_happening.c: 154:             if (m->opc == OPC_AREQ) 
      +                          {
 10378   006052  EE20 F001          	lfsr	2,1
 10379   006056  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10380   006058  26D9               	addwf	fsr2l,f,c
 10381   00605A  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10382   00605C  22DA               	addwfc	fsr2h,f,c
 10383   00605E  0E92               	movlw	146
 10384   006060  18DE               	xorwf	postinc2,w,c
 10385   006062  A4D8               	btfss	status,2,c
 10386   006064  D050               	goto	l24542
 10387                           
 10388                           ; BSR set to: 1
 10389                           ;../../VLCBlib_PIC/event_producer_happening.c: 155:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10390   006066  51FD               	movf	producerProcessMessage@h& (0+255),w,b
 10391   006068  EC3B  F01E         	call	_APP_GetEventState
 10392   00606C  06E8               	decf	wreg,f,c
 10393   00606E  A4D8               	btfss	status,2,c
 10394   006070  D025               	goto	l24540
 10395                           
 10396                           ;../../VLCBlib_PIC/event_producer_happening.c: 156:                     sendMessage4(OPC
      +                          _ARON, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10397   006072  0101               	movlb	1	; () banked
 10398   006074  EE20 F002          	lfsr	2,2
 10399   006078  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10400   00607A  26D9               	addwf	fsr2l,f,c
 10401   00607C  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10402   00607E  22DA               	addwfc	fsr2h,f,c
 10403   006080  50DF               	movf	indf2,w,c
 10404   006082  6FC2               	movwf	sendMessage4@data1& (0+255),b
 10405   006084  EE20 F003          	lfsr	2,3
 10406   006088  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10407   00608A  26D9               	addwf	fsr2l,f,c
 10408   00608C  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10409   00608E  22DA               	addwfc	fsr2h,f,c
 10410   006090  50DF               	movf	indf2,w,c
 10411   006092  6FC3               	movwf	sendMessage4@data2& (0+255),b
 10412   006094  EE20 F004          	lfsr	2,4
 10413   006098  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10414   00609A  26D9               	addwf	fsr2l,f,c
 10415   00609C  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10416   00609E  22DA               	addwfc	fsr2h,f,c
 10417   0060A0  50DF               	movf	indf2,w,c
 10418   0060A2  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10419   0060A4  EE20 F005          	lfsr	2,5
 10420   0060A8  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10421   0060AA  26D9               	addwf	fsr2l,f,c
 10422   0060AC  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10423   0060AE  22DA               	addwfc	fsr2h,f,c
 10424   0060B0  50DF               	movf	indf2,w,c
 10425   0060B2  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10426   0060B4  0E93               	movlw	147
 10427   0060B6  EC80  F05F         	call	_sendMessage4
 10428                           
 10429                           ;../../VLCBlib_PIC/event_producer_happening.c: 157:                 } else {
 10430   0060BA  D753               	goto	l24510
 10431   0060BC                     l24540:
 10432                           
 10433                           ;../../VLCBlib_PIC/event_producer_happening.c: 158:                     sendMessage4(OPC
      +                          _AROF, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 10434   0060BC  0101               	movlb	1	; () banked
 10435   0060BE  EE20 F002          	lfsr	2,2
 10436   0060C2  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10437   0060C4  26D9               	addwf	fsr2l,f,c
 10438   0060C6  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10439   0060C8  22DA               	addwfc	fsr2h,f,c
 10440   0060CA  50DF               	movf	indf2,w,c
 10441   0060CC  6FC2               	movwf	sendMessage4@data1& (0+255),b
 10442   0060CE  EE20 F003          	lfsr	2,3
 10443   0060D2  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10444   0060D4  26D9               	addwf	fsr2l,f,c
 10445   0060D6  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10446   0060D8  22DA               	addwfc	fsr2h,f,c
 10447   0060DA  50DF               	movf	indf2,w,c
 10448   0060DC  6FC3               	movwf	sendMessage4@data2& (0+255),b
 10449   0060DE  EE20 F004          	lfsr	2,4
 10450   0060E2  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10451   0060E4  26D9               	addwf	fsr2l,f,c
 10452   0060E6  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10453   0060E8  22DA               	addwfc	fsr2h,f,c
 10454   0060EA  50DF               	movf	indf2,w,c
 10455   0060EC  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10456   0060EE  EE20 F005          	lfsr	2,5
 10457   0060F2  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10458   0060F4  26D9               	addwf	fsr2l,f,c
 10459   0060F6  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10460   0060F8  22DA               	addwfc	fsr2h,f,c
 10461   0060FA  50DF               	movf	indf2,w,c
 10462   0060FC  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10463   0060FE  0E94               	movlw	148
 10464   006100  EC80  F05F         	call	_sendMessage4
 10465   006104  D72E               	goto	l24510
 10466   006106                     l24542:
 10467                           
 10468                           ; BSR set to: 1
 10469                           ;../../VLCBlib_PIC/event_producer_happening.c: 161:                 if (APP_GetEventStat
      +                          e(h) == EVENT_ON) {
 10470   006106  51FD               	movf	producerProcessMessage@h& (0+255),w,b
 10471   006108  EC3B  F01E         	call	_APP_GetEventState
 10472   00610C  06E8               	decf	wreg,f,c
 10473   00610E  A4D8               	btfss	status,2,c
 10474   006110  D019               	goto	l24546
 10475                           
 10476                           ;../../VLCBlib_PIC/event_producer_happening.c: 162:                     sendMessage4(OPC
      +                          _ARSON, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10477   006112  C0C0  F1C2         	movff	_nn+1,sendMessage4@data1
 10478   006116  C0BF  F1C3         	movff	_nn,sendMessage4@data2
 10479   00611A  0101               	movlb	1	; () banked
 10480   00611C  EE20 F004          	lfsr	2,4
 10481   006120  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10482   006122  26D9               	addwf	fsr2l,f,c
 10483   006124  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10484   006126  22DA               	addwfc	fsr2h,f,c
 10485   006128  50DF               	movf	indf2,w,c
 10486   00612A  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10487   00612C  EE20 F005          	lfsr	2,5
 10488   006130  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10489   006132  26D9               	addwf	fsr2l,f,c
 10490   006134  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10491   006136  22DA               	addwfc	fsr2h,f,c
 10492   006138  50DF               	movf	indf2,w,c
 10493   00613A  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10494   00613C  0E9D               	movlw	157
 10495   00613E  EC80  F05F         	call	_sendMessage4
 10496                           
 10497                           ;../../VLCBlib_PIC/event_producer_happening.c: 163:                 } else {
 10498   006142  D70F               	goto	l24510
 10499   006144                     l24546:
 10500                           
 10501                           ;../../VLCBlib_PIC/event_producer_happening.c: 164:                     sendMessage4(OPC
      +                          _ARSOF, nn.bytes.hi, nn.bytes.lo, m->bytes[2], m->bytes[3]);
 10502   006144  C0C0  F1C2         	movff	_nn+1,sendMessage4@data1
 10503   006148  C0BF  F1C3         	movff	_nn,sendMessage4@data2
 10504   00614C  0101               	movlb	1	; () banked
 10505   00614E  EE20 F004          	lfsr	2,4
 10506   006152  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10507   006154  26D9               	addwf	fsr2l,f,c
 10508   006156  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10509   006158  22DA               	addwfc	fsr2h,f,c
 10510   00615A  50DF               	movf	indf2,w,c
 10511   00615C  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10512   00615E  EE20 F005          	lfsr	2,5
 10513   006162  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10514   006164  26D9               	addwf	fsr2l,f,c
 10515   006166  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10516   006168  22DA               	addwfc	fsr2h,f,c
 10517   00616A  50DF               	movf	indf2,w,c
 10518   00616C  6FC5               	movwf	sendMessage4@data4& (0+255),b
 10519   00616E  0E9E               	movlw	158
 10520   006170  EC80  F05F         	call	_sendMessage4
 10521   006174  D6F6               	goto	l24510
 10522   006176                     l24554:
 10523   006176  0101               	movlb	1	; () banked
 10524   006178  EE20 F001          	lfsr	2,1
 10525   00617C  51F9               	movf	producerProcessMessage@m& (0+255),w,b
 10526   00617E  26D9               	addwf	fsr2l,f,c
 10527   006180  51FA               	movf	(producerProcessMessage@m+1)& (0+255),w,b
 10528   006182  22DA               	addwfc	fsr2h,f,c
 10529   006184  50DF               	movf	indf2,w,c
 10530   006186  0102               	movlb	2	; () banked
 10531   006188  6FCC               	movwf	??_producerProcessMessage& (0+255),b
 10532   00618A  6BCD               	clrf	(??_producerProcessMessage+1)& (0+255),b
 10533                           
 10534                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10535                           ; Switch size 1, requested type "simple"
 10536                           ; Number of cases is 1, Range of values is 0 to 0
 10537                           ; switch strategies available:
 10538                           ; Name         Instructions Cycles
 10539                           ; simple_byte            4     3 (average)
 10540                           ;	Chosen strategy is simple_byte
 10541   00618C  51CD               	movf	(??_producerProcessMessage+1)& (0+255),w,b
 10542   00618E  0A00               	xorlw	0	; case 0
 10543   006190  A4D8               	btfss	status,2,c
 10544   006192  D007               	goto	l24556
 10545                           
 10546                           ; BSR set to: 2
 10547                           ; Switch size 1, requested type "simple"
 10548                           ; Number of cases is 2, Range of values is 146 to 154
 10549                           ; switch strategies available:
 10550                           ; Name         Instructions Cycles
 10551                           ; simple_byte            7     4 (average)
 10552                           ;	Chosen strategy is simple_byte
 10553   006194  51CC               	movf	??_producerProcessMessage& (0+255),w,b
 10554   006196  0A92               	xorlw	146	; case 146
 10555   006198  B4D8               	btfsc	status,2,c
 10556   00619A  D6D2               	goto	l24506
 10557   00619C  0A08               	xorlw	8	; case 154
 10558   00619E  B4D8               	btfsc	status,2,c
 10559   0061A0  D6CF               	goto	l24506
 10560   0061A2                     l24556:
 10561                           
 10562                           ; BSR set to: 2
 10563                           ;../../VLCBlib_PIC/event_producer_happening.c: 171:     return NOT_PROCESSED;
 10564   0061A2  0E00               	movlw	0
 10565   0061A4  0012               	return		;funcret
 10566   0061A6                     __end_of_producerProcessMessage:
 10567                           	callstack 0
 10568                           
 10569 ;; *************** function _canProcessMessage *****************
 10570 ;; Defined at:
 10571 ;;		line 373 in file "../../VLCBlib_PIC/can18_ecan.c"
 10572 ;; Parameters:    Size  Location     Type
 10573 ;;  m               2   63[BANK1 ] PTR struct Message
 10574 ;;		 -> poll@m(9), 
 10575 ;; Auto vars:     Size  Location     Type
 10576 ;;		None
 10577 ;; Return value:  Size  Location     Type
 10578 ;;                  1    wreg      enum E12960
 10579 ;; Registers used:
 10580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10581 ;; Tracked objects:
 10582 ;;		On entry : 0/0
 10583 ;;		On exit  : 0/0
 10584 ;;		Unchanged: 0/0
 10585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10586 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10588 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10589 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10590 ;;Total ram usage:        4 bytes
 10591 ;; Hardware stack levels used: 1
 10592 ;; Hardware stack levels required when called: 17
 10593 ;; This function calls:
 10594 ;;		_sendMessage5
 10595 ;; This function is called by:
 10596 ;;		_poll
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           	psect	text20
 10601   009A46                     __ptext20:
 10602                           	callstack 0
 10603   009A46                     _canProcessMessage:
 10604                           	callstack 12
 10605                           
 10606                           ;../../VLCBlib_PIC/can18_ecan.c: 375:     if (m->len < 3) return NOT_PROCESSED;
 10607                           
 10608                           ;incstack = 0
 10609   009A46  C1F9  FFD9         	movff	canProcessMessage@m,fsr2l
 10610   009A4A  C1FA  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10611   009A4E  0E03               	movlw	3
 10612   009A50  60DF               	cpfslt	indf2,c
 10613   009A52  D002               	goto	l24048
 10614   009A54                     u25620:
 10615   009A54  0E00               	movlw	0
 10616   009A56  0012               	return	
 10617   009A58                     l24048:
 10618                           
 10619                           ;../../VLCBlib_PIC/can18_ecan.c: 376:     if (m->bytes[0] != nn.bytes.hi) return NOT_PRO
      +                          CESSED;
 10620   009A58  0101               	movlb	1	; () banked
 10621   009A5A  EE20 F002          	lfsr	2,2
 10622   009A5E  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10623   009A60  26D9               	addwf	fsr2l,f,c
 10624   009A62  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10625   009A64  22DA               	addwfc	fsr2h,f,c
 10626   009A66  50DE               	movf	postinc2,w,c
 10627   009A68  0100               	movlb	0	; () banked
 10628   009A6A  19C0               	xorwf	(_nn+1)& (0+255),w,b
 10629   009A6C  A4D8               	btfss	status,2,c
 10630   009A6E  D7F2               	goto	u25620
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;../../VLCBlib_PIC/can18_ecan.c: 377:     if (m->bytes[1] != nn.bytes.lo) return NOT_PRO
      +                          CESSED;
 10634   009A70  0101               	movlb	1	; () banked
 10635   009A72  EE20 F003          	lfsr	2,3
 10636   009A76  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10637   009A78  26D9               	addwf	fsr2l,f,c
 10638   009A7A  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10639   009A7C  22DA               	addwfc	fsr2h,f,c
 10640   009A7E  0100               	movlb	0	; () banked
 10641   009A80  51BF               	movf	_nn& (0+255),w,b
 10642   009A82  18DE               	xorwf	postinc2,w,c
 10643   009A84  A4D8               	btfss	status,2,c
 10644   009A86  D7E6               	goto	u25620
 10645   009A88  D017               	goto	l24078
 10646   009A8A                     l24060:
 10647                           
 10648                           ;../../VLCBlib_PIC/can18_ecan.c: 383:             return PROCESSED;
 10649   009A8A  0E01               	movlw	1
 10650   009A8C  0012               	return	
 10651   009A8E                     l24064:
 10652                           
 10653                           ; BSR set to: 1
 10654                           ;../../VLCBlib_PIC/can18_ecan.c: 385:             if (m->len < 4) {
 10655   009A8E  C1F9  FFD9         	movff	canProcessMessage@m,fsr2l
 10656   009A92  C1FA  FFDA         	movff	canProcessMessage@m+1,fsr2h
 10657   009A96  0E04               	movlw	4
 10658   009A98  60DF               	cpfslt	indf2,c
 10659   009A9A  D7F7               	goto	l24060
 10660                           
 10661                           ; BSR set to: 1
 10662                           ;../../VLCBlib_PIC/can18_ecan.c: 387:                 sendMessage5(OPC_GRSP, nn.bytes.hi
      +                          , nn.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10663   009A9C  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 10664   009AA0  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 10665   009AA4  0E71               	movlw	113
 10666   009AA6  6FC4               	movwf	sendMessage5@data3& (0+255),b
 10667   009AA8  0E01               	movlw	1
 10668   009AAA  6FC5               	movwf	sendMessage5@data4& (0+255),b
 10669   009AAC  0E01               	movlw	1
 10670   009AAE  6FC6               	movwf	sendMessage5@data5& (0+255),b
 10671   009AB0  0EAF               	movlw	175
 10672   009AB2  EC68  F05F         	call	_sendMessage5
 10673   009AB6  D7E9               	goto	l24060
 10674   009AB8                     l24078:
 10675                           
 10676                           ; BSR set to: 0
 10677   009AB8  0101               	movlb	1	; () banked
 10678   009ABA  EE20 F001          	lfsr	2,1
 10679   009ABE  51F9               	movf	canProcessMessage@m& (0+255),w,b
 10680   009AC0  26D9               	addwf	fsr2l,f,c
 10681   009AC2  51FA               	movf	(canProcessMessage@m+1)& (0+255),w,b
 10682   009AC4  22DA               	addwfc	fsr2h,f,c
 10683   009AC6  50DF               	movf	indf2,w,c
 10684   009AC8  6FFB               	movwf	??_canProcessMessage& (0+255),b
 10685   009ACA  6BFC               	clrf	(??_canProcessMessage+1)& (0+255),b
 10686                           
 10687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10688                           ; Switch size 1, requested type "simple"
 10689                           ; Number of cases is 1, Range of values is 0 to 0
 10690                           ; switch strategies available:
 10691                           ; Name         Instructions Cycles
 10692                           ; simple_byte            4     3 (average)
 10693                           ;	Chosen strategy is simple_byte
 10694   009ACC  51FC               	movf	(??_canProcessMessage+1)& (0+255),w,b
 10695   009ACE  0A00               	xorlw	0	; case 0
 10696   009AD0  A4D8               	btfss	status,2,c
 10697   009AD2  D7C0               	goto	u25620
 10698                           
 10699                           ; BSR set to: 1
 10700                           ; Switch size 1, requested type "simple"
 10701                           ; Number of cases is 2, Range of values is 93 to 117
 10702                           ; switch strategies available:
 10703                           ; Name         Instructions Cycles
 10704                           ; simple_byte            7     4 (average)
 10705                           ;	Chosen strategy is simple_byte
 10706   009AD4  51FB               	movf	??_canProcessMessage& (0+255),w,b
 10707   009AD6  0A5D               	xorlw	93	; case 93
 10708   009AD8  B4D8               	btfsc	status,2,c
 10709   009ADA  D7D7               	goto	l24060
 10710   009ADC  0A28               	xorlw	40	; case 117
 10711   009ADE  B4D8               	btfsc	status,2,c
 10712   009AE0  D7D6               	goto	l24064
 10713   009AE2  D7B8               	goto	u25620
 10714   009AE4                     __end_of_canProcessMessage:
 10715                           	callstack 0
 10716                           
 10717 ;; *************** function _nvProcessMessage *****************
 10718 ;; Defined at:
 10719 ;;		line 240 in file "../../VLCBlib_PIC/nv.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  m               2   63[BANK1 ] PTR struct Message
 10722 ;;		 -> poll@m(9), 
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;  valueOrError    2   67[BANK1 ] short 
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  1    wreg      enum E12793
 10727 ;; Registers used:
 10728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10734 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10735 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10736 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10737 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10738 ;;Total ram usage:        6 bytes
 10739 ;; Hardware stack levels used: 1
 10740 ;; Hardware stack levels required when called: 27
 10741 ;; This function calls:
 10742 ;;		_findServiceIndex
 10743 ;;		_getNV
 10744 ;;		_sendMessage2
 10745 ;;		_sendMessage3
 10746 ;;		_sendMessage4
 10747 ;;		_sendMessage5
 10748 ;;		_setNV
 10749 ;;		_startTimedResponse
 10750 ;; This function is called by:
 10751 ;;		_poll
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text21
 10756   004680                     __ptext21:
 10757                           	callstack 0
 10758   004680                     _nvProcessMessage:
 10759                           	callstack 2
 10760                           
 10761                           ;../../VLCBlib_PIC/nv.c: 241:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 243:    
      +                           if (m->len < 3) {
 10762                           
 10763                           ;incstack = 0
 10764   004680  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 10765   004684  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10766   004688  0E03               	movlw	3
 10767   00468A  60DF               	cpfslt	indf2,c
 10768   00468C  D002               	goto	l23748
 10769   00468E                     u25360:
 10770                           
 10771                           ;../../VLCBlib_PIC/nv.c: 244:         return NOT_PROCESSED;
 10772   00468E  0E00               	movlw	0
 10773   004690  0012               	return	
 10774   004692                     l23748:
 10775                           
 10776                           ;../../VLCBlib_PIC/nv.c: 247:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 10777   004692  0101               	movlb	1	; () banked
 10778   004694  EE20 F002          	lfsr	2,2
 10779   004698  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 10780   00469A  26D9               	addwf	fsr2l,f,c
 10781   00469C  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10782   00469E  22DA               	addwfc	fsr2h,f,c
 10783   0046A0  50DE               	movf	postinc2,w,c
 10784   0046A2  0100               	movlb	0	; () banked
 10785   0046A4  19C0               	xorwf	(_nn+1)& (0+255),w,b
 10786   0046A6  A4D8               	btfss	status,2,c
 10787   0046A8  D7F2               	goto	u25360
 10788                           
 10789                           ; BSR set to: 0
 10790                           ;../../VLCBlib_PIC/nv.c: 248:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 10791   0046AA  0101               	movlb	1	; () banked
 10792   0046AC  EE20 F003          	lfsr	2,3
 10793   0046B0  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 10794   0046B2  26D9               	addwf	fsr2l,f,c
 10795   0046B4  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10796   0046B6  22DA               	addwfc	fsr2h,f,c
 10797   0046B8  0100               	movlb	0	; () banked
 10798   0046BA  51BF               	movf	_nn& (0+255),w,b
 10799   0046BC  18DE               	xorwf	postinc2,w,c
 10800   0046BE  A4D8               	btfss	status,2,c
 10801   0046C0  D7E6               	goto	u25360
 10802   0046C2  D155               	goto	l23870
 10803   0046C4                     l23760:
 10804                           
 10805                           ; BSR set to: 1
 10806                           ;../../VLCBlib_PIC/nv.c: 252:             if (m->len < 4) {
 10807   0046C4  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 10808   0046C8  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10809   0046CC  0E04               	movlw	4
 10810   0046CE  60DF               	cpfslt	indf2,c
 10811   0046D0  D01D               	goto	l23770
 10812                           
 10813                           ; BSR set to: 1
 10814                           ;../../VLCBlib_PIC/nv.c: 253:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, CMDERR_INV_CMD);
 10815   0046D2  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 10816   0046D6  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 10817   0046DA  0E01               	movlw	1
 10818   0046DC  0100               	movlb	0	; () banked
 10819   0046DE  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10820   0046E0  0E6F               	movlw	111
 10821   0046E2  ECC6  F05F         	call	_sendMessage3
 10822                           
 10823                           ;../../VLCBlib_PIC/nv.c: 255:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10824   0046E6  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 10825   0046EA  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 10826   0046EE  0E71               	movlw	113
 10827   0046F0  0101               	movlb	1	; () banked
 10828   0046F2  6FC4               	movwf	sendMessage5@data3& (0+255),b
 10829   0046F4  0E01               	movlw	1
 10830   0046F6  6FC5               	movwf	sendMessage5@data4& (0+255),b
 10831   0046F8  0E01               	movlw	1
 10832   0046FA  6FC6               	movwf	sendMessage5@data5& (0+255),b
 10833   0046FC  0EAF               	movlw	175
 10834   0046FE  EC68  F05F         	call	_sendMessage5
 10835   004702                     l23764:
 10836                           
 10837                           ;../../VLCBlib_PIC/nv.c: 258:                 nvDiagnostics[0x02].asUint++;
 10838   004702  0101               	movlb	1	; () banked
 10839   004704  4BA8               	infsnz	(_nvDiagnostics+4)& (0+255),f,b
 10840   004706  2BA9               	incf	(_nvDiagnostics+5)& (0+255),f,b
 10841   004708                     l23766:
 10842                           
 10843                           ;../../VLCBlib_PIC/nv.c: 260:                 return PROCESSED;
 10844   004708  0E01               	movlw	1
 10845   00470A  0012               	return	
 10846   00470C                     l23770:
 10847                           
 10848                           ; BSR set to: 1
 10849                           ;../../VLCBlib_PIC/nv.c: 262:             valueOrError = getNV(m->bytes[2]);
 10850   00470C  EE20 F004          	lfsr	2,4
 10851   004710  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 10852   004712  26D9               	addwf	fsr2l,f,c
 10853   004714  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10854   004716  22DA               	addwfc	fsr2h,f,c
 10855   004718  50DF               	movf	indf2,w,c
 10856   00471A  ECD9  F05D         	call	_getNV
 10857   00471E  C08D  F1FD         	movff	?_getNV,nvProcessMessage@valueOrError
 10858   004722  C08E  F1FE         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 10859                           
 10860                           ;../../VLCBlib_PIC/nv.c: 263:             if (valueOrError < 0) {
 10861   004726  0101               	movlb	1	; () banked
 10862   004728  AFFE               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10863   00472A  D01B               	goto	l23782
 10864                           
 10865                           ; BSR set to: 1
 10866                           ;../../VLCBlib_PIC/nv.c: 264:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 10867   00472C  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 10868   004730  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 10869   004734  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10870   004736  0800               	sublw	0
 10871   004738  0100               	movlb	0	; () banked
 10872   00473A  6FA8               	movwf	sendMessage3@data3& (0+255),b
 10873   00473C  0E6F               	movlw	111
 10874   00473E  ECC6  F05F         	call	_sendMessage3
 10875                           
 10876                           ;../../VLCBlib_PIC/nv.c: 266:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 10877   004742  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 10878   004746  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 10879   00474A  0E71               	movlw	113
 10880   00474C  0101               	movlb	1	; () banked
 10881   00474E  6FC4               	movwf	sendMessage5@data3& (0+255),b
 10882   004750  0E01               	movlw	1
 10883   004752  6FC5               	movwf	sendMessage5@data4& (0+255),b
 10884   004754  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 10885   004756  0800               	sublw	0
 10886   004758  6FC6               	movwf	sendMessage5@data5& (0+255),b
 10887   00475A  0EAF               	movlw	175
 10888   00475C  EC68  F05F         	call	_sendMessage5
 10889   004760  D7D0               	goto	l23764
 10890   004762                     l23782:
 10891                           
 10892                           ; BSR set to: 1
 10893                           ;../../VLCBlib_PIC/nv.c: 274:             nvDiagnostics[0x01].asUint++;
 10894   004762  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 10895   004764  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 10896                           
 10897                           ; BSR set to: 1
 10898                           ;../../VLCBlib_PIC/nv.c: 276:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 10899   004766  C0C0  F1C2         	movff	_nn+1,sendMessage4@data1
 10900   00476A  C0BF  F1C3         	movff	_nn,sendMessage4@data2
 10901   00476E  EE20 F004          	lfsr	2,4
 10902   004772  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 10903   004774  26D9               	addwf	fsr2l,f,c
 10904   004776  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10905   004778  22DA               	addwfc	fsr2h,f,c
 10906   00477A  50DF               	movf	indf2,w,c
 10907   00477C  6FC4               	movwf	sendMessage4@data3& (0+255),b
 10908   00477E  C1FD  F1C5         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 10909   004782  0E97               	movlw	151
 10910   004784  EC80  F05F         	call	_sendMessage4
 10911                           
 10912                           ;../../VLCBlib_PIC/nv.c: 278:             if (m->bytes[2] == 0) {
 10913   004788  0101               	movlb	1	; () banked
 10914   00478A  EE20 F004          	lfsr	2,4
 10915   00478E  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 10916   004790  26D9               	addwf	fsr2l,f,c
 10917   004792  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10918   004794  22DA               	addwfc	fsr2h,f,c
 10919   004796  50DF               	movf	indf2,w,c
 10920   004798  A4D8               	btfss	status,2,c
 10921   00479A  D7B6               	goto	l23766
 10922                           
 10923                           ; BSR set to: 1
 10924                           ;../../VLCBlib_PIC/nv.c: 280:                 startTimedResponse(6, findServiceIndex(SER
      +                          VICE_ID_NV), nvTRnvrdCallback);
 10925   00479C  0E02               	movlw	2
 10926   00479E  EC46  F056         	call	_findServiceIndex
 10927   0047A2  0100               	movlb	0	; () banked
 10928   0047A4  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 10929   0047A6  0EF6               	movlw	low _nvTRnvrdCallback
 10930   0047A8  6F92               	movwf	startTimedResponse@callback& (0+255),b
 10931   0047AA  0EBA               	movlw	high _nvTRnvrdCallback
 10932   0047AC  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 10933   0047AE  0E06               	movlw	6
 10934   0047B0  EC9B  F05D         	call	_startTimedResponse
 10935   0047B4  D7A9               	goto	l23766
 10936   0047B6                     l23794:
 10937                           
 10938                           ; BSR set to: 1
 10939                           ;../../VLCBlib_PIC/nv.c: 285:             if (m->len < 5) {
 10940   0047B6  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 10941   0047BA  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 10942   0047BE  0E05               	movlw	5
 10943   0047C0  60DF               	cpfslt	indf2,c
 10944   0047C2  D00E               	goto	l23804
 10945                           
 10946                           ; BSR set to: 1
 10947                           ;../../VLCBlib_PIC/nv.c: 288:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSET, SERVICE_ID_MNS, CMDERR_INV_CMD);
 10948   0047C4  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 10949   0047C8  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 10950   0047CC  0E96               	movlw	150
 10951   0047CE  6FC4               	movwf	sendMessage5@data3& (0+255),b
 10952   0047D0  0E01               	movlw	1
 10953   0047D2  6FC5               	movwf	sendMessage5@data4& (0+255),b
 10954   0047D4  0E01               	movlw	1
 10955   0047D6  6FC6               	movwf	sendMessage5@data5& (0+255),b
 10956   0047D8  0EAF               	movlw	175
 10957   0047DA  EC68  F05F         	call	_sendMessage5
 10958   0047DE  D791               	goto	l23764
 10959   0047E0                     l23804:
 10960                           
 10961                           ; BSR set to: 1
 10962                           ;../../VLCBlib_PIC/nv.c: 295:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 10963   0047E0  EE20 F005          	lfsr	2,5
 10964   0047E4  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 10965   0047E6  26D9               	addwf	fsr2l,f,c
 10966   0047E8  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10967   0047EA  22DA               	addwfc	fsr2h,f,c
 10968   0047EC  50DF               	movf	indf2,w,c
 10969   0047EE  6FF4               	movwf	setNV@value& (0+255),b
 10970   0047F0  EE20 F004          	lfsr	2,4
 10971   0047F4  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 10972   0047F6  26D9               	addwf	fsr2l,f,c
 10973   0047F8  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 10974   0047FA  22DA               	addwfc	fsr2h,f,c
 10975   0047FC  50DF               	movf	indf2,w,c
 10976   0047FE  ECA7  F054         	call	_setNV
 10977   004802  0101               	movlb	1	; () banked
 10978   004804  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 10979   004806  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 10980   004808  6FFD               	movwf	nvProcessMessage@valueOrError& (0+255),b
 10981   00480A  6BFE               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 10982                           
 10983                           ; BSR set to: 1
 10984                           ;../../VLCBlib_PIC/nv.c: 296:             if (valueOrError >0) {
 10985   00480C  BFFE               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 10986   00480E  D00F               	goto	l23816
 10987   004810  51FE               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 10988   004812  E103               	bnz	u25430
 10989   004814  05FD               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 10990   004816  A0D8               	btfss	status,0,c
 10991   004818  D00A               	goto	l23816
 10992   00481A                     u25430:
 10993                           
 10994                           ; BSR set to: 1
 10995                           ;../../VLCBlib_PIC/nv.c: 297:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 10996   00481A  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 10997   00481E  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 10998   004822  C1FD  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 10999   004826  0E6F               	movlw	111
 11000   004828  ECC6  F05F         	call	_sendMessage3
 11001   00482C  D76A               	goto	l23764
 11002   00482E                     l23816:
 11003                           
 11004                           ; BSR set to: 1
 11005                           ;../../VLCBlib_PIC/nv.c: 304:             sendMessage2(OPC_WRACK, nn.bytes.hi, nn.bytes.
      +                          lo);
 11006   00482E  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 11007   004832  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 11008   004836  0E59               	movlw	89
 11009   004838  EC38  F05F         	call	_sendMessage2
 11010                           
 11011                           ;../../VLCBlib_PIC/nv.c: 306:             sendMessage5(OPC_GRSP, nn.bytes.hi, nn.bytes.l
      +                          o, OPC_NVSET, SERVICE_ID_MNS, GRSP_OK);
 11012   00483C  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11013   004840  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11014   004844  0E96               	movlw	150
 11015   004846  0101               	movlb	1	; () banked
 11016   004848  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11017   00484A  0E01               	movlw	1
 11018   00484C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11019   00484E  0E00               	movlw	0
 11020   004850  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11021   004852  0EAF               	movlw	175
 11022   004854  EC68  F05F         	call	_sendMessage5
 11023   004858  D757               	goto	l23766
 11024   00485A                     l23822:
 11025                           
 11026                           ; BSR set to: 1
 11027                           ;../../VLCBlib_PIC/nv.c: 311:             if (m->len < 5) {
 11028   00485A  C1F9  FFD9         	movff	nvProcessMessage@m,fsr2l
 11029   00485E  C1FA  FFDA         	movff	nvProcessMessage@m+1,fsr2h
 11030   004862  0E05               	movlw	5
 11031   004864  60DF               	cpfslt	indf2,c
 11032   004866  D00E               	goto	l23832
 11033                           
 11034                           ; BSR set to: 1
 11035                           ;../../VLCBlib_PIC/nv.c: 313:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11036   004868  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11037   00486C  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11038   004870  0E8E               	movlw	142
 11039   004872  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11040   004874  0E01               	movlw	1
 11041   004876  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11042   004878  0E01               	movlw	1
 11043   00487A  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11044   00487C  0EAF               	movlw	175
 11045   00487E  EC68  F05F         	call	_sendMessage5
 11046   004882  D73F               	goto	l23764
 11047   004884                     l23832:
 11048                           
 11049                           ; BSR set to: 1
 11050                           ;../../VLCBlib_PIC/nv.c: 319:             valueOrError = setNV(m->bytes[2], m->bytes[3])
      +                          ;
 11051   004884  EE20 F005          	lfsr	2,5
 11052   004888  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11053   00488A  26D9               	addwf	fsr2l,f,c
 11054   00488C  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11055   00488E  22DA               	addwfc	fsr2h,f,c
 11056   004890  50DF               	movf	indf2,w,c
 11057   004892  6FF4               	movwf	setNV@value& (0+255),b
 11058   004894  EE20 F004          	lfsr	2,4
 11059   004898  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11060   00489A  26D9               	addwf	fsr2l,f,c
 11061   00489C  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11062   00489E  22DA               	addwfc	fsr2h,f,c
 11063   0048A0  50DF               	movf	indf2,w,c
 11064   0048A2  ECA7  F054         	call	_setNV
 11065   0048A6  0101               	movlb	1	; () banked
 11066   0048A8  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 11067   0048AA  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 11068   0048AC  6FFD               	movwf	nvProcessMessage@valueOrError& (0+255),b
 11069   0048AE  6BFE               	clrf	(nvProcessMessage@valueOrError+1)& (0+255),b
 11070                           
 11071                           ; BSR set to: 1
 11072                           ;../../VLCBlib_PIC/nv.c: 320:             if (valueOrError >0) {
 11073   0048B0  BFFE               	btfsc	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11074   0048B2  D01D               	goto	l23844
 11075   0048B4  51FE               	movf	(nvProcessMessage@valueOrError+1)& (0+255),w,b
 11076   0048B6  E103               	bnz	u25450
 11077   0048B8  05FD               	decf	nvProcessMessage@valueOrError& (0+255),w,b
 11078   0048BA  A0D8               	btfss	status,0,c
 11079   0048BC  D018               	goto	l23844
 11080   0048BE                     u25450:
 11081                           
 11082                           ; BSR set to: 1
 11083                           ;../../VLCBlib_PIC/nv.c: 321:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(valueOrError));
 11084   0048BE  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 11085   0048C2  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 11086   0048C6  C1FD  F0A8         	movff	nvProcessMessage@valueOrError,sendMessage3@data3
 11087   0048CA  0E6F               	movlw	111
 11088   0048CC  ECC6  F05F         	call	_sendMessage3
 11089                           
 11090                           ;../../VLCBlib_PIC/nv.c: 322:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(valueOrError));
 11091   0048D0  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11092   0048D4  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11093   0048D8  0E8E               	movlw	142
 11094   0048DA  0101               	movlb	1	; () banked
 11095   0048DC  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11096   0048DE  0E01               	movlw	1
 11097   0048E0  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11098   0048E2  C1FD  F1C6         	movff	nvProcessMessage@valueOrError,sendMessage5@data5
 11099   0048E6  0EAF               	movlw	175
 11100   0048E8  EC68  F05F         	call	_sendMessage5
 11101   0048EC  D70A               	goto	l23764
 11102   0048EE                     l23844:
 11103                           
 11104                           ; BSR set to: 1
 11105                           ;../../VLCBlib_PIC/nv.c: 328:             valueOrError = getNV(m->bytes[2]);
 11106   0048EE  EE20 F004          	lfsr	2,4
 11107   0048F2  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11108   0048F4  26D9               	addwf	fsr2l,f,c
 11109   0048F6  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11110   0048F8  22DA               	addwfc	fsr2h,f,c
 11111   0048FA  50DF               	movf	indf2,w,c
 11112   0048FC  ECD9  F05D         	call	_getNV
 11113   004900  C08D  F1FD         	movff	?_getNV,nvProcessMessage@valueOrError
 11114   004904  C08E  F1FE         	movff	?_getNV+1,nvProcessMessage@valueOrError+1
 11115                           
 11116                           ;../../VLCBlib_PIC/nv.c: 329:             if (valueOrError < 0) {
 11117   004908  0101               	movlb	1	; () banked
 11118   00490A  AFFE               	btfss	(nvProcessMessage@valueOrError+1)& (0+255),7,b
 11119   00490C  D01B               	goto	l23856
 11120                           
 11121                           ; BSR set to: 1
 11122                           ;../../VLCBlib_PIC/nv.c: 330:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.b
      +                          ytes.lo, (uint8_t)(-valueOrError));
 11123   00490E  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 11124   004912  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 11125   004916  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11126   004918  0800               	sublw	0
 11127   00491A  0100               	movlb	0	; () banked
 11128   00491C  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11129   00491E  0E6F               	movlw	111
 11130   004920  ECC6  F05F         	call	_sendMessage3
 11131                           
 11132                           ;../../VLCBlib_PIC/nv.c: 331:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.byt
      +                          es.lo, OPC_NVSETRD, SERVICE_ID_MNS, (uint8_t)(-valueOrError));
 11133   004924  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11134   004928  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11135   00492C  0E8E               	movlw	142
 11136   00492E  0101               	movlb	1	; () banked
 11137   004930  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11138   004932  0E01               	movlw	1
 11139   004934  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11140   004936  51FD               	movf	nvProcessMessage@valueOrError& (0+255),w,b
 11141   004938  0800               	sublw	0
 11142   00493A  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11143   00493C  0EAF               	movlw	175
 11144   00493E  EC68  F05F         	call	_sendMessage5
 11145   004942  D6DF               	goto	l23764
 11146   004944                     l23856:
 11147                           
 11148                           ; BSR set to: 1
 11149                           ;../../VLCBlib_PIC/nv.c: 337:             sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.
      +                          lo, m->bytes[2], (uint8_t)(valueOrError));
 11150   004944  C0C0  F1C2         	movff	_nn+1,sendMessage4@data1
 11151   004948  C0BF  F1C3         	movff	_nn,sendMessage4@data2
 11152   00494C  EE20 F004          	lfsr	2,4
 11153   004950  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11154   004952  26D9               	addwf	fsr2l,f,c
 11155   004954  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11156   004956  22DA               	addwfc	fsr2h,f,c
 11157   004958  50DF               	movf	indf2,w,c
 11158   00495A  6FC4               	movwf	sendMessage4@data3& (0+255),b
 11159   00495C  C1FD  F1C5         	movff	nvProcessMessage@valueOrError,sendMessage4@data4
 11160   004960  0E97               	movlw	151
 11161   004962  EC80  F05F         	call	_sendMessage4
 11162                           
 11163                           ;../../VLCBlib_PIC/nv.c: 339:             nvDiagnostics[0x01].asUint++;
 11164   004966  0101               	movlb	1	; () banked
 11165   004968  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 11166   00496A  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 11167   00496C  D6CD               	goto	l23766
 11168   00496E                     l23870:
 11169                           
 11170                           ; BSR set to: 0
 11171   00496E  0101               	movlb	1	; () banked
 11172   004970  EE20 F001          	lfsr	2,1
 11173   004974  51F9               	movf	nvProcessMessage@m& (0+255),w,b
 11174   004976  26D9               	addwf	fsr2l,f,c
 11175   004978  51FA               	movf	(nvProcessMessage@m+1)& (0+255),w,b
 11176   00497A  22DA               	addwfc	fsr2h,f,c
 11177   00497C  50DF               	movf	indf2,w,c
 11178   00497E  6FFB               	movwf	??_nvProcessMessage& (0+255),b
 11179   004980  6BFC               	clrf	(??_nvProcessMessage+1)& (0+255),b
 11180                           
 11181                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11182                           ; Switch size 1, requested type "simple"
 11183                           ; Number of cases is 1, Range of values is 0 to 0
 11184                           ; switch strategies available:
 11185                           ; Name         Instructions Cycles
 11186                           ; simple_byte            4     3 (average)
 11187                           ;	Chosen strategy is simple_byte
 11188   004982  51FC               	movf	(??_nvProcessMessage+1)& (0+255),w,b
 11189   004984  0A00               	xorlw	0	; case 0
 11190   004986  A4D8               	btfss	status,2,c
 11191   004988  D682               	goto	u25360
 11192                           
 11193                           ; BSR set to: 1
 11194                           ; Switch size 1, requested type "simple"
 11195                           ; Number of cases is 3, Range of values is 113 to 150
 11196                           ; switch strategies available:
 11197                           ; Name         Instructions Cycles
 11198                           ; simple_byte           10     6 (average)
 11199                           ;	Chosen strategy is simple_byte
 11200   00498A  51FB               	movf	??_nvProcessMessage& (0+255),w,b
 11201   00498C  0A71               	xorlw	113	; case 113
 11202   00498E  B4D8               	btfsc	status,2,c
 11203   004990  D699               	goto	l23760
 11204   004992  0AFF               	xorlw	255	; case 142
 11205   004994  B4D8               	btfsc	status,2,c
 11206   004996  D761               	goto	l23822
 11207   004998  0A18               	xorlw	24	; case 150
 11208   00499A  B4D8               	btfsc	status,2,c
 11209   00499C  D70C               	goto	l23794
 11210   00499E  D677               	goto	u25360
 11211   0049A0                     __end_of_nvProcessMessage:
 11212                           	callstack 0
 11213                           
 11214 ;; *************** function _mnsProcessMessage *****************
 11215 ;; Defined at:
 11216 ;;		line 351 in file "../../VLCBlib_PIC/mns.c"
 11217 ;; Parameters:    Size  Location     Type
 11218 ;;  m               2   63[BANK1 ] PTR struct Message
 11219 ;;		 -> poll@m(9), 
 11220 ;; Auto vars:     Size  Location     Type
 11221 ;;  d               2   66[BANK1 ] PTR struct DiagnosticVal
 11222 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 11223 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 11224 ;;  newMode         1   68[BANK1 ] unsigned char 
 11225 ;;  i               1   65[BANK1 ] unsigned char 
 11226 ;;  flags           1    0        unsigned char 
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  1    wreg      enum E12793
 11229 ;; Registers used:
 11230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11236 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11237 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11238 ;;      Temps:          0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11239 ;;      Totals:         0       0       6      30       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11240 ;;Total ram usage:       36 bytes
 11241 ;; Hardware stack levels used: 1
 11242 ;; Hardware stack levels required when called: 27
 11243 ;; This function calls:
 11244 ;;		NULL
 11245 ;;		_ackGetDiagnostic
 11246 ;;		_canEsdData
 11247 ;;		_canGetDiagnostic
 11248 ;;		_consumer2QEsdData
 11249 ;;		_consumer2QGetDiagnostic
 11250 ;;		_factoryReset
 11251 ;;		_findServiceIndex
 11252 ;;		_getParameter
 11253 ;;		_getParameterFlags
 11254 ;;		_mnsGetDiagnostic
 11255 ;;		_nvGetDiagnostic
 11256 ;;		_nvGetESDdata
 11257 ;;		_producerEsdData
 11258 ;;		_producerGetDiagnostic
 11259 ;;		_rebuildHashtable
 11260 ;;		_sendMessage2
 11261 ;;		_sendMessage3
 11262 ;;		_sendMessage4
 11263 ;;		_sendMessage5
 11264 ;;		_sendMessage6
 11265 ;;		_sendMessage7
 11266 ;;		_setLEDsByMode
 11267 ;;		_startTimedResponse
 11268 ;;		_teachGetDiagnostic
 11269 ;;		_teachGetESDdata
 11270 ;;		_writeNVM
 11271 ;; This function is called by:
 11272 ;;		_poll
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text22
 11277   0016CE                     __ptext22:
 11278                           	callstack 0
 11279   0016CE                     _mnsProcessMessage:
 11280                           	callstack 2
 11281                           
 11282                           ;../../VLCBlib_PIC/mns.c: 352:     uint8_t i;;../../VLCBlib_PIC/mns.c: 353:     uint8_t 
      +                          flags;;../../VLCBlib_PIC/mns.c: 355:     uint8_t newMode;;../../VLCBlib_PIC/mns.c: 360: 
      +                              if (mode_state == MODE_SETUP) {
 11283                           
 11284                           ;incstack = 0
 11285   0016CE  0100               	movlb	0	; () banked
 11286   0016D0  51C8               	movf	_mode_state& (0+255),w,b
 11287   0016D2  B4D8               	btfsc	status,2,c
 11288   0016D4  D0BC               	goto	l23318
 11289   0016D6  D127               	goto	l23364
 11290   0016D8                     l23274:
 11291                           
 11292                           ; BSR set to: 2
 11293                           ;../../VLCBlib_PIC/mns.c: 363:                 if (m->len < 3) {
 11294   0016D8  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11295   0016DC  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11296   0016E0  0E03               	movlw	3
 11297   0016E2  60DF               	cpfslt	indf2,c
 11298   0016E4  D00F               	goto	l23278
 11299                           
 11300                           ; BSR set to: 2
 11301                           ;../../VLCBlib_PIC/mns.c: 365:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_NVRD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11302   0016E6  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11303   0016EA  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11304   0016EE  0E71               	movlw	113
 11305   0016F0  0101               	movlb	1	; () banked
 11306   0016F2  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11307   0016F4  0E01               	movlw	1
 11308   0016F6  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11309   0016F8  0E01               	movlw	1
 11310   0016FA  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11311   0016FC  0EAF               	movlw	175
 11312   0016FE  EC68  F05F         	call	_sendMessage5
 11313                           
 11314                           ;../../VLCBlib_PIC/mns.c: 367:                 } else {
 11315   001702  D03C               	goto	l23294
 11316   001704                     l23278:
 11317                           
 11318                           ; BSR set to: 2
 11319                           ;../../VLCBlib_PIC/mns.c: 368:                     nn.bytes.hi = m->bytes[0];
 11320   001704  0101               	movlb	1	; () banked
 11321   001706  EE20 F002          	lfsr	2,2
 11322   00170A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11323   00170C  26D9               	addwf	fsr2l,f,c
 11324   00170E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11325   001710  22DA               	addwfc	fsr2h,f,c
 11326   001712  50DF               	movf	indf2,w,c
 11327   001714  0100               	movlb	0	; () banked
 11328   001716  6FC0               	movwf	(_nn+1)& (0+255),b
 11329                           
 11330                           ;../../VLCBlib_PIC/mns.c: 369:                     nn.bytes.lo = m->bytes[1];
 11331   001718  0101               	movlb	1	; () banked
 11332   00171A  EE20 F003          	lfsr	2,3
 11333   00171E  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11334   001720  26D9               	addwf	fsr2l,f,c
 11335   001722  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11336   001724  22DA               	addwfc	fsr2h,f,c
 11337   001726  50DF               	movf	indf2,w,c
 11338   001728  0100               	movlb	0	; () banked
 11339   00172A  6FBF               	movwf	_nn& (0+255),b
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;../../VLCBlib_PIC/mns.c: 370:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.b
      +                          ytes.hi);
 11343   00172C  0EFC               	movlw	252
 11344   00172E  6FA4               	movwf	writeNVM@index& (0+255),b
 11345   001730  0E03               	movlw	3
 11346   001732  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11347   001734  0E00               	movlw	0
 11348   001736  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11349   001738  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 11350   00173C  0E00               	movlw	0
 11351   00173E  ECE7  F05B         	call	_writeNVM
 11352                           
 11353                           ;../../VLCBlib_PIC/mns.c: 371:                     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, n
      +                          n.bytes.lo);
 11354   001742  0EFD               	movlw	253
 11355   001744  0100               	movlb	0	; () banked
 11356   001746  6FA4               	movwf	writeNVM@index& (0+255),b
 11357   001748  0E03               	movlw	3
 11358   00174A  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 11359   00174C  0E00               	movlw	0
 11360   00174E  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 11361   001750  C0BF  F0A7         	movff	_nn,writeNVM@value
 11362   001754  0E00               	movlw	0
 11363   001756  ECE7  F05B         	call	_writeNVM
 11364                           
 11365                           ;../../VLCBlib_PIC/mns.c: 373:                     mode_state = MODE_NORMAL;
 11366   00175A  0E01               	movlw	1
 11367   00175C  0100               	movlb	0	; () banked
 11368   00175E  6FC8               	movwf	_mode_state& (0+255),b
 11369                           
 11370                           ; BSR set to: 0
 11371                           ;../../VLCBlib_PIC/mns.c: 376:                     rebuildHashtable();
 11372   001760  EC8D  F03E         	call	_rebuildHashtable	;wreg free
 11373                           
 11374                           ;../../VLCBlib_PIC/mns.c: 379:                     sendMessage2(OPC_NNACK, nn.bytes.hi, 
      +                          nn.bytes.lo);
 11375   001764  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 11376   001768  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 11377   00176C  0E52               	movlw	82
 11378   00176E  EC38  F05F         	call	_sendMessage2
 11379                           
 11380                           ;../../VLCBlib_PIC/mns.c: 381:                     mnsDiagnostics[0x05].asUint++;
 11381   001772  0101               	movlb	1	; () banked
 11382   001774  4B97               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 11383   001776  2B98               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 11384   001778                     l23292:
 11385                           
 11386                           ;../../VLCBlib_PIC/mns.c: 384:                     setLEDsByMode();
 11387   001778  ECD7  F05E         	call	_setLEDsByMode	;wreg free
 11388   00177C                     l23294:
 11389                           
 11390                           ;../../VLCBlib_PIC/mns.c: 386:                 return PROCESSED;
 11391   00177C  0E01               	movlw	1
 11392   00177E  0012               	return	
 11393   001780                     l23298:
 11394                           
 11395                           ; BSR set to: 2
 11396                           ;../../VLCBlib_PIC/mns.c: 388:                 sendMessage7(OPC_PARAMS, MANU_MERG, 'a',
 11397   001780  0EA5               	movlw	165
 11398   001782  0101               	movlb	1	; () banked
 11399   001784  6FC2               	movwf	sendMessage7@data1& (0+255),b
 11400   001786  0E61               	movlw	97
 11401   001788  6FC3               	movwf	sendMessage7@data2& (0+255),b
 11402   00178A  0E20               	movlw	32
 11403   00178C  6FC4               	movwf	sendMessage7@data3& (0+255),b
 11404   00178E  0EFF               	movlw	255
 11405   001790  6FC5               	movwf	sendMessage7@data4& (0+255),b
 11406   001792  0E14               	movlw	20
 11407   001794  6FC6               	movwf	sendMessage7@data5& (0+255),b
 11408   001796  0E7F               	movlw	127
 11409   001798  6FC7               	movwf	sendMessage7@data6& (0+255),b
 11410   00179A  0E04               	movlw	4
 11411   00179C  6FC8               	movwf	sendMessage7@data7& (0+255),b
 11412   00179E  0EEF               	movlw	239
 11413   0017A0  EC50  F05F         	call	_sendMessage7
 11414   0017A4  D7EB               	goto	l23294
 11415   0017A6                     l23304:
 11416                           
 11417                           ; BSR set to: 2
 11418                           ;../../VLCBlib_PIC/mns.c: 393:                 sendMessage7(OPC_NAME, name[0], name[1], 
      +                          name[2], name[3],
 11419   0017A6  0E48               	movlw	72
 11420   0017A8  6EF6               	movwf	tblptrl,c
 11421   0017AA                     	if	1	;There is more than 1 active tblptr byte
 11422   0017AA  0E08               	movlw	8
 11423   0017AC  6EF7               	movwf	tblptrh,c
 11424   0017AE                     	endif
 11425   0017AE                     	if	1	;There are 3 active tblptr bytes
 11426   0017AE  0E00               	movlw	0
 11427   0017B0  6EF8               	movwf	tblptru,c
 11428   0017B2                     	endif
 11429   0017B2  0008               	tblrd		*
 11430   0017B4  CFF5 F1C2          	movff	tablat,sendMessage7@data1
 11431   0017B8  0E49               	movlw	73
 11432   0017BA  6EF6               	movwf	tblptrl,c
 11433   0017BC  0E08               	movlw	8
 11434   0017BE  6EF7               	movwf	tblptrh,c
 11435   0017C0  0E00               	movlw	0
 11436   0017C2  6EF8               	movwf	tblptru,c
 11437   0017C4  0008               	tblrd		*
 11438   0017C6  CFF5 F1C3          	movff	tablat,sendMessage7@data2
 11439   0017CA  0E4A               	movlw	74
 11440   0017CC  6EF6               	movwf	tblptrl,c
 11441   0017CE  0E08               	movlw	8
 11442   0017D0  6EF7               	movwf	tblptrh,c
 11443   0017D2  0E00               	movlw	0
 11444   0017D4  6EF8               	movwf	tblptru,c
 11445   0017D6  0008               	tblrd		*
 11446   0017D8  CFF5 F1C4          	movff	tablat,sendMessage7@data3
 11447   0017DC  0E4B               	movlw	75
 11448   0017DE  6EF6               	movwf	tblptrl,c
 11449   0017E0  0E08               	movlw	8
 11450   0017E2  6EF7               	movwf	tblptrh,c
 11451   0017E4  0E00               	movlw	0
 11452   0017E6  6EF8               	movwf	tblptru,c
 11453   0017E8  0008               	tblrd		*
 11454   0017EA  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 11455   0017EE  0E4C               	movlw	76
 11456   0017F0  6EF6               	movwf	tblptrl,c
 11457   0017F2  0E08               	movlw	8
 11458   0017F4  6EF7               	movwf	tblptrh,c
 11459   0017F6  0E00               	movlw	0
 11460   0017F8  6EF8               	movwf	tblptru,c
 11461   0017FA  0008               	tblrd		*
 11462   0017FC  CFF5 F1C6          	movff	tablat,sendMessage7@data5
 11463   001800  0E4D               	movlw	77
 11464   001802  6EF6               	movwf	tblptrl,c
 11465   001804  0E08               	movlw	8
 11466   001806  6EF7               	movwf	tblptrh,c
 11467   001808  0E00               	movlw	0
 11468   00180A  6EF8               	movwf	tblptru,c
 11469   00180C  0008               	tblrd		*
 11470   00180E  CFF5 F1C7          	movff	tablat,sendMessage7@data6
 11471   001812  0E4E               	movlw	78
 11472   001814  6EF6               	movwf	tblptrl,c
 11473   001816  0E08               	movlw	8
 11474   001818  6EF7               	movwf	tblptrh,c
 11475   00181A  0E00               	movlw	0
 11476   00181C  6EF8               	movwf	tblptru,c
 11477   00181E  0008               	tblrd		*
 11478   001820  CFF5 F1C8          	movff	tablat,sendMessage7@data7
 11479   001824  0EE2               	movlw	226
 11480   001826  EC50  F05F         	call	_sendMessage7
 11481   00182A  D7A8               	goto	l23294
 11482   00182C                     l23310:
 11483                           
 11484                           ; BSR set to: 2
 11485                           ;../../VLCBlib_PIC/mns.c: 397:                 sendMessage5(OPC_PNN, 0,0, MANU_MERG, MTY
      +                          P_CANMIO, getParameterFlags());
 11486   00182C  0E00               	movlw	0
 11487   00182E  0101               	movlb	1	; () banked
 11488   001830  6FC2               	movwf	sendMessage5@data1& (0+255),b
 11489   001832  0E00               	movlw	0
 11490   001834  6FC3               	movwf	sendMessage5@data2& (0+255),b
 11491   001836  0EA5               	movlw	165
 11492   001838  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11493   00183A  0E20               	movlw	32
 11494   00183C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11495   00183E  EC3F  F05A         	call	_getParameterFlags	;wreg free
 11496   001842  0101               	movlb	1	; () banked
 11497   001844  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11498   001846  0EB6               	movlw	182
 11499   001848  EC68  F05F         	call	_sendMessage5
 11500   00184C  D797               	goto	l23294
 11501   00184E                     l23318:
 11502                           
 11503                           ; BSR set to: 0
 11504   00184E  0101               	movlb	1	; () banked
 11505   001850  EE20 F001          	lfsr	2,1
 11506   001854  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11507   001856  26D9               	addwf	fsr2l,f,c
 11508   001858  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11509   00185A  22DA               	addwfc	fsr2h,f,c
 11510   00185C  50DF               	movf	indf2,w,c
 11511   00185E  0102               	movlb	2	; () banked
 11512   001860  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11513   001862  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11514                           
 11515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11516                           ; Switch size 1, requested type "simple"
 11517                           ; Number of cases is 1, Range of values is 0 to 0
 11518                           ; switch strategies available:
 11519                           ; Name         Instructions Cycles
 11520                           ; simple_byte            4     3 (average)
 11521                           ;	Chosen strategy is simple_byte
 11522   001864  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11523   001866  0A00               	xorlw	0	; case 0
 11524   001868  A4D8               	btfss	status,2,c
 11525   00186A  D00D               	goto	l23320
 11526                           
 11527                           ; BSR set to: 2
 11528                           ; Switch size 1, requested type "simple"
 11529                           ; Number of cases is 4, Range of values is 13 to 66
 11530                           ; switch strategies available:
 11531                           ; Name         Instructions Cycles
 11532                           ; simple_byte           13     7 (average)
 11533                           ;	Chosen strategy is simple_byte
 11534   00186C  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11535   00186E  0A0D               	xorlw	13	; case 13
 11536   001870  B4D8               	btfsc	status,2,c
 11537   001872  D7DC               	goto	l23310
 11538   001874  0A1D               	xorlw	29	; case 16
 11539   001876  B4D8               	btfsc	status,2,c
 11540   001878  D783               	goto	l23298
 11541   00187A  0A01               	xorlw	1	; case 17
 11542   00187C  B4D8               	btfsc	status,2,c
 11543   00187E  D793               	goto	l23304
 11544   001880  0A53               	xorlw	83	; case 66
 11545   001882  B4D8               	btfsc	status,2,c
 11546   001884  D729               	goto	l23274
 11547   001886                     l23320:
 11548                           
 11549                           ;../../VLCBlib_PIC/mns.c: 402:         return NOT_PROCESSED;
 11550   001886  0E00               	movlw	0
 11551   001888  0012               	return	
 11552   00188A                     l23324:
 11553                           
 11554                           ; BSR set to: 2
 11555                           ;../../VLCBlib_PIC/mns.c: 407:             sendMessage5(OPC_PNN, nn.bytes.hi,nn.bytes.lo
      +                          , MANU_MERG, MTYP_CANMIO, getParameterFlags());
 11556   00188A  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11557   00188E  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11558   001892  0EA5               	movlw	165
 11559   001894  0101               	movlb	1	; () banked
 11560   001896  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11561   001898  0E20               	movlw	32
 11562   00189A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11563   00189C  EC3F  F05A         	call	_getParameterFlags	;wreg free
 11564   0018A0  0101               	movlb	1	; () banked
 11565   0018A2  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11566   0018A4  0EB6               	movlw	182
 11567   0018A6  EC68  F05F         	call	_sendMessage5
 11568   0018AA  D768               	goto	l23294
 11569   0018AC                     l23330:
 11570                           
 11571                           ; BSR set to: 2
 11572                           ;../../VLCBlib_PIC/mns.c: 411:             if (m->len < 4) {
 11573   0018AC  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11574   0018B0  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11575   0018B4  0E04               	movlw	4
 11576   0018B6  60DF               	cpfslt	indf2,c
 11577   0018B8  D00F               	goto	l23338
 11578                           
 11579                           ; BSR set to: 2
 11580                           ;../../VLCBlib_PIC/mns.c: 412:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11581   0018BA  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11582   0018BE  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11583   0018C2  0E76               	movlw	118
 11584   0018C4  0101               	movlb	1	; () banked
 11585   0018C6  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11586   0018C8  0E01               	movlw	1
 11587   0018CA  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11588   0018CC  0E01               	movlw	1
 11589   0018CE  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11590   0018D0  0EAF               	movlw	175
 11591   0018D2  EC68  F05F         	call	_sendMessage5
 11592   0018D6  D752               	goto	l23294
 11593   0018D8                     l23338:
 11594                           
 11595                           ; BSR set to: 2
 11596                           ;../../VLCBlib_PIC/mns.c: 415:             if ((m->bytes[0] == 0) && (m->bytes[1] == 0))
      +                           {
 11597   0018D8  0101               	movlb	1	; () banked
 11598   0018DA  EE20 F002          	lfsr	2,2
 11599   0018DE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11600   0018E0  26D9               	addwf	fsr2l,f,c
 11601   0018E2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11602   0018E4  22DA               	addwfc	fsr2h,f,c
 11603   0018E6  50DF               	movf	indf2,w,c
 11604   0018E8  A4D8               	btfss	status,2,c
 11605   0018EA  D033               	goto	l23366
 11606                           
 11607                           ; BSR set to: 1
 11608   0018EC  EE20 F003          	lfsr	2,3
 11609   0018F0  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11610   0018F2  26D9               	addwf	fsr2l,f,c
 11611   0018F4  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11612   0018F6  22DA               	addwfc	fsr2h,f,c
 11613   0018F8  50DF               	movf	indf2,w,c
 11614   0018FA  A4D8               	btfss	status,2,c
 11615   0018FC  D02A               	goto	l23366
 11616                           
 11617                           ; BSR set to: 1
 11618                           ;../../VLCBlib_PIC/mns.c: 416:                 newMode = m->bytes[2];
 11619   0018FE  EE20 F004          	lfsr	2,4
 11620   001902  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11621   001904  26D9               	addwf	fsr2l,f,c
 11622   001906  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11623   001908  22DA               	addwfc	fsr2h,f,c
 11624   00190A  50DF               	movf	indf2,w,c
 11625   00190C  6FFE               	movwf	mnsProcessMessage@newMode& (0+255),b
 11626                           
 11627                           ; BSR set to: 1
 11628                           ;../../VLCBlib_PIC/mns.c: 418:                 if (newMode == MODE_HEARTBEAT_ON) {
 11629   00190E  0E0C               	movlw	12
 11630   001910  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11631   001912  A4D8               	btfss	status,2,c
 11632   001914  D002               	goto	l23354
 11633                           
 11634                           ; BSR set to: 1
 11635                           ;../../VLCBlib_PIC/mns.c: 419:                     mode_flags |= 4;
 11636   001916  8566               	bsf	_mode_flags& (0+255),2,b
 11637   001918  D731               	goto	l23294
 11638   00191A                     l23354:
 11639                           
 11640                           ; BSR set to: 1
 11641   00191A  0E0D               	movlw	13
 11642   00191C  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 11643   00191E  A4D8               	btfss	status,2,c
 11644   001920  D018               	goto	l23366
 11645                           
 11646                           ; BSR set to: 1
 11647                           ;../../VLCBlib_PIC/mns.c: 423:                     mode_flags &= ~4;
 11648   001922  9566               	bcf	_mode_flags& (0+255),2,b
 11649   001924  D72B               	goto	l23294
 11650   001926                     l23364:
 11651                           
 11652                           ; BSR set to: 0
 11653   001926  0101               	movlb	1	; () banked
 11654   001928  EE20 F001          	lfsr	2,1
 11655   00192C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11656   00192E  26D9               	addwf	fsr2l,f,c
 11657   001930  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11658   001932  22DA               	addwfc	fsr2h,f,c
 11659   001934  50DF               	movf	indf2,w,c
 11660   001936  0102               	movlb	2	; () banked
 11661   001938  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11662   00193A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11663                           
 11664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11665                           ; Switch size 1, requested type "simple"
 11666                           ; Number of cases is 1, Range of values is 0 to 0
 11667                           ; switch strategies available:
 11668                           ; Name         Instructions Cycles
 11669                           ; simple_byte            4     3 (average)
 11670                           ;	Chosen strategy is simple_byte
 11671   00193C  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 11672   00193E  0A00               	xorlw	0	; case 0
 11673   001940  A4D8               	btfss	status,2,c
 11674   001942  D007               	goto	l23366
 11675                           
 11676                           ; BSR set to: 2
 11677                           ; Switch size 1, requested type "simple"
 11678                           ; Number of cases is 2, Range of values is 13 to 118
 11679                           ; switch strategies available:
 11680                           ; Name         Instructions Cycles
 11681                           ; simple_byte            7     4 (average)
 11682                           ;	Chosen strategy is simple_byte
 11683   001944  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 11684   001946  0A0D               	xorlw	13	; case 13
 11685   001948  B4D8               	btfsc	status,2,c
 11686   00194A  D79F               	goto	l23324
 11687   00194C  0A7B               	xorlw	123	; case 118
 11688   00194E  B4D8               	btfsc	status,2,c
 11689   001950  D7AD               	goto	l23330
 11690   001952                     l23366:
 11691                           
 11692                           ;../../VLCBlib_PIC/mns.c: 433:     if (m->len < 3) {
 11693   001952  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11694   001956  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11695   00195A  0E03               	movlw	3
 11696   00195C  60DF               	cpfslt	indf2,c
 11697   00195E  D001               	goto	l23372
 11698   001960  D792               	goto	l23320
 11699   001962                     l23372:
 11700                           
 11701                           ;../../VLCBlib_PIC/mns.c: 437:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED;
 11702   001962  0101               	movlb	1	; () banked
 11703   001964  EE20 F002          	lfsr	2,2
 11704   001968  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11705   00196A  26D9               	addwf	fsr2l,f,c
 11706   00196C  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11707   00196E  22DA               	addwfc	fsr2h,f,c
 11708   001970  50DE               	movf	postinc2,w,c
 11709   001972  0100               	movlb	0	; () banked
 11710   001974  19C0               	xorwf	(_nn+1)& (0+255),w,b
 11711   001976  A4D8               	btfss	status,2,c
 11712   001978  D786               	goto	l23320
 11713                           
 11714                           ; BSR set to: 0
 11715                           ;../../VLCBlib_PIC/mns.c: 438:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED;
 11716   00197A  0101               	movlb	1	; () banked
 11717   00197C  EE20 F003          	lfsr	2,3
 11718   001980  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11719   001982  26D9               	addwf	fsr2l,f,c
 11720   001984  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11721   001986  22DA               	addwfc	fsr2h,f,c
 11722   001988  0100               	movlb	0	; () banked
 11723   00198A  51BF               	movf	_nn& (0+255),w,b
 11724   00198C  18DE               	xorwf	postinc2,w,c
 11725   00198E  A4D8               	btfss	status,2,c
 11726   001990  D77A               	goto	l23320
 11727   001992  EFD9  F010         	goto	l23582
 11728   001996                     l23384:
 11729                           
 11730                           ; BSR set to: 2
 11731                           ;../../VLCBlib_PIC/mns.c: 442:             if (m->len < 4) {
 11732   001996  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11733   00199A  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11734   00199E  0E04               	movlw	4
 11735   0019A0  60DF               	cpfslt	indf2,c
 11736   0019A2  D00F               	goto	l23392
 11737                           
 11738                           ; BSR set to: 2
 11739                           ;../../VLCBlib_PIC/mns.c: 444:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11740   0019A4  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11741   0019A8  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11742   0019AC  0E73               	movlw	115
 11743   0019AE  0101               	movlb	1	; () banked
 11744   0019B0  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11745   0019B2  0E01               	movlw	1
 11746   0019B4  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11747   0019B6  0E01               	movlw	1
 11748   0019B8  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11749   0019BA  0EAF               	movlw	175
 11750   0019BC  EC68  F05F         	call	_sendMessage5
 11751   0019C0  D6DD               	goto	l23294
 11752   0019C2                     l23392:
 11753                           
 11754                           ; BSR set to: 2
 11755                           ;../../VLCBlib_PIC/mns.c: 448:             if (m->bytes[2] > 20) {
 11756   0019C2  0101               	movlb	1	; () banked
 11757   0019C4  EE20 F004          	lfsr	2,4
 11758   0019C8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11759   0019CA  26D9               	addwf	fsr2l,f,c
 11760   0019CC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11761   0019CE  22DA               	addwfc	fsr2h,f,c
 11762   0019D0  0E14               	movlw	20
 11763   0019D2  64DF               	cpfsgt	indf2,c
 11764   0019D4  D019               	goto	l23400
 11765                           
 11766                           ; BSR set to: 1
 11767                           ;../../VLCBlib_PIC/mns.c: 449:                 sendMessage3(OPC_CMDERR, nn.bytes.hi, nn.
      +                          bytes.lo, CMDERR_INV_PARAM_IDX);
 11768   0019D6  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 11769   0019DA  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 11770   0019DE  0E09               	movlw	9
 11771   0019E0  0100               	movlb	0	; () banked
 11772   0019E2  6FA8               	movwf	sendMessage3@data3& (0+255),b
 11773   0019E4  0E6F               	movlw	111
 11774   0019E6  ECC6  F05F         	call	_sendMessage3
 11775                           
 11776                           ;../../VLCBlib_PIC/mns.c: 451:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQNPN, SERVICE_ID_MNS, CMDERR_INV_PARAM_IDX);
 11777   0019EA  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11778   0019EE  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11779   0019F2  0E73               	movlw	115
 11780   0019F4  0101               	movlb	1	; () banked
 11781   0019F6  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11782   0019F8  0E01               	movlw	1
 11783   0019FA  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11784   0019FC  0E09               	movlw	9
 11785   0019FE  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11786   001A00  0EAF               	movlw	175
 11787   001A02  EC68  F05F         	call	_sendMessage5
 11788   001A06  D6BA               	goto	l23294
 11789   001A08                     l23400:
 11790                           
 11791                           ; BSR set to: 1
 11792                           ;../../VLCBlib_PIC/mns.c: 455:             i = getParameter(m->bytes[2]);
 11793   001A08  EE20 F004          	lfsr	2,4
 11794   001A0C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11795   001A0E  26D9               	addwf	fsr2l,f,c
 11796   001A10  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11797   001A12  22DA               	addwfc	fsr2h,f,c
 11798   001A14  50DF               	movf	indf2,w,c
 11799   001A16  EC0F  F043         	call	_getParameter
 11800   001A1A  0101               	movlb	1	; () banked
 11801   001A1C  6FFB               	movwf	mnsProcessMessage@i& (0+255),b
 11802                           
 11803                           ; BSR set to: 1
 11804                           ;../../VLCBlib_PIC/mns.c: 456:             sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes
      +                          .lo, m->bytes[2], i);
 11805   001A1E  C0C0  F1C2         	movff	_nn+1,sendMessage4@data1
 11806   001A22  C0BF  F1C3         	movff	_nn,sendMessage4@data2
 11807   001A26  EE20 F004          	lfsr	2,4
 11808   001A2A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11809   001A2C  26D9               	addwf	fsr2l,f,c
 11810   001A2E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11811   001A30  22DA               	addwfc	fsr2h,f,c
 11812   001A32  50DF               	movf	indf2,w,c
 11813   001A34  6FC4               	movwf	sendMessage4@data3& (0+255),b
 11814   001A36  C1FB  F1C5         	movff	mnsProcessMessage@i,sendMessage4@data4
 11815   001A3A  0E9B               	movlw	155
 11816   001A3C  EC80  F05F         	call	_sendMessage4
 11817                           
 11818                           ;../../VLCBlib_PIC/mns.c: 458:             if (m->bytes[2] == 0) {
 11819   001A40  0101               	movlb	1	; () banked
 11820   001A42  EE20 F004          	lfsr	2,4
 11821   001A46  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11822   001A48  26D9               	addwf	fsr2l,f,c
 11823   001A4A  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11824   001A4C  22DA               	addwfc	fsr2h,f,c
 11825   001A4E  50DF               	movf	indf2,w,c
 11826   001A50  A4D8               	btfss	status,2,c
 11827   001A52  D694               	goto	l23294
 11828                           
 11829                           ; BSR set to: 1
 11830                           ;../../VLCBlib_PIC/mns.c: 459:                 startTimedResponse(7, findServiceIndex(SE
      +                          RVICE_ID_MNS), mnsTRrqnpnCallback);
 11831   001A54  0E01               	movlw	1
 11832   001A56  EC46  F056         	call	_findServiceIndex
 11833   001A5A  0100               	movlb	0	; () banked
 11834   001A5C  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11835   001A5E  0E14               	movlw	low _mnsTRrqnpnCallback
 11836   001A60  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11837   001A62  0EC0               	movlw	high _mnsTRrqnpnCallback
 11838   001A64  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11839   001A66  0E07               	movlw	7
 11840   001A68  EC9B  F05D         	call	_startTimedResponse
 11841   001A6C  D687               	goto	l23294
 11842   001A6E                     l1447:
 11843                           
 11844                           ; BSR set to: 2
 11845                           ;../../VLCBlib_PIC/mns.c: 464:             previousNN.word = nn.word;
 11846   001A6E  C0BF  F160         	movff	_nn,_previousNN
 11847   001A72  C0C0  F161         	movff	_nn+1,_previousNN+1
 11848                           
 11849                           ; BSR set to: 2
 11850                           ;../../VLCBlib_PIC/mns.c: 465:             factoryReset();
 11851   001A76  EC9C  F042         	call	_factoryReset	;wreg free
 11852                           
 11853                           ;../../VLCBlib_PIC/mns.c: 466:             if (previousNN.word != 0) {
 11854   001A7A  0101               	movlb	1	; () banked
 11855   001A7C  5160               	movf	_previousNN& (0+255),w,b
 11856   001A7E  1161               	iorwf	(_previousNN+1)& (0+255),w,b
 11857   001A80  B4D8               	btfsc	status,2,c
 11858   001A82  D007               	goto	l1448
 11859                           
 11860                           ; BSR set to: 1
 11861                           ;../../VLCBlib_PIC/mns.c: 467:                 sendMessage2(OPC_NNREL, previousNN.bytes.
      +                          hi, previousNN.bytes.lo);
 11862   001A84  C161  F0A6         	movff	_previousNN+1,sendMessage2@data1
 11863   001A88  C160  F0A7         	movff	_previousNN,sendMessage2@data2
 11864   001A8C  0E51               	movlw	81
 11865   001A8E  EC38  F05F         	call	_sendMessage2
 11866   001A92                     l1448:
 11867   001A92  00FF               	reset		;# 
 11868   001A94                     l23418:
 11869                           
 11870                           ;../../VLCBlib_PIC/mns.c: 472:             if (m->len < 5) {
 11871   001A94  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 11872   001A98  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 11873   001A9C  0E05               	movlw	5
 11874   001A9E  60DF               	cpfslt	indf2,c
 11875   001AA0  D00F               	goto	l23426
 11876                           
 11877                           ;../../VLCBlib_PIC/mns.c: 473:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RDGN, SERVICE_ID_MNS, CMDERR_INV_CMD);
 11878   001AA2  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11879   001AA6  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11880   001AAA  0E87               	movlw	135
 11881   001AAC  0101               	movlb	1	; () banked
 11882   001AAE  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11883   001AB0  0E01               	movlw	1
 11884   001AB2  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11885   001AB4  0E01               	movlw	1
 11886   001AB6  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11887   001AB8  0EAF               	movlw	175
 11888   001ABA  EC68  F05F         	call	_sendMessage5
 11889   001ABE  D65E               	goto	l23294
 11890   001AC0                     l23426:
 11891                           
 11892                           ;../../VLCBlib_PIC/mns.c: 476:             if (m->bytes[2] == 0) {
 11893   001AC0  0101               	movlb	1	; () banked
 11894   001AC2  EE20 F004          	lfsr	2,4
 11895   001AC6  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11896   001AC8  26D9               	addwf	fsr2l,f,c
 11897   001ACA  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11898   001ACC  22DA               	addwfc	fsr2h,f,c
 11899   001ACE  50DF               	movf	indf2,w,c
 11900   001AD0  A4D8               	btfss	status,2,c
 11901   001AD2  D00B               	goto	l23430
 11902                           
 11903                           ; BSR set to: 1
 11904                           ;../../VLCBlib_PIC/mns.c: 478:                 startTimedResponse(4, 0, mnsTRallDiagnost
      +                          icsCallback);
 11905   001AD4  0E00               	movlw	0
 11906   001AD6  0100               	movlb	0	; () banked
 11907   001AD8  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 11908   001ADA  0E52               	movlw	low _mnsTRallDiagnosticsCallback
 11909   001ADC  6F92               	movwf	startTimedResponse@callback& (0+255),b
 11910   001ADE  0E84               	movlw	high _mnsTRallDiagnosticsCallback
 11911   001AE0  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 11912   001AE2  0E04               	movlw	4
 11913   001AE4  EC9B  F05D         	call	_startTimedResponse
 11914                           
 11915                           ;../../VLCBlib_PIC/mns.c: 479:             } else {
 11916   001AE8  D649               	goto	l23294
 11917   001AEA                     l23430:
 11918                           
 11919                           ; BSR set to: 1
 11920                           ;../../VLCBlib_PIC/mns.c: 481:                 if (m->bytes[2] > 9) {
 11921   001AEA  EE20 F004          	lfsr	2,4
 11922   001AEE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11923   001AF0  26D9               	addwf	fsr2l,f,c
 11924   001AF2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11925   001AF4  22DA               	addwfc	fsr2h,f,c
 11926   001AF6  0E09               	movlw	9
 11927   001AF8  64DF               	cpfsgt	indf2,c
 11928   001AFA  D00E               	goto	l23438
 11929                           
 11930                           ; BSR set to: 1
 11931                           ;../../VLCBlib_PIC/mns.c: 482:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_SERVICE);
 11932   001AFC  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 11933   001B00  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 11934   001B04  0E87               	movlw	135
 11935   001B06  6FC4               	movwf	sendMessage5@data3& (0+255),b
 11936   001B08  0E01               	movlw	1
 11937   001B0A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 11938   001B0C  0EFC               	movlw	252
 11939   001B0E  6FC6               	movwf	sendMessage5@data5& (0+255),b
 11940   001B10  0EAF               	movlw	175
 11941   001B12  EC68  F05F         	call	_sendMessage5
 11942   001B16  D632               	goto	l23294
 11943   001B18                     l23438:
 11944                           
 11945                           ; BSR set to: 1
 11946                           ;../../VLCBlib_PIC/mns.c: 485:                 if (services[m->bytes[2]-1]->getDiagnosti
      +                          c == ((void*)0)) {
 11947   001B18  EE20 F004          	lfsr	2,4
 11948   001B1C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 11949   001B1E  26D9               	addwf	fsr2l,f,c
 11950   001B20  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 11951   001B22  22DA               	addwfc	fsr2h,f,c
 11952   001B24  50DF               	movf	indf2,w,c
 11953   001B26  0102               	movlb	2	; () banked
 11954   001B28  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 11955   001B2A  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 11956   001B2C  90D8               	bcf	status,0,c
 11957   001B2E  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 11958   001B30  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 11959   001B32  0EFE               	movlw	254
 11960   001B34  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 11961   001B36  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 11962   001B38  0EFF               	movlw	255
 11963   001B3A  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 11964   001B3C  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 11965   001B3E  0E75               	movlw	low _services
 11966   001B40  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 11967   001B42  6EF6               	movwf	tblptrl,c
 11968   001B44  0EEE               	movlw	high _services
 11969   001B46  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 11970   001B48  6EF7               	movwf	tblptrh,c
 11971   001B4A                     	if	1	;There are 3 active tblptr bytes
 11972   001B4A  6AF8               	clrf	tblptru,c
 11973   001B4C  0E00               	movlw	low (__mediumconst shr (0+16))
 11974   001B4E  22F8               	addwfc	tblptru,f,c
 11975   001B50                     	endif
 11976   001B50  0009               	tblrd		*+
 11977   001B52  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 11978   001B56  0009               	tblrd		*+
 11979   001B58  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 11980   001B5C  0E10               	movlw	16
 11981   001B5E  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 11982   001B60  0E00               	movlw	0
 11983   001B62  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 11984   001B64  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 11985   001B68  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 11986   001B6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 11987   001B6C  6AF8               	clrf	tblptru,c
 11988   001B6E                     	endif
 11989   001B6E                     	if	0	;tblptru may be non-zero
 11990   001B6E                     	endif
 11991   001B6E  0009               	tblrd		*+
 11992   001B70  50F5               	movf	tablat,w,c
 11993   001B72  0009               	tblrd		*+
 11994   001B74  10F5               	iorwf	tablat,w,c
 11995   001B76  A4D8               	btfss	status,2,c
 11996   001B78  D00E               	goto	l23442
 11997                           
 11998                           ; BSR set to: 2
 11999                           ;../../VLCBlib_PIC/mns.c: 487:                     sendMessage5(OPC_GRSP, nn.bytes.hi, n
      +                          n.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12000   001B7A  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12001   001B7E  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12002   001B82  0E87               	movlw	135
 12003   001B84  0101               	movlb	1	; () banked
 12004   001B86  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12005   001B88  0E01               	movlw	1
 12006   001B8A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12007   001B8C  0EFD               	movlw	253
 12008   001B8E  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12009   001B90  0EAF               	movlw	175
 12010   001B92  EC68  F05F         	call	_sendMessage5
 12011   001B96                     l23442:
 12012                           
 12013                           ;../../VLCBlib_PIC/mns.c: 489:                 if (m->bytes[3] == 0) {
 12014   001B96  0101               	movlb	1	; () banked
 12015   001B98  EE20 F005          	lfsr	2,5
 12016   001B9C  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12017   001B9E  26D9               	addwf	fsr2l,f,c
 12018   001BA0  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12019   001BA2  22DA               	addwfc	fsr2h,f,c
 12020   001BA4  50DF               	movf	indf2,w,c
 12021   001BA6  A4D8               	btfss	status,2,c
 12022   001BA8  D011               	goto	l23452
 12023                           
 12024                           ; BSR set to: 1
 12025                           ;../../VLCBlib_PIC/mns.c: 491:                     startTimedResponse(4, m->bytes[2], mn
      +                          sTRallDiagnosticsCallback);
 12026   001BAA  EE20 F004          	lfsr	2,4
 12027   001BAE  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12028   001BB0  26D9               	addwf	fsr2l,f,c
 12029   001BB2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12030   001BB4  22DA               	addwfc	fsr2h,f,c
 12031   001BB6  50DF               	movf	indf2,w,c
 12032   001BB8  0100               	movlb	0	; () banked
 12033   001BBA  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12034   001BBC  0E52               	movlw	low _mnsTRallDiagnosticsCallback
 12035   001BBE  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12036   001BC0  0E84               	movlw	high _mnsTRallDiagnosticsCallback
 12037   001BC2  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12038   001BC4  0E04               	movlw	4
 12039   001BC6  EC9B  F05D         	call	_startTimedResponse
 12040   001BCA  D5D8               	goto	l23294
 12041   001BCC                     l23452:
 12042                           
 12043                           ; BSR set to: 1
 12044                           ;../../VLCBlib_PIC/mns.c: 494:                     DiagnosticVal * d = services[m->bytes
      +                          [2]-1]->getDiagnostic(m->bytes[3]);
 12045   001BCC  EE20 F004          	lfsr	2,4
 12046   001BD0  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12047   001BD2  26D9               	addwf	fsr2l,f,c
 12048   001BD4  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12049   001BD6  22DA               	addwfc	fsr2h,f,c
 12050   001BD8  50DF               	movf	indf2,w,c
 12051   001BDA  0102               	movlb	2	; () banked
 12052   001BDC  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12053   001BDE  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12054   001BE0  90D8               	bcf	status,0,c
 12055   001BE2  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12056   001BE4  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12057   001BE6  0EFE               	movlw	254
 12058   001BE8  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12059   001BEA  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12060   001BEC  0EFF               	movlw	255
 12061   001BEE  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12062   001BF0  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12063   001BF2  0E75               	movlw	low _services
 12064   001BF4  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12065   001BF6  6EF6               	movwf	tblptrl,c
 12066   001BF8  0EEE               	movlw	high _services
 12067   001BFA  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12068   001BFC  6EF7               	movwf	tblptrh,c
 12069   001BFE                     	if	1	;There are 3 active tblptr bytes
 12070   001BFE  6AF8               	clrf	tblptru,c
 12071   001C00  0E00               	movlw	low (__mediumconst shr (0+16))
 12072   001C02  22F8               	addwfc	tblptru,f,c
 12073   001C04                     	endif
 12074   001C04  0009               	tblrd		*+
 12075   001C06  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12076   001C0A  0009               	tblrd		*+
 12077   001C0C  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12078   001C10  0E10               	movlw	16
 12079   001C12  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12080   001C14  0E00               	movlw	0
 12081   001C16  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12082   001C18  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12083   001C1C  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12084   001C20                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12085   001C20  6AF8               	clrf	tblptru,c
 12086   001C22                     	endif
 12087   001C22                     	if	0	;tblptru may be non-zero
 12088   001C22                     	endif
 12089   001C22  0009               	tblrd		*+
 12090   001C24  CFF5 F2D2          	movff	tablat,??_mnsProcessMessage+6
 12091   001C28  0009               	tblrd		*+
 12092   001C2A  CFF5 F2D3          	movff	tablat,??_mnsProcessMessage+7
 12093   001C2E  D801               	call	u24998
 12094   001C30  D011               	goto	u24999
 12095   001C32                     u24998:
 12096   001C32  0005               	push	
 12097   001C34  6EFA               	movwf	pclath,c
 12098   001C36  51D2               	movf	(??_mnsProcessMessage+6)& (0+255),w,b
 12099   001C38  6EFD               	movwf	tosl,c
 12100   001C3A  51D3               	movf	(??_mnsProcessMessage+7)& (0+255),w,b
 12101   001C3C  6EFE               	movwf	tosh,c
 12102   001C3E  6AFF               	clrf	tosu,c
 12103   001C40  50FA               	movf	pclath,w,c
 12104   001C42  0101               	movlb	1	; () banked
 12105   001C44  EE20 F005          	lfsr	2,5
 12106   001C48  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12107   001C4A  26D9               	addwf	fsr2l,f,c
 12108   001C4C  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12109   001C4E  22DA               	addwfc	fsr2h,f,c
 12110   001C50  50DF               	movf	indf2,w,c
 12111   001C52  0012               	return		;indir
 12112   001C54                     u24999:
 12113   001C54  C096  F1FC         	movff	?_producerGetDiagnostic,mnsProcessMessage@d
 12114   001C58  C097  F1FD         	movff	?_producerGetDiagnostic+1,mnsProcessMessage@d+1
 12115                           
 12116                           ;../../VLCBlib_PIC/mns.c: 495:                     if (d == ((void*)0)) {
 12117   001C5C  0101               	movlb	1	; () banked
 12118   001C5E  51FC               	movf	mnsProcessMessage@d& (0+255),w,b
 12119   001C60  11FD               	iorwf	(mnsProcessMessage@d+1)& (0+255),w,b
 12120   001C62  A4D8               	btfss	status,2,c
 12121   001C64  D00E               	goto	l23458
 12122                           
 12123                           ; BSR set to: 1
 12124                           ;../../VLCBlib_PIC/mns.c: 497:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_RDGN, 1, GRSP_INVALID_DIAGNOSTIC);
 12125   001C66  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12126   001C6A  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12127   001C6E  0E87               	movlw	135
 12128   001C70  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12129   001C72  0E01               	movlw	1
 12130   001C74  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12131   001C76  0EFD               	movlw	253
 12132   001C78  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12133   001C7A  0EAF               	movlw	175
 12134   001C7C  EC68  F05F         	call	_sendMessage5
 12135                           
 12136                           ;../../VLCBlib_PIC/mns.c: 498:                     } else {
 12137   001C80  D57D               	goto	l23294
 12138   001C82                     l23458:
 12139                           
 12140                           ; BSR set to: 1
 12141                           ;../../VLCBlib_PIC/mns.c: 500:                         sendMessage6(OPC_DGN, nn.bytes.hi
      +                          , nn.bytes.lo, m->bytes[2], m->bytes[3],d->asBytes.hi, d->asBytes.lo);
 12142   001C82  C0C0  F1C2         	movff	_nn+1,sendMessage6@data1
 12143   001C86  C0BF  F1C3         	movff	_nn,sendMessage6@data2
 12144   001C8A  EE20 F004          	lfsr	2,4
 12145   001C8E  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12146   001C90  26D9               	addwf	fsr2l,f,c
 12147   001C92  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12148   001C94  22DA               	addwfc	fsr2h,f,c
 12149   001C96  50DF               	movf	indf2,w,c
 12150   001C98  6FC4               	movwf	sendMessage6@data3& (0+255),b
 12151   001C9A  EE20 F005          	lfsr	2,5
 12152   001C9E  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12153   001CA0  26D9               	addwf	fsr2l,f,c
 12154   001CA2  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12155   001CA4  22DA               	addwfc	fsr2h,f,c
 12156   001CA6  50DF               	movf	indf2,w,c
 12157   001CA8  6FC5               	movwf	sendMessage6@data4& (0+255),b
 12158   001CAA  EE20 F001          	lfsr	2,1
 12159   001CAE  51FC               	movf	mnsProcessMessage@d& (0+255),w,b
 12160   001CB0  26D9               	addwf	fsr2l,f,c
 12161   001CB2  51FD               	movf	(mnsProcessMessage@d+1)& (0+255),w,b
 12162   001CB4  22DA               	addwfc	fsr2h,f,c
 12163   001CB6  50DF               	movf	indf2,w,c
 12164   001CB8  6FC6               	movwf	sendMessage6@data5& (0+255),b
 12165   001CBA  C1FC  FFD9         	movff	mnsProcessMessage@d,fsr2l
 12166   001CBE  C1FD  FFDA         	movff	mnsProcessMessage@d+1,fsr2h
 12167   001CC2  50DF               	movf	indf2,w,c
 12168   001CC4  6FC7               	movwf	sendMessage6@data6& (0+255),b
 12169   001CC6  0EC7               	movlw	199
 12170   001CC8  EC20  F05F         	call	_sendMessage6
 12171   001CCC  D557               	goto	l23294
 12172   001CCE                     l23464:
 12173                           
 12174                           ; BSR set to: 2
 12175                           ;../../VLCBlib_PIC/mns.c: 508:             if (m->len < 4) {
 12176   001CCE  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12177   001CD2  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12178   001CD6  0E04               	movlw	4
 12179   001CD8  60DF               	cpfslt	indf2,c
 12180   001CDA  D00F               	goto	l23472
 12181                           
 12182                           ; BSR set to: 2
 12183                           ;../../VLCBlib_PIC/mns.c: 509:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12184   001CDC  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12185   001CE0  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12186   001CE4  0E78               	movlw	120
 12187   001CE6  0101               	movlb	1	; () banked
 12188   001CE8  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12189   001CEA  0E01               	movlw	1
 12190   001CEC  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12191   001CEE  0E01               	movlw	1
 12192   001CF0  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12193   001CF2  0EAF               	movlw	175
 12194   001CF4  EC68  F05F         	call	_sendMessage5
 12195   001CF8  D541               	goto	l23294
 12196   001CFA                     l23472:
 12197                           
 12198                           ; BSR set to: 2
 12199                           ;../../VLCBlib_PIC/mns.c: 512:             if (m->bytes[2] == 0) {
 12200   001CFA  0101               	movlb	1	; () banked
 12201   001CFC  EE20 F004          	lfsr	2,4
 12202   001D00  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12203   001D02  26D9               	addwf	fsr2l,f,c
 12204   001D04  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12205   001D06  22DA               	addwfc	fsr2h,f,c
 12206   001D08  50DF               	movf	indf2,w,c
 12207   001D0A  A4D8               	btfss	status,2,c
 12208   001D0C  D018               	goto	l23478
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;../../VLCBlib_PIC/mns.c: 514:                 sendMessage5(OPC_SD, nn.bytes.hi, nn.byte
      +                          s.lo, 0, 0, 9);
 12212   001D0E  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12213   001D12  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12214   001D16  0E00               	movlw	0
 12215   001D18  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12216   001D1A  0E00               	movlw	0
 12217   001D1C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12218   001D1E  0E09               	movlw	9
 12219   001D20  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12220   001D22  0EAC               	movlw	172
 12221   001D24  EC68  F05F         	call	_sendMessage5
 12222                           
 12223                           ;../../VLCBlib_PIC/mns.c: 516:                 startTimedResponse(3, SERVICE_ID_MNS, mns
      +                          TRserviceDiscoveryCallback);
 12224   001D28  0E01               	movlw	1
 12225   001D2A  0100               	movlb	0	; () banked
 12226   001D2C  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 12227   001D2E  0E14               	movlw	low _mnsTRserviceDiscoveryCallback
 12228   001D30  6F92               	movwf	startTimedResponse@callback& (0+255),b
 12229   001D32  0EA3               	movlw	high _mnsTRserviceDiscoveryCallback
 12230   001D34  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 12231   001D36  0E03               	movlw	3
 12232   001D38  EC9B  F05D         	call	_startTimedResponse
 12233                           
 12234                           ;../../VLCBlib_PIC/mns.c: 517:             } else if (m->bytes[2] > 9) {
 12235   001D3C  D51F               	goto	l23294
 12236   001D3E                     l23478:
 12237                           
 12238                           ; BSR set to: 1
 12239   001D3E  EE20 F004          	lfsr	2,4
 12240   001D42  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12241   001D44  26D9               	addwf	fsr2l,f,c
 12242   001D46  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12243   001D48  22DA               	addwfc	fsr2h,f,c
 12244   001D4A  0E09               	movlw	9
 12245   001D4C  64DF               	cpfsgt	indf2,c
 12246   001D4E  D00E               	goto	l23488
 12247                           
 12248                           ; BSR set to: 1
 12249                           ;../../VLCBlib_PIC/mns.c: 518:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_RQSD, SERVICE_ID_MNS, GRSP_INVALID_SERVICE);
 12250   001D50  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12251   001D54  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12252   001D58  0E78               	movlw	120
 12253   001D5A  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12254   001D5C  0E01               	movlw	1
 12255   001D5E  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12256   001D60  0EFC               	movlw	252
 12257   001D62  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12258   001D64  0EAF               	movlw	175
 12259   001D66  EC68  F05F         	call	_sendMessage5
 12260   001D6A  D508               	goto	l23294
 12261   001D6C                     l23488:
 12262                           
 12263                           ; BSR set to: 1
 12264                           ;../../VLCBlib_PIC/mns.c: 522:                 if (services[m->bytes[2]-1]->getESDdata =
      +                          = ((void*)0)) {
 12265   001D6C  EE20 F004          	lfsr	2,4
 12266   001D70  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12267   001D72  26D9               	addwf	fsr2l,f,c
 12268   001D74  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12269   001D76  22DA               	addwfc	fsr2h,f,c
 12270   001D78  50DF               	movf	indf2,w,c
 12271   001D7A  0102               	movlb	2	; () banked
 12272   001D7C  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12273   001D7E  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12274   001D80  90D8               	bcf	status,0,c
 12275   001D82  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12276   001D84  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12277   001D86  0EFE               	movlw	254
 12278   001D88  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12279   001D8A  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12280   001D8C  0EFF               	movlw	255
 12281   001D8E  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12282   001D90  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12283   001D92  0E75               	movlw	low _services
 12284   001D94  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12285   001D96  6EF6               	movwf	tblptrl,c
 12286   001D98  0EEE               	movlw	high _services
 12287   001D9A  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12288   001D9C  6EF7               	movwf	tblptrh,c
 12289   001D9E                     	if	1	;There are 3 active tblptr bytes
 12290   001D9E  6AF8               	clrf	tblptru,c
 12291   001DA0  0E00               	movlw	low (__mediumconst shr (0+16))
 12292   001DA2  22F8               	addwfc	tblptru,f,c
 12293   001DA4                     	endif
 12294   001DA4  0009               	tblrd		*+
 12295   001DA6  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12296   001DAA  0009               	tblrd		*+
 12297   001DAC  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12298   001DB0  0E0E               	movlw	14
 12299   001DB2  27D0               	addwf	(??_mnsProcessMessage+4)& (0+255),f,b
 12300   001DB4  0E00               	movlw	0
 12301   001DB6  23D1               	addwfc	(??_mnsProcessMessage+5)& (0+255),f,b
 12302   001DB8  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12303   001DBC  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12304   001DC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12305   001DC0  6AF8               	clrf	tblptru,c
 12306   001DC2                     	endif
 12307   001DC2                     	if	0	;tblptru may be non-zero
 12308   001DC2                     	endif
 12309   001DC2  0009               	tblrd		*+
 12310   001DC4  50F5               	movf	tablat,w,c
 12311   001DC6  0009               	tblrd		*+
 12312   001DC8  10F5               	iorwf	tablat,w,c
 12313   001DCA  A4D8               	btfss	status,2,c
 12314   001DCC  D042               	goto	l23492
 12315                           
 12316                           ; BSR set to: 2
 12317                           ;../../VLCBlib_PIC/mns.c: 523:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo, 0,0,0);
 12318   001DCE  C0C0  F1C2         	movff	_nn+1,sendMessage7@data1
 12319   001DD2  C0BF  F1C3         	movff	_nn,sendMessage7@data2
 12320   001DD6  0101               	movlb	1	; () banked
 12321   001DD8  EE20 F004          	lfsr	2,4
 12322   001DDC  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12323   001DDE  26D9               	addwf	fsr2l,f,c
 12324   001DE0  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12325   001DE2  22DA               	addwfc	fsr2h,f,c
 12326   001DE4  50DF               	movf	indf2,w,c
 12327   001DE6  6FC4               	movwf	sendMessage7@data3& (0+255),b
 12328   001DE8  EE20 F004          	lfsr	2,4
 12329   001DEC  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12330   001DEE  26D9               	addwf	fsr2l,f,c
 12331   001DF0  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12332   001DF2  22DA               	addwfc	fsr2h,f,c
 12333   001DF4  50DF               	movf	indf2,w,c
 12334   001DF6  0102               	movlb	2	; () banked
 12335   001DF8  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12336   001DFA  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12337   001DFC  90D8               	bcf	status,0,c
 12338   001DFE  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12339   001E00  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12340   001E02  0EFE               	movlw	254
 12341   001E04  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12342   001E06  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12343   001E08  0EFF               	movlw	255
 12344   001E0A  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12345   001E0C  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12346   001E0E  0E75               	movlw	low _services
 12347   001E10  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12348   001E12  6EF6               	movwf	tblptrl,c
 12349   001E14  0EEE               	movlw	high _services
 12350   001E16  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12351   001E18  6EF7               	movwf	tblptrh,c
 12352   001E1A                     	if	1	;There are 3 active tblptr bytes
 12353   001E1A  6AF8               	clrf	tblptru,c
 12354   001E1C  0E00               	movlw	low (__mediumconst shr (0+16))
 12355   001E1E  22F8               	addwfc	tblptru,f,c
 12356   001E20                     	endif
 12357   001E20  0009               	tblrd		*+
 12358   001E22  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12359   001E26  0009               	tblrd		*+
 12360   001E28  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12361   001E2C  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12362   001E30  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12363   001E34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12364   001E34  6AF8               	clrf	tblptru,c
 12365   001E36                     	endif
 12366   001E36                     	if	0	;tblptru may be non-zero
 12367   001E36                     	endif
 12368   001E36  0008               	tblrd		*
 12369   001E38  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 12370   001E3C  0E00               	movlw	0
 12371   001E3E  0101               	movlb	1	; () banked
 12372   001E40  6FC6               	movwf	sendMessage7@data5& (0+255),b
 12373   001E42  0E00               	movlw	0
 12374   001E44  6FC7               	movwf	sendMessage7@data6& (0+255),b
 12375   001E46  0E00               	movlw	0
 12376   001E48  6FC8               	movwf	sendMessage7@data7& (0+255),b
 12377   001E4A  0EE7               	movlw	231
 12378   001E4C  EC50  F05F         	call	_sendMessage7
 12379                           
 12380                           ;../../VLCBlib_PIC/mns.c: 524:                 } else {
 12381   001E50  D495               	goto	l23294
 12382   001E52                     l23492:
 12383                           
 12384                           ; BSR set to: 2
 12385                           ;../../VLCBlib_PIC/mns.c: 525:                     sendMessage7(OPC_ESD, nn.bytes.hi, nn
      +                          .bytes.lo, m->bytes[2], services[m->bytes[2]-1]->serviceNo,
 12386   001E52  C0C0  F1C2         	movff	_nn+1,sendMessage7@data1
 12387   001E56  C0BF  F1C3         	movff	_nn,sendMessage7@data2
 12388   001E5A  0101               	movlb	1	; () banked
 12389   001E5C  EE20 F004          	lfsr	2,4
 12390   001E60  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12391   001E62  26D9               	addwf	fsr2l,f,c
 12392   001E64  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12393   001E66  22DA               	addwfc	fsr2h,f,c
 12394   001E68  50DF               	movf	indf2,w,c
 12395   001E6A  6FC4               	movwf	sendMessage7@data3& (0+255),b
 12396   001E6C  EE20 F004          	lfsr	2,4
 12397   001E70  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12398   001E72  26D9               	addwf	fsr2l,f,c
 12399   001E74  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12400   001E76  22DA               	addwfc	fsr2h,f,c
 12401   001E78  50DF               	movf	indf2,w,c
 12402   001E7A  0102               	movlb	2	; () banked
 12403   001E7C  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12404   001E7E  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12405   001E80  90D8               	bcf	status,0,c
 12406   001E82  37CC               	rlcf	??_mnsProcessMessage& (0+255),f,b
 12407   001E84  37CD               	rlcf	(??_mnsProcessMessage+1)& (0+255),f,b
 12408   001E86  0EFE               	movlw	254
 12409   001E88  25CC               	addwf	??_mnsProcessMessage& (0+255),w,b
 12410   001E8A  6FCE               	movwf	(??_mnsProcessMessage+2)& (0+255),b
 12411   001E8C  0EFF               	movlw	255
 12412   001E8E  21CD               	addwfc	(??_mnsProcessMessage+1)& (0+255),w,b
 12413   001E90  6FCF               	movwf	(??_mnsProcessMessage+3)& (0+255),b
 12414   001E92  0E75               	movlw	low _services
 12415   001E94  25CE               	addwf	(??_mnsProcessMessage+2)& (0+255),w,b
 12416   001E96  6EF6               	movwf	tblptrl,c
 12417   001E98  0EEE               	movlw	high _services
 12418   001E9A  21CF               	addwfc	(??_mnsProcessMessage+3)& (0+255),w,b
 12419   001E9C  6EF7               	movwf	tblptrh,c
 12420   001E9E                     	if	1	;There are 3 active tblptr bytes
 12421   001E9E  6AF8               	clrf	tblptru,c
 12422   001EA0  0E00               	movlw	low (__mediumconst shr (0+16))
 12423   001EA2  22F8               	addwfc	tblptru,f,c
 12424   001EA4                     	endif
 12425   001EA4  0009               	tblrd		*+
 12426   001EA6  CFF5 F2D0          	movff	tablat,??_mnsProcessMessage+4
 12427   001EAA  0009               	tblrd		*+
 12428   001EAC  CFF5 F2D1          	movff	tablat,??_mnsProcessMessage+5
 12429   001EB0  C2D0  FFF6         	movff	??_mnsProcessMessage+4,tblptrl
 12430   001EB4  C2D1  FFF7         	movff	??_mnsProcessMessage+5,tblptrh
 12431   001EB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12432   001EB8  6AF8               	clrf	tblptru,c
 12433   001EBA                     	endif
 12434   001EBA                     	if	0	;tblptru may be non-zero
 12435   001EBA                     	endif
 12436   001EBA  0008               	tblrd		*
 12437   001EBC  CFF5 F1C5          	movff	tablat,sendMessage7@data4
 12438   001EC0  0101               	movlb	1	; () banked
 12439   001EC2  EE20 F004          	lfsr	2,4
 12440   001EC6  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12441   001EC8  26D9               	addwf	fsr2l,f,c
 12442   001ECA  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12443   001ECC  22DA               	addwfc	fsr2h,f,c
 12444   001ECE  50DF               	movf	indf2,w,c
 12445   001ED0  0102               	movlb	2	; () banked
 12446   001ED2  6FD2               	movwf	(??_mnsProcessMessage+6)& (0+255),b
 12447   001ED4  6BD3               	clrf	(??_mnsProcessMessage+7)& (0+255),b
 12448   001ED6  90D8               	bcf	status,0,c
 12449   001ED8  37D2               	rlcf	(??_mnsProcessMessage+6)& (0+255),f,b
 12450   001EDA  37D3               	rlcf	(??_mnsProcessMessage+7)& (0+255),f,b
 12451   001EDC  0EFE               	movlw	254
 12452   001EDE  25D2               	addwf	(??_mnsProcessMessage+6)& (0+255),w,b
 12453   001EE0  6FD4               	movwf	(??_mnsProcessMessage+8)& (0+255),b
 12454   001EE2  0EFF               	movlw	255
 12455   001EE4  21D3               	addwfc	(??_mnsProcessMessage+7)& (0+255),w,b
 12456   001EE6  6FD5               	movwf	(??_mnsProcessMessage+9)& (0+255),b
 12457   001EE8  0E75               	movlw	low _services
 12458   001EEA  25D4               	addwf	(??_mnsProcessMessage+8)& (0+255),w,b
 12459   001EEC  6EF6               	movwf	tblptrl,c
 12460   001EEE  0EEE               	movlw	high _services
 12461   001EF0  21D5               	addwfc	(??_mnsProcessMessage+9)& (0+255),w,b
 12462   001EF2  6EF7               	movwf	tblptrh,c
 12463   001EF4                     	if	1	;There are 3 active tblptr bytes
 12464   001EF4  6AF8               	clrf	tblptru,c
 12465   001EF6  0E00               	movlw	low (__mediumconst shr (0+16))
 12466   001EF8  22F8               	addwfc	tblptru,f,c
 12467   001EFA                     	endif
 12468   001EFA  0009               	tblrd		*+
 12469   001EFC  CFF5 F2D6          	movff	tablat,??_mnsProcessMessage+10
 12470   001F00  0009               	tblrd		*+
 12471   001F02  CFF5 F2D7          	movff	tablat,??_mnsProcessMessage+11
 12472   001F06  0E0E               	movlw	14
 12473   001F08  27D6               	addwf	(??_mnsProcessMessage+10)& (0+255),f,b
 12474   001F0A  0E00               	movlw	0
 12475   001F0C  23D7               	addwfc	(??_mnsProcessMessage+11)& (0+255),f,b
 12476   001F0E  C2D6  FFF6         	movff	??_mnsProcessMessage+10,tblptrl
 12477   001F12  C2D7  FFF7         	movff	??_mnsProcessMessage+11,tblptrh
 12478   001F16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12479   001F16  6AF8               	clrf	tblptru,c
 12480   001F18                     	endif
 12481   001F18                     	if	0	;tblptru may be non-zero
 12482   001F18                     	endif
 12483   001F18  0009               	tblrd		*+
 12484   001F1A  CFF5 F2D8          	movff	tablat,??_mnsProcessMessage+12
 12485   001F1E  0009               	tblrd		*+
 12486   001F20  CFF5 F2D9          	movff	tablat,??_mnsProcessMessage+13
 12487   001F24  D801               	call	u25058
 12488   001F26  D00A               	goto	u25059
 12489   001F28                     u25058:
 12490   001F28  0005               	push	
 12491   001F2A  6EFA               	movwf	pclath,c
 12492   001F2C  51D8               	movf	(??_mnsProcessMessage+12)& (0+255),w,b
 12493   001F2E  6EFD               	movwf	tosl,c
 12494   001F30  51D9               	movf	(??_mnsProcessMessage+13)& (0+255),w,b
 12495   001F32  6EFE               	movwf	tosh,c
 12496   001F34  6AFF               	clrf	tosu,c
 12497   001F36  50FA               	movf	pclath,w,c
 12498   001F38  0E01               	movlw	1
 12499   001F3A  0012               	return		;indir
 12500   001F3C                     u25059:
 12501   001F3C  0101               	movlb	1	; () banked
 12502   001F3E  6FC6               	movwf	sendMessage7@data5& (0+255),b
 12503   001F40  EE20 F004          	lfsr	2,4
 12504   001F44  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12505   001F46  26D9               	addwf	fsr2l,f,c
 12506   001F48  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12507   001F4A  22DA               	addwfc	fsr2h,f,c
 12508   001F4C  50DF               	movf	indf2,w,c
 12509   001F4E  0102               	movlb	2	; () banked
 12510   001F50  6FDA               	movwf	(??_mnsProcessMessage+14)& (0+255),b
 12511   001F52  6BDB               	clrf	(??_mnsProcessMessage+15)& (0+255),b
 12512   001F54  90D8               	bcf	status,0,c
 12513   001F56  37DA               	rlcf	(??_mnsProcessMessage+14)& (0+255),f,b
 12514   001F58  37DB               	rlcf	(??_mnsProcessMessage+15)& (0+255),f,b
 12515   001F5A  0EFE               	movlw	254
 12516   001F5C  25DA               	addwf	(??_mnsProcessMessage+14)& (0+255),w,b
 12517   001F5E  6FDC               	movwf	(??_mnsProcessMessage+16)& (0+255),b
 12518   001F60  0EFF               	movlw	255
 12519   001F62  21DB               	addwfc	(??_mnsProcessMessage+15)& (0+255),w,b
 12520   001F64  6FDD               	movwf	(??_mnsProcessMessage+17)& (0+255),b
 12521   001F66  0E75               	movlw	low _services
 12522   001F68  25DC               	addwf	(??_mnsProcessMessage+16)& (0+255),w,b
 12523   001F6A  6EF6               	movwf	tblptrl,c
 12524   001F6C  0EEE               	movlw	high _services
 12525   001F6E  21DD               	addwfc	(??_mnsProcessMessage+17)& (0+255),w,b
 12526   001F70  6EF7               	movwf	tblptrh,c
 12527   001F72                     	if	1	;There are 3 active tblptr bytes
 12528   001F72  6AF8               	clrf	tblptru,c
 12529   001F74  0E00               	movlw	low (__mediumconst shr (0+16))
 12530   001F76  22F8               	addwfc	tblptru,f,c
 12531   001F78                     	endif
 12532   001F78  0009               	tblrd		*+
 12533   001F7A  CFF5 F2DE          	movff	tablat,??_mnsProcessMessage+18
 12534   001F7E  0009               	tblrd		*+
 12535   001F80  CFF5 F2DF          	movff	tablat,??_mnsProcessMessage+19
 12536   001F84  0E0E               	movlw	14
 12537   001F86  27DE               	addwf	(??_mnsProcessMessage+18)& (0+255),f,b
 12538   001F88  0E00               	movlw	0
 12539   001F8A  23DF               	addwfc	(??_mnsProcessMessage+19)& (0+255),f,b
 12540   001F8C  C2DE  FFF6         	movff	??_mnsProcessMessage+18,tblptrl
 12541   001F90  C2DF  FFF7         	movff	??_mnsProcessMessage+19,tblptrh
 12542   001F94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12543   001F94  6AF8               	clrf	tblptru,c
 12544   001F96                     	endif
 12545   001F96                     	if	0	;tblptru may be non-zero
 12546   001F96                     	endif
 12547   001F96  0009               	tblrd		*+
 12548   001F98  CFF5 F2E0          	movff	tablat,??_mnsProcessMessage+20
 12549   001F9C  0009               	tblrd		*+
 12550   001F9E  CFF5 F2E1          	movff	tablat,??_mnsProcessMessage+21
 12551   001FA2  D801               	call	u25068
 12552   001FA4  D00A               	goto	u25069
 12553   001FA6                     u25068:
 12554   001FA6  0005               	push	
 12555   001FA8  6EFA               	movwf	pclath,c
 12556   001FAA  51E0               	movf	(??_mnsProcessMessage+20)& (0+255),w,b
 12557   001FAC  6EFD               	movwf	tosl,c
 12558   001FAE  51E1               	movf	(??_mnsProcessMessage+21)& (0+255),w,b
 12559   001FB0  6EFE               	movwf	tosh,c
 12560   001FB2  6AFF               	clrf	tosu,c
 12561   001FB4  50FA               	movf	pclath,w,c
 12562   001FB6  0E02               	movlw	2
 12563   001FB8  0012               	return		;indir
 12564   001FBA                     u25069:
 12565   001FBA  0101               	movlb	1	; () banked
 12566   001FBC  6FC7               	movwf	sendMessage7@data6& (0+255),b
 12567   001FBE  EE20 F004          	lfsr	2,4
 12568   001FC2  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12569   001FC4  26D9               	addwf	fsr2l,f,c
 12570   001FC6  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12571   001FC8  22DA               	addwfc	fsr2h,f,c
 12572   001FCA  50DF               	movf	indf2,w,c
 12573   001FCC  0102               	movlb	2	; () banked
 12574   001FCE  6FE2               	movwf	(??_mnsProcessMessage+22)& (0+255),b
 12575   001FD0  6BE3               	clrf	(??_mnsProcessMessage+23)& (0+255),b
 12576   001FD2  90D8               	bcf	status,0,c
 12577   001FD4  37E2               	rlcf	(??_mnsProcessMessage+22)& (0+255),f,b
 12578   001FD6  37E3               	rlcf	(??_mnsProcessMessage+23)& (0+255),f,b
 12579   001FD8  0EFE               	movlw	254
 12580   001FDA  25E2               	addwf	(??_mnsProcessMessage+22)& (0+255),w,b
 12581   001FDC  6FE4               	movwf	(??_mnsProcessMessage+24)& (0+255),b
 12582   001FDE  0EFF               	movlw	255
 12583   001FE0  21E3               	addwfc	(??_mnsProcessMessage+23)& (0+255),w,b
 12584   001FE2  6FE5               	movwf	(??_mnsProcessMessage+25)& (0+255),b
 12585   001FE4  0E75               	movlw	low _services
 12586   001FE6  25E4               	addwf	(??_mnsProcessMessage+24)& (0+255),w,b
 12587   001FE8  6EF6               	movwf	tblptrl,c
 12588   001FEA  0EEE               	movlw	high _services
 12589   001FEC  21E5               	addwfc	(??_mnsProcessMessage+25)& (0+255),w,b
 12590   001FEE  6EF7               	movwf	tblptrh,c
 12591   001FF0                     	if	1	;There are 3 active tblptr bytes
 12592   001FF0  6AF8               	clrf	tblptru,c
 12593   001FF2  0E00               	movlw	low (__mediumconst shr (0+16))
 12594   001FF4  22F8               	addwfc	tblptru,f,c
 12595   001FF6                     	endif
 12596   001FF6  0009               	tblrd		*+
 12597   001FF8  CFF5 F2E6          	movff	tablat,??_mnsProcessMessage+26
 12598   001FFC  0009               	tblrd		*+
 12599   001FFE  CFF5 F2E7          	movff	tablat,??_mnsProcessMessage+27
 12600   002002  0E0E               	movlw	14
 12601   002004  27E6               	addwf	(??_mnsProcessMessage+26)& (0+255),f,b
 12602   002006  0E00               	movlw	0
 12603   002008  23E7               	addwfc	(??_mnsProcessMessage+27)& (0+255),f,b
 12604   00200A  C2E6  FFF6         	movff	??_mnsProcessMessage+26,tblptrl
 12605   00200E  C2E7  FFF7         	movff	??_mnsProcessMessage+27,tblptrh
 12606   002012                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12607   002012  6AF8               	clrf	tblptru,c
 12608   002014                     	endif
 12609   002014                     	if	0	;tblptru may be non-zero
 12610   002014                     	endif
 12611   002014  0009               	tblrd		*+
 12612   002016  CFF5 F2E8          	movff	tablat,??_mnsProcessMessage+28
 12613   00201A  0009               	tblrd		*+
 12614   00201C  CFF5 F2E9          	movff	tablat,??_mnsProcessMessage+29
 12615   002020  D801               	call	u25078
 12616   002022  D00A               	goto	u25079
 12617   002024                     u25078:
 12618   002024  0005               	push	
 12619   002026  6EFA               	movwf	pclath,c
 12620   002028  51E8               	movf	(??_mnsProcessMessage+28)& (0+255),w,b
 12621   00202A  6EFD               	movwf	tosl,c
 12622   00202C  51E9               	movf	(??_mnsProcessMessage+29)& (0+255),w,b
 12623   00202E  6EFE               	movwf	tosh,c
 12624   002030  6AFF               	clrf	tosu,c
 12625   002032  50FA               	movf	pclath,w,c
 12626   002034  0E03               	movlw	3
 12627   002036  0012               	return		;indir
 12628   002038                     u25079:
 12629   002038  0101               	movlb	1	; () banked
 12630   00203A  6FC8               	movwf	sendMessage7@data7& (0+255),b
 12631   00203C  0EE7               	movlw	231
 12632   00203E  EC50  F05F         	call	_sendMessage7
 12633   002042  EFBE  F00B         	goto	l23294
 12634   002046                     l23498:
 12635                           
 12636                           ; BSR set to: 2
 12637                           ;../../VLCBlib_PIC/mns.c: 535:             if (m->len < 4) {
 12638   002046  C1F9  FFD9         	movff	mnsProcessMessage@m,fsr2l
 12639   00204A  C1FA  FFDA         	movff	mnsProcessMessage@m+1,fsr2h
 12640   00204E  0E04               	movlw	4
 12641   002050  60DF               	cpfslt	indf2,c
 12642   002052  D010               	goto	l23506
 12643                           
 12644                           ; BSR set to: 2
 12645                           ;../../VLCBlib_PIC/mns.c: 536:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, CMDERR_INV_CMD);
 12646   002054  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12647   002058  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12648   00205C  0E76               	movlw	118
 12649   00205E  0101               	movlb	1	; () banked
 12650   002060  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12651   002062  0E01               	movlw	1
 12652   002064  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12653   002066  0E01               	movlw	1
 12654   002068  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12655   00206A  0EAF               	movlw	175
 12656   00206C  EC68  F05F         	call	_sendMessage5
 12657   002070  EFBE  F00B         	goto	l23294
 12658   002074                     l23506:
 12659                           
 12660                           ; BSR set to: 2
 12661                           ;../../VLCBlib_PIC/mns.c: 539:             newMode = m->bytes[2];
 12662   002074  0101               	movlb	1	; () banked
 12663   002076  EE20 F004          	lfsr	2,4
 12664   00207A  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12665   00207C  26D9               	addwf	fsr2l,f,c
 12666   00207E  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12667   002080  22DA               	addwfc	fsr2h,f,c
 12668   002082  50DF               	movf	indf2,w,c
 12669   002084  6FFE               	movwf	mnsProcessMessage@newMode& (0+255),b
 12670                           
 12671                           ; BSR set to: 1
 12672                           ;../../VLCBlib_PIC/mns.c: 540:             previousNN.word = nn.word;
 12673   002086  C0BF  F160         	movff	_nn,_previousNN
 12674   00208A  C0C0  F161         	movff	_nn+1,_previousNN+1
 12675                           
 12676                           ;../../VLCBlib_PIC/mns.c: 542:             switch (mode_state) {
 12677   00208E  D05B               	goto	l23548
 12678   002090                     l23510:
 12679                           
 12680                           ; BSR set to: 0
 12681                           ;../../VLCBlib_PIC/mns.c: 544:                     if (newMode == MODE_SETUP) {
 12682   002090  0101               	movlb	1	; () banked
 12683   002092  51FE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12684   002094  A4D8               	btfss	status,2,c
 12685   002096  D060               	goto	l23550
 12686                           
 12687                           ; BSR set to: 1
 12688                           ;../../VLCBlib_PIC/mns.c: 545:                         mode_state = MODE_SETUP;
 12689   002098  0E00               	movlw	0
 12690   00209A  0100               	movlb	0	; () banked
 12691   00209C  6FC8               	movwf	_mode_state& (0+255),b
 12692                           
 12693                           ; BSR set to: 0
 12694                           ;../../VLCBlib_PIC/mns.c: 546:                         setupModePreviousMode = MODE_UNIN
      +                          ITIALISED;
 12695   00209E  0101               	movlb	1	; () banked
 12696   0020A0  6965               	setf	_setupModePreviousMode& (0+255),b
 12697                           
 12698                           ; BSR set to: 1
 12699                           ;../../VLCBlib_PIC/mns.c: 547:                         sendMessage5(OPC_GRSP, previousNN
      +                          .bytes.hi, previousNN.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12700   0020A2  C161  F1C2         	movff	_previousNN+1,sendMessage5@data1
 12701   0020A6  C160  F1C3         	movff	_previousNN,sendMessage5@data2
 12702   0020AA  0E76               	movlw	118
 12703   0020AC  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12704   0020AE  0E01               	movlw	1
 12705   0020B0  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12706   0020B2  0E00               	movlw	0
 12707   0020B4  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12708   0020B6  0EAF               	movlw	175
 12709   0020B8  EC68  F05F         	call	_sendMessage5
 12710                           
 12711                           ;../../VLCBlib_PIC/mns.c: 549:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12712   0020BC  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 12713   0020C0  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 12714   0020C4  0E50               	movlw	80
 12715   0020C6  EC38  F05F         	call	_sendMessage2
 12716   0020CA  EFBC  F00B         	goto	l23292
 12717   0020CE                     l23526:
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;../../VLCBlib_PIC/mns.c: 558:                     if (newMode == MODE_SETUP) {
 12721   0020CE  0101               	movlb	1	; () banked
 12722   0020D0  51FE               	movf	mnsProcessMessage@newMode& (0+255),w,b
 12723   0020D2  A4D8               	btfss	status,2,c
 12724   0020D4  D041               	goto	l23550
 12725                           
 12726                           ; BSR set to: 1
 12727                           ;../../VLCBlib_PIC/mns.c: 559:                         sendMessage5(OPC_GRSP, nn.bytes.h
      +                          i, nn.bytes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12728   0020D6  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12729   0020DA  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12730   0020DE  0E76               	movlw	118
 12731   0020E0  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12732   0020E2  0E01               	movlw	1
 12733   0020E4  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12734   0020E6  0E00               	movlw	0
 12735   0020E8  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12736   0020EA  0EAF               	movlw	175
 12737   0020EC  EC68  F05F         	call	_sendMessage5
 12738                           
 12739                           ;../../VLCBlib_PIC/mns.c: 562:                         sendMessage2(OPC_RQNN, nn.bytes.h
      +                          i, nn.bytes.lo);
 12740   0020F0  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 12741   0020F4  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 12742   0020F8  0E50               	movlw	80
 12743   0020FA  EC38  F05F         	call	_sendMessage2
 12744                           
 12745                           ;../../VLCBlib_PIC/mns.c: 564:                         nn.bytes.lo = nn.bytes.hi = 0;
 12746   0020FE  0E00               	movlw	0
 12747   002100  0100               	movlb	0	; () banked
 12748   002102  6FC0               	movwf	(_nn+1)& (0+255),b
 12749   002104  C0C0  F0BF         	movff	_nn+1,_nn
 12750                           
 12751                           ; BSR set to: 0
 12752                           ;../../VLCBlib_PIC/mns.c: 565:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC, 
      +                          nn.bytes.hi);
 12753   002108  0EFC               	movlw	252
 12754   00210A  6FA4               	movwf	writeNVM@index& (0+255),b
 12755   00210C  0E03               	movlw	3
 12756   00210E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12757   002110  0E00               	movlw	0
 12758   002112  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12759   002114  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 12760   002118  0E00               	movlw	0
 12761   00211A  ECE7  F05B         	call	_writeNVM
 12762                           
 12763                           ;../../VLCBlib_PIC/mns.c: 566:                         writeNVM(EEPROM_NVM_TYPE, 0x3FC +
      +                          1, nn.bytes.lo);
 12764   00211E  0EFD               	movlw	253
 12765   002120  0100               	movlb	0	; () banked
 12766   002122  6FA4               	movwf	writeNVM@index& (0+255),b
 12767   002124  0E03               	movlw	3
 12768   002126  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 12769   002128  0E00               	movlw	0
 12770   00212A  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 12771   00212C  C0BF  F0A7         	movff	_nn,writeNVM@value
 12772   002130  0E00               	movlw	0
 12773   002132  ECE7  F05B         	call	_writeNVM
 12774                           
 12775                           ;../../VLCBlib_PIC/mns.c: 568:                         mode_state = MODE_SETUP;
 12776   002136  0E00               	movlw	0
 12777   002138  0100               	movlb	0	; () banked
 12778   00213A  6FC8               	movwf	_mode_state& (0+255),b
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;../../VLCBlib_PIC/mns.c: 569:                         setupModePreviousMode = MODE_NORM
      +                          AL;
 12782   00213C  0E01               	movlw	1
 12783   00213E  0101               	movlb	1	; () banked
 12784   002140  6F65               	movwf	_setupModePreviousMode& (0+255),b
 12785   002142  EFBC  F00B         	goto	l23292
 12786   002146                     l23548:
 12787                           
 12788                           ; BSR set to: 1
 12789   002146  0100               	movlb	0	; () banked
 12790   002148  51C8               	movf	_mode_state& (0+255),w,b
 12791                           
 12792                           ; Switch size 1, requested type "simple"
 12793                           ; Number of cases is 2, Range of values is 0 to 255
 12794                           ; switch strategies available:
 12795                           ; Name         Instructions Cycles
 12796                           ; simple_byte            7     4 (average)
 12797                           ;	Chosen strategy is simple_byte
 12798   00214A  0A00               	xorlw	0	; case 0
 12799   00214C  B4D8               	btfsc	status,2,c
 12800   00214E  D004               	goto	l23550
 12801   002150  0AFF               	xorlw	255	; case 255
 12802   002152  B4D8               	btfsc	status,2,c
 12803   002154  D79D               	goto	l23510
 12804   002156  D7BB               	goto	l23526
 12805   002158                     l23550:
 12806                           
 12807                           ;../../VLCBlib_PIC/mns.c: 578:             if (newMode == MODE_HEARTBEAT_ON) {
 12808   002158  0E0C               	movlw	12
 12809   00215A  0101               	movlb	1	; () banked
 12810   00215C  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12811   00215E  A4D8               	btfss	status,2,c
 12812   002160  D010               	goto	l23562
 12813                           
 12814                           ; BSR set to: 1
 12815                           ;../../VLCBlib_PIC/mns.c: 579:                 mode_flags |= 4;
 12816   002162  8566               	bsf	_mode_flags& (0+255),2,b
 12817                           
 12818                           ; BSR set to: 1
 12819                           ;../../VLCBlib_PIC/mns.c: 580:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12820   002164  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12821   002168  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12822   00216C  0E76               	movlw	118
 12823   00216E  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12824   002170  0E01               	movlw	1
 12825   002172  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12826   002174  0E00               	movlw	0
 12827   002176  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12828   002178  0EAF               	movlw	175
 12829   00217A  EC68  F05F         	call	_sendMessage5
 12830   00217E  EFBE  F00B         	goto	l23294
 12831   002182                     l23562:
 12832                           
 12833                           ; BSR set to: 1
 12834   002182  0E0D               	movlw	13
 12835   002184  19FE               	xorwf	mnsProcessMessage@newMode& (0+255),w,b
 12836   002186  A4D8               	btfss	status,2,c
 12837   002188  EF43  F00C         	goto	l23320
 12838                           
 12839                           ; BSR set to: 1
 12840                           ;../../VLCBlib_PIC/mns.c: 583:                 mode_flags &= ~4;
 12841   00218C  9566               	bcf	_mode_flags& (0+255),2,b
 12842                           
 12843                           ; BSR set to: 1
 12844                           ;../../VLCBlib_PIC/mns.c: 584:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.by
      +                          tes.lo, OPC_MODE, SERVICE_ID_MNS, GRSP_OK);
 12845   00218E  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 12846   002192  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 12847   002196  0E76               	movlw	118
 12848   002198  6FC4               	movwf	sendMessage5@data3& (0+255),b
 12849   00219A  0E01               	movlw	1
 12850   00219C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 12851   00219E  0E00               	movlw	0
 12852   0021A0  6FC6               	movwf	sendMessage5@data5& (0+255),b
 12853   0021A2  0EAF               	movlw	175
 12854   0021A4  EC68  F05F         	call	_sendMessage5
 12855   0021A8  EFBE  F00B         	goto	l23294
 12856   0021AC                     l1479:
 12857                           
 12858                           ; BSR set to: 2
 12859   0021AC  00FF               	reset		;# 
 12860   0021AE  EFBE  F00B         	goto	l23294
 12861   0021B2                     l23582:
 12862                           
 12863                           ; BSR set to: 0
 12864   0021B2  0101               	movlb	1	; () banked
 12865   0021B4  EE20 F001          	lfsr	2,1
 12866   0021B8  51F9               	movf	mnsProcessMessage@m& (0+255),w,b
 12867   0021BA  26D9               	addwf	fsr2l,f,c
 12868   0021BC  51FA               	movf	(mnsProcessMessage@m+1)& (0+255),w,b
 12869   0021BE  22DA               	addwfc	fsr2h,f,c
 12870   0021C0  50DF               	movf	indf2,w,c
 12871   0021C2  0102               	movlb	2	; () banked
 12872   0021C4  6FCC               	movwf	??_mnsProcessMessage& (0+255),b
 12873   0021C6  6BCD               	clrf	(??_mnsProcessMessage+1)& (0+255),b
 12874                           
 12875                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12876                           ; Switch size 1, requested type "simple"
 12877                           ; Number of cases is 1, Range of values is 0 to 0
 12878                           ; switch strategies available:
 12879                           ; Name         Instructions Cycles
 12880                           ; simple_byte            4     3 (average)
 12881                           ;	Chosen strategy is simple_byte
 12882   0021C8  51CD               	movf	(??_mnsProcessMessage+1)& (0+255),w,b
 12883   0021CA  0A00               	xorlw	0	; case 0
 12884   0021CC  A4D8               	btfss	status,2,c
 12885   0021CE  EF43  F00C         	goto	l23320
 12886                           
 12887                           ; BSR set to: 2
 12888                           ; Switch size 1, requested type "simple"
 12889                           ; Number of cases is 6, Range of values is 79 to 135
 12890                           ; switch strategies available:
 12891                           ; Name         Instructions Cycles
 12892                           ; simple_byte           19    10 (average)
 12893                           ;	Chosen strategy is simple_byte
 12894   0021D2  51CC               	movf	??_mnsProcessMessage& (0+255),w,b
 12895   0021D4  0A4F               	xorlw	79	; case 79
 12896   0021D6  B4D8               	btfsc	status,2,c
 12897   0021D8  D44A               	goto	l1447
 12898   0021DA  0A11               	xorlw	17	; case 94
 12899   0021DC  B4D8               	btfsc	status,2,c
 12900   0021DE  D7E6               	goto	l1479
 12901   0021E0  0A2D               	xorlw	45	; case 115
 12902   0021E2  B4D8               	btfsc	status,2,c
 12903   0021E4  EFCB  F00C         	goto	l23384
 12904   0021E8  0A05               	xorlw	5	; case 118
 12905   0021EA  B4D8               	btfsc	status,2,c
 12906   0021EC  D72C               	goto	l23498
 12907   0021EE  0A0E               	xorlw	14	; case 120
 12908   0021F0  B4D8               	btfsc	status,2,c
 12909   0021F2  D56D               	goto	l23464
 12910   0021F4  0AFF               	xorlw	255	; case 135
 12911   0021F6  B4D8               	btfsc	status,2,c
 12912   0021F8  D44D               	goto	l23418
 12913   0021FA  EF43  F00C         	goto	l23320
 12914   0021FE                     __end_of_mnsProcessMessage:
 12915                           	callstack 0
 12916                           
 12917 ;; *************** function _ackEventProcessMessage *****************
 12918 ;; Defined at:
 12919 ;;		line 111 in file "../../VLCBlib_PIC/event_acknowledge.c"
 12920 ;; Parameters:    Size  Location     Type
 12921 ;;  m               2   63[BANK1 ] PTR struct Message
 12922 ;;		 -> poll@m(9), 
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;  eventNN         2    3[BANK2 ] struct Word
 12925 ;;  eventEN         2    0[BANK2 ] struct Word
 12926 ;;  ev              2    0        short 
 12927 ;;  eventIndex      1    2[BANK2 ] unsigned char 
 12928 ;; Return value:  Size  Location     Type
 12929 ;;                  1    wreg      enum E12793
 12930 ;; Registers used:
 12931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12932 ;; Tracked objects:
 12933 ;;		On entry : 0/0
 12934 ;;		On exit  : 0/0
 12935 ;;		Unchanged: 0/0
 12936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12937 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12938 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12939 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12940 ;;      Totals:         0       0       4       5       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12941 ;;Total ram usage:        9 bytes
 12942 ;; Hardware stack levels used: 1
 12943 ;; Hardware stack levels required when called: 19
 12944 ;; This function calls:
 12945 ;;		_ackEventCheckLen
 12946 ;;		_findEvent
 12947 ;;		_findService
 12948 ;;		_isConsumedEvent
 12949 ;;		_sendMessage7
 12950 ;; This function is called by:
 12951 ;;		_poll
 12952 ;; This function uses a non-reentrant model
 12953 ;;
 12954                           
 12955                           	psect	text23
 12956   0065E2                     __ptext23:
 12957                           	callstack 0
 12958   0065E2                     _ackEventProcessMessage:
 12959                           	callstack 10
 12960                           
 12961                           ;../../VLCBlib_PIC/event_acknowledge.c: 112:     Word eventNN, eventEN;;../../VLCBlib_PI
      +                          C/event_acknowledge.c: 113:     uint8_t eventIndex;;../../VLCBlib_PIC/event_acknowledge.
      +                          c: 114:     int16_t ev;;../../VLCBlib_PIC/event_acknowledge.c: 117:     if (m->opc == OP
      +                          C_MODE) {
 12962                           
 12963                           ;incstack = 0
 12964   0065E2  0101               	movlb	1	; () banked
 12965   0065E4  EE20 F001          	lfsr	2,1
 12966   0065E8  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 12967   0065EA  26D9               	addwf	fsr2l,f,c
 12968   0065EC  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12969   0065EE  22DA               	addwfc	fsr2h,f,c
 12970   0065F0  0E76               	movlw	118
 12971   0065F2  18DE               	xorwf	postinc2,w,c
 12972   0065F4  A4D8               	btfss	status,2,c
 12973   0065F6  D040               	goto	l1280
 12974                           
 12975                           ; BSR set to: 1
 12976                           ;../../VLCBlib_PIC/event_acknowledge.c: 118:         if (ackEventCheckLen(m, 4) == PROCE
      +                          SSED) return PROCESSED;
 12977   0065F8  C1F9  F1CB         	movff	ackEventProcessMessage@m,ackEventCheckLen@m
 12978   0065FC  C1FA  F1CC         	movff	ackEventProcessMessage@m+1,ackEventCheckLen@m+1
 12979   006600  0E04               	movlw	4
 12980   006602  6FCD               	movwf	ackEventCheckLen@needed& (0+255),b
 12981   006604  EC0B  F062         	call	_ackEventCheckLen	;wreg free
 12982   006608  06E8               	decf	wreg,f,c
 12983   00660A  A4D8               	btfss	status,2,c
 12984   00660C  D002               	goto	l23158
 12985   00660E                     u24650:
 12986   00660E  0E01               	movlw	1
 12987   006610  0012               	return	
 12988   006612                     l23158:
 12989                           
 12990                           ;../../VLCBlib_PIC/event_acknowledge.c: 119:         if ((m->bytes[0] == nn.bytes.hi) &&
      +                           (m->bytes[1] == nn.bytes.lo)) {
 12991   006612  0101               	movlb	1	; () banked
 12992   006614  EE20 F002          	lfsr	2,2
 12993   006618  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 12994   00661A  26D9               	addwf	fsr2l,f,c
 12995   00661C  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 12996   00661E  22DA               	addwfc	fsr2h,f,c
 12997   006620  50DE               	movf	postinc2,w,c
 12998   006622  0100               	movlb	0	; () banked
 12999   006624  19C0               	xorwf	(_nn+1)& (0+255),w,b
 13000   006626  A4D8               	btfss	status,2,c
 13001   006628  D025               	goto	l23180
 13002                           
 13003                           ; BSR set to: 0
 13004   00662A  0101               	movlb	1	; () banked
 13005   00662C  EE20 F003          	lfsr	2,3
 13006   006630  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13007   006632  26D9               	addwf	fsr2l,f,c
 13008   006634  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13009   006636  22DA               	addwfc	fsr2h,f,c
 13010   006638  0100               	movlb	0	; () banked
 13011   00663A  51BF               	movf	_nn& (0+255),w,b
 13012   00663C  18DE               	xorwf	postinc2,w,c
 13013   00663E  A4D8               	btfss	status,2,c
 13014   006640  D019               	goto	l23180
 13015                           
 13016                           ; BSR set to: 0
 13017                           ;../../VLCBlib_PIC/event_acknowledge.c: 120:             if (m->bytes[2] == MODE_EVENT_A
      +                          CK_ON) {
 13018   006642  0101               	movlb	1	; () banked
 13019   006644  EE20 F004          	lfsr	2,4
 13020   006648  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13021   00664A  26D9               	addwf	fsr2l,f,c
 13022   00664C  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13023   00664E  22DA               	addwfc	fsr2h,f,c
 13024   006650  0E0A               	movlw	10
 13025   006652  18DE               	xorwf	postinc2,w,c
 13026   006654  A4D8               	btfss	status,2,c
 13027   006656  D002               	goto	l23172
 13028                           
 13029                           ; BSR set to: 1
 13030                           ;../../VLCBlib_PIC/event_acknowledge.c: 122:                 mode_flags |= 1;
 13031   006658  8166               	bsf	_mode_flags& (0+255),0,b
 13032   00665A  D7D9               	goto	u24650
 13033   00665C                     l23172:
 13034                           
 13035                           ; BSR set to: 1
 13036   00665C  EE20 F004          	lfsr	2,4
 13037   006660  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13038   006662  26D9               	addwf	fsr2l,f,c
 13039   006664  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13040   006666  22DA               	addwfc	fsr2h,f,c
 13041   006668  0E0B               	movlw	11
 13042   00666A  18DE               	xorwf	postinc2,w,c
 13043   00666C  A4D8               	btfss	status,2,c
 13044   00666E  D002               	goto	l23180
 13045                           
 13046                           ; BSR set to: 1
 13047                           ;../../VLCBlib_PIC/event_acknowledge.c: 126:                 mode_flags &= ~1;
 13048   006670  9166               	bcf	_mode_flags& (0+255),0,b
 13049   006672  D7CD               	goto	u24650
 13050   006674                     l23180:
 13051                           
 13052                           ;../../VLCBlib_PIC/event_acknowledge.c: 130:         return NOT_PROCESSED;
 13053   006674  0E00               	movlw	0
 13054   006676  0012               	return	
 13055   006678                     l1280:
 13056                           
 13057                           ; BSR set to: 1
 13058                           ;../../VLCBlib_PIC/event_acknowledge.c: 135:     if (! (mode_flags & 2)) {
 13059   006678  A366               	btfss	_mode_flags& (0+255),1,b
 13060   00667A  D7FC               	goto	l23180
 13061                           
 13062                           ; BSR set to: 1
 13063                           ;../../VLCBlib_PIC/event_acknowledge.c: 139:     if (findService(SERVICE_ID_CONSUMER) ==
      +                           ((void*)0)) {
 13064   00667C  0E06               	movlw	6
 13065   00667E  EC5A  F04E         	call	_findService
 13066   006682  0100               	movlb	0	; () banked
 13067   006684  518D               	movf	?_findService& (0+255),w,b
 13068   006686  118E               	iorwf	(?_findService+1)& (0+255),w,b
 13069   006688  B4D8               	btfsc	status,2,c
 13070   00668A  D7F4               	goto	l23180
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;../../VLCBlib_PIC/event_acknowledge.c: 142:     if (m->len < 5) {
 13074   00668C  C1F9  FFD9         	movff	ackEventProcessMessage@m,fsr2l
 13075   006690  C1FA  FFDA         	movff	ackEventProcessMessage@m+1,fsr2h
 13076   006694  0E05               	movlw	5
 13077   006696  60DF               	cpfslt	indf2,c
 13078   006698  D001               	goto	l23200
 13079   00669A  D7EC               	goto	l23180
 13080   00669C                     l23200:
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;../../VLCBlib_PIC/event_acknowledge.c: 145:     eventNN.bytes.hi = m->bytes[0];
 13084   00669C  0101               	movlb	1	; () banked
 13085   00669E  EE20 F002          	lfsr	2,2
 13086   0066A2  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13087   0066A4  26D9               	addwf	fsr2l,f,c
 13088   0066A6  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13089   0066A8  22DA               	addwfc	fsr2h,f,c
 13090   0066AA  50DF               	movf	indf2,w,c
 13091   0066AC  0102               	movlb	2	; () banked
 13092   0066AE  6FD0               	movwf	(ackEventProcessMessage@eventNN+1)& (0+255),b
 13093                           
 13094                           ;../../VLCBlib_PIC/event_acknowledge.c: 146:     eventNN.bytes.lo = m->bytes[1];
 13095   0066B0  0101               	movlb	1	; () banked
 13096   0066B2  EE20 F003          	lfsr	2,3
 13097   0066B6  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13098   0066B8  26D9               	addwf	fsr2l,f,c
 13099   0066BA  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13100   0066BC  22DA               	addwfc	fsr2h,f,c
 13101   0066BE  50DF               	movf	indf2,w,c
 13102   0066C0  0102               	movlb	2	; () banked
 13103   0066C2  6FCF               	movwf	ackEventProcessMessage@eventNN& (0+255),b
 13104                           
 13105                           ;../../VLCBlib_PIC/event_acknowledge.c: 147:     eventEN.bytes.hi = m->bytes[2];
 13106   0066C4  0101               	movlb	1	; () banked
 13107   0066C6  EE20 F004          	lfsr	2,4
 13108   0066CA  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13109   0066CC  26D9               	addwf	fsr2l,f,c
 13110   0066CE  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13111   0066D0  22DA               	addwfc	fsr2h,f,c
 13112   0066D2  50DF               	movf	indf2,w,c
 13113   0066D4  0102               	movlb	2	; () banked
 13114   0066D6  6FCD               	movwf	(ackEventProcessMessage@eventEN+1)& (0+255),b
 13115                           
 13116                           ;../../VLCBlib_PIC/event_acknowledge.c: 148:     eventEN.bytes.lo = m->bytes[3];
 13117   0066D8  0101               	movlb	1	; () banked
 13118   0066DA  EE20 F005          	lfsr	2,5
 13119   0066DE  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13120   0066E0  26D9               	addwf	fsr2l,f,c
 13121   0066E2  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13122   0066E4  22DA               	addwfc	fsr2h,f,c
 13123   0066E6  50DF               	movf	indf2,w,c
 13124   0066E8  0102               	movlb	2	; () banked
 13125   0066EA  6FCC               	movwf	ackEventProcessMessage@eventEN& (0+255),b
 13126                           
 13127                           ;../../VLCBlib_PIC/event_acknowledge.c: 150:     switch (m->opc) {
 13128   0066EC  D018               	goto	l23212
 13129   0066EE                     l23202:
 13130                           
 13131                           ; BSR set to: 1
 13132                           ;../../VLCBlib_PIC/event_acknowledge.c: 154:             eventIndex = findEvent(eventNN.
      +                          word, eventNN.word);
 13133   0066EE  C2CF  F1BA         	movff	ackEventProcessMessage@eventNN,findEvent@nodeNumber
 13134   0066F2  C2D0  F1BB         	movff	ackEventProcessMessage@eventNN+1,findEvent@nodeNumber+1
 13135   0066F6  C2CF  F1BC         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13136   0066FA  C2D0  F1BD         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13137   0066FE  EC42  F051         	call	_findEvent	;wreg free
 13138   006702  D00A               	goto	L2
 13139   006704                     l23204:
 13140                           
 13141                           ; BSR set to: 1
 13142                           ;../../VLCBlib_PIC/event_acknowledge.c: 159:             eventIndex = findEvent(0, event
      +                          NN.word);
 13143   006704  0E00               	movlw	0
 13144   006706  6FBB               	movwf	(findEvent@nodeNumber+1)& (0+255),b
 13145   006708  0E00               	movlw	0
 13146   00670A  6FBA               	movwf	findEvent@nodeNumber& (0+255),b
 13147   00670C  C2CF  F1BC         	movff	ackEventProcessMessage@eventNN,findEvent@eventNumber
 13148   006710  C2D0  F1BD         	movff	ackEventProcessMessage@eventNN+1,findEvent@eventNumber+1
 13149   006714  EC42  F051         	call	_findEvent	;wreg free
 13150   006718                     L2:
 13151   006718  0102               	movlb	2	; () banked
 13152   00671A  6FCE               	movwf	ackEventProcessMessage@eventIndex& (0+255),b
 13153                           
 13154                           ;../../VLCBlib_PIC/event_acknowledge.c: 160:             break;
 13155   00671C  D01C               	goto	l23214
 13156   00671E                     l23212:
 13157                           
 13158                           ; BSR set to: 2
 13159   00671E  0101               	movlb	1	; () banked
 13160   006720  EE20 F001          	lfsr	2,1
 13161   006724  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13162   006726  26D9               	addwf	fsr2l,f,c
 13163   006728  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13164   00672A  22DA               	addwfc	fsr2h,f,c
 13165   00672C  50DF               	movf	indf2,w,c
 13166   00672E  6FFB               	movwf	??_ackEventProcessMessage& (0+255),b
 13167   006730  6BFC               	clrf	(??_ackEventProcessMessage+1)& (0+255),b
 13168                           
 13169                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13170                           ; Switch size 1, requested type "simple"
 13171                           ; Number of cases is 1, Range of values is 0 to 0
 13172                           ; switch strategies available:
 13173                           ; Name         Instructions Cycles
 13174                           ; simple_byte            4     3 (average)
 13175                           ;	Chosen strategy is simple_byte
 13176   006732  51FC               	movf	(??_ackEventProcessMessage+1)& (0+255),w,b
 13177   006734  0A00               	xorlw	0	; case 0
 13178   006736  A4D8               	btfss	status,2,c
 13179   006738  D79D               	goto	l23180
 13180                           
 13181                           ; BSR set to: 1
 13182                           ; Switch size 1, requested type "simple"
 13183                           ; Number of cases is 4, Range of values is 144 to 153
 13184                           ; switch strategies available:
 13185                           ; Name         Instructions Cycles
 13186                           ; simple_byte           13     7 (average)
 13187                           ;	Chosen strategy is simple_byte
 13188   00673A  51FB               	movf	??_ackEventProcessMessage& (0+255),w,b
 13189   00673C  0A90               	xorlw	144	; case 144
 13190   00673E  B4D8               	btfsc	status,2,c
 13191   006740  D7D6               	goto	l23202
 13192   006742  0A01               	xorlw	1	; case 145
 13193   006744  B4D8               	btfsc	status,2,c
 13194   006746  D7D3               	goto	l23202
 13195   006748  0A09               	xorlw	9	; case 152
 13196   00674A  B4D8               	btfsc	status,2,c
 13197   00674C  D7DB               	goto	l23204
 13198   00674E  0A01               	xorlw	1	; case 153
 13199   006750  B4D8               	btfsc	status,2,c
 13200   006752  D7D8               	goto	l23204
 13201   006754  D78F               	goto	l23180
 13202   006756                     l23214:
 13203                           
 13204                           ; BSR set to: 2
 13205                           ;../../VLCBlib_PIC/event_acknowledge.c: 164:     if (eventIndex != 0xff) {
 13206   006756  29CE               	incf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13207   006758  B4D8               	btfsc	status,2,c
 13208   00675A  D78C               	goto	l23180
 13209                           
 13210                           ; BSR set to: 2
 13211                           ;../../VLCBlib_PIC/event_acknowledge.c: 167:         if (isConsumedEvent(eventIndex)) {
 13212   00675C  51CE               	movf	ackEventProcessMessage@eventIndex& (0+255),w,b
 13213   00675E  EC22  F061         	call	_isConsumedEvent
 13214   006762  0900               	iorlw	0
 13215   006764  B4D8               	btfsc	status,2,c
 13216   006766  D786               	goto	l23180
 13217                           
 13218                           ;../../VLCBlib_PIC/event_acknowledge.c: 169:             sendMessage7(OPC_ENACK, nn.byte
      +                          s.hi, nn.bytes.lo, m->opc, m->bytes[0], m->bytes[1], m->bytes[2], m->bytes[3]);
 13219   006768  C0C0  F1C2         	movff	_nn+1,sendMessage7@data1
 13220   00676C  C0BF  F1C3         	movff	_nn,sendMessage7@data2
 13221   006770  0101               	movlb	1	; () banked
 13222   006772  EE20 F001          	lfsr	2,1
 13223   006776  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13224   006778  26D9               	addwf	fsr2l,f,c
 13225   00677A  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13226   00677C  22DA               	addwfc	fsr2h,f,c
 13227   00677E  50DF               	movf	indf2,w,c
 13228   006780  6FC4               	movwf	sendMessage7@data3& (0+255),b
 13229   006782  EE20 F002          	lfsr	2,2
 13230   006786  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13231   006788  26D9               	addwf	fsr2l,f,c
 13232   00678A  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13233   00678C  22DA               	addwfc	fsr2h,f,c
 13234   00678E  50DF               	movf	indf2,w,c
 13235   006790  6FC5               	movwf	sendMessage7@data4& (0+255),b
 13236   006792  EE20 F003          	lfsr	2,3
 13237   006796  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13238   006798  26D9               	addwf	fsr2l,f,c
 13239   00679A  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13240   00679C  22DA               	addwfc	fsr2h,f,c
 13241   00679E  50DF               	movf	indf2,w,c
 13242   0067A0  6FC6               	movwf	sendMessage7@data5& (0+255),b
 13243   0067A2  EE20 F004          	lfsr	2,4
 13244   0067A6  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13245   0067A8  26D9               	addwf	fsr2l,f,c
 13246   0067AA  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13247   0067AC  22DA               	addwfc	fsr2h,f,c
 13248   0067AE  50DF               	movf	indf2,w,c
 13249   0067B0  6FC7               	movwf	sendMessage7@data6& (0+255),b
 13250   0067B2  EE20 F005          	lfsr	2,5
 13251   0067B6  51F9               	movf	ackEventProcessMessage@m& (0+255),w,b
 13252   0067B8  26D9               	addwf	fsr2l,f,c
 13253   0067BA  51FA               	movf	(ackEventProcessMessage@m+1)& (0+255),w,b
 13254   0067BC  22DA               	addwfc	fsr2h,f,c
 13255   0067BE  50DF               	movf	indf2,w,c
 13256   0067C0  6FC8               	movwf	sendMessage7@data7& (0+255),b
 13257   0067C2  0EE6               	movlw	230
 13258   0067C4  EC50  F05F         	call	_sendMessage7
 13259                           
 13260                           ;../../VLCBlib_PIC/event_acknowledge.c: 171:             ackDiagnostics[0x01].asInt++;
 13261   0067C8  0101               	movlb	1	; () banked
 13262   0067CA  4BB4               	infsnz	(_ackDiagnostics+2)& (0+255),f,b
 13263   0067CC  2BB5               	incf	(_ackDiagnostics+3)& (0+255),f,b
 13264   0067CE  D752               	goto	l23180
 13265   0067D0                     __end_of_ackEventProcessMessage:
 13266                           	callstack 0
 13267                           
 13268 ;; *************** function _bootProcessMessage *****************
 13269 ;; Defined at:
 13270 ;;		line 194 in file "../../VLCBlib_PIC/boot.c"
 13271 ;; Parameters:    Size  Location     Type
 13272 ;;  m               2   63[BANK1 ] PTR struct Message
 13273 ;;		 -> poll@m(9), 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;		None
 13276 ;; Return value:  Size  Location     Type
 13277 ;;                  1    wreg      enum E12793
 13278 ;; Registers used:
 13279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13280 ;; Tracked objects:
 13281 ;;		On entry : 0/0
 13282 ;;		On exit  : 0/0
 13283 ;;		Unchanged: 0/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13285 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13287 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13288 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13289 ;;Total ram usage:        4 bytes
 13290 ;; Hardware stack levels used: 1
 13291 ;; Hardware stack levels required when called: 18
 13292 ;; This function calls:
 13293 ;;		_writeNVM
 13294 ;; This function is called by:
 13295 ;;		_poll
 13296 ;; This function uses a non-reentrant model
 13297 ;;
 13298                           
 13299                           	psect	text24
 13300   009FA6                     __ptext24:
 13301                           	callstack 0
 13302   009FA6                     _bootProcessMessage:
 13303                           	callstack 11
 13304                           
 13305                           ;../../VLCBlib_PIC/boot.c: 196:     if (m->bytes[0] != nn.bytes.hi) return NOT_PROCESSED
      +                          ;
 13306                           
 13307                           ;incstack = 0
 13308   009FA6  0101               	movlb	1	; () banked
 13309   009FA8  EE20 F002          	lfsr	2,2
 13310   009FAC  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13311   009FAE  26D9               	addwf	fsr2l,f,c
 13312   009FB0  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13313   009FB2  22DA               	addwfc	fsr2h,f,c
 13314   009FB4  50DE               	movf	postinc2,w,c
 13315   009FB6  0100               	movlb	0	; () banked
 13316   009FB8  19C0               	xorwf	(_nn+1)& (0+255),w,b
 13317   009FBA  B4D8               	btfsc	status,2,c
 13318   009FBC  D002               	goto	l23104
 13319   009FBE                     u24600:
 13320   009FBE  0E00               	movlw	0
 13321   009FC0  0012               	return	
 13322   009FC2                     l23104:
 13323                           
 13324                           ; BSR set to: 0
 13325                           ;../../VLCBlib_PIC/boot.c: 197:     if (m->bytes[1] != nn.bytes.lo) return NOT_PROCESSED
      +                          ;
 13326   009FC2  0101               	movlb	1	; () banked
 13327   009FC4  EE20 F003          	lfsr	2,3
 13328   009FC8  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13329   009FCA  26D9               	addwf	fsr2l,f,c
 13330   009FCC  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13331   009FCE  22DA               	addwfc	fsr2h,f,c
 13332   009FD0  0100               	movlb	0	; () banked
 13333   009FD2  51BF               	movf	_nn& (0+255),w,b
 13334   009FD4  18DE               	xorwf	postinc2,w,c
 13335   009FD6  A4D8               	btfss	status,2,c
 13336   009FD8  D7F2               	goto	u24600
 13337   009FDA  D019               	goto	l23128
 13338   009FDC                     l23110:
 13339                           
 13340                           ; BSR set to: 1
 13341                           ;../../VLCBlib_PIC/boot.c: 202:             if (m->bytes[2] != MODE_BOOT) return NOT_PRO
      +                          CESSED;
 13342   009FDC  EE20 F004          	lfsr	2,4
 13343   009FE0  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13344   009FE2  26D9               	addwf	fsr2l,f,c
 13345   009FE4  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13346   009FE6  22DA               	addwfc	fsr2h,f,c
 13347   009FE8  0E0E               	movlw	14
 13348   009FEA  18DE               	xorwf	postinc2,w,c
 13349   009FEC  A4D8               	btfss	status,2,c
 13350   009FEE  D7E7               	goto	u24600
 13351   009FF0                     l23116:
 13352                           
 13353                           ; BSR set to: 1
 13354                           ;../../VLCBlib_PIC/boot.c: 207:             writeNVM(EEPROM_NVM_TYPE, 0x3FF, 0xFF);
 13355   009FF0  0EFF               	movlw	255
 13356   009FF2  0100               	movlb	0	; () banked
 13357   009FF4  6FA4               	movwf	writeNVM@index& (0+255),b
 13358   009FF6  0E03               	movlw	3
 13359   009FF8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 13360   009FFA  0E00               	movlw	0
 13361   009FFC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 13362   009FFE  0EFF               	movlw	255
 13363   00A000  6FA7               	movwf	writeNVM@value& (0+255),b
 13364   00A002  0E00               	movlw	0
 13365   00A004  ECE7  F05B         	call	_writeNVM
 13366   00A008  00FF               	reset		;# 
 13367                           
 13368                           ;../../VLCBlib_PIC/boot.c: 209:             return PROCESSED;
 13369   00A00A  0E01               	movlw	1
 13370   00A00C  0012               	return	
 13371   00A00E                     l23128:
 13372                           
 13373                           ; BSR set to: 0
 13374   00A00E  0101               	movlb	1	; () banked
 13375   00A010  EE20 F001          	lfsr	2,1
 13376   00A014  51F9               	movf	bootProcessMessage@m& (0+255),w,b
 13377   00A016  26D9               	addwf	fsr2l,f,c
 13378   00A018  51FA               	movf	(bootProcessMessage@m+1)& (0+255),w,b
 13379   00A01A  22DA               	addwfc	fsr2h,f,c
 13380   00A01C  50DF               	movf	indf2,w,c
 13381   00A01E  6FFB               	movwf	??_bootProcessMessage& (0+255),b
 13382   00A020  6BFC               	clrf	(??_bootProcessMessage+1)& (0+255),b
 13383                           
 13384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13385                           ; Switch size 1, requested type "simple"
 13386                           ; Number of cases is 1, Range of values is 0 to 0
 13387                           ; switch strategies available:
 13388                           ; Name         Instructions Cycles
 13389                           ; simple_byte            4     3 (average)
 13390                           ;	Chosen strategy is simple_byte
 13391   00A022  51FC               	movf	(??_bootProcessMessage+1)& (0+255),w,b
 13392   00A024  0A00               	xorlw	0	; case 0
 13393   00A026  A4D8               	btfss	status,2,c
 13394   00A028  D7CA               	goto	u24600
 13395                           
 13396                           ; BSR set to: 1
 13397                           ; Switch size 1, requested type "simple"
 13398                           ; Number of cases is 2, Range of values is 92 to 118
 13399                           ; switch strategies available:
 13400                           ; Name         Instructions Cycles
 13401                           ; simple_byte            7     4 (average)
 13402                           ;	Chosen strategy is simple_byte
 13403   00A02A  51FB               	movf	??_bootProcessMessage& (0+255),w,b
 13404   00A02C  0A5C               	xorlw	92	; case 92
 13405   00A02E  B4D8               	btfsc	status,2,c
 13406   00A030  D7DF               	goto	l23116
 13407   00A032  0A2A               	xorlw	42	; case 118
 13408   00A034  B4D8               	btfsc	status,2,c
 13409   00A036  D7D2               	goto	l23110
 13410   00A038  D7C2               	goto	u24600
 13411   00A03A                     __end_of_bootProcessMessage:
 13412                           	callstack 0
 13413                           
 13414 ;; *************** function _consumer2QProcessMessage *****************
 13415 ;; Defined at:
 13416 ;;		line 142 in file "../event_consumerDualActionQueue.c"
 13417 ;; Parameters:    Size  Location     Type
 13418 ;;  m               2   63[BANK1 ] PTR struct Message
 13419 ;;		 -> poll@m(9), 
 13420 ;; Auto vars:     Size  Location     Type
 13421 ;;  nextSimultan    1    8[BANK2 ] unsigned char 
 13422 ;;  firstAction     1    7[BANK2 ] unsigned char 
 13423 ;;  nextAction      1    6[BANK2 ] unsigned char 
 13424 ;;  enn             2    3[BANK2 ] unsigned short 
 13425 ;;  action          1   13[BANK2 ] unsigned char 
 13426 ;;  e               1   12[BANK2 ] unsigned char 
 13427 ;;  ca              1   11[BANK2 ] unsigned char 
 13428 ;;  masked_actio    1   10[BANK2 ] unsigned char 
 13429 ;;  io              1    9[BANK2 ] unsigned char 
 13430 ;;  tableIndex      1    5[BANK2 ] unsigned char 
 13431 ;;  opc             1    2[BANK2 ] unsigned char 
 13432 ;;  change          1    1[BANK2 ] char 
 13433 ;;  end             1    0[BANK2 ] unsigned char 
 13434 ;;  start           1    0        unsigned char 
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      enum E12793
 13437 ;; Registers used:
 13438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13444 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13445 ;;      Locals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13446 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13447 ;;      Totals:         0       0       5      14       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13448 ;;Total ram usage:       19 bytes
 13449 ;; Hardware stack levels used: 1
 13450 ;; Hardware stack levels required when called: 16
 13451 ;; This function calls:
 13452 ;;		___awdiv
 13453 ;;		___awmod
 13454 ;;		_findEvent
 13455 ;;		_getEVs
 13456 ;;		_getNV
 13457 ;;		_pushTwoAction
 13458 ;;		_setExpeditedActions
 13459 ;;		_setNormalActions
 13460 ;; This function is called by:
 13461 ;;		_poll
 13462 ;; This function uses a non-reentrant model
 13463 ;;
 13464                           
 13465                           	psect	text25
 13466   003576                     __ptext25:
 13467                           	callstack 0
 13468   003576                     _consumer2QProcessMessage:
 13469                           	callstack 13
 13470                           
 13471                           ;../event_consumerDualActionQueue.c: 143:     uint8_t start, end;;../event_consumerDualA
      +                          ctionQueue.c: 144:     uint8_t tableIndex;;../event_consumerDualActionQueue.c: 145:     
      +                          int8_t change;;../event_consumerDualActionQueue.c: 146:     uint8_t e;;../event_consumer
      +                          DualActionQueue.c: 147:     uint8_t action;;../event_consumerDualActionQueue.c: 148:    
      +                           uint8_t masked_action;;../event_consumerDualActionQueue.c: 149:     uint8_t ca;;../even
      +                          t_consumerDualActionQueue.c: 150:     uint8_t io;;../event_consumerDualActionQueue.c: 15
      +                          1:     uint16_t enn;
 13472                           
 13473                           ;incstack = 0
 13474   003576  C1F9  FFD9         	movff	consumer2QProcessMessage@m,fsr2l
 13475   00357A  C1FA  FFDA         	movff	consumer2QProcessMessage@m+1,fsr2h
 13476   00357E  0E05               	movlw	5
 13477   003580  60DF               	cpfslt	indf2,c
 13478   003582  D002               	goto	l22924
 13479   003584                     u24370:
 13480   003584  0E00               	movlw	0
 13481   003586  0012               	return	
 13482   003588                     l22924:
 13483                           
 13484                           ;../event_consumerDualActionQueue.c: 155:     enn = ((uint16_t)m->bytes[0])*256+m->bytes
      +                          [1];
 13485   003588  0101               	movlb	1	; () banked
 13486   00358A  EE20 F003          	lfsr	2,3
 13487   00358E  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13488   003590  26D9               	addwf	fsr2l,f,c
 13489   003592  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13490   003594  22DA               	addwfc	fsr2h,f,c
 13491   003596  50DF               	movf	indf2,w,c
 13492   003598  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13493   00359A  EE20 F002          	lfsr	2,2
 13494   00359E  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13495   0035A0  26D9               	addwf	fsr2l,f,c
 13496   0035A2  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13497   0035A4  22DA               	addwfc	fsr2h,f,c
 13498   0035A6  50DF               	movf	indf2,w,c
 13499   0035A8  6FFC               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13500   0035AA  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13501   0035AC  0102               	movlb	2	; () banked
 13502   0035AE  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13503   0035B0  C1FC  F2D0         	movff	??_consumer2QProcessMessage+1,consumer2QProcessMessage@enn+1
 13504                           
 13505                           ;../event_consumerDualActionQueue.c: 157:     switch (m->opc) {
 13506   0035B4  D014               	goto	l22938
 13507   0035B6                     l448:
 13508                           
 13509                           ; BSR set to: 1
 13510                           ;../event_consumerDualActionQueue.c: 164:             enn = 0;
 13511                           
 13512                           ; BSR set to: 1
 13513   0035B6  0E00               	movlw	0
 13514   0035B8  0102               	movlb	2	; () banked
 13515   0035BA  6FD0               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13516   0035BC  0E00               	movlw	0
 13517   0035BE  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13518   0035C0                     l453:
 13519                           
 13520                           ;../event_consumerDualActionQueue.c: 173:             end = 20;
 13521   0035C0  0E14               	movlw	20
 13522   0035C2  0102               	movlb	2	; () banked
 13523   0035C4  6FCC               	movwf	consumer2QProcessMessage@end& (0+255),b
 13524                           
 13525                           ;../event_consumerDualActionQueue.c: 174:             change = 1;
 13526   0035C6  0E01               	movlw	1
 13527   0035C8  6FCD               	movwf	consumer2QProcessMessage@change& (0+255),b
 13528                           
 13529                           ;../event_consumerDualActionQueue.c: 175:             break;
 13530   0035CA  D049               	goto	l22940
 13531   0035CC                     l457:
 13532                           
 13533                           ; BSR set to: 1
 13534                           ;../event_consumerDualActionQueue.c: 182:             enn = 0;
 13535                           
 13536                           ; BSR set to: 1
 13537   0035CC  0E00               	movlw	0
 13538   0035CE  0102               	movlb	2	; () banked
 13539   0035D0  6FD0               	movwf	(consumer2QProcessMessage@enn+1)& (0+255),b
 13540   0035D2  0E00               	movlw	0
 13541   0035D4  6FCF               	movwf	consumer2QProcessMessage@enn& (0+255),b
 13542   0035D6                     l462:
 13543                           
 13544                           ;../event_consumerDualActionQueue.c: 191:             end = 1 -1;
 13545   0035D6  0E00               	movlw	0
 13546   0035D8  0102               	movlb	2	; () banked
 13547   0035DA  6FCC               	movwf	consumer2QProcessMessage@end& (0+255),b
 13548                           
 13549                           ; BSR set to: 2
 13550                           ;../event_consumerDualActionQueue.c: 193:             break;
 13551   0035DC  D040               	goto	l22940
 13552   0035DE                     l22938:
 13553                           
 13554                           ; BSR set to: 2
 13555   0035DE  0101               	movlb	1	; () banked
 13556   0035E0  EE20 F001          	lfsr	2,1
 13557   0035E4  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13558   0035E6  26D9               	addwf	fsr2l,f,c
 13559   0035E8  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13560   0035EA  22DA               	addwfc	fsr2h,f,c
 13561   0035EC  50DF               	movf	indf2,w,c
 13562   0035EE  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13563   0035F0  6BFC               	clrf	(??_consumer2QProcessMessage+1)& (0+255),b
 13564                           
 13565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13566                           ; Switch size 1, requested type "simple"
 13567                           ; Number of cases is 1, Range of values is 0 to 0
 13568                           ; switch strategies available:
 13569                           ; Name         Instructions Cycles
 13570                           ; simple_byte            4     3 (average)
 13571                           ;	Chosen strategy is simple_byte
 13572   0035F2  51FC               	movf	(??_consumer2QProcessMessage+1)& (0+255),w,b
 13573   0035F4  0A00               	xorlw	0	; case 0
 13574   0035F6  A4D8               	btfss	status,2,c
 13575   0035F8  D7C5               	goto	u24370
 13576                           
 13577                           ; BSR set to: 1
 13578                           ; Switch size 1, requested type "simple"
 13579                           ; Number of cases is 16, Range of values is 144 to 249
 13580                           ; switch strategies available:
 13581                           ; Name         Instructions Cycles
 13582                           ; simple_byte           49    25 (average)
 13583                           ;	Chosen strategy is simple_byte
 13584   0035FA  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13585   0035FC  0A90               	xorlw	144	; case 144
 13586   0035FE  B4D8               	btfsc	status,2,c
 13587   003600  D7DF               	goto	l453
 13588   003602  0A01               	xorlw	1	; case 145
 13589   003604  B4D8               	btfsc	status,2,c
 13590   003606  D7E7               	goto	l462
 13591   003608  0A09               	xorlw	9	; case 152
 13592   00360A  B4D8               	btfsc	status,2,c
 13593   00360C  D7D4               	goto	l448
 13594   00360E  0A01               	xorlw	1	; case 153
 13595   003610  B4D8               	btfsc	status,2,c
 13596   003612  D7DC               	goto	l457
 13597   003614  0A29               	xorlw	41	; case 176
 13598   003616  B4D8               	btfsc	status,2,c
 13599   003618  D7D3               	goto	l453
 13600   00361A  0A01               	xorlw	1	; case 177
 13601   00361C  B4D8               	btfsc	status,2,c
 13602   00361E  D7DB               	goto	l462
 13603   003620  0A09               	xorlw	9	; case 184
 13604   003622  B4D8               	btfsc	status,2,c
 13605   003624  D7C8               	goto	l448
 13606   003626  0A01               	xorlw	1	; case 185
 13607   003628  B4D8               	btfsc	status,2,c
 13608   00362A  D7D0               	goto	l457
 13609   00362C  0A69               	xorlw	105	; case 208
 13610   00362E  B4D8               	btfsc	status,2,c
 13611   003630  D7C7               	goto	l453
 13612   003632  0A01               	xorlw	1	; case 209
 13613   003634  B4D8               	btfsc	status,2,c
 13614   003636  D7CF               	goto	l462
 13615   003638  0A09               	xorlw	9	; case 216
 13616   00363A  B4D8               	btfsc	status,2,c
 13617   00363C  D7BC               	goto	l448
 13618   00363E  0A01               	xorlw	1	; case 217
 13619   003640  B4D8               	btfsc	status,2,c
 13620   003642  D7C4               	goto	l457
 13621   003644  0A29               	xorlw	41	; case 240
 13622   003646  B4D8               	btfsc	status,2,c
 13623   003648  D7BB               	goto	l453
 13624   00364A  0A01               	xorlw	1	; case 241
 13625   00364C  B4D8               	btfsc	status,2,c
 13626   00364E  D7C3               	goto	l462
 13627   003650  0A09               	xorlw	9	; case 248
 13628   003652  B4D8               	btfsc	status,2,c
 13629   003654  D7B0               	goto	l448
 13630   003656  0A01               	xorlw	1	; case 249
 13631   003658  B4D8               	btfsc	status,2,c
 13632   00365A  D7B8               	goto	l457
 13633   00365C  D793               	goto	u24370
 13634   00365E                     l22940:
 13635                           
 13636                           ; BSR set to: 2
 13637                           ;../event_consumerDualActionQueue.c: 199:     tableIndex = findEvent(enn, ((uint16_t)m->
      +                          bytes[2])*256+m->bytes[3]);
 13638   00365E  C2CF  F1BA         	movff	consumer2QProcessMessage@enn,findEvent@nodeNumber
 13639   003662  C2D0  F1BB         	movff	consumer2QProcessMessage@enn+1,findEvent@nodeNumber+1
 13640   003666  0101               	movlb	1	; () banked
 13641   003668  EE20 F005          	lfsr	2,5
 13642   00366C  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13643   00366E  26D9               	addwf	fsr2l,f,c
 13644   003670  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13645   003672  22DA               	addwfc	fsr2h,f,c
 13646   003674  50DF               	movf	indf2,w,c
 13647   003676  6FFB               	movwf	??_consumer2QProcessMessage& (0+255),b
 13648   003678  EE20 F004          	lfsr	2,4
 13649   00367C  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13650   00367E  26D9               	addwf	fsr2l,f,c
 13651   003680  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13652   003682  22DA               	addwfc	fsr2h,f,c
 13653   003684  50DF               	movf	indf2,w,c
 13654   003686  6FFC               	movwf	(??_consumer2QProcessMessage+1)& (0+255),b
 13655   003688  51FB               	movf	??_consumer2QProcessMessage& (0+255),w,b
 13656   00368A  6FBC               	movwf	findEvent@eventNumber& (0+255),b
 13657   00368C  C1FC  F1BD         	movff	??_consumer2QProcessMessage+1,findEvent@eventNumber+1
 13658   003690  EC42  F051         	call	_findEvent	;wreg free
 13659   003694  0102               	movlb	2	; () banked
 13660   003696  6FD1               	movwf	consumer2QProcessMessage@tableIndex& (0+255),b
 13661                           
 13662                           ; BSR set to: 2
 13663                           ;../event_consumerDualActionQueue.c: 200:     if (tableIndex == 0xff) return NOT_PROCESS
      +                          ED;
 13664   003698  29D1               	incf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13665   00369A  B4D8               	btfsc	status,2,c
 13666   00369C  D773               	goto	u24370
 13667                           
 13668                           ; BSR set to: 2
 13669   00369E  51D1               	movf	consumer2QProcessMessage@tableIndex& (0+255),w,b
 13670   0036A0  ECB2  F040         	call	_getEVs
 13671                           
 13672                           ;../event_consumerDualActionQueue.c: 208:     opc=m->opc;
 13673   0036A4  0101               	movlb	1	; () banked
 13674   0036A6  EE20 F001          	lfsr	2,1
 13675   0036AA  51F9               	movf	consumer2QProcessMessage@m& (0+255),w,b
 13676   0036AC  26D9               	addwf	fsr2l,f,c
 13677   0036AE  51FA               	movf	(consumer2QProcessMessage@m+1)& (0+255),w,b
 13678   0036B0  22DA               	addwfc	fsr2h,f,c
 13679   0036B2  50DF               	movf	indf2,w,c
 13680   0036B4  0102               	movlb	2	; () banked
 13681   0036B6  6FCE               	movwf	consumer2QProcessMessage@opc& (0+255),b
 13682                           
 13683                           ; BSR set to: 2
 13684                           ;../event_consumerDualActionQueue.c: 210:     if ( ! (opc&0b00000001)) {
 13685   0036B8  B1CE               	btfsc	consumer2QProcessMessage@opc& (0+255),0,b
 13686   0036BA  D07F               	goto	l465
 13687                           
 13688                           ; BSR set to: 2
 13689                           ;../event_consumerDualActionQueue.c: 214:         for (e=1; e<20 ;e++) {
 13690   0036BC  0E01               	movlw	1
 13691   0036BE  6FD8               	movwf	consumer2QProcessMessage@e& (0+255),b
 13692   0036C0                     l22960:
 13693                           
 13694                           ; BSR set to: 2
 13695                           ;../event_consumerDualActionQueue.c: 215:             action = evs[e];
 13696   0036C0  0E20               	movlw	low _evs
 13697   0036C2  25D8               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13698   0036C4  6ED9               	movwf	fsr2l,c
 13699   0036C6  6ADA               	clrf	fsr2h,c
 13700   0036C8  0E02               	movlw	high _evs
 13701   0036CA  22DA               	addwfc	fsr2h,f,c
 13702   0036CC  50DF               	movf	indf2,w,c
 13703   0036CE  6FD9               	movwf	consumer2QProcessMessage@action& (0+255),b
 13704                           
 13705                           ; BSR set to: 2
 13706                           ;../event_consumerDualActionQueue.c: 216:             if (action != 0) {
 13707   0036D0  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13708   0036D2  B4D8               	btfsc	status,2,c
 13709   0036D4  D06C               	goto	l469
 13710                           
 13711                           ; BSR set to: 2
 13712                           ;../event_consumerDualActionQueue.c: 218:                 masked_action = action&0x7F;
 13713   0036D6  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13714   0036D8  0B7F               	andlw	127
 13715   0036DA  6FD6               	movwf	consumer2QProcessMessage@masked_action& (0+255),b
 13716                           
 13717                           ;../event_consumerDualActionQueue.c: 219:                 if ((masked_action) <= (8 + 5 
      +                          * 16)) {
 13718   0036DC  0E59               	movlw	89
 13719   0036DE  61D6               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13720   0036E0  D066               	goto	l469
 13721                           
 13722                           ; BSR set to: 2
 13723                           ;../event_consumerDualActionQueue.c: 221:                     if ((masked_action) == 7) 
      +                          {
 13724   0036E2  0E07               	movlw	7
 13725   0036E4  19D6               	xorwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13726   0036E6  B4D8               	btfsc	status,2,c
 13727   0036E8  D106               	goto	u24590
 13728                           
 13729                           ; BSR set to: 2
 13730                           ;../event_consumerDualActionQueue.c: 224:                     if ((masked_action) < 8) {
 13731   0036EA  0E08               	movlw	8
 13732   0036EC  61D6               	cpfslt	consumer2QProcessMessage@masked_action& (0+255),b
 13733   0036EE  D004               	goto	l22974
 13734                           
 13735                           ; BSR set to: 2
 13736                           ;../event_consumerDualActionQueue.c: 225:                         pushTwoAction(action);
 13737   0036F0  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13738   0036F2  EC87  F059         	call	_pushTwoAction
 13739                           
 13740                           ;../event_consumerDualActionQueue.c: 226:                     } else {
 13741   0036F6  D05B               	goto	l469
 13742   0036F8                     l22974:
 13743                           
 13744                           ; BSR set to: 2
 13745                           ;../event_consumerDualActionQueue.c: 227:                         io = (((masked_action)
      +                          -8)/5);
 13746   0036F8  0EF8               	movlw	248
 13747   0036FA  25D6               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13748   0036FC  0100               	movlb	0	; () banked
 13749   0036FE  6F97               	movwf	___awdiv@dividend& (0+255),b
 13750   003700  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 13751   003702  0EFF               	movlw	255
 13752   003704  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 13753   003706  0E00               	movlw	0
 13754   003708  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 13755   00370A  0E05               	movlw	5
 13756   00370C  6F99               	movwf	___awdiv@divisor& (0+255),b
 13757   00370E  ECA3  F052         	call	___awdiv	;wreg free
 13758   003712  0100               	movlb	0	; () banked
 13759   003714  5197               	movf	?___awdiv& (0+255),w,b
 13760   003716  0102               	movlb	2	; () banked
 13761   003718  6FD5               	movwf	consumer2QProcessMessage@io& (0+255),b
 13762                           
 13763                           ;../event_consumerDualActionQueue.c: 228:                         ca = (((masked_action)
      +                          -8)%5);
 13764   00371A  0EF8               	movlw	248
 13765   00371C  25D6               	addwf	consumer2QProcessMessage@masked_action& (0+255),w,b
 13766   00371E  0100               	movlb	0	; () banked
 13767   003720  6F8D               	movwf	___awmod@dividend& (0+255),b
 13768   003722  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 13769   003724  0EFF               	movlw	255
 13770   003726  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 13771   003728  0E00               	movlw	0
 13772   00372A  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 13773   00372C  0E05               	movlw	5
 13774   00372E  6F8F               	movwf	___awmod@divisor& (0+255),b
 13775   003730  ECB8  F056         	call	___awmod	;wreg free
 13776   003734  0100               	movlb	0	; () banked
 13777   003736  518D               	movf	?___awmod& (0+255),w,b
 13778   003738  0102               	movlb	2	; () banked
 13779   00373A  6FD7               	movwf	consumer2QProcessMessage@ca& (0+255),b
 13780                           
 13781                           ;../event_consumerDualActionQueue.c: 229:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 13782   00373C  D020               	goto	l22996
 13783   00373E                     l22976:
 13784                           
 13785                           ; BSR set to: 0
 13786                           ;../event_consumerDualActionQueue.c: 234:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 13787   00373E  0102               	movlb	2	; () banked
 13788   003740  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13789   003742  0D07               	mullw	7
 13790   003744  50F3               	movf	243,w,c
 13791   003746  0F11               	addlw	17
 13792   003748  ECD9  F05D         	call	_getNV
 13793   00374C  0100               	movlb	0	; () banked
 13794   00374E  BF8D               	btfsc	?_getNV& (0+255),7,b
 13795                           
 13796                           ; BSR set to: 0
 13797                           ;../event_consumerDualActionQueue.c: 235:                                     setExpedit
      +                          edActions();
 13798   003750  EC91  F062         	call	_setExpeditedActions	;wreg free
 13799   003754                     l22980:
 13800                           
 13801                           ;../event_consumerDualActionQueue.c: 240:                                 if (ca == 0) {
 13802   003754  0102               	movlb	2	; () banked
 13803   003756  51D7               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 13804   003758  B4D8               	btfsc	status,2,c
 13805                           
 13806                           ; BSR set to: 2
 13807                           ;../event_consumerDualActionQueue.c: 242:                                     action++;
 13808   00375A  2BD9               	incf	consumer2QProcessMessage@action& (0+255),f,b
 13809                           
 13810                           ; BSR set to: 2
 13811                           ;../event_consumerDualActionQueue.c: 244:                                 if (ca == 4) {
 13812   00375C  0E04               	movlw	4
 13813   00375E  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 13814   003760  A4D8               	btfss	status,2,c
 13815   003762  D002               	goto	l22988
 13816                           
 13817                           ; BSR set to: 2
 13818                           ;../event_consumerDualActionQueue.c: 246:                                     action-=2;
 13819   003764  0E02               	movlw	2
 13820   003766  5FD9               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 13821   003768                     l22988:
 13822                           
 13823                           ; BSR set to: 2
 13824                           ;../event_consumerDualActionQueue.c: 248:                                 pushTwoAction(
      +                          action);
 13825   003768  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13826   00376A  EC87  F059         	call	_pushTwoAction
 13827                           
 13828                           ;../event_consumerDualActionQueue.c: 249:                                 setNormalActio
      +                          ns();
 13829   00376E  EC8E  F062         	call	_setNormalActions	;wreg free
 13830                           
 13831                           ;../event_consumerDualActionQueue.c: 250:                                 break;
 13832   003772  D01D               	goto	l469
 13833   003774                     l22992:
 13834                           
 13835                           ; BSR set to: 0
 13836                           ;../event_consumerDualActionQueue.c: 252:                                 pushTwoAction(
      +                          action);
 13837   003774  0102               	movlb	2	; () banked
 13838   003776  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13839   003778  EC87  F059         	call	_pushTwoAction
 13840                           
 13841                           ;../event_consumerDualActionQueue.c: 253:                                 break;
 13842   00377C  D018               	goto	l469
 13843   00377E                     l22996:
 13844                           
 13845                           ; BSR set to: 2
 13846   00377E  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 13847   003780  0D07               	mullw	7
 13848   003782  50F3               	movf	243,w,c
 13849   003784  0F10               	addlw	16
 13850   003786  ECD9  F05D         	call	_getNV
 13851                           
 13852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13853                           ; Switch size 1, requested type "simple"
 13854                           ; Number of cases is 1, Range of values is 0 to 0
 13855                           ; switch strategies available:
 13856                           ; Name         Instructions Cycles
 13857                           ; simple_byte            4     3 (average)
 13858                           ;	Chosen strategy is simple_byte
 13859   00378A  0100               	movlb	0	; () banked
 13860   00378C  518E               	movf	(?_getNV+1)& (0+255),w,b
 13861   00378E  0A00               	xorlw	0	; case 0
 13862   003790  A4D8               	btfss	status,2,c
 13863   003792  D00D               	goto	l469
 13864                           
 13865                           ; BSR set to: 0
 13866                           ; Switch size 1, requested type "simple"
 13867                           ; Number of cases is 4, Range of values is 1 to 4
 13868                           ; switch strategies available:
 13869                           ; Name         Instructions Cycles
 13870                           ; simple_byte           13     7 (average)
 13871                           ;	Chosen strategy is simple_byte
 13872   003794  518D               	movf	?_getNV& (0+255),w,b
 13873   003796  0A01               	xorlw	1	; case 1
 13874   003798  B4D8               	btfsc	status,2,c
 13875   00379A  D7D1               	goto	l22976
 13876   00379C  0A03               	xorlw	3	; case 2
 13877   00379E  B4D8               	btfsc	status,2,c
 13878   0037A0  D7D9               	goto	l22980
 13879   0037A2  0A01               	xorlw	1	; case 3
 13880   0037A4  B4D8               	btfsc	status,2,c
 13881   0037A6  D7D6               	goto	l22980
 13882   0037A8  0A07               	xorlw	7	; case 4
 13883   0037AA  B4D8               	btfsc	status,2,c
 13884   0037AC  D7E3               	goto	l22992
 13885   0037AE                     l469:
 13886                           
 13887                           ;../event_consumerDualActionQueue.c: 261:         }
 13888                           
 13889                           ; BSR set to: 0
 13890   0037AE  0102               	movlb	2	; () banked
 13891   0037B0  2BD8               	incf	consumer2QProcessMessage@e& (0+255),f,b
 13892                           
 13893                           ; BSR set to: 2
 13894   0037B2  0E13               	movlw	19
 13895   0037B4  65D8               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13896   0037B6  D784               	goto	l22960
 13897   0037B8  D09E               	goto	u24590
 13898   0037BA                     l465:
 13899                           
 13900                           ; BSR set to: 2
 13901                           ;../event_consumerDualActionQueue.c: 265:         uint8_t nextAction = evs[20 -1];
 13902   0037BA  C233  F2D2         	movff	_evs+19,consumer2QProcessMessage@nextAction
 13903                           
 13904                           ; BSR set to: 2
 13905                           ;../event_consumerDualActionQueue.c: 267:         for (e=20 -1; e>=1 ;e--) {
 13906   0037BE  0E13               	movlw	19
 13907   0037C0  6FD8               	movwf	consumer2QProcessMessage@e& (0+255),b
 13908   0037C2                     l23006:
 13909                           
 13910                           ; BSR set to: 2
 13911                           ;../event_consumerDualActionQueue.c: 268:             uint8_t nextSimultaneous;;../event
      +                          _consumerDualActionQueue.c: 269:             uint8_t firstAction = 0;
 13912   0037C2  0E00               	movlw	0
 13913   0037C4  6FD3               	movwf	consumer2QProcessMessage@firstAction& (0+255),b
 13914                           
 13915                           ; BSR set to: 2
 13916                           ;../event_consumerDualActionQueue.c: 270:             action = nextAction;
 13917   0037C6  C2D2  F2D9         	movff	consumer2QProcessMessage@nextAction,consumer2QProcessMessage@action
 13918                           
 13919                           ; BSR set to: 2
 13920                           ;../event_consumerDualActionQueue.c: 274:             if (e > 1) {
 13921   0037CA  0E01               	movlw	1
 13922   0037CC  65D8               	cpfsgt	consumer2QProcessMessage@e& (0+255),b
 13923   0037CE  D00A               	goto	l23016
 13924                           
 13925                           ; BSR set to: 2
 13926                           ;../event_consumerDualActionQueue.c: 275:                 nextAction = evs[e-1];
 13927   0037D0  0E1F               	movlw	low (_evs+65535)
 13928   0037D2  25D8               	addwf	consumer2QProcessMessage@e& (0+255),w,b
 13929   0037D4  6ED9               	movwf	fsr2l,c
 13930   0037D6  6ADA               	clrf	fsr2h,c
 13931   0037D8  0E02               	movlw	high (_evs+65535)
 13932   0037DA  22DA               	addwfc	fsr2h,f,c
 13933   0037DC  50DF               	movf	indf2,w,c
 13934   0037DE  6FD2               	movwf	consumer2QProcessMessage@nextAction& (0+255),b
 13935                           
 13936                           ; BSR set to: 2
 13937                           ;../event_consumerDualActionQueue.c: 276:                 nextSimultaneous = nextAction 
      +                          & 0x80;
 13938   0037E0  51D2               	movf	consumer2QProcessMessage@nextAction& (0+255),w,b
 13939   0037E2  D001               	goto	L3
 13940   0037E4                     l23016:
 13941                           
 13942                           ; BSR set to: 2
 13943                           ;../event_consumerDualActionQueue.c: 278:                 nextSimultaneous = firstAction
      +                           & 0x80;
 13944   0037E4  51D3               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13945   0037E6                     L3:
 13946   0037E6  0B80               	andlw	128
 13947   0037E8  6FD4               	movwf	consumer2QProcessMessage@nextSimultaneous& (0+255),b
 13948                           
 13949                           ; BSR set to: 2
 13950                           ;../event_consumerDualActionQueue.c: 280:             if (action != 0) {
 13951   0037EA  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 13952   0037EC  B4D8               	btfsc	status,2,c
 13953   0037EE  D07E               	goto	l490
 13954                           
 13955                           ; BSR set to: 2
 13956                           ;../event_consumerDualActionQueue.c: 282:                 if (firstAction == 0) {
 13957   0037F0  51D3               	movf	consumer2QProcessMessage@firstAction& (0+255),w,b
 13958   0037F2  B4D8               	btfsc	status,2,c
 13959                           
 13960                           ; BSR set to: 2
 13961                           ;../event_consumerDualActionQueue.c: 283:                     firstAction = action;
 13962   0037F4  C2D9  F2D3         	movff	consumer2QProcessMessage@action,consumer2QProcessMessage@firstAction
 13963                           
 13964                           ; BSR set to: 2
 13965                           ;../event_consumerDualActionQueue.c: 285:                 action &= 0x7F;
 13966   0037F8  9FD9               	bcf	consumer2QProcessMessage@action& (0+255),7,b
 13967                           
 13968                           ; BSR set to: 2
 13969                           ;../event_consumerDualActionQueue.c: 286:                 if (action <= (8 + 5 * 16)) {
 13970   0037FA  0E59               	movlw	89
 13971   0037FC  61D9               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13972   0037FE  D076               	goto	l490
 13973                           
 13974                           ; BSR set to: 2
 13975                           ;../event_consumerDualActionQueue.c: 288:                     if ((action) == 7) {
 13976   003800  0E07               	movlw	7
 13977   003802  19D9               	xorwf	consumer2QProcessMessage@action& (0+255),w,b
 13978   003804  B4D8               	btfsc	status,2,c
 13979   003806  D077               	goto	u24590
 13980                           
 13981                           ; BSR set to: 2
 13982                           ;../event_consumerDualActionQueue.c: 291:                     if ((action < 8) && (actio
      +                          n != 1)) {
 13983   003808  0E08               	movlw	8
 13984   00380A  61D9               	cpfslt	consumer2QProcessMessage@action& (0+255),b
 13985   00380C  D009               	goto	l23040
 13986                           
 13987                           ; BSR set to: 2
 13988   00380E  05D9               	decf	consumer2QProcessMessage@action& (0+255),w,b
 13989   003810  B4D8               	btfsc	status,2,c
 13990   003812  D006               	goto	l23040
 13991                           
 13992                           ; BSR set to: 2
 13993                           ;../event_consumerDualActionQueue.c: 292:                         action |= nextSimultan
      +                          eous;
 13994   003814  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 13995   003816  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 13996                           
 13997                           ; BSR set to: 2
 13998                           ;../event_consumerDualActionQueue.c: 293:                         pushTwoAction(action);
 13999   003818  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14000   00381A  EC87  F059         	call	_pushTwoAction
 14001                           
 14002                           ;../event_consumerDualActionQueue.c: 294:                     } else {
 14003   00381E  D066               	goto	l490
 14004   003820                     l23040:
 14005                           
 14006                           ; BSR set to: 2
 14007                           ;../event_consumerDualActionQueue.c: 295:                         io = (((action)-8)/5);
 14008   003820  0EF8               	movlw	248
 14009   003822  25D9               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14010   003824  0100               	movlb	0	; () banked
 14011   003826  6F97               	movwf	___awdiv@dividend& (0+255),b
 14012   003828  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 14013   00382A  0EFF               	movlw	255
 14014   00382C  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 14015   00382E  0E00               	movlw	0
 14016   003830  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 14017   003832  0E05               	movlw	5
 14018   003834  6F99               	movwf	___awdiv@divisor& (0+255),b
 14019   003836  ECA3  F052         	call	___awdiv	;wreg free
 14020   00383A  0100               	movlb	0	; () banked
 14021   00383C  5197               	movf	?___awdiv& (0+255),w,b
 14022   00383E  0102               	movlb	2	; () banked
 14023   003840  6FD5               	movwf	consumer2QProcessMessage@io& (0+255),b
 14024                           
 14025                           ;../event_consumerDualActionQueue.c: 296:                         ca = (((action)-8)%5);
 14026   003842  0EF8               	movlw	248
 14027   003844  25D9               	addwf	consumer2QProcessMessage@action& (0+255),w,b
 14028   003846  0100               	movlb	0	; () banked
 14029   003848  6F8D               	movwf	___awmod@dividend& (0+255),b
 14030   00384A  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 14031   00384C  0EFF               	movlw	255
 14032   00384E  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 14033   003850  0E00               	movlw	0
 14034   003852  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 14035   003854  0E05               	movlw	5
 14036   003856  6F8F               	movwf	___awmod@divisor& (0+255),b
 14037   003858  ECB8  F056         	call	___awmod	;wreg free
 14038   00385C  0100               	movlb	0	; () banked
 14039   00385E  518D               	movf	?___awmod& (0+255),w,b
 14040   003860  0102               	movlb	2	; () banked
 14041   003862  6FD7               	movwf	consumer2QProcessMessage@ca& (0+255),b
 14042                           
 14043                           ;../event_consumerDualActionQueue.c: 297:                         switch (getNV((16 + 7*
      +                          (io) + 0))) {
 14044   003864  D02B               	goto	l23068
 14045   003866                     l23042:
 14046                           
 14047                           ; BSR set to: 0
 14048                           ;../event_consumerDualActionQueue.c: 302:                                 if (getNV((16 
      +                          + 7*(io) + 1)) & 0x80) {
 14049   003866  0102               	movlb	2	; () banked
 14050   003868  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14051   00386A  0D07               	mullw	7
 14052   00386C  50F3               	movf	243,w,c
 14053   00386E  0F11               	addlw	17
 14054   003870  ECD9  F05D         	call	_getNV
 14055   003874  0100               	movlb	0	; () banked
 14056   003876  BF8D               	btfsc	?_getNV& (0+255),7,b
 14057                           
 14058                           ; BSR set to: 0
 14059                           ;../event_consumerDualActionQueue.c: 303:                                     setExpedit
      +                          edActions();
 14060   003878  EC91  F062         	call	_setExpeditedActions	;wreg free
 14061                           
 14062                           ;../event_consumerDualActionQueue.c: 305:                                 if (ca == 3) {
 14063   00387C  0E03               	movlw	3
 14064   00387E  0102               	movlb	2	; () banked
 14065   003880  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14066   003882  B4D8               	btfsc	status,2,c
 14067                           
 14068                           ; BSR set to: 2
 14069                           ;../event_consumerDualActionQueue.c: 307:                                     action--;
 14070   003884  07D9               	decf	consumer2QProcessMessage@action& (0+255),f,b
 14071   003886                     l23050:
 14072                           
 14073                           ;../event_consumerDualActionQueue.c: 312:                                 if (ca == 0) {
 14074   003886  0102               	movlb	2	; () banked
 14075   003888  51D7               	movf	consumer2QProcessMessage@ca& (0+255),w,b
 14076   00388A  A4D8               	btfss	status,2,c
 14077   00388C  D002               	goto	l500
 14078                           
 14079                           ; BSR set to: 2
 14080                           ;../event_consumerDualActionQueue.c: 314:                                     action += 
      +                          2;
 14081   00388E  0E02               	movlw	2
 14082   003890  27D9               	addwf	consumer2QProcessMessage@action& (0+255),f,b
 14083   003892                     l500:
 14084                           
 14085                           ; BSR set to: 2
 14086                           ;../event_consumerDualActionQueue.c: 316:                                 if (ca == 4) {
 14087   003892  0E04               	movlw	4
 14088   003894  19D7               	xorwf	consumer2QProcessMessage@ca& (0+255),w,b
 14089   003896  A4D8               	btfss	status,2,c
 14090   003898  D002               	goto	l501
 14091                           
 14092                           ; BSR set to: 2
 14093                           ;../event_consumerDualActionQueue.c: 318:                                     action -= 
      +                          3;
 14094   00389A  0E03               	movlw	3
 14095   00389C  5FD9               	subwf	consumer2QProcessMessage@action& (0+255),f,b
 14096   00389E                     l501:
 14097                           
 14098                           ; BSR set to: 2
 14099                           ;../event_consumerDualActionQueue.c: 320:                                 action |= next
      +                          Simultaneous;
 14100   00389E  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14101   0038A0  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14102                           
 14103                           ; BSR set to: 2
 14104                           ;../event_consumerDualActionQueue.c: 321:                                 pushTwoAction(
      +                          action);
 14105   0038A2  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14106   0038A4  EC87  F059         	call	_pushTwoAction
 14107   0038A8                     l23058:
 14108                           
 14109                           ;../event_consumerDualActionQueue.c: 322:                                 setNormalActio
      +                          ns();
 14110   0038A8  EC8E  F062         	call	_setNormalActions	;wreg free
 14111                           
 14112                           ;../event_consumerDualActionQueue.c: 323:                                 break;
 14113   0038AC  D01F               	goto	l490
 14114   0038AE                     l23060:
 14115                           
 14116                           ; BSR set to: 0
 14117                           ;../event_consumerDualActionQueue.c: 325:                                 action |= next
      +                          Simultaneous;
 14118   0038AE  0102               	movlb	2	; () banked
 14119   0038B0  51D4               	movf	consumer2QProcessMessage@nextSimultaneous& (0+255),w,b
 14120   0038B2  13D9               	iorwf	consumer2QProcessMessage@action& (0+255),f,b
 14121                           
 14122                           ; BSR set to: 2
 14123                           ;../event_consumerDualActionQueue.c: 326:                                 pushTwoAction(
      +                          action);
 14124   0038B4  51D9               	movf	consumer2QProcessMessage@action& (0+255),w,b
 14125   0038B6  EC87  F059         	call	_pushTwoAction
 14126   0038BA  D7F6               	goto	l23058
 14127   0038BC                     l23068:
 14128                           
 14129                           ; BSR set to: 2
 14130   0038BC  51D5               	movf	consumer2QProcessMessage@io& (0+255),w,b
 14131   0038BE  0D07               	mullw	7
 14132   0038C0  50F3               	movf	243,w,c
 14133   0038C2  0F10               	addlw	16
 14134   0038C4  ECD9  F05D         	call	_getNV
 14135                           
 14136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14137                           ; Switch size 1, requested type "simple"
 14138                           ; Number of cases is 1, Range of values is 0 to 0
 14139                           ; switch strategies available:
 14140                           ; Name         Instructions Cycles
 14141                           ; simple_byte            4     3 (average)
 14142                           ;	Chosen strategy is simple_byte
 14143   0038C8  0100               	movlb	0	; () banked
 14144   0038CA  518E               	movf	(?_getNV+1)& (0+255),w,b
 14145   0038CC  0A00               	xorlw	0	; case 0
 14146   0038CE  A4D8               	btfss	status,2,c
 14147   0038D0  D00D               	goto	l490
 14148                           
 14149                           ; BSR set to: 0
 14150                           ; Switch size 1, requested type "simple"
 14151                           ; Number of cases is 4, Range of values is 1 to 4
 14152                           ; switch strategies available:
 14153                           ; Name         Instructions Cycles
 14154                           ; simple_byte           13     7 (average)
 14155                           ;	Chosen strategy is simple_byte
 14156   0038D2  518D               	movf	?_getNV& (0+255),w,b
 14157   0038D4  0A01               	xorlw	1	; case 1
 14158   0038D6  B4D8               	btfsc	status,2,c
 14159   0038D8  D7C6               	goto	l23042
 14160   0038DA  0A03               	xorlw	3	; case 2
 14161   0038DC  B4D8               	btfsc	status,2,c
 14162   0038DE  D7D3               	goto	l23050
 14163   0038E0  0A01               	xorlw	1	; case 3
 14164   0038E2  B4D8               	btfsc	status,2,c
 14165   0038E4  D7D0               	goto	l23050
 14166   0038E6  0A07               	xorlw	7	; case 4
 14167   0038E8  B4D8               	btfsc	status,2,c
 14168   0038EA  D7E1               	goto	l23060
 14169   0038EC                     l490:
 14170                           
 14171                           ;../event_consumerDualActionQueue.c: 336:         }
 14172                           
 14173                           ; BSR set to: 0
 14174   0038EC  0102               	movlb	2	; () banked
 14175   0038EE  07D8               	decf	consumer2QProcessMessage@e& (0+255),f,b
 14176                           
 14177                           ; BSR set to: 2
 14178   0038F0  51D8               	movf	consumer2QProcessMessage@e& (0+255),w,b
 14179   0038F2  A4D8               	btfss	status,2,c
 14180   0038F4  D766               	goto	l23006
 14181   0038F6                     u24590:
 14182                           
 14183                           ; BSR set to: 2
 14184                           ;../event_consumerDualActionQueue.c: 339:     consumer2QDiagnostics[1].asUint++;
 14185   0038F6  0101               	movlb	1	; () banked
 14186   0038F8  4BB8               	infsnz	(_consumer2QDiagnostics+2)& (0+255),f,b
 14187   0038FA  2BB9               	incf	(_consumer2QDiagnostics+3)& (0+255),f,b
 14188                           
 14189                           ; BSR set to: 1
 14190                           ;../event_consumerDualActionQueue.c: 341:     return PROCESSED;
 14191   0038FC  0E01               	movlw	1
 14192   0038FE  0012               	return		;funcret
 14193   003900                     __end_of_consumer2QProcessMessage:
 14194                           	callstack 0
 14195                           
 14196 ;; *************** function _teachProcessMessage *****************
 14197 ;; Defined at:
 14198 ;;		line 381 in file "../../VLCBlib_PIC/event_teach_large.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;  m               2   63[BANK1 ] PTR struct Message
 14201 ;;		 -> poll@m(9), 
 14202 ;; Auto vars:     Size  Location     Type
 14203 ;;		None
 14204 ;; Return value:  Size  Location     Type
 14205 ;;                  1    wreg      enum E12793
 14206 ;; Registers used:
 14207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 14208 ;; Tracked objects:
 14209 ;;		On entry : 0/0
 14210 ;;		On exit  : 0/0
 14211 ;;		Unchanged: 0/0
 14212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14213 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14215 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14216 ;;      Totals:         0       0       2       6       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14217 ;;Total ram usage:        8 bytes
 14218 ;; Hardware stack levels used: 1
 14219 ;; Hardware stack levels required when called: 24
 14220 ;; This function calls:
 14221 ;;		_doEvlrn
 14222 ;;		_doEvuln
 14223 ;;		_doNenrd
 14224 ;;		_doNerd
 14225 ;;		_doNnclr
 14226 ;;		_doNnevn
 14227 ;;		_doReqev
 14228 ;;		_doReval
 14229 ;;		_doRqevn
 14230 ;;		_sendMessage3
 14231 ;;		_sendMessage5
 14232 ;;		_teachCheckLen
 14233 ;; This function is called by:
 14234 ;;		_poll
 14235 ;; This function uses a non-reentrant model
 14236 ;;
 14237                           
 14238                           	psect	text26
 14239   0021FE                     __ptext26:
 14240                           	callstack 0
 14241   0021FE                     _teachProcessMessage:
 14242                           	callstack 5
 14243                           
 14244                           ;../../VLCBlib_PIC/event_teach_large.c: 382:     switch(m->opc) {
 14245                           
 14246                           ;incstack = 0
 14247   0021FE  D318               	goto	l24478
 14248   002200                     l24212:
 14249                           
 14250                           ; BSR set to: 2
 14251                           ;../../VLCBlib_PIC/event_teach_large.c: 385:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14252   002200  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14253   002204  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14254   002208  0E03               	movlw	3
 14255   00220A  0101               	movlb	1	; () banked
 14256   00220C  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14257   00220E  0E00               	movlw	0
 14258   002210  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14259   002212  ECF7  F058         	call	_teachCheckLen	;wreg free
 14260   002216  06E8               	decf	wreg,f,c
 14261   002218  A4D8               	btfss	status,2,c
 14262   00221A  D002               	goto	l24218
 14263   00221C                     u25780:
 14264   00221C  0E01               	movlw	1
 14265   00221E  0012               	return	
 14266   002220                     l24218:
 14267                           
 14268                           ;../../VLCBlib_PIC/event_teach_large.c: 386:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14269   002220  0101               	movlb	1	; () banked
 14270   002222  EE20 F002          	lfsr	2,2
 14271   002226  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14272   002228  26D9               	addwf	fsr2l,f,c
 14273   00222A  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14274   00222C  22DA               	addwfc	fsr2h,f,c
 14275   00222E  50DE               	movf	postinc2,w,c
 14276   002230  0100               	movlb	0	; () banked
 14277   002232  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14278   002234  A4D8               	btfss	status,2,c
 14279   002236  D00F               	goto	l24224
 14280                           
 14281                           ; BSR set to: 0
 14282   002238  0101               	movlb	1	; () banked
 14283   00223A  EE20 F003          	lfsr	2,3
 14284   00223E  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14285   002240  26D9               	addwf	fsr2l,f,c
 14286   002242  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14287   002244  22DA               	addwfc	fsr2h,f,c
 14288   002246  0100               	movlb	0	; () banked
 14289   002248  51BF               	movf	_nn& (0+255),w,b
 14290   00224A  18DE               	xorwf	postinc2,w,c
 14291   00224C  A4D8               	btfss	status,2,c
 14292   00224E  D003               	goto	l24224
 14293   002250                     u25800:
 14294                           
 14295                           ;../../VLCBlib_PIC/event_teach_large.c: 387:                 mode_flags |= 1;
 14296   002250  0101               	movlb	1	; () banked
 14297   002252  8166               	bsf	_mode_flags& (0+255),0,b
 14298                           
 14299                           ;../../VLCBlib_PIC/event_teach_large.c: 388:             } else {
 14300   002254  D7E3               	goto	u25780
 14301   002256                     l24224:
 14302                           
 14303                           ;../../VLCBlib_PIC/event_teach_large.c: 389:                 mode_flags &= ~1;
 14304   002256  0101               	movlb	1	; () banked
 14305   002258  9166               	bcf	_mode_flags& (0+255),0,b
 14306   00225A  D7E0               	goto	u25780
 14307   00225C                     l24230:
 14308                           
 14309                           ; BSR set to: 2
 14310                           ;../../VLCBlib_PIC/event_teach_large.c: 394:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14311   00225C  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14312   002260  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14313   002264  0E04               	movlw	4
 14314   002266  0101               	movlb	1	; () banked
 14315   002268  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14316   00226A  0E00               	movlw	0
 14317   00226C  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14318   00226E  ECF7  F058         	call	_teachCheckLen	;wreg free
 14319   002272  06E8               	decf	wreg,f,c
 14320   002274  B4D8               	btfsc	status,2,c
 14321   002276  D7D2               	goto	u25780
 14322                           
 14323                           ;../../VLCBlib_PIC/event_teach_large.c: 395:             if ((m->bytes[0] == nn.bytes.hi
      +                          ) && (m->bytes[1] == nn.bytes.lo)) {
 14324   002278  0101               	movlb	1	; () banked
 14325   00227A  EE20 F002          	lfsr	2,2
 14326   00227E  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14327   002280  26D9               	addwf	fsr2l,f,c
 14328   002282  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14329   002284  22DA               	addwfc	fsr2h,f,c
 14330   002286  50DE               	movf	postinc2,w,c
 14331   002288  0100               	movlb	0	; () banked
 14332   00228A  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14333   00228C  A4D8               	btfss	status,2,c
 14334   00228E  D022               	goto	l24258
 14335                           
 14336                           ; BSR set to: 0
 14337   002290  0101               	movlb	1	; () banked
 14338   002292  EE20 F003          	lfsr	2,3
 14339   002296  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14340   002298  26D9               	addwf	fsr2l,f,c
 14341   00229A  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14342   00229C  22DA               	addwfc	fsr2h,f,c
 14343   00229E  0100               	movlb	0	; () banked
 14344   0022A0  51BF               	movf	_nn& (0+255),w,b
 14345   0022A2  18DE               	xorwf	postinc2,w,c
 14346   0022A4  A4D8               	btfss	status,2,c
 14347   0022A6  D016               	goto	l24258
 14348                           
 14349                           ; BSR set to: 0
 14350                           ;../../VLCBlib_PIC/event_teach_large.c: 396:                 if (m->bytes[2] == MODE_LEA
      +                          RN_ON) {
 14351   0022A8  0101               	movlb	1	; () banked
 14352   0022AA  EE20 F004          	lfsr	2,4
 14353   0022AE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14354   0022B0  26D9               	addwf	fsr2l,f,c
 14355   0022B2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14356   0022B4  22DA               	addwfc	fsr2h,f,c
 14357   0022B6  0E08               	movlw	8
 14358   0022B8  18DE               	xorwf	postinc2,w,c
 14359   0022BA  B4D8               	btfsc	status,2,c
 14360   0022BC  D7C9               	goto	u25800
 14361                           
 14362                           ; BSR set to: 1
 14363   0022BE  EE20 F004          	lfsr	2,4
 14364   0022C2  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14365   0022C4  26D9               	addwf	fsr2l,f,c
 14366   0022C6  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14367   0022C8  22DA               	addwfc	fsr2h,f,c
 14368   0022CA  0E09               	movlw	9
 14369   0022CC  18DE               	xorwf	postinc2,w,c
 14370   0022CE  B4D8               	btfsc	status,2,c
 14371   0022D0  D7C2               	goto	l24224
 14372   0022D2  D002               	goto	l24260
 14373   0022D4                     l24258:
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;../../VLCBlib_PIC/event_teach_large.c: 407:                 mode_flags &= ~1;
 14377   0022D4  0101               	movlb	1	; () banked
 14378   0022D6  9166               	bcf	_mode_flags& (0+255),0,b
 14379   0022D8                     l24260:
 14380                           
 14381                           ;../../VLCBlib_PIC/event_teach_large.c: 409:             return NOT_PROCESSED;
 14382   0022D8  0E00               	movlw	0
 14383   0022DA  0012               	return	
 14384   0022DC                     l24264:
 14385                           
 14386                           ; BSR set to: 2
 14387                           ;../../VLCBlib_PIC/event_teach_large.c: 413:             if (teachCheckLen(m, 7, 1) == P
      +                          ROCESSED) {
 14388   0022DC  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14389   0022E0  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14390   0022E4  0E07               	movlw	7
 14391   0022E6  0101               	movlb	1	; () banked
 14392   0022E8  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14393   0022EA  0E01               	movlw	1
 14394   0022EC  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14395   0022EE  ECF7  F058         	call	_teachCheckLen	;wreg free
 14396   0022F2  06E8               	decf	wreg,f,c
 14397   0022F4  A4D8               	btfss	status,2,c
 14398   0022F6  D00B               	goto	l2707
 14399                           
 14400                           ;../../VLCBlib_PIC/event_teach_large.c: 414:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_INV_CMD);
 14401   0022F8  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 14402   0022FC  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 14403   002300  0E01               	movlw	1
 14404   002302  0100               	movlb	0	; () banked
 14405   002304  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14406   002306  0E6F               	movlw	111
 14407   002308  ECC6  F05F         	call	_sendMessage3
 14408   00230C  D787               	goto	u25780
 14409   00230E                     l2707:
 14410                           
 14411                           ;../../VLCBlib_PIC/event_teach_large.c: 418:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14412   00230E  0101               	movlb	1	; () banked
 14413   002310  A166               	btfss	_mode_flags& (0+255),0,b
 14414   002312  D784               	goto	u25780
 14415                           
 14416                           ; BSR set to: 1
 14417                           ;../../VLCBlib_PIC/event_teach_large.c: 420:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4], m->bytes[5
      +                          ]);
 14418   002314  EE20 F003          	lfsr	2,3
 14419   002318  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14420   00231A  26D9               	addwf	fsr2l,f,c
 14421   00231C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14422   00231E  22DA               	addwfc	fsr2h,f,c
 14423   002320  50DF               	movf	indf2,w,c
 14424   002322  0102               	movlb	2	; () banked
 14425   002324  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14426   002326  0101               	movlb	1	; () banked
 14427   002328  EE20 F002          	lfsr	2,2
 14428   00232C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14429   00232E  26D9               	addwf	fsr2l,f,c
 14430   002330  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14431   002332  22DA               	addwfc	fsr2h,f,c
 14432   002334  50DF               	movf	indf2,w,c
 14433   002336  0102               	movlb	2	; () banked
 14434   002338  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14435   00233A  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14436   00233C  0101               	movlb	1	; () banked
 14437   00233E  6FEE               	movwf	doEvlrn@nodeNumber& (0+255),b
 14438   002340  C2CD  F1EF         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 14439   002344  EE20 F005          	lfsr	2,5
 14440   002348  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14441   00234A  26D9               	addwf	fsr2l,f,c
 14442   00234C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14443   00234E  22DA               	addwfc	fsr2h,f,c
 14444   002350  50DF               	movf	indf2,w,c
 14445   002352  0102               	movlb	2	; () banked
 14446   002354  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14447   002356  0101               	movlb	1	; () banked
 14448   002358  EE20 F004          	lfsr	2,4
 14449   00235C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14450   00235E  26D9               	addwf	fsr2l,f,c
 14451   002360  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14452   002362  22DA               	addwfc	fsr2h,f,c
 14453   002364  50DF               	movf	indf2,w,c
 14454   002366  0102               	movlb	2	; () banked
 14455   002368  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14456   00236A  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14457   00236C  0101               	movlb	1	; () banked
 14458   00236E  6FF0               	movwf	doEvlrn@eventNumber& (0+255),b
 14459   002370  C2D0  F1F1         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 14460   002374  EE20 F006          	lfsr	2,6
 14461   002378  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14462   00237A  26D9               	addwf	fsr2l,f,c
 14463   00237C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14464   00237E  22DA               	addwfc	fsr2h,f,c
 14465   002380  50DF               	movf	indf2,w,c
 14466   002382  6FF2               	movwf	doEvlrn@evNum& (0+255),b
 14467   002384  EE20 F007          	lfsr	2,7
 14468   002388  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14469   00238A  26D9               	addwf	fsr2l,f,c
 14470   00238C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14471   00238E  22DA               	addwfc	fsr2h,f,c
 14472   002390  50DF               	movf	indf2,w,c
 14473   002392  6FF3               	movwf	doEvlrn@evVal& (0+255),b
 14474   002394  EC81  F048         	call	_doEvlrn	;wreg free
 14475   002398  D741               	goto	u25780
 14476   00239A                     l24282:
 14477                           
 14478                           ; BSR set to: 2
 14479                           ;../../VLCBlib_PIC/event_teach_large.c: 423:             if (teachCheckLen(m, 5, 1) == P
      +                          ROCESSED) return PROCESSED;
 14480   00239A  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14481   00239E  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14482   0023A2  0E05               	movlw	5
 14483   0023A4  0101               	movlb	1	; () banked
 14484   0023A6  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14485   0023A8  0E01               	movlw	1
 14486   0023AA  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14487   0023AC  ECF7  F058         	call	_teachCheckLen	;wreg free
 14488   0023B0  06E8               	decf	wreg,f,c
 14489   0023B2  B4D8               	btfsc	status,2,c
 14490   0023B4  D733               	goto	u25780
 14491                           
 14492                           ;../../VLCBlib_PIC/event_teach_large.c: 424:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14493   0023B6  0101               	movlb	1	; () banked
 14494   0023B8  A166               	btfss	_mode_flags& (0+255),0,b
 14495   0023BA  D730               	goto	u25780
 14496                           
 14497                           ; BSR set to: 1
 14498                           ;../../VLCBlib_PIC/event_teach_large.c: 426:             doEvuln((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]));
 14499   0023BC  EE20 F003          	lfsr	2,3
 14500   0023C0  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14501   0023C2  26D9               	addwf	fsr2l,f,c
 14502   0023C4  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14503   0023C6  22DA               	addwfc	fsr2h,f,c
 14504   0023C8  50DF               	movf	indf2,w,c
 14505   0023CA  0102               	movlb	2	; () banked
 14506   0023CC  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14507   0023CE  0101               	movlb	1	; () banked
 14508   0023D0  EE20 F002          	lfsr	2,2
 14509   0023D4  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14510   0023D6  26D9               	addwf	fsr2l,f,c
 14511   0023D8  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14512   0023DA  22DA               	addwfc	fsr2h,f,c
 14513   0023DC  50DF               	movf	indf2,w,c
 14514   0023DE  0102               	movlb	2	; () banked
 14515   0023E0  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14516   0023E2  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14517   0023E4  0101               	movlb	1	; () banked
 14518   0023E6  6FCE               	movwf	doEvuln@nodeNumber& (0+255),b
 14519   0023E8  C2CD  F1CF         	movff	??_teachProcessMessage+1,doEvuln@nodeNumber+1
 14520   0023EC  EE20 F005          	lfsr	2,5
 14521   0023F0  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14522   0023F2  26D9               	addwf	fsr2l,f,c
 14523   0023F4  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14524   0023F6  22DA               	addwfc	fsr2h,f,c
 14525   0023F8  50DF               	movf	indf2,w,c
 14526   0023FA  0102               	movlb	2	; () banked
 14527   0023FC  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14528   0023FE  0101               	movlb	1	; () banked
 14529   002400  EE20 F004          	lfsr	2,4
 14530   002404  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14531   002406  26D9               	addwf	fsr2l,f,c
 14532   002408  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14533   00240A  22DA               	addwfc	fsr2h,f,c
 14534   00240C  50DF               	movf	indf2,w,c
 14535   00240E  0102               	movlb	2	; () banked
 14536   002410  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14537   002412  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14538   002414  0101               	movlb	1	; () banked
 14539   002416  6FD0               	movwf	doEvuln@eventNumber& (0+255),b
 14540   002418  C2D0  F1D1         	movff	??_teachProcessMessage+4,doEvuln@eventNumber+1
 14541   00241C  ECE5  F054         	call	_doEvuln	;wreg free
 14542   002420  D6FD               	goto	u25780
 14543   002422                     l24298:
 14544                           
 14545                           ; BSR set to: 2
 14546                           ;../../VLCBlib_PIC/event_teach_large.c: 429:             if (teachCheckLen(m, 6, 1) == P
      +                          ROCESSED) return PROCESSED;
 14547   002422  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14548   002426  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14549   00242A  0E06               	movlw	6
 14550   00242C  0101               	movlb	1	; () banked
 14551   00242E  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14552   002430  0E01               	movlw	1
 14553   002432  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14554   002434  ECF7  F058         	call	_teachCheckLen	;wreg free
 14555   002438  06E8               	decf	wreg,f,c
 14556   00243A  B4D8               	btfsc	status,2,c
 14557   00243C  D6EF               	goto	u25780
 14558                           
 14559                           ;../../VLCBlib_PIC/event_teach_large.c: 430:             if (! (mode_flags & 1)) return 
      +                          PROCESSED;
 14560   00243E  0101               	movlb	1	; () banked
 14561   002440  A166               	btfss	_mode_flags& (0+255),0,b
 14562   002442  D6EC               	goto	u25780
 14563                           
 14564                           ; BSR set to: 1
 14565                           ;../../VLCBlib_PIC/event_teach_large.c: 432:             doReqev((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[4]);
 14566   002444  EE20 F003          	lfsr	2,3
 14567   002448  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14568   00244A  26D9               	addwf	fsr2l,f,c
 14569   00244C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14570   00244E  22DA               	addwfc	fsr2h,f,c
 14571   002450  50DF               	movf	indf2,w,c
 14572   002452  0102               	movlb	2	; () banked
 14573   002454  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 14574   002456  0101               	movlb	1	; () banked
 14575   002458  EE20 F002          	lfsr	2,2
 14576   00245C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14577   00245E  26D9               	addwf	fsr2l,f,c
 14578   002460  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14579   002462  22DA               	addwfc	fsr2h,f,c
 14580   002464  50DF               	movf	indf2,w,c
 14581   002466  0102               	movlb	2	; () banked
 14582   002468  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 14583   00246A  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 14584   00246C  0101               	movlb	1	; () banked
 14585   00246E  6FC8               	movwf	doReqev@nodeNumber& (0+255),b
 14586   002470  C2CD  F1C9         	movff	??_teachProcessMessage+1,doReqev@nodeNumber+1
 14587   002474  EE20 F005          	lfsr	2,5
 14588   002478  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14589   00247A  26D9               	addwf	fsr2l,f,c
 14590   00247C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14591   00247E  22DA               	addwfc	fsr2h,f,c
 14592   002480  50DF               	movf	indf2,w,c
 14593   002482  0102               	movlb	2	; () banked
 14594   002484  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 14595   002486  0101               	movlb	1	; () banked
 14596   002488  EE20 F004          	lfsr	2,4
 14597   00248C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14598   00248E  26D9               	addwf	fsr2l,f,c
 14599   002490  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14600   002492  22DA               	addwfc	fsr2h,f,c
 14601   002494  50DF               	movf	indf2,w,c
 14602   002496  0102               	movlb	2	; () banked
 14603   002498  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 14604   00249A  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 14605   00249C  0101               	movlb	1	; () banked
 14606   00249E  6FCA               	movwf	doReqev@eventNumber& (0+255),b
 14607   0024A0  C2D0  F1CB         	movff	??_teachProcessMessage+4,doReqev@eventNumber+1
 14608   0024A4  EE20 F006          	lfsr	2,6
 14609   0024A8  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14610   0024AA  26D9               	addwf	fsr2l,f,c
 14611   0024AC  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14612   0024AE  22DA               	addwfc	fsr2h,f,c
 14613   0024B0  50DF               	movf	indf2,w,c
 14614   0024B2  6FCC               	movwf	doReqev@evNum& (0+255),b
 14615   0024B4  EC59  F03D         	call	_doReqev	;wreg free
 14616   0024B8  D6B1               	goto	u25780
 14617   0024BA                     l24314:
 14618                           
 14619                           ; BSR set to: 2
 14620                           ;../../VLCBlib_PIC/event_teach_large.c: 436:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14621   0024BA  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14622   0024BE  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14623   0024C2  0E03               	movlw	3
 14624   0024C4  0101               	movlb	1	; () banked
 14625   0024C6  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14626   0024C8  0E00               	movlw	0
 14627   0024CA  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14628   0024CC  ECF7  F058         	call	_teachCheckLen	;wreg free
 14629   0024D0  06E8               	decf	wreg,f,c
 14630   0024D2  B4D8               	btfsc	status,2,c
 14631   0024D4  D6A3               	goto	u25780
 14632                           
 14633                           ;../../VLCBlib_PIC/event_teach_large.c: 437:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14634   0024D6  0101               	movlb	1	; () banked
 14635   0024D8  EE20 F002          	lfsr	2,2
 14636   0024DC  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14637   0024DE  26D9               	addwf	fsr2l,f,c
 14638   0024E0  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14639   0024E2  22DA               	addwfc	fsr2h,f,c
 14640   0024E4  50DE               	movf	postinc2,w,c
 14641   0024E6  0100               	movlb	0	; () banked
 14642   0024E8  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14643   0024EA  A4D8               	btfss	status,2,c
 14644   0024EC  D697               	goto	u25780
 14645                           
 14646                           ; BSR set to: 0
 14647   0024EE  0101               	movlb	1	; () banked
 14648   0024F0  EE20 F003          	lfsr	2,3
 14649   0024F4  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14650   0024F6  26D9               	addwf	fsr2l,f,c
 14651   0024F8  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14652   0024FA  22DA               	addwfc	fsr2h,f,c
 14653   0024FC  0100               	movlb	0	; () banked
 14654   0024FE  51BF               	movf	_nn& (0+255),w,b
 14655   002500  18DE               	xorwf	postinc2,w,c
 14656   002502  A4D8               	btfss	status,2,c
 14657   002504  D68B               	goto	u25780
 14658   002506  D6A7               	goto	l24224
 14659   002508                     l24334:
 14660                           
 14661                           ; BSR set to: 2
 14662                           ;../../VLCBlib_PIC/event_teach_large.c: 442:             if (teachCheckLen(m, 3, 1) == P
      +                          ROCESSED) return PROCESSED;
 14663   002508  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14664   00250C  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14665   002510  0E03               	movlw	3
 14666   002512  0101               	movlb	1	; () banked
 14667   002514  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14668   002516  0E01               	movlw	1
 14669   002518  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14670   00251A  ECF7  F058         	call	_teachCheckLen	;wreg free
 14671   00251E  06E8               	decf	wreg,f,c
 14672   002520  B4D8               	btfsc	status,2,c
 14673   002522  D67C               	goto	u25780
 14674                           
 14675                           ;../../VLCBlib_PIC/event_teach_large.c: 443:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14676   002524  0101               	movlb	1	; () banked
 14677   002526  EE20 F002          	lfsr	2,2
 14678   00252A  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14679   00252C  26D9               	addwf	fsr2l,f,c
 14680   00252E  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14681   002530  22DA               	addwfc	fsr2h,f,c
 14682   002532  50DE               	movf	postinc2,w,c
 14683   002534  0100               	movlb	0	; () banked
 14684   002536  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14685   002538  A4D8               	btfss	status,2,c
 14686   00253A  D670               	goto	u25780
 14687                           
 14688                           ; BSR set to: 0
 14689   00253C  0101               	movlb	1	; () banked
 14690   00253E  EE20 F003          	lfsr	2,3
 14691   002542  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14692   002544  26D9               	addwf	fsr2l,f,c
 14693   002546  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14694   002548  22DA               	addwfc	fsr2h,f,c
 14695   00254A  0100               	movlb	0	; () banked
 14696   00254C  51BF               	movf	_nn& (0+255),w,b
 14697   00254E  18DE               	xorwf	postinc2,w,c
 14698   002550  A4D8               	btfss	status,2,c
 14699   002552  D664               	goto	u25780
 14700                           
 14701                           ; BSR set to: 0
 14702                           ;../../VLCBlib_PIC/event_teach_large.c: 445:             if (! (mode_flags & 1)) {
 14703   002554  0101               	movlb	1	; () banked
 14704   002556  B166               	btfsc	_mode_flags& (0+255),0,b
 14705   002558  D019               	goto	l24354
 14706                           
 14707                           ; BSR set to: 1
 14708                           ;../../VLCBlib_PIC/event_teach_large.c: 446:                 sendMessage3(OPC_CMDERR, nn
      +                          .bytes.hi, nn.bytes.lo, CMDERR_NOT_LRN);
 14709   00255A  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 14710   00255E  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 14711   002562  0E02               	movlw	2
 14712   002564  0100               	movlb	0	; () banked
 14713   002566  6FA8               	movwf	sendMessage3@data3& (0+255),b
 14714   002568  0E6F               	movlw	111
 14715   00256A  ECC6  F05F         	call	_sendMessage3
 14716                           
 14717                           ;../../VLCBlib_PIC/event_teach_large.c: 448:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, OPC_NNCLR, SERVICE_ID_OLD_TEACH, CMDERR_NOT_LRN);
 14718   00256E  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 14719   002572  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 14720   002576  0E55               	movlw	85
 14721   002578  0101               	movlb	1	; () banked
 14722   00257A  6FC4               	movwf	sendMessage5@data3& (0+255),b
 14723   00257C  0E04               	movlw	4
 14724   00257E  6FC5               	movwf	sendMessage5@data4& (0+255),b
 14725   002580  0E02               	movlw	2
 14726   002582  6FC6               	movwf	sendMessage5@data5& (0+255),b
 14727   002584  0EAF               	movlw	175
 14728   002586  EC68  F05F         	call	_sendMessage5
 14729   00258A  D648               	goto	u25780
 14730   00258C                     l24354:
 14731                           
 14732                           ; BSR set to: 1
 14733                           ;../../VLCBlib_PIC/event_teach_large.c: 453:             doNnclr();
 14734   00258C  EC08  F05F         	call	_doNnclr	;wreg free
 14735                           
 14736                           ;../../VLCBlib_PIC/event_teach_large.c: 454:             break;
 14737   002590  D6A3               	goto	l24260
 14738   002592                     l24356:
 14739                           
 14740                           ; BSR set to: 2
 14741                           ;../../VLCBlib_PIC/event_teach_large.c: 456:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14742   002592  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14743   002596  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14744   00259A  0E03               	movlw	3
 14745   00259C  0101               	movlb	1	; () banked
 14746   00259E  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14747   0025A0  0E00               	movlw	0
 14748   0025A2  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14749   0025A4  ECF7  F058         	call	_teachCheckLen	;wreg free
 14750   0025A8  06E8               	decf	wreg,f,c
 14751   0025AA  B4D8               	btfsc	status,2,c
 14752   0025AC  D637               	goto	u25780
 14753                           
 14754                           ;../../VLCBlib_PIC/event_teach_large.c: 457:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14755   0025AE  0101               	movlb	1	; () banked
 14756   0025B0  EE20 F002          	lfsr	2,2
 14757   0025B4  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14758   0025B6  26D9               	addwf	fsr2l,f,c
 14759   0025B8  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14760   0025BA  22DA               	addwfc	fsr2h,f,c
 14761   0025BC  50DE               	movf	postinc2,w,c
 14762   0025BE  0100               	movlb	0	; () banked
 14763   0025C0  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14764   0025C2  A4D8               	btfss	status,2,c
 14765   0025C4  D62B               	goto	u25780
 14766                           
 14767                           ; BSR set to: 0
 14768   0025C6  0101               	movlb	1	; () banked
 14769   0025C8  EE20 F003          	lfsr	2,3
 14770   0025CC  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14771   0025CE  26D9               	addwf	fsr2l,f,c
 14772   0025D0  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14773   0025D2  22DA               	addwfc	fsr2h,f,c
 14774   0025D4  0100               	movlb	0	; () banked
 14775   0025D6  51BF               	movf	_nn& (0+255),w,b
 14776   0025D8  18DE               	xorwf	postinc2,w,c
 14777   0025DA  A4D8               	btfss	status,2,c
 14778   0025DC  D61F               	goto	u25780
 14779                           
 14780                           ; BSR set to: 0
 14781                           ;../../VLCBlib_PIC/event_teach_large.c: 459:             doNerd();
 14782   0025DE  ECD7  F061         	call	_doNerd	;wreg free
 14783   0025E2  D61C               	goto	u25780
 14784   0025E4                     l24376:
 14785                           
 14786                           ; BSR set to: 2
 14787                           ;../../VLCBlib_PIC/event_teach_large.c: 462:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14788   0025E4  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14789   0025E8  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14790   0025EC  0E03               	movlw	3
 14791   0025EE  0101               	movlb	1	; () banked
 14792   0025F0  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14793   0025F2  0E00               	movlw	0
 14794   0025F4  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14795   0025F6  ECF7  F058         	call	_teachCheckLen	;wreg free
 14796   0025FA  06E8               	decf	wreg,f,c
 14797   0025FC  B4D8               	btfsc	status,2,c
 14798   0025FE  D60E               	goto	u25780
 14799                           
 14800                           ;../../VLCBlib_PIC/event_teach_large.c: 463:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14801   002600  0101               	movlb	1	; () banked
 14802   002602  EE20 F002          	lfsr	2,2
 14803   002606  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14804   002608  26D9               	addwf	fsr2l,f,c
 14805   00260A  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14806   00260C  22DA               	addwfc	fsr2h,f,c
 14807   00260E  50DE               	movf	postinc2,w,c
 14808   002610  0100               	movlb	0	; () banked
 14809   002612  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14810   002614  A4D8               	btfss	status,2,c
 14811   002616  D602               	goto	u25780
 14812                           
 14813                           ; BSR set to: 0
 14814   002618  0101               	movlb	1	; () banked
 14815   00261A  EE20 F003          	lfsr	2,3
 14816   00261E  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14817   002620  26D9               	addwf	fsr2l,f,c
 14818   002622  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14819   002624  22DA               	addwfc	fsr2h,f,c
 14820   002626  0100               	movlb	0	; () banked
 14821   002628  51BF               	movf	_nn& (0+255),w,b
 14822   00262A  18DE               	xorwf	postinc2,w,c
 14823   00262C  A4D8               	btfss	status,2,c
 14824   00262E  D5F6               	goto	u25780
 14825                           
 14826                           ; BSR set to: 0
 14827                           ;../../VLCBlib_PIC/event_teach_large.c: 465:             doNnevn();
 14828   002630  EC95  F057         	call	_doNnevn	;wreg free
 14829   002634  D5F3               	goto	u25780
 14830   002636                     l24396:
 14831                           
 14832                           ; BSR set to: 2
 14833                           ;../../VLCBlib_PIC/event_teach_large.c: 468:             if (teachCheckLen(m, 3, 0) == P
      +                          ROCESSED) return PROCESSED;
 14834   002636  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14835   00263A  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14836   00263E  0E03               	movlw	3
 14837   002640  0101               	movlb	1	; () banked
 14838   002642  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14839   002644  0E00               	movlw	0
 14840   002646  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14841   002648  ECF7  F058         	call	_teachCheckLen	;wreg free
 14842   00264C  06E8               	decf	wreg,f,c
 14843   00264E  B4D8               	btfsc	status,2,c
 14844   002650  D5E5               	goto	u25780
 14845                           
 14846                           ;../../VLCBlib_PIC/event_teach_large.c: 469:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14847   002652  0101               	movlb	1	; () banked
 14848   002654  EE20 F002          	lfsr	2,2
 14849   002658  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14850   00265A  26D9               	addwf	fsr2l,f,c
 14851   00265C  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14852   00265E  22DA               	addwfc	fsr2h,f,c
 14853   002660  50DE               	movf	postinc2,w,c
 14854   002662  0100               	movlb	0	; () banked
 14855   002664  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14856   002666  A4D8               	btfss	status,2,c
 14857   002668  D5D9               	goto	u25780
 14858                           
 14859                           ; BSR set to: 0
 14860   00266A  0101               	movlb	1	; () banked
 14861   00266C  EE20 F003          	lfsr	2,3
 14862   002670  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14863   002672  26D9               	addwf	fsr2l,f,c
 14864   002674  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14865   002676  22DA               	addwfc	fsr2h,f,c
 14866   002678  0100               	movlb	0	; () banked
 14867   00267A  51BF               	movf	_nn& (0+255),w,b
 14868   00267C  18DE               	xorwf	postinc2,w,c
 14869   00267E  A4D8               	btfss	status,2,c
 14870   002680  D5CD               	goto	u25780
 14871                           
 14872                           ; BSR set to: 0
 14873                           ;../../VLCBlib_PIC/event_teach_large.c: 471:             doRqevn();
 14874   002682  EC6D  F05E         	call	_doRqevn	;wreg free
 14875   002686  D5CA               	goto	u25780
 14876   002688                     l24416:
 14877                           
 14878                           ; BSR set to: 2
 14879                           ;../../VLCBlib_PIC/event_teach_large.c: 474:             if (teachCheckLen(m, 4, 0) == P
      +                          ROCESSED) return PROCESSED;
 14880   002688  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14881   00268C  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14882   002690  0E04               	movlw	4
 14883   002692  0101               	movlb	1	; () banked
 14884   002694  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14885   002696  0E00               	movlw	0
 14886   002698  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14887   00269A  ECF7  F058         	call	_teachCheckLen	;wreg free
 14888   00269E  06E8               	decf	wreg,f,c
 14889   0026A0  B4D8               	btfsc	status,2,c
 14890   0026A2  D5BC               	goto	u25780
 14891                           
 14892                           ;../../VLCBlib_PIC/event_teach_large.c: 475:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14893   0026A4  0101               	movlb	1	; () banked
 14894   0026A6  EE20 F002          	lfsr	2,2
 14895   0026AA  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14896   0026AC  26D9               	addwf	fsr2l,f,c
 14897   0026AE  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14898   0026B0  22DA               	addwfc	fsr2h,f,c
 14899   0026B2  50DE               	movf	postinc2,w,c
 14900   0026B4  0100               	movlb	0	; () banked
 14901   0026B6  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14902   0026B8  A4D8               	btfss	status,2,c
 14903   0026BA  D5B0               	goto	u25780
 14904                           
 14905                           ; BSR set to: 0
 14906   0026BC  0101               	movlb	1	; () banked
 14907   0026BE  EE20 F003          	lfsr	2,3
 14908   0026C2  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14909   0026C4  26D9               	addwf	fsr2l,f,c
 14910   0026C6  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14911   0026C8  22DA               	addwfc	fsr2h,f,c
 14912   0026CA  0100               	movlb	0	; () banked
 14913   0026CC  51BF               	movf	_nn& (0+255),w,b
 14914   0026CE  18DE               	xorwf	postinc2,w,c
 14915   0026D0  A4D8               	btfss	status,2,c
 14916   0026D2  D5A4               	goto	u25780
 14917                           
 14918                           ; BSR set to: 0
 14919                           ;../../VLCBlib_PIC/event_teach_large.c: 477:             doNenrd(m->bytes[2]);
 14920   0026D4  0101               	movlb	1	; () banked
 14921   0026D6  EE20 F004          	lfsr	2,4
 14922   0026DA  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14923   0026DC  26D9               	addwf	fsr2l,f,c
 14924   0026DE  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14925   0026E0  22DA               	addwfc	fsr2h,f,c
 14926   0026E2  50DF               	movf	indf2,w,c
 14927   0026E4  ECF1  F056         	call	_doNenrd
 14928   0026E8  D599               	goto	u25780
 14929   0026EA                     l24436:
 14930                           
 14931                           ; BSR set to: 2
 14932                           ;../../VLCBlib_PIC/event_teach_large.c: 480:             if (teachCheckLen(m, 5, 0) == P
      +                          ROCESSED) return PROCESSED;
 14933   0026EA  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14934   0026EE  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14935   0026F2  0E05               	movlw	5
 14936   0026F4  0101               	movlb	1	; () banked
 14937   0026F6  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14938   0026F8  0E00               	movlw	0
 14939   0026FA  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 14940   0026FC  ECF7  F058         	call	_teachCheckLen	;wreg free
 14941   002700  06E8               	decf	wreg,f,c
 14942   002702  B4D8               	btfsc	status,2,c
 14943   002704  D58B               	goto	u25780
 14944                           
 14945                           ;../../VLCBlib_PIC/event_teach_large.c: 481:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 14946   002706  0101               	movlb	1	; () banked
 14947   002708  EE20 F002          	lfsr	2,2
 14948   00270C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14949   00270E  26D9               	addwf	fsr2l,f,c
 14950   002710  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14951   002712  22DA               	addwfc	fsr2h,f,c
 14952   002714  50DE               	movf	postinc2,w,c
 14953   002716  0100               	movlb	0	; () banked
 14954   002718  19C0               	xorwf	(_nn+1)& (0+255),w,b
 14955   00271A  A4D8               	btfss	status,2,c
 14956   00271C  D57F               	goto	u25780
 14957                           
 14958                           ; BSR set to: 0
 14959   00271E  0101               	movlb	1	; () banked
 14960   002720  EE20 F003          	lfsr	2,3
 14961   002724  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14962   002726  26D9               	addwf	fsr2l,f,c
 14963   002728  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14964   00272A  22DA               	addwfc	fsr2h,f,c
 14965   00272C  0100               	movlb	0	; () banked
 14966   00272E  51BF               	movf	_nn& (0+255),w,b
 14967   002730  18DE               	xorwf	postinc2,w,c
 14968   002732  A4D8               	btfss	status,2,c
 14969   002734  D573               	goto	u25780
 14970                           
 14971                           ; BSR set to: 0
 14972                           ;../../VLCBlib_PIC/event_teach_large.c: 483:             doReval(m->bytes[2], m->bytes[3
      +                          ]);
 14973   002736  0101               	movlb	1	; () banked
 14974   002738  EE20 F005          	lfsr	2,5
 14975   00273C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14976   00273E  26D9               	addwf	fsr2l,f,c
 14977   002740  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14978   002742  22DA               	addwfc	fsr2h,f,c
 14979   002744  50DF               	movf	indf2,w,c
 14980   002746  6FC7               	movwf	doReval@evNum& (0+255),b
 14981   002748  EE20 F004          	lfsr	2,4
 14982   00274C  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 14983   00274E  26D9               	addwf	fsr2l,f,c
 14984   002750  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 14985   002752  22DA               	addwfc	fsr2h,f,c
 14986   002754  50DF               	movf	indf2,w,c
 14987   002756  ECA7  F049         	call	_doReval
 14988   00275A  D560               	goto	u25780
 14989   00275C                     l24456:
 14990                           
 14991                           ; BSR set to: 2
 14992                           ;../../VLCBlib_PIC/event_teach_large.c: 486:             if (teachCheckLen(m, 8, 1) == P
      +                          ROCESSED) return PROCESSED;
 14993   00275C  C1F9  F1CB         	movff	teachProcessMessage@m,teachCheckLen@m
 14994   002760  C1FA  F1CC         	movff	teachProcessMessage@m+1,teachCheckLen@m+1
 14995   002764  0E08               	movlw	8
 14996   002766  0101               	movlb	1	; () banked
 14997   002768  6FCD               	movwf	teachCheckLen@needed& (0+255),b
 14998   00276A  0E01               	movlw	1
 14999   00276C  6FCE               	movwf	teachCheckLen@learn& (0+255),b
 15000   00276E  ECF7  F058         	call	_teachCheckLen	;wreg free
 15001   002772  06E8               	decf	wreg,f,c
 15002   002774  B4D8               	btfsc	status,2,c
 15003   002776  D552               	goto	u25780
 15004                           
 15005                           ;../../VLCBlib_PIC/event_teach_large.c: 487:             if ((m->bytes[0] != nn.bytes.hi
      +                          ) || (m->bytes[1] != nn.bytes.lo)) return PROCESSED;
 15006   002778  0101               	movlb	1	; () banked
 15007   00277A  EE20 F002          	lfsr	2,2
 15008   00277E  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15009   002780  26D9               	addwf	fsr2l,f,c
 15010   002782  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15011   002784  22DA               	addwfc	fsr2h,f,c
 15012   002786  50DE               	movf	postinc2,w,c
 15013   002788  0100               	movlb	0	; () banked
 15014   00278A  19C0               	xorwf	(_nn+1)& (0+255),w,b
 15015   00278C  A4D8               	btfss	status,2,c
 15016   00278E  D546               	goto	u25780
 15017                           
 15018                           ; BSR set to: 0
 15019   002790  0101               	movlb	1	; () banked
 15020   002792  EE20 F003          	lfsr	2,3
 15021   002796  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15022   002798  26D9               	addwf	fsr2l,f,c
 15023   00279A  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15024   00279C  22DA               	addwfc	fsr2h,f,c
 15025   00279E  0100               	movlb	0	; () banked
 15026   0027A0  51BF               	movf	_nn& (0+255),w,b
 15027   0027A2  18DE               	xorwf	postinc2,w,c
 15028   0027A4  A4D8               	btfss	status,2,c
 15029   0027A6  D53A               	goto	u25780
 15030                           
 15031                           ; BSR set to: 0
 15032                           ;../../VLCBlib_PIC/event_teach_large.c: 489:             doEvlrn((uint16_t)(m->bytes[0]<
      +                          <8) | (m->bytes[1]), (uint16_t)(m->bytes[2]<<8) | (m->bytes[3]), m->bytes[5], m->bytes[6
      +                          ]);
 15033   0027A8  0101               	movlb	1	; () banked
 15034   0027AA  EE20 F003          	lfsr	2,3
 15035   0027AE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15036   0027B0  26D9               	addwf	fsr2l,f,c
 15037   0027B2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15038   0027B4  22DA               	addwfc	fsr2h,f,c
 15039   0027B6  50DF               	movf	indf2,w,c
 15040   0027B8  0102               	movlb	2	; () banked
 15041   0027BA  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15042   0027BC  0101               	movlb	1	; () banked
 15043   0027BE  EE20 F002          	lfsr	2,2
 15044   0027C2  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15045   0027C4  26D9               	addwf	fsr2l,f,c
 15046   0027C6  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15047   0027C8  22DA               	addwfc	fsr2h,f,c
 15048   0027CA  50DF               	movf	indf2,w,c
 15049   0027CC  0102               	movlb	2	; () banked
 15050   0027CE  6FCD               	movwf	(??_teachProcessMessage+1)& (0+255),b
 15051   0027D0  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15052   0027D2  0101               	movlb	1	; () banked
 15053   0027D4  6FEE               	movwf	doEvlrn@nodeNumber& (0+255),b
 15054   0027D6  C2CD  F1EF         	movff	??_teachProcessMessage+1,doEvlrn@nodeNumber+1
 15055   0027DA  EE20 F005          	lfsr	2,5
 15056   0027DE  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15057   0027E0  26D9               	addwf	fsr2l,f,c
 15058   0027E2  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15059   0027E4  22DA               	addwfc	fsr2h,f,c
 15060   0027E6  50DF               	movf	indf2,w,c
 15061   0027E8  0102               	movlb	2	; () banked
 15062   0027EA  6FCF               	movwf	(??_teachProcessMessage+3)& (0+255),b
 15063   0027EC  0101               	movlb	1	; () banked
 15064   0027EE  EE20 F004          	lfsr	2,4
 15065   0027F2  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15066   0027F4  26D9               	addwf	fsr2l,f,c
 15067   0027F6  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15068   0027F8  22DA               	addwfc	fsr2h,f,c
 15069   0027FA  50DF               	movf	indf2,w,c
 15070   0027FC  0102               	movlb	2	; () banked
 15071   0027FE  6FD0               	movwf	(??_teachProcessMessage+4)& (0+255),b
 15072   002800  51CF               	movf	(??_teachProcessMessage+3)& (0+255),w,b
 15073   002802  0101               	movlb	1	; () banked
 15074   002804  6FF0               	movwf	doEvlrn@eventNumber& (0+255),b
 15075   002806  C2D0  F1F1         	movff	??_teachProcessMessage+4,doEvlrn@eventNumber+1
 15076   00280A  EE20 F007          	lfsr	2,7
 15077   00280E  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15078   002810  26D9               	addwf	fsr2l,f,c
 15079   002812  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15080   002814  22DA               	addwfc	fsr2h,f,c
 15081   002816  50DF               	movf	indf2,w,c
 15082   002818  6FF2               	movwf	doEvlrn@evNum& (0+255),b
 15083   00281A  EE20 F008          	lfsr	2,8
 15084   00281E  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15085   002820  26D9               	addwf	fsr2l,f,c
 15086   002822  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15087   002824  22DA               	addwfc	fsr2h,f,c
 15088   002826  50DF               	movf	indf2,w,c
 15089   002828  6FF3               	movwf	doEvlrn@evVal& (0+255),b
 15090   00282A  EC81  F048         	call	_doEvlrn	;wreg free
 15091   00282E  D4F6               	goto	u25780
 15092   002830                     l24478:
 15093   002830  0101               	movlb	1	; () banked
 15094   002832  EE20 F001          	lfsr	2,1
 15095   002836  51F9               	movf	teachProcessMessage@m& (0+255),w,b
 15096   002838  26D9               	addwf	fsr2l,f,c
 15097   00283A  51FA               	movf	(teachProcessMessage@m+1)& (0+255),w,b
 15098   00283C  22DA               	addwfc	fsr2h,f,c
 15099   00283E  50DF               	movf	indf2,w,c
 15100   002840  0102               	movlb	2	; () banked
 15101   002842  6FCC               	movwf	??_teachProcessMessage& (0+255),b
 15102   002844  6BCD               	clrf	(??_teachProcessMessage+1)& (0+255),b
 15103                           
 15104                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15105                           ; Switch size 1, requested type "simple"
 15106                           ; Number of cases is 1, Range of values is 0 to 0
 15107                           ; switch strategies available:
 15108                           ; Name         Instructions Cycles
 15109                           ; simple_byte            4     3 (average)
 15110                           ;	Chosen strategy is simple_byte
 15111   002846  51CD               	movf	(??_teachProcessMessage+1)& (0+255),w,b
 15112   002848  0A00               	xorlw	0	; case 0
 15113   00284A  A4D8               	btfss	status,2,c
 15114   00284C  D545               	goto	l24260
 15115                           
 15116                           ; BSR set to: 2
 15117                           ; Switch size 1, requested type "simple"
 15118                           ; Number of cases is 13, Range of values is 83 to 245
 15119                           ; switch strategies available:
 15120                           ; Name         Instructions Cycles
 15121                           ; simple_byte           40    21 (average)
 15122                           ;	Chosen strategy is simple_byte
 15123   00284E  51CC               	movf	??_teachProcessMessage& (0+255),w,b
 15124   002850  0A53               	xorlw	83	; case 83
 15125   002852  B4D8               	btfsc	status,2,c
 15126   002854  D4D5               	goto	l24212
 15127   002856  0A07               	xorlw	7	; case 84
 15128   002858  B4D8               	btfsc	status,2,c
 15129   00285A  D62F               	goto	l24314
 15130   00285C  0A01               	xorlw	1	; case 85
 15131   00285E  B4D8               	btfsc	status,2,c
 15132   002860  D653               	goto	l24334
 15133   002862  0A03               	xorlw	3	; case 86
 15134   002864  B4D8               	btfsc	status,2,c
 15135   002866  D6BE               	goto	l24376
 15136   002868  0A01               	xorlw	1	; case 87
 15137   00286A  B4D8               	btfsc	status,2,c
 15138   00286C  D692               	goto	l24356
 15139   00286E  0A0F               	xorlw	15	; case 88
 15140   002870  B4D8               	btfsc	status,2,c
 15141   002872  D6E1               	goto	l24396
 15142   002874  0A2A               	xorlw	42	; case 114
 15143   002876  B4D8               	btfsc	status,2,c
 15144   002878  D707               	goto	l24416
 15145   00287A  0A04               	xorlw	4	; case 118
 15146   00287C  B4D8               	btfsc	status,2,c
 15147   00287E  D4EE               	goto	l24230
 15148   002880  0AE3               	xorlw	227	; case 149
 15149   002882  B4D8               	btfsc	status,2,c
 15150   002884  D58A               	goto	l24282
 15151   002886  0A09               	xorlw	9	; case 156
 15152   002888  B4D8               	btfsc	status,2,c
 15153   00288A  D72F               	goto	l24436
 15154   00288C  0A2E               	xorlw	46	; case 178
 15155   00288E  B4D8               	btfsc	status,2,c
 15156   002890  D5C8               	goto	l24298
 15157   002892  0A60               	xorlw	96	; case 210
 15158   002894  B4D8               	btfsc	status,2,c
 15159   002896  D522               	goto	l24264
 15160   002898  0A27               	xorlw	39	; case 245
 15161   00289A  B4D8               	btfsc	status,2,c
 15162   00289C  D75F               	goto	l24456
 15163   00289E  D51C               	goto	l24260
 15164   0028A0                     __end_of_teachProcessMessage:
 15165                           	callstack 0
 15166                           
 15167 ;; *************** function _teachCheckLen *****************
 15168 ;; Defined at:
 15169 ;;		line 504 in file "../../VLCBlib_PIC/event_teach_large.c"
 15170 ;; Parameters:    Size  Location     Type
 15171 ;;  m               2   17[BANK1 ] PTR struct Message
 15172 ;;		 -> poll@m(9), 
 15173 ;;  needed          1   19[BANK1 ] unsigned char 
 15174 ;;  learn           1   20[BANK1 ] unsigned char 
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;		None
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      enum E12793
 15179 ;; Registers used:
 15180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15186 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15188 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15189 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15190 ;;Total ram usage:        5 bytes
 15191 ;; Hardware stack levels used: 1
 15192 ;; Hardware stack levels required when called: 18
 15193 ;; This function calls:
 15194 ;;		_checkLen
 15195 ;;		_sendMessage5
 15196 ;; This function is called by:
 15197 ;;		_teachProcessMessage
 15198 ;; This function uses a non-reentrant model
 15199 ;;
 15200                           
 15201                           	psect	text27
 15202   00B1EE                     __ptext27:
 15203                           	callstack 0
 15204   00B1EE                     _teachCheckLen:
 15205                           	callstack 10
 15206                           
 15207                           ;../../VLCBlib_PIC/event_teach_large.c: 505:     if (learn) {
 15208                           
 15209                           ;incstack = 0
 15210   00B1EE  0101               	movlb	1	; () banked
 15211   00B1F0  51CE               	movf	teachCheckLen@learn& (0+255),w,b
 15212   00B1F2  B4D8               	btfsc	status,2,c
 15213   00B1F4  D021               	goto	l22348
 15214                           
 15215                           ; BSR set to: 1
 15216                           ;../../VLCBlib_PIC/event_teach_large.c: 507:         if (m->len < needed) {
 15217   00B1F6  C1CB  FFD9         	movff	teachCheckLen@m,fsr2l
 15218   00B1FA  C1CC  FFDA         	movff	teachCheckLen@m+1,fsr2h
 15219   00B1FE  51CD               	movf	teachCheckLen@needed& (0+255),w,b
 15220   00B200  5CDE               	subwf	postinc2,w,c
 15221   00B202  B0D8               	btfsc	status,0,c
 15222   00B204  D017               	goto	l22344
 15223                           
 15224                           ; BSR set to: 1
 15225                           ;../../VLCBlib_PIC/event_teach_large.c: 509:             if (mode_flags & 1) {
 15226   00B206  A166               	btfss	_mode_flags& (0+255),0,b
 15227   00B208  D013               	goto	l22340
 15228                           
 15229                           ; BSR set to: 1
 15230                           ;../../VLCBlib_PIC/event_teach_large.c: 512:                 sendMessage5(OPC_GRSP, nn.b
      +                          ytes.hi, nn.bytes.lo, m->opc, SERVICE_ID_OLD_TEACH, CMDERR_INV_CMD);
 15231   00B20A  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 15232   00B20E  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 15233   00B212  EE20 F001          	lfsr	2,1
 15234   00B216  51CB               	movf	teachCheckLen@m& (0+255),w,b
 15235   00B218  26D9               	addwf	fsr2l,f,c
 15236   00B21A  51CC               	movf	(teachCheckLen@m+1)& (0+255),w,b
 15237   00B21C  22DA               	addwfc	fsr2h,f,c
 15238   00B21E  50DF               	movf	indf2,w,c
 15239   00B220  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15240   00B222  0E04               	movlw	4
 15241   00B224  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15242   00B226  0E01               	movlw	1
 15243   00B228  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15244   00B22A  0EAF               	movlw	175
 15245   00B22C  EC68  F05F         	call	_sendMessage5
 15246   00B230                     l22340:
 15247                           
 15248                           ;../../VLCBlib_PIC/event_teach_large.c: 515:             return PROCESSED;
 15249   00B230  0E01               	movlw	1
 15250   00B232  0012               	return	
 15251   00B234                     l22344:
 15252                           
 15253                           ; BSR set to: 1
 15254                           ;../../VLCBlib_PIC/event_teach_large.c: 517:         return NOT_PROCESSED;
 15255   00B234  0E00               	movlw	0
 15256   00B236  0012               	return	
 15257   00B238                     l22348:
 15258                           
 15259                           ; BSR set to: 1
 15260                           ;../../VLCBlib_PIC/event_teach_large.c: 519:     return checkLen(m, needed, SERVICE_ID_O
      +                          LD_TEACH);
 15261   00B238  C1CB  F1C7         	movff	teachCheckLen@m,checkLen@m
 15262   00B23C  C1CC  F1C8         	movff	teachCheckLen@m+1,checkLen@m+1
 15263   00B240  C1CD  F1C9         	movff	teachCheckLen@needed,checkLen@needed
 15264   00B244  0E04               	movlw	4
 15265   00B246  6FCA               	movwf	checkLen@service& (0+255),b
 15266   00B248  ECAC  F053         	call	_checkLen	;wreg free
 15267   00B24C  0012               	return		;funcret
 15268   00B24E                     __end_of_teachCheckLen:
 15269                           	callstack 0
 15270                           
 15271 ;; *************** function _doRqevn *****************
 15272 ;; Defined at:
 15273 ;;		line 649 in file "../../VLCBlib_PIC/event_teach_large.c"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;		None
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;  i               1   10[BANK1 ] unsigned char 
 15278 ;;  count           1    9[BANK1 ] unsigned char 
 15279 ;; Return value:  Size  Location     Type
 15280 ;;                  1    wreg      void 
 15281 ;; Registers used:
 15282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15283 ;; Tracked objects:
 15284 ;;		On entry : 0/0
 15285 ;;		On exit  : 0/0
 15286 ;;		Unchanged: 0/0
 15287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15289 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15291 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15292 ;;Total ram usage:        2 bytes
 15293 ;; Hardware stack levels used: 1
 15294 ;; Hardware stack levels required when called: 17
 15295 ;; This function calls:
 15296 ;;		_sendMessage3
 15297 ;;		_validStart
 15298 ;; This function is called by:
 15299 ;;		_teachProcessMessage
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           	psect	text28
 15304   00BCDA                     __ptext28:
 15305                           	callstack 0
 15306   00BCDA                     _doRqevn:
 15307                           	callstack 11
 15308                           
 15309                           ;../../VLCBlib_PIC/event_teach_large.c: 651:     uint8_t count = 0;
 15310                           
 15311                           ;incstack = 0
 15312   00BCDA  0E00               	movlw	0
 15313   00BCDC  0101               	movlb	1	; () banked
 15314   00BCDE  6FC3               	movwf	doRqevn@count& (0+255),b
 15315                           
 15316                           ;../../VLCBlib_PIC/event_teach_large.c: 652:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 653:     for (i=0; i<255; i++) {
 15317   00BCE0  0E00               	movlw	0
 15318   00BCE2  6FC4               	movwf	doRqevn@i& (0+255),b
 15319   00BCE4                     l22452:
 15320                           
 15321                           ; BSR set to: 1
 15322                           ;../../VLCBlib_PIC/event_teach_large.c: 654:         if (validStart(i)) {
 15323   00BCE4  51C4               	movf	doRqevn@i& (0+255),w,b
 15324   00BCE6  ECC0  F05B         	call	_validStart
 15325   00BCEA  0900               	iorlw	0
 15326   00BCEC  B4D8               	btfsc	status,2,c
 15327   00BCEE  D002               	goto	l2803
 15328                           
 15329                           ;../../VLCBlib_PIC/event_teach_large.c: 655:             count++;
 15330   00BCF0  0101               	movlb	1	; () banked
 15331   00BCF2  2BC3               	incf	doRqevn@count& (0+255),f,b
 15332   00BCF4                     l2803:
 15333                           
 15334                           ;../../VLCBlib_PIC/event_teach_large.c: 657:     }
 15335   00BCF4  0101               	movlb	1	; () banked
 15336   00BCF6  2BC4               	incf	doRqevn@i& (0+255),f,b
 15337                           
 15338                           ; BSR set to: 1
 15339   00BCF8  29C4               	incf	doRqevn@i& (0+255),w,b
 15340   00BCFA  A4D8               	btfss	status,2,c
 15341   00BCFC  D7F3               	goto	l22452
 15342                           
 15343                           ; BSR set to: 1
 15344                           ;../../VLCBlib_PIC/event_teach_large.c: 658:     sendMessage3(OPC_NUMEV, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15345   00BCFE  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 15346   00BD02  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 15347   00BD06  C1C3  F0A8         	movff	doRqevn@count,sendMessage3@data3
 15348   00BD0A  0E74               	movlw	116
 15349   00BD0C  ECC6  F05F         	call	_sendMessage3
 15350   00BD10  0012               	return		;funcret
 15351   00BD12                     __end_of_doRqevn:
 15352                           	callstack 0
 15353                           
 15354 ;; *************** function _doReval *****************
 15355 ;; Defined at:
 15356 ;;		line 719 in file "../../VLCBlib_PIC/event_teach_large.c"
 15357 ;; Parameters:    Size  Location     Type
 15358 ;;  enNum           1    wreg     unsigned char 
 15359 ;;  evNum           1   13[BANK1 ] unsigned char 
 15360 ;; Auto vars:     Size  Location     Type
 15361 ;;  enNum           1   16[BANK1 ] unsigned char 
 15362 ;;  evVal           2   17[BANK1 ] int 
 15363 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 15364 ;;  evIndex         1   15[BANK1 ] unsigned char 
 15365 ;; Return value:  Size  Location     Type
 15366 ;;                  1    wreg      void 
 15367 ;; Registers used:
 15368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15369 ;; Tracked objects:
 15370 ;;		On entry : 0/0
 15371 ;;		On exit  : 0/0
 15372 ;;		Unchanged: 0/0
 15373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15374 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15375 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15376 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15377 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15378 ;;Total ram usage:        7 bytes
 15379 ;; Hardware stack levels used: 1
 15380 ;; Hardware stack levels required when called: 17
 15381 ;; This function calls:
 15382 ;;		_evtIdxToTableIndex
 15383 ;;		_getEv
 15384 ;;		_numEv
 15385 ;;		_sendMessage3
 15386 ;;		_sendMessage5
 15387 ;;		_validStart
 15388 ;; This function is called by:
 15389 ;;		_teachProcessMessage
 15390 ;; This function uses a non-reentrant model
 15391 ;;
 15392                           
 15393                           	psect	text29
 15394   00934E                     __ptext29:
 15395                           	callstack 0
 15396   00934E                     _doReval:
 15397                           	callstack 11
 15398                           
 15399                           ;incstack = 0
 15400                           ;doReval@enNum stored from wreg
 15401   00934E  0101               	movlb	1	; () banked
 15402   009350  6FCA               	movwf	doReval@enNum& (0+255),b
 15403                           
 15404                           ;../../VLCBlib_PIC/event_teach_large.c: 722:     uint8_t evIndex;;../../VLCBlib_PIC/even
      +                          t_teach_large.c: 723:     uint8_t tableIndex = evtIdxToTableIndex(enNum);
 15405   009352  0101               	movlb	1	; () banked
 15406   009354  51CA               	movf	doReval@enNum& (0+255),w,b
 15407   009356  EC74  F062         	call	_evtIdxToTableIndex
 15408   00935A  0101               	movlb	1	; () banked
 15409   00935C  6FCD               	movwf	doReval@tableIndex& (0+255),b
 15410                           
 15411                           ; BSR set to: 1
 15412                           ;../../VLCBlib_PIC/event_teach_large.c: 725:     if (evNum > 20) {
 15413   00935E  0E14               	movlw	20
 15414   009360  65C7               	cpfsgt	doReval@evNum& (0+255),b
 15415   009362  D00B               	goto	l22480
 15416                           
 15417                           ; BSR set to: 1
 15418                           ;../../VLCBlib_PIC/event_teach_large.c: 726:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15419   009364  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 15420   009368  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 15421   00936C  0E06               	movlw	6
 15422   00936E  0100               	movlb	0	; () banked
 15423   009370  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15424   009372  0E6F               	movlw	111
 15425   009374  ECC6  F05F         	call	_sendMessage3
 15426   009378  0012               	return	
 15427   00937A                     l22480:
 15428                           
 15429                           ; BSR set to: 1
 15430                           ;../../VLCBlib_PIC/event_teach_large.c: 730:     evIndex = evNum-1U;
 15431   00937A  05C7               	decf	doReval@evNum& (0+255),w,b
 15432   00937C  6FC9               	movwf	doReval@evIndex& (0+255),b
 15433                           
 15434                           ;../../VLCBlib_PIC/event_teach_large.c: 733:     if (tableIndex < 255) {
 15435   00937E  29CD               	incf	doReval@tableIndex& (0+255),w,b
 15436   009380  B4D8               	btfsc	status,2,c
 15437   009382  D039               	goto	l22500
 15438                           
 15439                           ; BSR set to: 1
 15440                           ;../../VLCBlib_PIC/event_teach_large.c: 734:         if (validStart(tableIndex)) {
 15441   009384  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15442   009386  ECC0  F05B         	call	_validStart
 15443   00938A  0900               	iorlw	0
 15444   00938C  B4D8               	btfsc	status,2,c
 15445   00938E  D033               	goto	l22500
 15446                           
 15447                           ;../../VLCBlib_PIC/event_teach_large.c: 735:             int evVal;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 736:             if (evNum == 0) {
 15448   009390  0101               	movlb	1	; () banked
 15449   009392  51C7               	movf	doReval@evNum& (0+255),w,b
 15450   009394  A4D8               	btfss	status,2,c
 15451   009396  D009               	goto	l22488
 15452                           
 15453                           ; BSR set to: 1
 15454                           ;../../VLCBlib_PIC/event_teach_large.c: 737:                 evVal = numEv(tableIndex);
 15455   009398  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15456   00939A  EC3F  F045         	call	_numEv
 15457   00939E  0101               	movlb	1	; () banked
 15458   0093A0  6FC8               	movwf	??_doReval& (0+255),b
 15459   0093A2  51C8               	movf	??_doReval& (0+255),w,b
 15460   0093A4  6FCB               	movwf	doReval@evVal& (0+255),b
 15461   0093A6  6BCC               	clrf	(doReval@evVal+1)& (0+255),b
 15462                           
 15463                           ;../../VLCBlib_PIC/event_teach_large.c: 738:             } else {
 15464   0093A8  D009               	goto	l22490
 15465   0093AA                     l22488:
 15466                           
 15467                           ; BSR set to: 1
 15468                           ;../../VLCBlib_PIC/event_teach_large.c: 739:                 evVal = getEv(tableIndex, e
      +                          vIndex);
 15469   0093AA  C1C9  F09D         	movff	doReval@evIndex,getEv@evNum
 15470   0093AE  51CD               	movf	doReval@tableIndex& (0+255),w,b
 15471   0093B0  EC04  F03C         	call	_getEv
 15472   0093B4  C09D  F1CB         	movff	?_getEv,doReval@evVal
 15473   0093B8  C09E  F1CC         	movff	?_getEv+1,doReval@evVal+1
 15474   0093BC                     l22490:
 15475                           
 15476                           ;../../VLCBlib_PIC/event_teach_large.c: 741:             if (evVal >= 0) {
 15477   0093BC  0101               	movlb	1	; () banked
 15478   0093BE  BFCC               	btfsc	(doReval@evVal+1)& (0+255),7,b
 15479   0093C0  D00E               	goto	l22496
 15480                           
 15481                           ; BSR set to: 1
 15482                           ;../../VLCBlib_PIC/event_teach_large.c: 742:                 sendMessage5(OPC_NEVAL, nn.
      +                          bytes.hi, nn.bytes.lo, enNum, evNum, (uint8_t)evVal);
 15483   0093C2  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 15484   0093C6  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 15485   0093CA  C1CA  F1C4         	movff	doReval@enNum,sendMessage5@data3
 15486   0093CE  C1C7  F1C5         	movff	doReval@evNum,sendMessage5@data4
 15487   0093D2  C1CB  F1C6         	movff	doReval@evVal,sendMessage5@data5
 15488   0093D6  0EB5               	movlw	181
 15489   0093D8  EC68  F05F         	call	_sendMessage5
 15490   0093DC  0012               	return	
 15491   0093DE                     l22496:
 15492                           
 15493                           ; BSR set to: 1
 15494                           ;../../VLCBlib_PIC/event_teach_large.c: 746:             sendMessage3(OPC_CMDERR, nn.byt
      +                          es.hi, nn.bytes.lo, (uint8_t)(-evVal));
 15495   0093DE  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 15496   0093E2  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 15497   0093E6  51CB               	movf	doReval@evVal& (0+255),w,b
 15498   0093E8  0800               	sublw	0
 15499   0093EA  0100               	movlb	0	; () banked
 15500   0093EC  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15501   0093EE  0E6F               	movlw	111
 15502   0093F0  ECC6  F05F         	call	_sendMessage3
 15503   0093F4  0012               	return	
 15504   0093F6                     l22500:
 15505                           
 15506                           ;../../VLCBlib_PIC/event_teach_large.c: 750:     sendMessage3(OPC_CMDERR, nn.bytes.hi, n
      +                          n.bytes.lo, CMDERR_INVALID_EVENT);
 15507   0093F6  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 15508   0093FA  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 15509   0093FE  0E07               	movlw	7
 15510   009400  0100               	movlb	0	; () banked
 15511   009402  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15512   009404  0E6F               	movlw	111
 15513   009406  ECC6  F05F         	call	_sendMessage3
 15514   00940A  0012               	return		;funcret
 15515   00940C                     __end_of_doReval:
 15516                           	callstack 0
 15517                           
 15518 ;; *************** function _doReqev *****************
 15519 ;; Defined at:
 15520 ;;		line 781 in file "../../VLCBlib_PIC/event_teach_large.c"
 15521 ;; Parameters:    Size  Location     Type
 15522 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15523 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15524 ;;  evNum           1   18[BANK1 ] unsigned char 
 15525 ;; Auto vars:     Size  Location     Type
 15526 ;;  evVal           2   19[BANK1 ] short 
 15527 ;;  tableIndex      1   21[BANK1 ] unsigned char 
 15528 ;; Return value:  Size  Location     Type
 15529 ;;                  1    wreg      void 
 15530 ;; Registers used:
 15531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15532 ;; Tracked objects:
 15533 ;;		On entry : 0/0
 15534 ;;		On exit  : 0/0
 15535 ;;		Unchanged: 0/0
 15536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15537 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15538 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15540 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15541 ;;Total ram usage:        8 bytes
 15542 ;; Hardware stack levels used: 1
 15543 ;; Hardware stack levels required when called: 17
 15544 ;; This function calls:
 15545 ;;		_findEvent
 15546 ;;		_findServiceIndex
 15547 ;;		_getEv
 15548 ;;		_numEv
 15549 ;;		_sendMessage3
 15550 ;;		_sendMessage5
 15551 ;;		_sendMessage6
 15552 ;;		_startTimedResponse
 15553 ;; This function is called by:
 15554 ;;		_teachProcessMessage
 15555 ;; This function uses a non-reentrant model
 15556 ;;
 15557                           
 15558                           	psect	text30
 15559   007AB2                     __ptext30:
 15560                           	callstack 0
 15561   007AB2                     _doReqev:
 15562                           	callstack 11
 15563                           
 15564                           ;../../VLCBlib_PIC/event_teach_large.c: 782:     int16_t evVal;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 784:     uint8_t tableIndex = findEvent(nodeNumber, eventNumber);
 15565                           
 15566                           ;incstack = 0
 15567   007AB2  C1C8  F1BA         	movff	doReqev@nodeNumber,findEvent@nodeNumber
 15568   007AB6  C1C9  F1BB         	movff	doReqev@nodeNumber+1,findEvent@nodeNumber+1
 15569   007ABA  C1CA  F1BC         	movff	doReqev@eventNumber,findEvent@eventNumber
 15570   007ABE  C1CB  F1BD         	movff	doReqev@eventNumber+1,findEvent@eventNumber+1
 15571   007AC2  EC42  F051         	call	_findEvent	;wreg free
 15572   007AC6  0101               	movlb	1	; () banked
 15573   007AC8  6FCF               	movwf	doReqev@tableIndex& (0+255),b
 15574                           
 15575                           ; BSR set to: 1
 15576                           ;../../VLCBlib_PIC/event_teach_large.c: 785:     if (tableIndex == 0xff) {
 15577   007ACA  29CF               	incf	doReqev@tableIndex& (0+255),w,b
 15578   007ACC  A4D8               	btfss	status,2,c
 15579   007ACE  D019               	goto	l22394
 15580                           
 15581                           ; BSR set to: 1
 15582                           ;../../VLCBlib_PIC/event_teach_large.c: 786:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INVALID_EVENT);
 15583   007AD0  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 15584   007AD4  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 15585   007AD8  0E07               	movlw	7
 15586   007ADA  0100               	movlb	0	; () banked
 15587   007ADC  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15588   007ADE  0E6F               	movlw	111
 15589   007AE0  ECC6  F05F         	call	_sendMessage3
 15590                           
 15591                           ;../../VLCBlib_PIC/event_teach_large.c: 788:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INVALID_EVENT);
 15592   007AE4  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 15593   007AE8  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 15594   007AEC  0EB2               	movlw	178
 15595   007AEE  0101               	movlb	1	; () banked
 15596   007AF0  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15597   007AF2  0E04               	movlw	4
 15598   007AF4  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15599   007AF6  0E07               	movlw	7
 15600   007AF8  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15601   007AFA  0EAF               	movlw	175
 15602   007AFC  EC68  F05F         	call	_sendMessage5
 15603   007B00  0012               	return	
 15604   007B02                     l22394:
 15605                           
 15606                           ; BSR set to: 1
 15607                           ;../../VLCBlib_PIC/event_teach_large.c: 792:     if (evNum > 20) {
 15608   007B02  0E14               	movlw	20
 15609   007B04  65CC               	cpfsgt	doReqev@evNum& (0+255),b
 15610   007B06  D019               	goto	l22400
 15611                           
 15612                           ; BSR set to: 1
 15613                           ;../../VLCBlib_PIC/event_teach_large.c: 793:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 15614   007B08  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 15615   007B0C  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 15616   007B10  0E06               	movlw	6
 15617   007B12  0100               	movlb	0	; () banked
 15618   007B14  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15619   007B16  0E6F               	movlw	111
 15620   007B18  ECC6  F05F         	call	_sendMessage3
 15621                           
 15622                           ;../../VLCBlib_PIC/event_teach_large.c: 795:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 15623   007B1C  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 15624   007B20  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 15625   007B24  0EB2               	movlw	178
 15626   007B26  0101               	movlb	1	; () banked
 15627   007B28  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15628   007B2A  0E04               	movlw	4
 15629   007B2C  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15630   007B2E  0E06               	movlw	6
 15631   007B30  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15632   007B32  0EAF               	movlw	175
 15633   007B34  EC68  F05F         	call	_sendMessage5
 15634   007B38  0012               	return	
 15635   007B3A                     l22400:
 15636                           
 15637                           ; BSR set to: 1
 15638                           ;../../VLCBlib_PIC/event_teach_large.c: 799:     if (evNum == 0) {
 15639   007B3A  51CC               	movf	doReqev@evNum& (0+255),w,b
 15640   007B3C  A4D8               	btfss	status,2,c
 15641   007B3E  D020               	goto	l22410
 15642                           
 15643                           ; BSR set to: 1
 15644                           ;../../VLCBlib_PIC/event_teach_large.c: 801:         sendMessage6(OPC_EVANS, nodeNumber>
      +                          >8, nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, 0, numEv(tableIndex));
 15645   007B40  51C9               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15646   007B42  6FC2               	movwf	sendMessage6@data1& (0+255),b
 15647   007B44  C1C8  F1C3         	movff	doReqev@nodeNumber,sendMessage6@data2
 15648   007B48  51CB               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15649   007B4A  6FC4               	movwf	sendMessage6@data3& (0+255),b
 15650   007B4C  C1CA  F1C5         	movff	doReqev@eventNumber,sendMessage6@data4
 15651   007B50  0E00               	movlw	0
 15652   007B52  6FC6               	movwf	sendMessage6@data5& (0+255),b
 15653   007B54  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15654   007B56  EC3F  F045         	call	_numEv
 15655   007B5A  0101               	movlb	1	; () banked
 15656   007B5C  6FC7               	movwf	sendMessage6@data6& (0+255),b
 15657   007B5E  0ED3               	movlw	211
 15658   007B60  EC20  F05F         	call	_sendMessage6
 15659                           
 15660                           ;../../VLCBlib_PIC/event_teach_large.c: 804:         startTimedResponse(tableIndex, find
      +                          ServiceIndex(SERVICE_ID_OLD_TEACH), reqevCallback);
 15661   007B64  0E04               	movlw	4
 15662   007B66  EC46  F056         	call	_findServiceIndex
 15663   007B6A  0100               	movlb	0	; () banked
 15664   007B6C  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15665   007B6E  0EE4               	movlw	low _reqevCallback
 15666   007B70  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15667   007B72  0E9D               	movlw	high _reqevCallback
 15668   007B74  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15669   007B76  0101               	movlb	1	; () banked
 15670   007B78  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15671   007B7A  EC9B  F05D         	call	_startTimedResponse
 15672   007B7E  0012               	return	
 15673   007B80                     l22410:
 15674                           
 15675                           ; BSR set to: 1
 15676                           ;../../VLCBlib_PIC/event_teach_large.c: 811:         evVal = getEv(tableIndex, evNum-1);
 15677   007B80  05CC               	decf	doReqev@evNum& (0+255),w,b
 15678   007B82  0100               	movlb	0	; () banked
 15679   007B84  6F9D               	movwf	getEv@evNum& (0+255),b
 15680   007B86  0101               	movlb	1	; () banked
 15681   007B88  51CF               	movf	doReqev@tableIndex& (0+255),w,b
 15682   007B8A  EC04  F03C         	call	_getEv
 15683   007B8E  C09D  F1CD         	movff	?_getEv,doReqev@evVal
 15684   007B92  C09E  F1CE         	movff	?_getEv+1,doReqev@evVal+1
 15685                           
 15686                           ;../../VLCBlib_PIC/event_teach_large.c: 813:     if (evVal < 0) {
 15687   007B96  0101               	movlb	1	; () banked
 15688   007B98  AFCE               	btfss	(doReqev@evVal+1)& (0+255),7,b
 15689   007B9A  D01B               	goto	l22418
 15690                           
 15691                           ; BSR set to: 1
 15692                           ;../../VLCBlib_PIC/event_teach_large.c: 815:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, (uint8_t)(-evVal));
 15693   007B9C  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 15694   007BA0  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 15695   007BA4  51CD               	movf	doReqev@evVal& (0+255),w,b
 15696   007BA6  0800               	sublw	0
 15697   007BA8  0100               	movlb	0	; () banked
 15698   007BAA  6FA8               	movwf	sendMessage3@data3& (0+255),b
 15699   007BAC  0E6F               	movlw	111
 15700   007BAE  ECC6  F05F         	call	_sendMessage3
 15701                           
 15702                           ;../../VLCBlib_PIC/event_teach_large.c: 817:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, (uint8_t)(-evVal));
 15703   007BB2  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 15704   007BB6  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 15705   007BBA  0EB2               	movlw	178
 15706   007BBC  0101               	movlb	1	; () banked
 15707   007BBE  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15708   007BC0  0E04               	movlw	4
 15709   007BC2  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15710   007BC4  51CD               	movf	doReqev@evVal& (0+255),w,b
 15711   007BC6  0800               	sublw	0
 15712   007BC8  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15713   007BCA  0EAF               	movlw	175
 15714   007BCC  EC68  F05F         	call	_sendMessage5
 15715   007BD0  0012               	return	
 15716   007BD2                     l22418:
 15717                           
 15718                           ; BSR set to: 1
 15719                           ;../../VLCBlib_PIC/event_teach_large.c: 822:     sendMessage6(OPC_EVANS, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, evNum, (uint8_t)evVal);
 15720   007BD2  51C9               	movf	(doReqev@nodeNumber+1)& (0+255),w,b
 15721   007BD4  6FC2               	movwf	sendMessage6@data1& (0+255),b
 15722   007BD6  C1C8  F1C3         	movff	doReqev@nodeNumber,sendMessage6@data2
 15723   007BDA  51CB               	movf	(doReqev@eventNumber+1)& (0+255),w,b
 15724   007BDC  6FC4               	movwf	sendMessage6@data3& (0+255),b
 15725   007BDE  C1CA  F1C5         	movff	doReqev@eventNumber,sendMessage6@data4
 15726   007BE2  C1CC  F1C6         	movff	doReqev@evNum,sendMessage6@data5
 15727   007BE6  C1CD  F1C7         	movff	doReqev@evVal,sendMessage6@data6
 15728   007BEA  0ED3               	movlw	211
 15729   007BEC  EC20  F05F         	call	_sendMessage6
 15730   007BF0  0012               	return		;funcret
 15731   007BF2                     __end_of_doReqev:
 15732                           	callstack 0
 15733                           
 15734 ;; *************** function _doNnevn *****************
 15735 ;; Defined at:
 15736 ;;		line 574 in file "../../VLCBlib_PIC/event_teach_large.c"
 15737 ;; Parameters:    Size  Location     Type
 15738 ;;		None
 15739 ;; Auto vars:     Size  Location     Type
 15740 ;;  f               1   13[BANK1 ] struct .
 15741 ;;  i               1   15[BANK1 ] unsigned char 
 15742 ;;  count           1   14[BANK1 ] unsigned char 
 15743 ;; Return value:  Size  Location     Type
 15744 ;;                  1    wreg      void 
 15745 ;; Registers used:
 15746 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15747 ;; Tracked objects:
 15748 ;;		On entry : 0/0
 15749 ;;		On exit  : 0/0
 15750 ;;		Unchanged: 0/0
 15751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15754 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15755 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15756 ;;Total ram usage:        7 bytes
 15757 ;; Hardware stack levels used: 1
 15758 ;; Hardware stack levels required when called: 17
 15759 ;; This function calls:
 15760 ;;		_readNVM
 15761 ;;		_sendMessage3
 15762 ;; This function is called by:
 15763 ;;		_teachProcessMessage
 15764 ;; This function uses a non-reentrant model
 15765 ;;
 15766                           
 15767                           	psect	text31
 15768   00AF2A                     __ptext31:
 15769                           	callstack 0
 15770   00AF2A                     _doNnevn:
 15771                           	callstack 11
 15772                           
 15773                           ;../../VLCBlib_PIC/event_teach_large.c: 576:     uint8_t count = 0;
 15774                           
 15775                           ;incstack = 0
 15776   00AF2A  0E00               	movlw	0
 15777   00AF2C  0101               	movlb	1	; () banked
 15778   00AF2E  6FC8               	movwf	doNnevn@count& (0+255),b
 15779                           
 15780                           ;../../VLCBlib_PIC/event_teach_large.c: 577:     uint8_t i;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 578:     for (i=0; i<255; i++) {
 15781   00AF30  0E00               	movlw	0
 15782   00AF32  6FC9               	movwf	doNnevn@i& (0+255),b
 15783   00AF34                     l22436:
 15784                           
 15785                           ; BSR set to: 1
 15786                           ;../../VLCBlib_PIC/event_teach_large.c: 579:         EventTableFlags f;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 580:         f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 +
      +                           16*i+0);
 15787   00AF34  51C9               	movf	doNnevn@i& (0+255),w,b
 15788   00AF36  6FC3               	movwf	??_doNnevn& (0+255),b
 15789   00AF38  6BC4               	clrf	(??_doNnevn+1)& (0+255),b
 15790   00AF3A  3BC3               	swapf	??_doNnevn& (0+255),f,b
 15791   00AF3C  3BC4               	swapf	(??_doNnevn+1)& (0+255),f,b
 15792   00AF3E  0EF0               	movlw	240
 15793   00AF40  17C4               	andwf	(??_doNnevn+1)& (0+255),f,b
 15794   00AF42  51C3               	movf	??_doNnevn& (0+255),w,b
 15795   00AF44  0B0F               	andlw	15
 15796   00AF46  13C4               	iorwf	(??_doNnevn+1)& (0+255),f,b
 15797   00AF48  0EF0               	movlw	240
 15798   00AF4A  17C3               	andwf	??_doNnevn& (0+255),f,b
 15799   00AF4C  0E80               	movlw	128
 15800   00AF4E  25C3               	addwf	??_doNnevn& (0+255),w,b
 15801   00AF50  6FC5               	movwf	(??_doNnevn+2)& (0+255),b
 15802   00AF52  0EEF               	movlw	239
 15803   00AF54  21C4               	addwfc	(??_doNnevn+1)& (0+255),w,b
 15804   00AF56  6FC6               	movwf	(??_doNnevn+3)& (0+255),b
 15805   00AF58  C1C5  F091         	movff	??_doNnevn+2,readNVM@index
 15806   00AF5C  C1C6  F092         	movff	??_doNnevn+3,readNVM@index+1
 15807   00AF60  0100               	movlb	0	; () banked
 15808   00AF62  6B93               	clrf	(readNVM@index+2)& (0+255),b
 15809   00AF64  0E01               	movlw	1
 15810   00AF66  EC57  F059         	call	_readNVM
 15811   00AF6A  0100               	movlb	0	; () banked
 15812   00AF6C  5191               	movf	?_readNVM& (0+255),w,b
 15813   00AF6E  0101               	movlb	1	; () banked
 15814   00AF70  6FC7               	movwf	doNnevn@f& (0+255),b
 15815                           
 15816                           ; BSR set to: 1
 15817                           ;../../VLCBlib_PIC/event_teach_large.c: 581:         if (f.freeEntry) {
 15818   00AF72  BFC7               	btfsc	doNnevn@f& (0+255),7,b
 15819                           
 15820                           ; BSR set to: 1
 15821                           ;../../VLCBlib_PIC/event_teach_large.c: 582:             count++;
 15822   00AF74  2BC8               	incf	doNnevn@count& (0+255),f,b
 15823                           
 15824                           ; BSR set to: 1
 15825                           ;../../VLCBlib_PIC/event_teach_large.c: 584:     }
 15826                           
 15827                           ;../../VLCBlib_PIC/event_teach_large.c: 583:         }
 15828   00AF76  2BC9               	incf	doNnevn@i& (0+255),f,b
 15829                           
 15830                           ; BSR set to: 1
 15831   00AF78  29C9               	incf	doNnevn@i& (0+255),w,b
 15832   00AF7A  A4D8               	btfss	status,2,c
 15833   00AF7C  D7DB               	goto	l22436
 15834                           
 15835                           ; BSR set to: 1
 15836                           ;../../VLCBlib_PIC/event_teach_large.c: 585:     sendMessage3(OPC_EVNLF, nn.bytes.hi, nn
      +                          .bytes.lo, count);
 15837   00AF7E  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 15838   00AF82  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 15839   00AF86  C1C8  F0A8         	movff	doNnevn@count,sendMessage3@data3
 15840   00AF8A  0E70               	movlw	112
 15841   00AF8C  ECC6  F05F         	call	_sendMessage3
 15842   00AF90  0012               	return		;funcret
 15843   00AF92                     __end_of_doNnevn:
 15844                           	callstack 0
 15845                           
 15846 ;; *************** function _doNnclr *****************
 15847 ;; Defined at:
 15848 ;;		line 664 in file "../../VLCBlib_PIC/event_teach_large.c"
 15849 ;; Parameters:    Size  Location     Type
 15850 ;;		None
 15851 ;; Auto vars:     Size  Location     Type
 15852 ;;		None
 15853 ;; Return value:  Size  Location     Type
 15854 ;;                  1    wreg      void 
 15855 ;; Registers used:
 15856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15857 ;; Tracked objects:
 15858 ;;		On entry : 0/0
 15859 ;;		On exit  : 0/0
 15860 ;;		Unchanged: 0/0
 15861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15866 ;;Total ram usage:        0 bytes
 15867 ;; Hardware stack levels used: 1
 15868 ;; Hardware stack levels required when called: 19
 15869 ;; This function calls:
 15870 ;;		_clearAllEvents
 15871 ;;		_sendMessage2
 15872 ;;		_sendMessage5
 15873 ;; This function is called by:
 15874 ;;		_teachProcessMessage
 15875 ;; This function uses a non-reentrant model
 15876 ;;
 15877                           
 15878                           	psect	text32
 15879   00BE10                     __ptext32:
 15880                           	callstack 0
 15881   00BE10                     _doNnclr:
 15882                           	callstack 9
 15883                           
 15884                           ;../../VLCBlib_PIC/event_teach_large.c: 665:     clearAllEvents();
 15885                           
 15886                           ;incstack = 0
 15887   00BE10  EC1A  F05B         	call	_clearAllEvents	;wreg free
 15888                           
 15889                           ;../../VLCBlib_PIC/event_teach_large.c: 666:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 15890   00BE14  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 15891   00BE18  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 15892   00BE1C  0E59               	movlw	89
 15893   00BE1E  EC38  F05F         	call	_sendMessage2
 15894                           
 15895                           ;../../VLCBlib_PIC/event_teach_large.c: 668:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 15896   00BE22  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 15897   00BE26  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 15898   00BE2A  0EB2               	movlw	178
 15899   00BE2C  0101               	movlb	1	; () banked
 15900   00BE2E  6FC4               	movwf	sendMessage5@data3& (0+255),b
 15901   00BE30  0E04               	movlw	4
 15902   00BE32  6FC5               	movwf	sendMessage5@data4& (0+255),b
 15903   00BE34  0E00               	movlw	0
 15904   00BE36  6FC6               	movwf	sendMessage5@data5& (0+255),b
 15905   00BE38  0EAF               	movlw	175
 15906   00BE3A  EC68  F05F         	call	_sendMessage5
 15907   00BE3E  0012               	return		;funcret
 15908   00BE40                     __end_of_doNnclr:
 15909                           	callstack 0
 15910                           
 15911 ;; *************** function _doNerd *****************
 15912 ;; Defined at:
 15913 ;;		line 593 in file "../../VLCBlib_PIC/event_teach_large.c"
 15914 ;; Parameters:    Size  Location     Type
 15915 ;;		None
 15916 ;; Auto vars:     Size  Location     Type
 15917 ;;		None
 15918 ;; Return value:  Size  Location     Type
 15919 ;;                  1    wreg      void 
 15920 ;; Registers used:
 15921 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15922 ;; Tracked objects:
 15923 ;;		On entry : 0/0
 15924 ;;		On exit  : 0/0
 15925 ;;		Unchanged: 0/0
 15926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15931 ;;Total ram usage:        0 bytes
 15932 ;; Hardware stack levels used: 1
 15933 ;; Hardware stack levels required when called: 13
 15934 ;; This function calls:
 15935 ;;		_findServiceIndex
 15936 ;;		_startTimedResponse
 15937 ;; This function is called by:
 15938 ;;		_teachProcessMessage
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942                           	psect	text33
 15943   00C3AE                     __ptext33:
 15944                           	callstack 0
 15945   00C3AE                     _doNerd:
 15946                           	callstack 15
 15947                           
 15948                           ;../../VLCBlib_PIC/event_teach_large.c: 594:     startTimedResponse(2, findServiceIndex(
      +                          SERVICE_ID_OLD_TEACH), nerdCallback);
 15949                           
 15950                           ;incstack = 0
 15951   00C3AE  0E04               	movlw	4
 15952   00C3B0  EC46  F056         	call	_findServiceIndex
 15953   00C3B4  0100               	movlb	0	; () banked
 15954   00C3B6  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 15955   00C3B8  0EFA               	movlw	low _nerdCallback
 15956   00C3BA  6F92               	movwf	startTimedResponse@callback& (0+255),b
 15957   00C3BC  0EAF               	movlw	high _nerdCallback
 15958   00C3BE  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 15959   00C3C0  0E02               	movlw	2
 15960   00C3C2  EC9B  F05D         	call	_startTimedResponse
 15961   00C3C6  0012               	return		;funcret
 15962   00C3C8                     __end_of_doNerd:
 15963                           	callstack 0
 15964                           
 15965 ;; *************** function _doNenrd *****************
 15966 ;; Defined at:
 15967 ;;		line 625 in file "../../VLCBlib_PIC/event_teach_large.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;  index           1    wreg     unsigned char 
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;  index           1   13[BANK1 ] unsigned char 
 15972 ;;  eventNumber     2   16[BANK1 ] unsigned short 
 15973 ;;  nodeNumber      2   14[BANK1 ] unsigned short 
 15974 ;;  tableIndex      1   18[BANK1 ] unsigned char 
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  1    wreg      void 
 15977 ;; Registers used:
 15978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 15979 ;; Tracked objects:
 15980 ;;		On entry : 0/0
 15981 ;;		On exit  : 0/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15985 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15987 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15988 ;;Total ram usage:        6 bytes
 15989 ;; Hardware stack levels used: 1
 15990 ;; Hardware stack levels required when called: 17
 15991 ;; This function calls:
 15992 ;;		_evtIdxToTableIndex
 15993 ;;		_getEN
 15994 ;;		_getNN
 15995 ;;		_sendMessage3
 15996 ;;		_sendMessage5
 15997 ;;		_validStart
 15998 ;; This function is called by:
 15999 ;;		_teachProcessMessage
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text34
 16004   00ADE2                     __ptext34:
 16005                           	callstack 0
 16006   00ADE2                     _doNenrd:
 16007                           	callstack 11
 16008                           
 16009                           ;incstack = 0
 16010                           ;doNenrd@index stored from wreg
 16011   00ADE2  0101               	movlb	1	; () banked
 16012   00ADE4  6FC7               	movwf	doNenrd@index& (0+255),b
 16013                           
 16014                           ;../../VLCBlib_PIC/event_teach_large.c: 626:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 627:     uint16_t nodeNumber, eventNumber;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 629:     tableIndex = evtIdxToTableIndex(index);
 16015   00ADE6  0101               	movlb	1	; () banked
 16016   00ADE8  51C7               	movf	doNenrd@index& (0+255),w,b
 16017   00ADEA  EC74  F062         	call	_evtIdxToTableIndex
 16018   00ADEE  0101               	movlb	1	; () banked
 16019   00ADF0  6FCC               	movwf	doNenrd@tableIndex& (0+255),b
 16020                           
 16021                           ; BSR set to: 1
 16022                           ;../../VLCBlib_PIC/event_teach_large.c: 631:     if ( ! validStart(tableIndex)) {
 16023   00ADF2  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16024   00ADF4  ECC0  F05B         	call	_validStart
 16025   00ADF8  0900               	iorlw	0
 16026   00ADFA  A4D8               	btfss	status,2,c
 16027   00ADFC  D00B               	goto	l22468
 16028                           
 16029                           ;../../VLCBlib_PIC/event_teach_large.c: 632:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EN_IDX);
 16030   00ADFE  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 16031   00AE02  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 16032   00AE06  0E08               	movlw	8
 16033   00AE08  0100               	movlb	0	; () banked
 16034   00AE0A  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16035   00AE0C  0E6F               	movlw	111
 16036   00AE0E  ECC6  F05F         	call	_sendMessage3
 16037   00AE12  0012               	return	
 16038   00AE14                     l22468:
 16039                           
 16040                           ;../../VLCBlib_PIC/event_teach_large.c: 638:     nodeNumber = getNN(tableIndex);
 16041   00AE14  0101               	movlb	1	; () banked
 16042   00AE16  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16043   00AE18  EC46  F049         	call	_getNN
 16044   00AE1C  C097  F1C8         	movff	?_getNN,doNenrd@nodeNumber
 16045   00AE20  C098  F1C9         	movff	?_getNN+1,doNenrd@nodeNumber+1
 16046                           
 16047                           ;../../VLCBlib_PIC/event_teach_large.c: 639:     eventNumber = getEN(tableIndex);
 16048   00AE24  0101               	movlb	1	; () banked
 16049   00AE26  51CC               	movf	doNenrd@tableIndex& (0+255),w,b
 16050   00AE28  EC22  F055         	call	_getEN
 16051   00AE2C  C097  F1CA         	movff	?_getEN,doNenrd@eventNumber
 16052   00AE30  C098  F1CB         	movff	?_getEN+1,doNenrd@eventNumber+1
 16053                           
 16054                           ;../../VLCBlib_PIC/event_teach_large.c: 640:     sendMessage5(OPC_ENRSP, nodeNumber>>8, 
      +                          nodeNumber&0xFF, eventNumber>>8, eventNumber&0xFF, index);
 16055   00AE34  0101               	movlb	1	; () banked
 16056   00AE36  51C9               	movf	(doNenrd@nodeNumber+1)& (0+255),w,b
 16057   00AE38  6FC2               	movwf	sendMessage5@data1& (0+255),b
 16058   00AE3A  C1C8  F1C3         	movff	doNenrd@nodeNumber,sendMessage5@data2
 16059   00AE3E  51CB               	movf	(doNenrd@eventNumber+1)& (0+255),w,b
 16060   00AE40  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16061   00AE42  C1CA  F1C5         	movff	doNenrd@eventNumber,sendMessage5@data4
 16062   00AE46  C1C7  F1C6         	movff	doNenrd@index,sendMessage5@data5
 16063   00AE4A  0EF2               	movlw	242
 16064   00AE4C  EC68  F05F         	call	_sendMessage5
 16065   00AE50  0012               	return		;funcret
 16066   00AE52                     __end_of_doNenrd:
 16067                           	callstack 0
 16068                           
 16069 ;; *************** function _evtIdxToTableIndex *****************
 16070 ;; Defined at:
 16071 ;;		line 1263 in file "../../VLCBlib_PIC/event_teach_large.c"
 16072 ;; Parameters:    Size  Location     Type
 16073 ;;  evtIdx          1    wreg     unsigned char 
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;  evtIdx          1   45[BANK0 ] unsigned char 
 16076 ;; Return value:  Size  Location     Type
 16077 ;;                  1    wreg      unsigned char 
 16078 ;; Registers used:
 16079 ;;		wreg, status,2, status,0
 16080 ;; Tracked objects:
 16081 ;;		On entry : 0/0
 16082 ;;		On exit  : 0/0
 16083 ;;		Unchanged: 0/0
 16084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16089 ;;Total ram usage:        1 bytes
 16090 ;; Hardware stack levels used: 1
 16091 ;; Hardware stack levels required when called: 12
 16092 ;; This function calls:
 16093 ;;		Nothing
 16094 ;; This function is called by:
 16095 ;;		_doNenrd
 16096 ;;		_doReval
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099                           
 16100                           	psect	text35
 16101   00C4E8                     __ptext35:
 16102                           	callstack 0
 16103   00C4E8                     _evtIdxToTableIndex:
 16104                           	callstack 15
 16105                           
 16106                           ;incstack = 0
 16107                           ;evtIdxToTableIndex@evtIdx stored from wreg
 16108   00C4E8  0100               	movlb	0	; () banked
 16109   00C4EA  6F8D               	movwf	evtIdxToTableIndex@evtIdx& (0+255),b
 16110                           
 16111                           ;../../VLCBlib_PIC/event_teach_large.c: 1264:     return evtIdx - 1;
 16112   00C4EC  0100               	movlb	0	; () banked
 16113   00C4EE  058D               	decf	evtIdxToTableIndex@evtIdx& (0+255),w,b
 16114                           
 16115                           ; BSR set to: 0
 16116   00C4F0  0012               	return		;funcret
 16117   00C4F2                     __end_of_evtIdxToTableIndex:
 16118                           	callstack 0
 16119                           
 16120 ;; *************** function _doEvuln *****************
 16121 ;; Defined at:
 16122 ;;		line 758 in file "../../VLCBlib_PIC/event_teach_large.c"
 16123 ;; Parameters:    Size  Location     Type
 16124 ;;  nodeNumber      2   20[BANK1 ] unsigned short 
 16125 ;;  eventNumber     2   22[BANK1 ] unsigned short 
 16126 ;; Auto vars:     Size  Location     Type
 16127 ;;  result          1   24[BANK1 ] unsigned char 
 16128 ;; Return value:  Size  Location     Type
 16129 ;;                  1    wreg      void 
 16130 ;; Registers used:
 16131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16132 ;; Tracked objects:
 16133 ;;		On entry : 0/0
 16134 ;;		On exit  : 0/0
 16135 ;;		Unchanged: 0/0
 16136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16137 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16138 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16140 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16141 ;;Total ram usage:        5 bytes
 16142 ;; Hardware stack levels used: 1
 16143 ;; Hardware stack levels required when called: 20
 16144 ;; This function calls:
 16145 ;;		_removeEvent
 16146 ;;		_sendMessage2
 16147 ;;		_sendMessage3
 16148 ;;		_sendMessage5
 16149 ;; This function is called by:
 16150 ;;		_teachProcessMessage
 16151 ;; This function uses a non-reentrant model
 16152 ;;
 16153                           
 16154                           	psect	text36
 16155   00A9CA                     __ptext36:
 16156                           	callstack 0
 16157   00A9CA                     _doEvuln:
 16158                           	callstack 8
 16159                           
 16160                           ;../../VLCBlib_PIC/event_teach_large.c: 759:     uint8_t result;;../../VLCBlib_PIC/event
      +                          _teach_large.c: 760:     result = removeEvent(nodeNumber, eventNumber);
 16161                           
 16162                           ; BSR set to: 0
 16163                           ;incstack = 0
 16164   00A9CA  C1CE  F1C9         	movff	doEvuln@nodeNumber,removeEvent@nodeNumber
 16165   00A9CE  C1CF  F1CA         	movff	doEvuln@nodeNumber+1,removeEvent@nodeNumber+1
 16166   00A9D2  C1D0  F1CB         	movff	doEvuln@eventNumber,removeEvent@eventNumber
 16167   00A9D6  C1D1  F1CC         	movff	doEvuln@eventNumber+1,removeEvent@eventNumber+1
 16168   00A9DA  EC20  F060         	call	_removeEvent	;wreg free
 16169   00A9DE  0101               	movlb	1	; () banked
 16170   00A9E0  6FD2               	movwf	doEvuln@result& (0+255),b
 16171                           
 16172                           ; BSR set to: 1
 16173                           ;../../VLCBlib_PIC/event_teach_large.c: 761:     if (result) {
 16174   00A9E2  51D2               	movf	doEvuln@result& (0+255),w,b
 16175   00A9E4  B4D8               	btfsc	status,2,c
 16176   00A9E6  D018               	goto	l22384
 16177                           
 16178                           ; BSR set to: 1
 16179                           ;../../VLCBlib_PIC/event_teach_large.c: 762:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, result);
 16180   00A9E8  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 16181   00A9EC  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 16182   00A9F0  C1D2  F0A8         	movff	doEvuln@result,sendMessage3@data3
 16183   00A9F4  0E6F               	movlw	111
 16184   00A9F6  ECC6  F05F         	call	_sendMessage3
 16185                           
 16186                           ;../../VLCBlib_PIC/event_teach_large.c: 764:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVULN, SERVICE_ID_OLD_TEACH, result);
 16187   00A9FA  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 16188   00A9FE  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 16189   00AA02  0E95               	movlw	149
 16190   00AA04  0101               	movlb	1	; () banked
 16191   00AA06  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16192   00AA08  0E04               	movlw	4
 16193   00AA0A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16194   00AA0C  C1D2  F1C6         	movff	doEvuln@result,sendMessage5@data5
 16195   00AA10  0EAF               	movlw	175
 16196   00AA12  EC68  F05F         	call	_sendMessage5
 16197   00AA16  0012               	return	
 16198   00AA18                     l22384:
 16199                           
 16200                           ; BSR set to: 1
 16201                           ;../../VLCBlib_PIC/event_teach_large.c: 769:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16202   00AA18  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 16203   00AA1C  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 16204   00AA20  0E59               	movlw	89
 16205   00AA22  EC38  F05F         	call	_sendMessage2
 16206                           
 16207                           ;../../VLCBlib_PIC/event_teach_large.c: 771:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16208   00AA26  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 16209   00AA2A  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 16210   00AA2E  0EB2               	movlw	178
 16211   00AA30  0101               	movlb	1	; () banked
 16212   00AA32  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16213   00AA34  0E04               	movlw	4
 16214   00AA36  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16215   00AA38  0E00               	movlw	0
 16216   00AA3A  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16217   00AA3C  0EAF               	movlw	175
 16218   00AA3E  EC68  F05F         	call	_sendMessage5
 16219   00AA42  0012               	return		;funcret
 16220   00AA44                     __end_of_doEvuln:
 16221                           	callstack 0
 16222                           
 16223 ;; *************** function _removeEvent *****************
 16224 ;; Defined at:
 16225 ;;		line 859 in file "../../VLCBlib_PIC/event_teach_large.c"
 16226 ;; Parameters:    Size  Location     Type
 16227 ;;  nodeNumber      2   15[BANK1 ] unsigned short 
 16228 ;;  eventNumber     2   17[BANK1 ] unsigned short 
 16229 ;; Auto vars:     Size  Location     Type
 16230 ;;  tableIndex      1   19[BANK1 ] unsigned char 
 16231 ;; Return value:  Size  Location     Type
 16232 ;;                  1    wreg      unsigned char 
 16233 ;; Registers used:
 16234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16235 ;; Tracked objects:
 16236 ;;		On entry : 0/0
 16237 ;;		On exit  : 0/0
 16238 ;;		Unchanged: 0/0
 16239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16240 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16241 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16243 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16244 ;;Total ram usage:        5 bytes
 16245 ;; Hardware stack levels used: 1
 16246 ;; Hardware stack levels required when called: 19
 16247 ;; This function calls:
 16248 ;;		_findEvent
 16249 ;;		_removeTableEntry
 16250 ;; This function is called by:
 16251 ;;		_doEvuln
 16252 ;; This function uses a non-reentrant model
 16253 ;;
 16254                           
 16255                           	psect	text37
 16256   00C040                     __ptext37:
 16257                           	callstack 0
 16258   00C040                     _removeEvent:
 16259                           	callstack 8
 16260                           
 16261                           ;../../VLCBlib_PIC/event_teach_large.c: 861:     uint8_t tableIndex = findEvent(nodeNumb
      +                          er, eventNumber);
 16262                           
 16263                           ;incstack = 0
 16264   00C040  C1C9  F1BA         	movff	removeEvent@nodeNumber,findEvent@nodeNumber
 16265   00C044  C1CA  F1BB         	movff	removeEvent@nodeNumber+1,findEvent@nodeNumber+1
 16266   00C048  C1CB  F1BC         	movff	removeEvent@eventNumber,findEvent@eventNumber
 16267   00C04C  C1CC  F1BD         	movff	removeEvent@eventNumber+1,findEvent@eventNumber+1
 16268   00C050  EC42  F051         	call	_findEvent	;wreg free
 16269   00C054  0101               	movlb	1	; () banked
 16270   00C056  6FCD               	movwf	removeEvent@tableIndex& (0+255),b
 16271                           
 16272                           ; BSR set to: 1
 16273                           ;../../VLCBlib_PIC/event_teach_large.c: 862:     if (tableIndex == 0xff) return CMDERR_I
      +                          NVALID_EVENT;
 16274   00C058  29CD               	incf	removeEvent@tableIndex& (0+255),w,b
 16275   00C05A  A4D8               	btfss	status,2,c
 16276   00C05C  D002               	goto	l21148
 16277                           
 16278                           ; BSR set to: 1
 16279   00C05E  0E07               	movlw	7
 16280   00C060  0012               	return	
 16281   00C062                     l21148:
 16282                           
 16283                           ; BSR set to: 1
 16284                           ;../../VLCBlib_PIC/event_teach_large.c: 864:     return removeTableEntry(tableIndex);
 16285   00C062  51CD               	movf	removeEvent@tableIndex& (0+255),w,b
 16286   00C064  ECAF  F03C         	call	_removeTableEntry
 16287   00C068  0012               	return		;funcret
 16288   00C06A                     __end_of_removeEvent:
 16289                           	callstack 0
 16290                           
 16291 ;; *************** function _doEvlrn *****************
 16292 ;; Defined at:
 16293 ;;		line 681 in file "../../VLCBlib_PIC/event_teach_large.c"
 16294 ;; Parameters:    Size  Location     Type
 16295 ;;  nodeNumber      2   52[BANK1 ] unsigned short 
 16296 ;;  eventNumber     2   54[BANK1 ] unsigned short 
 16297 ;;  evNum           1   56[BANK1 ] unsigned char 
 16298 ;;  evVal           1   57[BANK1 ] unsigned char 
 16299 ;; Auto vars:     Size  Location     Type
 16300 ;;  error           1   58[BANK1 ] unsigned char 
 16301 ;; Return value:  Size  Location     Type
 16302 ;;                  1    wreg      void 
 16303 ;; Registers used:
 16304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16305 ;; Tracked objects:
 16306 ;;		On entry : 0/0
 16307 ;;		On exit  : 0/0
 16308 ;;		Unchanged: 0/0
 16309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16310 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16311 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16313 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16314 ;;Total ram usage:        7 bytes
 16315 ;; Hardware stack levels used: 1
 16316 ;; Hardware stack levels required when called: 23
 16317 ;; This function calls:
 16318 ;;		_APP_addEvent
 16319 ;;		_sendMessage2
 16320 ;;		_sendMessage3
 16321 ;;		_sendMessage5
 16322 ;; This function is called by:
 16323 ;;		_teachProcessMessage
 16324 ;; This function uses a non-reentrant model
 16325 ;;
 16326                           
 16327                           	psect	text38
 16328   009102                     __ptext38:
 16329                           	callstack 0
 16330   009102                     _doEvlrn:
 16331                           	callstack 5
 16332                           
 16333                           ;../../VLCBlib_PIC/event_teach_large.c: 682:     uint8_t error;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 683:     evNum--;
 16334                           
 16335                           ;incstack = 0
 16336   009102  0101               	movlb	1	; () banked
 16337   009104  07F2               	decf	doEvlrn@evNum& (0+255),f,b
 16338                           
 16339                           ; BSR set to: 1
 16340                           ;../../VLCBlib_PIC/event_teach_large.c: 684:     if (evNum >= 20) {
 16341   009106  0E13               	movlw	19
 16342   009108  65F2               	cpfsgt	doEvlrn@evNum& (0+255),b
 16343   00910A  D019               	goto	l22360
 16344                           
 16345                           ; BSR set to: 1
 16346                           ;../../VLCBlib_PIC/event_teach_large.c: 685:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, CMDERR_INV_EV_IDX);
 16347   00910C  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 16348   009110  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 16349   009114  0E06               	movlw	6
 16350   009116  0100               	movlb	0	; () banked
 16351   009118  6FA8               	movwf	sendMessage3@data3& (0+255),b
 16352   00911A  0E6F               	movlw	111
 16353   00911C  ECC6  F05F         	call	_sendMessage3
 16354                           
 16355                           ;../../VLCBlib_PIC/event_teach_large.c: 687:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, CMDERR_INV_EV_IDX);
 16356   009120  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 16357   009124  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 16358   009128  0ED2               	movlw	210
 16359   00912A  0101               	movlb	1	; () banked
 16360   00912C  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16361   00912E  0E04               	movlw	4
 16362   009130  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16363   009132  0E06               	movlw	6
 16364   009134  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16365   009136  0EAF               	movlw	175
 16366   009138  EC68  F05F         	call	_sendMessage5
 16367   00913C  0012               	return	
 16368   00913E                     l22360:
 16369                           
 16370                           ; BSR set to: 1
 16371                           ;../../VLCBlib_PIC/event_teach_large.c: 694:     error = APP_addEvent(nodeNumber, eventN
      +                          umber, evNum, evVal, FALSE);
 16372   00913E  C1EE  F1E6         	movff	doEvlrn@nodeNumber,APP_addEvent@nodeNumber
 16373   009142  C1EF  F1E7         	movff	doEvlrn@nodeNumber+1,APP_addEvent@nodeNumber+1
 16374   009146  C1F0  F1E8         	movff	doEvlrn@eventNumber,APP_addEvent@eventNumber
 16375   00914A  C1F1  F1E9         	movff	doEvlrn@eventNumber+1,APP_addEvent@eventNumber+1
 16376   00914E  C1F2  F1EA         	movff	doEvlrn@evNum,APP_addEvent@evNum
 16377   009152  C1F3  F1EB         	movff	doEvlrn@evVal,APP_addEvent@evVal
 16378   009156  0E00               	movlw	0
 16379   009158  6FEC               	movwf	APP_addEvent@forceOwnNN& (0+255),b
 16380   00915A  EC29  F057         	call	_APP_addEvent	;wreg free
 16381   00915E  0101               	movlb	1	; () banked
 16382   009160  6FF4               	movwf	doEvlrn@error& (0+255),b
 16383                           
 16384                           ; BSR set to: 1
 16385                           ;../../VLCBlib_PIC/event_teach_large.c: 695:     if (error) {
 16386   009162  51F4               	movf	doEvlrn@error& (0+255),w,b
 16387   009164  B4D8               	btfsc	status,2,c
 16388   009166  D018               	goto	l22368
 16389                           
 16390                           ; BSR set to: 1
 16391                           ;../../VLCBlib_PIC/event_teach_large.c: 697:         sendMessage3(OPC_CMDERR, nn.bytes.h
      +                          i, nn.bytes.lo, error);
 16392   009168  C0C0  F0A6         	movff	_nn+1,sendMessage3@data1
 16393   00916C  C0BF  F0A7         	movff	_nn,sendMessage3@data2
 16394   009170  C1F4  F0A8         	movff	doEvlrn@error,sendMessage3@data3
 16395   009174  0E6F               	movlw	111
 16396   009176  ECC6  F05F         	call	_sendMessage3
 16397                           
 16398                           ;../../VLCBlib_PIC/event_teach_large.c: 699:         sendMessage5(OPC_GRSP, nn.bytes.hi,
      +                           nn.bytes.lo, OPC_EVLRN, SERVICE_ID_OLD_TEACH, error);
 16399   00917A  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 16400   00917E  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 16401   009182  0ED2               	movlw	210
 16402   009184  0101               	movlb	1	; () banked
 16403   009186  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16404   009188  0E04               	movlw	4
 16405   00918A  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16406   00918C  C1F4  F1C6         	movff	doEvlrn@error,sendMessage5@data5
 16407   009190  0EAF               	movlw	175
 16408   009192  EC68  F05F         	call	_sendMessage5
 16409   009196  0012               	return	
 16410   009198                     l22368:
 16411                           
 16412                           ; BSR set to: 1
 16413                           ;../../VLCBlib_PIC/event_teach_large.c: 704:     teachDiagnostics[0x01].asUint++;
 16414   009198  4BB0               	infsnz	(_teachDiagnostics+2)& (0+255),f,b
 16415   00919A  2BB1               	incf	(_teachDiagnostics+3)& (0+255),f,b
 16416                           
 16417                           ; BSR set to: 1
 16418                           ;../../VLCBlib_PIC/event_teach_large.c: 706:     sendMessage2(OPC_WRACK, nn.bytes.hi, nn
      +                          .bytes.lo);
 16419   00919C  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 16420   0091A0  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 16421   0091A4  0E59               	movlw	89
 16422   0091A6  EC38  F05F         	call	_sendMessage2
 16423                           
 16424                           ;../../VLCBlib_PIC/event_teach_large.c: 708:     sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, OPC_REQEV, SERVICE_ID_OLD_TEACH, GRSP_OK);
 16425   0091AA  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 16426   0091AE  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 16427   0091B2  0EB2               	movlw	178
 16428   0091B4  0101               	movlb	1	; () banked
 16429   0091B6  6FC4               	movwf	sendMessage5@data3& (0+255),b
 16430   0091B8  0E04               	movlw	4
 16431   0091BA  6FC5               	movwf	sendMessage5@data4& (0+255),b
 16432   0091BC  0E00               	movlw	0
 16433   0091BE  6FC6               	movwf	sendMessage5@data5& (0+255),b
 16434   0091C0  0EAF               	movlw	175
 16435   0091C2  EC68  F05F         	call	_sendMessage5
 16436   0091C6  0012               	return		;funcret
 16437   0091C8                     __end_of_doEvlrn:
 16438                           	callstack 0
 16439                           
 16440 ;; *************** function _APP_addEvent *****************
 16441 ;; Defined at:
 16442 ;;		line 195 in file "../universalEvents.c"
 16443 ;; Parameters:    Size  Location     Type
 16444 ;;  nodeNumber      2   44[BANK1 ] unsigned short 
 16445 ;;  eventNumber     2   46[BANK1 ] unsigned short 
 16446 ;;  evNum           1   48[BANK1 ] unsigned char 
 16447 ;;  evVal           1   49[BANK1 ] unsigned char 
 16448 ;;  forceOwnNN      1   50[BANK1 ] enum E12761
 16449 ;; Auto vars:     Size  Location     Type
 16450 ;;  tableIndex      1   51[BANK1 ] unsigned char 
 16451 ;; Return value:  Size  Location     Type
 16452 ;;                  1    wreg      unsigned char 
 16453 ;; Registers used:
 16454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16455 ;; Tracked objects:
 16456 ;;		On entry : 0/0
 16457 ;;		On exit  : 0/0
 16458 ;;		Unchanged: 0/0
 16459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16460 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16461 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16463 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16464 ;;Total ram usage:        8 bytes
 16465 ;; Hardware stack levels used: 1
 16466 ;; Hardware stack levels required when called: 22
 16467 ;; This function calls:
 16468 ;;		_addEvent
 16469 ;;		_checkRemoveTableEntry
 16470 ;;		_rebuildHashtable
 16471 ;;		_writeEv
 16472 ;; This function is called by:
 16473 ;;		_doEvlrn
 16474 ;; This function uses a non-reentrant model
 16475 ;;
 16476                           
 16477                           	psect	text39
 16478   00AE52                     __ptext39:
 16479                           	callstack 0
 16480   00AE52                     _APP_addEvent:
 16481                           	callstack 5
 16482                           
 16483                           ;../universalEvents.c: 197:     if ((evNum == 0) && (evVal != 0))
 16484                           
 16485                           ;incstack = 0
 16486   00AE52  0101               	movlb	1	; () banked
 16487   00AE54  51EA               	movf	APP_addEvent@evNum& (0+255),w,b
 16488   00AE56  A4D8               	btfss	status,2,c
 16489   00AE58  D021               	goto	l653
 16490                           
 16491                           ; BSR set to: 1
 16492   00AE5A  51EB               	movf	APP_addEvent@evVal& (0+255),w,b
 16493   00AE5C  B4D8               	btfsc	status,2,c
 16494   00AE5E  D01E               	goto	l653
 16495                           
 16496                           ; BSR set to: 1
 16497                           ;../universalEvents.c: 198:     {;../universalEvents.c: 200:         if ((evVal >= 1) &&
      +                           (evVal <= (7+16*4))) {
 16498   00AE60  51EB               	movf	APP_addEvent@evVal& (0+255),w,b
 16499   00AE62  B4D8               	btfsc	status,2,c
 16500   00AE64  D01B               	goto	l653
 16501                           
 16502                           ; BSR set to: 1
 16503   00AE66  0E48               	movlw	72
 16504   00AE68  61EB               	cpfslt	APP_addEvent@evVal& (0+255),b
 16505   00AE6A  D018               	goto	l653
 16506                           
 16507                           ; BSR set to: 1
 16508                           ;../universalEvents.c: 201:             uint8_t tableIndex = happening2Event[evVal-1];
 16509   00AE6C  0EFF               	movlw	low (_happening2Event+65535)
 16510   00AE6E  25EB               	addwf	APP_addEvent@evVal& (0+255),w,b
 16511   00AE70  6ED9               	movwf	fsr2l,c
 16512   00AE72  6ADA               	clrf	fsr2h,c
 16513   00AE74  0E02               	movlw	high (_happening2Event+65535)
 16514   00AE76  22DA               	addwfc	fsr2h,f,c
 16515   00AE78  50DF               	movf	indf2,w,c
 16516   00AE7A  6FED               	movwf	APP_addEvent@tableIndex& (0+255),b
 16517                           
 16518                           ; BSR set to: 1
 16519                           ;../universalEvents.c: 202:             if (tableIndex != 0xff) {
 16520   00AE7C  29ED               	incf	APP_addEvent@tableIndex& (0+255),w,b
 16521   00AE7E  B4D8               	btfsc	status,2,c
 16522   00AE80  D00D               	goto	l653
 16523                           
 16524                           ; BSR set to: 1
 16525                           ;../universalEvents.c: 205:                 writeEv(tableIndex, 0, 0);
 16526   00AE82  0E00               	movlw	0
 16527   00AE84  6FCB               	movwf	writeEv@evNum& (0+255),b
 16528   00AE86  0E00               	movlw	0
 16529   00AE88  6FCC               	movwf	writeEv@evVal& (0+255),b
 16530   00AE8A  51ED               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16531   00AE8C  ECF1  F018         	call	_writeEv
 16532                           
 16533                           ;../universalEvents.c: 206:                 checkRemoveTableEntry(tableIndex);
 16534   00AE90  0101               	movlb	1	; () banked
 16535   00AE92  51ED               	movf	APP_addEvent@tableIndex& (0+255),w,b
 16536   00AE94  EC11  F05D         	call	_checkRemoveTableEntry
 16537                           
 16538                           ;../universalEvents.c: 208:                 rebuildHashtable();
 16539   00AE98  EC8D  F03E         	call	_rebuildHashtable	;wreg free
 16540   00AE9C                     l653:
 16541                           
 16542                           ;../universalEvents.c: 213:     return addEvent(nodeNumber, eventNumber, evNum, evVal, f
      +                          orceOwnNN);
 16543   00AE9C  C1E6  F1D7         	movff	APP_addEvent@nodeNumber,addEvent@nodeNumber
 16544   00AEA0  C1E7  F1D8         	movff	APP_addEvent@nodeNumber+1,addEvent@nodeNumber+1
 16545   00AEA4  C1E8  F1D9         	movff	APP_addEvent@eventNumber,addEvent@eventNumber
 16546   00AEA8  C1E9  F1DA         	movff	APP_addEvent@eventNumber+1,addEvent@eventNumber+1
 16547   00AEAC  C1EA  F1DB         	movff	APP_addEvent@evNum,addEvent@evNum
 16548   00AEB0  C1EB  F1DC         	movff	APP_addEvent@evVal,addEvent@evVal
 16549   00AEB4  C1EC  F1DD         	movff	APP_addEvent@forceOwnNN,addEvent@forceOwnNN
 16550   00AEB8  ECEF  F031         	call	_addEvent	;wreg free
 16551   00AEBC  0012               	return		;funcret
 16552   00AEBE                     __end_of_APP_addEvent:
 16553                           	callstack 0
 16554                           
 16555 ;; *************** function _pollTimedResponse *****************
 16556 ;; Defined at:
 16557 ;;		line 108 in file "../../VLCBlib_PIC/timedResponse.c"
 16558 ;; Parameters:    Size  Location     Type
 16559 ;;		None
 16560 ;; Auto vars:     Size  Location     Type
 16561 ;;  result          1   43[BANK1 ] enum E12922
 16562 ;; Return value:  Size  Location     Type
 16563 ;;                  1    wreg      void 
 16564 ;; Registers used:
 16565 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16566 ;; Tracked objects:
 16567 ;;		On entry : 0/0
 16568 ;;		On exit  : 0/0
 16569 ;;		Unchanged: 0/0
 16570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16572 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16573 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16574 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16575 ;;Total ram usage:        3 bytes
 16576 ;; Hardware stack levels used: 1
 16577 ;; Hardware stack levels required when called: 20
 16578 ;; This function calls:
 16579 ;;		NULL
 16580 ;;		_mnsTRallDiagnosticsCallback
 16581 ;;		_mnsTRrqnpnCallback
 16582 ;;		_mnsTRserviceDiscoveryCallback
 16583 ;;		_nerdCallback
 16584 ;;		_nvTRnvrdCallback
 16585 ;;		_reqevCallback
 16586 ;;		_sodTRCallback
 16587 ;; This function is called by:
 16588 ;;		_poll
 16589 ;; This function uses a non-reentrant model
 16590 ;;
 16591                           
 16592                           	psect	text40
 16593   00A8D2                     __ptext40:
 16594                           	callstack 0
 16595   00A8D2                     _pollTimedResponse:
 16596                           	callstack 9
 16597                           
 16598                           ;../../VLCBlib_PIC/timedResponse.c: 109:     TimedResponseResult result;;../../VLCBlib_P
      +                          IC/timedResponse.c: 111:     if (timedResponseType == 0xFF) {
 16599                           
 16600                           ;incstack = 0
 16601   00A8D2  0100               	movlb	0	; () banked
 16602   00A8D4  29C5               	incf	_timedResponseType& (0+255),w,b
 16603   00A8D6  B4D8               	btfsc	status,2,c
 16604   00A8D8  0012               	return	
 16605                           
 16606                           ; BSR set to: 0
 16607                           ;../../VLCBlib_PIC/timedResponse.c: 115:     if (timedResponseCallback == ((void*)0)) {
 16608   00A8DA  503F               	movf	_timedResponseCallback^0,w,c
 16609   00A8DC  1040               	iorwf	(_timedResponseCallback+1)^0,w,c
 16610   00A8DE  A4D8               	btfss	status,2,c
 16611   00A8E0  D003               	goto	l23918
 16612   00A8E2                     u25500:
 16613                           
 16614                           ;../../VLCBlib_PIC/timedResponse.c: 117:         timedResponseType = 0xFF;
 16615   00A8E2  0100               	movlb	0	; () banked
 16616   00A8E4  69C5               	setf	_timedResponseType& (0+255),b
 16617                           
 16618                           ;../../VLCBlib_PIC/timedResponse.c: 118:         return;
 16619   00A8E6  0012               	return	
 16620   00A8E8                     l23918:
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;../../VLCBlib_PIC/timedResponse.c: 122:     result = (*timedResponseCallback)(timedResp
      +                          onseType, timedResponseServiceIndex, timedResponseStep);
 16624   00A8E8  D801               	call	u25518
 16625   00A8EA  D00E               	goto	u25519
 16626   00A8EC                     u25518:
 16627   00A8EC  0005               	push	
 16628   00A8EE  6EFA               	movwf	pclath,c
 16629   00A8F0  503F               	movf	_timedResponseCallback^0,w,c
 16630   00A8F2  6EFD               	movwf	tosl,c
 16631   00A8F4  5040               	movf	(_timedResponseCallback+1)^0,w,c
 16632   00A8F6  6EFE               	movwf	tosh,c
 16633   00A8F8  6AFF               	clrf	tosu,c
 16634   00A8FA  50FA               	movf	pclath,w,c
 16635   00A8FC  C0C6  F1D4         	movff	_timedResponseServiceIndex,reqevCallback@serviceIndex
 16636   00A900  C043  F1D5         	movff	_timedResponseStep,reqevCallback@step
 16637   00A904  51C5               	movf	_timedResponseType& (0+255),w,b
 16638   00A906  0012               	return		;indir
 16639   00A908                     u25519:
 16640   00A908  0101               	movlb	1	; () banked
 16641   00A90A  6FE5               	movwf	pollTimedResponse@result& (0+255),b
 16642                           
 16643                           ;../../VLCBlib_PIC/timedResponse.c: 123:     switch (result) {
 16644   00A90C  D00E               	goto	l23934
 16645   00A90E                     l23920:
 16646                           
 16647                           ; BSR set to: 1
 16648                           ;../../VLCBlib_PIC/timedResponse.c: 127:             if (timedResponseAllServicesFlag) {
 16649   00A90E  5044               	movf	_timedResponseAllServicesFlag^0,w,c
 16650   00A910  B4D8               	btfsc	status,2,c
 16651   00A912  D7E7               	goto	u25500
 16652                           
 16653                           ; BSR set to: 1
 16654                           ;../../VLCBlib_PIC/timedResponse.c: 129:                 timedResponseServiceIndex++;
 16655   00A914  0100               	movlb	0	; () banked
 16656   00A916  2BC6               	incf	_timedResponseServiceIndex& (0+255),f,b
 16657                           
 16658                           ; BSR set to: 0
 16659                           ;../../VLCBlib_PIC/timedResponse.c: 130:                 if (timedResponseServiceIndex >
      +                          = 9) {
 16660   00A918  0E08               	movlw	8
 16661   00A91A  65C6               	cpfsgt	_timedResponseServiceIndex& (0+255),b
 16662   00A91C  D001               	goto	l23928
 16663   00A91E  D7E1               	goto	u25500
 16664   00A920                     l23928:
 16665                           
 16666                           ; BSR set to: 0
 16667                           ;../../VLCBlib_PIC/timedResponse.c: 134:                     timedResponseStep = 0;
 16668   00A920  0E00               	movlw	0
 16669   00A922  6E43               	movwf	_timedResponseStep^0,c
 16670   00A924  0012               	return	
 16671   00A926                     l23930:
 16672                           
 16673                           ; BSR set to: 1
 16674                           ;../../VLCBlib_PIC/timedResponse.c: 143:             timedResponseStep++;
 16675   00A926  2A43               	incf	_timedResponseStep^0,f,c
 16676                           
 16677                           ;../../VLCBlib_PIC/timedResponse.c: 144:             break;
 16678   00A928  0012               	return	
 16679   00A92A                     l23934:
 16680                           
 16681                           ; BSR set to: 1
 16682   00A92A  51E5               	movf	pollTimedResponse@result& (0+255),w,b
 16683   00A92C  6FE3               	movwf	??_pollTimedResponse& (0+255),b
 16684   00A92E  6BE4               	clrf	(??_pollTimedResponse+1)& (0+255),b
 16685                           
 16686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16687                           ; Switch size 1, requested type "simple"
 16688                           ; Number of cases is 1, Range of values is 0 to 0
 16689                           ; switch strategies available:
 16690                           ; Name         Instructions Cycles
 16691                           ; simple_byte            4     3 (average)
 16692                           ;	Chosen strategy is simple_byte
 16693   00A930  51E4               	movf	(??_pollTimedResponse+1)& (0+255),w,b
 16694   00A932  0A00               	xorlw	0	; case 0
 16695   00A934  A4D8               	btfss	status,2,c
 16696   00A936  0012               	return	
 16697                           
 16698                           ; BSR set to: 1
 16699                           ; Switch size 1, requested type "simple"
 16700                           ; Number of cases is 3, Range of values is 0 to 2
 16701                           ; switch strategies available:
 16702                           ; Name         Instructions Cycles
 16703                           ; simple_byte           10     6 (average)
 16704                           ;	Chosen strategy is simple_byte
 16705   00A938  51E3               	movf	??_pollTimedResponse& (0+255),w,b
 16706   00A93A  0A00               	xorlw	0	; case 0
 16707   00A93C  B4D8               	btfsc	status,2,c
 16708   00A93E  D7E7               	goto	l23920
 16709   00A940  0A01               	xorlw	1	; case 1
 16710   00A942  B4D8               	btfsc	status,2,c
 16711   00A944  0012               	return	
 16712   00A946  0A03               	xorlw	3	; case 2
 16713   00A948  A4D8               	btfss	status,2,c
 16714   00A94A  0012               	return	
 16715   00A94C  D7EC               	goto	l23930
 16716   00A94E                     __end_of_pollTimedResponse:
 16717                           	callstack 0
 16718                           
 16719 ;; *************** function _reqevCallback *****************
 16720 ;; Defined at:
 16721 ;;		line 832 in file "../../VLCBlib_PIC/event_teach_large.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;  tableIndex      1    wreg     unsigned char 
 16724 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 16725 ;;  step            1   27[BANK1 ] unsigned char 
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;  tableIndex      1   40[BANK1 ] unsigned char 
 16728 ;;  eventNumber     2   38[BANK1 ] struct Word
 16729 ;;  nodeNumber      2   36[BANK1 ] struct Word
 16730 ;;  ev              2   34[BANK1 ] short 
 16731 ;;  nEv             1   33[BANK1 ] unsigned char 
 16732 ;; Return value:  Size  Location     Type
 16733 ;;                  1    wreg      enum E12929
 16734 ;; Registers used:
 16735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16736 ;; Tracked objects:
 16737 ;;		On entry : 0/0
 16738 ;;		On exit  : 0/0
 16739 ;;		Unchanged: 0/0
 16740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16741 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16742 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16743 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16744 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16745 ;;Total ram usage:       15 bytes
 16746 ;; Hardware stack levels used: 1
 16747 ;; Hardware stack levels required when called: 17
 16748 ;; This function calls:
 16749 ;;		_getEN
 16750 ;;		_getEv
 16751 ;;		_getNN
 16752 ;;		_numEv
 16753 ;;		_sendMessage6
 16754 ;; This function is called by:
 16755 ;;		_doReqev
 16756 ;;		_pollTimedResponse
 16757 ;; This function uses a non-reentrant model
 16758 ;;
 16759                           
 16760                           	psect	text41
 16761   009DE4                     __ptext41:
 16762                           	callstack 0
 16763   009DE4                     _reqevCallback:
 16764                           	callstack 11
 16765                           
 16766                           ;incstack = 0
 16767                           ;reqevCallback@tableIndex stored from wreg
 16768   009DE4  0101               	movlb	1	; () banked
 16769   009DE6  6FE2               	movwf	reqevCallback@tableIndex& (0+255),b
 16770                           
 16771                           ;../../VLCBlib_PIC/event_teach_large.c: 833:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 835:     uint8_t nEv = numEv(tableIndex);
 16772   009DE8  0101               	movlb	1	; () banked
 16773   009DEA  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 16774   009DEC  EC3F  F045         	call	_numEv
 16775   009DF0  0101               	movlb	1	; () banked
 16776   009DF2  6FDB               	movwf	reqevCallback@nEv& (0+255),b
 16777                           
 16778                           ; BSR set to: 1
 16779                           ;../../VLCBlib_PIC/event_teach_large.c: 836:     int16_t ev;;../../VLCBlib_PIC/event_tea
      +                          ch_large.c: 838:     if (step+1 > nEv) {
 16780   009DF4  51D5               	movf	reqevCallback@step& (0+255),w,b
 16781   009DF6  6FD6               	movwf	??_reqevCallback& (0+255),b
 16782   009DF8  6BD7               	clrf	(??_reqevCallback+1)& (0+255),b
 16783   009DFA  0E01               	movlw	1
 16784   009DFC  27D6               	addwf	??_reqevCallback& (0+255),f,b
 16785   009DFE  0E00               	movlw	0
 16786   009E00  23D7               	addwfc	(??_reqevCallback+1)& (0+255),f,b
 16787   009E02  51DB               	movf	reqevCallback@nEv& (0+255),w,b
 16788   009E04  6FD8               	movwf	(??_reqevCallback+2)& (0+255),b
 16789   009E06  6BD9               	clrf	(??_reqevCallback+3)& (0+255),b
 16790   009E08  51D6               	movf	??_reqevCallback& (0+255),w,b
 16791   009E0A  5DD8               	subwf	(??_reqevCallback+2)& (0+255),w,b
 16792   009E0C  51D9               	movf	(??_reqevCallback+3)& (0+255),w,b
 16793   009E0E  0A80               	xorlw	128
 16794   009E10  6FDA               	movwf	(??_reqevCallback+4)& (0+255),b
 16795   009E12  51D7               	movf	(??_reqevCallback+1)& (0+255),w,b
 16796   009E14  0A80               	xorlw	128
 16797   009E16  59DA               	subwfb	(??_reqevCallback+4)& (0+255),w,b
 16798   009E18  B0D8               	btfsc	status,0,c
 16799   009E1A  D002               	goto	l22544
 16800                           
 16801                           ; BSR set to: 1
 16802                           ;../../VLCBlib_PIC/event_teach_large.c: 839:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 16803   009E1C  0E00               	movlw	0
 16804   009E1E  0012               	return	
 16805   009E20                     l22544:
 16806                           
 16807                           ; BSR set to: 1
 16808                           ;../../VLCBlib_PIC/event_teach_large.c: 842:     nodeNumber.word = getNN(tableIndex);
 16809   009E20  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 16810   009E22  EC46  F049         	call	_getNN
 16811   009E26  C097  F1DE         	movff	?_getNN,reqevCallback@nodeNumber
 16812   009E2A  C098  F1DF         	movff	?_getNN+1,reqevCallback@nodeNumber+1
 16813                           
 16814                           ;../../VLCBlib_PIC/event_teach_large.c: 843:     eventNumber.word = getEN(tableIndex);
 16815   009E2E  0101               	movlb	1	; () banked
 16816   009E30  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 16817   009E32  EC22  F055         	call	_getEN
 16818   009E36  C097  F1E0         	movff	?_getEN,reqevCallback@eventNumber
 16819   009E3A  C098  F1E1         	movff	?_getEN+1,reqevCallback@eventNumber+1
 16820                           
 16821                           ;../../VLCBlib_PIC/event_teach_large.c: 844:     ev = getEv(tableIndex, step);
 16822   009E3E  C1D5  F09D         	movff	reqevCallback@step,getEv@evNum
 16823   009E42  0101               	movlb	1	; () banked
 16824   009E44  51E2               	movf	reqevCallback@tableIndex& (0+255),w,b
 16825   009E46  EC04  F03C         	call	_getEv
 16826   009E4A  C09D  F1DC         	movff	?_getEv,reqevCallback@ev
 16827   009E4E  C09E  F1DD         	movff	?_getEv+1,reqevCallback@ev+1
 16828                           
 16829                           ;../../VLCBlib_PIC/event_teach_large.c: 845:     if (ev >= 0) {
 16830   009E52  0101               	movlb	1	; () banked
 16831   009E54  BFDD               	btfsc	(reqevCallback@ev+1)& (0+255),7,b
 16832   009E56  D00F               	goto	l22550
 16833                           
 16834                           ; BSR set to: 1
 16835                           ;../../VLCBlib_PIC/event_teach_large.c: 846:         sendMessage6(OPC_EVANS, nodeNumber.
      +                          bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumber.bytes.lo, step+1, (uint
      +                          8_t)ev);
 16836   009E58  C1DF  F1C2         	movff	reqevCallback@nodeNumber+1,sendMessage6@data1
 16837   009E5C  C1DE  F1C3         	movff	reqevCallback@nodeNumber,sendMessage6@data2
 16838   009E60  C1E1  F1C4         	movff	reqevCallback@eventNumber+1,sendMessage6@data3
 16839   009E64  C1E0  F1C5         	movff	reqevCallback@eventNumber,sendMessage6@data4
 16840   009E68  29D5               	incf	reqevCallback@step& (0+255),w,b
 16841   009E6A  6FC6               	movwf	sendMessage6@data5& (0+255),b
 16842   009E6C  C1DC  F1C7         	movff	reqevCallback@ev,sendMessage6@data6
 16843   009E70  0ED3               	movlw	211
 16844   009E72  EC20  F05F         	call	_sendMessage6
 16845   009E76                     l22550:
 16846                           
 16847                           ;../../VLCBlib_PIC/event_teach_large.c: 848:     return TIMED_RESPONSE_RESULT_NEXT;
 16848   009E76  0E02               	movlw	2
 16849   009E78  0012               	return		;funcret
 16850   009E7A                     __end_of_reqevCallback:
 16851                           	callstack 0
 16852                           
 16853 ;; *************** function _nerdCallback *****************
 16854 ;; Defined at:
 16855 ;;		line 604 in file "../../VLCBlib_PIC/event_teach_large.c"
 16856 ;; Parameters:    Size  Location     Type
 16857 ;;  type            1    wreg     unsigned char 
 16858 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 16859 ;;  step            1   27[BANK1 ] unsigned char 
 16860 ;; Auto vars:     Size  Location     Type
 16861 ;;  type            1    0[COMRAM] unsigned char 
 16862 ;;  eventNumber     2   30[BANK1 ] struct Word
 16863 ;;  nodeNumber      2   28[BANK1 ] struct Word
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  1    wreg      enum E12929
 16866 ;; Registers used:
 16867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16873 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16874 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16876 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16877 ;;Total ram usage:        6 bytes
 16878 ;; Hardware stack levels used: 1
 16879 ;; Hardware stack levels required when called: 17
 16880 ;; This function calls:
 16881 ;;		_getEN
 16882 ;;		_getNN
 16883 ;;		_sendMessage7
 16884 ;;		_tableIndexToEvtIdx
 16885 ;;		_validStart
 16886 ;; This function is called by:
 16887 ;;		_doNerd
 16888 ;;		_pollTimedResponse
 16889 ;; This function uses a non-reentrant model
 16890 ;;
 16891                           
 16892                           	psect	text42
 16893   00AFFA                     __ptext42:
 16894                           	callstack 0
 16895   00AFFA                     _nerdCallback:
 16896                           	callstack 11
 16897                           
 16898                           ;../../VLCBlib_PIC/event_teach_large.c: 605:     Word nodeNumber, eventNumber;;../../VLC
      +                          Blib_PIC/event_teach_large.c: 607:     if (step >= 255) {
 16899                           
 16900                           ;incstack = 0
 16901   00AFFA  0101               	movlb	1	; () banked
 16902   00AFFC  29D5               	incf	nerdCallback@step& (0+255),w,b
 16903   00AFFE  A4D8               	btfss	status,2,c
 16904   00B000  D002               	goto	l22526
 16905                           
 16906                           ; BSR set to: 1
 16907                           ;../../VLCBlib_PIC/event_teach_large.c: 608:         return TIMED_RESPONSE_RESULT_FINISH
      +                          ED;
 16908   00B002  0E00               	movlw	0
 16909   00B004  0012               	return	
 16910   00B006                     l22526:
 16911                           
 16912                           ; BSR set to: 1
 16913                           ;../../VLCBlib_PIC/event_teach_large.c: 611:     if (validStart(step)) {
 16914   00B006  51D5               	movf	nerdCallback@step& (0+255),w,b
 16915   00B008  ECC0  F05B         	call	_validStart
 16916   00B00C  0900               	iorlw	0
 16917   00B00E  B4D8               	btfsc	status,2,c
 16918   00B010  D025               	goto	l22532
 16919                           
 16920                           ;../../VLCBlib_PIC/event_teach_large.c: 612:         nodeNumber.word = getNN(step);
 16921   00B012  0101               	movlb	1	; () banked
 16922   00B014  51D5               	movf	nerdCallback@step& (0+255),w,b
 16923   00B016  EC46  F049         	call	_getNN
 16924   00B01A  C097  F1D6         	movff	?_getNN,nerdCallback@nodeNumber
 16925   00B01E  C098  F1D7         	movff	?_getNN+1,nerdCallback@nodeNumber+1
 16926                           
 16927                           ;../../VLCBlib_PIC/event_teach_large.c: 613:         eventNumber.word = getEN(step);
 16928   00B022  0101               	movlb	1	; () banked
 16929   00B024  51D5               	movf	nerdCallback@step& (0+255),w,b
 16930   00B026  EC22  F055         	call	_getEN
 16931   00B02A  C097  F1D8         	movff	?_getEN,nerdCallback@eventNumber
 16932   00B02E  C098  F1D9         	movff	?_getEN+1,nerdCallback@eventNumber+1
 16933                           
 16934                           ;../../VLCBlib_PIC/event_teach_large.c: 614:         sendMessage7(OPC_ENRSP, nn.bytes.hi
      +                          , nn.bytes.lo, nodeNumber.bytes.hi, nodeNumber.bytes.lo, eventNumber.bytes.hi, eventNumb
      +                          er.bytes.lo, tableIndexToEvtIdx(step));
 16935   00B032  C0C0  F1C2         	movff	_nn+1,sendMessage7@data1
 16936   00B036  C0BF  F1C3         	movff	_nn,sendMessage7@data2
 16937   00B03A  C1D7  F1C4         	movff	nerdCallback@nodeNumber+1,sendMessage7@data3
 16938   00B03E  C1D6  F1C5         	movff	nerdCallback@nodeNumber,sendMessage7@data4
 16939   00B042  C1D9  F1C6         	movff	nerdCallback@eventNumber+1,sendMessage7@data5
 16940   00B046  C1D8  F1C7         	movff	nerdCallback@eventNumber,sendMessage7@data6
 16941   00B04A  0101               	movlb	1	; () banked
 16942   00B04C  51D5               	movf	nerdCallback@step& (0+255),w,b
 16943   00B04E  EC79  F062         	call	_tableIndexToEvtIdx
 16944   00B052  0101               	movlb	1	; () banked
 16945   00B054  6FC8               	movwf	sendMessage7@data7& (0+255),b
 16946   00B056  0EF2               	movlw	242
 16947   00B058  EC50  F05F         	call	_sendMessage7
 16948   00B05C                     l22532:
 16949                           
 16950                           ;../../VLCBlib_PIC/event_teach_large.c: 616:     return TIMED_RESPONSE_RESULT_NEXT;
 16951   00B05C  0E02               	movlw	2
 16952   00B05E  0012               	return		;funcret
 16953   00B060                     __end_of_nerdCallback:
 16954                           	callstack 0
 16955                           
 16956 ;; *************** function _nvTRnvrdCallback *****************
 16957 ;; Defined at:
 16958 ;;		line 371 in file "../../VLCBlib_PIC/nv.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;  type            1    wreg     unsigned char 
 16961 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 16962 ;;  step            1   27[BANK1 ] unsigned char 
 16963 ;; Auto vars:     Size  Location     Type
 16964 ;;  type            1    0[COMRAM] unsigned char 
 16965 ;;  valueOrError    2   28[BANK1 ] short 
 16966 ;; Return value:  Size  Location     Type
 16967 ;;                  1    wreg      enum E12946
 16968 ;; Registers used:
 16969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 16970 ;; Tracked objects:
 16971 ;;		On entry : 0/0
 16972 ;;		On exit  : 0/0
 16973 ;;		Unchanged: 0/0
 16974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16975 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16976 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16978 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16979 ;;Total ram usage:        4 bytes
 16980 ;; Hardware stack levels used: 1
 16981 ;; Hardware stack levels required when called: 17
 16982 ;; This function calls:
 16983 ;;		_getNV
 16984 ;;		_sendMessage4
 16985 ;; This function is called by:
 16986 ;;		_nvProcessMessage
 16987 ;;		_pollTimedResponse
 16988 ;; This function uses a non-reentrant model
 16989 ;;
 16990                           
 16991                           	psect	text43
 16992   00BAF6                     __ptext43:
 16993                           	callstack 0
 16994   00BAF6                     _nvTRnvrdCallback:
 16995                           	callstack 11
 16996                           
 16997                           ;../../VLCBlib_PIC/nv.c: 372:     int16_t valueOrError;;../../VLCBlib_PIC/nv.c: 373:    
      +                           if (step > (15+7*16)) {
 16998                           
 16999                           ;incstack = 0
 17000   00BAF6  0E7F               	movlw	127
 17001   00BAF8  0101               	movlb	1	; () banked
 17002   00BAFA  65D5               	cpfsgt	nvTRnvrdCallback@step& (0+255),b
 17003   00BAFC  D002               	goto	l21978
 17004   00BAFE                     u22950:
 17005                           
 17006                           ; BSR set to: 1
 17007                           ;../../VLCBlib_PIC/nv.c: 374:         return TIMED_RESPONSE_RESULT_FINISHED;
 17008   00BAFE  0E00               	movlw	0
 17009   00BB00  0012               	return	
 17010   00BB02                     l21978:
 17011                           
 17012                           ; BSR set to: 1
 17013                           ;../../VLCBlib_PIC/nv.c: 376:     valueOrError = getNV(step+1);
 17014   00BB02  29D5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17015   00BB04  ECD9  F05D         	call	_getNV
 17016   00BB08  C08D  F1D6         	movff	?_getNV,nvTRnvrdCallback@valueOrError
 17017   00BB0C  C08E  F1D7         	movff	?_getNV+1,nvTRnvrdCallback@valueOrError+1
 17018                           
 17019                           ;../../VLCBlib_PIC/nv.c: 377:     if (valueOrError < 0) {
 17020   00BB10  0101               	movlb	1	; () banked
 17021   00BB12  BFD7               	btfsc	(nvTRnvrdCallback@valueOrError+1)& (0+255),7,b
 17022   00BB14  D7F4               	goto	u22950
 17023                           
 17024                           ; BSR set to: 1
 17025                           ;../../VLCBlib_PIC/nv.c: 380:     sendMessage4(OPC_NVANS, nn.bytes.hi, nn.bytes.lo, step
      +                          +1, (uint8_t)(valueOrError));
 17026   00BB16  C0C0  F1C2         	movff	_nn+1,sendMessage4@data1
 17027   00BB1A  C0BF  F1C3         	movff	_nn,sendMessage4@data2
 17028   00BB1E  29D5               	incf	nvTRnvrdCallback@step& (0+255),w,b
 17029   00BB20  6FC4               	movwf	sendMessage4@data3& (0+255),b
 17030   00BB22  C1D6  F1C5         	movff	nvTRnvrdCallback@valueOrError,sendMessage4@data4
 17031   00BB26  0E97               	movlw	151
 17032   00BB28  EC80  F05F         	call	_sendMessage4
 17033                           
 17034                           ;../../VLCBlib_PIC/nv.c: 382:     nvDiagnostics[0x01].asUint++;
 17035   00BB2C  0101               	movlb	1	; () banked
 17036   00BB2E  4BA6               	infsnz	(_nvDiagnostics+2)& (0+255),f,b
 17037   00BB30  2BA7               	incf	(_nvDiagnostics+3)& (0+255),f,b
 17038                           
 17039                           ; BSR set to: 1
 17040                           ;../../VLCBlib_PIC/nv.c: 384:     return TIMED_RESPONSE_RESULT_NEXT;
 17041   00BB32  0E02               	movlw	2
 17042                           
 17043                           ; BSR set to: 1
 17044   00BB34  0012               	return		;funcret
 17045   00BB36                     __end_of_nvTRnvrdCallback:
 17046                           	callstack 0
 17047                           
 17048 ;; *************** function _mnsTRserviceDiscoveryCallback *****************
 17049 ;; Defined at:
 17050 ;;		line 896 in file "../../VLCBlib_PIC/mns.c"
 17051 ;; Parameters:    Size  Location     Type
 17052 ;;  type            1    wreg     unsigned char 
 17053 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17054 ;;  step            1   27[BANK1 ] unsigned char 
 17055 ;; Auto vars:     Size  Location     Type
 17056 ;;  type            1    0[COMRAM] unsigned char 
 17057 ;; Return value:  Size  Location     Type
 17058 ;;                  1    wreg      enum E12929
 17059 ;; Registers used:
 17060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17061 ;; Tracked objects:
 17062 ;;		On entry : 0/0
 17063 ;;		On exit  : 0/0
 17064 ;;		Unchanged: 0/0
 17065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17066 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17068 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17069 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17070 ;;Total ram usage:        6 bytes
 17071 ;; Hardware stack levels used: 1
 17072 ;; Hardware stack levels required when called: 17
 17073 ;; This function calls:
 17074 ;;		_sendMessage5
 17075 ;; This function is called by:
 17076 ;;		_mnsProcessMessage
 17077 ;;		_pollTimedResponse
 17078 ;; This function uses a non-reentrant model
 17079 ;;
 17080                           
 17081                           	psect	text44
 17082   00A314                     __ptext44:
 17083                           	callstack 0
 17084   00A314                     _mnsTRserviceDiscoveryCallback:
 17085                           	callstack 11
 17086                           
 17087                           ;../../VLCBlib_PIC/mns.c: 897:     if (step >= 9) {
 17088                           
 17089                           ; BSR set to: 1
 17090                           ;incstack = 0
 17091   00A314  0E08               	movlw	8
 17092   00A316  0101               	movlb	1	; () banked
 17093   00A318  65D5               	cpfsgt	mnsTRserviceDiscoveryCallback@step& (0+255),b
 17094   00A31A  D002               	goto	l21898
 17095                           
 17096                           ; BSR set to: 1
 17097                           ;../../VLCBlib_PIC/mns.c: 898:         return TIMED_RESPONSE_RESULT_FINISHED;
 17098   00A31C  0E00               	movlw	0
 17099   00A31E  0012               	return	
 17100   00A320                     l21898:
 17101                           
 17102                           ; BSR set to: 1
 17103                           ;../../VLCBlib_PIC/mns.c: 901:         sendMessage5(OPC_SD, nn.bytes.hi, nn.bytes.lo, st
      +                          ep+1, services[step]->serviceNo, services[step]->version);
 17104   00A320  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 17105   00A324  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 17106   00A328  29D5               	incf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17107   00A32A  6FC4               	movwf	sendMessage5@data3& (0+255),b
 17108   00A32C  51D5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17109   00A32E  0D02               	mullw	2
 17110   00A330  0E75               	movlw	low _services
 17111   00A332  24F3               	addwf	243,w,c
 17112   00A334  6EF6               	movwf	tblptrl,c
 17113   00A336  0EEE               	movlw	high _services
 17114   00A338  20F4               	addwfc	244,w,c
 17115   00A33A  6EF7               	movwf	tblptrh,c
 17116   00A33C                     	if	1	;There are 3 active tblptr bytes
 17117   00A33C  6AF8               	clrf	tblptru,c
 17118   00A33E  0E00               	movlw	low (__mediumconst shr (0+16))
 17119   00A340  22F8               	addwfc	tblptru,f,c
 17120   00A342                     	endif
 17121   00A342  0009               	tblrd		*+
 17122   00A344  CFF5 F1D6          	movff	tablat,??_mnsTRserviceDiscoveryCallback
 17123   00A348  0009               	tblrd		*+
 17124   00A34A  CFF5 F1D7          	movff	tablat,??_mnsTRserviceDiscoveryCallback+1
 17125   00A34E  C1D6  FFF6         	movff	??_mnsTRserviceDiscoveryCallback,tblptrl
 17126   00A352  C1D7  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+1,tblptrh
 17127   00A356                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17128   00A356  6AF8               	clrf	tblptru,c
 17129   00A358                     	endif
 17130   00A358                     	if	0	;tblptru may be non-zero
 17131   00A358                     	endif
 17132   00A358  0008               	tblrd		*
 17133   00A35A  CFF5 F1C5          	movff	tablat,sendMessage5@data4
 17134   00A35E  51D5               	movf	mnsTRserviceDiscoveryCallback@step& (0+255),w,b
 17135   00A360  0D02               	mullw	2
 17136   00A362  0E75               	movlw	low _services
 17137   00A364  24F3               	addwf	243,w,c
 17138   00A366  6EF6               	movwf	tblptrl,c
 17139   00A368  0EEE               	movlw	high _services
 17140   00A36A  20F4               	addwfc	244,w,c
 17141   00A36C  6EF7               	movwf	tblptrh,c
 17142   00A36E                     	if	1	;There are 3 active tblptr bytes
 17143   00A36E  6AF8               	clrf	tblptru,c
 17144   00A370  0E00               	movlw	low (__mediumconst shr (0+16))
 17145   00A372  22F8               	addwfc	tblptru,f,c
 17146   00A374                     	endif
 17147   00A374  0009               	tblrd		*+
 17148   00A376  CFF5 F1D8          	movff	tablat,??_mnsTRserviceDiscoveryCallback+2
 17149   00A37A  0009               	tblrd		*+
 17150   00A37C  CFF5 F1D9          	movff	tablat,??_mnsTRserviceDiscoveryCallback+3
 17151   00A380  0E01               	movlw	1
 17152   00A382  27D8               	addwf	(??_mnsTRserviceDiscoveryCallback+2)& (0+255),f,b
 17153   00A384  0E00               	movlw	0
 17154   00A386  23D9               	addwfc	(??_mnsTRserviceDiscoveryCallback+3)& (0+255),f,b
 17155   00A388  C1D8  FFF6         	movff	??_mnsTRserviceDiscoveryCallback+2,tblptrl
 17156   00A38C  C1D9  FFF7         	movff	??_mnsTRserviceDiscoveryCallback+3,tblptrh
 17157   00A390                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17158   00A390  6AF8               	clrf	tblptru,c
 17159   00A392                     	endif
 17160   00A392                     	if	0	;tblptru may be non-zero
 17161   00A392                     	endif
 17162   00A392  0008               	tblrd		*
 17163   00A394  CFF5 F1C6          	movff	tablat,sendMessage5@data5
 17164   00A398  0EAC               	movlw	172
 17165   00A39A  EC68  F05F         	call	_sendMessage5
 17166                           
 17167                           ;../../VLCBlib_PIC/mns.c: 903:     return TIMED_RESPONSE_RESULT_NEXT;
 17168   00A39E  0E02               	movlw	2
 17169   00A3A0  0012               	return		;funcret
 17170   00A3A2                     __end_of_mnsTRserviceDiscoveryCallback:
 17171                           	callstack 0
 17172                           
 17173 ;; *************** function _mnsTRallDiagnosticsCallback *****************
 17174 ;; Defined at:
 17175 ;;		line 915 in file "../../VLCBlib_PIC/mns.c"
 17176 ;; Parameters:    Size  Location     Type
 17177 ;;  type            1    wreg     unsigned char 
 17178 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17179 ;;  step            1   27[BANK1 ] unsigned char 
 17180 ;; Auto vars:     Size  Location     Type
 17181 ;;  type            1    0[COMRAM] unsigned char 
 17182 ;;  d               2   32[BANK1 ] PTR struct DiagnosticVal
 17183 ;;		 -> producerDiagnostics(4), teachDiagnostics(4), canDiagnostics(38), nvDiagnostics(6), 
 17184 ;;		 -> mnsDiagnostics(14), ackDiagnostics(4), consumer2QDiagnostics(4), NULL(0), 
 17185 ;; Return value:  Size  Location     Type
 17186 ;;                  1    wreg      enum E12929
 17187 ;; Registers used:
 17188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17189 ;; Tracked objects:
 17190 ;;		On entry : 0/0
 17191 ;;		On exit  : 0/0
 17192 ;;		Unchanged: 0/0
 17193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17194 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17195 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17196 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17197 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17198 ;;Total ram usage:        8 bytes
 17199 ;; Hardware stack levels used: 1
 17200 ;; Hardware stack levels required when called: 17
 17201 ;; This function calls:
 17202 ;;		NULL
 17203 ;;		_ackGetDiagnostic
 17204 ;;		_canGetDiagnostic
 17205 ;;		_consumer2QGetDiagnostic
 17206 ;;		_mnsGetDiagnostic
 17207 ;;		_nvGetDiagnostic
 17208 ;;		_producerGetDiagnostic
 17209 ;;		_sendMessage6
 17210 ;;		_teachGetDiagnostic
 17211 ;; This function is called by:
 17212 ;;		_mnsProcessMessage
 17213 ;;		_pollTimedResponse
 17214 ;; This function uses a non-reentrant model
 17215 ;;
 17216                           
 17217                           	psect	text45
 17218   008452                     __ptext45:
 17219                           	callstack 0
 17220   008452                     _mnsTRallDiagnosticsCallback:
 17221                           	callstack 11
 17222                           
 17223                           ;../../VLCBlib_PIC/mns.c: 916:     if (services[serviceIndex]->getDiagnostic == ((void*)
      +                          0)) {
 17224                           
 17225                           ;incstack = 0
 17226   008452  0101               	movlb	1	; () banked
 17227   008454  51D4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17228   008456  0D02               	mullw	2
 17229   008458  0E75               	movlw	low _services
 17230   00845A  24F3               	addwf	243,w,c
 17231   00845C  6EF6               	movwf	tblptrl,c
 17232   00845E  0EEE               	movlw	high _services
 17233   008460  20F4               	addwfc	244,w,c
 17234   008462  6EF7               	movwf	tblptrh,c
 17235   008464                     	if	1	;There are 3 active tblptr bytes
 17236   008464  6AF8               	clrf	tblptru,c
 17237   008466  0E00               	movlw	low (__mediumconst shr (0+16))
 17238   008468  22F8               	addwfc	tblptru,f,c
 17239   00846A                     	endif
 17240   00846A  0009               	tblrd		*+
 17241   00846C  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17242   008470  0009               	tblrd		*+
 17243   008472  CFF5 F1D7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17244   008476  0E10               	movlw	16
 17245   008478  27D6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17246   00847A  0E00               	movlw	0
 17247   00847C  23D7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17248   00847E  C1D6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17249   008482  C1D7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17250   008486                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17251   008486  6AF8               	clrf	tblptru,c
 17252   008488                     	endif
 17253   008488                     	if	0	;tblptru may be non-zero
 17254   008488                     	endif
 17255   008488  0009               	tblrd		*+
 17256   00848A  50F5               	movf	tablat,w,c
 17257   00848C  0009               	tblrd		*+
 17258   00848E  10F5               	iorwf	tablat,w,c
 17259   008490  A4D8               	btfss	status,2,c
 17260   008492  D002               	goto	l21910
 17261   008494                     u22890:
 17262                           
 17263                           ; BSR set to: 1
 17264                           ;../../VLCBlib_PIC/mns.c: 917:         return TIMED_RESPONSE_RESULT_FINISHED;
 17265   008494  0E00               	movlw	0
 17266   008496  0012               	return	
 17267   008498                     l21910:
 17268                           
 17269                           ; BSR set to: 1
 17270                           ;../../VLCBlib_PIC/mns.c: 919:     DiagnosticVal * d = services[serviceIndex]->getDiagno
      +                          stic(step);
 17271   008498  51D4               	movf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17272   00849A  0D02               	mullw	2
 17273   00849C  0E75               	movlw	low _services
 17274   00849E  24F3               	addwf	243,w,c
 17275   0084A0  6EF6               	movwf	tblptrl,c
 17276   0084A2  0EEE               	movlw	high _services
 17277   0084A4  20F4               	addwfc	244,w,c
 17278   0084A6  6EF7               	movwf	tblptrh,c
 17279   0084A8                     	if	1	;There are 3 active tblptr bytes
 17280   0084A8  6AF8               	clrf	tblptru,c
 17281   0084AA  0E00               	movlw	low (__mediumconst shr (0+16))
 17282   0084AC  22F8               	addwfc	tblptru,f,c
 17283   0084AE                     	endif
 17284   0084AE  0009               	tblrd		*+
 17285   0084B0  CFF5 F1D6          	movff	tablat,??_mnsTRallDiagnosticsCallback
 17286   0084B4  0009               	tblrd		*+
 17287   0084B6  CFF5 F1D7          	movff	tablat,??_mnsTRallDiagnosticsCallback+1
 17288   0084BA  0E10               	movlw	16
 17289   0084BC  27D6               	addwf	??_mnsTRallDiagnosticsCallback& (0+255),f,b
 17290   0084BE  0E00               	movlw	0
 17291   0084C0  23D7               	addwfc	(??_mnsTRallDiagnosticsCallback+1)& (0+255),f,b
 17292   0084C2  C1D6  FFF6         	movff	??_mnsTRallDiagnosticsCallback,tblptrl
 17293   0084C6  C1D7  FFF7         	movff	??_mnsTRallDiagnosticsCallback+1,tblptrh
 17294   0084CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 17295   0084CA  6AF8               	clrf	tblptru,c
 17296   0084CC                     	endif
 17297   0084CC                     	if	0	;tblptru may be non-zero
 17298   0084CC                     	endif
 17299   0084CC  0009               	tblrd		*+
 17300   0084CE  CFF5 F1D8          	movff	tablat,??_mnsTRallDiagnosticsCallback+2
 17301   0084D2  0009               	tblrd		*+
 17302   0084D4  CFF5 F1D9          	movff	tablat,??_mnsTRallDiagnosticsCallback+3
 17303   0084D8  D801               	call	u22908
 17304   0084DA  D00A               	goto	u22909
 17305   0084DC                     u22908:
 17306   0084DC  0005               	push	
 17307   0084DE  6EFA               	movwf	pclath,c
 17308   0084E0  51D8               	movf	(??_mnsTRallDiagnosticsCallback+2)& (0+255),w,b
 17309   0084E2  6EFD               	movwf	tosl,c
 17310   0084E4  51D9               	movf	(??_mnsTRallDiagnosticsCallback+3)& (0+255),w,b
 17311   0084E6  6EFE               	movwf	tosh,c
 17312   0084E8  6AFF               	clrf	tosu,c
 17313   0084EA  50FA               	movf	pclath,w,c
 17314   0084EC  51D5               	movf	mnsTRallDiagnosticsCallback@step& (0+255),w,b
 17315   0084EE  0012               	return		;indir
 17316   0084F0                     u22909:
 17317   0084F0  C096  F1DA         	movff	?_producerGetDiagnostic,mnsTRallDiagnosticsCallback@d
 17318   0084F4  C097  F1DB         	movff	?_producerGetDiagnostic+1,mnsTRallDiagnosticsCallback@d+1
 17319                           
 17320                           ;../../VLCBlib_PIC/mns.c: 920:     if (d == ((void*)0)) {
 17321   0084F8  0101               	movlb	1	; () banked
 17322   0084FA  51DA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17323   0084FC  11DB               	iorwf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17324   0084FE  B4D8               	btfsc	status,2,c
 17325   008500  D7C9               	goto	u22890
 17326                           
 17327                           ; BSR set to: 1
 17328                           ;../../VLCBlib_PIC/mns.c: 925:     sendMessage6(OPC_DGN, nn.bytes.hi, nn.bytes.lo, servi
      +                          ceIndex+1, step, d->asBytes.hi, d->asBytes.lo);
 17329   008502  C0C0  F1C2         	movff	_nn+1,sendMessage6@data1
 17330   008506  C0BF  F1C3         	movff	_nn,sendMessage6@data2
 17331   00850A  29D4               	incf	mnsTRallDiagnosticsCallback@serviceIndex& (0+255),w,b
 17332   00850C  6FC4               	movwf	sendMessage6@data3& (0+255),b
 17333   00850E  C1D5  F1C5         	movff	mnsTRallDiagnosticsCallback@step,sendMessage6@data4
 17334   008512  EE20 F001          	lfsr	2,1
 17335   008516  51DA               	movf	mnsTRallDiagnosticsCallback@d& (0+255),w,b
 17336   008518  26D9               	addwf	fsr2l,f,c
 17337   00851A  51DB               	movf	(mnsTRallDiagnosticsCallback@d+1)& (0+255),w,b
 17338   00851C  22DA               	addwfc	fsr2h,f,c
 17339   00851E  50DF               	movf	indf2,w,c
 17340   008520  6FC6               	movwf	sendMessage6@data5& (0+255),b
 17341   008522  C1DA  FFD9         	movff	mnsTRallDiagnosticsCallback@d,fsr2l
 17342   008526  C1DB  FFDA         	movff	mnsTRallDiagnosticsCallback@d+1,fsr2h
 17343   00852A  50DF               	movf	indf2,w,c
 17344   00852C  6FC7               	movwf	sendMessage6@data6& (0+255),b
 17345   00852E  0EC7               	movlw	199
 17346   008530  EC20  F05F         	call	_sendMessage6
 17347                           
 17348                           ;../../VLCBlib_PIC/mns.c: 926:     return TIMED_RESPONSE_RESULT_NEXT;
 17349   008534  0E02               	movlw	2
 17350   008536  0012               	return		;funcret
 17351   008538                     __end_of_mnsTRallDiagnosticsCallback:
 17352                           	callstack 0
 17353                           
 17354 ;; *************** function _mnsTRrqnpnCallback *****************
 17355 ;; Defined at:
 17356 ;;		line 938 in file "../../VLCBlib_PIC/mns.c"
 17357 ;; Parameters:    Size  Location     Type
 17358 ;;  type            1    wreg     unsigned char 
 17359 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17360 ;;  step            1   27[BANK1 ] unsigned char 
 17361 ;; Auto vars:     Size  Location     Type
 17362 ;;  type            1    0[COMRAM] unsigned char 
 17363 ;; Return value:  Size  Location     Type
 17364 ;;                  1    wreg      enum E12929
 17365 ;; Registers used:
 17366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17367 ;; Tracked objects:
 17368 ;;		On entry : 0/0
 17369 ;;		On exit  : 0/0
 17370 ;;		Unchanged: 0/0
 17371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17372 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17375 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17376 ;;Total ram usage:        2 bytes
 17377 ;; Hardware stack levels used: 1
 17378 ;; Hardware stack levels required when called: 17
 17379 ;; This function calls:
 17380 ;;		_getParameter
 17381 ;;		_sendMessage4
 17382 ;; This function is called by:
 17383 ;;		_mnsProcessMessage
 17384 ;;		_pollTimedResponse
 17385 ;; This function uses a non-reentrant model
 17386 ;;
 17387                           
 17388                           	psect	text46
 17389   00C014                     __ptext46:
 17390                           	callstack 0
 17391   00C014                     _mnsTRrqnpnCallback:
 17392                           	callstack 11
 17393                           
 17394                           ;../../VLCBlib_PIC/mns.c: 939:     if (step >= 20) {
 17395                           
 17396                           ;incstack = 0
 17397   00C014  0E13               	movlw	19
 17398   00C016  0101               	movlb	1	; () banked
 17399   00C018  65D5               	cpfsgt	mnsTRrqnpnCallback@step& (0+255),b
 17400   00C01A  D002               	goto	l21930
 17401                           
 17402                           ; BSR set to: 1
 17403                           ;../../VLCBlib_PIC/mns.c: 940:         return TIMED_RESPONSE_RESULT_FINISHED;
 17404   00C01C  0E00               	movlw	0
 17405   00C01E  0012               	return	
 17406   00C020                     l21930:
 17407                           
 17408                           ; BSR set to: 1
 17409                           ;../../VLCBlib_PIC/mns.c: 942:     sendMessage4(OPC_PARAN, nn.bytes.hi, nn.bytes.lo, ste
      +                          p+1, getParameter(step+1));
 17410   00C020  C0C0  F1C2         	movff	_nn+1,sendMessage4@data1
 17411   00C024  C0BF  F1C3         	movff	_nn,sendMessage4@data2
 17412   00C028  29D5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17413   00C02A  6FC4               	movwf	sendMessage4@data3& (0+255),b
 17414   00C02C  29D5               	incf	mnsTRrqnpnCallback@step& (0+255),w,b
 17415   00C02E  EC0F  F043         	call	_getParameter
 17416   00C032  0101               	movlb	1	; () banked
 17417   00C034  6FC5               	movwf	sendMessage4@data4& (0+255),b
 17418   00C036  0E9B               	movlw	155
 17419   00C038  EC80  F05F         	call	_sendMessage4
 17420                           
 17421                           ;../../VLCBlib_PIC/mns.c: 943:     return TIMED_RESPONSE_RESULT_NEXT;
 17422   00C03C  0E02               	movlw	2
 17423   00C03E  0012               	return		;funcret
 17424   00C040                     __end_of_mnsTRrqnpnCallback:
 17425                           	callstack 0
 17426                           
 17427 ;; *************** function _sodTRCallback *****************
 17428 ;; Defined at:
 17429 ;;		line 403 in file "../universalEvents.c"
 17430 ;; Parameters:    Size  Location     Type
 17431 ;;  type            1    wreg     unsigned char 
 17432 ;;  serviceIndex    1   26[BANK1 ] unsigned char 
 17433 ;;  step            1   27[BANK1 ] unsigned char 
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;  type            1    0[COMRAM] unsigned char 
 17436 ;;  io              1   38[BANK1 ] unsigned char 
 17437 ;;  flags           1   37[BANK1 ] unsigned char 
 17438 ;;  event_invert    1   36[BANK1 ] enum E12761
 17439 ;;  value           1   35[BANK1 ] enum E12781
 17440 ;;  disable_off     1   34[BANK1 ] enum E12761
 17441 ;;  happeningInd    1   33[BANK1 ] unsigned char 
 17442 ;;  send_off_ok     1   30[BANK1 ] enum E12761
 17443 ;;  send_on_ok      1   29[BANK1 ] enum E12761
 17444 ;;  disable_SOD_    1   28[BANK1 ] enum E12761
 17445 ;; Return value:  Size  Location     Type
 17446 ;;                  1    wreg      enum E13013
 17447 ;; Registers used:
 17448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 17449 ;; Tracked objects:
 17450 ;;		On entry : 0/0
 17451 ;;		On exit  : 0/0
 17452 ;;		Unchanged: 0/0
 17453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17454 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17455 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17457 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17458 ;;Total ram usage:       13 bytes
 17459 ;; Hardware stack levels used: 1
 17460 ;; Hardware stack levels required when called: 19
 17461 ;; This function calls:
 17462 ;;		_APP_GetEventState
 17463 ;;		___awdiv
 17464 ;;		_getNV
 17465 ;;		_sendInvertedProducedEvent
 17466 ;; This function is called by:
 17467 ;;		_doSOD
 17468 ;;		_pollTimedResponse
 17469 ;; This function uses a non-reentrant model
 17470 ;;
 17471                           
 17472                           	psect	text47
 17473   008268                     __ptext47:
 17474                           	callstack 0
 17475   008268                     _sodTRCallback:
 17476                           	callstack 9
 17477                           
 17478                           ;../universalEvents.c: 404:     uint8_t io;;../universalEvents.c: 405:     uint8_t happe
      +                          ningIndex;;../universalEvents.c: 406:     Boolean disable_off;;../universalEvents.c: 407
      +                          :  Boolean send_on_ok;;../universalEvents.c: 408:  Boolean send_off_ok;;../universalEven
      +                          ts.c: 409:  Boolean event_inverted;;../universalEvents.c: 410:     Boolean disable_SOD_r
      +                          esponse;;../universalEvents.c: 411:     uint8_t flags;;../universalEvents.c: 412:     Ev
      +                          entState value;;../universalEvents.c: 415:     io = step/4;
 17479                           
 17480                           ;incstack = 0
 17481   008268  C1D5  F097         	movff	sodTRCallback@step,___awdiv@dividend
 17482   00826C  0100               	movlb	0	; () banked
 17483   00826E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17484   008270  0E00               	movlw	0
 17485   008272  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17486   008274  0E04               	movlw	4
 17487   008276  6F99               	movwf	___awdiv@divisor& (0+255),b
 17488   008278  ECA3  F052         	call	___awdiv	;wreg free
 17489   00827C  0100               	movlb	0	; () banked
 17490   00827E  5197               	movf	?___awdiv& (0+255),w,b
 17491   008280  0101               	movlb	1	; () banked
 17492   008282  6FE0               	movwf	sodTRCallback@io& (0+255),b
 17493                           
 17494                           ; BSR set to: 1
 17495                           ;../universalEvents.c: 416:     if (io >= 16) {
 17496   008284  0E0F               	movlw	15
 17497   008286  65E0               	cpfsgt	sodTRCallback@io& (0+255),b
 17498   008288  D002               	goto	l21458
 17499                           
 17500                           ; BSR set to: 1
 17501                           ;../universalEvents.c: 417:         return TIMED_RESPONSE_RESULT_FINISHED;
 17502   00828A  0E00               	movlw	0
 17503   00828C  0012               	return	
 17504   00828E                     l21458:
 17505                           
 17506                           ; BSR set to: 1
 17507                           ;../universalEvents.c: 419:     happeningIndex = step%4;
 17508   00828E  51D5               	movf	sodTRCallback@step& (0+255),w,b
 17509   008290  0B03               	andlw	3
 17510   008292  6FDB               	movwf	sodTRCallback@happeningIndex& (0+255),b
 17511                           
 17512                           ; BSR set to: 1
 17513                           ;../universalEvents.c: 420:     flags = (uint8_t)getNV((16 + 7*(io) + 1));;
 17514   008294  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17515   008296  0D07               	mullw	7
 17516   008298  50F3               	movf	243,w,c
 17517   00829A  0F11               	addlw	17
 17518   00829C  ECD9  F05D         	call	_getNV
 17519   0082A0  0100               	movlb	0	; () banked
 17520   0082A2  518D               	movf	?_getNV& (0+255),w,b
 17521   0082A4  0101               	movlb	1	; () banked
 17522   0082A6  6FDF               	movwf	sodTRCallback@flags& (0+255),b
 17523                           
 17524                           ; BSR set to: 1
 17525                           ;../universalEvents.c: 421:     disable_SOD_response = flags & 0x20;
 17526   0082A8  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17527   0082AA  0B20               	andlw	32
 17528   0082AC  6FD6               	movwf	sodTRCallback@disable_SOD_response& (0+255),b
 17529                           
 17530                           ; BSR set to: 1
 17531                           ;../universalEvents.c: 423:     event_inverted = flags & 0x40;
 17532   0082AE  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17533   0082B0  0B40               	andlw	64
 17534   0082B2  6FDE               	movwf	sodTRCallback@event_inverted& (0+255),b
 17535                           
 17536                           ; BSR set to: 1
 17537                           ;../universalEvents.c: 424:     disable_off = flags & 0x08;
 17538   0082B4  51DF               	movf	sodTRCallback@flags& (0+255),w,b
 17539   0082B6  0B08               	andlw	8
 17540   0082B8  6FDC               	movwf	sodTRCallback@disable_off& (0+255),b
 17541                           
 17542                           ; BSR set to: 1
 17543                           ;../universalEvents.c: 425:     send_on_ok = !( disable_off && event_inverted );
 17544   0082BA  0E01               	movlw	1
 17545   0082BC  6FD9               	movwf	_sodTRCallback$1424& (0+255),b
 17546                           
 17547                           ; BSR set to: 1
 17548   0082BE  51DC               	movf	sodTRCallback@disable_off& (0+255),w,b
 17549   0082C0  B4D8               	btfsc	status,2,c
 17550   0082C2  D005               	goto	l21476
 17551                           
 17552                           ; BSR set to: 1
 17553   0082C4  51DE               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17554   0082C6  B4D8               	btfsc	status,2,c
 17555   0082C8  D002               	goto	l21476
 17556                           
 17557                           ; BSR set to: 1
 17558   0082CA  0E00               	movlw	0
 17559   0082CC  6FD9               	movwf	_sodTRCallback$1424& (0+255),b
 17560   0082CE                     l21476:
 17561                           
 17562                           ; BSR set to: 1
 17563   0082CE  C1D9  F1D7         	movff	_sodTRCallback$1424,sodTRCallback@send_on_ok
 17564                           
 17565                           ;../universalEvents.c: 426:     send_off_ok = !( disable_off && !event_inverted);
 17566   0082D2  0E01               	movlw	1
 17567   0082D4  6FDA               	movwf	_sodTRCallback$1425& (0+255),b
 17568   0082D6  51DC               	movf	sodTRCallback@disable_off& (0+255),w,b
 17569   0082D8  B4D8               	btfsc	status,2,c
 17570   0082DA  D005               	goto	l21482
 17571                           
 17572                           ; BSR set to: 1
 17573   0082DC  51DE               	movf	sodTRCallback@event_inverted& (0+255),w,b
 17574   0082DE  A4D8               	btfss	status,2,c
 17575   0082E0  D002               	goto	l21482
 17576                           
 17577                           ; BSR set to: 1
 17578   0082E2  0E00               	movlw	0
 17579   0082E4  6FDA               	movwf	_sodTRCallback$1425& (0+255),b
 17580   0082E6                     l21482:
 17581                           
 17582                           ; BSR set to: 1
 17583   0082E6  C1DA  F1D8         	movff	_sodTRCallback$1425,sodTRCallback@send_off_ok
 17584                           
 17585                           ; BSR set to: 1
 17586                           ;../universalEvents.c: 428:     value = APP_GetEventState((8 + 4*(io))+happeningIndex);
 17587   0082EA  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17588   0082EC  0D04               	mullw	4
 17589   0082EE  50F3               	movf	243,w,c
 17590   0082F0  25DB               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17591   0082F2  0F08               	addlw	8
 17592   0082F4  EC3B  F01E         	call	_APP_GetEventState
 17593   0082F8  0101               	movlb	1	; () banked
 17594   0082FA  6FDD               	movwf	sodTRCallback@value& (0+255),b
 17595                           
 17596                           ;../universalEvents.c: 430:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17597   0082FC  D00C               	goto	l21496
 17598   0082FE                     l21486:
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;../universalEvents.c: 436:             if (disable_SOD_response) {
 17602   0082FE  0101               	movlb	1	; () banked
 17603   008300  51D6               	movf	sodTRCallback@disable_SOD_response& (0+255),w,b
 17604   008302  B4D8               	btfsc	status,2,c
 17605   008304  D01C               	goto	l21498
 17606   008306                     u22080:
 17607                           
 17608                           ;../universalEvents.c: 437:                 return TIMED_RESPONSE_RESULT_NEXT;
 17609   008306  0E02               	movlw	2
 17610   008308  0012               	return	
 17611   00830A                     l21492:
 17612                           
 17613                           ; BSR set to: 0
 17614                           ;../universalEvents.c: 448:             send_on_ok = TRUE;
 17615   00830A  0E01               	movlw	1
 17616   00830C  0101               	movlb	1	; () banked
 17617   00830E  6FD7               	movwf	sodTRCallback@send_on_ok& (0+255),b
 17618                           
 17619                           ;../universalEvents.c: 449:             send_off_ok = TRUE;
 17620   008310  0E01               	movlw	1
 17621   008312  6FD8               	movwf	sodTRCallback@send_off_ok& (0+255),b
 17622                           
 17623                           ;../universalEvents.c: 450:             break;
 17624   008314  D014               	goto	l21498
 17625   008316                     l21496:
 17626                           
 17627                           ; BSR set to: 1
 17628   008316  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17629   008318  0D07               	mullw	7
 17630   00831A  50F3               	movf	243,w,c
 17631   00831C  0F10               	addlw	16
 17632   00831E  ECD9  F05D         	call	_getNV
 17633   008322  0100               	movlb	0	; () banked
 17634   008324  518D               	movf	?_getNV& (0+255),w,b
 17635                           
 17636                           ; Switch size 1, requested type "simple"
 17637                           ; Number of cases is 4, Range of values is 0 to 4
 17638                           ; switch strategies available:
 17639                           ; Name         Instructions Cycles
 17640                           ; simple_byte           13     7 (average)
 17641                           ;	Chosen strategy is simple_byte
 17642   008326  0A00               	xorlw	0	; case 0
 17643   008328  B4D8               	btfsc	status,2,c
 17644   00832A  D7E9               	goto	l21486
 17645   00832C  0A02               	xorlw	2	; case 2
 17646   00832E  B4D8               	btfsc	status,2,c
 17647   008330  D7EC               	goto	l21492
 17648   008332  0A01               	xorlw	1	; case 3
 17649   008334  B4D8               	btfsc	status,2,c
 17650   008336  D7E9               	goto	l21492
 17651   008338  0A07               	xorlw	7	; case 4
 17652   00833A  B4D8               	btfsc	status,2,c
 17653   00833C  D7E6               	goto	l21492
 17654   00833E                     l21498:
 17655                           
 17656                           ;../universalEvents.c: 453:     if (value != EVENT_UNKNOWN) {
 17657   00833E  0101               	movlb	1	; () banked
 17658   008340  29DD               	incf	sodTRCallback@value& (0+255),w,b
 17659   008342  B4D8               	btfsc	status,2,c
 17660   008344  D7E0               	goto	u22080
 17661                           
 17662                           ; BSR set to: 1
 17663                           ;../universalEvents.c: 454:         sendInvertedProducedEvent((8 + 4*(io))+happeningInde
      +                          x, value, event_inverted, send_on_ok, send_off_ok);
 17664   008346  C1DD  F1CC         	movff	sodTRCallback@value,sendInvertedProducedEvent@state
 17665   00834A  C1DE  F1CD         	movff	sodTRCallback@event_inverted,sendInvertedProducedEvent@invert
 17666   00834E  C1D7  F1CE         	movff	sodTRCallback@send_on_ok,sendInvertedProducedEvent@can_send_on
 17667   008352  C1D8  F1CF         	movff	sodTRCallback@send_off_ok,sendInvertedProducedEvent@can_send_off
 17668   008356  51E0               	movf	sodTRCallback@io& (0+255),w,b
 17669   008358  0D04               	mullw	4
 17670   00835A  50F3               	movf	243,w,c
 17671   00835C  25DB               	addwf	sodTRCallback@happeningIndex& (0+255),w,b
 17672   00835E  0F08               	addlw	8
 17673   008360  EC7E  F05C         	call	_sendInvertedProducedEvent
 17674   008364  D7D0               	goto	u22080
 17675   008366                     __end_of_sodTRCallback:
 17676                           	callstack 0
 17677                           
 17678 ;; *************** function _APP_GetEventState *****************
 17679 ;; Defined at:
 17680 ;;		line 427 in file "../main.c"
 17681 ;; Parameters:    Size  Location     Type
 17682 ;;  h               1    wreg     unsigned char 
 17683 ;; Auto vars:     Size  Location     Type
 17684 ;;  h               1    2[BANK1 ] unsigned char 
 17685 ;;  happeningInd    1    3[BANK1 ] unsigned char 
 17686 ;;  disable_off     1    1[BANK1 ] enum E12710
 17687 ;;  flags           1    0[BANK1 ] unsigned char 
 17688 ;; Return value:  Size  Location     Type
 17689 ;;                  1    wreg      enum E12730
 17690 ;; Registers used:
 17691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17692 ;; Tracked objects:
 17693 ;;		On entry : 0/0
 17694 ;;		On exit  : 0/0
 17695 ;;		Unchanged: 0/0
 17696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17698 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17699 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17700 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17701 ;;Total ram usage:       11 bytes
 17702 ;; Hardware stack levels used: 1
 17703 ;; Hardware stack levels required when called: 14
 17704 ;; This function calls:
 17705 ;;		___awdiv
 17706 ;;		_getNV
 17707 ;;		_readNVM
 17708 ;; This function is called by:
 17709 ;;		_sodTRCallback
 17710 ;;		_producerProcessMessage
 17711 ;; This function uses a non-reentrant model
 17712 ;;
 17713                           
 17714                           	psect	text48
 17715   003C76                     __ptext48:
 17716                           	callstack 0
 17717   003C76                     _APP_GetEventState:
 17718                           	callstack 14
 17719                           
 17720                           ;incstack = 0
 17721                           ;APP_GetEventState@h stored from wreg
 17722   003C76  0101               	movlb	1	; () banked
 17723   003C78  6FBC               	movwf	APP_GetEventState@h& (0+255),b
 17724                           
 17725                           ;../main.c: 428:     uint8_t flags;;../main.c: 429:     uint8_t happeningIndex;;../main.
      +                          c: 430:     Boolean disable_off;;../main.c: 432:     io = (((h)-8)/4);
 17726   003C7A  0EF8               	movlw	248
 17727   003C7C  0101               	movlb	1	; () banked
 17728   003C7E  25BC               	addwf	APP_GetEventState@h& (0+255),w,b
 17729   003C80  0100               	movlb	0	; () banked
 17730   003C82  6F97               	movwf	___awdiv@dividend& (0+255),b
 17731   003C84  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17732   003C86  0EFF               	movlw	255
 17733   003C88  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 17734   003C8A  0E00               	movlw	0
 17735   003C8C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17736   003C8E  0E04               	movlw	4
 17737   003C90  6F99               	movwf	___awdiv@divisor& (0+255),b
 17738   003C92  ECA3  F052         	call	___awdiv	;wreg free
 17739   003C96  0100               	movlb	0	; () banked
 17740   003C98  5197               	movf	?___awdiv& (0+255),w,b
 17741   003C9A  6FD1               	movwf	_io& (0+255),b
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;../main.c: 433:     if (io >= 16) {
 17745   003C9C  0E0F               	movlw	15
 17746   003C9E  65D1               	cpfsgt	_io& (0+255),b
 17747   003CA0  D002               	goto	l20282
 17748   003CA2                     u20330:
 17749                           
 17750                           ;../main.c: 434:         return EVENT_UNKNOWN;
 17751   003CA2  0EFF               	movlw	255
 17752   003CA4  0012               	return	
 17753   003CA6                     l20282:
 17754                           
 17755                           ; BSR set to: 0
 17756                           ;../main.c: 436:     happeningIndex = (((h)-8)%4);
 17757   003CA6  0101               	movlb	1	; () banked
 17758   003CA8  51BC               	movf	APP_GetEventState@h& (0+255),w,b
 17759   003CAA  0FF8               	addlw	248
 17760   003CAC  0B03               	andlw	3
 17761   003CAE  6FBD               	movwf	APP_GetEventState@happeningIndex& (0+255),b
 17762                           
 17763                           ; BSR set to: 1
 17764                           ;../main.c: 437:     flags = (uint8_t)getNV((16 + 7*(io) + 1));
 17765   003CB0  0100               	movlb	0	; () banked
 17766   003CB2  51D1               	movf	_io& (0+255),w,b
 17767   003CB4  0D07               	mullw	7
 17768   003CB6  50F3               	movf	243,w,c
 17769   003CB8  0F11               	addlw	17
 17770   003CBA  ECD9  F05D         	call	_getNV
 17771   003CBE  0100               	movlb	0	; () banked
 17772   003CC0  518D               	movf	?_getNV& (0+255),w,b
 17773   003CC2  0101               	movlb	1	; () banked
 17774   003CC4  6FBA               	movwf	APP_GetEventState@flags& (0+255),b
 17775                           
 17776                           ; BSR set to: 1
 17777                           ;../main.c: 438:     disable_off = flags & 0x08;
 17778   003CC6  51BA               	movf	APP_GetEventState@flags& (0+255),w,b
 17779   003CC8  0B08               	andlw	8
 17780   003CCA  6FBB               	movwf	APP_GetEventState@disable_off& (0+255),b
 17781                           
 17782                           ;../main.c: 440:     switch((uint8_t)getNV((16 + 7*(io) + 0))) {
 17783   003CCC  D16B               	goto	l20360
 17784   003CCE                     l20288:
 17785                           
 17786                           ; BSR set to: 1
 17787                           ;../main.c: 445:                     return outputState[io]?EVENT_ON:EVENT_OFF;
 17788   003CCE  0EB4               	movlw	low _outputState
 17789   003CD0  0100               	movlb	0	; () banked
 17790   003CD2  25D1               	addwf	_io& (0+255),w,b
 17791   003CD4  6ED9               	movwf	fsr2l,c
 17792   003CD6  6ADA               	clrf	fsr2h,c
 17793   003CD8  0E02               	movlw	high _outputState
 17794   003CDA  22DA               	addwfc	fsr2h,f,c
 17795   003CDC  50DF               	movf	indf2,w,c
 17796   003CDE  B4D8               	btfsc	status,2,c
 17797   003CE0  D002               	goto	u20340
 17798   003CE2  0E01               	movlw	1
 17799   003CE4  0012               	return	
 17800   003CE6                     u20340:
 17801   003CE6  0E00               	movlw	0
 17802   003CE8  0012               	return	
 17803   003CEA                     l20292:
 17804                           
 17805                           ; BSR set to: 1
 17806                           ;../main.c: 448:                     if (disable_off) {
 17807   003CEA  51BB               	movf	APP_GetEventState@disable_off& (0+255),w,b
 17808   003CEC  B4D8               	btfsc	status,2,c
 17809   003CEE  D7D9               	goto	u20330
 17810                           
 17811                           ; BSR set to: 1
 17812                           ;../main.c: 449:                         return (outputState[io]==0)?EVENT_ON:EVENT_OFF;
 17813   003CF0  0EB4               	movlw	low _outputState
 17814   003CF2  0100               	movlb	0	; () banked
 17815   003CF4  25D1               	addwf	_io& (0+255),w,b
 17816   003CF6  6ED9               	movwf	fsr2l,c
 17817   003CF8  6ADA               	clrf	fsr2h,c
 17818   003CFA  0E02               	movlw	high _outputState
 17819   003CFC  22DA               	addwfc	fsr2h,f,c
 17820   003CFE  50DF               	movf	indf2,w,c
 17821   003D00  A4D8               	btfss	status,2,c
 17822   003D02  D002               	goto	u20370
 17823   003D04  0E01               	movlw	1
 17824   003D06  0012               	return	
 17825   003D08                     u20370:
 17826   003D08  0E00               	movlw	0
 17827   003D0A  0012               	return	
 17828   003D0C                     l20300:
 17829                           
 17830                           ; BSR set to: 0
 17831   003D0C  0101               	movlb	1	; () banked
 17832   003D0E  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17833                           
 17834                           ; Switch size 1, requested type "simple"
 17835                           ; Number of cases is 2, Range of values is 0 to 1
 17836                           ; switch strategies available:
 17837                           ; Name         Instructions Cycles
 17838                           ; simple_byte            7     4 (average)
 17839                           ;	Chosen strategy is simple_byte
 17840   003D10  0A00               	xorlw	0	; case 0
 17841   003D12  B4D8               	btfsc	status,2,c
 17842   003D14  D7DC               	goto	l20288
 17843   003D16  0A01               	xorlw	1	; case 1
 17844   003D18  B4D8               	btfsc	status,2,c
 17845   003D1A  D7E7               	goto	l20292
 17846   003D1C  D7C2               	goto	u20330
 17847   003D1E                     l20302:
 17848                           
 17849                           ; BSR set to: 1
 17850                           ;../main.c: 460:                     return (readNVM(EEPROM_NVM_TYPE, ((eeprom_address_t
      +                          )((0x3FF -8))-25)+io)!=2)?EVENT_ON:EVENT_OFF;
 17851   003D1E  0EDE               	movlw	222
 17852   003D20  0100               	movlb	0	; () banked
 17853   003D22  25D1               	addwf	_io& (0+255),w,b
 17854   003D24  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 17855   003D26  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 17856   003D28  0E03               	movlw	3
 17857   003D2A  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 17858   003D2C  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 17859   003D30  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 17860   003D34  6B93               	clrf	(readNVM@index+2)& (0+255),b
 17861   003D36  0E00               	movlw	0
 17862   003D38  EC57  F059         	call	_readNVM
 17863   003D3C  0E02               	movlw	2
 17864   003D3E  0100               	movlb	0	; () banked
 17865   003D40  1991               	xorwf	?_readNVM& (0+255),w,b
 17866   003D42  1192               	iorwf	(?_readNVM+1)& (0+255),w,b
 17867   003D44  B4D8               	btfsc	status,2,c
 17868   003D46  D002               	goto	u20390
 17869   003D48  0E01               	movlw	1
 17870   003D4A  0012               	return	
 17871   003D4C                     u20390:
 17872   003D4C  0E00               	movlw	0
 17873   003D4E  0012               	return	
 17874   003D50                     l20308:
 17875                           
 17876                           ; BSR set to: 0
 17877   003D50  0101               	movlb	1	; () banked
 17878   003D52  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 17879                           
 17880                           ; Switch size 1, requested type "simple"
 17881                           ; Number of cases is 1, Range of values is 0 to 0
 17882                           ; switch strategies available:
 17883                           ; Name         Instructions Cycles
 17884                           ; simple_byte            4     3 (average)
 17885                           ;	Chosen strategy is simple_byte
 17886   003D54  0A00               	xorlw	0	; case 0
 17887   003D56  B4D8               	btfsc	status,2,c
 17888   003D58  D7E2               	goto	l20302
 17889   003D5A  D7A3               	goto	u20330
 17890   003D5C                     l20310:
 17891                           
 17892                           ; BSR set to: 1
 17893                           ;../main.c: 467:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 2)))?EVENT_ON:EVENT_OFF;
 17894   003D5C  0100               	movlb	0	; () banked
 17895   003D5E  51D1               	movf	_io& (0+255),w,b
 17896   003D60  0D07               	mullw	7
 17897   003D62  50F3               	movf	243,w,c
 17898   003D64  0F12               	addlw	18
 17899   003D66  ECD9  F05D         	call	_getNV
 17900   003D6A  0100               	movlb	0	; () banked
 17901   003D6C  51D1               	movf	_io& (0+255),w,b
 17902   003D6E  0FA9               	addlw	low _currentPos
 17903   003D70  6ED9               	movwf	fsr2l,c
 17904   003D72  6ADA               	clrf	fsr2h,c
 17905   003D74  50DE               	movf	postinc2,w,c
 17906   003D76  198D               	xorwf	?_getNV& (0+255),w,b
 17907   003D78  A4D8               	btfss	status,2,c
 17908   003D7A  D002               	goto	u20410
 17909   003D7C  0E01               	movlw	1
 17910   003D7E  0012               	return	
 17911   003D80                     u20410:
 17912   003D80  0E00               	movlw	0
 17913   003D82  0012               	return	
 17914   003D84                     l20314:
 17915                           
 17916                           ; BSR set to: 1
 17917                           ;../main.c: 469:                     return (currentPos[io] == (uint8_t)getNV((16 + 7*(i
      +                          o) + 3)))?EVENT_ON:EVENT_OFF;
 17918   003D84  0100               	movlb	0	; () banked
 17919   003D86  51D1               	movf	_io& (0+255),w,b
 17920   003D88  0D07               	mullw	7
 17921   003D8A  50F3               	movf	243,w,c
 17922   003D8C  0F13               	addlw	19
 17923   003D8E  ECD9  F05D         	call	_getNV
 17924   003D92  0100               	movlb	0	; () banked
 17925   003D94  51D1               	movf	_io& (0+255),w,b
 17926   003D96  0FA9               	addlw	low _currentPos
 17927   003D98  6ED9               	movwf	fsr2l,c
 17928   003D9A  6ADA               	clrf	fsr2h,c
 17929   003D9C  50DE               	movf	postinc2,w,c
 17930   003D9E  198D               	xorwf	?_getNV& (0+255),w,b
 17931   003DA0  A4D8               	btfss	status,2,c
 17932   003DA2  D002               	goto	u20430
 17933   003DA4  0E01               	movlw	1
 17934   003DA6  0012               	return	
 17935   003DA8                     u20430:
 17936   003DA8  0E00               	movlw	0
 17937   003DAA  0012               	return	
 17938   003DAC                     l20318:
 17939                           
 17940                           ; BSR set to: 1
 17941                           ;../main.c: 472:                     return (currentPos[io] >= ((uint8_t)getNV((16 + 7*(
      +                          io) + 3)))/2 +
 17942   003DAC  0100               	movlb	0	; () banked
 17943   003DAE  51D1               	movf	_io& (0+255),w,b
 17944   003DB0  0D07               	mullw	7
 17945   003DB2  50F3               	movf	243,w,c
 17946   003DB4  0F13               	addlw	19
 17947   003DB6  ECD9  F05D         	call	_getNV
 17948   003DBA  0100               	movlb	0	; () banked
 17949   003DBC  518D               	movf	?_getNV& (0+255),w,b
 17950   003DBE  6F97               	movwf	___awdiv@dividend& (0+255),b
 17951   003DC0  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17952   003DC2  0E00               	movlw	0
 17953   003DC4  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17954   003DC6  0E02               	movlw	2
 17955   003DC8  6F99               	movwf	___awdiv@divisor& (0+255),b
 17956   003DCA  ECA3  F052         	call	___awdiv	;wreg free
 17957   003DCE  C097  F09F         	movff	?___awdiv,??_APP_GetEventState
 17958   003DD2  C098  F0A0         	movff	?___awdiv+1,??_APP_GetEventState+1
 17959   003DD6  0100               	movlb	0	; () banked
 17960   003DD8  51D1               	movf	_io& (0+255),w,b
 17961   003DDA  0D07               	mullw	7
 17962   003DDC  50F3               	movf	243,w,c
 17963   003DDE  0F12               	addlw	18
 17964   003DE0  ECD9  F05D         	call	_getNV
 17965   003DE4  0100               	movlb	0	; () banked
 17966   003DE6  518D               	movf	?_getNV& (0+255),w,b
 17967   003DE8  6F97               	movwf	___awdiv@dividend& (0+255),b
 17968   003DEA  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 17969   003DEC  0E00               	movlw	0
 17970   003DEE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 17971   003DF0  0E02               	movlw	2
 17972   003DF2  6F99               	movwf	___awdiv@divisor& (0+255),b
 17973   003DF4  ECA3  F052         	call	___awdiv	;wreg free
 17974   003DF8  0100               	movlb	0	; () banked
 17975   003DFA  5197               	movf	?___awdiv& (0+255),w,b
 17976   003DFC  259F               	addwf	??_APP_GetEventState& (0+255),w,b
 17977   003DFE  6FA1               	movwf	(??_APP_GetEventState+2)& (0+255),b
 17978   003E00  5198               	movf	(?___awdiv+1)& (0+255),w,b
 17979   003E02  21A0               	addwfc	(??_APP_GetEventState+1)& (0+255),w,b
 17980   003E04  6FA2               	movwf	(??_APP_GetEventState+3)& (0+255),b
 17981   003E06  51D1               	movf	_io& (0+255),w,b
 17982   003E08  0FA9               	addlw	low _currentPos
 17983   003E0A  6ED9               	movwf	fsr2l,c
 17984   003E0C  6ADA               	clrf	fsr2h,c
 17985   003E0E  50DF               	movf	indf2,w,c
 17986   003E10  6FA3               	movwf	(??_APP_GetEventState+4)& (0+255),b
 17987   003E12  6BA4               	clrf	(??_APP_GetEventState+5)& (0+255),b
 17988   003E14  51A1               	movf	(??_APP_GetEventState+2)& (0+255),w,b
 17989   003E16  5DA3               	subwf	(??_APP_GetEventState+4)& (0+255),w,b
 17990   003E18  51A4               	movf	(??_APP_GetEventState+5)& (0+255),w,b
 17991   003E1A  0A80               	xorlw	128
 17992   003E1C  6FA5               	movwf	(??_APP_GetEventState+6)& (0+255),b
 17993   003E1E  51A2               	movf	(??_APP_GetEventState+3)& (0+255),w,b
 17994   003E20  0A80               	xorlw	128
 17995   003E22  59A5               	subwfb	(??_APP_GetEventState+6)& (0+255),w,b
 17996   003E24  A0D8               	btfss	status,0,c
 17997   003E26  D002               	goto	u20450
 17998   003E28  0E01               	movlw	1
 17999   003E2A  0012               	return	
 18000   003E2C                     u20450:
 18001   003E2C  0E00               	movlw	0
 18002   003E2E  0012               	return	
 18003   003E30                     l20324:
 18004                           
 18005                           ; BSR set to: 0
 18006   003E30  0101               	movlb	1	; () banked
 18007   003E32  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18008                           
 18009                           ; Switch size 1, requested type "simple"
 18010                           ; Number of cases is 3, Range of values is 0 to 2
 18011                           ; switch strategies available:
 18012                           ; Name         Instructions Cycles
 18013                           ; simple_byte           10     6 (average)
 18014                           ;	Chosen strategy is simple_byte
 18015   003E34  0A00               	xorlw	0	; case 0
 18016   003E36  B4D8               	btfsc	status,2,c
 18017   003E38  D791               	goto	l20310
 18018   003E3A  0A01               	xorlw	1	; case 1
 18019   003E3C  B4D8               	btfsc	status,2,c
 18020   003E3E  D7B6               	goto	l20318
 18021   003E40  0A03               	xorlw	3	; case 2
 18022   003E42  B4D8               	btfsc	status,2,c
 18023   003E44  D79F               	goto	l20314
 18024   003E46  D72D               	goto	u20330
 18025   003E48                     l20326:
 18026                           
 18027                           ; BSR set to: 1
 18028                           ;../main.c: 480:                     return ((uint8_t)readNVM(EEPROM_NVM_TYPE, ((eeprom_
      +                          address_t)((0x3FF -8))-25)+io))?EVENT_ON:EVENT_OFF;
 18029   003E48  0EDE               	movlw	222
 18030   003E4A  0100               	movlb	0	; () banked
 18031   003E4C  25D1               	addwf	_io& (0+255),w,b
 18032   003E4E  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18033   003E50  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18034   003E52  0E03               	movlw	3
 18035   003E54  23A0               	addwfc	(??_APP_GetEventState+1)& (0+255),f,b
 18036   003E56  C09F  F091         	movff	??_APP_GetEventState,readNVM@index
 18037   003E5A  C0A0  F092         	movff	??_APP_GetEventState+1,readNVM@index+1
 18038   003E5E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18039   003E60  0E00               	movlw	0
 18040   003E62  EC57  F059         	call	_readNVM
 18041   003E66  0100               	movlb	0	; () banked
 18042   003E68  6791               	tstfsz	?_readNVM& (0+255),b
 18043   003E6A  0E01               	movlw	1
 18044   003E6C  0012               	return	
 18045   003E6E                     l20332:
 18046                           
 18047                           ; BSR set to: 0
 18048   003E6E  0101               	movlb	1	; () banked
 18049   003E70  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18050                           
 18051                           ; Switch size 1, requested type "simple"
 18052                           ; Number of cases is 1, Range of values is 0 to 0
 18053                           ; switch strategies available:
 18054                           ; Name         Instructions Cycles
 18055                           ; simple_byte            4     3 (average)
 18056                           ;	Chosen strategy is simple_byte
 18057   003E72  0A00               	xorlw	0	; case 0
 18058   003E74  B4D8               	btfsc	status,2,c
 18059   003E76  D7E8               	goto	l20326
 18060   003E78  D714               	goto	u20330
 18061   003E7A                     l20334:
 18062                           
 18063                           ; BSR set to: 1
 18064                           ;../main.c: 488:                     return (currentPos[io] == getNV((16 + 7*(io) + 3)))
      +                          ?EVENT_ON:EVENT_OFF;
 18065   003E7A  0100               	movlb	0	; () banked
 18066   003E7C  51D1               	movf	_io& (0+255),w,b
 18067   003E7E  0D07               	mullw	7
 18068   003E80  50F3               	movf	243,w,c
 18069   003E82  0F13               	addlw	19
 18070   003E84  ECD9  F05D         	call	_getNV
 18071   003E88  0100               	movlb	0	; () banked
 18072   003E8A  51D1               	movf	_io& (0+255),w,b
 18073   003E8C  0FA9               	addlw	low _currentPos
 18074   003E8E  6ED9               	movwf	fsr2l,c
 18075   003E90  6ADA               	clrf	fsr2h,c
 18076   003E92  50DF               	movf	indf2,w,c
 18077   003E94  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18078   003E96  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18079   003E98  518D               	movf	?_getNV& (0+255),w,b
 18080   003E9A  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18081   003E9C  E106               	bnz	u20490
 18082   003E9E  518E               	movf	(?_getNV+1)& (0+255),w,b
 18083   003EA0  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18084   003EA2  A4D8               	btfss	status,2,c
 18085   003EA4  D002               	goto	u20490
 18086   003EA6  0E01               	movlw	1
 18087   003EA8  0012               	return	
 18088   003EAA                     u20490:
 18089   003EAA  0E00               	movlw	0
 18090   003EAC  0012               	return	
 18091   003EAE                     l20338:
 18092                           
 18093                           ; BSR set to: 1
 18094                           ;../main.c: 490:                     return (currentPos[io] == getNV((16 + 7*(io) + 4)))
      +                          ?EVENT_ON:EVENT_OFF;
 18095   003EAE  0100               	movlb	0	; () banked
 18096   003EB0  51D1               	movf	_io& (0+255),w,b
 18097   003EB2  0D07               	mullw	7
 18098   003EB4  50F3               	movf	243,w,c
 18099   003EB6  0F14               	addlw	20
 18100   003EB8  ECD9  F05D         	call	_getNV
 18101   003EBC  0100               	movlb	0	; () banked
 18102   003EBE  51D1               	movf	_io& (0+255),w,b
 18103   003EC0  0FA9               	addlw	low _currentPos
 18104   003EC2  6ED9               	movwf	fsr2l,c
 18105   003EC4  6ADA               	clrf	fsr2h,c
 18106   003EC6  50DF               	movf	indf2,w,c
 18107   003EC8  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18108   003ECA  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18109   003ECC  518D               	movf	?_getNV& (0+255),w,b
 18110   003ECE  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18111   003ED0  E106               	bnz	u20510
 18112   003ED2  518E               	movf	(?_getNV+1)& (0+255),w,b
 18113   003ED4  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18114   003ED6  A4D8               	btfss	status,2,c
 18115   003ED8  D002               	goto	u20510
 18116   003EDA  0E01               	movlw	1
 18117   003EDC  0012               	return	
 18118   003EDE                     u20510:
 18119   003EDE  0E00               	movlw	0
 18120   003EE0  0012               	return	
 18121   003EE2                     l20342:
 18122                           
 18123                           ; BSR set to: 1
 18124                           ;../main.c: 493:                     if (getNV((16 + 7*(io) + 2)) > 2) {
 18125   003EE2  0100               	movlb	0	; () banked
 18126   003EE4  51D1               	movf	_io& (0+255),w,b
 18127   003EE6  0D07               	mullw	7
 18128   003EE8  50F3               	movf	243,w,c
 18129   003EEA  0F12               	addlw	18
 18130   003EEC  ECD9  F05D         	call	_getNV
 18131   003EF0  0100               	movlb	0	; () banked
 18132   003EF2  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18133   003EF4  D6D6               	goto	u20330
 18134   003EF6  518E               	movf	(?_getNV+1)& (0+255),w,b
 18135   003EF8  E104               	bnz	u20530
 18136   003EFA  0E03               	movlw	3
 18137   003EFC  5D8D               	subwf	?_getNV& (0+255),w,b
 18138   003EFE  A0D8               	btfss	status,0,c
 18139   003F00  D6D0               	goto	u20330
 18140   003F02                     u20530:
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;../main.c: 494:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          5)))?EVENT_ON:EVENT_OFF;
 18144   003F02  51D1               	movf	_io& (0+255),w,b
 18145   003F04  0D07               	mullw	7
 18146   003F06  50F3               	movf	243,w,c
 18147   003F08  0F15               	addlw	21
 18148   003F0A  ECD9  F05D         	call	_getNV
 18149   003F0E  0100               	movlb	0	; () banked
 18150   003F10  51D1               	movf	_io& (0+255),w,b
 18151   003F12  0FA9               	addlw	low _currentPos
 18152   003F14  6ED9               	movwf	fsr2l,c
 18153   003F16  6ADA               	clrf	fsr2h,c
 18154   003F18  50DF               	movf	indf2,w,c
 18155   003F1A  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18156   003F1C  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18157   003F1E  518D               	movf	?_getNV& (0+255),w,b
 18158   003F20  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18159   003F22  E106               	bnz	u20540
 18160   003F24  518E               	movf	(?_getNV+1)& (0+255),w,b
 18161   003F26  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18162   003F28  A4D8               	btfss	status,2,c
 18163   003F2A  D002               	goto	u20540
 18164   003F2C  0E01               	movlw	1
 18165   003F2E  0012               	return	
 18166   003F30                     u20540:
 18167   003F30  0E00               	movlw	0
 18168   003F32  0012               	return	
 18169   003F34                     l20348:
 18170                           
 18171                           ; BSR set to: 1
 18172                           ;../main.c: 498:                     if (getNV((16 + 7*(io) + 2)) > 3) {
 18173   003F34  0100               	movlb	0	; () banked
 18174   003F36  51D1               	movf	_io& (0+255),w,b
 18175   003F38  0D07               	mullw	7
 18176   003F3A  50F3               	movf	243,w,c
 18177   003F3C  0F12               	addlw	18
 18178   003F3E  ECD9  F05D         	call	_getNV
 18179   003F42  0100               	movlb	0	; () banked
 18180   003F44  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 18181   003F46  D6AD               	goto	u20330
 18182   003F48  518E               	movf	(?_getNV+1)& (0+255),w,b
 18183   003F4A  E104               	bnz	u20560
 18184   003F4C  0E04               	movlw	4
 18185   003F4E  5D8D               	subwf	?_getNV& (0+255),w,b
 18186   003F50  A0D8               	btfss	status,0,c
 18187   003F52  D6A7               	goto	u20330
 18188   003F54                     u20560:
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;../main.c: 499:                         return (currentPos[io] == getNV((16 + 7*(io) + 
      +                          6)))?EVENT_ON:EVENT_OFF;
 18192   003F54  51D1               	movf	_io& (0+255),w,b
 18193   003F56  0D07               	mullw	7
 18194   003F58  50F3               	movf	243,w,c
 18195   003F5A  0F16               	addlw	22
 18196   003F5C  ECD9  F05D         	call	_getNV
 18197   003F60  0100               	movlb	0	; () banked
 18198   003F62  51D1               	movf	_io& (0+255),w,b
 18199   003F64  0FA9               	addlw	low _currentPos
 18200   003F66  6ED9               	movwf	fsr2l,c
 18201   003F68  6ADA               	clrf	fsr2h,c
 18202   003F6A  50DF               	movf	indf2,w,c
 18203   003F6C  6F9F               	movwf	??_APP_GetEventState& (0+255),b
 18204   003F6E  6BA0               	clrf	(??_APP_GetEventState+1)& (0+255),b
 18205   003F70  518D               	movf	?_getNV& (0+255),w,b
 18206   003F72  199F               	xorwf	??_APP_GetEventState& (0+255),w,b
 18207   003F74  E106               	bnz	u20570
 18208   003F76  518E               	movf	(?_getNV+1)& (0+255),w,b
 18209   003F78  19A0               	xorwf	(??_APP_GetEventState+1)& (0+255),w,b
 18210   003F7A  A4D8               	btfss	status,2,c
 18211   003F7C  D002               	goto	u20570
 18212   003F7E  0E01               	movlw	1
 18213   003F80  0012               	return	
 18214   003F82                     u20570:
 18215   003F82  0E00               	movlw	0
 18216   003F84  0012               	return	
 18217   003F86                     l20356:
 18218                           
 18219                           ; BSR set to: 0
 18220   003F86  0101               	movlb	1	; () banked
 18221   003F88  51BD               	movf	APP_GetEventState@happeningIndex& (0+255),w,b
 18222                           
 18223                           ; Switch size 1, requested type "simple"
 18224                           ; Number of cases is 4, Range of values is 0 to 3
 18225                           ; switch strategies available:
 18226                           ; Name         Instructions Cycles
 18227                           ; simple_byte           13     7 (average)
 18228                           ;	Chosen strategy is simple_byte
 18229   003F8A  0A00               	xorlw	0	; case 0
 18230   003F8C  B4D8               	btfsc	status,2,c
 18231   003F8E  D775               	goto	l20334
 18232   003F90  0A01               	xorlw	1	; case 1
 18233   003F92  B4D8               	btfsc	status,2,c
 18234   003F94  D78C               	goto	l20338
 18235   003F96  0A03               	xorlw	3	; case 2
 18236   003F98  B4D8               	btfsc	status,2,c
 18237   003F9A  D7A3               	goto	l20342
 18238   003F9C  0A01               	xorlw	1	; case 3
 18239   003F9E  B4D8               	btfsc	status,2,c
 18240   003FA0  D7C9               	goto	l20348
 18241   003FA2  D67F               	goto	u20330
 18242   003FA4                     l20360:
 18243                           
 18244                           ; BSR set to: 1
 18245   003FA4  0100               	movlb	0	; () banked
 18246   003FA6  51D1               	movf	_io& (0+255),w,b
 18247   003FA8  0D07               	mullw	7
 18248   003FAA  50F3               	movf	243,w,c
 18249   003FAC  0F10               	addlw	16
 18250   003FAE  ECD9  F05D         	call	_getNV
 18251   003FB2  0100               	movlb	0	; () banked
 18252   003FB4  518D               	movf	?_getNV& (0+255),w,b
 18253                           
 18254                           ; Switch size 1, requested type "simple"
 18255                           ; Number of cases is 5, Range of values is 0 to 4
 18256                           ; switch strategies available:
 18257                           ; Name         Instructions Cycles
 18258                           ; simple_byte           16     9 (average)
 18259                           ;	Chosen strategy is simple_byte
 18260   003FB6  0A00               	xorlw	0	; case 0
 18261   003FB8  B4D8               	btfsc	status,2,c
 18262   003FBA  D6A8               	goto	l20300
 18263   003FBC  0A01               	xorlw	1	; case 1
 18264   003FBE  B4D8               	btfsc	status,2,c
 18265   003FC0  D6C7               	goto	l20308
 18266   003FC2  0A03               	xorlw	3	; case 2
 18267   003FC4  B4D8               	btfsc	status,2,c
 18268   003FC6  D734               	goto	l20324
 18269   003FC8  0A01               	xorlw	1	; case 3
 18270   003FCA  B4D8               	btfsc	status,2,c
 18271   003FCC  D750               	goto	l20332
 18272   003FCE  0A07               	xorlw	7	; case 4
 18273   003FD0  B4D8               	btfsc	status,2,c
 18274   003FD2  D7D9               	goto	l20356
 18275   003FD4  D666               	goto	u20330
 18276   003FD6                     __end_of_APP_GetEventState:
 18277                           	callstack 0
 18278                           
 18279 ;; *************** function _numEv *****************
 18280 ;; Defined at:
 18281 ;;		line 1154 in file "../../VLCBlib_PIC/event_teach_large.c"
 18282 ;; Parameters:    Size  Location     Type
 18283 ;;  tableIndex      1    wreg     unsigned char 
 18284 ;; Auto vars:     Size  Location     Type
 18285 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 18286 ;;  f               1   66[BANK0 ] struct .
 18287 ;;  num             1   65[BANK0 ] unsigned char 
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  1    wreg      unsigned char 
 18290 ;; Registers used:
 18291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18292 ;; Tracked objects:
 18293 ;;		On entry : 0/0
 18294 ;;		On exit  : 0/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18298 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18299 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18300 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18301 ;;Total ram usage:        7 bytes
 18302 ;; Hardware stack levels used: 1
 18303 ;; Hardware stack levels required when called: 15
 18304 ;; This function calls:
 18305 ;;		_readNVM
 18306 ;;		_validStart
 18307 ;; This function is called by:
 18308 ;;		_doReval
 18309 ;;		_doReqev
 18310 ;;		_reqevCallback
 18311 ;; This function uses a non-reentrant model
 18312 ;;
 18313                           
 18314                           	psect	text49
 18315   008A7E                     __ptext49:
 18316                           	callstack 0
 18317   008A7E                     _numEv:
 18318                           	callstack 12
 18319                           
 18320                           ;incstack = 0
 18321                           ;numEv@tableIndex stored from wreg
 18322   008A7E  0100               	movlb	0	; () banked
 18323   008A80  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18324                           
 18325                           ;../../VLCBlib_PIC/event_teach_large.c: 1155:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1156:     uint8_t num=0;
 18326   008A82  0E00               	movlw	0
 18327   008A84  0100               	movlb	0	; () banked
 18328   008A86  6FA1               	movwf	numEv@num& (0+255),b
 18329                           
 18330                           ; BSR set to: 0
 18331                           ;../../VLCBlib_PIC/event_teach_large.c: 1157:     if ( ! validStart(tableIndex)) {
 18332   008A88  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18333   008A8A  ECC0  F05B         	call	_validStart
 18334   008A8E  0900               	iorlw	0
 18335   008A90  A4D8               	btfss	status,2,c
 18336   008A92  D002               	goto	l21118
 18337   008A94                     u21660:
 18338                           
 18339                           ;../../VLCBlib_PIC/event_teach_large.c: 1159:         return 0;
 18340   008A94  0E00               	movlw	0
 18341   008A96  0012               	return	
 18342   008A98                     l21118:
 18343                           
 18344                           ;../../VLCBlib_PIC/event_teach_large.c: 1161:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 18345   008A98  0100               	movlb	0	; () banked
 18346   008A9A  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18347   008A9C  6F9D               	movwf	??_numEv& (0+255),b
 18348   008A9E  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18349   008AA0  3B9D               	swapf	??_numEv& (0+255),f,b
 18350   008AA2  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18351   008AA4  0EF0               	movlw	240
 18352   008AA6  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18353   008AA8  519D               	movf	??_numEv& (0+255),w,b
 18354   008AAA  0B0F               	andlw	15
 18355   008AAC  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18356   008AAE  0EF0               	movlw	240
 18357   008AB0  179D               	andwf	??_numEv& (0+255),f,b
 18358   008AB2  0E80               	movlw	128
 18359   008AB4  259D               	addwf	??_numEv& (0+255),w,b
 18360   008AB6  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18361   008AB8  0EEF               	movlw	239
 18362   008ABA  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18363   008ABC  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18364   008ABE  C09F  F091         	movff	??_numEv+2,readNVM@index
 18365   008AC2  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18366   008AC6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18367   008AC8  0E01               	movlw	1
 18368   008ACA  EC57  F059         	call	_readNVM
 18369   008ACE  0100               	movlb	0	; () banked
 18370   008AD0  5191               	movf	?_readNVM& (0+255),w,b
 18371   008AD2  6FA2               	movwf	numEv@f& (0+255),b
 18372                           
 18373                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:     while (f.continued) {
 18374   008AD4  D039               	goto	l21132
 18375   008AD6                     l21120:
 18376                           
 18377                           ; BSR set to: 0
 18378                           ;../../VLCBlib_PIC/event_teach_large.c: 1163:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 18379   008AD6  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18380   008AD8  0D10               	mullw	16
 18381   008ADA  CFF3 F09D          	movff	prodl,??_numEv
 18382   008ADE  CFF4 F09E          	movff	prodh,??_numEv+1
 18383   008AE2  0E81               	movlw	129
 18384   008AE4  259D               	addwf	??_numEv& (0+255),w,b
 18385   008AE6  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18386   008AE8  0EEF               	movlw	239
 18387   008AEA  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18388   008AEC  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18389   008AEE  C09F  F091         	movff	??_numEv+2,readNVM@index
 18390   008AF2  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18391   008AF6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18392   008AF8  0E01               	movlw	1
 18393   008AFA  EC57  F059         	call	_readNVM
 18394   008AFE  0100               	movlb	0	; () banked
 18395   008B00  5191               	movf	?_readNVM& (0+255),w,b
 18396   008B02  6FA3               	movwf	numEv@tableIndex& (0+255),b
 18397                           
 18398                           ; BSR set to: 0
 18399                           ;../../VLCBlib_PIC/event_teach_large.c: 1164:         if (tableIndex == 0xff) {
 18400   008B04  29A3               	incf	numEv@tableIndex& (0+255),w,b
 18401   008B06  B4D8               	btfsc	status,2,c
 18402   008B08  D7C5               	goto	u21660
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;../../VLCBlib_PIC/event_teach_large.c: 1167:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 18406   008B0A  51A3               	movf	numEv@tableIndex& (0+255),w,b
 18407   008B0C  6F9D               	movwf	??_numEv& (0+255),b
 18408   008B0E  6B9E               	clrf	(??_numEv+1)& (0+255),b
 18409   008B10  3B9D               	swapf	??_numEv& (0+255),f,b
 18410   008B12  3B9E               	swapf	(??_numEv+1)& (0+255),f,b
 18411   008B14  0EF0               	movlw	240
 18412   008B16  179E               	andwf	(??_numEv+1)& (0+255),f,b
 18413   008B18  519D               	movf	??_numEv& (0+255),w,b
 18414   008B1A  0B0F               	andlw	15
 18415   008B1C  139E               	iorwf	(??_numEv+1)& (0+255),f,b
 18416   008B1E  0EF0               	movlw	240
 18417   008B20  179D               	andwf	??_numEv& (0+255),f,b
 18418   008B22  0E80               	movlw	128
 18419   008B24  259D               	addwf	??_numEv& (0+255),w,b
 18420   008B26  6F9F               	movwf	(??_numEv+2)& (0+255),b
 18421   008B28  0EEF               	movlw	239
 18422   008B2A  219E               	addwfc	(??_numEv+1)& (0+255),w,b
 18423   008B2C  6FA0               	movwf	(??_numEv+3)& (0+255),b
 18424   008B2E  C09F  F091         	movff	??_numEv+2,readNVM@index
 18425   008B32  C0A0  F092         	movff	??_numEv+3,readNVM@index+1
 18426   008B36  6B93               	clrf	(readNVM@index+2)& (0+255),b
 18427   008B38  0E01               	movlw	1
 18428   008B3A  EC57  F059         	call	_readNVM
 18429   008B3E  0100               	movlb	0	; () banked
 18430   008B40  5191               	movf	?_readNVM& (0+255),w,b
 18431   008B42  6FA2               	movwf	numEv@f& (0+255),b
 18432                           
 18433                           ; BSR set to: 0
 18434                           ;../../VLCBlib_PIC/event_teach_large.c: 1168:         num += 10;
 18435   008B44  0E0A               	movlw	10
 18436   008B46  27A1               	addwf	numEv@num& (0+255),f,b
 18437   008B48                     l21132:
 18438                           
 18439                           ; BSR set to: 0
 18440                           ;../../VLCBlib_PIC/event_teach_large.c: 1162:     while (f.continued) {
 18441   008B48  B9A2               	btfsc	numEv@f& (0+255),4,b
 18442   008B4A  D7C5               	goto	l21120
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;../../VLCBlib_PIC/event_teach_large.c: 1170:     num += f.eVsUsed;
 18446   008B4C  51A2               	movf	numEv@f& (0+255),w,b
 18447   008B4E  0B0F               	andlw	15
 18448   008B50  27A1               	addwf	numEv@num& (0+255),f,b
 18449                           
 18450                           ; BSR set to: 0
 18451                           ;../../VLCBlib_PIC/event_teach_large.c: 1171:     return num;
 18452   008B52  51A1               	movf	numEv@num& (0+255),w,b
 18453   008B54  0012               	return		;funcret
 18454   008B56                     __end_of_numEv:
 18455                           	callstack 0
 18456                           
 18457 ;; *************** function _tableIndexToEvtIdx *****************
 18458 ;; Defined at:
 18459 ;;		line 1273 in file "../../VLCBlib_PIC/event_teach_large.c"
 18460 ;; Parameters:    Size  Location     Type
 18461 ;;  tableIndex      1    wreg     unsigned char 
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;  tableIndex      1   45[BANK0 ] unsigned char 
 18464 ;; Return value:  Size  Location     Type
 18465 ;;                  1    wreg      unsigned char 
 18466 ;; Registers used:
 18467 ;;		wreg, status,2, status,0
 18468 ;; Tracked objects:
 18469 ;;		On entry : 0/0
 18470 ;;		On exit  : 0/0
 18471 ;;		Unchanged: 0/0
 18472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18474 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18476 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18477 ;;Total ram usage:        1 bytes
 18478 ;; Hardware stack levels used: 1
 18479 ;; Hardware stack levels required when called: 12
 18480 ;; This function calls:
 18481 ;;		Nothing
 18482 ;; This function is called by:
 18483 ;;		_nerdCallback
 18484 ;; This function uses a non-reentrant model
 18485 ;;
 18486                           
 18487                           	psect	text50
 18488   00C4F2                     __ptext50:
 18489                           	callstack 0
 18490   00C4F2                     _tableIndexToEvtIdx:
 18491                           	callstack 15
 18492                           
 18493                           ;incstack = 0
 18494                           ;tableIndexToEvtIdx@tableIndex stored from wreg
 18495   00C4F2  0100               	movlb	0	; () banked
 18496   00C4F4  6F8D               	movwf	tableIndexToEvtIdx@tableIndex& (0+255),b
 18497                           
 18498                           ;../../VLCBlib_PIC/event_teach_large.c: 1274:     return tableIndex + 1;
 18499   00C4F6  0100               	movlb	0	; () banked
 18500   00C4F8  298D               	incf	tableIndexToEvtIdx@tableIndex& (0+255),w,b
 18501                           
 18502                           ; BSR set to: 0
 18503   00C4FA  0012               	return		;funcret
 18504   00C4FC                     __end_of_tableIndexToEvtIdx:
 18505                           	callstack 0
 18506                           
 18507 ;; *************** function _setNV *****************
 18508 ;; Defined at:
 18509 ;;		line 218 in file "../../VLCBlib_PIC/nv.c"
 18510 ;; Parameters:    Size  Location     Type
 18511 ;;  index           1    wreg     unsigned char 
 18512 ;;  value           1   58[BANK1 ] unsigned char 
 18513 ;; Auto vars:     Size  Location     Type
 18514 ;;  index           1   62[BANK1 ] unsigned char 
 18515 ;;  oldValue        1   61[BANK1 ] unsigned char 
 18516 ;; Return value:  Size  Location     Type
 18517 ;;                  1    wreg      unsigned char 
 18518 ;; Registers used:
 18519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18520 ;; Tracked objects:
 18521 ;;		On entry : 0/0
 18522 ;;		On exit  : 0/0
 18523 ;;		Unchanged: 0/0
 18524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18525 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18526 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18527 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18528 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18529 ;;Total ram usage:        5 bytes
 18530 ;; Hardware stack levels used: 1
 18531 ;; Hardware stack levels required when called: 26
 18532 ;; This function calls:
 18533 ;;		_APP_nvValidate
 18534 ;;		_APP_nvValueChanged
 18535 ;;		_writeNVM
 18536 ;; This function is called by:
 18537 ;;		_nvProcessMessage
 18538 ;; This function uses a non-reentrant model
 18539 ;;
 18540                           
 18541                           	psect	text51
 18542   00A94E                     __ptext51:
 18543                           	callstack 0
 18544   00A94E                     _setNV:
 18545                           	callstack 2
 18546                           
 18547                           ; BSR set to: 0
 18548                           ;incstack = 0
 18549                           ;setNV@index stored from wreg
 18550   00A94E  0101               	movlb	1	; () banked
 18551   00A950  6FF8               	movwf	setNV@index& (0+255),b
 18552                           
 18553                           ;../../VLCBlib_PIC/nv.c: 219:     uint8_t oldValue;;../../VLCBlib_PIC/nv.c: 221:     if 
      +                          (index > (15+7*16)) return CMDERR_INV_NV_IDX;
 18554   00A952  0E7F               	movlw	127
 18555   00A954  0101               	movlb	1	; () banked
 18556   00A956  65F8               	cpfsgt	setNV@index& (0+255),b
 18557   00A958  D002               	goto	l21942
 18558                           
 18559                           ; BSR set to: 1
 18560   00A95A  0E0A               	movlw	10
 18561   00A95C  0012               	return	
 18562   00A95E                     l21942:
 18563                           
 18564                           ; BSR set to: 1
 18565                           ;../../VLCBlib_PIC/nv.c: 222:     if (APP_nvValidate(index, value) == INVALID) return CM
      +                          DERR_INV_NV_VALUE;
 18566   00A95E  C1F4  F09F         	movff	setNV@value,APP_nvValidate@value
 18567   00A962  51F8               	movf	setNV@index& (0+255),w,b
 18568   00A964  EC0D  F056         	call	_APP_nvValidate
 18569   00A968  0900               	iorlw	0
 18570   00A96A  A4D8               	btfss	status,2,c
 18571   00A96C  D002               	goto	l21948
 18572   00A96E  0E0C               	movlw	12
 18573   00A970  0012               	return	
 18574   00A972                     l21948:
 18575                           
 18576                           ;../../VLCBlib_PIC/nv.c: 224:     oldValue = nvCache[index];
 18577   00A972  0E00               	movlw	low _nvCache
 18578   00A974  0101               	movlb	1	; () banked
 18579   00A976  25F8               	addwf	setNV@index& (0+255),w,b
 18580   00A978  6ED9               	movwf	fsr2l,c
 18581   00A97A  6ADA               	clrf	fsr2h,c
 18582   00A97C  0E04               	movlw	high _nvCache
 18583   00A97E  22DA               	addwfc	fsr2h,f,c
 18584   00A980  50DF               	movf	indf2,w,c
 18585   00A982  6FF7               	movwf	setNV@oldValue& (0+255),b
 18586                           
 18587                           ;../../VLCBlib_PIC/nv.c: 225:     nvCache[index] = value;
 18588   00A984  0E00               	movlw	low _nvCache
 18589   00A986  25F8               	addwf	setNV@index& (0+255),w,b
 18590   00A988  6ED9               	movwf	fsr2l,c
 18591   00A98A  6ADA               	clrf	fsr2h,c
 18592   00A98C  0E04               	movlw	high _nvCache
 18593   00A98E  22DA               	addwfc	fsr2h,f,c
 18594   00A990  C1F4  FFDF         	movff	setNV@value,indf2
 18595                           
 18596                           ; BSR set to: 1
 18597                           ;../../VLCBlib_PIC/nv.c: 226:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 18598   00A994  0E80               	movlw	128
 18599   00A996  25F8               	addwf	setNV@index& (0+255),w,b
 18600   00A998  6FF5               	movwf	??_setNV& (0+255),b
 18601   00A99A  6BF6               	clrf	(??_setNV+1)& (0+255),b
 18602   00A99C  0EFF               	movlw	255
 18603   00A99E  23F6               	addwfc	(??_setNV+1)& (0+255),f,b
 18604   00A9A0  C1F5  F0A4         	movff	??_setNV,writeNVM@index
 18605   00A9A4  C1F6  F0A5         	movff	??_setNV+1,writeNVM@index+1
 18606   00A9A8  0100               	movlb	0	; () banked
 18607   00A9AA  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 18608   00A9AC  C1F4  F0A7         	movff	setNV@value,writeNVM@value
 18609   00A9B0  0E01               	movlw	1
 18610   00A9B2  ECE7  F05B         	call	_writeNVM
 18611                           
 18612                           ;../../VLCBlib_PIC/nv.c: 231:     APP_nvValueChanged(index, value, oldValue);
 18613   00A9B6  C1F4  F1ED         	movff	setNV@value,APP_nvValueChanged@value
 18614   00A9BA  C1F7  F1EE         	movff	setNV@oldValue,APP_nvValueChanged@oldValue
 18615   00A9BE  0101               	movlb	1	; () banked
 18616   00A9C0  51F8               	movf	setNV@index& (0+255),w,b
 18617   00A9C2  ECAA  F016         	call	_APP_nvValueChanged
 18618                           
 18619                           ;../../VLCBlib_PIC/nv.c: 232:     return 0;
 18620   00A9C6  0E00               	movlw	0
 18621   00A9C8  0012               	return		;funcret
 18622   00A9CA                     __end_of_setNV:
 18623                           	callstack 0
 18624                           
 18625 ;; *************** function _APP_nvValueChanged *****************
 18626 ;; Defined at:
 18627 ;;		line 104 in file "../universalNv.c"
 18628 ;; Parameters:    Size  Location     Type
 18629 ;;  index           1    wreg     unsigned char 
 18630 ;;  value           1   51[BANK1 ] unsigned char 
 18631 ;;  oldValue        1   52[BANK1 ] unsigned char 
 18632 ;; Auto vars:     Size  Location     Type
 18633 ;;  index           1   56[BANK1 ] unsigned char 
 18634 ;;  io              1   57[BANK1 ] unsigned char 
 18635 ;;  nv              1    0        unsigned char 
 18636 ;; Return value:  Size  Location     Type
 18637 ;;                  1    wreg      void 
 18638 ;; Registers used:
 18639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18640 ;; Tracked objects:
 18641 ;;		On entry : 0/0
 18642 ;;		On exit  : 0/0
 18643 ;;		Unchanged: 0/0
 18644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18645 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18646 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18647 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18648 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18649 ;;Total ram usage:        7 bytes
 18650 ;; Hardware stack levels used: 1
 18651 ;; Hardware stack levels required when called: 25
 18652 ;; This function calls:
 18653 ;;		___awdiv
 18654 ;;		___awmod
 18655 ;;		_getNV
 18656 ;;		_setBounceState
 18657 ;;		_setMultiState
 18658 ;;		_setServoPosition
 18659 ;;		_setServoState
 18660 ;;		_setTimedResponseDelay
 18661 ;;		_setType
 18662 ;;		_startBounceOutput
 18663 ;;		_startMultiOutput
 18664 ;;		_startServoOutput
 18665 ;; This function is called by:
 18666 ;;		_setNV
 18667 ;; This function uses a non-reentrant model
 18668 ;;
 18669                           
 18670                           	psect	text52
 18671   002D54                     __ptext52:
 18672                           	callstack 0
 18673   002D54                     _APP_nvValueChanged:
 18674                           	callstack 2
 18675                           
 18676                           ;incstack = 0
 18677                           ;APP_nvValueChanged@index stored from wreg
 18678   002D54  0101               	movlb	1	; () banked
 18679   002D56  6FF2               	movwf	APP_nvValueChanged@index& (0+255),b
 18680                           
 18681                           ;../universalNv.c: 105:     uint8_t nv;;../universalNv.c: 106:     uint8_t io;;../univer
      +                          salNv.c: 108:     if ((((index-16) % 7) == 0)) {
 18682   002D58  0EF0               	movlw	240
 18683   002D5A  0101               	movlb	1	; () banked
 18684   002D5C  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18685   002D5E  0100               	movlb	0	; () banked
 18686   002D60  6F8D               	movwf	___awmod@dividend& (0+255),b
 18687   002D62  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18688   002D64  0EFF               	movlw	255
 18689   002D66  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18690   002D68  0E00               	movlw	0
 18691   002D6A  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18692   002D6C  0E07               	movlw	7
 18693   002D6E  6F8F               	movwf	___awmod@divisor& (0+255),b
 18694   002D70  ECB8  F056         	call	___awmod	;wreg free
 18695   002D74  0100               	movlb	0	; () banked
 18696   002D76  518D               	movf	?___awmod& (0+255),w,b
 18697   002D78  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 18698   002D7A  A4D8               	btfss	status,2,c
 18699   002D7C  D01B               	goto	l20550
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;../universalNv.c: 110:         io = index-16;
 18703   002D7E  0101               	movlb	1	; () banked
 18704   002D80  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 18705   002D82  0FF0               	addlw	240
 18706   002D84  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 18707                           
 18708                           ; BSR set to: 1
 18709                           ;../universalNv.c: 111:         io /= 7;
 18710   002D86  C1F3  F097         	movff	APP_nvValueChanged@io,___awdiv@dividend
 18711   002D8A  0100               	movlb	0	; () banked
 18712   002D8C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18713   002D8E  0E00               	movlw	0
 18714   002D90  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18715   002D92  0E07               	movlw	7
 18716   002D94  6F99               	movwf	___awdiv@divisor& (0+255),b
 18717   002D96  ECA3  F052         	call	___awdiv	;wreg free
 18718   002D9A  0100               	movlb	0	; () banked
 18719   002D9C  5197               	movf	?___awdiv& (0+255),w,b
 18720   002D9E  0101               	movlb	1	; () banked
 18721   002DA0  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 18722                           
 18723                           ; BSR set to: 1
 18724                           ;../universalNv.c: 112:         if (oldValue != value) {
 18725   002DA2  51ED               	movf	APP_nvValueChanged@value& (0+255),w,b
 18726   002DA4  19EE               	xorwf	APP_nvValueChanged@oldValue& (0+255),w,b
 18727   002DA6  B4D8               	btfsc	status,2,c
 18728   002DA8  D005               	goto	l20550
 18729                           
 18730                           ; BSR set to: 1
 18731                           ;../universalNv.c: 113:             setType(io, value);
 18732   002DAA  C1ED  F1EA         	movff	APP_nvValueChanged@value,setType@type
 18733   002DAE  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18734   002DB0  EC27  F059         	call	_setType
 18735   002DB4                     l20550:
 18736                           
 18737                           ;../universalNv.c: 116:     if (index == 5) {
 18738   002DB4  0E05               	movlw	5
 18739   002DB6  0101               	movlb	1	; () banked
 18740   002DB8  19F2               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18741   002DBA  A4D8               	btfss	status,2,c
 18742   002DBC  D003               	goto	l20554
 18743                           
 18744                           ; BSR set to: 1
 18745                           ;../universalNv.c: 117:         setTimedResponseDelay(value);
 18746   002DBE  51ED               	movf	APP_nvValueChanged@value& (0+255),w,b
 18747   002DC0  EC7E  F062         	call	_setTimedResponseDelay
 18748   002DC4                     l20554:
 18749                           
 18750                           ;../universalNv.c: 121:     if (index == 4) {
 18751   002DC4  0E04               	movlw	4
 18752   002DC6  0101               	movlb	1	; () banked
 18753   002DC8  19F2               	xorwf	APP_nvValueChanged@index& (0+255),w,b
 18754   002DCA  B4D8               	btfsc	status,2,c
 18755                           
 18756                           ; BSR set to: 1
 18757                           ;../universalNv.c: 122:         WPUB = value;
 18758   002DCC  C1ED  FF5B         	movff	APP_nvValueChanged@value,3931	;volatile
 18759                           
 18760                           ; BSR set to: 1
 18761                           ;../universalNv.c: 215:     if (index >= 16) {
 18762   002DD0  0E0F               	movlw	15
 18763   002DD2  65F2               	cpfsgt	APP_nvValueChanged@index& (0+255),b
 18764   002DD4  0012               	return	
 18765                           
 18766                           ; BSR set to: 1
 18767                           ;../universalNv.c: 216:         io = ((uint8_t)((index-16)/7));
 18768   002DD6  0EF0               	movlw	240
 18769   002DD8  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18770   002DDA  0100               	movlb	0	; () banked
 18771   002DDC  6F97               	movwf	___awdiv@dividend& (0+255),b
 18772   002DDE  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 18773   002DE0  0EFF               	movlw	255
 18774   002DE2  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 18775   002DE4  0E00               	movlw	0
 18776   002DE6  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18777   002DE8  0E07               	movlw	7
 18778   002DEA  6F99               	movwf	___awdiv@divisor& (0+255),b
 18779   002DEC  ECA3  F052         	call	___awdiv	;wreg free
 18780   002DF0  0100               	movlb	0	; () banked
 18781   002DF2  5197               	movf	?___awdiv& (0+255),w,b
 18782   002DF4  0101               	movlb	1	; () banked
 18783   002DF6  6FF3               	movwf	APP_nvValueChanged@io& (0+255),b
 18784   002DF8  0EF0               	movlw	240
 18785   002DFA  25F2               	addwf	APP_nvValueChanged@index& (0+255),w,b
 18786   002DFC  0100               	movlb	0	; () banked
 18787   002DFE  6F8D               	movwf	___awmod@dividend& (0+255),b
 18788   002E00  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 18789   002E02  0EFF               	movlw	255
 18790   002E04  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 18791   002E06  0E00               	movlw	0
 18792   002E08  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 18793   002E0A  0E07               	movlw	7
 18794   002E0C  6F8F               	movwf	___awmod@divisor& (0+255),b
 18795   002E0E  ECB8  F056         	call	___awmod	;wreg free
 18796                           
 18797                           ;../universalNv.c: 218:         switch(getNV((16 + 7*(io) + 0))) {
 18798   002E12  D1CF               	goto	l20632
 18799   002E14                     l20562:
 18800                           
 18801                           ; BSR set to: 0
 18802                           ;../universalNv.c: 232:                 if (index == (16 + 7*(io) + 2)) {
 18803   002E14  0101               	movlb	1	; () banked
 18804   002E16  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 18805   002E18  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 18806   002E1A  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18807   002E1C  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18808   002E1E  0D07               	mullw	7
 18809   002E20  0E12               	movlw	18
 18810   002E22  26F3               	addwf	243,f,c
 18811   002E24  0E00               	movlw	0
 18812   002E26  22F4               	addwfc	244,f,c
 18813   002E28  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 18814   002E2A  18F3               	xorwf	243,w,c
 18815   002E2C  E113               	bnz	l20568
 18816   002E2E  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18817   002E30  18F4               	xorwf	244,w,c
 18818   002E32  A4D8               	btfss	status,2,c
 18819   002E34  D00F               	goto	l20568
 18820                           
 18821                           ; BSR set to: 1
 18822                           ;../universalNv.c: 233:                     setServoState(io, 2);
 18823   002E36  0E02               	movlw	2
 18824   002E38  0100               	movlb	0	; () banked
 18825   002E3A  6F91               	movwf	setServoState@action& (0+255),b
 18826   002E3C  0101               	movlb	1	; () banked
 18827   002E3E  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18828   002E40  EC06  F04A         	call	_setServoState
 18829                           
 18830                           ;../universalNv.c: 234:                     startServoOutput(io, 2);
 18831   002E44  0E02               	movlw	2
 18832   002E46  0100               	movlb	0	; () banked
 18833   002E48  6F91               	movwf	startServoOutput@action& (0+255),b
 18834   002E4A  0101               	movlb	1	; () banked
 18835   002E4C  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18836   002E4E  ECE4  F048         	call	_startServoOutput
 18837                           
 18838                           ;../universalNv.c: 235:                 } else if (index == (16 + 7*(io) + 3)) {
 18839   002E52  0012               	return	
 18840   002E54                     l20568:
 18841                           
 18842                           ; BSR set to: 1
 18843   002E54  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 18844   002E56  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 18845   002E58  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18846   002E5A  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18847   002E5C  0D07               	mullw	7
 18848   002E5E  0E13               	movlw	19
 18849   002E60  26F3               	addwf	243,f,c
 18850   002E62  0E00               	movlw	0
 18851   002E64  22F4               	addwfc	244,f,c
 18852   002E66  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 18853   002E68  18F3               	xorwf	243,w,c
 18854   002E6A  E113               	bnz	l20574
 18855   002E6C  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18856   002E6E  18F4               	xorwf	244,w,c
 18857   002E70  A4D8               	btfss	status,2,c
 18858   002E72  D00F               	goto	l20574
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;../universalNv.c: 236:                     setServoState(io, 1);
 18862   002E74  0E01               	movlw	1
 18863   002E76  0100               	movlb	0	; () banked
 18864   002E78  6F91               	movwf	setServoState@action& (0+255),b
 18865   002E7A  0101               	movlb	1	; () banked
 18866   002E7C  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18867   002E7E  EC06  F04A         	call	_setServoState
 18868                           
 18869                           ;../universalNv.c: 237:                     startServoOutput(io, 1);
 18870   002E82  0E01               	movlw	1
 18871   002E84  0100               	movlb	0	; () banked
 18872   002E86  6F91               	movwf	startServoOutput@action& (0+255),b
 18873   002E88  0101               	movlb	1	; () banked
 18874   002E8A  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18875   002E8C  ECE4  F048         	call	_startServoOutput
 18876                           
 18877                           ;../universalNv.c: 238:                 } else if (index == (16 + 7*(io) + 1)) {
 18878   002E90  0012               	return	
 18879   002E92                     l20574:
 18880                           
 18881                           ; BSR set to: 1
 18882   002E92  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 18883   002E94  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 18884   002E96  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18885   002E98  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18886   002E9A  0D07               	mullw	7
 18887   002E9C  0E11               	movlw	17
 18888   002E9E  26F3               	addwf	243,f,c
 18889   002EA0  0E00               	movlw	0
 18890   002EA2  22F4               	addwfc	244,f,c
 18891   002EA4  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 18892   002EA6  18F3               	xorwf	243,w,c
 18893   002EA8  E103               	bnz	u21091
 18894   002EAA  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18895   002EAC  18F4               	xorwf	244,w,c
 18896   002EAE  A4D8               	btfss	status,2,c
 18897   002EB0                     u21091:
 18898   002EB0  0012               	return	
 18899                           
 18900                           ; BSR set to: 1
 18901                           ;../universalNv.c: 239:                     if (((value & 0x80) == 0x80) &&
 18902   002EB2  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 18903   002EB4  0012               	return	
 18904                           
 18905                           ; BSR set to: 1
 18906   002EB6  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 18907   002EB8  0012               	return	
 18908                           
 18909                           ; BSR set to: 1
 18910                           ;../universalNv.c: 240:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 243:                         setServoPosition(io, (uint8_t)(getNV((16 + 7*(io) +
      +                           3))/2 + getNV((16 + 7*(io) + 2))/2));
 18911   002EBA  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18912   002EBC  0D07               	mullw	7
 18913   002EBE  50F3               	movf	243,w,c
 18914   002EC0  0F12               	addlw	18
 18915   002EC2  ECD9  F05D         	call	_getNV
 18916   002EC6  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18917   002ECA  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18918   002ECE  0E00               	movlw	0
 18919   002ED0  0100               	movlb	0	; () banked
 18920   002ED2  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18921   002ED4  0E02               	movlw	2
 18922   002ED6  6F99               	movwf	___awdiv@divisor& (0+255),b
 18923   002ED8  ECA3  F052         	call	___awdiv	;wreg free
 18924   002EDC  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 18925   002EE0  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 18926   002EE4  0101               	movlb	1	; () banked
 18927   002EE6  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18928   002EE8  0D07               	mullw	7
 18929   002EEA  50F3               	movf	243,w,c
 18930   002EEC  0F13               	addlw	19
 18931   002EEE  ECD9  F05D         	call	_getNV
 18932   002EF2  C08D  F097         	movff	?_getNV,___awdiv@dividend
 18933   002EF6  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 18934   002EFA  0E00               	movlw	0
 18935   002EFC  0100               	movlb	0	; () banked
 18936   002EFE  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 18937   002F00  0E02               	movlw	2
 18938   002F02  6F99               	movwf	___awdiv@divisor& (0+255),b
 18939   002F04  ECA3  F052         	call	___awdiv	;wreg free
 18940   002F08  0100               	movlb	0	; () banked
 18941   002F0A  5197               	movf	?___awdiv& (0+255),w,b
 18942   002F0C  0101               	movlb	1	; () banked
 18943   002F0E  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 18944   002F10  0100               	movlb	0	; () banked
 18945   002F12  6F9F               	movwf	setServoPosition@pos& (0+255),b
 18946   002F14  0101               	movlb	1	; () banked
 18947   002F16  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18948   002F18  ECFE  F060         	call	_setServoPosition
 18949                           
 18950                           ; BSR set to: 1
 18951                           
 18952                           ;../universalNv.c: 245:                 }
 18953   002F1C  0012               	return	
 18954   002F1E                     l20582:
 18955                           
 18956                           ; BSR set to: 0
 18957                           ;../universalNv.c: 250:                 if (index == (16 + 7*(io) + 3)) {
 18958   002F1E  0101               	movlb	1	; () banked
 18959   002F20  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 18960   002F22  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 18961   002F24  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 18962   002F26  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18963   002F28  0D07               	mullw	7
 18964   002F2A  0E13               	movlw	19
 18965   002F2C  26F3               	addwf	243,f,c
 18966   002F2E  0E00               	movlw	0
 18967   002F30  22F4               	addwfc	244,f,c
 18968   002F32  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 18969   002F34  18F3               	xorwf	243,w,c
 18970   002F36  E113               	bnz	l20586
 18971   002F38  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 18972   002F3A  18F4               	xorwf	244,w,c
 18973   002F3C  A4D8               	btfss	status,2,c
 18974   002F3E  D00F               	goto	l20586
 18975                           
 18976                           ; BSR set to: 1
 18977                           ;../universalNv.c: 251:                     setBounceState(io, 2);
 18978   002F40  0E02               	movlw	2
 18979   002F42  0100               	movlb	0	; () banked
 18980   002F44  6F91               	movwf	setBounceState@action& (0+255),b
 18981   002F46  0101               	movlb	1	; () banked
 18982   002F48  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18983   002F4A  EC64  F04A         	call	_setBounceState
 18984                           
 18985                           ;../universalNv.c: 252:                     startBounceOutput(io, 2);
 18986   002F4E  0E02               	movlw	2
 18987   002F50  0100               	movlb	0	; () banked
 18988   002F52  6F8D               	movwf	startBounceOutput@action& (0+255),b
 18989   002F54  0101               	movlb	1	; () banked
 18990   002F56  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 18991   002F58  EC30  F058         	call	_startBounceOutput
 18992                           
 18993                           ;../universalNv.c: 253:                 } else if (index == (16 + 7*(io) + 2)) {
 18994   002F5C  0012               	return	
 18995   002F5E                     l20586:
 18996                           
 18997                           ; BSR set to: 1
 18998   002F5E  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 18999   002F60  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19000   002F62  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19001   002F64  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19002   002F66  0D07               	mullw	7
 19003   002F68  0E12               	movlw	18
 19004   002F6A  26F3               	addwf	243,f,c
 19005   002F6C  0E00               	movlw	0
 19006   002F6E  22F4               	addwfc	244,f,c
 19007   002F70  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19008   002F72  18F3               	xorwf	243,w,c
 19009   002F74  E113               	bnz	l20590
 19010   002F76  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19011   002F78  18F4               	xorwf	244,w,c
 19012   002F7A  A4D8               	btfss	status,2,c
 19013   002F7C  D00F               	goto	l20590
 19014                           
 19015                           ; BSR set to: 1
 19016                           ;../universalNv.c: 254:                     setBounceState(io, 1);
 19017   002F7E  0E01               	movlw	1
 19018   002F80  0100               	movlb	0	; () banked
 19019   002F82  6F91               	movwf	setBounceState@action& (0+255),b
 19020   002F84  0101               	movlb	1	; () banked
 19021   002F86  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19022   002F88  EC64  F04A         	call	_setBounceState
 19023                           
 19024                           ;../universalNv.c: 255:                     startBounceOutput(io, 1);
 19025   002F8C  0E01               	movlw	1
 19026   002F8E  0100               	movlb	0	; () banked
 19027   002F90  6F8D               	movwf	startBounceOutput@action& (0+255),b
 19028   002F92  0101               	movlb	1	; () banked
 19029   002F94  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19030   002F96  EC30  F058         	call	_startBounceOutput
 19031                           
 19032                           ;../universalNv.c: 256:                 } else if (index == (16 + 7*(io) + 1)) {
 19033   002F9A  0012               	return	
 19034   002F9C                     l20590:
 19035                           
 19036                           ; BSR set to: 1
 19037   002F9C  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19038   002F9E  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19039   002FA0  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19040   002FA2  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19041   002FA4  0D07               	mullw	7
 19042   002FA6  0E11               	movlw	17
 19043   002FA8  26F3               	addwf	243,f,c
 19044   002FAA  0E00               	movlw	0
 19045   002FAC  22F4               	addwfc	244,f,c
 19046   002FAE  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19047   002FB0  18F3               	xorwf	243,w,c
 19048   002FB2  E103               	bnz	u21141
 19049   002FB4  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19050   002FB6  18F4               	xorwf	244,w,c
 19051   002FB8  A4D8               	btfss	status,2,c
 19052   002FBA                     u21141:
 19053   002FBA  0012               	return	
 19054                           
 19055                           ; BSR set to: 1
 19056                           ;../universalNv.c: 257:                     if (((value & 0x80) == 0x80) &&
 19057   002FBC  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19058   002FBE  0012               	return	
 19059                           
 19060                           ; BSR set to: 1
 19061   002FC0  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19062   002FC2  0012               	return	
 19063                           
 19064                           ; BSR set to: 1
 19065                           ;../universalNv.c: 258:                             (oldValue & 0x80) == 0) {;../univers
      +                          alNv.c: 261:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3))
      +                          /2 + getNV((16 + 7*(io) + 2))/2);
 19066   002FC4  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19067   002FC6  0D07               	mullw	7
 19068   002FC8  50F3               	movf	243,w,c
 19069   002FCA  0F12               	addlw	18
 19070   002FCC  ECD9  F05D         	call	_getNV
 19071   002FD0  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19072   002FD4  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19073   002FD8  0E00               	movlw	0
 19074   002FDA  0100               	movlb	0	; () banked
 19075   002FDC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19076   002FDE  0E02               	movlw	2
 19077   002FE0  6F99               	movwf	___awdiv@divisor& (0+255),b
 19078   002FE2  ECA3  F052         	call	___awdiv	;wreg free
 19079   002FE6  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 19080   002FEA  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19081   002FEE  0101               	movlb	1	; () banked
 19082   002FF0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19083   002FF2  0D07               	mullw	7
 19084   002FF4  50F3               	movf	243,w,c
 19085   002FF6  0F13               	addlw	19
 19086   002FF8  ECD9  F05D         	call	_getNV
 19087   002FFC  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19088   003000  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19089   003004  0E00               	movlw	0
 19090   003006  0100               	movlb	0	; () banked
 19091   003008  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19092   00300A  0E02               	movlw	2
 19093   00300C  6F99               	movwf	___awdiv@divisor& (0+255),b
 19094   00300E  ECA3  F052         	call	___awdiv	;wreg free
 19095   003012  0100               	movlb	0	; () banked
 19096   003014  5197               	movf	?___awdiv& (0+255),w,b
 19097   003016  0101               	movlb	1	; () banked
 19098   003018  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19099   00301A  6FF1               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19100   00301C  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19101   00301E  0FA9               	addlw	low _currentPos
 19102   003020  6ED9               	movwf	fsr2l,c
 19103   003022  6ADA               	clrf	fsr2h,c
 19104   003024  C1F1  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19105   003028  0012               	return	
 19106   00302A                     l20598:
 19107                           
 19108                           ; BSR set to: 0
 19109                           ;../universalNv.c: 268:                 if (index == (16 + 7*(io) + 3)) {
 19110   00302A  0101               	movlb	1	; () banked
 19111   00302C  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19112   00302E  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19113   003030  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19114   003032  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19115   003034  0D07               	mullw	7
 19116   003036  0E13               	movlw	19
 19117   003038  26F3               	addwf	243,f,c
 19118   00303A  0E00               	movlw	0
 19119   00303C  22F4               	addwfc	244,f,c
 19120   00303E  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19121   003040  18F3               	xorwf	243,w,c
 19122   003042  E113               	bnz	l20604
 19123   003044  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19124   003046  18F4               	xorwf	244,w,c
 19125   003048  A4D8               	btfss	status,2,c
 19126   00304A  D00F               	goto	l20604
 19127                           
 19128                           ; BSR set to: 1
 19129                           ;../universalNv.c: 269:                     setMultiState(io, 0);
 19130   00304C  0E00               	movlw	0
 19131   00304E  0100               	movlb	0	; () banked
 19132   003050  6F91               	movwf	setMultiState@action& (0+255),b
 19133   003052  0101               	movlb	1	; () banked
 19134   003054  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19135   003056  ECF3  F043         	call	_setMultiState
 19136                           
 19137                           ;../universalNv.c: 270:                     startMultiOutput(io, 0);
 19138   00305A  0E00               	movlw	0
 19139   00305C  0100               	movlb	0	; () banked
 19140   00305E  6F91               	movwf	startMultiOutput@action& (0+255),b
 19141   003060  0101               	movlb	1	; () banked
 19142   003062  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19143   003064  EC72  F04D         	call	_startMultiOutput
 19144                           
 19145                           ;../universalNv.c: 271:                 } else if (index == (16 + 7*(io) + 4)) {
 19146   003068  0012               	return	
 19147   00306A                     l20604:
 19148                           
 19149                           ; BSR set to: 1
 19150   00306A  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19151   00306C  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19152   00306E  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19153   003070  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19154   003072  0D07               	mullw	7
 19155   003074  0E14               	movlw	20
 19156   003076  26F3               	addwf	243,f,c
 19157   003078  0E00               	movlw	0
 19158   00307A  22F4               	addwfc	244,f,c
 19159   00307C  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19160   00307E  18F3               	xorwf	243,w,c
 19161   003080  E113               	bnz	l20610
 19162   003082  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19163   003084  18F4               	xorwf	244,w,c
 19164   003086  A4D8               	btfss	status,2,c
 19165   003088  D00F               	goto	l20610
 19166                           
 19167                           ; BSR set to: 1
 19168                           ;../universalNv.c: 272:                     setMultiState(io, 1);
 19169   00308A  0E01               	movlw	1
 19170   00308C  0100               	movlb	0	; () banked
 19171   00308E  6F91               	movwf	setMultiState@action& (0+255),b
 19172   003090  0101               	movlb	1	; () banked
 19173   003092  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19174   003094  ECF3  F043         	call	_setMultiState
 19175                           
 19176                           ;../universalNv.c: 273:                     startMultiOutput(io, 1);
 19177   003098  0E01               	movlw	1
 19178   00309A  0100               	movlb	0	; () banked
 19179   00309C  6F91               	movwf	startMultiOutput@action& (0+255),b
 19180   00309E  0101               	movlb	1	; () banked
 19181   0030A0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19182   0030A2  EC72  F04D         	call	_startMultiOutput
 19183                           
 19184                           ;../universalNv.c: 274:                 } else if (index == (16 + 7*(io) + 5)) {
 19185   0030A6  0012               	return	
 19186   0030A8                     l20610:
 19187                           
 19188                           ; BSR set to: 1
 19189   0030A8  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19190   0030AA  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19191   0030AC  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19192   0030AE  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19193   0030B0  0D07               	mullw	7
 19194   0030B2  0E15               	movlw	21
 19195   0030B4  26F3               	addwf	243,f,c
 19196   0030B6  0E00               	movlw	0
 19197   0030B8  22F4               	addwfc	244,f,c
 19198   0030BA  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19199   0030BC  18F3               	xorwf	243,w,c
 19200   0030BE  E113               	bnz	l20616
 19201   0030C0  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19202   0030C2  18F4               	xorwf	244,w,c
 19203   0030C4  A4D8               	btfss	status,2,c
 19204   0030C6  D00F               	goto	l20616
 19205                           
 19206                           ; BSR set to: 1
 19207                           ;../universalNv.c: 275:                     setMultiState(io, 2);
 19208   0030C8  0E02               	movlw	2
 19209   0030CA  0100               	movlb	0	; () banked
 19210   0030CC  6F91               	movwf	setMultiState@action& (0+255),b
 19211   0030CE  0101               	movlb	1	; () banked
 19212   0030D0  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19213   0030D2  ECF3  F043         	call	_setMultiState
 19214                           
 19215                           ;../universalNv.c: 276:                     startMultiOutput(io, 2);
 19216   0030D6  0E02               	movlw	2
 19217   0030D8  0100               	movlb	0	; () banked
 19218   0030DA  6F91               	movwf	startMultiOutput@action& (0+255),b
 19219   0030DC  0101               	movlb	1	; () banked
 19220   0030DE  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19221   0030E0  EC72  F04D         	call	_startMultiOutput
 19222                           
 19223                           ;../universalNv.c: 277:                 } else if (index == (16 + 7*(io) + 6)) {
 19224   0030E4  0012               	return	
 19225   0030E6                     l20616:
 19226                           
 19227                           ; BSR set to: 1
 19228   0030E6  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19229   0030E8  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19230   0030EA  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19231   0030EC  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19232   0030EE  0D07               	mullw	7
 19233   0030F0  0E16               	movlw	22
 19234   0030F2  26F3               	addwf	243,f,c
 19235   0030F4  0E00               	movlw	0
 19236   0030F6  22F4               	addwfc	244,f,c
 19237   0030F8  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19238   0030FA  18F3               	xorwf	243,w,c
 19239   0030FC  E113               	bnz	l20622
 19240   0030FE  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19241   003100  18F4               	xorwf	244,w,c
 19242   003102  A4D8               	btfss	status,2,c
 19243   003104  D00F               	goto	l20622
 19244                           
 19245                           ; BSR set to: 1
 19246                           ;../universalNv.c: 278:                     setMultiState(io, 3);
 19247   003106  0E03               	movlw	3
 19248   003108  0100               	movlb	0	; () banked
 19249   00310A  6F91               	movwf	setMultiState@action& (0+255),b
 19250   00310C  0101               	movlb	1	; () banked
 19251   00310E  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19252   003110  ECF3  F043         	call	_setMultiState
 19253                           
 19254                           ;../universalNv.c: 279:                     startMultiOutput(io, 3);
 19255   003114  0E03               	movlw	3
 19256   003116  0100               	movlb	0	; () banked
 19257   003118  6F91               	movwf	startMultiOutput@action& (0+255),b
 19258   00311A  0101               	movlb	1	; () banked
 19259   00311C  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19260   00311E  EC72  F04D         	call	_startMultiOutput
 19261                           
 19262                           ;../universalNv.c: 280:                 } else if (index == (16 + 7*(io) + 1)) {
 19263   003122  0012               	return	
 19264   003124                     l20622:
 19265                           
 19266                           ; BSR set to: 1
 19267   003124  51F2               	movf	APP_nvValueChanged@index& (0+255),w,b
 19268   003126  6FEF               	movwf	??_APP_nvValueChanged& (0+255),b
 19269   003128  6BF0               	clrf	(??_APP_nvValueChanged+1)& (0+255),b
 19270   00312A  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19271   00312C  0D07               	mullw	7
 19272   00312E  0E11               	movlw	17
 19273   003130  26F3               	addwf	243,f,c
 19274   003132  0E00               	movlw	0
 19275   003134  22F4               	addwfc	244,f,c
 19276   003136  51EF               	movf	??_APP_nvValueChanged& (0+255),w,b
 19277   003138  18F3               	xorwf	243,w,c
 19278   00313A  E152               	bnz	l813
 19279   00313C  51F0               	movf	(??_APP_nvValueChanged+1)& (0+255),w,b
 19280   00313E  18F4               	xorwf	244,w,c
 19281   003140  A4D8               	btfss	status,2,c
 19282   003142  0012               	return	
 19283                           
 19284                           ; BSR set to: 1
 19285                           ;../universalNv.c: 281:                     if (((value & 0x80) == 0x80) &&
 19286   003144  AFED               	btfss	APP_nvValueChanged@value& (0+255),7,b
 19287   003146  0012               	return	
 19288                           
 19289                           ; BSR set to: 1
 19290   003148  BFEE               	btfsc	APP_nvValueChanged@oldValue& (0+255),7,b
 19291   00314A  0012               	return	
 19292                           
 19293                           ; BSR set to: 1
 19294                           ;../universalNv.c: 282:                             ((oldValue & 0x80) == 0)) {;../unive
      +                          rsalNv.c: 285:                         currentPos[io] = (uint8_t)(getNV((16 + 7*(io) + 3
      +                          ))/2 + getNV((16 + 7*(io) + 2))/2);
 19295   00314C  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19296   00314E  0D07               	mullw	7
 19297   003150  50F3               	movf	243,w,c
 19298   003152  0F12               	addlw	18
 19299   003154  ECD9  F05D         	call	_getNV
 19300   003158  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19301   00315C  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19302   003160  0E00               	movlw	0
 19303   003162  0100               	movlb	0	; () banked
 19304   003164  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19305   003166  0E02               	movlw	2
 19306   003168  6F99               	movwf	___awdiv@divisor& (0+255),b
 19307   00316A  ECA3  F052         	call	___awdiv	;wreg free
 19308   00316E  C097  F1EF         	movff	?___awdiv,??_APP_nvValueChanged
 19309   003172  C098  F1F0         	movff	?___awdiv+1,??_APP_nvValueChanged+1
 19310   003176  0101               	movlb	1	; () banked
 19311   003178  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19312   00317A  0D07               	mullw	7
 19313   00317C  50F3               	movf	243,w,c
 19314   00317E  0F13               	addlw	19
 19315   003180  ECD9  F05D         	call	_getNV
 19316   003184  C08D  F097         	movff	?_getNV,___awdiv@dividend
 19317   003188  C08E  F098         	movff	?_getNV+1,___awdiv@dividend+1
 19318   00318C  0E00               	movlw	0
 19319   00318E  0100               	movlb	0	; () banked
 19320   003190  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19321   003192  0E02               	movlw	2
 19322   003194  6F99               	movwf	___awdiv@divisor& (0+255),b
 19323   003196  ECA3  F052         	call	___awdiv	;wreg free
 19324   00319A  0100               	movlb	0	; () banked
 19325   00319C  5197               	movf	?___awdiv& (0+255),w,b
 19326   00319E  0101               	movlb	1	; () banked
 19327   0031A0  25EF               	addwf	??_APP_nvValueChanged& (0+255),w,b
 19328   0031A2  6FF1               	movwf	(??_APP_nvValueChanged+2)& (0+255),b
 19329   0031A4  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19330   0031A6  0FA9               	addlw	low _currentPos
 19331   0031A8  6ED9               	movwf	fsr2l,c
 19332   0031AA  6ADA               	clrf	fsr2h,c
 19333   0031AC  C1F1  FFDF         	movff	??_APP_nvValueChanged+2,indf2
 19334   0031B0  0012               	return	
 19335   0031B2                     l20632:
 19336   0031B2  0101               	movlb	1	; () banked
 19337   0031B4  51F3               	movf	APP_nvValueChanged@io& (0+255),w,b
 19338   0031B6  0D07               	mullw	7
 19339   0031B8  50F3               	movf	243,w,c
 19340   0031BA  0F10               	addlw	16
 19341   0031BC  ECD9  F05D         	call	_getNV
 19342                           
 19343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19344                           ; Switch size 1, requested type "simple"
 19345                           ; Number of cases is 1, Range of values is 0 to 0
 19346                           ; switch strategies available:
 19347                           ; Name         Instructions Cycles
 19348                           ; simple_byte            4     3 (average)
 19349                           ;	Chosen strategy is simple_byte
 19350   0031C0  0100               	movlb	0	; () banked
 19351   0031C2  518E               	movf	(?_getNV+1)& (0+255),w,b
 19352   0031C4  0A00               	xorlw	0	; case 0
 19353   0031C6  A4D8               	btfss	status,2,c
 19354   0031C8  0012               	return	
 19355                           
 19356                           ; BSR set to: 0
 19357                           ; Switch size 1, requested type "simple"
 19358                           ; Number of cases is 3, Range of values is 2 to 4
 19359                           ; switch strategies available:
 19360                           ; Name         Instructions Cycles
 19361                           ; simple_byte           10     6 (average)
 19362                           ;	Chosen strategy is simple_byte
 19363   0031CA  518D               	movf	?_getNV& (0+255),w,b
 19364   0031CC  0A02               	xorlw	2	; case 2
 19365   0031CE  B4D8               	btfsc	status,2,c
 19366   0031D0  D621               	goto	l20562
 19367   0031D2  0A01               	xorlw	1	; case 3
 19368   0031D4  B4D8               	btfsc	status,2,c
 19369   0031D6  D6A3               	goto	l20582
 19370   0031D8  0A07               	xorlw	7	; case 4
 19371   0031DA  A4D8               	btfss	status,2,c
 19372   0031DC  0012               	return	
 19373   0031DE  D725               	goto	l20598
 19374   0031E0                     l813:
 19375   0031E0  0012               	return		;funcret
 19376   0031E2                     __end_of_APP_nvValueChanged:
 19377                           	callstack 0
 19378                           
 19379 ;; *************** function _setTimedResponseDelay *****************
 19380 ;; Defined at:
 19381 ;;		line 900 in file "../../VLCBlib_PIC/vlcb.c"
 19382 ;; Parameters:    Size  Location     Type
 19383 ;;  delay           1    wreg     unsigned char 
 19384 ;; Auto vars:     Size  Location     Type
 19385 ;;  delay           1   45[BANK0 ] unsigned char 
 19386 ;; Return value:  Size  Location     Type
 19387 ;;                  1    wreg      void 
 19388 ;; Registers used:
 19389 ;;		wreg
 19390 ;; Tracked objects:
 19391 ;;		On entry : 0/0
 19392 ;;		On exit  : 0/0
 19393 ;;		Unchanged: 0/0
 19394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19398 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19399 ;;Total ram usage:        1 bytes
 19400 ;; Hardware stack levels used: 1
 19401 ;; Hardware stack levels required when called: 12
 19402 ;; This function calls:
 19403 ;;		Nothing
 19404 ;; This function is called by:
 19405 ;;		_setup
 19406 ;;		_APP_nvValueChanged
 19407 ;; This function uses a non-reentrant model
 19408 ;;
 19409                           
 19410                           	psect	text53
 19411   00C4FC                     __ptext53:
 19412                           	callstack 0
 19413   00C4FC                     _setTimedResponseDelay:
 19414                           	callstack 17
 19415                           
 19416                           ;incstack = 0
 19417                           ;setTimedResponseDelay@delay stored from wreg
 19418   00C4FC  0100               	movlb	0	; () banked
 19419   00C4FE  6F8D               	movwf	setTimedResponseDelay@delay& (0+255),b
 19420                           
 19421                           ;../../VLCBlib_PIC/vlcb.c: 901:     timedResponseDelay = delay;
 19422   00C500  C08D  F164         	movff	setTimedResponseDelay@delay,_timedResponseDelay
 19423   00C504  0012               	return		;funcret
 19424   00C506                     __end_of_setTimedResponseDelay:
 19425                           	callstack 0
 19426                           
 19427 ;; *************** function _setServoPosition *****************
 19428 ;; Defined at:
 19429 ;;		line 683 in file "../servo.c"
 19430 ;; Parameters:    Size  Location     Type
 19431 ;;  io              1    wreg     unsigned char 
 19432 ;;  pos             1   63[BANK0 ] unsigned char 
 19433 ;; Auto vars:     Size  Location     Type
 19434 ;;  io              1   64[BANK0 ] unsigned char 
 19435 ;; Return value:  Size  Location     Type
 19436 ;;                  1    wreg      void 
 19437 ;; Registers used:
 19438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19439 ;; Tracked objects:
 19440 ;;		On entry : 0/0
 19441 ;;		On exit  : 0/0
 19442 ;;		Unchanged: 0/0
 19443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19444 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19447 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19448 ;;Total ram usage:        2 bytes
 19449 ;; Hardware stack levels used: 1
 19450 ;; Hardware stack levels required when called: 12
 19451 ;; This function calls:
 19452 ;;		Nothing
 19453 ;; This function is called by:
 19454 ;;		_APP_nvValueChanged
 19455 ;;		_setOutputPosition
 19456 ;; This function uses a non-reentrant model
 19457 ;;
 19458                           
 19459                           	psect	text54
 19460   00C1FC                     __ptext54:
 19461                           	callstack 0
 19462   00C1FC                     _setServoPosition:
 19463                           	callstack 15
 19464                           
 19465                           ;incstack = 0
 19466                           ;setServoPosition@io stored from wreg
 19467   00C1FC  0100               	movlb	0	; () banked
 19468   00C1FE  6FA0               	movwf	setServoPosition@io& (0+255),b
 19469                           
 19470                           ;../servo.c: 684:     targetPos[io] = pos;
 19471   00C200  0E20               	movlw	low _targetPos
 19472   00C202  0100               	movlb	0	; () banked
 19473   00C204  25A0               	addwf	setServoPosition@io& (0+255),w,b
 19474   00C206  6ED9               	movwf	fsr2l,c
 19475   00C208  6ADA               	clrf	fsr2h,c
 19476   00C20A  0E01               	movlw	high _targetPos
 19477   00C20C  22DA               	addwfc	fsr2h,f,c
 19478   00C20E  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19479                           
 19480                           ;../servo.c: 685:     currentPos[io] = pos;
 19481   00C212  51A0               	movf	setServoPosition@io& (0+255),w,b
 19482   00C214  0FA9               	addlw	low _currentPos
 19483   00C216  6ED9               	movwf	fsr2l,c
 19484   00C218  6ADA               	clrf	fsr2h,c
 19485   00C21A  C09F  FFDF         	movff	setServoPosition@pos,indf2
 19486                           
 19487                           ; BSR set to: 0
 19488   00C21E  0012               	return		;funcret
 19489   00C220                     __end_of_setServoPosition:
 19490                           	callstack 0
 19491                           
 19492 ;; *************** function _APP_nvValidate *****************
 19493 ;; Defined at:
 19494 ;;		line 299 in file "../universalNv.c"
 19495 ;; Parameters:    Size  Location     Type
 19496 ;;  index           1    wreg     unsigned char 
 19497 ;;  value           1   63[BANK0 ] unsigned char 
 19498 ;; Auto vars:     Size  Location     Type
 19499 ;;  index           1   64[BANK0 ] unsigned char 
 19500 ;;  io              1    0        unsigned char 
 19501 ;; Return value:  Size  Location     Type
 19502 ;;                  1    wreg      enum E12923
 19503 ;; Registers used:
 19504 ;;		wreg, status,2, status,0, cstack
 19505 ;; Tracked objects:
 19506 ;;		On entry : 0/0
 19507 ;;		On exit  : 0/0
 19508 ;;		Unchanged: 0/0
 19509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19510 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19513 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19514 ;;Total ram usage:        2 bytes
 19515 ;; Hardware stack levels used: 1
 19516 ;; Hardware stack levels required when called: 13
 19517 ;; This function calls:
 19518 ;;		___awdiv
 19519 ;;		___awmod
 19520 ;; This function is called by:
 19521 ;;		_setNV
 19522 ;; This function uses a non-reentrant model
 19523 ;;
 19524                           
 19525                           	psect	text55
 19526   00AC1A                     __ptext55:
 19527                           	callstack 0
 19528   00AC1A                     _APP_nvValidate:
 19529                           	callstack 14
 19530                           
 19531                           ; BSR set to: 0
 19532                           ;incstack = 0
 19533                           ;APP_nvValidate@index stored from wreg
 19534   00AC1A  0100               	movlb	0	; () banked
 19535   00AC1C  6FA0               	movwf	APP_nvValidate@index& (0+255),b
 19536                           
 19537                           ;../universalNv.c: 300:     uint8_t io;;../universalNv.c: 301:     if ((index >= 16) && 
      +                          (((index-16) % 7) == 0)) {
 19538   00AC1E  0E0F               	movlw	15
 19539   00AC20  0100               	movlb	0	; () banked
 19540   00AC22  65A0               	cpfsgt	APP_nvValidate@index& (0+255),b
 19541   00AC24  D031               	goto	l819
 19542                           
 19543                           ; BSR set to: 0
 19544   00AC26  0EF0               	movlw	240
 19545   00AC28  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19546   00AC2A  6F8D               	movwf	___awmod@dividend& (0+255),b
 19547   00AC2C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 19548   00AC2E  0EFF               	movlw	255
 19549   00AC30  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 19550   00AC32  0E00               	movlw	0
 19551   00AC34  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 19552   00AC36  0E07               	movlw	7
 19553   00AC38  6F8F               	movwf	___awmod@divisor& (0+255),b
 19554   00AC3A  ECB8  F056         	call	___awmod	;wreg free
 19555   00AC3E  0100               	movlb	0	; () banked
 19556   00AC40  518D               	movf	?___awmod& (0+255),w,b
 19557   00AC42  118E               	iorwf	(?___awmod+1)& (0+255),w,b
 19558   00AC44  A4D8               	btfss	status,2,c
 19559   00AC46  D020               	goto	l819
 19560                           
 19561                           ; BSR set to: 0
 19562   00AC48  0EF0               	movlw	240
 19563   00AC4A  25A0               	addwf	APP_nvValidate@index& (0+255),w,b
 19564   00AC4C  6F97               	movwf	___awdiv@dividend& (0+255),b
 19565   00AC4E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 19566   00AC50  0EFF               	movlw	255
 19567   00AC52  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 19568   00AC54  0E00               	movlw	0
 19569   00AC56  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 19570   00AC58  0E07               	movlw	7
 19571   00AC5A  6F99               	movwf	___awdiv@divisor& (0+255),b
 19572   00AC5C  ECA3  F052         	call	___awdiv	;wreg free
 19573                           
 19574                           ;../universalNv.c: 308:         switch (value) {
 19575   00AC60  D002               	goto	l20652
 19576   00AC62                     l20646:
 19577                           
 19578                           ; BSR set to: 0
 19579                           ;../universalNv.c: 331:                 return INVALID;
 19580   00AC62  0E00               	movlw	0
 19581   00AC64  0012               	return	
 19582   00AC66                     l20652:
 19583   00AC66  0100               	movlb	0	; () banked
 19584   00AC68  519F               	movf	APP_nvValidate@value& (0+255),w,b
 19585                           
 19586                           ; Switch size 1, requested type "simple"
 19587                           ; Number of cases is 5, Range of values is 0 to 4
 19588                           ; switch strategies available:
 19589                           ; Name         Instructions Cycles
 19590                           ; simple_byte           16     9 (average)
 19591                           ;	Chosen strategy is simple_byte
 19592   00AC6A  0A00               	xorlw	0	; case 0
 19593   00AC6C  B4D8               	btfsc	status,2,c
 19594   00AC6E  D00C               	goto	l819
 19595   00AC70  0A01               	xorlw	1	; case 1
 19596   00AC72  B4D8               	btfsc	status,2,c
 19597   00AC74  D009               	goto	l819
 19598   00AC76  0A03               	xorlw	3	; case 2
 19599   00AC78  B4D8               	btfsc	status,2,c
 19600   00AC7A  D006               	goto	l819
 19601   00AC7C  0A01               	xorlw	1	; case 3
 19602   00AC7E  B4D8               	btfsc	status,2,c
 19603   00AC80  D003               	goto	l819
 19604   00AC82  0A07               	xorlw	7	; case 4
 19605   00AC84  A4D8               	btfss	status,2,c
 19606   00AC86  D7ED               	goto	l20646
 19607   00AC88                     l819:
 19608                           
 19609                           ; BSR set to: 0
 19610                           ;../universalNv.c: 334:     return VALID;
 19611                           
 19612                           ; BSR set to: 0
 19613   00AC88  0E01               	movlw	1
 19614                           
 19615                           ; BSR set to: 0
 19616   00AC8A  0012               	return		;funcret
 19617   00AC8C                     __end_of_APP_nvValidate:
 19618                           	callstack 0
 19619                           
 19620 ;; *************** function _producerEsdData *****************
 19621 ;; Defined at:
 19622 ;;		line 194 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19623 ;; Parameters:    Size  Location     Type
 19624 ;;  index           1    wreg     unsigned char 
 19625 ;; Auto vars:     Size  Location     Type
 19626 ;;  index           1   45[BANK0 ] unsigned char 
 19627 ;; Return value:  Size  Location     Type
 19628 ;;                  1    wreg      unsigned char 
 19629 ;; Registers used:
 19630 ;;		wreg, status,2, status,0
 19631 ;; Tracked objects:
 19632 ;;		On entry : 0/0
 19633 ;;		On exit  : 0/0
 19634 ;;		Unchanged: 0/0
 19635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19640 ;;Total ram usage:        1 bytes
 19641 ;; Hardware stack levels used: 1
 19642 ;; Hardware stack levels required when called: 12
 19643 ;; This function calls:
 19644 ;;		Nothing
 19645 ;; This function is called by:
 19646 ;;		_mnsProcessMessage
 19647 ;; This function uses a non-reentrant model
 19648 ;;
 19649                           
 19650                           	psect	text56
 19651   00C2D2                     __ptext56:
 19652                           	callstack 0
 19653   00C2D2                     _producerEsdData:
 19654                           	callstack 16
 19655                           
 19656                           ; BSR set to: 0
 19657                           ;incstack = 0
 19658                           ;producerEsdData@index stored from wreg
 19659   00C2D2  0100               	movlb	0	; () banked
 19660   00C2D4  6F8D               	movwf	producerEsdData@index& (0+255),b
 19661                           
 19662                           ;../../VLCBlib_PIC/event_producer_happening.c: 195:     switch (index){
 19663   00C2D6  D004               	goto	l22570
 19664   00C2D8                     l22556:
 19665                           
 19666                           ; BSR set to: 0
 19667                           ;../../VLCBlib_PIC/event_producer_happening.c: 197:             return PRODUCER_EV_HAPPE
      +                          NING;
 19668   00C2D8  0E01               	movlw	1
 19669   00C2DA  0012               	return	
 19670   00C2DC                     l22564:
 19671                           
 19672                           ; BSR set to: 0
 19673                           ;../../VLCBlib_PIC/event_producer_happening.c: 201:             return 0;
 19674   00C2DC  0E00               	movlw	0
 19675   00C2DE  0012               	return	
 19676   00C2E0                     l22570:
 19677   00C2E0  0100               	movlb	0	; () banked
 19678   00C2E2  518D               	movf	producerEsdData@index& (0+255),w,b
 19679                           
 19680                           ; Switch size 1, requested type "simple"
 19681                           ; Number of cases is 2, Range of values is 0 to 1
 19682                           ; switch strategies available:
 19683                           ; Name         Instructions Cycles
 19684                           ; simple_byte            7     4 (average)
 19685                           ;	Chosen strategy is simple_byte
 19686   00C2E4  0A00               	xorlw	0	; case 0
 19687   00C2E6  B4D8               	btfsc	status,2,c
 19688   00C2E8  D7F7               	goto	l22556
 19689   00C2EA  0A01               	xorlw	1	; case 1
 19690   00C2EC  B4D8               	btfsc	status,2,c
 19691   00C2EE  D7F4               	goto	l22556
 19692   00C2F0  D7F5               	goto	l22564
 19693   00C2F2                     __end_of_producerEsdData:
 19694                           	callstack 0
 19695                           
 19696 ;; *************** function _canEsdData *****************
 19697 ;; Defined at:
 19698 ;;		line 422 in file "../../VLCBlib_PIC/can18_ecan.c"
 19699 ;; Parameters:    Size  Location     Type
 19700 ;;  id              1    wreg     unsigned char 
 19701 ;; Auto vars:     Size  Location     Type
 19702 ;;  id              1   45[BANK0 ] unsigned char 
 19703 ;; Return value:  Size  Location     Type
 19704 ;;                  1    wreg      unsigned char 
 19705 ;; Registers used:
 19706 ;;		wreg, status,2, status,0
 19707 ;; Tracked objects:
 19708 ;;		On entry : 0/0
 19709 ;;		On exit  : 0/0
 19710 ;;		Unchanged: 0/0
 19711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19713 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19715 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19716 ;;Total ram usage:        1 bytes
 19717 ;; Hardware stack levels used: 1
 19718 ;; Hardware stack levels required when called: 12
 19719 ;; This function calls:
 19720 ;;		Nothing
 19721 ;; This function is called by:
 19722 ;;		_mnsProcessMessage
 19723 ;; This function uses a non-reentrant model
 19724 ;;
 19725                           
 19726                           	psect	text57
 19727   00C3C8                     __ptext57:
 19728                           	callstack 0
 19729   00C3C8                     _canEsdData:
 19730                           	callstack 16
 19731                           
 19732                           ; BSR set to: 0
 19733                           ;incstack = 0
 19734                           ;canEsdData@id stored from wreg
 19735   00C3C8  0100               	movlb	0	; () banked
 19736   00C3CA  6F8D               	movwf	canEsdData@id& (0+255),b
 19737                           
 19738                           ;../../VLCBlib_PIC/can18_ecan.c: 423:     switch(id) {
 19739   00C3CC  D004               	goto	l22216
 19740   00C3CE                     l22206:
 19741                           
 19742                           ; BSR set to: 0
 19743                           ;../../VLCBlib_PIC/can18_ecan.c: 425:             return CAN_HW_PIC_ECAN;
 19744   00C3CE  0E01               	movlw	1
 19745   00C3D0  0012               	return	
 19746   00C3D2                     l22210:
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;../../VLCBlib_PIC/can18_ecan.c: 427:             return 0;
 19750   00C3D2  0E00               	movlw	0
 19751   00C3D4  0012               	return	
 19752   00C3D6                     l22216:
 19753   00C3D6  0100               	movlb	0	; () banked
 19754   00C3D8  518D               	movf	canEsdData@id& (0+255),w,b
 19755                           
 19756                           ; Switch size 1, requested type "simple"
 19757                           ; Number of cases is 1, Range of values is 0 to 0
 19758                           ; switch strategies available:
 19759                           ; Name         Instructions Cycles
 19760                           ; simple_byte            4     3 (average)
 19761                           ;	Chosen strategy is simple_byte
 19762   00C3DA  0A00               	xorlw	0	; case 0
 19763   00C3DC  B4D8               	btfsc	status,2,c
 19764   00C3DE  D7F7               	goto	l22206
 19765   00C3E0  D7F8               	goto	l22210
 19766   00C3E2                     __end_of_canEsdData:
 19767                           	callstack 0
 19768                           
 19769 ;; *************** function _nvGetESDdata *****************
 19770 ;; Defined at:
 19771 ;;		line 355 in file "../../VLCBlib_PIC/nv.c"
 19772 ;; Parameters:    Size  Location     Type
 19773 ;;  id              1    wreg     unsigned char 
 19774 ;; Auto vars:     Size  Location     Type
 19775 ;;  id              1   45[BANK0 ] unsigned char 
 19776 ;; Return value:  Size  Location     Type
 19777 ;;                  1    wreg      unsigned char 
 19778 ;; Registers used:
 19779 ;;		wreg, status,2, status,0
 19780 ;; Tracked objects:
 19781 ;;		On entry : 0/0
 19782 ;;		On exit  : 0/0
 19783 ;;		Unchanged: 0/0
 19784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19786 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19788 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19789 ;;Total ram usage:        1 bytes
 19790 ;; Hardware stack levels used: 1
 19791 ;; Hardware stack levels required when called: 12
 19792 ;; This function calls:
 19793 ;;		Nothing
 19794 ;; This function is called by:
 19795 ;;		_mnsProcessMessage
 19796 ;; This function uses a non-reentrant model
 19797 ;;
 19798                           
 19799                           	psect	text58
 19800   00C3E2                     __ptext58:
 19801                           	callstack 0
 19802   00C3E2                     _nvGetESDdata:
 19803                           	callstack 16
 19804                           
 19805                           ; BSR set to: 0
 19806                           ;incstack = 0
 19807                           ;nvGetESDdata@id stored from wreg
 19808   00C3E2  0100               	movlb	0	; () banked
 19809   00C3E4  6F8D               	movwf	nvGetESDdata@id& (0+255),b
 19810                           
 19811                           ;../../VLCBlib_PIC/nv.c: 356:     switch (id) {
 19812   00C3E6  D004               	goto	l21970
 19813   00C3E8                     l21960:
 19814                           
 19815                           ; BSR set to: 0
 19816   00C3E8  0E7F               	movlw	127
 19817   00C3EA  0012               	return	
 19818   00C3EC                     l21964:
 19819                           
 19820                           ; BSR set to: 0
 19821   00C3EC  0E00               	movlw	0
 19822   00C3EE  0012               	return	
 19823   00C3F0                     l21970:
 19824   00C3F0  0100               	movlb	0	; () banked
 19825   00C3F2  518D               	movf	nvGetESDdata@id& (0+255),w,b
 19826                           
 19827                           ; Switch size 1, requested type "simple"
 19828                           ; Number of cases is 1, Range of values is 1 to 1
 19829                           ; switch strategies available:
 19830                           ; Name         Instructions Cycles
 19831                           ; simple_byte            4     3 (average)
 19832                           ;	Chosen strategy is simple_byte
 19833   00C3F4  0A01               	xorlw	1	; case 1
 19834   00C3F6  B4D8               	btfsc	status,2,c
 19835   00C3F8  D7F7               	goto	l21960
 19836   00C3FA  D7F8               	goto	l21964
 19837   00C3FC                     __end_of_nvGetESDdata:
 19838                           	callstack 0
 19839                           
 19840 ;; *************** function _consumer2QEsdData *****************
 19841 ;; Defined at:
 19842 ;;		line 364 in file "../event_consumerDualActionQueue.c"
 19843 ;; Parameters:    Size  Location     Type
 19844 ;;  index           1    wreg     unsigned char 
 19845 ;; Auto vars:     Size  Location     Type
 19846 ;;  index           1   45[BANK0 ] unsigned char 
 19847 ;; Return value:  Size  Location     Type
 19848 ;;                  1    wreg      unsigned char 
 19849 ;; Registers used:
 19850 ;;		wreg, status,2, status,0
 19851 ;; Tracked objects:
 19852 ;;		On entry : 0/0
 19853 ;;		On exit  : 0/0
 19854 ;;		Unchanged: 0/0
 19855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19859 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19860 ;;Total ram usage:        1 bytes
 19861 ;; Hardware stack levels used: 1
 19862 ;; Hardware stack levels required when called: 12
 19863 ;; This function calls:
 19864 ;;		Nothing
 19865 ;; This function is called by:
 19866 ;;		_mnsProcessMessage
 19867 ;; This function uses a non-reentrant model
 19868 ;;
 19869                           
 19870                           	psect	text59
 19871   00C2F2                     __ptext59:
 19872                           	callstack 0
 19873   00C2F2                     _consumer2QEsdData:
 19874                           	callstack 16
 19875                           
 19876                           ; BSR set to: 0
 19877                           ;incstack = 0
 19878                           ;consumer2QEsdData@index stored from wreg
 19879   00C2F2  0100               	movlb	0	; () banked
 19880   00C2F4  6F8D               	movwf	consumer2QEsdData@index& (0+255),b
 19881                           
 19882                           ;../event_consumerDualActionQueue.c: 365:     switch (index){
 19883   00C2F6  D004               	goto	l21288
 19884   00C2F8                     l21274:
 19885                           
 19886                           ; BSR set to: 0
 19887                           ;../event_consumerDualActionQueue.c: 367:             return CONSUMER_EV_ACTIONS;
 19888   00C2F8  0E01               	movlw	1
 19889   00C2FA  0012               	return	
 19890   00C2FC                     l21282:
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;../event_consumerDualActionQueue.c: 371:             return 0;
 19894   00C2FC  0E00               	movlw	0
 19895   00C2FE  0012               	return	
 19896   00C300                     l21288:
 19897   00C300  0100               	movlb	0	; () banked
 19898   00C302  518D               	movf	consumer2QEsdData@index& (0+255),w,b
 19899                           
 19900                           ; Switch size 1, requested type "simple"
 19901                           ; Number of cases is 2, Range of values is 0 to 1
 19902                           ; switch strategies available:
 19903                           ; Name         Instructions Cycles
 19904                           ; simple_byte            7     4 (average)
 19905                           ;	Chosen strategy is simple_byte
 19906   00C304  0A00               	xorlw	0	; case 0
 19907   00C306  B4D8               	btfsc	status,2,c
 19908   00C308  D7F7               	goto	l21274
 19909   00C30A  0A01               	xorlw	1	; case 1
 19910   00C30C  B4D8               	btfsc	status,2,c
 19911   00C30E  D7F4               	goto	l21274
 19912   00C310  D7F5               	goto	l21282
 19913   00C312                     __end_of_consumer2QEsdData:
 19914                           	callstack 0
 19915                           
 19916 ;; *************** function _teachGetESDdata *****************
 19917 ;; Defined at:
 19918 ;;		line 528 in file "../../VLCBlib_PIC/event_teach_large.c"
 19919 ;; Parameters:    Size  Location     Type
 19920 ;;  id              1    wreg     unsigned char 
 19921 ;; Auto vars:     Size  Location     Type
 19922 ;;  id              1   45[BANK0 ] unsigned char 
 19923 ;; Return value:  Size  Location     Type
 19924 ;;                  1    wreg      unsigned char 
 19925 ;; Registers used:
 19926 ;;		wreg, status,2, status,0
 19927 ;; Tracked objects:
 19928 ;;		On entry : 0/0
 19929 ;;		On exit  : 0/0
 19930 ;;		Unchanged: 0/0
 19931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19933 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19935 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19936 ;;Total ram usage:        1 bytes
 19937 ;; Hardware stack levels used: 1
 19938 ;; Hardware stack levels required when called: 12
 19939 ;; This function calls:
 19940 ;;		Nothing
 19941 ;; This function is called by:
 19942 ;;		_mnsProcessMessage
 19943 ;; This function uses a non-reentrant model
 19944 ;;
 19945                           
 19946                           	psect	text60
 19947   00C220                     __ptext60:
 19948                           	callstack 0
 19949   00C220                     _teachGetESDdata:
 19950                           	callstack 16
 19951                           
 19952                           ; BSR set to: 0
 19953                           ;incstack = 0
 19954                           ;teachGetESDdata@id stored from wreg
 19955   00C220  0100               	movlb	0	; () banked
 19956   00C222  6F8D               	movwf	teachGetESDdata@id& (0+255),b
 19957                           
 19958                           ;../../VLCBlib_PIC/event_teach_large.c: 529:     switch (id) {
 19959   00C224  D006               	goto	l22518
 19960   00C226                     l22504:
 19961                           
 19962                           ; BSR set to: 0
 19963   00C226  0EFF               	movlw	255
 19964   00C228  0012               	return	
 19965   00C22A                     l22508:
 19966                           
 19967                           ; BSR set to: 0
 19968   00C22A  0E14               	movlw	20
 19969   00C22C  0012               	return	
 19970   00C22E                     l22512:
 19971                           
 19972                           ; BSR set to: 0
 19973   00C22E  0E00               	movlw	0
 19974   00C230  0012               	return	
 19975   00C232                     l22518:
 19976   00C232  0100               	movlb	0	; () banked
 19977   00C234  518D               	movf	teachGetESDdata@id& (0+255),w,b
 19978                           
 19979                           ; Switch size 1, requested type "simple"
 19980                           ; Number of cases is 2, Range of values is 1 to 2
 19981                           ; switch strategies available:
 19982                           ; Name         Instructions Cycles
 19983                           ; simple_byte            7     4 (average)
 19984                           ;	Chosen strategy is simple_byte
 19985   00C236  0A01               	xorlw	1	; case 1
 19986   00C238  B4D8               	btfsc	status,2,c
 19987   00C23A  D7F5               	goto	l22504
 19988   00C23C  0A03               	xorlw	3	; case 2
 19989   00C23E  B4D8               	btfsc	status,2,c
 19990   00C240  D7F4               	goto	l22508
 19991   00C242  D7F5               	goto	l22512
 19992   00C244                     __end_of_teachGetESDdata:
 19993                           	callstack 0
 19994                           
 19995 ;; *************** function _producerGetDiagnostic *****************
 19996 ;; Defined at:
 19997 ;;		line 180 in file "../../VLCBlib_PIC/event_producer_happening.c"
 19998 ;; Parameters:    Size  Location     Type
 19999 ;;  index           1    wreg     unsigned char 
 20000 ;; Auto vars:     Size  Location     Type
 20001 ;;  index           1   56[BANK0 ] unsigned char 
 20002 ;; Return value:  Size  Location     Type
 20003 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20004 ;; Registers used:
 20005 ;;		wreg, status,2, status,0, prodl, prodh
 20006 ;; Tracked objects:
 20007 ;;		On entry : 0/0
 20008 ;;		On exit  : 0/0
 20009 ;;		Unchanged: 0/0
 20010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20011 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20014 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20015 ;;Total ram usage:        3 bytes
 20016 ;; Hardware stack levels used: 1
 20017 ;; Hardware stack levels required when called: 12
 20018 ;; This function calls:
 20019 ;;		Nothing
 20020 ;; This function is called by:
 20021 ;;		_mnsTRallDiagnosticsCallback
 20022 ;;		_mnsProcessMessage
 20023 ;; This function uses a non-reentrant model
 20024 ;;
 20025                           
 20026                           	psect	text61
 20027   00C094                     __ptext61:
 20028                           	callstack 0
 20029   00C094                     _producerGetDiagnostic:
 20030                           	callstack 15
 20031                           
 20032                           ; BSR set to: 0
 20033                           ;incstack = 0
 20034                           ;producerGetDiagnostic@index stored from wreg
 20035   00C094  0100               	movlb	0	; () banked
 20036   00C096  6F98               	movwf	producerGetDiagnostic@index& (0+255),b
 20037                           
 20038                           ;../../VLCBlib_PIC/event_producer_happening.c: 181:     if (index > 1) {
 20039   00C098  0E01               	movlw	1
 20040   00C09A  0100               	movlb	0	; () banked
 20041   00C09C  6598               	cpfsgt	producerGetDiagnostic@index& (0+255),b
 20042   00C09E  D005               	goto	l21158
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;../../VLCBlib_PIC/event_producer_happening.c: 182:         return ((void*)0);
 20046   00C0A0  0E00               	movlw	0
 20047   00C0A2  6F96               	movwf	?_producerGetDiagnostic& (0+255),b
 20048   00C0A4  0E00               	movlw	0
 20049   00C0A6  6F97               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20050   00C0A8  0012               	return	
 20051   00C0AA                     l21158:
 20052                           
 20053                           ; BSR set to: 0
 20054                           ;../../VLCBlib_PIC/event_producer_happening.c: 184:     return &(producerDiagnostics[ind
      +                          ex]);
 20055   00C0AA  5198               	movf	producerGetDiagnostic@index& (0+255),w,b
 20056   00C0AC  0D02               	mullw	2
 20057   00C0AE  0EAA               	movlw	low _producerDiagnostics
 20058   00C0B0  24F3               	addwf	243,w,c
 20059   00C0B2  6F96               	movwf	?_producerGetDiagnostic& (0+255),b
 20060   00C0B4  0E01               	movlw	high _producerDiagnostics
 20061   00C0B6  20F4               	addwfc	prodh,w,c
 20062   00C0B8  6F97               	movwf	(?_producerGetDiagnostic+1)& (0+255),b
 20063                           
 20064                           ; BSR set to: 0
 20065   00C0BA  0012               	return		;funcret
 20066   00C0BC                     __end_of_producerGetDiagnostic:
 20067                           	callstack 0
 20068                           
 20069 ;; *************** function _canGetDiagnostic *****************
 20070 ;; Defined at:
 20071 ;;		line 438 in file "../../VLCBlib_PIC/can18_ecan.c"
 20072 ;; Parameters:    Size  Location     Type
 20073 ;;  index           1    wreg     unsigned char 
 20074 ;; Auto vars:     Size  Location     Type
 20075 ;;  index           1   57[BANK0 ] unsigned char 
 20076 ;; Return value:  Size  Location     Type
 20077 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20078 ;; Registers used:
 20079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20080 ;; Tracked objects:
 20081 ;;		On entry : 0/0
 20082 ;;		On exit  : 0/0
 20083 ;;		Unchanged: 0/0
 20084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20085 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20087 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20088 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20089 ;;Total ram usage:        4 bytes
 20090 ;; Hardware stack levels used: 1
 20091 ;; Hardware stack levels required when called: 14
 20092 ;; This function calls:
 20093 ;;		_getNumRxBuffersInUse
 20094 ;;		_getNumTxBuffersInUse
 20095 ;; This function is called by:
 20096 ;;		_mnsTRallDiagnosticsCallback
 20097 ;;		_mnsProcessMessage
 20098 ;; This function uses a non-reentrant model
 20099 ;;
 20100                           
 20101                           	psect	text62
 20102   00AEBE                     __ptext62:
 20103                           	callstack 0
 20104   00AEBE                     _canGetDiagnostic:
 20105                           	callstack 13
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;incstack = 0
 20109                           ;canGetDiagnostic@index stored from wreg
 20110   00AEBE  0100               	movlb	0	; () banked
 20111   00AEC0  6F99               	movwf	canGetDiagnostic@index& (0+255),b
 20112                           
 20113                           ;../../VLCBlib_PIC/can18_ecan.c: 439:     if (index > 18) {
 20114   00AEC2  0E12               	movlw	18
 20115   00AEC4  0100               	movlb	0	; () banked
 20116   00AEC6  6599               	cpfsgt	canGetDiagnostic@index& (0+255),b
 20117   00AEC8  D01C               	goto	l21064
 20118                           
 20119                           ; BSR set to: 0
 20120                           ;../../VLCBlib_PIC/can18_ecan.c: 440:         return ((void*)0);
 20121   00AECA  0E00               	movlw	0
 20122   00AECC  6F96               	movwf	?_canGetDiagnostic& (0+255),b
 20123   00AECE  0E00               	movlw	0
 20124   00AED0  6F97               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20125   00AED2  0012               	return	
 20126   00AED4                     l2455:
 20127                           
 20128                           ; BSR set to: 0
 20129                           ;../../VLCBlib_PIC/can18_ecan.c: 444:             canDiagnostics[0x03].asUint = COMSTAT;
 20130   00AED4  CF71 F16D          	movff	3953,_canDiagnostics+6	;volatile
 20131   00AED8  0101               	movlb	1	; () banked
 20132   00AEDA  6B6E               	clrf	(_canDiagnostics+7)& (0+255),b
 20133                           
 20134                           ;../../VLCBlib_PIC/can18_ecan.c: 445:             break;
 20135   00AEDC  D01C               	goto	l21066
 20136   00AEDE                     l21058:
 20137                           
 20138                           ; BSR set to: 0
 20139                           ;../../VLCBlib_PIC/can18_ecan.c: 447:             canDiagnostics[0x04].asUint = getNumTx
      +                          BuffersInUse();
 20140   00AEDE  EC5C  F062         	call	_getNumTxBuffersInUse	;wreg free
 20141   00AEE2  0100               	movlb	0	; () banked
 20142   00AEE4  6F98               	movwf	??_canGetDiagnostic& (0+255),b
 20143   00AEE6  5198               	movf	??_canGetDiagnostic& (0+255),w,b
 20144   00AEE8  0101               	movlb	1	; () banked
 20145   00AEEA  6F6F               	movwf	(_canDiagnostics+8)& (0+255),b
 20146   00AEEC  6B70               	clrf	(_canDiagnostics+9)& (0+255),b
 20147                           
 20148                           ;../../VLCBlib_PIC/can18_ecan.c: 448:             break;
 20149   00AEEE  D013               	goto	l21066
 20150   00AEF0                     l21060:
 20151                           
 20152                           ; BSR set to: 0
 20153                           ;../../VLCBlib_PIC/can18_ecan.c: 450:             canDiagnostics[0x07].asUint = getNumRx
      +                          BuffersInUse();
 20154   00AEF0  EC16  F05E         	call	_getNumRxBuffersInUse	;wreg free
 20155   00AEF4  0100               	movlb	0	; () banked
 20156   00AEF6  6F98               	movwf	??_canGetDiagnostic& (0+255),b
 20157   00AEF8  5198               	movf	??_canGetDiagnostic& (0+255),w,b
 20158   00AEFA  0101               	movlb	1	; () banked
 20159   00AEFC  6F75               	movwf	(_canDiagnostics+14)& (0+255),b
 20160   00AEFE  6B76               	clrf	(_canDiagnostics+15)& (0+255),b
 20161                           
 20162                           ;../../VLCBlib_PIC/can18_ecan.c: 451:             break;
 20163   00AF00  D00A               	goto	l21066
 20164   00AF02                     l21064:
 20165                           
 20166                           ; BSR set to: 0
 20167   00AF02  5199               	movf	canGetDiagnostic@index& (0+255),w,b
 20168                           
 20169                           ; Switch size 1, requested type "simple"
 20170                           ; Number of cases is 3, Range of values is 3 to 7
 20171                           ; switch strategies available:
 20172                           ; Name         Instructions Cycles
 20173                           ; simple_byte           10     6 (average)
 20174                           ;	Chosen strategy is simple_byte
 20175   00AF04  0A03               	xorlw	3	; case 3
 20176   00AF06  B4D8               	btfsc	status,2,c
 20177   00AF08  D7E5               	goto	l2455
 20178   00AF0A  0A07               	xorlw	7	; case 4
 20179   00AF0C  B4D8               	btfsc	status,2,c
 20180   00AF0E  D7E7               	goto	l21058
 20181   00AF10  0A03               	xorlw	3	; case 7
 20182   00AF12  B4D8               	btfsc	status,2,c
 20183   00AF14  D7ED               	goto	l21060
 20184   00AF16                     l21066:
 20185                           
 20186                           ;../../VLCBlib_PIC/can18_ecan.c: 453:     return &(canDiagnostics[index]);
 20187   00AF16  0100               	movlb	0	; () banked
 20188   00AF18  5199               	movf	canGetDiagnostic@index& (0+255),w,b
 20189   00AF1A  0D02               	mullw	2
 20190   00AF1C  0E67               	movlw	low _canDiagnostics
 20191   00AF1E  24F3               	addwf	243,w,c
 20192   00AF20  6F96               	movwf	?_canGetDiagnostic& (0+255),b
 20193   00AF22  0E01               	movlw	high _canDiagnostics
 20194   00AF24  20F4               	addwfc	prodh,w,c
 20195   00AF26  6F97               	movwf	(?_canGetDiagnostic+1)& (0+255),b
 20196                           
 20197                           ; BSR set to: 0
 20198   00AF28  0012               	return		;funcret
 20199   00AF2A                     __end_of_canGetDiagnostic:
 20200                           	callstack 0
 20201                           
 20202 ;; *************** function _nvGetDiagnostic *****************
 20203 ;; Defined at:
 20204 ;;		line 150 in file "../../VLCBlib_PIC/nv.c"
 20205 ;; Parameters:    Size  Location     Type
 20206 ;;  index           1    wreg     unsigned char 
 20207 ;; Auto vars:     Size  Location     Type
 20208 ;;  index           1   56[BANK0 ] unsigned char 
 20209 ;; Return value:  Size  Location     Type
 20210 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20211 ;; Registers used:
 20212 ;;		wreg, status,2, status,0, prodl, prodh
 20213 ;; Tracked objects:
 20214 ;;		On entry : 0/0
 20215 ;;		On exit  : 0/0
 20216 ;;		Unchanged: 0/0
 20217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20219 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20221 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20222 ;;Total ram usage:        3 bytes
 20223 ;; Hardware stack levels used: 1
 20224 ;; Hardware stack levels required when called: 12
 20225 ;; This function calls:
 20226 ;;		Nothing
 20227 ;; This function is called by:
 20228 ;;		_mnsTRallDiagnosticsCallback
 20229 ;;		_mnsProcessMessage
 20230 ;; This function uses a non-reentrant model
 20231 ;;
 20232                           
 20233                           	psect	text63
 20234   00C0BC                     __ptext63:
 20235                           	callstack 0
 20236   00C0BC                     _nvGetDiagnostic:
 20237                           	callstack 15
 20238                           
 20239                           ; BSR set to: 0
 20240                           ;incstack = 0
 20241                           ;nvGetDiagnostic@index stored from wreg
 20242   00C0BC  0100               	movlb	0	; () banked
 20243   00C0BE  6F98               	movwf	nvGetDiagnostic@index& (0+255),b
 20244                           
 20245                           ;../../VLCBlib_PIC/nv.c: 151:     if (index > 2) {
 20246   00C0C0  0E02               	movlw	2
 20247   00C0C2  0100               	movlb	0	; () banked
 20248   00C0C4  6598               	cpfsgt	nvGetDiagnostic@index& (0+255),b
 20249   00C0C6  D005               	goto	l20972
 20250                           
 20251                           ; BSR set to: 0
 20252                           ;../../VLCBlib_PIC/nv.c: 152:         return ((void*)0);
 20253   00C0C8  0E00               	movlw	0
 20254   00C0CA  6F96               	movwf	?_nvGetDiagnostic& (0+255),b
 20255   00C0CC  0E00               	movlw	0
 20256   00C0CE  6F97               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20257   00C0D0  0012               	return	
 20258   00C0D2                     l20972:
 20259                           
 20260                           ; BSR set to: 0
 20261                           ;../../VLCBlib_PIC/nv.c: 154:     return &(nvDiagnostics[index]);
 20262   00C0D2  5198               	movf	nvGetDiagnostic@index& (0+255),w,b
 20263   00C0D4  0D02               	mullw	2
 20264   00C0D6  0EA4               	movlw	low _nvDiagnostics
 20265   00C0D8  24F3               	addwf	243,w,c
 20266   00C0DA  6F96               	movwf	?_nvGetDiagnostic& (0+255),b
 20267   00C0DC  0E01               	movlw	high _nvDiagnostics
 20268   00C0DE  20F4               	addwfc	prodh,w,c
 20269   00C0E0  6F97               	movwf	(?_nvGetDiagnostic+1)& (0+255),b
 20270                           
 20271                           ; BSR set to: 0
 20272   00C0E2  0012               	return		;funcret
 20273   00C0E4                     __end_of_nvGetDiagnostic:
 20274                           	callstack 0
 20275                           
 20276 ;; *************** function _mnsGetDiagnostic *****************
 20277 ;; Defined at:
 20278 ;;		line 802 in file "../../VLCBlib_PIC/mns.c"
 20279 ;; Parameters:    Size  Location     Type
 20280 ;;  index           1    wreg     unsigned char 
 20281 ;; Auto vars:     Size  Location     Type
 20282 ;;  index           1   56[BANK0 ] unsigned char 
 20283 ;; Return value:  Size  Location     Type
 20284 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20285 ;; Registers used:
 20286 ;;		wreg, status,2, status,0, prodl, prodh
 20287 ;; Tracked objects:
 20288 ;;		On entry : 0/0
 20289 ;;		On exit  : 0/0
 20290 ;;		Unchanged: 0/0
 20291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20293 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20295 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20296 ;;Total ram usage:        3 bytes
 20297 ;; Hardware stack levels used: 1
 20298 ;; Hardware stack levels required when called: 12
 20299 ;; This function calls:
 20300 ;;		Nothing
 20301 ;; This function is called by:
 20302 ;;		_mnsTRallDiagnosticsCallback
 20303 ;;		_mnsProcessMessage
 20304 ;; This function uses a non-reentrant model
 20305 ;;
 20306                           
 20307                           	psect	text64
 20308   00C0E4                     __ptext64:
 20309                           	callstack 0
 20310   00C0E4                     _mnsGetDiagnostic:
 20311                           	callstack 15
 20312                           
 20313                           ; BSR set to: 0
 20314                           ;incstack = 0
 20315                           ;mnsGetDiagnostic@index stored from wreg
 20316   00C0E4  0100               	movlb	0	; () banked
 20317   00C0E6  6F98               	movwf	mnsGetDiagnostic@index& (0+255),b
 20318                           
 20319                           ;../../VLCBlib_PIC/mns.c: 803:     if (index > 6) {
 20320   00C0E8  0E06               	movlw	6
 20321   00C0EA  0100               	movlb	0	; () banked
 20322   00C0EC  6598               	cpfsgt	mnsGetDiagnostic@index& (0+255),b
 20323   00C0EE  D005               	goto	l20910
 20324                           
 20325                           ; BSR set to: 0
 20326                           ;../../VLCBlib_PIC/mns.c: 804:         return ((void*)0);
 20327   00C0F0  0E00               	movlw	0
 20328   00C0F2  6F96               	movwf	?_mnsGetDiagnostic& (0+255),b
 20329   00C0F4  0E00               	movlw	0
 20330   00C0F6  6F97               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20331   00C0F8  0012               	return	
 20332   00C0FA                     l20910:
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;../../VLCBlib_PIC/mns.c: 806:     return &(mnsDiagnostics[index]);
 20336   00C0FA  5198               	movf	mnsGetDiagnostic@index& (0+255),w,b
 20337   00C0FC  0D02               	mullw	2
 20338   00C0FE  0E8D               	movlw	low _mnsDiagnostics
 20339   00C100  24F3               	addwf	243,w,c
 20340   00C102  6F96               	movwf	?_mnsGetDiagnostic& (0+255),b
 20341   00C104  0E01               	movlw	high _mnsDiagnostics
 20342   00C106  20F4               	addwfc	prodh,w,c
 20343   00C108  6F97               	movwf	(?_mnsGetDiagnostic+1)& (0+255),b
 20344                           
 20345                           ; BSR set to: 0
 20346   00C10A  0012               	return		;funcret
 20347   00C10C                     __end_of_mnsGetDiagnostic:
 20348                           	callstack 0
 20349                           
 20350 ;; *************** function _ackGetDiagnostic *****************
 20351 ;; Defined at:
 20352 ;;		line 194 in file "../../VLCBlib_PIC/event_acknowledge.c"
 20353 ;; Parameters:    Size  Location     Type
 20354 ;;  index           1    wreg     unsigned char 
 20355 ;; Auto vars:     Size  Location     Type
 20356 ;;  index           1   56[BANK0 ] unsigned char 
 20357 ;; Return value:  Size  Location     Type
 20358 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20359 ;; Registers used:
 20360 ;;		wreg, status,2, status,0, prodl, prodh
 20361 ;; Tracked objects:
 20362 ;;		On entry : 0/0
 20363 ;;		On exit  : 0/0
 20364 ;;		Unchanged: 0/0
 20365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20369 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20370 ;;Total ram usage:        3 bytes
 20371 ;; Hardware stack levels used: 1
 20372 ;; Hardware stack levels required when called: 12
 20373 ;; This function calls:
 20374 ;;		Nothing
 20375 ;; This function is called by:
 20376 ;;		_mnsTRallDiagnosticsCallback
 20377 ;;		_mnsProcessMessage
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           
 20381                           	psect	text65
 20382   00C10C                     __ptext65:
 20383                           	callstack 0
 20384   00C10C                     _ackGetDiagnostic:
 20385                           	callstack 15
 20386                           
 20387                           ; BSR set to: 0
 20388                           ;incstack = 0
 20389                           ;ackGetDiagnostic@index stored from wreg
 20390   00C10C  0100               	movlb	0	; () banked
 20391   00C10E  6F98               	movwf	ackGetDiagnostic@index& (0+255),b
 20392                           
 20393                           ;../../VLCBlib_PIC/event_acknowledge.c: 195:     if (index > 1) {
 20394   00C110  0E01               	movlw	1
 20395   00C112  0100               	movlb	0	; () banked
 20396   00C114  6598               	cpfsgt	ackGetDiagnostic@index& (0+255),b
 20397   00C116  D005               	goto	l20790
 20398                           
 20399                           ; BSR set to: 0
 20400                           ;../../VLCBlib_PIC/event_acknowledge.c: 196:         return ((void*)0);
 20401   00C118  0E00               	movlw	0
 20402   00C11A  6F96               	movwf	?_ackGetDiagnostic& (0+255),b
 20403   00C11C  0E00               	movlw	0
 20404   00C11E  6F97               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20405   00C120  0012               	return	
 20406   00C122                     l20790:
 20407                           
 20408                           ; BSR set to: 0
 20409                           ;../../VLCBlib_PIC/event_acknowledge.c: 198:     return &(ackDiagnostics[index]);
 20410   00C122  5198               	movf	ackGetDiagnostic@index& (0+255),w,b
 20411   00C124  0D02               	mullw	2
 20412   00C126  0EB2               	movlw	low _ackDiagnostics
 20413   00C128  24F3               	addwf	243,w,c
 20414   00C12A  6F96               	movwf	?_ackGetDiagnostic& (0+255),b
 20415   00C12C  0E01               	movlw	high _ackDiagnostics
 20416   00C12E  20F4               	addwfc	prodh,w,c
 20417   00C130  6F97               	movwf	(?_ackGetDiagnostic+1)& (0+255),b
 20418                           
 20419                           ; BSR set to: 0
 20420   00C132  0012               	return		;funcret
 20421   00C134                     __end_of_ackGetDiagnostic:
 20422                           	callstack 0
 20423                           
 20424 ;; *************** function _consumer2QGetDiagnostic *****************
 20425 ;; Defined at:
 20426 ;;		line 350 in file "../event_consumerDualActionQueue.c"
 20427 ;; Parameters:    Size  Location     Type
 20428 ;;  index           1    wreg     unsigned char 
 20429 ;; Auto vars:     Size  Location     Type
 20430 ;;  index           1   56[BANK0 ] unsigned char 
 20431 ;; Return value:  Size  Location     Type
 20432 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20433 ;; Registers used:
 20434 ;;		wreg, status,2, status,0, prodl, prodh
 20435 ;; Tracked objects:
 20436 ;;		On entry : 0/0
 20437 ;;		On exit  : 0/0
 20438 ;;		Unchanged: 0/0
 20439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20440 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20443 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20444 ;;Total ram usage:        3 bytes
 20445 ;; Hardware stack levels used: 1
 20446 ;; Hardware stack levels required when called: 12
 20447 ;; This function calls:
 20448 ;;		Nothing
 20449 ;; This function is called by:
 20450 ;;		_mnsTRallDiagnosticsCallback
 20451 ;;		_mnsProcessMessage
 20452 ;; This function uses a non-reentrant model
 20453 ;;
 20454                           
 20455                           	psect	text66
 20456   00C134                     __ptext66:
 20457                           	callstack 0
 20458   00C134                     _consumer2QGetDiagnostic:
 20459                           	callstack 15
 20460                           
 20461                           ; BSR set to: 0
 20462                           ;incstack = 0
 20463                           ;consumer2QGetDiagnostic@index stored from wreg
 20464   00C134  0100               	movlb	0	; () banked
 20465   00C136  6F98               	movwf	consumer2QGetDiagnostic@index& (0+255),b
 20466                           
 20467                           ;../event_consumerDualActionQueue.c: 351:     if (index > 1) {
 20468   00C138  0E01               	movlw	1
 20469   00C13A  0100               	movlb	0	; () banked
 20470   00C13C  6598               	cpfsgt	consumer2QGetDiagnostic@index& (0+255),b
 20471   00C13E  D005               	goto	l20436
 20472                           
 20473                           ; BSR set to: 0
 20474                           ;../event_consumerDualActionQueue.c: 352:         return ((void*)0);
 20475   00C140  0E00               	movlw	0
 20476   00C142  6F96               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20477   00C144  0E00               	movlw	0
 20478   00C146  6F97               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20479   00C148  0012               	return	
 20480   00C14A                     l20436:
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;../event_consumerDualActionQueue.c: 354:     return &(consumer2QDiagnostics[index]);
 20484   00C14A  5198               	movf	consumer2QGetDiagnostic@index& (0+255),w,b
 20485   00C14C  0D02               	mullw	2
 20486   00C14E  0EB6               	movlw	low _consumer2QDiagnostics
 20487   00C150  24F3               	addwf	243,w,c
 20488   00C152  6F96               	movwf	?_consumer2QGetDiagnostic& (0+255),b
 20489   00C154  0E01               	movlw	high _consumer2QDiagnostics
 20490   00C156  20F4               	addwfc	prodh,w,c
 20491   00C158  6F97               	movwf	(?_consumer2QGetDiagnostic+1)& (0+255),b
 20492                           
 20493                           ; BSR set to: 0
 20494   00C15A  0012               	return		;funcret
 20495   00C15C                     __end_of_consumer2QGetDiagnostic:
 20496                           	callstack 0
 20497                           
 20498 ;; *************** function _teachGetDiagnostic *****************
 20499 ;; Defined at:
 20500 ;;		line 543 in file "../../VLCBlib_PIC/event_teach_large.c"
 20501 ;; Parameters:    Size  Location     Type
 20502 ;;  index           1    wreg     unsigned char 
 20503 ;; Auto vars:     Size  Location     Type
 20504 ;;  index           1   56[BANK0 ] unsigned char 
 20505 ;; Return value:  Size  Location     Type
 20506 ;;                  2   54[BANK0 ] PTR struct DiagnosticVal
 20507 ;; Registers used:
 20508 ;;		wreg, status,2, status,0, prodl, prodh
 20509 ;; Tracked objects:
 20510 ;;		On entry : 0/0
 20511 ;;		On exit  : 0/0
 20512 ;;		Unchanged: 0/0
 20513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20517 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20518 ;;Total ram usage:        3 bytes
 20519 ;; Hardware stack levels used: 1
 20520 ;; Hardware stack levels required when called: 12
 20521 ;; This function calls:
 20522 ;;		Nothing
 20523 ;; This function is called by:
 20524 ;;		_mnsTRallDiagnosticsCallback
 20525 ;;		_mnsProcessMessage
 20526 ;; This function uses a non-reentrant model
 20527 ;;
 20528                           
 20529                           	psect	text67
 20530   00C15C                     __ptext67:
 20531                           	callstack 0
 20532   00C15C                     _teachGetDiagnostic:
 20533                           	callstack 15
 20534                           
 20535                           ; BSR set to: 0
 20536                           ;incstack = 0
 20537                           ;teachGetDiagnostic@index stored from wreg
 20538   00C15C  0100               	movlb	0	; () banked
 20539   00C15E  6F98               	movwf	teachGetDiagnostic@index& (0+255),b
 20540                           
 20541                           ;../../VLCBlib_PIC/event_teach_large.c: 544:     if (index > 1) {
 20542   00C160  0E01               	movlw	1
 20543   00C162  0100               	movlb	0	; () banked
 20544   00C164  6598               	cpfsgt	teachGetDiagnostic@index& (0+255),b
 20545   00C166  D005               	goto	l21098
 20546                           
 20547                           ; BSR set to: 0
 20548                           ;../../VLCBlib_PIC/event_teach_large.c: 545:         return ((void*)0);
 20549   00C168  0E00               	movlw	0
 20550   00C16A  6F96               	movwf	?_teachGetDiagnostic& (0+255),b
 20551   00C16C  0E00               	movlw	0
 20552   00C16E  6F97               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20553   00C170  0012               	return	
 20554   00C172                     l21098:
 20555                           
 20556                           ; BSR set to: 0
 20557                           ;../../VLCBlib_PIC/event_teach_large.c: 547:     return &(teachDiagnostics[index]);
 20558   00C172  5198               	movf	teachGetDiagnostic@index& (0+255),w,b
 20559   00C174  0D02               	mullw	2
 20560   00C176  0EAE               	movlw	low _teachDiagnostics
 20561   00C178  24F3               	addwf	243,w,c
 20562   00C17A  6F96               	movwf	?_teachGetDiagnostic& (0+255),b
 20563   00C17C  0E01               	movlw	high _teachDiagnostics
 20564   00C17E  20F4               	addwfc	prodh,w,c
 20565   00C180  6F97               	movwf	(?_teachGetDiagnostic+1)& (0+255),b
 20566                           
 20567                           ; BSR set to: 0
 20568   00C182  0012               	return		;funcret
 20569   00C184                     __end_of_teachGetDiagnostic:
 20570                           	callstack 0
 20571                           
 20572 ;; *************** function _sendMessage6 *****************
 20573 ;; Defined at:
 20574 ;;		line 1194 in file "../../VLCBlib_PIC/vlcb.c"
 20575 ;; Parameters:    Size  Location     Type
 20576 ;;  opc             1    wreg     enum E12392
 20577 ;;  data1           1    8[BANK1 ] unsigned char 
 20578 ;;  data2           1    9[BANK1 ] unsigned char 
 20579 ;;  data3           1   10[BANK1 ] unsigned char 
 20580 ;;  data4           1   11[BANK1 ] unsigned char 
 20581 ;;  data5           1   12[BANK1 ] unsigned char 
 20582 ;;  data6           1   13[BANK1 ] unsigned char 
 20583 ;; Auto vars:     Size  Location     Type
 20584 ;;  opc             1   70[BANK0 ] enum E12392
 20585 ;; Return value:  Size  Location     Type
 20586 ;;                  1    wreg      void 
 20587 ;; Registers used:
 20588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20589 ;; Tracked objects:
 20590 ;;		On entry : 0/0
 20591 ;;		On exit  : 0/0
 20592 ;;		Unchanged: 0/0
 20593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20594 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20595 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20597 ;;      Totals:         0       1       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20598 ;;Total ram usage:        7 bytes
 20599 ;; Hardware stack levels used: 1
 20600 ;; Hardware stack levels required when called: 16
 20601 ;; This function calls:
 20602 ;;		_sendMessage
 20603 ;; This function is called by:
 20604 ;;		_mnsProcessMessage
 20605 ;;		_mnsTRallDiagnosticsCallback
 20606 ;;		_doReqev
 20607 ;;		_reqevCallback
 20608 ;; This function uses a non-reentrant model
 20609 ;;
 20610                           
 20611                           	psect	text68
 20612   00BE40                     __ptext68:
 20613                           	callstack 0
 20614   00BE40                     _sendMessage6:
 20615                           	callstack 11
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;incstack = 0
 20619                           ;sendMessage6@opc stored from wreg
 20620   00BE40  0100               	movlb	0	; () banked
 20621   00BE42  6FA6               	movwf	sendMessage6@opc& (0+255),b
 20622                           
 20623                           ;../../VLCBlib_PIC/vlcb.c: 1195:     sendMessage(opc, 7, data1, data2, data3, data4, dat
      +                          a5, data6,0);
 20624   00BE44  0E07               	movlw	7
 20625   00BE46  0101               	movlb	1	; () banked
 20626   00BE48  6FBA               	movwf	sendMessage@len& (0+255),b
 20627   00BE4A  C1C2  F1BB         	movff	sendMessage6@data1,sendMessage@data1
 20628   00BE4E  C1C3  F1BC         	movff	sendMessage6@data2,sendMessage@data2
 20629   00BE52  C1C4  F1BD         	movff	sendMessage6@data3,sendMessage@data3
 20630   00BE56  C1C5  F1BE         	movff	sendMessage6@data4,sendMessage@data4
 20631   00BE5A  C1C6  F1BF         	movff	sendMessage6@data5,sendMessage@data5
 20632   00BE5E  C1C7  F1C0         	movff	sendMessage6@data6,sendMessage@data6
 20633   00BE62  0E00               	movlw	0
 20634   00BE64  6FC1               	movwf	sendMessage@data7& (0+255),b
 20635   00BE66  0100               	movlb	0	; () banked
 20636   00BE68  51A6               	movf	sendMessage6@opc& (0+255),w,b
 20637   00BE6A  EC2A  F054         	call	_sendMessage
 20638   00BE6E  0012               	return		;funcret
 20639   00BE70                     __end_of_sendMessage6:
 20640                           	callstack 0
 20641                           
 20642 ;; *************** function _sendMessage3 *****************
 20643 ;; Defined at:
 20644 ;;		line 1155 in file "../../VLCBlib_PIC/vlcb.c"
 20645 ;; Parameters:    Size  Location     Type
 20646 ;;  opc             1    wreg     enum E12392
 20647 ;;  data1           1   70[BANK0 ] unsigned char 
 20648 ;;  data2           1   71[BANK0 ] unsigned char 
 20649 ;;  data3           1   72[BANK0 ] unsigned char 
 20650 ;; Auto vars:     Size  Location     Type
 20651 ;;  opc             1    8[BANK1 ] enum E12392
 20652 ;; Return value:  Size  Location     Type
 20653 ;;                  1    wreg      void 
 20654 ;; Registers used:
 20655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 20656 ;; Tracked objects:
 20657 ;;		On entry : 0/0
 20658 ;;		On exit  : 0/0
 20659 ;;		Unchanged: 0/0
 20660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20661 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20662 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20664 ;;      Totals:         0       3       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20665 ;;Total ram usage:        4 bytes
 20666 ;; Hardware stack levels used: 1
 20667 ;; Hardware stack levels required when called: 16
 20668 ;; This function calls:
 20669 ;;		_sendMessage
 20670 ;; This function is called by:
 20671 ;;		_mnsProcessMessage
 20672 ;;		_nvProcessMessage
 20673 ;;		_teachProcessMessage
 20674 ;;		_doNnevn
 20675 ;;		_doNenrd
 20676 ;;		_doRqevn
 20677 ;;		_doEvlrn
 20678 ;;		_doReval
 20679 ;;		_doEvuln
 20680 ;;		_doReqev
 20681 ;;		_producerProcessMessage
 20682 ;; This function uses a non-reentrant model
 20683 ;;
 20684                           
 20685                           	psect	text69
 20686   00BF8C                     __ptext69:
 20687                           	callstack 0
 20688   00BF8C                     _sendMessage3:
 20689                           	callstack 12
 20690                           
 20691                           ;incstack = 0
 20692                           ;sendMessage3@opc stored from wreg
 20693   00BF8C  0101               	movlb	1	; () banked
 20694   00BF8E  6FC2               	movwf	sendMessage3@opc& (0+255),b
 20695                           
 20696                           ;../../VLCBlib_PIC/vlcb.c: 1156:     sendMessage(opc, 4, data1, data2, data3, 0,0,0,0);
 20697   00BF90  0E04               	movlw	4
 20698   00BF92  0101               	movlb	1	; () banked
 20699   00BF94  6FBA               	movwf	sendMessage@len& (0+255),b
 20700   00BF96  C0A6  F1BB         	movff	sendMessage3@data1,sendMessage@data1
 20701   00BF9A  C0A7  F1BC         	movff	sendMessage3@data2,sendMessage@data2
 20702   00BF9E  C0A8  F1BD         	movff	sendMessage3@data3,sendMessage@data3
 20703   00BFA2  0E00               	movlw	0
 20704   00BFA4  6FBE               	movwf	sendMessage@data4& (0+255),b
 20705   00BFA6  0E00               	movlw	0
 20706   00BFA8  6FBF               	movwf	sendMessage@data5& (0+255),b
 20707   00BFAA  0E00               	movlw	0
 20708   00BFAC  6FC0               	movwf	sendMessage@data6& (0+255),b
 20709   00BFAE  0E00               	movlw	0
 20710   00BFB0  6FC1               	movwf	sendMessage@data7& (0+255),b
 20711   00BFB2  51C2               	movf	sendMessage3@opc& (0+255),w,b
 20712   00BFB4  EC2A  F054         	call	_sendMessage
 20713   00BFB8  0012               	return		;funcret
 20714   00BFBA                     __end_of_sendMessage3:
 20715                           	callstack 0
 20716                           
 20717 ;; *************** function _getParameter *****************
 20718 ;; Defined at:
 20719 ;;		line 833 in file "../../VLCBlib_PIC/mns.c"
 20720 ;; Parameters:    Size  Location     Type
 20721 ;;  idx             1    wreg     unsigned char 
 20722 ;; Auto vars:     Size  Location     Type
 20723 ;;  idx             1   50[BANK0 ] unsigned char 
 20724 ;;  i               1    0        unsigned char 
 20725 ;; Return value:  Size  Location     Type
 20726 ;;                  1    wreg      unsigned char 
 20727 ;; Registers used:
 20728 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20729 ;; Tracked objects:
 20730 ;;		On entry : 0/0
 20731 ;;		On exit  : 0/0
 20732 ;;		Unchanged: 0/0
 20733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20737 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20738 ;;Total ram usage:        1 bytes
 20739 ;; Hardware stack levels used: 1
 20740 ;; Hardware stack levels required when called: 14
 20741 ;; This function calls:
 20742 ;;		_getParameterFlags
 20743 ;;		_have
 20744 ;; This function is called by:
 20745 ;;		_mnsProcessMessage
 20746 ;;		_mnsTRrqnpnCallback
 20747 ;; This function uses a non-reentrant model
 20748 ;;
 20749                           
 20750                           	psect	text70
 20751   00861E                     __ptext70:
 20752                           	callstack 0
 20753   00861E                     _getParameter:
 20754                           	callstack 13
 20755                           
 20756                           ;incstack = 0
 20757                           ;getParameter@idx stored from wreg
 20758   00861E  0100               	movlb	0	; () banked
 20759   008620  6F92               	movwf	getParameter@idx& (0+255),b
 20760                           
 20761                           ;../../VLCBlib_PIC/mns.c: 834:     uint8_t i;;../../VLCBlib_PIC/mns.c: 835:     switch(i
      +                          dx) {
 20762   008622  D033               	goto	l20900
 20763   008624                     l20812:
 20764                           
 20765                           ; BSR set to: 0
 20766                           ;../../VLCBlib_PIC/mns.c: 837:         return 20;
 20767   008624  0E14               	movlw	20
 20768   008626  0012               	return	
 20769   008628                     l20816:
 20770                           
 20771                           ; BSR set to: 0
 20772                           ;../../VLCBlib_PIC/mns.c: 839:         return MANU_MERG;
 20773   008628  0EA5               	movlw	165
 20774   00862A  0012               	return	
 20775   00862C                     l20820:
 20776                           
 20777                           ; BSR set to: 0
 20778                           ;../../VLCBlib_PIC/mns.c: 841:         return 'a';
 20779   00862C  0E61               	movlw	97
 20780   00862E  0012               	return	
 20781   008630                     l20824:
 20782                           
 20783                           ; BSR set to: 0
 20784                           ;../../VLCBlib_PIC/mns.c: 843:         return MTYP_CANMIO;
 20785   008630  0E20               	movlw	32
 20786   008632  0012               	return	
 20787   008634                     l20828:
 20788                           
 20789                           ; BSR set to: 0
 20790                           ;../../VLCBlib_PIC/mns.c: 845:         return 255;
 20791   008634  0EFF               	movlw	255
 20792   008636  0012               	return	
 20793   008638                     l20836:
 20794                           
 20795                           ; BSR set to: 0
 20796                           ;../../VLCBlib_PIC/mns.c: 849:         return (15+7*16);
 20797   008638  0E7F               	movlw	127
 20798   00863A  0012               	return	
 20799   00863C                     l20840:
 20800                           
 20801                           ; BSR set to: 0
 20802                           ;../../VLCBlib_PIC/mns.c: 851:         return 4;
 20803   00863C  0E04               	movlw	4
 20804   00863E  0012               	return	
 20805   008640                     l20844:
 20806                           
 20807                           ; BSR set to: 0
 20808                           ;../../VLCBlib_PIC/mns.c: 853:         return getParameterFlags();
 20809   008640  EC3F  F05A         	call	_getParameterFlags	;wreg free
 20810   008644  0012               	return	
 20811   008646                     l20848:
 20812                           
 20813                           ; BSR set to: 0
 20814                           ;../../VLCBlib_PIC/mns.c: 855:         return P18F26K80;
 20815   008646  0E0F               	movlw	15
 20816   008648  0012               	return	
 20817   00864A                     l20852:
 20818                           
 20819                           ; BSR set to: 0
 20820                           ;../../VLCBlib_PIC/mns.c: 857:         if (have(SERVICE_ID_CAN)) {
 20821   00864A  0E03               	movlw	3
 20822   00864C  EC7F  F056         	call	_have
 20823   008650  0900               	iorlw	0
 20824   008652  B4D8               	btfsc	status,2,c
 20825   008654  D002               	goto	l20858
 20826   008656                     u21490:
 20827                           
 20828                           ;../../VLCBlib_PIC/mns.c: 858:             return PB_CAN;
 20829   008656  0E01               	movlw	1
 20830   008658  0012               	return	
 20831   00865A                     l20858:
 20832                           
 20833                           ;../../VLCBlib_PIC/mns.c: 860:         return 0;
 20834   00865A  0E00               	movlw	0
 20835   00865C  0012               	return	
 20836   00865E                     l20866:
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;../../VLCBlib_PIC/mns.c: 864:         return 0x08;
 20840   00865E  0E08               	movlw	8
 20841   008660  0012               	return	
 20842   008662                     l20878:
 20843                           
 20844                           ; BSR set to: 0
 20845                           ;../../VLCBlib_PIC/mns.c: 876:         return *(const uint8_t*)0x3FFFFE;
 20846   008662  0EFE               	movlw	254
 20847   008664  6EF6               	movwf	tblptrl,c
 20848   008666                     	if	1	;There is more than 1 active tblptr byte
 20849   008666  0EFF               	movlw	255
 20850   008668  6EF7               	movwf	tblptrh,c
 20851   00866A                     	endif
 20852   00866A                     	if	1	;There are 3 active tblptr bytes
 20853   00866A  0E3F               	movlw	63
 20854   00866C  6EF8               	movwf	tblptru,c
 20855   00866E                     	endif
 20856   00866E  0008               	tblrd		*
 20857   008670  50F5               	movf	tablat,w,c
 20858   008672  0012               	return	
 20859   008674                     l20882:
 20860                           
 20861                           ; BSR set to: 0
 20862                           ;../../VLCBlib_PIC/mns.c: 878:         return *(const uint8_t*)0x3FFFFF;
 20863   008674  0EFF               	movlw	255
 20864   008676  6EF6               	movwf	tblptrl,c
 20865   008678                     	if	1	;There is more than 1 active tblptr byte
 20866   008678  0EFF               	movlw	255
 20867   00867A  6EF7               	movwf	tblptrh,c
 20868   00867C                     	endif
 20869   00867C                     	if	1	;There are 3 active tblptr bytes
 20870   00867C  0E3F               	movlw	63
 20871   00867E  6EF8               	movwf	tblptru,c
 20872   008680                     	endif
 20873   008680  0008               	tblrd		*
 20874   008682  50F5               	movf	tablat,w,c
 20875   008684  0012               	return	
 20876   008686                     l20890:
 20877                           
 20878                           ; BSR set to: 0
 20879                           ;../../VLCBlib_PIC/mns.c: 882:         return 3;
 20880   008686  0E03               	movlw	3
 20881   008688  0012               	return	
 20882   00868A                     l20900:
 20883   00868A  0100               	movlb	0	; () banked
 20884   00868C  5192               	movf	getParameter@idx& (0+255),w,b
 20885                           
 20886                           ; Switch size 1, requested type "simple"
 20887                           ; Number of cases is 19, Range of values is 0 to 20
 20888                           ; switch strategies available:
 20889                           ; Name         Instructions Cycles
 20890                           ; simple_byte           58    30 (average)
 20891                           ;	Chosen strategy is simple_byte
 20892   00868E  0A00               	xorlw	0	; case 0
 20893   008690  B4D8               	btfsc	status,2,c
 20894   008692  D7C8               	goto	l20812
 20895   008694  0A01               	xorlw	1	; case 1
 20896   008696  B4D8               	btfsc	status,2,c
 20897   008698  D7C7               	goto	l20816
 20898   00869A  0A03               	xorlw	3	; case 2
 20899   00869C  B4D8               	btfsc	status,2,c
 20900   00869E  D7C6               	goto	l20820
 20901   0086A0  0A01               	xorlw	1	; case 3
 20902   0086A2  B4D8               	btfsc	status,2,c
 20903   0086A4  D7C5               	goto	l20824
 20904   0086A6  0A07               	xorlw	7	; case 4
 20905   0086A8  B4D8               	btfsc	status,2,c
 20906   0086AA  D7C4               	goto	l20828
 20907   0086AC  0A01               	xorlw	1	; case 5
 20908   0086AE  B4D8               	btfsc	status,2,c
 20909   0086B0  D7B9               	goto	l20812
 20910   0086B2  0A03               	xorlw	3	; case 6
 20911   0086B4  B4D8               	btfsc	status,2,c
 20912   0086B6  D7C0               	goto	l20836
 20913   0086B8  0A01               	xorlw	1	; case 7
 20914   0086BA  B4D8               	btfsc	status,2,c
 20915   0086BC  D7BF               	goto	l20840
 20916   0086BE  0A0F               	xorlw	15	; case 8
 20917   0086C0  B4D8               	btfsc	status,2,c
 20918   0086C2  D7BE               	goto	l20844
 20919   0086C4  0A01               	xorlw	1	; case 9
 20920   0086C6  B4D8               	btfsc	status,2,c
 20921   0086C8  D7BE               	goto	l20848
 20922   0086CA  0A03               	xorlw	3	; case 10
 20923   0086CC  B4D8               	btfsc	status,2,c
 20924   0086CE  D7BD               	goto	l20852
 20925   0086D0  0A01               	xorlw	1	; case 11
 20926   0086D2  B4D8               	btfsc	status,2,c
 20927   0086D4  D7C2               	goto	l20858
 20928   0086D6  0A07               	xorlw	7	; case 12
 20929   0086D8  B4D8               	btfsc	status,2,c
 20930   0086DA  D7C1               	goto	l20866
 20931   0086DC  0A01               	xorlw	1	; case 13
 20932   0086DE  B4D8               	btfsc	status,2,c
 20933   0086E0  D7BC               	goto	l20858
 20934   0086E2  0A03               	xorlw	3	; case 14
 20935   0086E4  B4D8               	btfsc	status,2,c
 20936   0086E6  D7B9               	goto	l20858
 20937   0086E8  0A1F               	xorlw	31	; case 17
 20938   0086EA  B4D8               	btfsc	status,2,c
 20939   0086EC  D7BA               	goto	l20878
 20940   0086EE  0A03               	xorlw	3	; case 18
 20941   0086F0  B4D8               	btfsc	status,2,c
 20942   0086F2  D7C0               	goto	l20882
 20943   0086F4  0A01               	xorlw	1	; case 19
 20944   0086F6  B4D8               	btfsc	status,2,c
 20945   0086F8  D7AE               	goto	u21490
 20946   0086FA  0A07               	xorlw	7	; case 20
 20947   0086FC  B4D8               	btfsc	status,2,c
 20948   0086FE  D7C3               	goto	l20890
 20949   008700  D7AC               	goto	l20858
 20950   008702                     __end_of_getParameter:
 20951                           	callstack 0
 20952                           
 20953 ;; *************** function _getParameterFlags *****************
 20954 ;; Defined at:
 20955 ;;		line 602 in file "../../VLCBlib_PIC/mns.c"
 20956 ;; Parameters:    Size  Location     Type
 20957 ;;		None
 20958 ;; Auto vars:     Size  Location     Type
 20959 ;;  flags           1   49[BANK0 ] unsigned char 
 20960 ;; Return value:  Size  Location     Type
 20961 ;;                  1    wreg      unsigned char 
 20962 ;; Registers used:
 20963 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20964 ;; Tracked objects:
 20965 ;;		On entry : 0/0
 20966 ;;		On exit  : 0/0
 20967 ;;		Unchanged: 0/0
 20968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20970 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20972 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20973 ;;Total ram usage:        1 bytes
 20974 ;; Hardware stack levels used: 1
 20975 ;; Hardware stack levels required when called: 13
 20976 ;; This function calls:
 20977 ;;		_have
 20978 ;; This function is called by:
 20979 ;;		_mnsProcessMessage
 20980 ;;		_getParameter
 20981 ;; This function uses a non-reentrant model
 20982 ;;
 20983                           
 20984                           	psect	text71
 20985   00B47E                     __ptext71:
 20986                           	callstack 0
 20987   00B47E                     _getParameterFlags:
 20988                           	callstack 13
 20989                           
 20990                           ;../../VLCBlib_PIC/mns.c: 603:     uint8_t flags;;../../VLCBlib_PIC/mns.c: 604:     flag
      +                          s = 0;
 20991                           
 20992                           ;incstack = 0
 20993   00B47E  0E00               	movlw	0
 20994   00B480  0100               	movlb	0	; () banked
 20995   00B482  6F91               	movwf	getParameterFlags@flags& (0+255),b
 20996                           
 20997                           ; BSR set to: 0
 20998                           ;../../VLCBlib_PIC/mns.c: 605:     if (have(SERVICE_ID_CONSUMER)) {
 20999   00B484  0E06               	movlw	6
 21000   00B486  EC7F  F056         	call	_have
 21001   00B48A  0900               	iorlw	0
 21002   00B48C  B4D8               	btfsc	status,2,c
 21003   00B48E  D002               	goto	l20076
 21004                           
 21005                           ;../../VLCBlib_PIC/mns.c: 606:         flags |= 1;
 21006   00B490  0100               	movlb	0	; () banked
 21007   00B492  8191               	bsf	getParameterFlags@flags& (0+255),0,b
 21008   00B494                     l20076:
 21009                           
 21010                           ;../../VLCBlib_PIC/mns.c: 608:     if (have(SERVICE_ID_PRODUCER)) {
 21011   00B494  0E05               	movlw	5
 21012   00B496  EC7F  F056         	call	_have
 21013   00B49A  0900               	iorlw	0
 21014   00B49C  B4D8               	btfsc	status,2,c
 21015   00B49E  D002               	goto	l20080
 21016                           
 21017                           ;../../VLCBlib_PIC/mns.c: 609:         flags |= 2;
 21018   00B4A0  0100               	movlb	0	; () banked
 21019   00B4A2  8391               	bsf	getParameterFlags@flags& (0+255),1,b
 21020   00B4A4                     l20080:
 21021                           
 21022                           ;../../VLCBlib_PIC/mns.c: 611:     if (flags == (2 | 1)) flags |= 16;
 21023   00B4A4  0E03               	movlw	3
 21024   00B4A6  0100               	movlb	0	; () banked
 21025   00B4A8  1991               	xorwf	getParameterFlags@flags& (0+255),w,b
 21026   00B4AA  B4D8               	btfsc	status,2,c
 21027                           
 21028                           ; BSR set to: 0
 21029   00B4AC  8991               	bsf	getParameterFlags@flags& (0+255),4,b
 21030                           
 21031                           ; BSR set to: 0
 21032                           ;../../VLCBlib_PIC/mns.c: 612:     if (have(SERVICE_ID_BOOT)) {
 21033   00B4AE  0E0A               	movlw	10
 21034   00B4B0  EC7F  F056         	call	_have
 21035   00B4B4  0900               	iorlw	0
 21036   00B4B6  B4D8               	btfsc	status,2,c
 21037   00B4B8  D002               	goto	l20088
 21038                           
 21039                           ;../../VLCBlib_PIC/mns.c: 613:         flags |= 8;
 21040   00B4BA  0100               	movlb	0	; () banked
 21041   00B4BC  8791               	bsf	getParameterFlags@flags& (0+255),3,b
 21042   00B4BE                     l20088:
 21043                           
 21044                           ;../../VLCBlib_PIC/mns.c: 615:     if (mode_flags & 1) {
 21045   00B4BE  0101               	movlb	1	; () banked
 21046   00B4C0  A166               	btfss	_mode_flags& (0+255),0,b
 21047   00B4C2  D002               	goto	l20092
 21048                           
 21049                           ; BSR set to: 1
 21050                           ;../../VLCBlib_PIC/mns.c: 616:         flags |= 32;
 21051   00B4C4  0100               	movlb	0	; () banked
 21052   00B4C6  8B91               	bsf	getParameterFlags@flags& (0+255),5,b
 21053   00B4C8                     l20092:
 21054                           
 21055                           ;../../VLCBlib_PIC/mns.c: 618:     if (mode_state == MODE_NORMAL) {
 21056   00B4C8  0100               	movlb	0	; () banked
 21057   00B4CA  05C8               	decf	_mode_state& (0+255),w,b
 21058   00B4CC  B4D8               	btfsc	status,2,c
 21059                           
 21060                           ; BSR set to: 0
 21061                           ;../../VLCBlib_PIC/mns.c: 619:         flags |= 4;
 21062   00B4CE  8591               	bsf	getParameterFlags@flags& (0+255),2,b
 21063                           
 21064                           ; BSR set to: 0
 21065                           ;../../VLCBlib_PIC/mns.c: 622:     flags |= 64;
 21066                           
 21067                           ;../../VLCBlib_PIC/mns.c: 620:     }
 21068   00B4D0  8D91               	bsf	getParameterFlags@flags& (0+255),6,b
 21069                           
 21070                           ; BSR set to: 0
 21071                           ;../../VLCBlib_PIC/mns.c: 624:     return flags;
 21072   00B4D2  5191               	movf	getParameterFlags@flags& (0+255),w,b
 21073                           
 21074                           ; BSR set to: 0
 21075   00B4D4  0012               	return		;funcret
 21076   00B4D6                     __end_of_getParameterFlags:
 21077                           	callstack 0
 21078                           
 21079 ;; *************** function _mnsPoll *****************
 21080 ;; Defined at:
 21081 ;;		line 643 in file "../../VLCBlib_PIC/mns.c"
 21082 ;; Parameters:    Size  Location     Type
 21083 ;;		None
 21084 ;; Auto vars:     Size  Location     Type
 21085 ;;		None
 21086 ;; Return value:  Size  Location     Type
 21087 ;;                  1    wreg      void 
 21088 ;; Registers used:
 21089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21090 ;; Tracked objects:
 21091 ;;		On entry : 0/0
 21092 ;;		On exit  : 0/0
 21093 ;;		Unchanged: 0/0
 21094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21097 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21098 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21099 ;;Total ram usage:        4 bytes
 21100 ;; Hardware stack levels used: 1
 21101 ;; Hardware stack levels required when called: 18
 21102 ;; This function calls:
 21103 ;;		_sendMessage2
 21104 ;;		_sendMessage5
 21105 ;;		_setLEDsByMode
 21106 ;;		_tickGet
 21107 ;;		_writeNVM
 21108 ;; This function is called by:
 21109 ;;		_poll
 21110 ;; This function uses a non-reentrant model
 21111 ;;
 21112                           
 21113                           	psect	text72
 21114   004330                     __ptext72:
 21115                           	callstack 0
 21116   004330                     _mnsPoll:
 21117                           	callstack 11
 21118                           
 21119                           ;../../VLCBlib_PIC/mns.c: 646:     if (mode_state == MODE_NORMAL) {
 21120                           
 21121                           ; BSR set to: 0
 21122                           ;incstack = 0
 21123   004330  0100               	movlb	0	; () banked
 21124   004332  05C8               	decf	_mode_state& (0+255),w,b
 21125   004334  A4D8               	btfss	status,2,c
 21126   004336  D03F               	goto	l23622
 21127                           
 21128                           ; BSR set to: 0
 21129                           ;../../VLCBlib_PIC/mns.c: 647:         if ((tickGet() - heartbeatTimer.val) > 5*62500) {
 21130   004338  EC6B  F05A         	call	_tickGet	;wreg free
 21131   00433C  0101               	movlb	1	; () banked
 21132   00433E  5150               	movf	_heartbeatTimer& (0+255),w,b
 21133   004340  0100               	movlb	0	; () banked
 21134   004342  5D8D               	subwf	?_tickGet& (0+255),w,b
 21135   004344  0101               	movlb	1	; () banked
 21136   004346  6FC7               	movwf	??_mnsPoll& (0+255),b
 21137   004348  5151               	movf	(_heartbeatTimer+1)& (0+255),w,b
 21138   00434A  0100               	movlb	0	; () banked
 21139   00434C  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21140   00434E  0101               	movlb	1	; () banked
 21141   004350  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21142   004352  5152               	movf	(_heartbeatTimer+2)& (0+255),w,b
 21143   004354  0100               	movlb	0	; () banked
 21144   004356  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21145   004358  0101               	movlb	1	; () banked
 21146   00435A  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21147   00435C  5153               	movf	(_heartbeatTimer+3)& (0+255),w,b
 21148   00435E  0100               	movlb	0	; () banked
 21149   004360  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21150   004362  0101               	movlb	1	; () banked
 21151   004364  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21152   004366  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21153   004368  E108               	bnz	u25140
 21154   00436A  0EB5               	movlw	181
 21155   00436C  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21156   00436E  0EC4               	movlw	196
 21157   004370  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21158   004372  0E04               	movlw	4
 21159   004374  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21160   004376  A0D8               	btfss	status,0,c
 21161   004378  D01E               	goto	l23622
 21162   00437A                     u25140:
 21163                           
 21164                           ; BSR set to: 1
 21165                           ;../../VLCBlib_PIC/mns.c: 648:             if (mode_flags & 4) {
 21166   00437A  A566               	btfss	_mode_flags& (0+255),2,b
 21167   00437C  D00E               	goto	l23616
 21168                           
 21169                           ; BSR set to: 1
 21170                           ;../../VLCBlib_PIC/mns.c: 649:                 sendMessage5(OPC_HEARTB, nn.bytes.hi,nn.b
      +                          ytes.lo,heartbeatSequence++,mnsDiagnostics[0x01].asBytes.lo,0);
 21171   00437E  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 21172   004382  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 21173   004386  C045  F1C4         	movff	_heartbeatSequence,sendMessage5@data3
 21174   00438A  C18F  F1C5         	movff	_mnsDiagnostics+2,sendMessage5@data4
 21175   00438E  0E00               	movlw	0
 21176   004390  6FC6               	movwf	sendMessage5@data5& (0+255),b
 21177   004392  0EAB               	movlw	171
 21178   004394  EC68  F05F         	call	_sendMessage5
 21179   004398  2A45               	incf	_heartbeatSequence^0,f,c
 21180   00439A                     l23616:
 21181                           
 21182                           ;../../VLCBlib_PIC/mns.c: 651:             heartbeatTimer.val = tickGet();
 21183   00439A  EC6B  F05A         	call	_tickGet	;wreg free
 21184   00439E  C08D  F150         	movff	?_tickGet,_heartbeatTimer
 21185   0043A2  C08E  F151         	movff	?_tickGet+1,_heartbeatTimer+1
 21186   0043A6  C08F  F152         	movff	?_tickGet+2,_heartbeatTimer+2
 21187   0043AA  C090  F153         	movff	?_tickGet+3,_heartbeatTimer+3
 21188                           
 21189                           ;../../VLCBlib_PIC/mns.c: 652:             if (mnsDiagnostics[0x01].asBytes.lo > 0) {
 21190   0043AE  0101               	movlb	1	; () banked
 21191   0043B0  518F               	movf	(_mnsDiagnostics+2)& (0+255),w,b
 21192   0043B2  A4D8               	btfss	status,2,c
 21193                           
 21194                           ; BSR set to: 1
 21195                           ;../../VLCBlib_PIC/mns.c: 653:                 mnsDiagnostics[0x01].asBytes.lo--;
 21196   0043B4  078F               	decf	(_mnsDiagnostics+2)& (0+255),f,b
 21197   0043B6                     l23622:
 21198                           
 21199                           ;../../VLCBlib_PIC/mns.c: 660:     if (mode_flags != last_mode_flags) {
 21200   0043B6  5046               	movf	_last_mode_flags^0,w,c
 21201   0043B8  0101               	movlb	1	; () banked
 21202   0043BA  1966               	xorwf	_mode_flags& (0+255),w,b
 21203   0043BC  B4D8               	btfsc	status,2,c
 21204   0043BE  D00E               	goto	l23628
 21205                           
 21206                           ; BSR set to: 1
 21207                           ;../../VLCBlib_PIC/mns.c: 661:         writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 21208   0043C0  0EF9               	movlw	249
 21209   0043C2  0100               	movlb	0	; () banked
 21210   0043C4  6FA4               	movwf	writeNVM@index& (0+255),b
 21211   0043C6  0E03               	movlw	3
 21212   0043C8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21213   0043CA  0E00               	movlw	0
 21214   0043CC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21215   0043CE  C166  F0A7         	movff	_mode_flags,writeNVM@value
 21216   0043D2  0E00               	movlw	0
 21217   0043D4  ECE7  F05B         	call	_writeNVM
 21218                           
 21219                           ;../../VLCBlib_PIC/mns.c: 662:         last_mode_flags = mode_flags;
 21220   0043D8  C166  F046         	movff	_mode_flags,_last_mode_flags
 21221   0043DC                     l23628:
 21222                           
 21223                           ;../../VLCBlib_PIC/mns.c: 664:     if (mode_state != last_mode_state) {
 21224   0043DC  0100               	movlb	0	; () banked
 21225   0043DE  51C7               	movf	_last_mode_state& (0+255),w,b
 21226   0043E0  19C8               	xorwf	_mode_state& (0+255),w,b
 21227   0043E2  B4D8               	btfsc	status,2,c
 21228   0043E4  D013               	goto	l23638
 21229                           
 21230                           ; BSR set to: 0
 21231                           ;../../VLCBlib_PIC/mns.c: 666:         if ((mode_state == MODE_UNINITIALISED) || (mode_s
      +                          tate == MODE_NORMAL)) {
 21232   0043E6  29C8               	incf	_mode_state& (0+255),w,b
 21233   0043E8  B4D8               	btfsc	status,2,c
 21234   0043EA  D003               	goto	u25200
 21235                           
 21236                           ; BSR set to: 0
 21237   0043EC  05C8               	decf	_mode_state& (0+255),w,b
 21238   0043EE  A4D8               	btfss	status,2,c
 21239   0043F0  D00B               	goto	l23636
 21240   0043F2                     u25200:
 21241                           
 21242                           ; BSR set to: 0
 21243                           ;../../VLCBlib_PIC/mns.c: 667:             writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 21244   0043F2  0EFB               	movlw	251
 21245   0043F4  6FA4               	movwf	writeNVM@index& (0+255),b
 21246   0043F6  0E03               	movlw	3
 21247   0043F8  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 21248   0043FA  0E00               	movlw	0
 21249   0043FC  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 21250   0043FE  C0C8  F0A7         	movff	_mode_state,writeNVM@value
 21251   004402  0E00               	movlw	0
 21252   004404  ECE7  F05B         	call	_writeNVM
 21253   004408                     l23636:
 21254                           
 21255                           ;../../VLCBlib_PIC/mns.c: 669:         last_mode_state = mode_state;
 21256   004408  C0C8  F0C7         	movff	_mode_state,_last_mode_state
 21257   00440C                     l23638:
 21258                           
 21259                           ;../../VLCBlib_PIC/mns.c: 673:     if ((tickGet() - uptimeTimer.val) > 62500) {
 21260   00440C  EC6B  F05A         	call	_tickGet	;wreg free
 21261   004410  0101               	movlb	1	; () banked
 21262   004412  514C               	movf	_uptimeTimer& (0+255),w,b
 21263   004414  0100               	movlb	0	; () banked
 21264   004416  5D8D               	subwf	?_tickGet& (0+255),w,b
 21265   004418  0101               	movlb	1	; () banked
 21266   00441A  6FC7               	movwf	??_mnsPoll& (0+255),b
 21267   00441C  514D               	movf	(_uptimeTimer+1)& (0+255),w,b
 21268   00441E  0100               	movlb	0	; () banked
 21269   004420  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21270   004422  0101               	movlb	1	; () banked
 21271   004424  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21272   004426  514E               	movf	(_uptimeTimer+2)& (0+255),w,b
 21273   004428  0100               	movlb	0	; () banked
 21274   00442A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21275   00442C  0101               	movlb	1	; () banked
 21276   00442E  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21277   004430  514F               	movf	(_uptimeTimer+3)& (0+255),w,b
 21278   004432  0100               	movlb	0	; () banked
 21279   004434  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21280   004436  0101               	movlb	1	; () banked
 21281   004438  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21282   00443A  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21283   00443C  11C9               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21284   00443E  E106               	bnz	u25210
 21285   004440  0E25               	movlw	37
 21286   004442  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21287   004444  0EF4               	movlw	244
 21288   004446  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21289   004448  A0D8               	btfss	status,0,c
 21290   00444A  D10E               	goto	l23712
 21291   00444C                     u25210:
 21292                           
 21293                           ; BSR set to: 1
 21294                           ;../../VLCBlib_PIC/mns.c: 674:         uptimeTimer.val = tickGet();
 21295   00444C  EC6B  F05A         	call	_tickGet	;wreg free
 21296   004450  C08D  F14C         	movff	?_tickGet,_uptimeTimer
 21297   004454  C08E  F14D         	movff	?_tickGet+1,_uptimeTimer+1
 21298   004458  C08F  F14E         	movff	?_tickGet+2,_uptimeTimer+2
 21299   00445C  C090  F14F         	movff	?_tickGet+3,_uptimeTimer+3
 21300                           
 21301                           ;../../VLCBlib_PIC/mns.c: 675:         mnsDiagnostics[0x03].asUint++;
 21302   004460  0101               	movlb	1	; () banked
 21303   004462  4B93               	infsnz	(_mnsDiagnostics+6)& (0+255),f,b
 21304   004464  2B94               	incf	(_mnsDiagnostics+7)& (0+255),f,b
 21305                           
 21306                           ; BSR set to: 1
 21307                           ;../../VLCBlib_PIC/mns.c: 676:         if (mnsDiagnostics[0x03].asUint == 0) {
 21308   004466  5193               	movf	(_mnsDiagnostics+6)& (0+255),w,b
 21309   004468  1194               	iorwf	(_mnsDiagnostics+7)& (0+255),w,b
 21310   00446A  A4D8               	btfss	status,2,c
 21311   00446C  D0FD               	goto	l23712
 21312                           
 21313                           ; BSR set to: 1
 21314                           ;../../VLCBlib_PIC/mns.c: 677:             mnsDiagnostics[0x02].asUint++;
 21315   00446E  4B91               	infsnz	(_mnsDiagnostics+4)& (0+255),f,b
 21316   004470  2B92               	incf	(_mnsDiagnostics+5)& (0+255),f,b
 21317   004472  D0FA               	goto	l23712
 21318   004474                     l1509:
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;../../VLCBlib_PIC/mns.c: 686:             if ((!(PORTAbits.RA2)) == 0) {
 21322   004474  A480               	btfss	128,2,c	;volatile
 21323   004476  D00B               	goto	l23650
 21324   004478                     u25230:
 21325                           
 21326                           ;../../VLCBlib_PIC/mns.c: 688:                 pbTimer.val = tickGet();
 21327   004478  EC6B  F05A         	call	_tickGet	;wreg free
 21328   00447C  C08D  F033         	movff	?_tickGet,_pbTimer
 21329   004480  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21330   004484  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21331   004488  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21332                           
 21333                           ;../../VLCBlib_PIC/mns.c: 689:             } else {
 21334   00448C  0012               	return	
 21335   00448E                     l23650:
 21336                           
 21337                           ; BSR set to: 0
 21338                           ;../../VLCBlib_PIC/mns.c: 691:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21339   00448E  EC6B  F05A         	call	_tickGet	;wreg free
 21340   004492  5033               	movf	_pbTimer^0,w,c
 21341   004494  0100               	movlb	0	; () banked
 21342   004496  5D8D               	subwf	?_tickGet& (0+255),w,b
 21343   004498  0101               	movlb	1	; () banked
 21344   00449A  6FC7               	movwf	??_mnsPoll& (0+255),b
 21345   00449C  5034               	movf	(_pbTimer+1)^0,w,c
 21346   00449E  0100               	movlb	0	; () banked
 21347   0044A0  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21348   0044A2  0101               	movlb	1	; () banked
 21349   0044A4  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21350   0044A6  5035               	movf	(_pbTimer+2)^0,w,c
 21351   0044A8  0100               	movlb	0	; () banked
 21352   0044AA  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21353   0044AC  0101               	movlb	1	; () banked
 21354   0044AE  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21355   0044B0  5036               	movf	(_pbTimer+3)^0,w,c
 21356   0044B2  0100               	movlb	0	; () banked
 21357   0044B4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21358   0044B6  0101               	movlb	1	; () banked
 21359   0044B8  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21360   0044BA  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21361   0044BC  E108               	bnz	u25240
 21362   0044BE  0E91               	movlw	145
 21363   0044C0  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21364   0044C2  0ED0               	movlw	208
 21365   0044C4  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21366   0044C6  0E03               	movlw	3
 21367   0044C8  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21368   0044CA  A0D8               	btfss	status,0,c
 21369   0044CC  0012               	return	
 21370   0044CE                     u25240:
 21371                           
 21372                           ; BSR set to: 1
 21373                           ;../../VLCBlib_PIC/mns.c: 693:                     mode_state = 0xFD;
 21374   0044CE  0EFD               	movlw	253
 21375   0044D0  0100               	movlb	0	; () banked
 21376   0044D2  6FC8               	movwf	_mode_state& (0+255),b
 21377                           
 21378                           ; BSR set to: 0
 21379                           ;../../VLCBlib_PIC/mns.c: 694:                     setupModePreviousMode = MODE_UNINITIA
      +                          LISED;
 21380   0044D4  0101               	movlb	1	; () banked
 21381   0044D6  6965               	setf	_setupModePreviousMode& (0+255),b
 21382                           
 21383                           ; BSR set to: 1
 21384                           ;../../VLCBlib_PIC/mns.c: 695:                     setLEDsByMode();
 21385   0044D8  ECD7  F05E         	call	_setLEDsByMode	;wreg free
 21386   0044DC  0012               	return	
 21387   0044DE                     l1514:
 21388                           
 21389                           ; BSR set to: 0
 21390                           ;../../VLCBlib_PIC/mns.c: 700:             if ((!(PORTAbits.RA2)) == 0) {
 21391   0044DE  A480               	btfss	128,2,c	;volatile
 21392   0044E0  D7CB               	goto	u25230
 21393                           
 21394                           ; BSR set to: 0
 21395                           ;../../VLCBlib_PIC/mns.c: 704:                 mode_state = MODE_SETUP;
 21396   0044E2  0E00               	movlw	0
 21397   0044E4  6FC8               	movwf	_mode_state& (0+255),b
 21398                           
 21399                           ; BSR set to: 0
 21400                           ;../../VLCBlib_PIC/mns.c: 705:                 setupModePreviousMode = MODE_UNINITIALISE
      +                          D;
 21401   0044E6  0101               	movlb	1	; () banked
 21402   0044E8  6965               	setf	_setupModePreviousMode& (0+255),b
 21403                           
 21404                           ; BSR set to: 1
 21405                           ;../../VLCBlib_PIC/mns.c: 706:                 pbTimer.val = tickGet();
 21406   0044EA  EC6B  F05A         	call	_tickGet	;wreg free
 21407   0044EE  C08D  F033         	movff	?_tickGet,_pbTimer
 21408   0044F2  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21409   0044F6  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21410   0044FA  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21411                           
 21412                           ;../../VLCBlib_PIC/mns.c: 708:                 sendMessage2(OPC_RQNN, nn.bytes.hi, nn.by
      +                          tes.lo);
 21413   0044FE  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 21414   004502  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 21415   004506  0E50               	movlw	80
 21416   004508  EC38  F05F         	call	_sendMessage2
 21417   00450C                     l23666:
 21418                           
 21419                           ;../../VLCBlib_PIC/mns.c: 709:                 setLEDsByMode();
 21420   00450C  ECD7  F05E         	call	_setLEDsByMode	;wreg free
 21421   004510  D7B3               	goto	u25230
 21422   004512                     l1516:
 21423                           
 21424                           ; BSR set to: 0
 21425                           ;../../VLCBlib_PIC/mns.c: 727:             if ((!(PORTAbits.RA2)) == 0) {
 21426   004512  A480               	btfss	128,2,c	;volatile
 21427   004514  0012               	return	
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;../../VLCBlib_PIC/mns.c: 730:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21431   004516  EC6B  F05A         	call	_tickGet	;wreg free
 21432   00451A  5033               	movf	_pbTimer^0,w,c
 21433   00451C  0100               	movlb	0	; () banked
 21434   00451E  5D8D               	subwf	?_tickGet& (0+255),w,b
 21435   004520  0101               	movlb	1	; () banked
 21436   004522  6FC7               	movwf	??_mnsPoll& (0+255),b
 21437   004524  5034               	movf	(_pbTimer+1)^0,w,c
 21438   004526  0100               	movlb	0	; () banked
 21439   004528  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21440   00452A  0101               	movlb	1	; () banked
 21441   00452C  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21442   00452E  5035               	movf	(_pbTimer+2)^0,w,c
 21443   004530  0100               	movlb	0	; () banked
 21444   004532  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21445   004534  0101               	movlb	1	; () banked
 21446   004536  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21447   004538  5036               	movf	(_pbTimer+3)^0,w,c
 21448   00453A  0100               	movlb	0	; () banked
 21449   00453C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21450   00453E  0101               	movlb	1	; () banked
 21451   004540  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21452   004542  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21453   004544  E108               	bnz	u25270
 21454   004546  0E91               	movlw	145
 21455   004548  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21456   00454A  0ED0               	movlw	208
 21457   00454C  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21458   00454E  0E03               	movlw	3
 21459   004550  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21460   004552  A0D8               	btfss	status,0,c
 21461   004554  D015               	goto	l23684
 21462   004556                     u25270:
 21463                           
 21464                           ; BSR set to: 1
 21465                           ;../../VLCBlib_PIC/mns.c: 733:                     mode_state = setupModePreviousMode;
 21466   004556  C165  F0C8         	movff	_setupModePreviousMode,_mode_state
 21467                           
 21468                           ; BSR set to: 1
 21469                           ;../../VLCBlib_PIC/mns.c: 734:                     if (mode_state == MODE_NORMAL) {
 21470   00455A  0100               	movlb	0	; () banked
 21471   00455C  05C8               	decf	_mode_state& (0+255),w,b
 21472   00455E  A4D8               	btfss	status,2,c
 21473   004560  D7D5               	goto	l23666
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;../../VLCBlib_PIC/mns.c: 735:                         nn.word = previousNN.word;
 21477   004562  C160  F0BF         	movff	_previousNN,_nn
 21478   004566  C161  F0C0         	movff	_previousNN+1,_nn+1
 21479                           
 21480                           ; BSR set to: 0
 21481                           ;../../VLCBlib_PIC/mns.c: 736:                         sendMessage2(OPC_NNACK, nn.bytes.
      +                          hi, nn.bytes.lo);
 21482   00456A  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 21483   00456E  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 21484   004572  0E52               	movlw	82
 21485   004574  EC38  F05F         	call	_sendMessage2
 21486                           
 21487                           ;../../VLCBlib_PIC/mns.c: 738:                         mnsDiagnostics[0x05].asUint++;
 21488   004578  0101               	movlb	1	; () banked
 21489   00457A  4B97               	infsnz	(_mnsDiagnostics+10)& (0+255),f,b
 21490   00457C  2B98               	incf	(_mnsDiagnostics+11)& (0+255),f,b
 21491   00457E  D7C6               	goto	l23666
 21492   004580                     l23684:
 21493                           
 21494                           ; BSR set to: 1
 21495   004580  EC6B  F05A         	call	_tickGet	;wreg free
 21496   004584  5033               	movf	_pbTimer^0,w,c
 21497   004586  0100               	movlb	0	; () banked
 21498   004588  5D8D               	subwf	?_tickGet& (0+255),w,b
 21499   00458A  0101               	movlb	1	; () banked
 21500   00458C  6FC7               	movwf	??_mnsPoll& (0+255),b
 21501   00458E  5034               	movf	(_pbTimer+1)^0,w,c
 21502   004590  0100               	movlb	0	; () banked
 21503   004592  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21504   004594  0101               	movlb	1	; () banked
 21505   004596  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21506   004598  5035               	movf	(_pbTimer+2)^0,w,c
 21507   00459A  0100               	movlb	0	; () banked
 21508   00459C  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21509   00459E  0101               	movlb	1	; () banked
 21510   0045A0  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21511   0045A2  5036               	movf	(_pbTimer+3)^0,w,c
 21512   0045A4  0100               	movlb	0	; () banked
 21513   0045A6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21514   0045A8  0101               	movlb	1	; () banked
 21515   0045AA  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21516   0045AC  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21517   0045AE  11C9               	iorwf	(??_mnsPoll+2)& (0+255),w,b
 21518   0045B0  E106               	bnz	u25290
 21519   0045B2  0E25               	movlw	37
 21520   0045B4  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21521   0045B6  0EF4               	movlw	244
 21522   0045B8  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21523   0045BA  A0D8               	btfss	status,0,c
 21524   0045BC  D75D               	goto	u25230
 21525   0045BE                     u25290:
 21526                           
 21527                           ; BSR set to: 1
 21528                           ;../../VLCBlib_PIC/mns.c: 744:                     if (nn.word != 0) {
 21529   0045BE  0100               	movlb	0	; () banked
 21530   0045C0  51BF               	movf	_nn& (0+255),w,b
 21531   0045C2  11C0               	iorwf	(_nn+1)& (0+255),w,b
 21532   0045C4  B4D8               	btfsc	status,2,c
 21533   0045C6  D007               	goto	l23690
 21534                           
 21535                           ; BSR set to: 0
 21536                           ;../../VLCBlib_PIC/mns.c: 745:                         sendMessage2(OPC_NNREL, nn.bytes.
      +                          hi, nn.bytes.lo);
 21537   0045C8  C0C0  F0A6         	movff	_nn+1,sendMessage2@data1
 21538   0045CC  C0BF  F0A7         	movff	_nn,sendMessage2@data2
 21539   0045D0  0E51               	movlw	81
 21540   0045D2  EC38  F05F         	call	_sendMessage2
 21541   0045D6                     l23690:
 21542                           
 21543                           ;../../VLCBlib_PIC/mns.c: 747:                     nn.word = 0;
 21544   0045D6  0E00               	movlw	0
 21545   0045D8  0100               	movlb	0	; () banked
 21546   0045DA  6FC0               	movwf	(_nn+1)& (0+255),b
 21547   0045DC  0E00               	movlw	0
 21548   0045DE  6FBF               	movwf	_nn& (0+255),b
 21549                           
 21550                           ; BSR set to: 0
 21551                           ;../../VLCBlib_PIC/mns.c: 748:                     mode_state = MODE_UNINITIALISED;
 21552   0045E0  69C8               	setf	_mode_state& (0+255),b
 21553   0045E2  D794               	goto	l23666
 21554   0045E4                     l1523:
 21555                           
 21556                           ; BSR set to: 0
 21557                           ;../../VLCBlib_PIC/mns.c: 756:             if ((!(PORTAbits.RA2)) == 0) {
 21558   0045E4  A480               	btfss	128,2,c	;volatile
 21559   0045E6  0012               	return	
 21560                           
 21561                           ; BSR set to: 0
 21562                           ;../../VLCBlib_PIC/mns.c: 758:                 if ((tickGet() - pbTimer.val) > 4*62500) 
      +                          {
 21563   0045E8  EC6B  F05A         	call	_tickGet	;wreg free
 21564   0045EC  5033               	movf	_pbTimer^0,w,c
 21565   0045EE  0100               	movlb	0	; () banked
 21566   0045F0  5D8D               	subwf	?_tickGet& (0+255),w,b
 21567   0045F2  0101               	movlb	1	; () banked
 21568   0045F4  6FC7               	movwf	??_mnsPoll& (0+255),b
 21569   0045F6  5034               	movf	(_pbTimer+1)^0,w,c
 21570   0045F8  0100               	movlb	0	; () banked
 21571   0045FA  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 21572   0045FC  0101               	movlb	1	; () banked
 21573   0045FE  6FC8               	movwf	(??_mnsPoll+1)& (0+255),b
 21574   004600  5035               	movf	(_pbTimer+2)^0,w,c
 21575   004602  0100               	movlb	0	; () banked
 21576   004604  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 21577   004606  0101               	movlb	1	; () banked
 21578   004608  6FC9               	movwf	(??_mnsPoll+2)& (0+255),b
 21579   00460A  5036               	movf	(_pbTimer+3)^0,w,c
 21580   00460C  0100               	movlb	0	; () banked
 21581   00460E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 21582   004610  0101               	movlb	1	; () banked
 21583   004612  6FCA               	movwf	(??_mnsPoll+3)& (0+255),b
 21584   004614  51CA               	movf	(??_mnsPoll+3)& (0+255),w,b
 21585   004616  E108               	bnz	u25320
 21586   004618  0E91               	movlw	145
 21587   00461A  5DC7               	subwf	??_mnsPoll& (0+255),w,b
 21588   00461C  0ED0               	movlw	208
 21589   00461E  59C8               	subwfb	(??_mnsPoll+1)& (0+255),w,b
 21590   004620  0E03               	movlw	3
 21591   004622  59C9               	subwfb	(??_mnsPoll+2)& (0+255),w,b
 21592   004624  A0D8               	btfss	status,0,c
 21593   004626  D728               	goto	u25230
 21594   004628                     u25320:
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;../../VLCBlib_PIC/mns.c: 761:                     previousNN.word = nn.word;
 21598   004628  C0BF  F160         	movff	_nn,_previousNN
 21599   00462C  C0C0  F161         	movff	_nn+1,_previousNN+1
 21600                           
 21601                           ; BSR set to: 1
 21602                           ;../../VLCBlib_PIC/mns.c: 762:                     nn.bytes.lo = nn.bytes.hi = 0;
 21603   004630  0E00               	movlw	0
 21604   004632  0100               	movlb	0	; () banked
 21605   004634  6FC0               	movwf	(_nn+1)& (0+255),b
 21606   004636  C0C0  F0BF         	movff	_nn+1,_nn
 21607                           
 21608                           ;../../VLCBlib_PIC/mns.c: 764:                     mode_state = MODE_SETUP;
 21609   00463A  0E00               	movlw	0
 21610   00463C  6FC8               	movwf	_mode_state& (0+255),b
 21611                           
 21612                           ;../../VLCBlib_PIC/mns.c: 765:                     setupModePreviousMode = MODE_NORMAL;
 21613   00463E  0E01               	movlw	1
 21614   004640  0101               	movlb	1	; () banked
 21615   004642  6F65               	movwf	_setupModePreviousMode& (0+255),b
 21616                           
 21617                           ; BSR set to: 1
 21618                           ;../../VLCBlib_PIC/mns.c: 766:                     pbTimer.val = tickGet();
 21619   004644  EC6B  F05A         	call	_tickGet	;wreg free
 21620   004648  C08D  F033         	movff	?_tickGet,_pbTimer
 21621   00464C  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 21622   004650  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 21623   004654  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 21624                           
 21625                           ;../../VLCBlib_PIC/mns.c: 768:                     sendMessage2(OPC_RQNN, previousNN.byt
      +                          es.hi, previousNN.bytes.lo);
 21626   004658  C161  F0A6         	movff	_previousNN+1,sendMessage2@data1
 21627   00465C  C160  F0A7         	movff	_previousNN,sendMessage2@data2
 21628   004660  0E50               	movlw	80
 21629   004662  EC38  F05F         	call	_sendMessage2
 21630   004666  D752               	goto	l23666
 21631   004668                     l23712:
 21632                           
 21633                           ; BSR set to: 1
 21634   004668  0100               	movlb	0	; () banked
 21635   00466A  51C8               	movf	_mode_state& (0+255),w,b
 21636                           
 21637                           ; Switch size 1, requested type "simple"
 21638                           ; Number of cases is 3, Range of values is 0 to 255
 21639                           ; switch strategies available:
 21640                           ; Name         Instructions Cycles
 21641                           ; simple_byte           10     6 (average)
 21642                           ;	Chosen strategy is simple_byte
 21643   00466C  0A00               	xorlw	0	; case 0
 21644   00466E  B4D8               	btfsc	status,2,c
 21645   004670  D750               	goto	l1516
 21646   004672  0AFD               	xorlw	253	; case 253
 21647   004674  B4D8               	btfsc	status,2,c
 21648   004676  D733               	goto	l1514
 21649   004678  0A02               	xorlw	2	; case 255
 21650   00467A  B4D8               	btfsc	status,2,c
 21651   00467C  D6FB               	goto	l1509
 21652   00467E  D7B2               	goto	l1523
 21653   004680                     __end_of_mnsPoll:
 21654                           	callstack 0
 21655                           
 21656 ;; *************** function _setLEDsByMode *****************
 21657 ;; Defined at:
 21658 ;;		line 813 in file "../../VLCBlib_PIC/mns.c"
 21659 ;; Parameters:    Size  Location     Type
 21660 ;;		None
 21661 ;; Auto vars:     Size  Location     Type
 21662 ;;		None
 21663 ;; Return value:  Size  Location     Type
 21664 ;;                  1    wreg      void 
 21665 ;; Registers used:
 21666 ;;		wreg, status,2, status,0, cstack
 21667 ;; Tracked objects:
 21668 ;;		On entry : 0/0
 21669 ;;		On exit  : 0/0
 21670 ;;		Unchanged: 0/0
 21671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21676 ;;Total ram usage:        0 bytes
 21677 ;; Hardware stack levels used: 1
 21678 ;; Hardware stack levels required when called: 13
 21679 ;; This function calls:
 21680 ;;		_showStatus
 21681 ;; This function is called by:
 21682 ;;		_mnsPowerUp
 21683 ;;		_mnsProcessMessage
 21684 ;;		_mnsPoll
 21685 ;; This function uses a non-reentrant model
 21686 ;;
 21687                           
 21688                           	psect	text73
 21689   00BDAE                     __ptext73:
 21690                           	callstack 0
 21691   00BDAE                     _setLEDsByMode:
 21692                           	callstack 15
 21693                           
 21694                           ;../../VLCBlib_PIC/mns.c: 814:        switch (mode_state) {
 21695                           
 21696                           ;incstack = 0
 21697   00BDAE  D00C               	goto	l21870
 21698   00BDB0                     l21862:
 21699                           
 21700                           ; BSR set to: 0
 21701                           ;../../VLCBlib_PIC/mns.c: 816:             showStatus(STATUS_UNINITIALISED);
 21702   00BDB0  0E01               	movlw	1
 21703   00BDB2  EC81  F043         	call	_showStatus
 21704                           
 21705                           ;../../VLCBlib_PIC/mns.c: 817:             break;
 21706   00BDB6  0012               	return	
 21707   00BDB8                     l21864:
 21708                           
 21709                           ; BSR set to: 0
 21710                           ;../../VLCBlib_PIC/mns.c: 820:             showStatus(STATUS_SETUP);
 21711   00BDB8  0E02               	movlw	2
 21712   00BDBA  EC81  F043         	call	_showStatus
 21713                           
 21714                           ;../../VLCBlib_PIC/mns.c: 821:             break;
 21715   00BDBE  0012               	return	
 21716   00BDC0                     l21866:
 21717                           
 21718                           ; BSR set to: 0
 21719                           ;../../VLCBlib_PIC/mns.c: 823:             showStatus(STATUS_NORMAL);
 21720   00BDC0  0E03               	movlw	3
 21721   00BDC2  EC81  F043         	call	_showStatus
 21722                           
 21723                           ;../../VLCBlib_PIC/mns.c: 824:             break;
 21724   00BDC6  0012               	return	
 21725   00BDC8                     l21870:
 21726   00BDC8  0100               	movlb	0	; () banked
 21727   00BDCA  51C8               	movf	_mode_state& (0+255),w,b
 21728                           
 21729                           ; Switch size 1, requested type "simple"
 21730                           ; Number of cases is 3, Range of values is 0 to 255
 21731                           ; switch strategies available:
 21732                           ; Name         Instructions Cycles
 21733                           ; simple_byte           10     6 (average)
 21734                           ;	Chosen strategy is simple_byte
 21735   00BDCC  0A00               	xorlw	0	; case 0
 21736   00BDCE  B4D8               	btfsc	status,2,c
 21737   00BDD0  D7F3               	goto	l21864
 21738   00BDD2  0AFD               	xorlw	253	; case 253
 21739   00BDD4  B4D8               	btfsc	status,2,c
 21740   00BDD6  D7F0               	goto	l21864
 21741   00BDD8  0A02               	xorlw	2	; case 255
 21742   00BDDA  B4D8               	btfsc	status,2,c
 21743   00BDDC  D7E9               	goto	l21862
 21744   00BDDE  D7F0               	goto	l21866
 21745   00BDE0                     __end_of_setLEDsByMode:
 21746                           	callstack 0
 21747                           
 21748 ;; *************** function _sendMessage2 *****************
 21749 ;; Defined at:
 21750 ;;		line 1144 in file "../../VLCBlib_PIC/vlcb.c"
 21751 ;; Parameters:    Size  Location     Type
 21752 ;;  opc             1    wreg     enum E12392
 21753 ;;  data1           1   70[BANK0 ] unsigned char 
 21754 ;;  data2           1   71[BANK0 ] unsigned char 
 21755 ;; Auto vars:     Size  Location     Type
 21756 ;;  opc             1   72[BANK0 ] enum E12392
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  1    wreg      void 
 21759 ;; Registers used:
 21760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21769 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21770 ;;Total ram usage:        3 bytes
 21771 ;; Hardware stack levels used: 1
 21772 ;; Hardware stack levels required when called: 16
 21773 ;; This function calls:
 21774 ;;		_sendMessage
 21775 ;; This function is called by:
 21776 ;;		_mnsProcessMessage
 21777 ;;		_mnsPoll
 21778 ;;		_nvProcessMessage
 21779 ;;		_doNnclr
 21780 ;;		_doEvlrn
 21781 ;;		_doEvuln
 21782 ;; This function uses a non-reentrant model
 21783 ;;
 21784                           
 21785                           	psect	text74
 21786   00BE70                     __ptext74:
 21787                           	callstack 0
 21788   00BE70                     _sendMessage2:
 21789                           	callstack 11
 21790                           
 21791                           ;incstack = 0
 21792                           ;sendMessage2@opc stored from wreg
 21793   00BE70  0100               	movlb	0	; () banked
 21794   00BE72  6FA8               	movwf	sendMessage2@opc& (0+255),b
 21795                           
 21796                           ;../../VLCBlib_PIC/vlcb.c: 1145:     sendMessage(opc, 3, data1, data2, 0,0,0,0,0);
 21797   00BE74  0E03               	movlw	3
 21798   00BE76  0101               	movlb	1	; () banked
 21799   00BE78  6FBA               	movwf	sendMessage@len& (0+255),b
 21800   00BE7A  C0A6  F1BB         	movff	sendMessage2@data1,sendMessage@data1
 21801   00BE7E  C0A7  F1BC         	movff	sendMessage2@data2,sendMessage@data2
 21802   00BE82  0E00               	movlw	0
 21803   00BE84  6FBD               	movwf	sendMessage@data3& (0+255),b
 21804   00BE86  0E00               	movlw	0
 21805   00BE88  6FBE               	movwf	sendMessage@data4& (0+255),b
 21806   00BE8A  0E00               	movlw	0
 21807   00BE8C  6FBF               	movwf	sendMessage@data5& (0+255),b
 21808   00BE8E  0E00               	movlw	0
 21809   00BE90  6FC0               	movwf	sendMessage@data6& (0+255),b
 21810   00BE92  0E00               	movlw	0
 21811   00BE94  6FC1               	movwf	sendMessage@data7& (0+255),b
 21812   00BE96  0100               	movlb	0	; () banked
 21813   00BE98  51A8               	movf	sendMessage2@opc& (0+255),w,b
 21814   00BE9A  EC2A  F054         	call	_sendMessage
 21815   00BE9E  0012               	return		;funcret
 21816   00BEA0                     __end_of_sendMessage2:
 21817                           	callstack 0
 21818                           
 21819 ;; *************** function _setNormalActions *****************
 21820 ;; Defined at:
 21821 ;;		line 519 in file "../event_consumerDualActionQueue.c"
 21822 ;; Parameters:    Size  Location     Type
 21823 ;;		None
 21824 ;; Auto vars:     Size  Location     Type
 21825 ;;		None
 21826 ;; Return value:  Size  Location     Type
 21827 ;;                  1    wreg      void 
 21828 ;; Registers used:
 21829 ;;		wreg, status,2
 21830 ;; Tracked objects:
 21831 ;;		On entry : 0/0
 21832 ;;		On exit  : 0/0
 21833 ;;		Unchanged: 0/0
 21834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21839 ;;Total ram usage:        0 bytes
 21840 ;; Hardware stack levels used: 1
 21841 ;; Hardware stack levels required when called: 12
 21842 ;; This function calls:
 21843 ;;		Nothing
 21844 ;; This function is called by:
 21845 ;;		_consumer2QProcessMessage
 21846 ;; This function uses a non-reentrant model
 21847 ;;
 21848                           
 21849                           	psect	text75
 21850   00C51C                     __ptext75:
 21851                           	callstack 0
 21852   00C51C                     _setNormalActions:
 21853                           	callstack 16
 21854                           
 21855                           ;../event_consumerDualActionQueue.c: 520:     expedited = FALSE;
 21856                           
 21857                           ;incstack = 0
 21858   00C51C  0E00               	movlw	0
 21859   00C51E  6E47               	movwf	_expedited^0,c
 21860   00C520  0012               	return		;funcret
 21861   00C522                     __end_of_setNormalActions:
 21862                           	callstack 0
 21863                           
 21864 ;; *************** function _setExpeditedActions *****************
 21865 ;; Defined at:
 21866 ;;		line 512 in file "../event_consumerDualActionQueue.c"
 21867 ;; Parameters:    Size  Location     Type
 21868 ;;		None
 21869 ;; Auto vars:     Size  Location     Type
 21870 ;;		None
 21871 ;; Return value:  Size  Location     Type
 21872 ;;                  1    wreg      void 
 21873 ;; Registers used:
 21874 ;;		wreg, status,2
 21875 ;; Tracked objects:
 21876 ;;		On entry : 0/0
 21877 ;;		On exit  : 0/0
 21878 ;;		Unchanged: 0/0
 21879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21884 ;;Total ram usage:        0 bytes
 21885 ;; Hardware stack levels used: 1
 21886 ;; Hardware stack levels required when called: 12
 21887 ;; This function calls:
 21888 ;;		Nothing
 21889 ;; This function is called by:
 21890 ;;		_consumer2QProcessMessage
 21891 ;; This function uses a non-reentrant model
 21892 ;;
 21893                           
 21894                           	psect	text76
 21895   00C522                     __ptext76:
 21896                           	callstack 0
 21897   00C522                     _setExpeditedActions:
 21898                           	callstack 16
 21899                           
 21900                           ;../event_consumerDualActionQueue.c: 513:     expedited = TRUE;
 21901                           
 21902                           ;incstack = 0
 21903   00C522  0E01               	movlw	1
 21904   00C524  6E47               	movwf	_expedited^0,c
 21905   00C526  0012               	return		;funcret
 21906   00C528                     __end_of_setExpeditedActions:
 21907                           	callstack 0
 21908                           
 21909 ;; *************** function _pushTwoAction *****************
 21910 ;; Defined at:
 21911 ;;		line 393 in file "../event_consumerDualActionQueue.c"
 21912 ;; Parameters:    Size  Location     Type
 21913 ;;  a               1    wreg     unsigned char 
 21914 ;; Auto vars:     Size  Location     Type
 21915 ;;  a               1   45[BANK0 ] unsigned char 
 21916 ;; Return value:  Size  Location     Type
 21917 ;;                  1    wreg      enum E12760
 21918 ;; Registers used:
 21919 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21920 ;; Tracked objects:
 21921 ;;		On entry : 0/0
 21922 ;;		On exit  : 0/0
 21923 ;;		Unchanged: 0/0
 21924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21929 ;;Total ram usage:        1 bytes
 21930 ;; Hardware stack levels used: 1
 21931 ;; Hardware stack levels required when called: 12
 21932 ;; This function calls:
 21933 ;;		Nothing
 21934 ;; This function is called by:
 21935 ;;		_consumer2QProcessMessage
 21936 ;; This function uses a non-reentrant model
 21937 ;;
 21938                           
 21939                           	psect	text77
 21940   00B30E                     __ptext77:
 21941                           	callstack 0
 21942   00B30E                     _pushTwoAction:
 21943                           	callstack 16
 21944                           
 21945                           ;incstack = 0
 21946                           ;pushTwoAction@a stored from wreg
 21947   00B30E  0100               	movlb	0	; () banked
 21948   00B310  6F8D               	movwf	pushTwoAction@a& (0+255),b
 21949                           
 21950                           ;../event_consumerDualActionQueue.c: 394:     if (expedited) {
 21951   00B312  5047               	movf	_expedited^0,w,c
 21952   00B314  B4D8               	btfsc	status,2,c
 21953   00B316  D015               	goto	l21254
 21954                           
 21955                           ;../event_consumerDualActionQueue.c: 395:         if (((expeditedWriteIndex+1)&(8 -1)) =
      +                          = expeditedReadIndex)
 21956   00B318  0100               	movlb	0	; () banked
 21957   00B31A  29CC               	incf	_expeditedWriteIndex& (0+255),w,b
 21958   00B31C  0B07               	andlw	7
 21959   00B31E  19CD               	xorwf	_expeditedReadIndex& (0+255),w,b
 21960   00B320  B4D8               	btfsc	status,2,c
 21961   00B322  0012               	return	
 21962                           
 21963                           ; BSR set to: 0
 21964                           ;../event_consumerDualActionQueue.c: 397:         expeditedQueueBuf[expeditedWriteIndex+
      +                          +] = a;
 21965   00B324  0EC4               	movlw	low _expeditedQueueBuf
 21966   00B326  25CC               	addwf	_expeditedWriteIndex& (0+255),w,b
 21967   00B328  6ED9               	movwf	fsr2l,c
 21968   00B32A  6ADA               	clrf	fsr2h,c
 21969   00B32C  0E02               	movlw	high _expeditedQueueBuf
 21970   00B32E  22DA               	addwfc	fsr2h,f,c
 21971   00B330  C08D  FFDF         	movff	pushTwoAction@a,indf2
 21972                           
 21973                           ; BSR set to: 0
 21974   00B334  2BCC               	incf	_expeditedWriteIndex& (0+255),f,b
 21975                           
 21976                           ; BSR set to: 0
 21977                           ;../event_consumerDualActionQueue.c: 398:         if (expeditedWriteIndex >= 8) expedite
      +                          dWriteIndex = 0;
 21978   00B336  0E07               	movlw	7
 21979   00B338  65CC               	cpfsgt	_expeditedWriteIndex& (0+255),b
 21980   00B33A  0012               	return	
 21981                           
 21982                           ; BSR set to: 0
 21983   00B33C  0E00               	movlw	0
 21984   00B33E  6FCC               	movwf	_expeditedWriteIndex& (0+255),b
 21985   00B340  0012               	return	
 21986   00B342                     l21254:
 21987                           
 21988                           ;../event_consumerDualActionQueue.c: 401:     if (((normalWriteIndex+1)&(64 -1)) == norm
      +                          alReadIndex)
 21989   00B342  0100               	movlb	0	; () banked
 21990   00B344  29CE               	incf	_normalWriteIndex& (0+255),w,b
 21991   00B346  0B3F               	andlw	63
 21992   00B348  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 21993   00B34A  B4D8               	btfsc	status,2,c
 21994   00B34C  0012               	return	
 21995                           
 21996                           ; BSR set to: 0
 21997                           ;../event_consumerDualActionQueue.c: 403:     normalQueueBuf[normalWriteIndex++] = a;
 21998   00B34E  0E80               	movlw	low _normalQueueBuf
 21999   00B350  25CE               	addwf	_normalWriteIndex& (0+255),w,b
 22000   00B352  6ED9               	movwf	fsr2l,c
 22001   00B354  6ADA               	clrf	fsr2h,c
 22002   00B356  0E04               	movlw	high _normalQueueBuf
 22003   00B358  22DA               	addwfc	fsr2h,f,c
 22004   00B35A  C08D  FFDF         	movff	pushTwoAction@a,indf2
 22005                           
 22006                           ; BSR set to: 0
 22007   00B35E  2BCE               	incf	_normalWriteIndex& (0+255),f,b
 22008                           
 22009                           ; BSR set to: 0
 22010                           ;../event_consumerDualActionQueue.c: 404:     if (normalWriteIndex >= 64) normalWriteInd
      +                          ex = 0;
 22011   00B360  0E3F               	movlw	63
 22012   00B362  65CE               	cpfsgt	_normalWriteIndex& (0+255),b
 22013   00B364  0012               	return	
 22014                           
 22015                           ; BSR set to: 0
 22016   00B366  0E00               	movlw	0
 22017   00B368  6FCE               	movwf	_normalWriteIndex& (0+255),b
 22018                           
 22019                           ; BSR set to: 0
 22020   00B36A  0012               	return		;funcret
 22021   00B36C                     __end_of_pushTwoAction:
 22022                           	callstack 0
 22023                           
 22024 ;; *************** function _canReceiveMessage *****************
 22025 ;; Defined at:
 22026 ;;		line 589 in file "../../VLCBlib_PIC/can18_ecan.c"
 22027 ;; Parameters:    Size  Location     Type
 22028 ;;  m               2   10[BANK1 ] PTR struct Message
 22029 ;;		 -> poll@m(9), 
 22030 ;; Auto vars:     Size  Location     Type
 22031 ;;  p               2   17[BANK1 ] PTR unsigned char 
 22032 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 22033 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 22034 ;;		 -> NULL(0), 
 22035 ;;  mp              2   14[BANK1 ] PTR struct Message
 22036 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22037 ;;  no              1   16[BANK1 ] unsigned char 
 22038 ;;  messageAvail    1   13[BANK1 ] enum E13071
 22039 ;;  incomingCanI    1    0        unsigned char 
 22040 ;; Return value:  Size  Location     Type
 22041 ;;                  1    wreg      enum E13071
 22042 ;; Registers used:
 22043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22044 ;; Tracked objects:
 22045 ;;		On entry : 0/0
 22046 ;;		On exit  : 0/0
 22047 ;;		Unchanged: 0/0
 22048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22049 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22050 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22051 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22052 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22053 ;;Total ram usage:        9 bytes
 22054 ;; Hardware stack levels used: 1
 22055 ;; Hardware stack levels required when called: 20
 22056 ;; This function calls:
 22057 ;;		_getBufferPointer
 22058 ;;		_getNumRxBuffersInUse
 22059 ;;		_handleSelfEnumeration
 22060 ;;		_memcpy
 22061 ;;		_pop
 22062 ;;		_processEnumeration
 22063 ;; This function is called by:
 22064 ;;		_poll
 22065 ;; This function uses a non-reentrant model
 22066 ;;
 22067                           
 22068                           	psect	text78
 22069   0067D0                     __ptext78:
 22070                           	callstack 0
 22071   0067D0                     _canReceiveMessage:
 22072                           	callstack 9
 22073                           
 22074                           ;../../VLCBlib_PIC/can18_ecan.c: 590:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          591:     uint8_t * p;;../../VLCBlib_PIC/can18_ecan.c: 592:     MessageReceived messageAv
      +                          ailable;;../../VLCBlib_PIC/can18_ecan.c: 593:     uint8_t incomingCanId;;../../VLCBlib_P
      +                          IC/can18_ecan.c: 595:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 598:     PIE5bits.
      +                          FIFOWMIE = 0;
 22075                           
 22076                           ; BSR set to: 0
 22077                           ;incstack = 0
 22078   0067D0  9076               	bcf	118,0,c	;volatile
 22079                           
 22080                           ;../../VLCBlib_PIC/can18_ecan.c: 599:     processEnumeration();
 22081   0067D2  EC57  F03B         	call	_processEnumeration	;wreg free
 22082                           
 22083                           ;../../VLCBlib_PIC/can18_ecan.c: 603:     no = getNumRxBuffersInUse();
 22084   0067D6  EC16  F05E         	call	_getNumRxBuffersInUse	;wreg free
 22085   0067DA  0101               	movlb	1	; () banked
 22086   0067DC  6FCA               	movwf	canReceiveMessage@no& (0+255),b
 22087                           
 22088                           ; BSR set to: 1
 22089                           ;../../VLCBlib_PIC/can18_ecan.c: 604:     if (canDiagnostics[0x12].asUint < no) {
 22090   0067DE  51CA               	movf	canReceiveMessage@no& (0+255),w,b
 22091   0067E0  5D8B               	subwf	(_canDiagnostics+36)& (0+255),w,b
 22092   0067E2  0E00               	movlw	0
 22093   0067E4  598C               	subwfb	(_canDiagnostics+37)& (0+255),w,b
 22094   0067E6  B0D8               	btfsc	status,0,c
 22095   0067E8  D003               	goto	l24114
 22096                           
 22097                           ; BSR set to: 1
 22098                           ;../../VLCBlib_PIC/can18_ecan.c: 605:         canDiagnostics[0x12].asUint = no;
 22099   0067EA  C1CA  F18B         	movff	canReceiveMessage@no,_canDiagnostics+36
 22100   0067EE  6B8C               	clrf	(_canDiagnostics+37)& (0+255),b
 22101   0067F0                     l24114:
 22102                           
 22103                           ; BSR set to: 1
 22104                           ;../../VLCBlib_PIC/can18_ecan.c: 608:     mp = pop(&rxQueue);
 22105   0067F0  0E4D               	movlw	low _rxQueue
 22106   0067F2  0100               	movlb	0	; () banked
 22107   0067F4  6F8D               	movwf	pop@q& (0+255),b
 22108   0067F6  ECC0  F04D         	call	_pop	;wreg free
 22109   0067FA  C08D  F1C8         	movff	?_pop,canReceiveMessage@mp
 22110   0067FE  C08E  F1C9         	movff	?_pop+1,canReceiveMessage@mp+1
 22111                           
 22112                           ;../../VLCBlib_PIC/can18_ecan.c: 609:     if (mp != ((void*)0)) {
 22113   006802  0101               	movlb	1	; () banked
 22114   006804  51C8               	movf	canReceiveMessage@mp& (0+255),w,b
 22115   006806  11C9               	iorwf	(canReceiveMessage@mp+1)& (0+255),w,b
 22116   006808  B4D8               	btfsc	status,2,c
 22117   00680A  D012               	goto	l2484
 22118                           
 22119                           ; BSR set to: 1
 22120                           ;../../VLCBlib_PIC/can18_ecan.c: 610:         memcpy(m, mp, sizeof(Message));
 22121   00680C  C1C4  F08D         	movff	canReceiveMessage@m,memcpy@d1
 22122   006810  C1C5  F08E         	movff	canReceiveMessage@m+1,memcpy@d1+1
 22123   006814  C1C8  F08F         	movff	canReceiveMessage@mp,memcpy@s1
 22124   006818  C1C9  F090         	movff	canReceiveMessage@mp+1,memcpy@s1+1
 22125   00681C  0E00               	movlw	0
 22126   00681E  0100               	movlb	0	; () banked
 22127   006820  6F92               	movwf	(memcpy@n+1)& (0+255),b
 22128   006822  0E09               	movlw	9
 22129   006824  6F91               	movwf	memcpy@n& (0+255),b
 22130   006826  EC58  F05D         	call	_memcpy	;wreg free
 22131                           
 22132                           ;../../VLCBlib_PIC/can18_ecan.c: 611:         PIE5bits.FIFOWMIE = 1;
 22133   00682A  8076               	bsf	118,0,c	;volatile
 22134                           
 22135                           ;../../VLCBlib_PIC/can18_ecan.c: 612:         return RECEIVED;
 22136   00682C  0E01               	movlw	1
 22137   00682E  0012               	return	
 22138   006830                     l2484:
 22139                           
 22140                           ; BSR set to: 1
 22141                           ;../../VLCBlib_PIC/can18_ecan.c: 614:         if (COMSTATbits.NOT_FIFOEMPTY) {
 22142   006830  AE71               	btfss	113,7,c	;volatile
 22143   006832  D00D               	goto	u25720
 22144                           
 22145                           ; BSR set to: 1
 22146                           ;../../VLCBlib_PIC/can18_ecan.c: 615:             p = getBufferPointer(CANCON & 0x07);
 22147   006834  506F               	movf	111,w,c	;volatile
 22148   006836  0B07               	andlw	7
 22149   006838  EC3D  F04F         	call	_getBufferPointer
 22150   00683C  C08D  F1CB         	movff	?_getBufferPointer,canReceiveMessage@p
 22151   006840  C08E  F1CC         	movff	?_getBufferPointer+1,canReceiveMessage@p+1
 22152                           
 22153                           ;../../VLCBlib_PIC/can18_ecan.c: 616:             if (p == ((void*)0)) {
 22154   006844  0101               	movlb	1	; () banked
 22155   006846  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22156   006848  11CC               	iorwf	(canReceiveMessage@p+1)& (0+255),w,b
 22157   00684A  A4D8               	btfss	status,2,c
 22158   00684C  D003               	goto	l2488
 22159   00684E                     u25720:
 22160                           
 22161                           ; BSR set to: 1
 22162                           ;../../VLCBlib_PIC/can18_ecan.c: 618:                 PIE5bits.FIFOWMIE = 1;
 22163   00684E  8076               	bsf	118,0,c	;volatile
 22164   006850                     l24134:
 22165                           
 22166                           ; BSR set to: 1
 22167                           ;../../VLCBlib_PIC/can18_ecan.c: 619:                 return NOT_RECEIVED;
 22168   006850  0E00               	movlw	0
 22169   006852  0012               	return	
 22170   006854                     l2488:
 22171                           
 22172                           ; BSR set to: 1
 22173                           ;../../VLCBlib_PIC/can18_ecan.c: 621:             PIR5bits.RXBnIF = 0;
 22174   006854  9277               	bcf	119,1,c	;volatile
 22175                           
 22176                           ; BSR set to: 1
 22177                           ;../../VLCBlib_PIC/can18_ecan.c: 623:             if (p[2] & 0x08) return NOT_RECEIVED;
 22178   006856  EE20 F002          	lfsr	2,2
 22179   00685A  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22180   00685C  26D9               	addwf	fsr2l,f,c
 22181   00685E  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22182   006860  22DA               	addwfc	fsr2h,f,c
 22183   006862  B6DF               	btfsc	indf2,3,c
 22184   006864  D7F5               	goto	l24134
 22185                           
 22186                           ; BSR set to: 1
 22187                           ;../../VLCBlib_PIC/can18_ecan.c: 625:             if (handleSelfEnumeration(p) == RECEIV
      +                          ED) {
 22188   006866  C1CB  F097         	movff	canReceiveMessage@p,handleSelfEnumeration@p
 22189   00686A  C1CC  F098         	movff	canReceiveMessage@p+1,handleSelfEnumeration@p+1
 22190   00686E  EC2F  F040         	call	_handleSelfEnumeration	;wreg free
 22191   006872  06E8               	decf	wreg,f,c
 22192   006874  A4D8               	btfss	status,2,c
 22193   006876  D08F               	goto	l24172
 22194                           
 22195                           ;../../VLCBlib_PIC/can18_ecan.c: 628:                 canDiagnostics[0x09].asUint++;
 22196   006878  0101               	movlb	1	; () banked
 22197   00687A  4B79               	infsnz	(_canDiagnostics+18)& (0+255),f,b
 22198   00687C  2B7A               	incf	(_canDiagnostics+19)& (0+255),f,b
 22199                           
 22200                           ; BSR set to: 1
 22201                           ;../../VLCBlib_PIC/can18_ecan.c: 633:                     m->opc = p[6];
 22202   00687E  EE20 F006          	lfsr	2,6
 22203   006882  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22204   006884  26D9               	addwf	fsr2l,f,c
 22205   006886  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22206   006888  22DA               	addwfc	fsr2h,f,c
 22207   00688A  EE10 F001          	lfsr	1,1
 22208   00688E  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22209   006890  26E1               	addwf	fsr1l,f,c
 22210   006892  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22211   006894  22E2               	addwfc	fsr1h,f,c
 22212   006896  CFDF FFE7          	movff	indf2,indf1
 22213                           
 22214                           ; BSR set to: 1
 22215                           ;../../VLCBlib_PIC/can18_ecan.c: 634:                     m->len = p[5] & 0xF;
 22216   00689A  EE20 F005          	lfsr	2,5
 22217   00689E  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22218   0068A0  26D9               	addwf	fsr2l,f,c
 22219   0068A2  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22220   0068A4  22DA               	addwfc	fsr2h,f,c
 22221   0068A6  50DF               	movf	indf2,w,c
 22222   0068A8  0B0F               	andlw	15
 22223   0068AA  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22224   0068AE  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22225   0068B2  6EDF               	movwf	indf2,c
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;../../VLCBlib_PIC/can18_ecan.c: 635:                     if (m->len > 8) {
 22229   0068B4  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22230   0068B8  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22231   0068BC  0E08               	movlw	8
 22232   0068BE  64DF               	cpfsgt	indf2,c
 22233   0068C0  D006               	goto	l24156
 22234                           
 22235                           ; BSR set to: 1
 22236                           ;../../VLCBlib_PIC/can18_ecan.c: 636:                         m->len = 8;
 22237   0068C2  C1C4  FFD9         	movff	canReceiveMessage@m,fsr2l
 22238   0068C6  C1C5  FFDA         	movff	canReceiveMessage@m+1,fsr2h
 22239   0068CA  0E08               	movlw	8
 22240   0068CC  6EDF               	movwf	indf2,c
 22241   0068CE                     l24156:
 22242                           
 22243                           ; BSR set to: 1
 22244                           ;../../VLCBlib_PIC/can18_ecan.c: 638:                     m->bytes[0] = p[7];
 22245   0068CE  EE20 F007          	lfsr	2,7
 22246   0068D2  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22247   0068D4  26D9               	addwf	fsr2l,f,c
 22248   0068D6  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22249   0068D8  22DA               	addwfc	fsr2h,f,c
 22250   0068DA  EE10 F002          	lfsr	1,2
 22251   0068DE  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22252   0068E0  26E1               	addwf	fsr1l,f,c
 22253   0068E2  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22254   0068E4  22E2               	addwfc	fsr1h,f,c
 22255   0068E6  CFDF FFE7          	movff	indf2,indf1
 22256                           
 22257                           ; BSR set to: 1
 22258                           ;../../VLCBlib_PIC/can18_ecan.c: 639:                     m->bytes[1] = p[8];
 22259   0068EA  EE20 F008          	lfsr	2,8
 22260   0068EE  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22261   0068F0  26D9               	addwf	fsr2l,f,c
 22262   0068F2  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22263   0068F4  22DA               	addwfc	fsr2h,f,c
 22264   0068F6  EE10 F003          	lfsr	1,3
 22265   0068FA  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22266   0068FC  26E1               	addwf	fsr1l,f,c
 22267   0068FE  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22268   006900  22E2               	addwfc	fsr1h,f,c
 22269   006902  CFDF FFE7          	movff	indf2,indf1
 22270                           
 22271                           ; BSR set to: 1
 22272                           ;../../VLCBlib_PIC/can18_ecan.c: 640:                     m->bytes[2] = p[9];
 22273   006906  EE20 F009          	lfsr	2,9
 22274   00690A  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22275   00690C  26D9               	addwf	fsr2l,f,c
 22276   00690E  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22277   006910  22DA               	addwfc	fsr2h,f,c
 22278   006912  EE10 F004          	lfsr	1,4
 22279   006916  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22280   006918  26E1               	addwf	fsr1l,f,c
 22281   00691A  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22282   00691C  22E2               	addwfc	fsr1h,f,c
 22283   00691E  CFDF FFE7          	movff	indf2,indf1
 22284                           
 22285                           ; BSR set to: 1
 22286                           ;../../VLCBlib_PIC/can18_ecan.c: 641:                     m->bytes[3] = p[10];
 22287   006922  EE20 F00A          	lfsr	2,10
 22288   006926  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22289   006928  26D9               	addwf	fsr2l,f,c
 22290   00692A  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22291   00692C  22DA               	addwfc	fsr2h,f,c
 22292   00692E  EE10 F005          	lfsr	1,5
 22293   006932  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22294   006934  26E1               	addwf	fsr1l,f,c
 22295   006936  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22296   006938  22E2               	addwfc	fsr1h,f,c
 22297   00693A  CFDF FFE7          	movff	indf2,indf1
 22298                           
 22299                           ; BSR set to: 1
 22300                           ;../../VLCBlib_PIC/can18_ecan.c: 642:                     m->bytes[4] = p[11];
 22301   00693E  EE20 F00B          	lfsr	2,11
 22302   006942  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22303   006944  26D9               	addwf	fsr2l,f,c
 22304   006946  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22305   006948  22DA               	addwfc	fsr2h,f,c
 22306   00694A  EE10 F006          	lfsr	1,6
 22307   00694E  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22308   006950  26E1               	addwf	fsr1l,f,c
 22309   006952  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22310   006954  22E2               	addwfc	fsr1h,f,c
 22311   006956  CFDF FFE7          	movff	indf2,indf1
 22312                           
 22313                           ; BSR set to: 1
 22314                           ;../../VLCBlib_PIC/can18_ecan.c: 643:                     m->bytes[5] = p[12];
 22315   00695A  EE20 F00C          	lfsr	2,12
 22316   00695E  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22317   006960  26D9               	addwf	fsr2l,f,c
 22318   006962  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22319   006964  22DA               	addwfc	fsr2h,f,c
 22320   006966  EE10 F007          	lfsr	1,7
 22321   00696A  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22322   00696C  26E1               	addwf	fsr1l,f,c
 22323   00696E  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22324   006970  22E2               	addwfc	fsr1h,f,c
 22325   006972  CFDF FFE7          	movff	indf2,indf1
 22326                           
 22327                           ; BSR set to: 1
 22328                           ;../../VLCBlib_PIC/can18_ecan.c: 644:                     m->bytes[6] = p[13];
 22329   006976  EE20 F00D          	lfsr	2,13
 22330   00697A  51CB               	movf	canReceiveMessage@p& (0+255),w,b
 22331   00697C  26D9               	addwf	fsr2l,f,c
 22332   00697E  51CC               	movf	(canReceiveMessage@p+1)& (0+255),w,b
 22333   006980  22DA               	addwfc	fsr2h,f,c
 22334   006982  EE10 F008          	lfsr	1,8
 22335   006986  51C4               	movf	canReceiveMessage@m& (0+255),w,b
 22336   006988  26E1               	addwf	fsr1l,f,c
 22337   00698A  51C5               	movf	(canReceiveMessage@m+1)& (0+255),w,b
 22338   00698C  22E2               	addwfc	fsr1h,f,c
 22339   00698E  CFDF FFE7          	movff	indf2,indf1
 22340                           
 22341                           ; BSR set to: 1
 22342                           ;../../VLCBlib_PIC/can18_ecan.c: 645:                     messageAvailable = RECEIVED;
 22343   006992  0E01               	movlw	1
 22344   006994  6FC7               	movwf	canReceiveMessage@messageAvailable& (0+255),b
 22345   006996                     l24172:
 22346                           
 22347                           ;../../VLCBlib_PIC/can18_ecan.c: 648:             if (PIR5bits.IRXIF) {
 22348   006996  AE77               	btfss	119,7,c	;volatile
 22349   006998  D004               	goto	l24178
 22350                           
 22351                           ;../../VLCBlib_PIC/can18_ecan.c: 649:                 canDiagnostics[0x01].asUint++;
 22352   00699A  0101               	movlb	1	; () banked
 22353   00699C  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 22354   00699E  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 22355                           
 22356                           ; BSR set to: 1
 22357                           ;../../VLCBlib_PIC/can18_ecan.c: 650:                 PIR5bits.IRXIF = 0;
 22358   0069A0  9E77               	bcf	119,7,c	;volatile
 22359   0069A2                     l24178:
 22360                           
 22361                           ;../../VLCBlib_PIC/can18_ecan.c: 653:             p[0] &= 0x7f;
 22362   0069A2  C1CB  FFD9         	movff	canReceiveMessage@p,fsr2l
 22363   0069A6  C1CC  FFDA         	movff	canReceiveMessage@p+1,fsr2h
 22364   0069AA  0E7F               	movlw	127
 22365   0069AC  16DF               	andwf	indf2,f,c
 22366                           
 22367                           ;../../VLCBlib_PIC/can18_ecan.c: 654:             PIE5bits.FIFOWMIE = 1;
 22368   0069AE  8076               	bsf	118,0,c	;volatile
 22369                           
 22370                           ;../../VLCBlib_PIC/can18_ecan.c: 655:             return messageAvailable;
 22371   0069B0  0101               	movlb	1	; () banked
 22372   0069B2  51C7               	movf	canReceiveMessage@messageAvailable& (0+255),w,b
 22373   0069B4  0012               	return	
 22374   0069B6                     __end_of_canReceiveMessage:
 22375                           	callstack 0
 22376                           
 22377 ;; *************** function _processEnumeration *****************
 22378 ;; Defined at:
 22379 ;;		line 903 in file "../../VLCBlib_PIC/can18_ecan.c"
 22380 ;; Parameters:    Size  Location     Type
 22381 ;;		None
 22382 ;; Auto vars:     Size  Location     Type
 22383 ;;  i               1    9[BANK1 ] unsigned char 
 22384 ;;  newCanId        1    8[BANK1 ] unsigned char 
 22385 ;;  enumResult      1    7[BANK1 ] unsigned char 
 22386 ;; Return value:  Size  Location     Type
 22387 ;;                  1    wreg      void 
 22388 ;; Registers used:
 22389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22390 ;; Tracked objects:
 22391 ;;		On entry : 0/0
 22392 ;;		On exit  : 0/0
 22393 ;;		Unchanged: 0/0
 22394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22396 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22397 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22398 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22399 ;;Total ram usage:        7 bytes
 22400 ;; Hardware stack levels used: 1
 22401 ;; Hardware stack levels required when called: 19
 22402 ;; This function calls:
 22403 ;;		_setNewCanId
 22404 ;;		_tickGet
 22405 ;;		_updateModuleErrorStatus
 22406 ;; This function is called by:
 22407 ;;		_canReceiveMessage
 22408 ;; This function uses a non-reentrant model
 22409 ;;
 22410                           
 22411                           	psect	text79
 22412   0076AE                     __ptext79:
 22413                           	callstack 0
 22414   0076AE                     _processEnumeration:
 22415                           	callstack 9
 22416                           
 22417                           ;../../VLCBlib_PIC/can18_ecan.c: 904:     uint8_t i, newCanId, enumResult;;../../VLCBlib
      +                          _PIC/can18_ecan.c: 906:     switch (enumerationState) {
 22418                           
 22419                           ;incstack = 0
 22420   0076AE  D09B               	goto	l22282
 22421   0076B0                     l22220:
 22422                           
 22423                           ; BSR set to: 1
 22424                           ;../../VLCBlib_PIC/can18_ecan.c: 908:             if (((tickGet() - enumerationStartTime
      +                          .val) > 2 * (62500/10) )) {
 22425   0076B0  EC6B  F05A         	call	_tickGet	;wreg free
 22426   0076B4  502B               	movf	_enumerationStartTime^0,w,c
 22427   0076B6  0100               	movlb	0	; () banked
 22428   0076B8  5D8D               	subwf	?_tickGet& (0+255),w,b
 22429   0076BA  0101               	movlb	1	; () banked
 22430   0076BC  6FBD               	movwf	??_processEnumeration& (0+255),b
 22431   0076BE  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22432   0076C0  0100               	movlb	0	; () banked
 22433   0076C2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22434   0076C4  0101               	movlb	1	; () banked
 22435   0076C6  6FBE               	movwf	(??_processEnumeration+1)& (0+255),b
 22436   0076C8  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22437   0076CA  0100               	movlb	0	; () banked
 22438   0076CC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22439   0076CE  0101               	movlb	1	; () banked
 22440   0076D0  6FBF               	movwf	(??_processEnumeration+2)& (0+255),b
 22441   0076D2  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22442   0076D4  0100               	movlb	0	; () banked
 22443   0076D6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22444   0076D8  0101               	movlb	1	; () banked
 22445   0076DA  6FC0               	movwf	(??_processEnumeration+3)& (0+255),b
 22446   0076DC  51C0               	movf	(??_processEnumeration+3)& (0+255),w,b
 22447   0076DE  11BF               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22448   0076E0  E106               	bnz	u23270
 22449   0076E2  0ED5               	movlw	213
 22450   0076E4  5DBD               	subwf	??_processEnumeration& (0+255),w,b
 22451   0076E6  0E30               	movlw	48
 22452   0076E8  59BE               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22453   0076EA  A0D8               	btfss	status,0,c
 22454   0076EC  0012               	return	
 22455   0076EE                     u23270:
 22456                           
 22457                           ; BSR set to: 1
 22458                           ;../../VLCBlib_PIC/can18_ecan.c: 910:                 for (i=1; i< (0x7F/8)+1; i++) {
 22459   0076EE  0E01               	movlw	1
 22460   0076F0  6FC3               	movwf	processEnumeration@i& (0+255),b
 22461   0076F2                     l22228:
 22462                           
 22463                           ; BSR set to: 1
 22464                           ;../../VLCBlib_PIC/can18_ecan.c: 911:                     enumerationResults[i] = 0;
 22465   0076F2  0E34               	movlw	low _enumerationResults
 22466   0076F4  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22467   0076F6  6ED9               	movwf	fsr2l,c
 22468   0076F8  6ADA               	clrf	fsr2h,c
 22469   0076FA  0E02               	movlw	high _enumerationResults
 22470   0076FC  22DA               	addwfc	fsr2h,f,c
 22471   0076FE  6ADF               	clrf	indf2,c
 22472                           
 22473                           ; BSR set to: 1
 22474                           ;../../VLCBlib_PIC/can18_ecan.c: 912:                 }
 22475   007700  2BC3               	incf	processEnumeration@i& (0+255),f,b
 22476                           
 22477                           ; BSR set to: 1
 22478   007702  0E0F               	movlw	15
 22479   007704  65C3               	cpfsgt	processEnumeration@i& (0+255),b
 22480   007706  D7F5               	goto	l22228
 22481                           
 22482                           ; BSR set to: 1
 22483                           ;../../VLCBlib_PIC/can18_ecan.c: 913:                 enumerationResults[0] = 1;
 22484   007708  0E01               	movlw	1
 22485   00770A  0102               	movlb	2	; () banked
 22486   00770C  6F34               	movwf	_enumerationResults& (0+255),b
 22487                           
 22488                           ;../../VLCBlib_PIC/can18_ecan.c: 915:                 enumerationState = ENUMERATION_IN_
      +                          PROGRESS;
 22489   00770E  0E02               	movlw	2
 22490   007710  0100               	movlb	0	; () banked
 22491   007712  6FC1               	movwf	_enumerationState& (0+255),b
 22492                           
 22493                           ; BSR set to: 0
 22494                           ;../../VLCBlib_PIC/can18_ecan.c: 916:                 enumerationStartTime.val = tickGet
      +                          ();
 22495   007714  EC6B  F05A         	call	_tickGet	;wreg free
 22496   007718  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 22497   00771C  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 22498   007720  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 22499   007724  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 22500                           
 22501                           ;../../VLCBlib_PIC/can18_ecan.c: 918:                 canDiagnostics[0x0D].asUint++;
 22502   007728  0101               	movlb	1	; () banked
 22503   00772A  4B81               	infsnz	(_canDiagnostics+26)& (0+255),f,b
 22504   00772C  2B82               	incf	(_canDiagnostics+27)& (0+255),f,b
 22505                           
 22506                           ; BSR set to: 1
 22507                           ;../../VLCBlib_PIC/can18_ecan.c: 920:                 TXB1CONbits.TXREQ = 1;
 22508   00772E  010F               	movlb	15	; () banked
 22509   007730  8710               	bsf	16,3,b	;volatile
 22510   007732  0012               	return	
 22511   007734                     l22242:
 22512                           
 22513                           ; BSR set to: 1
 22514                           ;../../VLCBlib_PIC/can18_ecan.c: 924:             if ((tickGet() - enumerationStartTime.
      +                          val) > (62500/10) ) {
 22515   007734  EC6B  F05A         	call	_tickGet	;wreg free
 22516   007738  502B               	movf	_enumerationStartTime^0,w,c
 22517   00773A  0100               	movlb	0	; () banked
 22518   00773C  5D8D               	subwf	?_tickGet& (0+255),w,b
 22519   00773E  0101               	movlb	1	; () banked
 22520   007740  6FBD               	movwf	??_processEnumeration& (0+255),b
 22521   007742  502C               	movf	(_enumerationStartTime+1)^0,w,c
 22522   007744  0100               	movlb	0	; () banked
 22523   007746  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 22524   007748  0101               	movlb	1	; () banked
 22525   00774A  6FBE               	movwf	(??_processEnumeration+1)& (0+255),b
 22526   00774C  502D               	movf	(_enumerationStartTime+2)^0,w,c
 22527   00774E  0100               	movlb	0	; () banked
 22528   007750  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 22529   007752  0101               	movlb	1	; () banked
 22530   007754  6FBF               	movwf	(??_processEnumeration+2)& (0+255),b
 22531   007756  502E               	movf	(_enumerationStartTime+3)^0,w,c
 22532   007758  0100               	movlb	0	; () banked
 22533   00775A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 22534   00775C  0101               	movlb	1	; () banked
 22535   00775E  6FC0               	movwf	(??_processEnumeration+3)& (0+255),b
 22536   007760  51C0               	movf	(??_processEnumeration+3)& (0+255),w,b
 22537   007762  11BF               	iorwf	(??_processEnumeration+2)& (0+255),w,b
 22538   007764  E106               	bnz	u23290
 22539   007766  0E6B               	movlw	107
 22540   007768  5DBD               	subwf	??_processEnumeration& (0+255),w,b
 22541   00776A  0E18               	movlw	24
 22542   00776C  59BE               	subwfb	(??_processEnumeration+1)& (0+255),w,b
 22543   00776E  A0D8               	btfss	status,0,c
 22544   007770  0012               	return	
 22545   007772                     u23290:
 22546                           
 22547                           ; BSR set to: 1
 22548                           ;../../VLCBlib_PIC/can18_ecan.c: 928:                 for (i=0; (enumerationResults[i] =
      +                          = 0xFF) && (i < (0x7F/8)+1); i++) {
 22549   007772  0E00               	movlw	0
 22550   007774  6FC3               	movwf	processEnumeration@i& (0+255),b
 22551   007776  D001               	goto	l22248
 22552   007778                     l22246:
 22553                           
 22554                           ; BSR set to: 1
 22555                           ;../../VLCBlib_PIC/can18_ecan.c: 930:                 }
 22556   007778  2BC3               	incf	processEnumeration@i& (0+255),f,b
 22557   00777A                     l22248:
 22558                           
 22559                           ; BSR set to: 1
 22560   00777A  0E34               	movlw	low _enumerationResults
 22561   00777C  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22562   00777E  6ED9               	movwf	fsr2l,c
 22563   007780  6ADA               	clrf	fsr2h,c
 22564   007782  0E02               	movlw	high _enumerationResults
 22565   007784  22DA               	addwfc	fsr2h,f,c
 22566   007786  28DE               	incf	postinc2,w,c
 22567   007788  A4D8               	btfss	status,2,c
 22568   00778A  D003               	goto	u23310
 22569                           
 22570                           ; BSR set to: 1
 22571   00778C  0E0F               	movlw	15
 22572   00778E  65C3               	cpfsgt	processEnumeration@i& (0+255),b
 22573   007790  D7F3               	goto	l22246
 22574   007792                     u23310:
 22575                           
 22576                           ; BSR set to: 1
 22577                           ;../../VLCBlib_PIC/can18_ecan.c: 931:                 if ((enumResult = enumerationResul
      +                          ts[i]) != 0xFF) {
 22578   007792  0E34               	movlw	low _enumerationResults
 22579   007794  25C3               	addwf	processEnumeration@i& (0+255),w,b
 22580   007796  6ED9               	movwf	fsr2l,c
 22581   007798  6ADA               	clrf	fsr2h,c
 22582   00779A  0E02               	movlw	high _enumerationResults
 22583   00779C  22DA               	addwfc	fsr2h,f,c
 22584   00779E  50DF               	movf	indf2,w,c
 22585   0077A0  6FC1               	movwf	processEnumeration@enumResult& (0+255),b
 22586   0077A2  29C1               	incf	processEnumeration@enumResult& (0+255),w,b
 22587   0077A4  B4D8               	btfsc	status,2,c
 22588   0077A6  D017               	goto	l22270
 22589                           
 22590                           ; BSR set to: 1
 22591                           ;../../VLCBlib_PIC/can18_ecan.c: 932:                     for (newCanId = i*8; (enumResu
      +                          lt & 0x01); newCanId++) {
 22592   0077A8  51C3               	movf	processEnumeration@i& (0+255),w,b
 22593   0077AA  0D08               	mullw	8
 22594   0077AC  CFF3 F1C2          	movff	prodl,processEnumeration@newCanId
 22595   0077B0  D003               	goto	l22260
 22596   0077B2                     l22256:
 22597                           
 22598                           ; BSR set to: 1
 22599                           ;../../VLCBlib_PIC/can18_ecan.c: 933:                         enumResult >>= 1;
 22600   0077B2  90D8               	bcf	status,0,c
 22601   0077B4  33C1               	rrcf	processEnumeration@enumResult& (0+255),f,b
 22602                           
 22603                           ; BSR set to: 1
 22604                           ;../../VLCBlib_PIC/can18_ecan.c: 934:                     }
 22605   0077B6  2BC2               	incf	processEnumeration@newCanId& (0+255),f,b
 22606   0077B8                     l22260:
 22607                           
 22608                           ; BSR set to: 1
 22609   0077B8  B1C1               	btfsc	processEnumeration@enumResult& (0+255),0,b
 22610   0077BA  D7FB               	goto	l22256
 22611                           
 22612                           ; BSR set to: 1
 22613                           ;../../VLCBlib_PIC/can18_ecan.c: 935:                     if ((newCanId >= 1) && (newCan
      +                          Id <= 99)) {
 22614   0077BC  51C2               	movf	processEnumeration@newCanId& (0+255),w,b
 22615   0077BE  B4D8               	btfsc	status,2,c
 22616   0077C0  D00A               	goto	l22270
 22617                           
 22618                           ; BSR set to: 1
 22619   0077C2  0E64               	movlw	100
 22620   0077C4  61C2               	cpfslt	processEnumeration@newCanId& (0+255),b
 22621   0077C6  D007               	goto	l22270
 22622                           
 22623                           ; BSR set to: 1
 22624                           ;../../VLCBlib_PIC/can18_ecan.c: 936:                         canId = newCanId;
 22625   0077C8  C1C2  F0C3         	movff	processEnumeration@newCanId,_canId
 22626                           
 22627                           ; BSR set to: 1
 22628                           ;../../VLCBlib_PIC/can18_ecan.c: 937:                         setNewCanId(canId);
 22629   0077CC  0100               	movlb	0	; () banked
 22630   0077CE  51C3               	movf	_canId& (0+255),w,b
 22631   0077D0  EC63  F058         	call	_setNewCanId
 22632                           
 22633                           ;../../VLCBlib_PIC/can18_ecan.c: 938:                     } else {
 22634   0077D4  D004               	goto	l22278
 22635   0077D6                     l22270:
 22636                           
 22637                           ; BSR set to: 1
 22638                           ;../../VLCBlib_PIC/can18_ecan.c: 940:                         canDiagnostics[0x10].asUin
      +                          t++;
 22639   0077D6  4B87               	infsnz	(_canDiagnostics+32)& (0+255),f,b
 22640   0077D8  2B88               	incf	(_canDiagnostics+33)& (0+255),f,b
 22641                           
 22642                           ; BSR set to: 1
 22643                           ;../../VLCBlib_PIC/can18_ecan.c: 941:                         updateModuleErrorStatus();
 22644   0077DA  EC62  F062         	call	_updateModuleErrorStatus	;wreg free
 22645   0077DE                     l22278:
 22646                           
 22647                           ;../../VLCBlib_PIC/can18_ecan.c: 953:                 enumerationState = NO_ENUMERATION;
 22648   0077DE  0E00               	movlw	0
 22649   0077E0  0100               	movlb	0	; () banked
 22650   0077E2  6FC1               	movwf	_enumerationState& (0+255),b
 22651   0077E4  0012               	return	
 22652   0077E6                     l22282:
 22653   0077E6  0100               	movlb	0	; () banked
 22654   0077E8  51C1               	movf	_enumerationState& (0+255),w,b
 22655   0077EA  0101               	movlb	1	; () banked
 22656   0077EC  6FBD               	movwf	??_processEnumeration& (0+255),b
 22657   0077EE  6BBE               	clrf	(??_processEnumeration+1)& (0+255),b
 22658                           
 22659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 22660                           ; Switch size 1, requested type "simple"
 22661                           ; Number of cases is 1, Range of values is 0 to 0
 22662                           ; switch strategies available:
 22663                           ; Name         Instructions Cycles
 22664                           ; simple_byte            4     3 (average)
 22665                           ;	Chosen strategy is simple_byte
 22666   0077F0  51BE               	movf	(??_processEnumeration+1)& (0+255),w,b
 22667   0077F2  0A00               	xorlw	0	; case 0
 22668   0077F4  A4D8               	btfss	status,2,c
 22669   0077F6  0012               	return	
 22670                           
 22671                           ; BSR set to: 1
 22672                           ; Switch size 1, requested type "simple"
 22673                           ; Number of cases is 2, Range of values is 1 to 2
 22674                           ; switch strategies available:
 22675                           ; Name         Instructions Cycles
 22676                           ; simple_byte            7     4 (average)
 22677                           ;	Chosen strategy is simple_byte
 22678   0077F8  51BD               	movf	??_processEnumeration& (0+255),w,b
 22679   0077FA  0A01               	xorlw	1	; case 1
 22680   0077FC  B4D8               	btfsc	status,2,c
 22681   0077FE  D758               	goto	l22220
 22682   007800  0A03               	xorlw	3	; case 2
 22683   007802  A4D8               	btfss	status,2,c
 22684   007804  0012               	return	
 22685   007806  D796               	goto	l22242
 22686   007808                     __end_of_processEnumeration:
 22687                           	callstack 0
 22688                           
 22689 ;; *************** function _setNewCanId *****************
 22690 ;; Defined at:
 22691 ;;		line 966 in file "../../VLCBlib_PIC/can18_ecan.c"
 22692 ;; Parameters:    Size  Location     Type
 22693 ;;  newCanId        1    wreg     unsigned char 
 22694 ;; Auto vars:     Size  Location     Type
 22695 ;;  newCanId        1    2[BANK1 ] unsigned char 
 22696 ;; Return value:  Size  Location     Type
 22697 ;;                  1    wreg      enum E13091
 22698 ;; Registers used:
 22699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22700 ;; Tracked objects:
 22701 ;;		On entry : 0/0
 22702 ;;		On exit  : 0/0
 22703 ;;		Unchanged: 0/0
 22704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22706 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22708 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22709 ;;Total ram usage:        1 bytes
 22710 ;; Hardware stack levels used: 1
 22711 ;; Hardware stack levels required when called: 18
 22712 ;; This function calls:
 22713 ;;		_writeNVM
 22714 ;; This function is called by:
 22715 ;;		_processEnumeration
 22716 ;; This function uses a non-reentrant model
 22717 ;;
 22718                           
 22719                           	psect	text80
 22720   00B0C6                     __ptext80:
 22721                           	callstack 0
 22722   00B0C6                     _setNewCanId:
 22723                           	callstack 9
 22724                           
 22725                           ;incstack = 0
 22726                           ;setNewCanId@newCanId stored from wreg
 22727   00B0C6  0101               	movlb	1	; () banked
 22728   00B0C8  6FBC               	movwf	setNewCanId@newCanId& (0+255),b
 22729                           
 22730                           ;../../VLCBlib_PIC/can18_ecan.c: 967:     if ((newCanId >= 1) && (newCanId <= 99)) {
 22731   00B0CA  0101               	movlb	1	; () banked
 22732   00B0CC  51BC               	movf	setNewCanId@newCanId& (0+255),w,b
 22733   00B0CE  B4D8               	btfsc	status,2,c
 22734   00B0D0  0012               	return	
 22735                           
 22736                           ; BSR set to: 1
 22737   00B0D2  0E64               	movlw	100
 22738   00B0D4  61BC               	cpfslt	setNewCanId@newCanId& (0+255),b
 22739   00B0D6  0012               	return	
 22740                           
 22741                           ; BSR set to: 1
 22742                           ;../../VLCBlib_PIC/can18_ecan.c: 968:         canId = newCanId;
 22743   00B0D8  C1BC  F0C3         	movff	setNewCanId@newCanId,_canId
 22744                           
 22745                           ; BSR set to: 1
 22746                           ;../../VLCBlib_PIC/can18_ecan.c: 971:         TXB1SIDH &= 0b11110000;
 22747   00B0DC  0EF0               	movlw	240
 22748   00B0DE  010F               	movlb	15	; () banked
 22749   00B0E0  1711               	andwf	17,f,b	;volatile
 22750                           
 22751                           ;../../VLCBlib_PIC/can18_ecan.c: 972:         TXB1SIDH |= ((newCanId & 0x78) >>3);
 22752   00B0E2  0101               	movlb	1	; () banked
 22753   00B0E4  39BC               	swapf	setNewCanId@newCanId& (0+255),w,b
 22754   00B0E6  46E8               	rlncf	wreg,f,c
 22755   00B0E8  0B1F               	andlw	31
 22756   00B0EA  0B0F               	andlw	15
 22757   00B0EC  010F               	movlb	15	; () banked
 22758   00B0EE  1311               	iorwf	17,f,b	;volatile
 22759                           
 22760                           ; BSR set to: 15
 22761                           ;../../VLCBlib_PIC/can18_ecan.c: 973:         TXB1SIDL = TXB0SIDL;
 22762   00B0F0  CF22 FF12          	movff	3874,3858	;volatile
 22763                           
 22764                           ;../../VLCBlib_PIC/can18_ecan.c: 975:         TXB2SIDH &= 0b11110000;
 22765   00B0F4  0EF0               	movlw	240
 22766   00B0F6  1701               	andwf	1,f,b	;volatile
 22767                           
 22768                           ;../../VLCBlib_PIC/can18_ecan.c: 976:         TXB2SIDH |= ((newCanId & 0x78) >>3);
 22769   00B0F8  0101               	movlb	1	; () banked
 22770   00B0FA  39BC               	swapf	setNewCanId@newCanId& (0+255),w,b
 22771   00B0FC  46E8               	rlncf	wreg,f,c
 22772   00B0FE  0B1F               	andlw	31
 22773   00B100  0B0F               	andlw	15
 22774   00B102  010F               	movlb	15	; () banked
 22775   00B104  1301               	iorwf	1,f,b	;volatile
 22776                           
 22777                           ; BSR set to: 15
 22778                           ;../../VLCBlib_PIC/can18_ecan.c: 977:         TXB2SIDL = TXB0SIDL;
 22779   00B106  CF22 FF02          	movff	3874,3842	;volatile
 22780                           
 22781                           ; BSR set to: 15
 22782                           ;../../VLCBlib_PIC/can18_ecan.c: 979:         writeNVM(EEPROM_NVM_TYPE, 0x3FE, newCanId 
      +                          );
 22783   00B10A  0EFE               	movlw	254
 22784   00B10C  0100               	movlb	0	; () banked
 22785   00B10E  6FA4               	movwf	writeNVM@index& (0+255),b
 22786   00B110  0E03               	movlw	3
 22787   00B112  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 22788   00B114  0E00               	movlw	0
 22789   00B116  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 22790   00B118  C1BC  F0A7         	movff	setNewCanId@newCanId,writeNVM@value
 22791   00B11C  0E00               	movlw	0
 22792   00B11E  ECE7  F05B         	call	_writeNVM
 22793                           
 22794                           ;../../VLCBlib_PIC/can18_ecan.c: 981:         canDiagnostics[0x0F].asUint++;
 22795   00B122  0101               	movlb	1	; () banked
 22796   00B124  4B85               	infsnz	(_canDiagnostics+30)& (0+255),f,b
 22797   00B126  2B86               	incf	(_canDiagnostics+31)& (0+255),f,b
 22798                           
 22799                           ; BSR set to: 1
 22800   00B128  0012               	return		;funcret
 22801   00B12A                     __end_of_setNewCanId:
 22802                           	callstack 0
 22803                           
 22804 ;; *************** function _pop *****************
 22805 ;; Defined at:
 22806 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 22807 ;; Parameters:    Size  Location     Type
 22808 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 22809 ;;		 -> txQueue(5), rxQueue(5), 
 22810 ;; Auto vars:     Size  Location     Type
 22811 ;;  ret             2   52[BANK0 ] PTR struct Message
 22812 ;;		 -> txBuffers(72), rxBuffers(288), 
 22813 ;; Return value:  Size  Location     Type
 22814 ;;                  2   45[BANK0 ] PTR struct Message
 22815 ;; Registers used:
 22816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22817 ;; Tracked objects:
 22818 ;;		On entry : 0/0
 22819 ;;		On exit  : 0/0
 22820 ;;		Unchanged: 0/0
 22821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22823 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22824 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22825 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22826 ;;Total ram usage:        9 bytes
 22827 ;; Hardware stack levels used: 1
 22828 ;; Hardware stack levels required when called: 12
 22829 ;; This function calls:
 22830 ;;		Nothing
 22831 ;; This function is called by:
 22832 ;;		_canReceiveMessage
 22833 ;; This function uses a non-reentrant model
 22834 ;;
 22835                           
 22836                           	psect	text81
 22837   009B80                     __ptext81:
 22838                           	callstack 0
 22839   009B80                     _pop:
 22840                           	callstack 16
 22841                           
 22842                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 22843                           
 22844                           ; BSR set to: 1
 22845                           ;incstack = 0
 22846   009B80  0100               	movlb	0	; () banked
 22847   009B82  518D               	movf	pop@q& (0+255),w,b
 22848   009B84  6ED9               	movwf	fsr2l,c
 22849   009B86  6ADA               	clrf	fsr2h,c
 22850   009B88  0E02               	movlw	2
 22851   009B8A  26D9               	addwf	fsr2l,f,c
 22852   009B8C  518D               	movf	pop@q& (0+255),w,b
 22853   009B8E  6EE1               	movwf	fsr1l,c
 22854   009B90  6AE2               	clrf	fsr1h,c
 22855   009B92  0E03               	movlw	3
 22856   009B94  26E1               	addwf	fsr1l,f,c
 22857   009B96  50DE               	movf	postinc2,w,c
 22858   009B98  18E6               	xorwf	postinc1,w,c
 22859   009B9A  A4D8               	btfss	status,2,c
 22860   009B9C  D005               	goto	l22110
 22861                           
 22862                           ; BSR set to: 0
 22863                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 22864   009B9E  0E00               	movlw	0
 22865   009BA0  6F8D               	movwf	?_pop& (0+255),b
 22866   009BA2  0E00               	movlw	0
 22867   009BA4  6F8E               	movwf	(?_pop+1)& (0+255),b
 22868   009BA6  0012               	return	
 22869   009BA8                     l22110:
 22870                           
 22871                           ; BSR set to: 0
 22872                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 22873   009BA8  518D               	movf	pop@q& (0+255),w,b
 22874   009BAA  6ED9               	movwf	fsr2l,c
 22875   009BAC  6ADA               	clrf	fsr2h,c
 22876   009BAE  0E02               	movlw	2
 22877   009BB0  26D9               	addwf	fsr2l,f,c
 22878   009BB2  50DF               	movf	indf2,w,c
 22879   009BB4  6F8F               	movwf	??_pop& (0+255),b
 22880   009BB6  518F               	movf	??_pop& (0+255),w,b
 22881   009BB8  0D09               	mullw	9
 22882   009BBA  CFF3 F090          	movff	prodl,??_pop+1
 22883   009BBE  CFF4 F091          	movff	prodh,??_pop+2
 22884   009BC2  518D               	movf	pop@q& (0+255),w,b
 22885   009BC4  6ED9               	movwf	fsr2l,c
 22886   009BC6  6ADA               	clrf	fsr2h,c
 22887   009BC8  CFDE F092          	movff	postinc2,??_pop+3
 22888   009BCC  CFDD F093          	movff	postdec2,??_pop+4
 22889   009BD0  5190               	movf	(??_pop+1)& (0+255),w,b
 22890   009BD2  2592               	addwf	(??_pop+3)& (0+255),w,b
 22891   009BD4  6F94               	movwf	pop@ret& (0+255),b
 22892   009BD6  5191               	movf	(??_pop+2)& (0+255),w,b
 22893   009BD8  2193               	addwfc	(??_pop+4)& (0+255),w,b
 22894   009BDA  6F95               	movwf	(pop@ret+1)& (0+255),b
 22895                           
 22896                           ; BSR set to: 0
 22897   009BDC  518D               	movf	pop@q& (0+255),w,b
 22898   009BDE  6ED9               	movwf	fsr2l,c
 22899   009BE0  6ADA               	clrf	fsr2h,c
 22900   009BE2  0E02               	movlw	2
 22901   009BE4  26D9               	addwf	fsr2l,f,c
 22902   009BE6  2ADF               	incf	indf2,f,c
 22903                           
 22904                           ; BSR set to: 0
 22905                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 22906   009BE8  518D               	movf	pop@q& (0+255),w,b
 22907   009BEA  6ED9               	movwf	fsr2l,c
 22908   009BEC  6ADA               	clrf	fsr2h,c
 22909   009BEE  0E04               	movlw	4
 22910   009BF0  26D9               	addwf	fsr2l,f,c
 22911   009BF2  518D               	movf	pop@q& (0+255),w,b
 22912   009BF4  6EE1               	movwf	fsr1l,c
 22913   009BF6  6AE2               	clrf	fsr1h,c
 22914   009BF8  0E02               	movlw	2
 22915   009BFA  26E1               	addwf	fsr1l,f,c
 22916   009BFC  50DE               	movf	postinc2,w,c
 22917   009BFE  5CE6               	subwf	postinc1,w,c
 22918   009C00  A0D8               	btfss	status,0,c
 22919   009C02  D006               	goto	l22118
 22920                           
 22921                           ; BSR set to: 0
 22922   009C04  518D               	movf	pop@q& (0+255),w,b
 22923   009C06  6ED9               	movwf	fsr2l,c
 22924   009C08  6ADA               	clrf	fsr2h,c
 22925   009C0A  0E02               	movlw	2
 22926   009C0C  26D9               	addwf	fsr2l,f,c
 22927   009C0E  6ADF               	clrf	indf2,c
 22928   009C10                     l22118:
 22929                           
 22930                           ; BSR set to: 0
 22931                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 22932   009C10  C094  F08D         	movff	pop@ret,?_pop
 22933   009C14  C095  F08E         	movff	pop@ret+1,?_pop+1
 22934                           
 22935                           ; BSR set to: 0
 22936   009C18  0012               	return		;funcret
 22937   009C1A                     __end_of_pop:
 22938                           	callstack 0
 22939                           
 22940 ;; *************** function _memcpy *****************
 22941 ;; Defined at:
 22942 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
 22943 ;; Parameters:    Size  Location     Type
 22944 ;;  d1              2   45[BANK0 ] PTR void 
 22945 ;;		 -> poll@m(9), 
 22946 ;;  s1              2   47[BANK0 ] PTR const void 
 22947 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22948 ;;  n               2   49[BANK0 ] unsigned int 
 22949 ;; Auto vars:     Size  Location     Type
 22950 ;;  s               2   54[BANK0 ] PTR const unsigned char 
 22951 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 22952 ;;  d               2   52[BANK0 ] PTR unsigned char 
 22953 ;;		 -> poll@m(9), 
 22954 ;;  tmp             1   51[BANK0 ] unsigned char 
 22955 ;; Return value:  Size  Location     Type
 22956 ;;                  2   45[BANK0 ] PTR void 
 22957 ;; Registers used:
 22958 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22959 ;; Tracked objects:
 22960 ;;		On entry : 0/0
 22961 ;;		On exit  : 0/0
 22962 ;;		Unchanged: 0/0
 22963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22964 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22965 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22967 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22968 ;;Total ram usage:       11 bytes
 22969 ;; Hardware stack levels used: 1
 22970 ;; Hardware stack levels required when called: 12
 22971 ;; This function calls:
 22972 ;;		Nothing
 22973 ;; This function is called by:
 22974 ;;		_canReceiveMessage
 22975 ;; This function uses a non-reentrant model
 22976 ;;
 22977                           
 22978                           	psect	text82
 22979   00BAB0                     __ptext82:
 22980                           	callstack 0
 22981   00BAB0                     _memcpy:
 22982                           	callstack 16
 22983                           
 22984                           ; BSR set to: 0
 22985                           ;incstack = 0
 22986   00BAB0  C08F  F096         	movff	memcpy@s1,memcpy@s
 22987   00BAB4  C090  F097         	movff	memcpy@s1+1,memcpy@s+1
 22988   00BAB8  C08D  F094         	movff	memcpy@d1,memcpy@d
 22989   00BABC  C08E  F095         	movff	memcpy@d1+1,memcpy@d+1
 22990   00BAC0  D010               	goto	l22298
 22991   00BAC2                     l22290:
 22992                           
 22993                           ; BSR set to: 0
 22994   00BAC2  C096  FFD9         	movff	memcpy@s,fsr2l
 22995   00BAC6  C097  FFDA         	movff	memcpy@s+1,fsr2h
 22996   00BACA  50DF               	movf	indf2,w,c
 22997   00BACC  6F93               	movwf	memcpy@tmp& (0+255),b
 22998                           
 22999                           ; BSR set to: 0
 23000   00BACE  4B96               	infsnz	memcpy@s& (0+255),f,b
 23001   00BAD0  2B97               	incf	(memcpy@s+1)& (0+255),f,b
 23002                           
 23003                           ; BSR set to: 0
 23004   00BAD2  C094  FFD9         	movff	memcpy@d,fsr2l
 23005   00BAD6  C095  FFDA         	movff	memcpy@d+1,fsr2h
 23006   00BADA  C093  FFDF         	movff	memcpy@tmp,indf2
 23007                           
 23008                           ; BSR set to: 0
 23009   00BADE  4B94               	infsnz	memcpy@d& (0+255),f,b
 23010   00BAE0  2B95               	incf	(memcpy@d+1)& (0+255),f,b
 23011   00BAE2                     l22298:
 23012   00BAE2  0100               	movlb	0	; () banked
 23013   00BAE4  0791               	decf	memcpy@n& (0+255),f,b
 23014   00BAE6  A0D8               	btfss	status,0,c
 23015   00BAE8  0792               	decf	(memcpy@n+1)& (0+255),f,b
 23016   00BAEA  2991               	incf	memcpy@n& (0+255),w,b
 23017   00BAEC  E1EA               	bnz	l22290
 23018   00BAEE  2992               	incf	(memcpy@n+1)& (0+255),w,b
 23019   00BAF0  B4D8               	btfsc	status,2,c
 23020   00BAF2  0012               	return	
 23021   00BAF4  D7E6               	goto	l22290
 23022   00BAF6                     __end_of_memcpy:
 23023                           	callstack 0
 23024                           
 23025 ;; *************** function _handleSelfEnumeration *****************
 23026 ;; Defined at:
 23027 ;;		line 816 in file "../../VLCBlib_PIC/can18_ecan.c"
 23028 ;; Parameters:    Size  Location     Type
 23029 ;;  p               2   55[BANK0 ] PTR unsigned char 
 23030 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23031 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23032 ;;		 -> NULL(0), 
 23033 ;; Auto vars:     Size  Location     Type
 23034 ;;  incomingCanI    1   61[BANK0 ] unsigned char 
 23035 ;; Return value:  Size  Location     Type
 23036 ;;                  1    wreg      enum E13071
 23037 ;; Registers used:
 23038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23039 ;; Tracked objects:
 23040 ;;		On entry : 0/0
 23041 ;;		On exit  : 0/0
 23042 ;;		Unchanged: 0/0
 23043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23044 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23046 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23047 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23048 ;;Total ram usage:        7 bytes
 23049 ;; Hardware stack levels used: 1
 23050 ;; Hardware stack levels required when called: 13
 23051 ;; This function calls:
 23052 ;;		_tickGet
 23053 ;; This function is called by:
 23054 ;;		_canReceiveMessage
 23055 ;; This function uses a non-reentrant model
 23056 ;;
 23057                           
 23058                           	psect	text83
 23059   00805E                     __ptext83:
 23060                           	callstack 0
 23061   00805E                     _handleSelfEnumeration:
 23062                           	callstack 15
 23063                           
 23064                           ;../../VLCBlib_PIC/can18_ecan.c: 817:     uint8_t incomingCanId;;../../VLCBlib_PIC/can18
      +                          _ecan.c: 821:     if (p[5] & 0x40 ) {
 23065                           
 23066                           ; BSR set to: 0
 23067                           ;incstack = 0
 23068   00805E  0100               	movlb	0	; () banked
 23069   008060  EE20 F005          	lfsr	2,5
 23070   008064  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23071   008066  26D9               	addwf	fsr2l,f,c
 23072   008068  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23073   00806A  22DA               	addwfc	fsr2h,f,c
 23074   00806C  ACDF               	btfss	indf2,6,c
 23075   00806E  D00E               	goto	l22310
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;../../VLCBlib_PIC/can18_ecan.c: 823:         TXB2CONbits.TXREQ = 1;
 23079   008070  010F               	movlb	15	; () banked
 23080   008072  8700               	bsf	0,3,b	;volatile
 23081                           
 23082                           ; BSR set to: 15
 23083                           ;../../VLCBlib_PIC/can18_ecan.c: 824:         enumerationStartTime.val = tickGet();
 23084   008074  EC6B  F05A         	call	_tickGet	;wreg free
 23085   008078  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 23086   00807C  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 23087   008080  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 23088   008084  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 23089                           
 23090                           ;../../VLCBlib_PIC/can18_ecan.c: 825:         return NOT_RECEIVED;
 23091   008088  0E00               	movlw	0
 23092   00808A  0012               	return	
 23093   00808C                     l22310:
 23094                           
 23095                           ; BSR set to: 0
 23096                           ;../../VLCBlib_PIC/can18_ecan.c: 827:     incomingCanId = (p[1] << 3) + (p[2] >> 5) & 0x
      +                          7f;
 23097   00808C  EE20 F002          	lfsr	2,2
 23098   008090  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23099   008092  26D9               	addwf	fsr2l,f,c
 23100   008094  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23101   008096  22DA               	addwfc	fsr2h,f,c
 23102   008098  50DF               	movf	indf2,w,c
 23103   00809A  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23104   00809C  0E05               	movlw	5
 23105   00809E  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23106   0080A0                     u23385:
 23107   0080A0  90D8               	bcf	status,0,c
 23108   0080A2  3399               	rrcf	??_handleSelfEnumeration& (0+255),f,b
 23109   0080A4  2F9A               	decfsz	(??_handleSelfEnumeration+1)& (0+255),f,b
 23110   0080A6  D7FC               	goto	u23385
 23111   0080A8  EE20 F001          	lfsr	2,1
 23112   0080AC  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23113   0080AE  26D9               	addwf	fsr2l,f,c
 23114   0080B0  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23115   0080B2  22DA               	addwfc	fsr2h,f,c
 23116   0080B4  50DF               	movf	indf2,w,c
 23117   0080B6  0D08               	mullw	8
 23118   0080B8  50F3               	movf	243,w,c
 23119   0080BA  2599               	addwf	??_handleSelfEnumeration& (0+255),w,b
 23120   0080BC  0B7F               	andlw	127
 23121   0080BE  6F9D               	movwf	handleSelfEnumeration@incomingCanId& (0+255),b
 23122                           
 23123                           ; BSR set to: 0
 23124                           ;../../VLCBlib_PIC/can18_ecan.c: 829:     if ((enumerationState == ENUMERATION_IN_PROGRE
      +                          SS) || ((p[5]&0x0F) == 0)) {
 23125   0080C0  0E02               	movlw	2
 23126   0080C2  19C1               	xorwf	_enumerationState& (0+255),w,b
 23127   0080C4  B4D8               	btfsc	status,2,c
 23128   0080C6  D00C               	goto	u23400
 23129                           
 23130                           ; BSR set to: 0
 23131   0080C8  EE20 F005          	lfsr	2,5
 23132   0080CC  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23133   0080CE  26D9               	addwf	fsr2l,f,c
 23134   0080D0  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23135   0080D2  22DA               	addwfc	fsr2h,f,c
 23136   0080D4  50DF               	movf	indf2,w,c
 23137   0080D6  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23138   0080D8  0E0F               	movlw	15
 23139   0080DA  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23140   0080DC  A4D8               	btfss	status,2,c
 23141   0080DE  D01B               	goto	l22318
 23142   0080E0                     u23400:
 23143                           
 23144                           ; BSR set to: 0
 23145                           ;../../VLCBlib_PIC/can18_ecan.c: 830:         ( enumerationResults[incomingCanId>>3] |= 
      +                          ( 1<<(incomingCanId & 0x07) ) );
 23146   0080E0  C09D  F099         	movff	handleSelfEnumeration@incomingCanId,??_handleSelfEnumeration
 23147   0080E4  0E07               	movlw	7
 23148   0080E6  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23149   0080E8  0E01               	movlw	1
 23150   0080EA  6F9A               	movwf	(??_handleSelfEnumeration+1)& (0+255),b
 23151   0080EC  2B99               	incf	??_handleSelfEnumeration& (0+255),f,b
 23152   0080EE  D002               	goto	u23414
 23153   0080F0                     u23415:
 23154   0080F0  90D8               	bcf	status,0,c
 23155   0080F2  379A               	rlcf	(??_handleSelfEnumeration+1)& (0+255),f,b
 23156   0080F4                     u23414:
 23157   0080F4  2F99               	decfsz	??_handleSelfEnumeration& (0+255),f,b
 23158   0080F6  D7FC               	goto	u23415
 23159   0080F8  0100               	movlb	0	; () banked
 23160   0080FA  399D               	swapf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23161   0080FC  46E8               	rlncf	wreg,f,c
 23162   0080FE  0B1F               	andlw	31
 23163   008100  6F9B               	movwf	(??_handleSelfEnumeration+2)& (0+255),b
 23164   008102  6B9C               	clrf	(??_handleSelfEnumeration+3)& (0+255),b
 23165   008104  0E34               	movlw	low _enumerationResults
 23166   008106  259B               	addwf	(??_handleSelfEnumeration+2)& (0+255),w,b
 23167   008108  6ED9               	movwf	fsr2l,c
 23168   00810A  0E02               	movlw	high _enumerationResults
 23169   00810C  219C               	addwfc	(??_handleSelfEnumeration+3)& (0+255),w,b
 23170   00810E  6EDA               	movwf	fsr2h,c
 23171   008110  519A               	movf	(??_handleSelfEnumeration+1)& (0+255),w,b
 23172   008112  12DF               	iorwf	indf2,f,c
 23173                           
 23174                           ;../../VLCBlib_PIC/can18_ecan.c: 831:     } else {
 23175   008114  D016               	goto	l22328
 23176   008116                     l22318:
 23177                           
 23178                           ; BSR set to: 0
 23179                           ;../../VLCBlib_PIC/can18_ecan.c: 832:         if ((enumerationState == NO_ENUMERATION) &
      +                          & (incomingCanId == canId)) {
 23180   008116  51C1               	movf	_enumerationState& (0+255),w,b
 23181   008118  A4D8               	btfss	status,2,c
 23182   00811A  D013               	goto	l22328
 23183                           
 23184                           ; BSR set to: 0
 23185   00811C  51C3               	movf	_canId& (0+255),w,b
 23186   00811E  199D               	xorwf	handleSelfEnumeration@incomingCanId& (0+255),w,b
 23187   008120  A4D8               	btfss	status,2,c
 23188   008122  D00F               	goto	l22328
 23189                           
 23190                           ; BSR set to: 0
 23191                           ;../../VLCBlib_PIC/can18_ecan.c: 835:             enumerationState = ENUMERATION_REQUIRE
      +                          D;
 23192   008124  0E01               	movlw	1
 23193   008126  6FC1               	movwf	_enumerationState& (0+255),b
 23194                           
 23195                           ; BSR set to: 0
 23196                           ;../../VLCBlib_PIC/can18_ecan.c: 836:             canDiagnostics[0x0E].asUint++;
 23197   008128  0101               	movlb	1	; () banked
 23198   00812A  4B83               	infsnz	(_canDiagnostics+28)& (0+255),f,b
 23199   00812C  2B84               	incf	(_canDiagnostics+29)& (0+255),f,b
 23200                           
 23201                           ; BSR set to: 1
 23202                           ;../../VLCBlib_PIC/can18_ecan.c: 837:             enumerationStartTime.val = tickGet();
 23203   00812E  EC6B  F05A         	call	_tickGet	;wreg free
 23204   008132  C08D  F02B         	movff	?_tickGet,_enumerationStartTime
 23205   008136  C08E  F02C         	movff	?_tickGet+1,_enumerationStartTime+1
 23206   00813A  C08F  F02D         	movff	?_tickGet+2,_enumerationStartTime+2
 23207   00813E  C090  F02E         	movff	?_tickGet+3,_enumerationStartTime+3
 23208   008142                     l22328:
 23209                           
 23210                           ;../../VLCBlib_PIC/can18_ecan.c: 841:     return (p[5] & 0x0F) ? RECEIVED:NOT_RECEIVED;
 23211   008142  0100               	movlb	0	; () banked
 23212   008144  EE20 F005          	lfsr	2,5
 23213   008148  5197               	movf	handleSelfEnumeration@p& (0+255),w,b
 23214   00814A  26D9               	addwf	fsr2l,f,c
 23215   00814C  5198               	movf	(handleSelfEnumeration@p+1)& (0+255),w,b
 23216   00814E  22DA               	addwfc	fsr2h,f,c
 23217   008150  50DF               	movf	indf2,w,c
 23218   008152  6F99               	movwf	??_handleSelfEnumeration& (0+255),b
 23219   008154  0E0F               	movlw	15
 23220   008156  1799               	andwf	??_handleSelfEnumeration& (0+255),f,b
 23221   008158  B4D8               	btfsc	status,2,c
 23222   00815A  D002               	goto	u23440
 23223   00815C  0E01               	movlw	1
 23224   00815E  0012               	return	
 23225   008160                     u23440:
 23226   008160  0E00               	movlw	0
 23227   008162  0012               	return		;funcret
 23228   008164                     __end_of_handleSelfEnumeration:
 23229                           	callstack 0
 23230                           
 23231 ;; *************** function _getNumRxBuffersInUse *****************
 23232 ;; Defined at:
 23233 ;;		line 470 in file "../../VLCBlib_PIC/can18_ecan.c"
 23234 ;; Parameters:    Size  Location     Type
 23235 ;;		None
 23236 ;; Auto vars:     Size  Location     Type
 23237 ;;  ptr             2   50[BANK0 ] PTR unsigned char 
 23238 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 23239 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 23240 ;;		 -> NULL(0), 
 23241 ;;  i               1   53[BANK0 ] unsigned char 
 23242 ;;  no              1   52[BANK0 ] unsigned char 
 23243 ;; Return value:  Size  Location     Type
 23244 ;;                  1    wreg      unsigned char 
 23245 ;; Registers used:
 23246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23247 ;; Tracked objects:
 23248 ;;		On entry : 0/0
 23249 ;;		On exit  : 0/0
 23250 ;;		Unchanged: 0/0
 23251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23253 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23255 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23256 ;;Total ram usage:        4 bytes
 23257 ;; Hardware stack levels used: 1
 23258 ;; Hardware stack levels required when called: 13
 23259 ;; This function calls:
 23260 ;;		_getBufferPointer
 23261 ;;		_quantity
 23262 ;; This function is called by:
 23263 ;;		_canGetDiagnostic
 23264 ;;		_canReceiveMessage
 23265 ;; This function uses a non-reentrant model
 23266 ;;
 23267                           
 23268                           	psect	text84
 23269   00BC2C                     __ptext84:
 23270                           	callstack 0
 23271   00BC2C                     _getNumRxBuffersInUse:
 23272                           	callstack 13
 23273                           
 23274                           ;../../VLCBlib_PIC/can18_ecan.c: 471:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 47
      +                          2:     uint8_t i;;../../VLCBlib_PIC/can18_ecan.c: 473:     uint8_t * ptr;;../../VLCBlib_
      +                          PIC/can18_ecan.c: 475:     no = quantity(&rxQueue);
 23275                           
 23276                           ;incstack = 0
 23277   00BC2C  0E4D               	movlw	low _rxQueue
 23278   00BC2E  0100               	movlb	0	; () banked
 23279   00BC30  6F8D               	movwf	quantity@q& (0+255),b
 23280   00BC32  EC89  F05E         	call	_quantity	;wreg free
 23281   00BC36  0100               	movlb	0	; () banked
 23282   00BC38  6F94               	movwf	getNumRxBuffersInUse@no& (0+255),b
 23283                           
 23284                           ; BSR set to: 0
 23285                           ;../../VLCBlib_PIC/can18_ecan.c: 476:     for (i=0; i<8; i++) {
 23286   00BC3A  0E00               	movlw	0
 23287   00BC3C  6F95               	movwf	getNumRxBuffersInUse@i& (0+255),b
 23288   00BC3E                     l20108:
 23289                           
 23290                           ; BSR set to: 0
 23291                           ;../../VLCBlib_PIC/can18_ecan.c: 477:         ptr = getBufferPointer(i);
 23292   00BC3E  5195               	movf	getNumRxBuffersInUse@i& (0+255),w,b
 23293   00BC40  EC3D  F04F         	call	_getBufferPointer
 23294   00BC44  C08D  F092         	movff	?_getBufferPointer,getNumRxBuffersInUse@ptr
 23295   00BC48  C08E  F093         	movff	?_getBufferPointer+1,getNumRxBuffersInUse@ptr+1
 23296                           
 23297                           ;../../VLCBlib_PIC/can18_ecan.c: 478:         if (ptr[0] & 0x80) {
 23298   00BC4C  C092  FFD9         	movff	getNumRxBuffersInUse@ptr,fsr2l
 23299   00BC50  C093  FFDA         	movff	getNumRxBuffersInUse@ptr+1,fsr2h
 23300   00BC54  0100               	movlb	0	; () banked
 23301   00BC56  BEDF               	btfsc	indf2,7,c
 23302                           
 23303                           ; BSR set to: 0
 23304                           ;../../VLCBlib_PIC/can18_ecan.c: 479:             no++;
 23305   00BC58  2B94               	incf	getNumRxBuffersInUse@no& (0+255),f,b
 23306                           
 23307                           ; BSR set to: 0
 23308                           ;../../VLCBlib_PIC/can18_ecan.c: 481:     }
 23309                           
 23310                           ;../../VLCBlib_PIC/can18_ecan.c: 480:         }
 23311   00BC5A  2B95               	incf	getNumRxBuffersInUse@i& (0+255),f,b
 23312                           
 23313                           ; BSR set to: 0
 23314   00BC5C  0E07               	movlw	7
 23315   00BC5E  6595               	cpfsgt	getNumRxBuffersInUse@i& (0+255),b
 23316   00BC60  D7EE               	goto	l20108
 23317                           
 23318                           ; BSR set to: 0
 23319                           ;../../VLCBlib_PIC/can18_ecan.c: 482:     return no;
 23320   00BC62  5194               	movf	getNumRxBuffersInUse@no& (0+255),w,b
 23321                           
 23322                           ; BSR set to: 0
 23323   00BC64  0012               	return		;funcret
 23324   00BC66                     __end_of_getNumRxBuffersInUse:
 23325                           	callstack 0
 23326                           
 23327 ;; *************** function _getBufferPointer *****************
 23328 ;; Defined at:
 23329 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 23330 ;; Parameters:    Size  Location     Type
 23331 ;;  b               1    wreg     unsigned char 
 23332 ;; Auto vars:     Size  Location     Type
 23333 ;;  b               1   47[BANK0 ] unsigned char 
 23334 ;; Return value:  Size  Location     Type
 23335 ;;                  2   45[BANK0 ] PTR unsigned char 
 23336 ;; Registers used:
 23337 ;;		wreg, status,2, status,0
 23338 ;; Tracked objects:
 23339 ;;		On entry : 0/0
 23340 ;;		On exit  : 0/0
 23341 ;;		Unchanged: 0/0
 23342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23343 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23346 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23347 ;;Total ram usage:        3 bytes
 23348 ;; Hardware stack levels used: 1
 23349 ;; Hardware stack levels required when called: 12
 23350 ;; This function calls:
 23351 ;;		Nothing
 23352 ;; This function is called by:
 23353 ;;		_getNumRxBuffersInUse
 23354 ;;		_canReceiveMessage
 23355 ;; This function uses a non-reentrant model
 23356 ;;
 23357                           
 23358                           	psect	text85
 23359   009E7A                     __ptext85:
 23360                           	callstack 0
 23361   009E7A                     _getBufferPointer:
 23362                           	callstack 13
 23363                           
 23364                           ; BSR set to: 0
 23365                           ;incstack = 0
 23366                           ;getBufferPointer@b stored from wreg
 23367   009E7A  0100               	movlb	0	; () banked
 23368   009E7C  6F8F               	movwf	getBufferPointer@b& (0+255),b
 23369                           
 23370                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 23371   009E7E  D02D               	goto	l19760
 23372   009E80                     l19722:
 23373                           
 23374                           ; BSR set to: 0
 23375                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 23376   009E80  0E60               	movlw	96
 23377   009E82  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23378   009E84  0E0F               	movlw	15
 23379   009E86  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23380   009E88  0012               	return	
 23381   009E8A                     l19726:
 23382                           
 23383                           ; BSR set to: 0
 23384                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 23385   009E8A  0E30               	movlw	48
 23386   009E8C  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23387   009E8E  0E0F               	movlw	15
 23388   009E90  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23389   009E92  0012               	return	
 23390   009E94                     l19730:
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 23394   009E94  0E80               	movlw	128
 23395   009E96  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23396   009E98  0E0E               	movlw	14
 23397   009E9A  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23398   009E9C  0012               	return	
 23399   009E9E                     l19734:
 23400                           
 23401                           ; BSR set to: 0
 23402                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 23403   009E9E  0E90               	movlw	144
 23404   009EA0  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23405   009EA2  0E0E               	movlw	14
 23406   009EA4  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23407   009EA6  0012               	return	
 23408   009EA8                     l19738:
 23409                           
 23410                           ; BSR set to: 0
 23411                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 23412   009EA8  0EA0               	movlw	160
 23413   009EAA  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23414   009EAC  0E0E               	movlw	14
 23415   009EAE  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23416   009EB0  0012               	return	
 23417   009EB2                     l19742:
 23418                           
 23419                           ; BSR set to: 0
 23420                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 23421   009EB2  0EB0               	movlw	176
 23422   009EB4  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23423   009EB6  0E0E               	movlw	14
 23424   009EB8  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23425   009EBA  0012               	return	
 23426   009EBC                     l19746:
 23427                           
 23428                           ; BSR set to: 0
 23429                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 23430   009EBC  0EC0               	movlw	192
 23431   009EBE  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23432   009EC0  0E0E               	movlw	14
 23433   009EC2  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23434   009EC4  0012               	return	
 23435   009EC6                     l19750:
 23436                           
 23437                           ; BSR set to: 0
 23438                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 23439   009EC6  0ED0               	movlw	208
 23440   009EC8  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23441   009ECA  0E0E               	movlw	14
 23442   009ECC  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23443   009ECE  0012               	return	
 23444   009ED0                     l19754:
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 23448   009ED0  0E00               	movlw	0
 23449   009ED2  6F8D               	movwf	?_getBufferPointer& (0+255),b
 23450   009ED4  0E00               	movlw	0
 23451   009ED6  6F8E               	movwf	(?_getBufferPointer+1)& (0+255),b
 23452   009ED8  0012               	return	
 23453   009EDA                     l19760:
 23454   009EDA  0100               	movlb	0	; () banked
 23455   009EDC  518F               	movf	getBufferPointer@b& (0+255),w,b
 23456                           
 23457                           ; Switch size 1, requested type "simple"
 23458                           ; Number of cases is 8, Range of values is 0 to 7
 23459                           ; switch strategies available:
 23460                           ; Name         Instructions Cycles
 23461                           ; simple_byte           25    13 (average)
 23462                           ;	Chosen strategy is simple_byte
 23463   009EDE  0A00               	xorlw	0	; case 0
 23464   009EE0  B4D8               	btfsc	status,2,c
 23465   009EE2  D7CE               	goto	l19722
 23466   009EE4  0A01               	xorlw	1	; case 1
 23467   009EE6  B4D8               	btfsc	status,2,c
 23468   009EE8  D7D0               	goto	l19726
 23469   009EEA  0A03               	xorlw	3	; case 2
 23470   009EEC  B4D8               	btfsc	status,2,c
 23471   009EEE  D7D2               	goto	l19730
 23472   009EF0  0A01               	xorlw	1	; case 3
 23473   009EF2  B4D8               	btfsc	status,2,c
 23474   009EF4  D7D4               	goto	l19734
 23475   009EF6  0A07               	xorlw	7	; case 4
 23476   009EF8  B4D8               	btfsc	status,2,c
 23477   009EFA  D7D6               	goto	l19738
 23478   009EFC  0A01               	xorlw	1	; case 5
 23479   009EFE  B4D8               	btfsc	status,2,c
 23480   009F00  D7D8               	goto	l19742
 23481   009F02  0A03               	xorlw	3	; case 6
 23482   009F04  B4D8               	btfsc	status,2,c
 23483   009F06  D7DA               	goto	l19746
 23484   009F08  0A01               	xorlw	1	; case 7
 23485   009F0A  B4D8               	btfsc	status,2,c
 23486   009F0C  D7DC               	goto	l19750
 23487   009F0E  D7E0               	goto	l19754
 23488   009F10                     __end_of_getBufferPointer:
 23489                           	callstack 0
 23490                           
 23491 ;; *************** function _sendMessage7 *****************
 23492 ;; Defined at:
 23493 ;;		line 1209 in file "../../VLCBlib_PIC/vlcb.c"
 23494 ;; Parameters:    Size  Location     Type
 23495 ;;  opc             1    wreg     enum E12392
 23496 ;;  data1           1    8[BANK1 ] unsigned char 
 23497 ;;  data2           1    9[BANK1 ] unsigned char 
 23498 ;;  data3           1   10[BANK1 ] unsigned char 
 23499 ;;  data4           1   11[BANK1 ] unsigned char 
 23500 ;;  data5           1   12[BANK1 ] unsigned char 
 23501 ;;  data6           1   13[BANK1 ] unsigned char 
 23502 ;;  data7           1   14[BANK1 ] unsigned char 
 23503 ;; Auto vars:     Size  Location     Type
 23504 ;;  opc             1   70[BANK0 ] enum E12392
 23505 ;; Return value:  Size  Location     Type
 23506 ;;                  1    wreg      void 
 23507 ;; Registers used:
 23508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23509 ;; Tracked objects:
 23510 ;;		On entry : 0/0
 23511 ;;		On exit  : 0/0
 23512 ;;		Unchanged: 0/0
 23513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23514 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23517 ;;      Totals:         0       1       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23518 ;;Total ram usage:        8 bytes
 23519 ;; Hardware stack levels used: 1
 23520 ;; Hardware stack levels required when called: 16
 23521 ;; This function calls:
 23522 ;;		_sendMessage
 23523 ;; This function is called by:
 23524 ;;		_ackEventProcessMessage
 23525 ;;		_mnsProcessMessage
 23526 ;;		_nerdCallback
 23527 ;; This function uses a non-reentrant model
 23528 ;;
 23529                           
 23530                           	psect	text86
 23531   00BEA0                     __ptext86:
 23532                           	callstack 0
 23533   00BEA0                     _sendMessage7:
 23534                           	callstack 11
 23535                           
 23536                           ; BSR set to: 0
 23537                           ;incstack = 0
 23538                           ;sendMessage7@opc stored from wreg
 23539   00BEA0  0100               	movlb	0	; () banked
 23540   00BEA2  6FA6               	movwf	sendMessage7@opc& (0+255),b
 23541                           
 23542                           ;../../VLCBlib_PIC/vlcb.c: 1210:     sendMessage(opc, 8, data1, data2, data3, data4, dat
      +                          a5, data6, data7);
 23543   00BEA4  0E08               	movlw	8
 23544   00BEA6  0101               	movlb	1	; () banked
 23545   00BEA8  6FBA               	movwf	sendMessage@len& (0+255),b
 23546   00BEAA  C1C2  F1BB         	movff	sendMessage7@data1,sendMessage@data1
 23547   00BEAE  C1C3  F1BC         	movff	sendMessage7@data2,sendMessage@data2
 23548   00BEB2  C1C4  F1BD         	movff	sendMessage7@data3,sendMessage@data3
 23549   00BEB6  C1C5  F1BE         	movff	sendMessage7@data4,sendMessage@data4
 23550   00BEBA  C1C6  F1BF         	movff	sendMessage7@data5,sendMessage@data5
 23551   00BEBE  C1C7  F1C0         	movff	sendMessage7@data6,sendMessage@data6
 23552   00BEC2  C1C8  F1C1         	movff	sendMessage7@data7,sendMessage@data7
 23553   00BEC6  0100               	movlb	0	; () banked
 23554   00BEC8  51A6               	movf	sendMessage7@opc& (0+255),w,b
 23555   00BECA  EC2A  F054         	call	_sendMessage
 23556   00BECE  0012               	return		;funcret
 23557   00BED0                     __end_of_sendMessage7:
 23558                           	callstack 0
 23559                           
 23560 ;; *************** function _isConsumedEvent *****************
 23561 ;; Defined at:
 23562 ;;		line 382 in file "../event_consumerDualActionQueue.c"
 23563 ;; Parameters:    Size  Location     Type
 23564 ;;  eventIndex      1    wreg     unsigned char 
 23565 ;; Auto vars:     Size  Location     Type
 23566 ;;  eventIndex      1   70[BANK0 ] unsigned char 
 23567 ;;  ev              1   71[BANK0 ] unsigned char 
 23568 ;; Return value:  Size  Location     Type
 23569 ;;                  1    wreg      unsigned char 
 23570 ;; Registers used:
 23571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23572 ;; Tracked objects:
 23573 ;;		On entry : 0/0
 23574 ;;		On exit  : 0/0
 23575 ;;		Unchanged: 0/0
 23576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23578 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23580 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23581 ;;Total ram usage:        2 bytes
 23582 ;; Hardware stack levels used: 1
 23583 ;; Hardware stack levels required when called: 16
 23584 ;; This function calls:
 23585 ;;		_getEv
 23586 ;; This function is called by:
 23587 ;;		_ackEventProcessMessage
 23588 ;; This function uses a non-reentrant model
 23589 ;;
 23590                           
 23591                           	psect	text87
 23592   00C244                     __ptext87:
 23593                           	callstack 0
 23594   00C244                     _isConsumedEvent:
 23595                           	callstack 12
 23596                           
 23597                           ;incstack = 0
 23598                           ;isConsumedEvent@eventIndex stored from wreg
 23599   00C244  0100               	movlb	0	; () banked
 23600   00C246  6FA6               	movwf	isConsumedEvent@eventIndex& (0+255),b
 23601                           
 23602                           ;../event_consumerDualActionQueue.c: 383:     uint8_t ev;;../event_consumerDualActionQue
      +                          ue.c: 384:     ev = (uint8_t)getEv(eventIndex, 1);
 23603   00C248  0E01               	movlw	1
 23604   00C24A  0100               	movlb	0	; () banked
 23605   00C24C  6F9D               	movwf	getEv@evNum& (0+255),b
 23606   00C24E  51A6               	movf	isConsumedEvent@eventIndex& (0+255),w,b
 23607   00C250  EC04  F03C         	call	_getEv
 23608   00C254  0100               	movlb	0	; () banked
 23609   00C256  519D               	movf	?_getEv& (0+255),w,b
 23610   00C258  6FA7               	movwf	isConsumedEvent@ev& (0+255),b
 23611                           
 23612                           ; BSR set to: 0
 23613                           ;../event_consumerDualActionQueue.c: 385:     return (ev != 0);
 23614   00C25A  51A7               	movf	isConsumedEvent@ev& (0+255),w,b
 23615   00C25C  B4D8               	btfsc	status,2,c
 23616   00C25E  D002               	goto	u21820
 23617   00C260  0E01               	movlw	1
 23618   00C262  0012               	return	
 23619   00C264                     u21820:
 23620   00C264  0E00               	movlw	0
 23621                           
 23622                           ; BSR set to: 0
 23623   00C266  0012               	return		;funcret
 23624   00C268                     __end_of_isConsumedEvent:
 23625                           	callstack 0
 23626                           
 23627 ;; *************** function _findService *****************
 23628 ;; Defined at:
 23629 ;;		line 807 in file "../../VLCBlib_PIC/vlcb.c"
 23630 ;; Parameters:    Size  Location     Type
 23631 ;;  id              1    wreg     unsigned char 
 23632 ;; Auto vars:     Size  Location     Type
 23633 ;;  id              1   49[BANK0 ] unsigned char 
 23634 ;;  i               1   50[BANK0 ] unsigned char 
 23635 ;; Return value:  Size  Location     Type
 23636 ;;                  2   45[BANK0 ] PTR const struct Service
 23637 ;; Registers used:
 23638 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23639 ;; Tracked objects:
 23640 ;;		On entry : 0/0
 23641 ;;		On exit  : 0/0
 23642 ;;		Unchanged: 0/0
 23643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23644 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23645 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23646 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23647 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23648 ;;Total ram usage:        6 bytes
 23649 ;; Hardware stack levels used: 1
 23650 ;; Hardware stack levels required when called: 12
 23651 ;; This function calls:
 23652 ;;		Nothing
 23653 ;; This function is called by:
 23654 ;;		_ackEventProcessMessage
 23655 ;; This function uses a non-reentrant model
 23656 ;;
 23657                           
 23658                           	psect	text88
 23659   009CB4                     __ptext88:
 23660                           	callstack 0
 23661   009CB4                     _findService:
 23662                           	callstack 16
 23663                           
 23664                           ; BSR set to: 0
 23665                           ;incstack = 0
 23666                           ;findService@id stored from wreg
 23667   009CB4  0100               	movlb	0	; () banked
 23668   009CB6  6F91               	movwf	findService@id& (0+255),b
 23669                           
 23670                           ;../../VLCBlib_PIC/vlcb.c: 808:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 809:     for (i
      +                          =0; i<9; i++) {
 23671   009CB8  0E00               	movlw	0
 23672   009CBA  0100               	movlb	0	; () banked
 23673   009CBC  6F92               	movwf	findService@i& (0+255),b
 23674   009CBE                     l21844:
 23675                           
 23676                           ; BSR set to: 0
 23677                           ;../../VLCBlib_PIC/vlcb.c: 810:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 23678   009CBE  5192               	movf	findService@i& (0+255),w,b
 23679   009CC0  0D02               	mullw	2
 23680   009CC2  0E75               	movlw	low _services
 23681   009CC4  24F3               	addwf	243,w,c
 23682   009CC6  6EF6               	movwf	tblptrl,c
 23683   009CC8  0EEE               	movlw	high _services
 23684   009CCA  20F4               	addwfc	244,w,c
 23685   009CCC  6EF7               	movwf	tblptrh,c
 23686   009CCE                     	if	1	;There are 3 active tblptr bytes
 23687   009CCE  6AF8               	clrf	tblptru,c
 23688   009CD0  0E00               	movlw	low (__mediumconst shr (0+16))
 23689   009CD2  22F8               	addwfc	tblptru,f,c
 23690   009CD4                     	endif
 23691   009CD4  0009               	tblrd		*+
 23692   009CD6  50F5               	movf	tablat,w,c
 23693   009CD8  0009               	tblrd		*+
 23694   009CDA  10F5               	iorwf	tablat,w,c
 23695   009CDC  B4D8               	btfsc	status,2,c
 23696   009CDE  D02D               	goto	l21852
 23697                           
 23698                           ; BSR set to: 0
 23699   009CE0  5192               	movf	findService@i& (0+255),w,b
 23700   009CE2  0D02               	mullw	2
 23701   009CE4  0E75               	movlw	low _services
 23702   009CE6  24F3               	addwf	243,w,c
 23703   009CE8  6EF6               	movwf	tblptrl,c
 23704   009CEA  0EEE               	movlw	high _services
 23705   009CEC  20F4               	addwfc	244,w,c
 23706   009CEE  6EF7               	movwf	tblptrh,c
 23707   009CF0                     	if	1	;There are 3 active tblptr bytes
 23708   009CF0  6AF8               	clrf	tblptru,c
 23709   009CF2  0E00               	movlw	low (__mediumconst shr (0+16))
 23710   009CF4  22F8               	addwfc	tblptru,f,c
 23711   009CF6                     	endif
 23712   009CF6  0009               	tblrd		*+
 23713   009CF8  CFF5 F08F          	movff	tablat,??_findService
 23714   009CFC  0009               	tblrd		*+
 23715   009CFE  CFF5 F090          	movff	tablat,??_findService+1
 23716   009D02  C08F  FFF6         	movff	??_findService,tblptrl
 23717   009D06  C090  FFF7         	movff	??_findService+1,tblptrh
 23718   009D0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 23719   009D0A  6AF8               	clrf	tblptru,c
 23720   009D0C                     	endif
 23721   009D0C                     	if	0	;tblptru may be non-zero
 23722   009D0C                     	endif
 23723   009D0C  0008               	tblrd		*
 23724   009D0E  50F5               	movf	tablat,w,c
 23725   009D10  1991               	xorwf	findService@id& (0+255),w,b
 23726   009D12  A4D8               	btfss	status,2,c
 23727   009D14  D012               	goto	l21852
 23728                           
 23729                           ; BSR set to: 0
 23730                           ;../../VLCBlib_PIC/vlcb.c: 811:             return services[i];
 23731   009D16  5192               	movf	findService@i& (0+255),w,b
 23732   009D18  0D02               	mullw	2
 23733   009D1A  0E75               	movlw	low _services
 23734   009D1C  24F3               	addwf	243,w,c
 23735   009D1E  6EF6               	movwf	tblptrl,c
 23736   009D20  0EEE               	movlw	high _services
 23737   009D22  20F4               	addwfc	244,w,c
 23738   009D24  6EF7               	movwf	tblptrh,c
 23739   009D26                     	if	1	;There are 3 active tblptr bytes
 23740   009D26  6AF8               	clrf	tblptru,c
 23741   009D28  0E00               	movlw	low (__mediumconst shr (0+16))
 23742   009D2A  22F8               	addwfc	tblptru,f,c
 23743   009D2C                     	endif
 23744   009D2C  0009               	tblrd		*+
 23745   009D2E  CFF5 F08D          	movff	tablat,?_findService
 23746   009D32  000A               	tblrd		*-
 23747   009D34  CFF5 F08E          	movff	tablat,?_findService+1
 23748   009D38  0012               	return	
 23749   009D3A                     l21852:
 23750                           
 23751                           ; BSR set to: 0
 23752                           ;../../VLCBlib_PIC/vlcb.c: 813:     }
 23753   009D3A  2B92               	incf	findService@i& (0+255),f,b
 23754                           
 23755                           ; BSR set to: 0
 23756   009D3C  0E08               	movlw	8
 23757   009D3E  6592               	cpfsgt	findService@i& (0+255),b
 23758   009D40  D7BE               	goto	l21844
 23759                           
 23760                           ; BSR set to: 0
 23761                           ;../../VLCBlib_PIC/vlcb.c: 814:     return ((void*)0);
 23762   009D42  0E00               	movlw	0
 23763   009D44  6F8D               	movwf	?_findService& (0+255),b
 23764   009D46  0E00               	movlw	0
 23765   009D48  6F8E               	movwf	(?_findService+1)& (0+255),b
 23766                           
 23767                           ; BSR set to: 0
 23768   009D4A  0012               	return		;funcret
 23769   009D4C                     __end_of_findService:
 23770                           	callstack 0
 23771                           
 23772 ;; *************** function _ackEventCheckLen *****************
 23773 ;; Defined at:
 23774 ;;		line 184 in file "../../VLCBlib_PIC/event_acknowledge.c"
 23775 ;; Parameters:    Size  Location     Type
 23776 ;;  m               2   17[BANK1 ] PTR struct Message
 23777 ;;		 -> poll@m(9), 
 23778 ;;  needed          1   19[BANK1 ] unsigned char 
 23779 ;; Auto vars:     Size  Location     Type
 23780 ;;		None
 23781 ;; Return value:  Size  Location     Type
 23782 ;;                  1    wreg      enum E12793
 23783 ;; Registers used:
 23784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23785 ;; Tracked objects:
 23786 ;;		On entry : 0/0
 23787 ;;		On exit  : 0/0
 23788 ;;		Unchanged: 0/0
 23789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23790 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23793 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23794 ;;Total ram usage:        3 bytes
 23795 ;; Hardware stack levels used: 1
 23796 ;; Hardware stack levels required when called: 18
 23797 ;; This function calls:
 23798 ;;		_checkLen
 23799 ;; This function is called by:
 23800 ;;		_ackEventProcessMessage
 23801 ;; This function uses a non-reentrant model
 23802 ;;
 23803                           
 23804                           	psect	text89
 23805   00C416                     __ptext89:
 23806                           	callstack 0
 23807   00C416                     _ackEventCheckLen:
 23808                           	callstack 10
 23809                           
 23810                           ;../../VLCBlib_PIC/event_acknowledge.c: 185:     return checkLen(m, needed, SERVICE_ID_E
      +                          VENTACK);
 23811                           
 23812                           ; BSR set to: 0
 23813                           ;incstack = 0
 23814   00C416  C1CB  F1C7         	movff	ackEventCheckLen@m,checkLen@m
 23815   00C41A  C1CC  F1C8         	movff	ackEventCheckLen@m+1,checkLen@m+1
 23816   00C41E  C1CD  F1C9         	movff	ackEventCheckLen@needed,checkLen@needed
 23817   00C422  0E09               	movlw	9
 23818   00C424  0101               	movlb	1	; () banked
 23819   00C426  6FCA               	movwf	checkLen@service& (0+255),b
 23820   00C428  ECAC  F053         	call	_checkLen	;wreg free
 23821   00C42C  0012               	return		;funcret
 23822   00C42E                     __end_of_ackEventCheckLen:
 23823                           	callstack 0
 23824                           
 23825 ;; *************** function _checkLen *****************
 23826 ;; Defined at:
 23827 ;;		line 1095 in file "../../VLCBlib_PIC/vlcb.c"
 23828 ;; Parameters:    Size  Location     Type
 23829 ;;  m               2   13[BANK1 ] PTR struct Message
 23830 ;;		 -> poll@m(9), 
 23831 ;;  needed          1   15[BANK1 ] unsigned char 
 23832 ;;  service         1   16[BANK1 ] unsigned char 
 23833 ;; Auto vars:     Size  Location     Type
 23834 ;;		None
 23835 ;; Return value:  Size  Location     Type
 23836 ;;                  1    wreg      enum E12793
 23837 ;; Registers used:
 23838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23839 ;; Tracked objects:
 23840 ;;		On entry : 0/0
 23841 ;;		On exit  : 0/0
 23842 ;;		Unchanged: 0/0
 23843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23844 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23847 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23848 ;;Total ram usage:        5 bytes
 23849 ;; Hardware stack levels used: 1
 23850 ;; Hardware stack levels required when called: 17
 23851 ;; This function calls:
 23852 ;;		_sendMessage5
 23853 ;; This function is called by:
 23854 ;;		_ackEventCheckLen
 23855 ;;		_teachCheckLen
 23856 ;; This function uses a non-reentrant model
 23857 ;;
 23858                           
 23859                           	psect	text90
 23860   00A758                     __ptext90:
 23861                           	callstack 0
 23862   00A758                     _checkLen:
 23863                           	callstack 10
 23864                           
 23865                           ;../../VLCBlib_PIC/vlcb.c: 1096:     if (m->len < needed) {
 23866                           
 23867                           ;incstack = 0
 23868   00A758  C1C7  FFD9         	movff	checkLen@m,fsr2l
 23869   00A75C  C1C8  FFDA         	movff	checkLen@m+1,fsr2h
 23870   00A760  0101               	movlb	1	; () banked
 23871   00A762  51C9               	movf	checkLen@needed& (0+255),w,b
 23872   00A764  5CDE               	subwf	postinc2,w,c
 23873   00A766  B0D8               	btfsc	status,0,c
 23874   00A768  D034               	goto	l20780
 23875                           
 23876                           ; BSR set to: 1
 23877                           ;../../VLCBlib_PIC/vlcb.c: 1098:         if (m->len > 2) {
 23878   00A76A  C1C7  FFD9         	movff	checkLen@m,fsr2l
 23879   00A76E  C1C8  FFDA         	movff	checkLen@m+1,fsr2h
 23880   00A772  0E02               	movlw	2
 23881   00A774  64DF               	cpfsgt	indf2,c
 23882   00A776  D02B               	goto	l20776
 23883                           
 23884                           ; BSR set to: 1
 23885                           ;../../VLCBlib_PIC/vlcb.c: 1099:             if ((m->bytes[0] == nn.bytes.hi) && (m->byt
      +                          es[1] == nn.bytes.lo)) {
 23886   00A778  EE20 F002          	lfsr	2,2
 23887   00A77C  51C7               	movf	checkLen@m& (0+255),w,b
 23888   00A77E  26D9               	addwf	fsr2l,f,c
 23889   00A780  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 23890   00A782  22DA               	addwfc	fsr2h,f,c
 23891   00A784  50DE               	movf	postinc2,w,c
 23892   00A786  0100               	movlb	0	; () banked
 23893   00A788  19C0               	xorwf	(_nn+1)& (0+255),w,b
 23894   00A78A  A4D8               	btfss	status,2,c
 23895   00A78C  D020               	goto	l20776
 23896                           
 23897                           ; BSR set to: 0
 23898   00A78E  0101               	movlb	1	; () banked
 23899   00A790  EE20 F003          	lfsr	2,3
 23900   00A794  51C7               	movf	checkLen@m& (0+255),w,b
 23901   00A796  26D9               	addwf	fsr2l,f,c
 23902   00A798  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 23903   00A79A  22DA               	addwfc	fsr2h,f,c
 23904   00A79C  0100               	movlb	0	; () banked
 23905   00A79E  51BF               	movf	_nn& (0+255),w,b
 23906   00A7A0  18DE               	xorwf	postinc2,w,c
 23907   00A7A2  A4D8               	btfss	status,2,c
 23908   00A7A4  D014               	goto	l20776
 23909                           
 23910                           ; BSR set to: 0
 23911                           ;../../VLCBlib_PIC/vlcb.c: 1100:                 sendMessage5(OPC_GRSP, nn.bytes.hi, nn.
      +                          bytes.lo, m->opc, service, CMDERR_INV_CMD);
 23912   00A7A6  C0C0  F1C2         	movff	_nn+1,sendMessage5@data1
 23913   00A7AA  C0BF  F1C3         	movff	_nn,sendMessage5@data2
 23914   00A7AE  0101               	movlb	1	; () banked
 23915   00A7B0  EE20 F001          	lfsr	2,1
 23916   00A7B4  51C7               	movf	checkLen@m& (0+255),w,b
 23917   00A7B6  26D9               	addwf	fsr2l,f,c
 23918   00A7B8  51C8               	movf	(checkLen@m+1)& (0+255),w,b
 23919   00A7BA  22DA               	addwfc	fsr2h,f,c
 23920   00A7BC  50DF               	movf	indf2,w,c
 23921   00A7BE  6FC4               	movwf	sendMessage5@data3& (0+255),b
 23922   00A7C0  C1CA  F1C5         	movff	checkLen@service,sendMessage5@data4
 23923   00A7C4  0E01               	movlw	1
 23924   00A7C6  6FC6               	movwf	sendMessage5@data5& (0+255),b
 23925   00A7C8  0EAF               	movlw	175
 23926   00A7CA  EC68  F05F         	call	_sendMessage5
 23927   00A7CE                     l20776:
 23928                           
 23929                           ;../../VLCBlib_PIC/vlcb.c: 1104:         return PROCESSED;
 23930   00A7CE  0E01               	movlw	1
 23931   00A7D0  0012               	return	
 23932   00A7D2                     l20780:
 23933                           
 23934                           ; BSR set to: 1
 23935                           ;../../VLCBlib_PIC/vlcb.c: 1106:     return NOT_PROCESSED;
 23936   00A7D2  0E00               	movlw	0
 23937   00A7D4  0012               	return		;funcret
 23938   00A7D6                     __end_of_checkLen:
 23939                           	callstack 0
 23940                           
 23941 ;; *************** function _sendMessage5 *****************
 23942 ;; Defined at:
 23943 ;;		line 1180 in file "../../VLCBlib_PIC/vlcb.c"
 23944 ;; Parameters:    Size  Location     Type
 23945 ;;  opc             1    wreg     enum E12392
 23946 ;;  data1           1    8[BANK1 ] unsigned char 
 23947 ;;  data2           1    9[BANK1 ] unsigned char 
 23948 ;;  data3           1   10[BANK1 ] unsigned char 
 23949 ;;  data4           1   11[BANK1 ] unsigned char 
 23950 ;;  data5           1   12[BANK1 ] unsigned char 
 23951 ;; Auto vars:     Size  Location     Type
 23952 ;;  opc             1   70[BANK0 ] enum E12392
 23953 ;; Return value:  Size  Location     Type
 23954 ;;                  1    wreg      void 
 23955 ;; Registers used:
 23956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 23957 ;; Tracked objects:
 23958 ;;		On entry : 0/0
 23959 ;;		On exit  : 0/0
 23960 ;;		Unchanged: 0/0
 23961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23962 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23965 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23966 ;;Total ram usage:        6 bytes
 23967 ;; Hardware stack levels used: 1
 23968 ;; Hardware stack levels required when called: 16
 23969 ;; This function calls:
 23970 ;;		_sendMessage
 23971 ;; This function is called by:
 23972 ;;		_mnsProcessMessage
 23973 ;;		_mnsPoll
 23974 ;;		_mnsTRserviceDiscoveryCallback
 23975 ;;		_nvProcessMessage
 23976 ;;		_checkLen
 23977 ;;		_canProcessMessage
 23978 ;;		_teachProcessMessage
 23979 ;;		_teachCheckLen
 23980 ;;		_doNenrd
 23981 ;;		_doNnclr
 23982 ;;		_doEvlrn
 23983 ;;		_doReval
 23984 ;;		_doEvuln
 23985 ;;		_doReqev
 23986 ;; This function uses a non-reentrant model
 23987 ;;
 23988                           
 23989                           	psect	text91
 23990   00BED0                     __ptext91:
 23991                           	callstack 0
 23992   00BED0                     _sendMessage5:
 23993                           	callstack 11
 23994                           
 23995                           ;incstack = 0
 23996                           ;sendMessage5@opc stored from wreg
 23997   00BED0  0100               	movlb	0	; () banked
 23998   00BED2  6FA6               	movwf	sendMessage5@opc& (0+255),b
 23999                           
 24000                           ;../../VLCBlib_PIC/vlcb.c: 1181:     sendMessage(opc, 6, data1, data2, data3, data4, dat
      +                          a5, 0,0);
 24001   00BED4  0E06               	movlw	6
 24002   00BED6  0101               	movlb	1	; () banked
 24003   00BED8  6FBA               	movwf	sendMessage@len& (0+255),b
 24004   00BEDA  C1C2  F1BB         	movff	sendMessage5@data1,sendMessage@data1
 24005   00BEDE  C1C3  F1BC         	movff	sendMessage5@data2,sendMessage@data2
 24006   00BEE2  C1C4  F1BD         	movff	sendMessage5@data3,sendMessage@data3
 24007   00BEE6  C1C5  F1BE         	movff	sendMessage5@data4,sendMessage@data4
 24008   00BEEA  C1C6  F1BF         	movff	sendMessage5@data5,sendMessage@data5
 24009   00BEEE  0E00               	movlw	0
 24010   00BEF0  6FC0               	movwf	sendMessage@data6& (0+255),b
 24011   00BEF2  0E00               	movlw	0
 24012   00BEF4  6FC1               	movwf	sendMessage@data7& (0+255),b
 24013   00BEF6  0100               	movlb	0	; () banked
 24014   00BEF8  51A6               	movf	sendMessage5@opc& (0+255),w,b
 24015   00BEFA  EC2A  F054         	call	_sendMessage
 24016   00BEFE  0012               	return		;funcret
 24017   00BF00                     __end_of_sendMessage5:
 24018                           	callstack 0
 24019                           
 24020 ;; *************** function _APP_preProcessMessage *****************
 24021 ;; Defined at:
 24022 ;;		line 413 in file "../main.c"
 24023 ;; Parameters:    Size  Location     Type
 24024 ;;  m               2   45[BANK0 ] PTR struct Message
 24025 ;;		 -> poll@m(9), 
 24026 ;; Auto vars:     Size  Location     Type
 24027 ;;		None
 24028 ;; Return value:  Size  Location     Type
 24029 ;;                  1    wreg      enum E12743
 24030 ;; Registers used:
 24031 ;;		wreg
 24032 ;; Tracked objects:
 24033 ;;		On entry : 0/0
 24034 ;;		On exit  : 0/0
 24035 ;;		Unchanged: 0/0
 24036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24037 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24041 ;;Total ram usage:        2 bytes
 24042 ;; Hardware stack levels used: 1
 24043 ;; Hardware stack levels required when called: 12
 24044 ;; This function calls:
 24045 ;;		Nothing
 24046 ;; This function is called by:
 24047 ;;		_poll
 24048 ;; This function uses a non-reentrant model
 24049 ;;
 24050                           
 24051                           	psect	text92
 24052   00C534                     __ptext92:
 24053                           	callstack 0
 24054   00C534                     _APP_preProcessMessage:
 24055                           	callstack 17
 24056                           
 24057                           ;../main.c: 414:     return NOT_PROCESSED;
 24058                           
 24059                           ;incstack = 0
 24060   00C534  0E00               	movlw	0
 24061   00C536  0012               	return		;funcret
 24062   00C538                     __end_of_APP_preProcessMessage:
 24063                           	callstack 0
 24064                           
 24065 ;; *************** function _APP_postProcessMessage *****************
 24066 ;; Defined at:
 24067 ;;		line 420 in file "../main.c"
 24068 ;; Parameters:    Size  Location     Type
 24069 ;;  m               2   45[BANK0 ] PTR struct Message
 24070 ;;		 -> poll@m(9), 
 24071 ;; Auto vars:     Size  Location     Type
 24072 ;;		None
 24073 ;; Return value:  Size  Location     Type
 24074 ;;                  1    wreg      enum E12743
 24075 ;; Registers used:
 24076 ;;		wreg
 24077 ;; Tracked objects:
 24078 ;;		On entry : 0/0
 24079 ;;		On exit  : 0/0
 24080 ;;		Unchanged: 0/0
 24081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24082 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24086 ;;Total ram usage:        2 bytes
 24087 ;; Hardware stack levels used: 1
 24088 ;; Hardware stack levels required when called: 12
 24089 ;; This function calls:
 24090 ;;		Nothing
 24091 ;; This function is called by:
 24092 ;;		_poll
 24093 ;; This function uses a non-reentrant model
 24094 ;;
 24095                           
 24096                           	psect	text93
 24097   00C538                     __ptext93:
 24098                           	callstack 0
 24099   00C538                     _APP_postProcessMessage:
 24100                           	callstack 17
 24101                           
 24102                           ;../main.c: 421:     return NOT_PROCESSED;
 24103                           
 24104                           ;incstack = 0
 24105   00C538  0E00               	movlw	0
 24106   00C53A  0012               	return		;funcret
 24107   00C53C                     __end_of_APP_postProcessMessage:
 24108                           	callstack 0
 24109                           
 24110 ;; *************** function _loop *****************
 24111 ;; Defined at:
 24112 ;;		line 353 in file "../main.c"
 24113 ;; Parameters:    Size  Location     Type
 24114 ;;		None
 24115 ;; Auto vars:     Size  Location     Type
 24116 ;;		None
 24117 ;; Return value:  Size  Location     Type
 24118 ;;                  1    wreg      void 
 24119 ;; Registers used:
 24120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24121 ;; Tracked objects:
 24122 ;;		On entry : 0/0
 24123 ;;		On exit  : 0/0
 24124 ;;		Unchanged: 0/0
 24125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24128 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24129 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24130 ;;Total ram usage:        8 bytes
 24131 ;; Hardware stack levels used: 1
 24132 ;; Hardware stack levels required when called: 22
 24133 ;; This function calls:
 24134 ;;		___lmul
 24135 ;;		_getNV
 24136 ;;		_inputScan
 24137 ;;		_processActions
 24138 ;;		_processOutputs
 24139 ;;		_sendProducedEvent
 24140 ;;		_startServos
 24141 ;;		_tickGet
 24142 ;; This function is called by:
 24143 ;;		_main
 24144 ;; This function uses a non-reentrant model
 24145 ;;
 24146                           
 24147                           	psect	text94
 24148   006B88                     __ptext94:
 24149                           	callstack 0
 24150   006B88                     _loop:
 24151                           	callstack 8
 24152                           
 24153                           ;../main.c: 355:     if (!started && ((tickGet() - startTime.val) > (getNV(1) * (62500/1
      +                          0)) + (62500*2))) {
 24154                           
 24155                           ;incstack = 0
 24156   006B88  0100               	movlb	0	; () banked
 24157   006B8A  51D2               	movf	_started& (0+255),w,b
 24158   006B8C  A4D8               	btfss	status,2,c
 24159   006B8E  D053               	goto	l24618
 24160                           
 24161                           ; BSR set to: 0
 24162   006B90  EC6B  F05A         	call	_tickGet	;wreg free
 24163   006B94  503B               	movf	_startTime^0,w,c
 24164   006B96  0100               	movlb	0	; () banked
 24165   006B98  5D8D               	subwf	?_tickGet& (0+255),w,b
 24166   006B9A  0101               	movlb	1	; () banked
 24167   006B9C  6FE8               	movwf	??_loop& (0+255),b
 24168   006B9E  503C               	movf	(_startTime+1)^0,w,c
 24169   006BA0  0100               	movlb	0	; () banked
 24170   006BA2  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24171   006BA4  0101               	movlb	1	; () banked
 24172   006BA6  6FE9               	movwf	(??_loop+1)& (0+255),b
 24173   006BA8  503D               	movf	(_startTime+2)^0,w,c
 24174   006BAA  0100               	movlb	0	; () banked
 24175   006BAC  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24176   006BAE  0101               	movlb	1	; () banked
 24177   006BB0  6FEA               	movwf	(??_loop+2)& (0+255),b
 24178   006BB2  503E               	movf	(_startTime+3)^0,w,c
 24179   006BB4  0100               	movlb	0	; () banked
 24180   006BB6  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24181   006BB8  0101               	movlb	1	; () banked
 24182   006BBA  6FEB               	movwf	(??_loop+3)& (0+255),b
 24183   006BBC  0E01               	movlw	1
 24184   006BBE  ECD9  F05D         	call	_getNV
 24185   006BC2  0100               	movlb	0	; () banked
 24186   006BC4  C08D  F091         	movff	?_getNV,___lmul@multiplier
 24187   006BC8  C08E  F092         	movff	?_getNV+1,___lmul@multiplier+1
 24188   006BCC  0E00               	movlw	0
 24189   006BCE  BF92               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 24190   006BD0  0EFF               	movlw	-1
 24191   006BD2  6F93               	movwf	(___lmul@multiplier+2)& (0+255),b
 24192   006BD4  6F94               	movwf	(___lmul@multiplier+3)& (0+255),b
 24193   006BD6  0E6A               	movlw	106
 24194   006BD8  6F95               	movwf	___lmul@multiplicand& (0+255),b
 24195   006BDA  0E18               	movlw	24
 24196   006BDC  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24197   006BDE  0E00               	movlw	0
 24198   006BE0  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24199   006BE2  0E00               	movlw	0
 24200   006BE4  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24201   006BE6  EC97  F05A         	call	___lmul	;wreg free
 24202   006BEA  0E48               	movlw	72
 24203   006BEC  0100               	movlb	0	; () banked
 24204   006BEE  2591               	addwf	?___lmul& (0+255),w,b
 24205   006BF0  0101               	movlb	1	; () banked
 24206   006BF2  6FEC               	movwf	(??_loop+4)& (0+255),b
 24207   006BF4  0EE8               	movlw	232
 24208   006BF6  0100               	movlb	0	; () banked
 24209   006BF8  2192               	addwfc	(?___lmul+1)& (0+255),w,b
 24210   006BFA  0101               	movlb	1	; () banked
 24211   006BFC  6FED               	movwf	(??_loop+5)& (0+255),b
 24212   006BFE  0E01               	movlw	1
 24213   006C00  0100               	movlb	0	; () banked
 24214   006C02  2193               	addwfc	(?___lmul+2)& (0+255),w,b
 24215   006C04  0101               	movlb	1	; () banked
 24216   006C06  6FEE               	movwf	(??_loop+6)& (0+255),b
 24217   006C08  0E00               	movlw	0
 24218   006C0A  0100               	movlb	0	; () banked
 24219   006C0C  2194               	addwfc	(?___lmul+3)& (0+255),w,b
 24220   006C0E  0101               	movlb	1	; () banked
 24221   006C10  6FEF               	movwf	(??_loop+7)& (0+255),b
 24222   006C12  51E8               	movf	??_loop& (0+255),w,b
 24223   006C14  5DEC               	subwf	(??_loop+4)& (0+255),w,b
 24224   006C16  51E9               	movf	(??_loop+1)& (0+255),w,b
 24225   006C18  59ED               	subwfb	(??_loop+5)& (0+255),w,b
 24226   006C1A  51EA               	movf	(??_loop+2)& (0+255),w,b
 24227   006C1C  59EE               	subwfb	(??_loop+6)& (0+255),w,b
 24228   006C1E  51EB               	movf	(??_loop+3)& (0+255),w,b
 24229   006C20  59EF               	subwfb	(??_loop+7)& (0+255),w,b
 24230   006C22  B0D8               	btfsc	status,0,c
 24231   006C24  D008               	goto	l24618
 24232                           
 24233                           ; BSR set to: 1
 24234                           ;../main.c: 356:         started = TRUE;
 24235   006C26  0E01               	movlw	1
 24236   006C28  0100               	movlb	0	; () banked
 24237   006C2A  6FD2               	movwf	_started& (0+255),b
 24238                           
 24239                           ; BSR set to: 0
 24240                           ;../main.c: 357:         sendProducedEvent(1, EVENT_ON);
 24241   006C2C  0E01               	movlw	1
 24242   006C2E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 24243   006C30  0E01               	movlw	1
 24244   006C32  ECC2  F04A         	call	_sendProducedEvent
 24245   006C36                     l24618:
 24246                           
 24247                           ;../main.c: 361:     if ((tickGet() - lastServoStartTime.val) > 5*(62500/2000)) {
 24248   006C36  EC6B  F05A         	call	_tickGet	;wreg free
 24249   006C3A  0101               	movlb	1	; () banked
 24250   006C3C  515C               	movf	_lastServoStartTime& (0+255),w,b
 24251   006C3E  0100               	movlb	0	; () banked
 24252   006C40  5D8D               	subwf	?_tickGet& (0+255),w,b
 24253   006C42  0101               	movlb	1	; () banked
 24254   006C44  6FE8               	movwf	??_loop& (0+255),b
 24255   006C46  515D               	movf	(_lastServoStartTime+1)& (0+255),w,b
 24256   006C48  0100               	movlb	0	; () banked
 24257   006C4A  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24258   006C4C  0101               	movlb	1	; () banked
 24259   006C4E  6FE9               	movwf	(??_loop+1)& (0+255),b
 24260   006C50  515E               	movf	(_lastServoStartTime+2)& (0+255),w,b
 24261   006C52  0100               	movlb	0	; () banked
 24262   006C54  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24263   006C56  0101               	movlb	1	; () banked
 24264   006C58  6FEA               	movwf	(??_loop+2)& (0+255),b
 24265   006C5A  515F               	movf	(_lastServoStartTime+3)& (0+255),w,b
 24266   006C5C  0100               	movlb	0	; () banked
 24267   006C5E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24268   006C60  0101               	movlb	1	; () banked
 24269   006C62  6FEB               	movwf	(??_loop+3)& (0+255),b
 24270   006C64  51EB               	movf	(??_loop+3)& (0+255),w,b
 24271   006C66  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24272   006C68  11E9               	iorwf	(??_loop+1)& (0+255),w,b
 24273   006C6A  E104               	bnz	u26280
 24274   006C6C  0E9C               	movlw	156
 24275   006C6E  5DE8               	subwf	??_loop& (0+255),w,b
 24276   006C70  A0D8               	btfss	status,0,c
 24277   006C72  D00C               	goto	l24624
 24278   006C74                     u26280:
 24279                           
 24280                           ; BSR set to: 1
 24281                           ;../main.c: 362:         startServos();
 24282   006C74  ECD0  F04C         	call	_startServos	;wreg free
 24283                           
 24284                           ;../main.c: 363:         lastServoStartTime.val = tickGet();
 24285   006C78  EC6B  F05A         	call	_tickGet	;wreg free
 24286   006C7C  C08D  F15C         	movff	?_tickGet,_lastServoStartTime
 24287   006C80  C08E  F15D         	movff	?_tickGet+1,_lastServoStartTime+1
 24288   006C84  C08F  F15E         	movff	?_tickGet+2,_lastServoStartTime+2
 24289   006C88  C090  F15F         	movff	?_tickGet+3,_lastServoStartTime+3
 24290   006C8C                     l24624:
 24291                           
 24292                           ;../main.c: 366:     if (started) {
 24293   006C8C  0100               	movlb	0	; () banked
 24294   006C8E  51D2               	movf	_started& (0+255),w,b
 24295   006C90  B4D8               	btfsc	status,2,c
 24296   006C92  0012               	return	
 24297                           
 24298                           ; BSR set to: 0
 24299                           ;../main.c: 367:         if ((tickGet() - lastInputScanTime.val) > 5*(62500/1000)) {
 24300   006C94  EC6B  F05A         	call	_tickGet	;wreg free
 24301   006C98  0101               	movlb	1	; () banked
 24302   006C9A  5158               	movf	_lastInputScanTime& (0+255),w,b
 24303   006C9C  0100               	movlb	0	; () banked
 24304   006C9E  5D8D               	subwf	?_tickGet& (0+255),w,b
 24305   006CA0  0101               	movlb	1	; () banked
 24306   006CA2  6FE8               	movwf	??_loop& (0+255),b
 24307   006CA4  5159               	movf	(_lastInputScanTime+1)& (0+255),w,b
 24308   006CA6  0100               	movlb	0	; () banked
 24309   006CA8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24310   006CAA  0101               	movlb	1	; () banked
 24311   006CAC  6FE9               	movwf	(??_loop+1)& (0+255),b
 24312   006CAE  515A               	movf	(_lastInputScanTime+2)& (0+255),w,b
 24313   006CB0  0100               	movlb	0	; () banked
 24314   006CB2  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24315   006CB4  0101               	movlb	1	; () banked
 24316   006CB6  6FEA               	movwf	(??_loop+2)& (0+255),b
 24317   006CB8  515B               	movf	(_lastInputScanTime+3)& (0+255),w,b
 24318   006CBA  0100               	movlb	0	; () banked
 24319   006CBC  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24320   006CBE  0101               	movlb	1	; () banked
 24321   006CC0  6FEB               	movwf	(??_loop+3)& (0+255),b
 24322   006CC2  51EB               	movf	(??_loop+3)& (0+255),w,b
 24323   006CC4  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24324   006CC6  E106               	bnz	u26300
 24325   006CC8  0E37               	movlw	55
 24326   006CCA  5DE8               	subwf	??_loop& (0+255),w,b
 24327   006CCC  0E01               	movlw	1
 24328   006CCE  59E9               	subwfb	(??_loop+1)& (0+255),w,b
 24329   006CD0  A0D8               	btfss	status,0,c
 24330   006CD2  D00C               	goto	l24632
 24331   006CD4                     u26300:
 24332                           
 24333                           ; BSR set to: 1
 24334                           ;../main.c: 368:             inputScan();
 24335   006CD4  ECBD  F027         	call	_inputScan	;wreg free
 24336                           
 24337                           ;../main.c: 369:             lastInputScanTime.val = tickGet();
 24338   006CD8  EC6B  F05A         	call	_tickGet	;wreg free
 24339   006CDC  C08D  F158         	movff	?_tickGet,_lastInputScanTime
 24340   006CE0  C08E  F159         	movff	?_tickGet+1,_lastInputScanTime+1
 24341   006CE4  C08F  F15A         	movff	?_tickGet+2,_lastInputScanTime+2
 24342   006CE8  C090  F15B         	movff	?_tickGet+3,_lastInputScanTime+3
 24343   006CEC                     l24632:
 24344                           
 24345                           ;../main.c: 371:         if ((tickGet() - lastActionPollTime.val) > 100*(62500/1000)) {
 24346   006CEC  EC6B  F05A         	call	_tickGet	;wreg free
 24347   006CF0  0101               	movlb	1	; () banked
 24348   006CF2  5154               	movf	_lastActionPollTime& (0+255),w,b
 24349   006CF4  0100               	movlb	0	; () banked
 24350   006CF6  5D8D               	subwf	?_tickGet& (0+255),w,b
 24351   006CF8  0101               	movlb	1	; () banked
 24352   006CFA  6FE8               	movwf	??_loop& (0+255),b
 24353   006CFC  5155               	movf	(_lastActionPollTime+1)& (0+255),w,b
 24354   006CFE  0100               	movlb	0	; () banked
 24355   006D00  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 24356   006D02  0101               	movlb	1	; () banked
 24357   006D04  6FE9               	movwf	(??_loop+1)& (0+255),b
 24358   006D06  5156               	movf	(_lastActionPollTime+2)& (0+255),w,b
 24359   006D08  0100               	movlb	0	; () banked
 24360   006D0A  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 24361   006D0C  0101               	movlb	1	; () banked
 24362   006D0E  6FEA               	movwf	(??_loop+2)& (0+255),b
 24363   006D10  5157               	movf	(_lastActionPollTime+3)& (0+255),w,b
 24364   006D12  0100               	movlb	0	; () banked
 24365   006D14  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 24366   006D16  0101               	movlb	1	; () banked
 24367   006D18  6FEB               	movwf	(??_loop+3)& (0+255),b
 24368   006D1A  51EB               	movf	(??_loop+3)& (0+255),w,b
 24369   006D1C  11EA               	iorwf	(??_loop+2)& (0+255),w,b
 24370   006D1E  E106               	bnz	u26310
 24371   006D20  0E39               	movlw	57
 24372   006D22  5DE8               	subwf	??_loop& (0+255),w,b
 24373   006D24  0E18               	movlw	24
 24374   006D26  59E9               	subwfb	(??_loop+1)& (0+255),w,b
 24375   006D28  A0D8               	btfss	status,0,c
 24376   006D2A  0012               	return	
 24377   006D2C                     u26310:
 24378                           
 24379                           ; BSR set to: 1
 24380                           ;../main.c: 372:             processActions();
 24381   006D2C  ECD3  F030         	call	_processActions	;wreg free
 24382                           
 24383                           ;../main.c: 373:             processOutputs();
 24384   006D30  ECDB  F034         	call	_processOutputs	;wreg free
 24385                           
 24386                           ;../main.c: 374:             lastActionPollTime.val = tickGet();
 24387   006D34  EC6B  F05A         	call	_tickGet	;wreg free
 24388   006D38  C08D  F154         	movff	?_tickGet,_lastActionPollTime
 24389   006D3C  C08E  F155         	movff	?_tickGet+1,_lastActionPollTime+1
 24390   006D40  C08F  F156         	movff	?_tickGet+2,_lastActionPollTime+2
 24391   006D44  C090  F157         	movff	?_tickGet+3,_lastActionPollTime+3
 24392   006D48  0012               	return		;funcret
 24393   006D4A                     __end_of_loop:
 24394                           	callstack 0
 24395                           
 24396 ;; *************** function _startServos *****************
 24397 ;; Defined at:
 24398 ;;		line 182 in file "../servo.c"
 24399 ;; Parameters:    Size  Location     Type
 24400 ;;		None
 24401 ;; Auto vars:     Size  Location     Type
 24402 ;;  type            1   30[BANK1 ] unsigned char 
 24403 ;; Return value:  Size  Location     Type
 24404 ;;                  1    wreg      void 
 24405 ;; Registers used:
 24406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24407 ;; Tracked objects:
 24408 ;;		On entry : 0/0
 24409 ;;		On exit  : 0/0
 24410 ;;		Unchanged: 0/0
 24411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24413 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24415 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24416 ;;Total ram usage:        1 bytes
 24417 ;; Hardware stack levels used: 1
 24418 ;; Hardware stack levels required when called: 19
 24419 ;; This function calls:
 24420 ;;		_getNV
 24421 ;;		_pollServos
 24422 ;;		_setupTimer1
 24423 ;;		_setupTimer3
 24424 ;; This function is called by:
 24425 ;;		_loop
 24426 ;; This function uses a non-reentrant model
 24427 ;;
 24428                           
 24429                           	psect	text95
 24430   0099A0                     __ptext95:
 24431                           	callstack 0
 24432   0099A0                     _startServos:
 24433                           	callstack 10
 24434                           
 24435                           ;../servo.c: 183:     uint8_t type;;../servo.c: 186:     servoInBlock++;
 24436                           
 24437                           ;incstack = 0
 24438   0099A0  0100               	movlb	0	; () banked
 24439   0099A2  2BCB               	incf	_servoInBlock& (0+255),f,b
 24440                           
 24441                           ; BSR set to: 0
 24442                           ;../servo.c: 187:     if (servoInBlock >= 8) {
 24443   0099A4  0E07               	movlw	7
 24444   0099A6  65CB               	cpfsgt	_servoInBlock& (0+255),b
 24445   0099A8  D004               	goto	l22654
 24446                           
 24447                           ; BSR set to: 0
 24448                           ;../servo.c: 188:         servoInBlock = 0;
 24449   0099AA  0E00               	movlw	0
 24450   0099AC  6FCB               	movwf	_servoInBlock& (0+255),b
 24451                           
 24452                           ; BSR set to: 0
 24453                           ;../servo.c: 189:         pollServos();
 24454   0099AE  EC28  F004         	call	_pollServos	;wreg free
 24455   0099B2                     l22654:
 24456                           
 24457                           ;../servo.c: 191:     type = (uint8_t)getNV((16 + 7*(servoInBlock) + 0));
 24458   0099B2  0100               	movlb	0	; () banked
 24459   0099B4  51CB               	movf	_servoInBlock& (0+255),w,b
 24460   0099B6  0D07               	mullw	7
 24461   0099B8  50F3               	movf	243,w,c
 24462   0099BA  0F10               	addlw	16
 24463   0099BC  ECD9  F05D         	call	_getNV
 24464   0099C0  0100               	movlb	0	; () banked
 24465   0099C2  518D               	movf	?_getNV& (0+255),w,b
 24466   0099C4  0101               	movlb	1	; () banked
 24467   0099C6  6FD8               	movwf	startServos@type& (0+255),b
 24468                           
 24469                           ; BSR set to: 1
 24470                           ;../servo.c: 192:     if ((type == 2) || (type == 3) || (type == 4)) {
 24471   0099C8  0E02               	movlw	2
 24472   0099CA  19D8               	xorwf	startServos@type& (0+255),w,b
 24473   0099CC  B4D8               	btfsc	status,2,c
 24474   0099CE  D008               	goto	u23810
 24475                           
 24476                           ; BSR set to: 1
 24477   0099D0  0E03               	movlw	3
 24478   0099D2  19D8               	xorwf	startServos@type& (0+255),w,b
 24479   0099D4  B4D8               	btfsc	status,2,c
 24480   0099D6  D004               	goto	u23810
 24481                           
 24482                           ; BSR set to: 1
 24483   0099D8  0E04               	movlw	4
 24484   0099DA  19D8               	xorwf	startServos@type& (0+255),w,b
 24485   0099DC  A4D8               	btfss	status,2,c
 24486   0099DE  D00D               	goto	l22666
 24487   0099E0                     u23810:
 24488                           
 24489                           ; BSR set to: 1
 24490                           ;../servo.c: 193:         if (servoState[servoInBlock] != SS_OFF) setupTimer1(servoInBlo
      +                          ck);
 24491   0099E0  0E10               	movlw	low _servoState
 24492   0099E2  0100               	movlb	0	; () banked
 24493   0099E4  25CB               	addwf	_servoInBlock& (0+255),w,b
 24494   0099E6  6ED9               	movwf	fsr2l,c
 24495   0099E8  6ADA               	clrf	fsr2h,c
 24496   0099EA  0E01               	movlw	high _servoState
 24497   0099EC  22DA               	addwfc	fsr2h,f,c
 24498   0099EE  50DF               	movf	indf2,w,c
 24499   0099F0  B4D8               	btfsc	status,2,c
 24500   0099F2  D003               	goto	l22666
 24501                           
 24502                           ; BSR set to: 0
 24503   0099F4  51CB               	movf	_servoInBlock& (0+255),w,b
 24504   0099F6  ECB0  F050         	call	_setupTimer1
 24505   0099FA                     l22666:
 24506                           
 24507                           ;../servo.c: 195:     type = (uint8_t)getNV((16 + 7*(servoInBlock+8) + 0));
 24508   0099FA  0100               	movlb	0	; () banked
 24509   0099FC  51CB               	movf	_servoInBlock& (0+255),w,b
 24510   0099FE  0D07               	mullw	7
 24511   009A00  50F3               	movf	243,w,c
 24512   009A02  0F48               	addlw	72
 24513   009A04  ECD9  F05D         	call	_getNV
 24514   009A08  0100               	movlb	0	; () banked
 24515   009A0A  518D               	movf	?_getNV& (0+255),w,b
 24516   009A0C  0101               	movlb	1	; () banked
 24517   009A0E  6FD8               	movwf	startServos@type& (0+255),b
 24518                           
 24519                           ; BSR set to: 1
 24520                           ;../servo.c: 196:     if ((type == 2) || (type == 3) || (type == 4)) {
 24521   009A10  0E02               	movlw	2
 24522   009A12  19D8               	xorwf	startServos@type& (0+255),w,b
 24523   009A14  B4D8               	btfsc	status,2,c
 24524   009A16  D008               	goto	u23850
 24525                           
 24526                           ; BSR set to: 1
 24527   009A18  0E03               	movlw	3
 24528   009A1A  19D8               	xorwf	startServos@type& (0+255),w,b
 24529   009A1C  B4D8               	btfsc	status,2,c
 24530   009A1E  D004               	goto	u23850
 24531                           
 24532                           ; BSR set to: 1
 24533   009A20  0E04               	movlw	4
 24534   009A22  19D8               	xorwf	startServos@type& (0+255),w,b
 24535   009A24  A4D8               	btfss	status,2,c
 24536   009A26  0012               	return	
 24537   009A28                     u23850:
 24538                           
 24539                           ; BSR set to: 1
 24540                           ;../servo.c: 197:         if (servoState[servoInBlock+8] != SS_OFF) setupTimer3(servoInB
      +                          lock+8);
 24541   009A28  0E18               	movlw	low (_servoState+8)
 24542   009A2A  0100               	movlb	0	; () banked
 24543   009A2C  25CB               	addwf	_servoInBlock& (0+255),w,b
 24544   009A2E  6ED9               	movwf	fsr2l,c
 24545   009A30  6ADA               	clrf	fsr2h,c
 24546   009A32  0E01               	movlw	high (_servoState+8)
 24547   009A34  22DA               	addwfc	fsr2h,f,c
 24548   009A36  50DF               	movf	indf2,w,c
 24549   009A38  B4D8               	btfsc	status,2,c
 24550   009A3A  0012               	return	
 24551                           
 24552                           ; BSR set to: 0
 24553   009A3C  51CB               	movf	_servoInBlock& (0+255),w,b
 24554   009A3E  0F08               	addlw	8
 24555   009A40  EC67  F050         	call	_setupTimer3
 24556   009A44  0012               	return		;funcret
 24557   009A46                     __end_of_startServos:
 24558                           	callstack 0
 24559                           
 24560 ;; *************** function _setupTimer3 *****************
 24561 ;; Defined at:
 24562 ;;		line 217 in file "../servo.c"
 24563 ;; Parameters:    Size  Location     Type
 24564 ;;  io              1    wreg     unsigned char 
 24565 ;; Auto vars:     Size  Location     Type
 24566 ;;  io              1   60[BANK0 ] unsigned char 
 24567 ;;  ticks           2   58[BANK0 ] unsigned short 
 24568 ;; Return value:  Size  Location     Type
 24569 ;;                  1    wreg      void 
 24570 ;; Registers used:
 24571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24572 ;; Tracked objects:
 24573 ;;		On entry : 0/0
 24574 ;;		On exit  : 0/0
 24575 ;;		Unchanged: 0/0
 24576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24578 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24579 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24580 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24581 ;;Total ram usage:        8 bytes
 24582 ;; Hardware stack levels used: 1
 24583 ;; Hardware stack levels required when called: 13
 24584 ;; This function calls:
 24585 ;;		_getNV
 24586 ;;		_setOutputPin
 24587 ;; This function is called by:
 24588 ;;		_startServos
 24589 ;; This function uses a non-reentrant model
 24590 ;;
 24591                           
 24592                           	psect	text96
 24593   00A0CE                     __ptext96:
 24594                           	callstack 0
 24595   00A0CE                     _setupTimer3:
 24596                           	callstack 15
 24597                           
 24598                           ;incstack = 0
 24599                           ;setupTimer3@io stored from wreg
 24600   00A0CE  0100               	movlb	0	; () banked
 24601   00A0D0  6F9C               	movwf	setupTimer3@io& (0+255),b
 24602                           
 24603                           ;../servo.c: 218:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24604   00A0D2  0100               	movlb	0	; () banked
 24605   00A0D4  519C               	movf	setupTimer3@io& (0+255),w,b
 24606   00A0D6  0D07               	mullw	7
 24607   00A0D8  50F3               	movf	243,w,c
 24608   00A0DA  0F11               	addlw	17
 24609   00A0DC  ECD9  F05D         	call	_getNV
 24610   00A0E0  0100               	movlb	0	; () banked
 24611   00A0E2  BF8D               	btfsc	?_getNV& (0+255),7,b
 24612   00A0E4  D011               	goto	l21822
 24613                           
 24614                           ; BSR set to: 0
 24615   00A0E6  519C               	movf	setupTimer3@io& (0+255),w,b
 24616   00A0E8  0FA9               	addlw	low _currentPos
 24617   00A0EA  6ED9               	movwf	fsr2l,c
 24618   00A0EC  6ADA               	clrf	fsr2h,c
 24619   00A0EE  50DF               	movf	indf2,w,c
 24620   00A0F0  6F95               	movwf	??_setupTimer3& (0+255),b
 24621   00A0F2  5195               	movf	??_setupTimer3& (0+255),w,b
 24622   00A0F4  0D13               	mullw	19
 24623   00A0F6  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24624   00A0FA  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24625   00A0FE  0E10               	movlw	16
 24626   00A100  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24627   00A102  6F98               	movwf	_setupTimer3$1935& (0+255),b
 24628   00A104  0E0E               	movlw	14
 24629   00A106  D010               	goto	L4
 24630   00A108                     l21822:
 24631                           
 24632                           ; BSR set to: 0
 24633   00A108  519C               	movf	setupTimer3@io& (0+255),w,b
 24634   00A10A  0FA9               	addlw	low _currentPos
 24635   00A10C  6ED9               	movwf	fsr2l,c
 24636   00A10E  6ADA               	clrf	fsr2h,c
 24637   00A110  50DF               	movf	indf2,w,c
 24638   00A112  6F95               	movwf	??_setupTimer3& (0+255),b
 24639   00A114  5195               	movf	??_setupTimer3& (0+255),w,b
 24640   00A116  0D24               	mullw	36
 24641   00A118  CFF3 F096          	movff	prodl,??_setupTimer3+1
 24642   00A11C  CFF4 F097          	movff	prodh,??_setupTimer3+2
 24643   00A120  0E78               	movlw	120
 24644   00A122  2596               	addwf	(??_setupTimer3+1)& (0+255),w,b
 24645   00A124  6F98               	movwf	_setupTimer3$1935& (0+255),b
 24646   00A126  0E05               	movlw	5
 24647   00A128                     L4:
 24648   00A128  2197               	addwfc	(??_setupTimer3+2)& (0+255),w,b
 24649   00A12A  6F99               	movwf	(_setupTimer3$1935+1)& (0+255),b
 24650                           
 24651                           ; BSR set to: 0
 24652   00A12C  1D98               	comf	_setupTimer3$1935& (0+255),w,b
 24653   00A12E  6F9A               	movwf	setupTimer3@ticks& (0+255),b
 24654   00A130  1D99               	comf	(_setupTimer3$1935+1)& (0+255),w,b
 24655   00A132  6F9B               	movwf	(setupTimer3@ticks+1)& (0+255),b
 24656                           
 24657                           ; BSR set to: 0
 24658                           ;../servo.c: 221:     TMR3H = ticks >> 8;
 24659   00A134  519B               	movf	(setupTimer3@ticks+1)& (0+255),w,b
 24660   00A136  6EB3               	movwf	179,c	;volatile
 24661                           
 24662                           ; BSR set to: 0
 24663                           ;../servo.c: 222:     TMR3L = ticks & 0xFF;
 24664   00A138  C09A  FFB2         	movff	setupTimer3@ticks,4018	;volatile
 24665                           
 24666                           ; BSR set to: 0
 24667                           ;../servo.c: 225:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 24668   00A13C  519C               	movf	setupTimer3@io& (0+255),w,b
 24669   00A13E  0D07               	mullw	7
 24670   00A140  50F3               	movf	243,w,c
 24671   00A142  0F11               	addlw	17
 24672   00A144  ECD9  F05D         	call	_getNV
 24673   00A148  0100               	movlb	0	; () banked
 24674   00A14A  BB8D               	btfsc	?_getNV& (0+255),5,b
 24675   00A14C  D002               	goto	u22790
 24676   00A14E  0E01               	movlw	1
 24677   00A150  D001               	goto	u22800
 24678   00A152                     u22790:
 24679   00A152  0E00               	movlw	0
 24680   00A154                     u22800:
 24681   00A154  6F91               	movwf	setOutputPin@state& (0+255),b
 24682   00A156  519C               	movf	setupTimer3@io& (0+255),w,b
 24683   00A158  ECA5  F036         	call	_setOutputPin
 24684                           
 24685                           ;../servo.c: 226:     T3CONbits.TMR3ON = 1;
 24686   00A15C  80B1               	bsf	177,0,c	;volatile
 24687   00A15E  0012               	return		;funcret
 24688   00A160                     __end_of_setupTimer3:
 24689                           	callstack 0
 24690                           
 24691 ;; *************** function _setupTimer1 *****************
 24692 ;; Defined at:
 24693 ;;		line 206 in file "../servo.c"
 24694 ;; Parameters:    Size  Location     Type
 24695 ;;  io              1    wreg     unsigned char 
 24696 ;; Auto vars:     Size  Location     Type
 24697 ;;  io              1   60[BANK0 ] unsigned char 
 24698 ;;  ticks           2   58[BANK0 ] unsigned short 
 24699 ;; Return value:  Size  Location     Type
 24700 ;;                  1    wreg      void 
 24701 ;; Registers used:
 24702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24703 ;; Tracked objects:
 24704 ;;		On entry : 0/0
 24705 ;;		On exit  : 0/0
 24706 ;;		Unchanged: 0/0
 24707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24709 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24710 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24711 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24712 ;;Total ram usage:        8 bytes
 24713 ;; Hardware stack levels used: 1
 24714 ;; Hardware stack levels required when called: 13
 24715 ;; This function calls:
 24716 ;;		_getNV
 24717 ;;		_setOutputPin
 24718 ;; This function is called by:
 24719 ;;		_startServos
 24720 ;; This function uses a non-reentrant model
 24721 ;;
 24722                           
 24723                           	psect	text97
 24724   00A160                     __ptext97:
 24725                           	callstack 0
 24726   00A160                     _setupTimer1:
 24727                           	callstack 15
 24728                           
 24729                           ;incstack = 0
 24730                           ;setupTimer1@io stored from wreg
 24731   00A160  0100               	movlb	0	; () banked
 24732   00A162  6F9C               	movwf	setupTimer1@io& (0+255),b
 24733                           
 24734                           ;../servo.c: 207:     uint16_t ticks = 0xFFFF - ((getNV((16 + 7*(io) + 1)) & 0x80) ?
 24735   00A164  0100               	movlb	0	; () banked
 24736   00A166  519C               	movf	setupTimer1@io& (0+255),w,b
 24737   00A168  0D07               	mullw	7
 24738   00A16A  50F3               	movf	243,w,c
 24739   00A16C  0F11               	addlw	17
 24740   00A16E  ECD9  F05D         	call	_getNV
 24741   00A172  0100               	movlb	0	; () banked
 24742   00A174  BF8D               	btfsc	?_getNV& (0+255),7,b
 24743   00A176  D011               	goto	l21806
 24744                           
 24745                           ; BSR set to: 0
 24746   00A178  519C               	movf	setupTimer1@io& (0+255),w,b
 24747   00A17A  0FA9               	addlw	low _currentPos
 24748   00A17C  6ED9               	movwf	fsr2l,c
 24749   00A17E  6ADA               	clrf	fsr2h,c
 24750   00A180  50DF               	movf	indf2,w,c
 24751   00A182  6F95               	movwf	??_setupTimer1& (0+255),b
 24752   00A184  5195               	movf	??_setupTimer1& (0+255),w,b
 24753   00A186  0D13               	mullw	19
 24754   00A188  CFF3 F096          	movff	prodl,??_setupTimer1+1
 24755   00A18C  CFF4 F097          	movff	prodh,??_setupTimer1+2
 24756   00A190  0E10               	movlw	16
 24757   00A192  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 24758   00A194  6F98               	movwf	_setupTimer1$1931& (0+255),b
 24759   00A196  0E0E               	movlw	14
 24760   00A198  D010               	goto	L5
 24761   00A19A                     l21806:
 24762                           
 24763                           ; BSR set to: 0
 24764   00A19A  519C               	movf	setupTimer1@io& (0+255),w,b
 24765   00A19C  0FA9               	addlw	low _currentPos
 24766   00A19E  6ED9               	movwf	fsr2l,c
 24767   00A1A0  6ADA               	clrf	fsr2h,c
 24768   00A1A2  50DF               	movf	indf2,w,c
 24769   00A1A4  6F95               	movwf	??_setupTimer1& (0+255),b
 24770   00A1A6  5195               	movf	??_setupTimer1& (0+255),w,b
 24771   00A1A8  0D24               	mullw	36
 24772   00A1AA  CFF3 F096          	movff	prodl,??_setupTimer1+1
 24773   00A1AE  CFF4 F097          	movff	prodh,??_setupTimer1+2
 24774   00A1B2  0E78               	movlw	120
 24775   00A1B4  2596               	addwf	(??_setupTimer1+1)& (0+255),w,b
 24776   00A1B6  6F98               	movwf	_setupTimer1$1931& (0+255),b
 24777   00A1B8  0E05               	movlw	5
 24778   00A1BA                     L5:
 24779   00A1BA  2197               	addwfc	(??_setupTimer1+2)& (0+255),w,b
 24780   00A1BC  6F99               	movwf	(_setupTimer1$1931+1)& (0+255),b
 24781                           
 24782                           ; BSR set to: 0
 24783   00A1BE  1D98               	comf	_setupTimer1$1931& (0+255),w,b
 24784   00A1C0  6F9A               	movwf	setupTimer1@ticks& (0+255),b
 24785   00A1C2  1D99               	comf	(_setupTimer1$1931+1)& (0+255),w,b
 24786   00A1C4  6F9B               	movwf	(setupTimer1@ticks+1)& (0+255),b
 24787                           
 24788                           ; BSR set to: 0
 24789                           ;../servo.c: 210:     TMR1H = ticks >> 8;
 24790   00A1C6  519B               	movf	(setupTimer1@ticks+1)& (0+255),w,b
 24791   00A1C8  6ECF               	movwf	207,c	;volatile
 24792                           
 24793                           ; BSR set to: 0
 24794                           ;../servo.c: 211:     TMR1L = ticks & 0xFF;
 24795   00A1CA  C09A  FFCE         	movff	setupTimer1@ticks,4046	;volatile
 24796                           
 24797                           ; BSR set to: 0
 24798                           ;../servo.c: 214:     setOutputPin(io, !(getNV((16 + 7*(io) + 1)) & 0x20));
 24799   00A1CE  519C               	movf	setupTimer1@io& (0+255),w,b
 24800   00A1D0  0D07               	mullw	7
 24801   00A1D2  50F3               	movf	243,w,c
 24802   00A1D4  0F11               	addlw	17
 24803   00A1D6  ECD9  F05D         	call	_getNV
 24804   00A1DA  0100               	movlb	0	; () banked
 24805   00A1DC  BB8D               	btfsc	?_getNV& (0+255),5,b
 24806   00A1DE  D002               	goto	u22760
 24807   00A1E0  0E01               	movlw	1
 24808   00A1E2  D001               	goto	u22770
 24809   00A1E4                     u22760:
 24810   00A1E4  0E00               	movlw	0
 24811   00A1E6                     u22770:
 24812   00A1E6  6F91               	movwf	setOutputPin@state& (0+255),b
 24813   00A1E8  519C               	movf	setupTimer1@io& (0+255),w,b
 24814   00A1EA  ECA5  F036         	call	_setOutputPin
 24815                           
 24816                           ;../servo.c: 215:     T1CONbits.TMR1ON = 1;
 24817   00A1EE  80CD               	bsf	205,0,c	;volatile
 24818   00A1F0  0012               	return		;funcret
 24819   00A1F2                     __end_of_setupTimer1:
 24820                           	callstack 0
 24821                           
 24822 ;; *************** function _pollServos *****************
 24823 ;; Defined at:
 24824 ;;		line 284 in file "../servo.c"
 24825 ;; Parameters:    Size  Location     Type
 24826 ;;		None
 24827 ;; Auto vars:     Size  Location     Type
 24828 ;;  io              1   29[BANK1 ] unsigned char 
 24829 ;;  midway          1   28[BANK1 ] unsigned char 
 24830 ;;  beforeMidway    1   27[BANK1 ] enum E12710
 24831 ;;  target          1   26[BANK1 ] unsigned char 
 24832 ;; Return value:  Size  Location     Type
 24833 ;;                  1    wreg      void 
 24834 ;; Registers used:
 24835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 24836 ;; Tracked objects:
 24837 ;;		On entry : 0/0
 24838 ;;		On exit  : 0/0
 24839 ;;		Unchanged: 0/0
 24840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24842 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24843 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;Total ram usage:       12 bytes
 24846 ;; Hardware stack levels used: 1
 24847 ;; Hardware stack levels required when called: 18
 24848 ;; This function calls:
 24849 ;;		___awdiv
 24850 ;;		_bounceDown
 24851 ;;		_bounceUp
 24852 ;;		_getNV
 24853 ;;		_initBounce
 24854 ;;		_sendProducedEvent
 24855 ;;		_tickGet
 24856 ;;		_writeNVM
 24857 ;; This function is called by:
 24858 ;;		_startServos
 24859 ;; This function uses a non-reentrant model
 24860 ;;
 24861                           
 24862                           	psect	text98
 24863   000850                     __ptext98:
 24864                           	callstack 0
 24865   000850                     _pollServos:
 24866                           	callstack 10
 24867                           
 24868                           ;../servo.c: 285:     uint8_t midway;;../servo.c: 286:     Boolean beforeMidway;;../serv
      +                          o.c: 287:     uint8_t io;;../servo.c: 288:     uint8_t target;;../servo.c: 290:     for 
      +                          (io=0; io<16; io++) {
 24869                           
 24870                           ;incstack = 0
 24871   000850  0E00               	movlw	0
 24872   000852  0101               	movlb	1	; () banked
 24873   000854  6FD7               	movwf	pollServos@io& (0+255),b
 24874   000856  EFF0  F00A         	goto	l21756
 24875   00085A                     l21528:
 24876                           
 24877                           ; BSR set to: 0
 24878                           ;../servo.c: 293:                 midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 24879   00085A  0101               	movlb	1	; () banked
 24880   00085C  51D7               	movf	pollServos@io& (0+255),w,b
 24881   00085E  0D07               	mullw	7
 24882   000860  50F3               	movf	243,w,c
 24883   000862  0F12               	addlw	18
 24884   000864  ECD9  F05D         	call	_getNV
 24885   000868  0100               	movlb	0	; () banked
 24886   00086A  518D               	movf	?_getNV& (0+255),w,b
 24887   00086C  6F97               	movwf	___awdiv@dividend& (0+255),b
 24888   00086E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 24889   000870  0E00               	movlw	0
 24890   000872  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 24891   000874  0E02               	movlw	2
 24892   000876  6F99               	movwf	___awdiv@divisor& (0+255),b
 24893   000878  ECA3  F052         	call	___awdiv	;wreg free
 24894   00087C  C097  F1CC         	movff	?___awdiv,??_pollServos
 24895   000880  C098  F1CD         	movff	?___awdiv+1,??_pollServos+1
 24896   000884  0101               	movlb	1	; () banked
 24897   000886  51D7               	movf	pollServos@io& (0+255),w,b
 24898   000888  0D07               	mullw	7
 24899   00088A  50F3               	movf	243,w,c
 24900   00088C  0F13               	addlw	19
 24901   00088E  ECD9  F05D         	call	_getNV
 24902   000892  0100               	movlb	0	; () banked
 24903   000894  518D               	movf	?_getNV& (0+255),w,b
 24904   000896  6F97               	movwf	___awdiv@dividend& (0+255),b
 24905   000898  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 24906   00089A  0E00               	movlw	0
 24907   00089C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 24908   00089E  0E02               	movlw	2
 24909   0008A0  6F99               	movwf	___awdiv@divisor& (0+255),b
 24910   0008A2  ECA3  F052         	call	___awdiv	;wreg free
 24911   0008A6  0100               	movlb	0	; () banked
 24912   0008A8  5197               	movf	?___awdiv& (0+255),w,b
 24913   0008AA  0101               	movlb	1	; () banked
 24914   0008AC  25CC               	addwf	??_pollServos& (0+255),w,b
 24915   0008AE  6FD6               	movwf	pollServos@midway& (0+255),b
 24916                           
 24917                           ; BSR set to: 1
 24918                           ;../servo.c: 295:                 beforeMidway=FALSE;
 24919   0008B0  0E00               	movlw	0
 24920   0008B2  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 24921                           
 24922                           ;../servo.c: 296:                 switch (servoState[io]) {
 24923   0008B4  D239               	goto	l21616
 24924   0008B6                     l21532:
 24925                           
 24926                           ; BSR set to: 1
 24927                           ;../servo.c: 298:                         if (currentPos[io]==getNV((16 + 7*(io) + 2))) 
      +                          {
 24928   0008B6  51D7               	movf	pollServos@io& (0+255),w,b
 24929   0008B8  0D07               	mullw	7
 24930   0008BA  50F3               	movf	243,w,c
 24931   0008BC  0F12               	addlw	18
 24932   0008BE  ECD9  F05D         	call	_getNV
 24933   0008C2  0101               	movlb	1	; () banked
 24934   0008C4  51D7               	movf	pollServos@io& (0+255),w,b
 24935   0008C6  0FA9               	addlw	low _currentPos
 24936   0008C8  6ED9               	movwf	fsr2l,c
 24937   0008CA  6ADA               	clrf	fsr2h,c
 24938   0008CC  50DF               	movf	indf2,w,c
 24939   0008CE  6FCC               	movwf	??_pollServos& (0+255),b
 24940   0008D0  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 24941   0008D2  0100               	movlb	0	; () banked
 24942   0008D4  518D               	movf	?_getNV& (0+255),w,b
 24943   0008D6  0101               	movlb	1	; () banked
 24944   0008D8  19CC               	xorwf	??_pollServos& (0+255),w,b
 24945   0008DA  E118               	bnz	l21536
 24946   0008DC  0100               	movlb	0	; () banked
 24947   0008DE  518E               	movf	(?_getNV+1)& (0+255),w,b
 24948   0008E0  0101               	movlb	1	; () banked
 24949   0008E2  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 24950   0008E4  A4D8               	btfss	status,2,c
 24951   0008E6  D012               	goto	l21536
 24952                           
 24953                           ; BSR set to: 1
 24954                           ;../servo.c: 299:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24955   0008E8  51D7               	movf	pollServos@io& (0+255),w,b
 24956   0008EA  0D07               	mullw	7
 24957   0008EC  50F3               	movf	243,w,c
 24958   0008EE  0F11               	addlw	17
 24959   0008F0  ECD9  F05D         	call	_getNV
 24960   0008F4  0100               	movlb	0	; () banked
 24961   0008F6  518D               	movf	?_getNV& (0+255),w,b
 24962   0008F8  0B40               	andlw	64
 24963   0008FA  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 24964   0008FC  0101               	movlb	1	; () banked
 24965   0008FE  51D7               	movf	pollServos@io& (0+255),w,b
 24966   000900  0D04               	mullw	4
 24967   000902  50F3               	movf	243,w,c
 24968   000904  0F08               	addlw	8
 24969   000906  ECC2  F04A         	call	_sendProducedEvent
 24970                           
 24971                           ;../servo.c: 300:                         } else {
 24972   00090A  D011               	goto	l21538
 24973   00090C                     l21536:
 24974                           
 24975                           ; BSR set to: 1
 24976                           ;../servo.c: 301:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 24977   00090C  51D7               	movf	pollServos@io& (0+255),w,b
 24978   00090E  0D07               	mullw	7
 24979   000910  50F3               	movf	243,w,c
 24980   000912  0F11               	addlw	17
 24981   000914  ECD9  F05D         	call	_getNV
 24982   000918  0100               	movlb	0	; () banked
 24983   00091A  518D               	movf	?_getNV& (0+255),w,b
 24984   00091C  0B40               	andlw	64
 24985   00091E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 24986   000920  0101               	movlb	1	; () banked
 24987   000922  51D7               	movf	pollServos@io& (0+255),w,b
 24988   000924  0D04               	mullw	4
 24989   000926  50F3               	movf	243,w,c
 24990   000928  0F0A               	addlw	10
 24991   00092A  ECC2  F04A         	call	_sendProducedEvent
 24992   00092E                     l21538:
 24993                           
 24994                           ;../servo.c: 303:                         servoState[io] = SS_MOVING;
 24995   00092E  0E10               	movlw	low _servoState
 24996   000930  0101               	movlb	1	; () banked
 24997   000932  25D7               	addwf	pollServos@io& (0+255),w,b
 24998   000934  6ED9               	movwf	fsr2l,c
 24999   000936  6ADA               	clrf	fsr2h,c
 25000   000938  0E01               	movlw	high _servoState
 25001   00093A  22DA               	addwfc	fsr2h,f,c
 25002   00093C  0E02               	movlw	2
 25003   00093E  6EDF               	movwf	indf2,c
 25004   000940                     l21540:
 25005                           
 25006                           ; BSR set to: 1
 25007                           ;../servo.c: 306:                         if (targetPos[io] > currentPos[io]) {
 25008   000940  0E20               	movlw	low _targetPos
 25009   000942  25D7               	addwf	pollServos@io& (0+255),w,b
 25010   000944  6ED9               	movwf	fsr2l,c
 25011   000946  6ADA               	clrf	fsr2h,c
 25012   000948  0E01               	movlw	high _targetPos
 25013   00094A  22DA               	addwfc	fsr2h,f,c
 25014   00094C  51D7               	movf	pollServos@io& (0+255),w,b
 25015   00094E  0FA9               	addlw	low _currentPos
 25016   000950  6EE1               	movwf	fsr1l,c
 25017   000952  6AE2               	clrf	fsr1h,c
 25018   000954  50DE               	movf	postinc2,w,c
 25019   000956  5CE6               	subwf	postinc1,w,c
 25020   000958  B0D8               	btfsc	status,0,c
 25021   00095A  D0AA               	goto	l21570
 25022                           
 25023                           ; BSR set to: 1
 25024                           ;../servo.c: 307:                             if (currentPos[io] < midway) {
 25025   00095C  51D7               	movf	pollServos@io& (0+255),w,b
 25026   00095E  0FA9               	addlw	low _currentPos
 25027   000960  6ED9               	movwf	fsr2l,c
 25028   000962  6ADA               	clrf	fsr2h,c
 25029   000964  51D6               	movf	pollServos@midway& (0+255),w,b
 25030   000966  5CDE               	subwf	postinc2,w,c
 25031   000968  B0D8               	btfsc	status,0,c
 25032   00096A  D002               	goto	l21546
 25033                           
 25034                           ; BSR set to: 1
 25035                           ;../servo.c: 308:                                 beforeMidway = TRUE;
 25036   00096C  0E01               	movlw	1
 25037   00096E  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 25038   000970                     l21546:
 25039                           
 25040                           ; BSR set to: 1
 25041                           ;../servo.c: 311:                             if (stepsPerPollSpeed[io]) {
 25042   000970  0E00               	movlw	low _stepsPerPollSpeed
 25043   000972  25D7               	addwf	pollServos@io& (0+255),w,b
 25044   000974  6ED9               	movwf	fsr2l,c
 25045   000976  6ADA               	clrf	fsr2h,c
 25046   000978  0E01               	movlw	high _stepsPerPollSpeed
 25047   00097A  22DA               	addwfc	fsr2h,f,c
 25048   00097C  50DF               	movf	indf2,w,c
 25049   00097E  B4D8               	btfsc	status,2,c
 25050   000980  D03A               	goto	l21554
 25051                           
 25052                           ; BSR set to: 1
 25053                           ;../servo.c: 312:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 25054   000982  51D7               	movf	pollServos@io& (0+255),w,b
 25055   000984  0FA9               	addlw	low _currentPos
 25056   000986  6ED9               	movwf	fsr2l,c
 25057   000988  6ADA               	clrf	fsr2h,c
 25058   00098A  50DF               	movf	indf2,w,c
 25059   00098C  6FCC               	movwf	??_pollServos& (0+255),b
 25060   00098E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25061   000990  51D7               	movf	pollServos@io& (0+255),w,b
 25062   000992  0FA9               	addlw	low _currentPos
 25063   000994  6ED9               	movwf	fsr2l,c
 25064   000996  6ADA               	clrf	fsr2h,c
 25065   000998  50DF               	movf	indf2,w,c
 25066   00099A  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 25067   00099C  6BCF               	clrf	(??_pollServos+3)& (0+255),b
 25068   00099E  0E00               	movlw	low _stepsPerPollSpeed
 25069   0009A0  25D7               	addwf	pollServos@io& (0+255),w,b
 25070   0009A2  6ED9               	movwf	fsr2l,c
 25071   0009A4  6ADA               	clrf	fsr2h,c
 25072   0009A6  0E01               	movlw	high _stepsPerPollSpeed
 25073   0009A8  22DA               	addwfc	fsr2h,f,c
 25074   0009AA  50DF               	movf	indf2,w,c
 25075   0009AC  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 25076   0009AE  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 25077   0009B0  27CE               	addwf	(??_pollServos+2)& (0+255),f,b
 25078   0009B2  0E00               	movlw	0
 25079   0009B4  23CF               	addwfc	(??_pollServos+3)& (0+255),f,b
 25080   0009B6  51CC               	movf	??_pollServos& (0+255),w,b
 25081   0009B8  5DCE               	subwf	(??_pollServos+2)& (0+255),w,b
 25082   0009BA  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 25083   0009BC  0A80               	xorlw	128
 25084   0009BE  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 25085   0009C0  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25086   0009C2  0A80               	xorlw	128
 25087   0009C4  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 25088   0009C6  B0D8               	btfsc	status,0,c
 25089   0009C8  D007               	goto	l21552
 25090                           
 25091                           ; BSR set to: 1
 25092                           ;../servo.c: 314:                                     currentPos[io] =255;
 25093   0009CA  51D7               	movf	pollServos@io& (0+255),w,b
 25094   0009CC  0FA9               	addlw	low _currentPos
 25095   0009CE  6ED9               	movwf	fsr2l,c
 25096   0009D0  6ADA               	clrf	fsr2h,c
 25097   0009D2  0EFF               	movlw	255
 25098   0009D4  6EDF               	movwf	indf2,c
 25099                           
 25100                           ;../servo.c: 315:                                 } else {
 25101   0009D6  D032               	goto	l21560
 25102   0009D8                     l21552:
 25103                           
 25104                           ; BSR set to: 1
 25105                           ;../servo.c: 316:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 25106   0009D8  0E00               	movlw	low _stepsPerPollSpeed
 25107   0009DA  25D7               	addwf	pollServos@io& (0+255),w,b
 25108   0009DC  6ED9               	movwf	fsr2l,c
 25109   0009DE  6ADA               	clrf	fsr2h,c
 25110   0009E0  0E01               	movlw	high _stepsPerPollSpeed
 25111   0009E2  22DA               	addwfc	fsr2h,f,c
 25112   0009E4  50DF               	movf	indf2,w,c
 25113   0009E6  6FCC               	movwf	??_pollServos& (0+255),b
 25114   0009E8  51D7               	movf	pollServos@io& (0+255),w,b
 25115   0009EA  0FA9               	addlw	low _currentPos
 25116   0009EC  6ED9               	movwf	fsr2l,c
 25117   0009EE  6ADA               	clrf	fsr2h,c
 25118   0009F0  51CC               	movf	??_pollServos& (0+255),w,b
 25119   0009F2  26DF               	addwf	indf2,f,c
 25120   0009F4  D023               	goto	l21560
 25121   0009F6                     l21554:
 25122                           
 25123                           ; BSR set to: 1
 25124                           ;../servo.c: 319:                                 pollCount[io]--;
 25125   0009F6  0E64               	movlw	low _pollCount
 25126   0009F8  25D7               	addwf	pollServos@io& (0+255),w,b
 25127   0009FA  6ED9               	movwf	fsr2l,c
 25128   0009FC  6ADA               	clrf	fsr2h,c
 25129   0009FE  0E02               	movlw	high _pollCount
 25130   000A00  22DA               	addwfc	fsr2h,f,c
 25131   000A02  06DF               	decf	indf2,f,c
 25132                           
 25133                           ;../servo.c: 320:                                 if (pollCount[io] == 0) {
 25134   000A04  0E64               	movlw	low _pollCount
 25135   000A06  25D7               	addwf	pollServos@io& (0+255),w,b
 25136   000A08  6ED9               	movwf	fsr2l,c
 25137   000A0A  6ADA               	clrf	fsr2h,c
 25138   000A0C  0E02               	movlw	high _pollCount
 25139   000A0E  22DA               	addwfc	fsr2h,f,c
 25140   000A10  50DF               	movf	indf2,w,c
 25141   000A12  A4D8               	btfss	status,2,c
 25142   000A14  D013               	goto	l21560
 25143                           
 25144                           ; BSR set to: 1
 25145                           ;../servo.c: 321:                                     currentPos[io]++;
 25146   000A16  51D7               	movf	pollServos@io& (0+255),w,b
 25147   000A18  0FA9               	addlw	low _currentPos
 25148   000A1A  6ED9               	movwf	fsr2l,c
 25149   000A1C  6ADA               	clrf	fsr2h,c
 25150   000A1E  2ADF               	incf	indf2,f,c
 25151                           
 25152                           ; BSR set to: 1
 25153                           ;../servo.c: 322:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25154   000A20  0E74               	movlw	low _pollsPerStepSpeed
 25155   000A22  25D7               	addwf	pollServos@io& (0+255),w,b
 25156   000A24  6ED9               	movwf	fsr2l,c
 25157   000A26  6ADA               	clrf	fsr2h,c
 25158   000A28  0E02               	movlw	high _pollsPerStepSpeed
 25159   000A2A  22DA               	addwfc	fsr2h,f,c
 25160   000A2C  0E64               	movlw	low _pollCount
 25161   000A2E  25D7               	addwf	pollServos@io& (0+255),w,b
 25162   000A30  6EE1               	movwf	fsr1l,c
 25163   000A32  6AE2               	clrf	fsr1h,c
 25164   000A34  0E02               	movlw	high _pollCount
 25165   000A36  22E2               	addwfc	fsr1h,f,c
 25166   000A38  CFDF FFE7          	movff	indf2,indf1
 25167   000A3C                     l21560:
 25168                           
 25169                           ; BSR set to: 1
 25170                           ;../servo.c: 326:                             if (currentPos[io] > targetPos[io]) {
 25171   000A3C  51D7               	movf	pollServos@io& (0+255),w,b
 25172   000A3E  0FA9               	addlw	low _currentPos
 25173   000A40  6ED9               	movwf	fsr2l,c
 25174   000A42  6ADA               	clrf	fsr2h,c
 25175   000A44  0E20               	movlw	low _targetPos
 25176   000A46  25D7               	addwf	pollServos@io& (0+255),w,b
 25177   000A48  6EE1               	movwf	fsr1l,c
 25178   000A4A  6AE2               	clrf	fsr1h,c
 25179   000A4C  0E01               	movlw	high _targetPos
 25180   000A4E  22E2               	addwfc	fsr1h,f,c
 25181   000A50  50DE               	movf	postinc2,w,c
 25182   000A52  5CE6               	subwf	postinc1,w,c
 25183   000A54  B0D8               	btfsc	status,0,c
 25184   000A56  D00C               	goto	l21564
 25185                           
 25186                           ; BSR set to: 1
 25187                           ;../servo.c: 327:                                 currentPos[io] = targetPos[io];
 25188   000A58  0E20               	movlw	low _targetPos
 25189   000A5A  25D7               	addwf	pollServos@io& (0+255),w,b
 25190   000A5C  6ED9               	movwf	fsr2l,c
 25191   000A5E  6ADA               	clrf	fsr2h,c
 25192   000A60  0E01               	movlw	high _targetPos
 25193   000A62  22DA               	addwfc	fsr2h,f,c
 25194   000A64  51D7               	movf	pollServos@io& (0+255),w,b
 25195   000A66  0FA9               	addlw	low _currentPos
 25196   000A68  6EE1               	movwf	fsr1l,c
 25197   000A6A  6AE2               	clrf	fsr1h,c
 25198   000A6C  CFDF FFE7          	movff	indf2,indf1
 25199   000A70                     l21564:
 25200                           
 25201                           ; BSR set to: 1
 25202                           ;../servo.c: 329:                             if ((currentPos[io] >= midway) && beforeMi
      +                          dway) {
 25203   000A70  51D7               	movf	pollServos@io& (0+255),w,b
 25204   000A72  0FA9               	addlw	low _currentPos
 25205   000A74  6ED9               	movwf	fsr2l,c
 25206   000A76  6ADA               	clrf	fsr2h,c
 25207   000A78  51D6               	movf	pollServos@midway& (0+255),w,b
 25208   000A7A  5CDE               	subwf	postinc2,w,c
 25209   000A7C  A0D8               	btfss	status,0,c
 25210   000A7E  D0CB               	goto	l21600
 25211                           
 25212                           ; BSR set to: 1
 25213   000A80  51D5               	movf	pollServos@beforeMidway& (0+255),w,b
 25214   000A82  B4D8               	btfsc	status,2,c
 25215   000A84  D0C8               	goto	l21600
 25216                           
 25217                           ; BSR set to: 1
 25218                           ;../servo.c: 333:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25219   000A86  51D7               	movf	pollServos@io& (0+255),w,b
 25220   000A88  0D07               	mullw	7
 25221   000A8A  50F3               	movf	243,w,c
 25222   000A8C  0F11               	addlw	17
 25223   000A8E  ECD9  F05D         	call	_getNV
 25224   000A92  0100               	movlb	0	; () banked
 25225   000A94  BD8D               	btfsc	?_getNV& (0+255),6,b
 25226   000A96  D002               	goto	u22210
 25227   000A98  0E01               	movlw	1
 25228   000A9A  D001               	goto	u22220
 25229   000A9C                     u22210:
 25230   000A9C  0E00               	movlw	0
 25231   000A9E                     u22220:
 25232   000A9E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25233   000AA0  0101               	movlb	1	; () banked
 25234   000AA2  51D7               	movf	pollServos@io& (0+255),w,b
 25235   000AA4  0D04               	mullw	4
 25236   000AA6  50F3               	movf	243,w,c
 25237   000AA8  0F09               	addlw	9
 25238   000AAA  ECC2  F04A         	call	_sendProducedEvent
 25239   000AAE  D0B3               	goto	l21600
 25240   000AB0                     l21570:
 25241                           
 25242                           ; BSR set to: 1
 25243   000AB0  51D7               	movf	pollServos@io& (0+255),w,b
 25244   000AB2  0FA9               	addlw	low _currentPos
 25245   000AB4  6ED9               	movwf	fsr2l,c
 25246   000AB6  6ADA               	clrf	fsr2h,c
 25247   000AB8  0E20               	movlw	low _targetPos
 25248   000ABA  25D7               	addwf	pollServos@io& (0+255),w,b
 25249   000ABC  6EE1               	movwf	fsr1l,c
 25250   000ABE  6AE2               	clrf	fsr1h,c
 25251   000AC0  0E01               	movlw	high _targetPos
 25252   000AC2  22E2               	addwfc	fsr1h,f,c
 25253   000AC4  50DE               	movf	postinc2,w,c
 25254   000AC6  5CE6               	subwf	postinc1,w,c
 25255   000AC8  B0D8               	btfsc	status,0,c
 25256   000ACA  D0A5               	goto	l21600
 25257                           
 25258                           ; BSR set to: 1
 25259                           ;../servo.c: 336:                             if (currentPos[io] > midway) {
 25260   000ACC  51D7               	movf	pollServos@io& (0+255),w,b
 25261   000ACE  0FA9               	addlw	low _currentPos
 25262   000AD0  6ED9               	movwf	fsr2l,c
 25263   000AD2  6ADA               	clrf	fsr2h,c
 25264   000AD4  50DE               	movf	postinc2,w,c
 25265   000AD6  5DD6               	subwf	pollServos@midway& (0+255),w,b
 25266   000AD8  B0D8               	btfsc	status,0,c
 25267   000ADA  D002               	goto	l21576
 25268                           
 25269                           ; BSR set to: 1
 25270                           ;../servo.c: 337:                                 beforeMidway = TRUE;
 25271   000ADC  0E01               	movlw	1
 25272   000ADE  6FD5               	movwf	pollServos@beforeMidway& (0+255),b
 25273   000AE0                     l21576:
 25274                           
 25275                           ; BSR set to: 1
 25276                           ;../servo.c: 340:                             if (stepsPerPollSpeed[io]) {
 25277   000AE0  0E00               	movlw	low _stepsPerPollSpeed
 25278   000AE2  25D7               	addwf	pollServos@io& (0+255),w,b
 25279   000AE4  6ED9               	movwf	fsr2l,c
 25280   000AE6  6ADA               	clrf	fsr2h,c
 25281   000AE8  0E01               	movlw	high _stepsPerPollSpeed
 25282   000AEA  22DA               	addwfc	fsr2h,f,c
 25283   000AEC  50DF               	movf	indf2,w,c
 25284   000AEE  B4D8               	btfsc	status,2,c
 25285   000AF0  D039               	goto	l21584
 25286                           
 25287                           ; BSR set to: 1
 25288                           ;../servo.c: 341:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 25289   000AF2  51D7               	movf	pollServos@io& (0+255),w,b
 25290   000AF4  0FA9               	addlw	low _currentPos
 25291   000AF6  6ED9               	movwf	fsr2l,c
 25292   000AF8  6ADA               	clrf	fsr2h,c
 25293   000AFA  50DF               	movf	indf2,w,c
 25294   000AFC  6FCC               	movwf	??_pollServos& (0+255),b
 25295   000AFE  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25296   000B00  0E00               	movlw	low _stepsPerPollSpeed
 25297   000B02  25D7               	addwf	pollServos@io& (0+255),w,b
 25298   000B04  6ED9               	movwf	fsr2l,c
 25299   000B06  6ADA               	clrf	fsr2h,c
 25300   000B08  0E01               	movlw	high _stepsPerPollSpeed
 25301   000B0A  22DA               	addwfc	fsr2h,f,c
 25302   000B0C  50DF               	movf	indf2,w,c
 25303   000B0E  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 25304   000B10  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 25305   000B12  5FCC               	subwf	??_pollServos& (0+255),f,b
 25306   000B14  0E00               	movlw	0
 25307   000B16  5BCD               	subwfb	(??_pollServos+1)& (0+255),f,b
 25308   000B18  51D7               	movf	pollServos@io& (0+255),w,b
 25309   000B1A  0FA9               	addlw	low _currentPos
 25310   000B1C  6ED9               	movwf	fsr2l,c
 25311   000B1E  6ADA               	clrf	fsr2h,c
 25312   000B20  50DF               	movf	indf2,w,c
 25313   000B22  6FCF               	movwf	(??_pollServos+3)& (0+255),b
 25314   000B24  6BD0               	clrf	(??_pollServos+4)& (0+255),b
 25315   000B26  51CC               	movf	??_pollServos& (0+255),w,b
 25316   000B28  5DCF               	subwf	(??_pollServos+3)& (0+255),w,b
 25317   000B2A  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 25318   000B2C  0A80               	xorlw	128
 25319   000B2E  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 25320   000B30  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25321   000B32  0A80               	xorlw	128
 25322   000B34  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 25323   000B36  B0D8               	btfsc	status,0,c
 25324   000B38  D006               	goto	l21582
 25325                           
 25326                           ; BSR set to: 1
 25327                           ;../servo.c: 343:                                     currentPos[io] = 0;
 25328   000B3A  51D7               	movf	pollServos@io& (0+255),w,b
 25329   000B3C  0FA9               	addlw	low _currentPos
 25330   000B3E  6ED9               	movwf	fsr2l,c
 25331   000B40  6ADA               	clrf	fsr2h,c
 25332   000B42  6ADF               	clrf	indf2,c
 25333                           
 25334                           ;../servo.c: 344:                                 } else {
 25335   000B44  D032               	goto	l21590
 25336   000B46                     l21582:
 25337                           
 25338                           ; BSR set to: 1
 25339                           ;../servo.c: 345:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 25340   000B46  0E00               	movlw	low _stepsPerPollSpeed
 25341   000B48  25D7               	addwf	pollServos@io& (0+255),w,b
 25342   000B4A  6ED9               	movwf	fsr2l,c
 25343   000B4C  6ADA               	clrf	fsr2h,c
 25344   000B4E  0E01               	movlw	high _stepsPerPollSpeed
 25345   000B50  22DA               	addwfc	fsr2h,f,c
 25346   000B52  50DF               	movf	indf2,w,c
 25347   000B54  6FCC               	movwf	??_pollServos& (0+255),b
 25348   000B56  51D7               	movf	pollServos@io& (0+255),w,b
 25349   000B58  0FA9               	addlw	low _currentPos
 25350   000B5A  6ED9               	movwf	fsr2l,c
 25351   000B5C  6ADA               	clrf	fsr2h,c
 25352   000B5E  51CC               	movf	??_pollServos& (0+255),w,b
 25353   000B60  5EDF               	subwf	indf2,f,c
 25354   000B62  D023               	goto	l21590
 25355   000B64                     l21584:
 25356                           
 25357                           ; BSR set to: 1
 25358                           ;../servo.c: 348:                                 pollCount[io]--;
 25359   000B64  0E64               	movlw	low _pollCount
 25360   000B66  25D7               	addwf	pollServos@io& (0+255),w,b
 25361   000B68  6ED9               	movwf	fsr2l,c
 25362   000B6A  6ADA               	clrf	fsr2h,c
 25363   000B6C  0E02               	movlw	high _pollCount
 25364   000B6E  22DA               	addwfc	fsr2h,f,c
 25365   000B70  06DF               	decf	indf2,f,c
 25366                           
 25367                           ;../servo.c: 349:                                 if (pollCount[io] == 0) {
 25368   000B72  0E64               	movlw	low _pollCount
 25369   000B74  25D7               	addwf	pollServos@io& (0+255),w,b
 25370   000B76  6ED9               	movwf	fsr2l,c
 25371   000B78  6ADA               	clrf	fsr2h,c
 25372   000B7A  0E02               	movlw	high _pollCount
 25373   000B7C  22DA               	addwfc	fsr2h,f,c
 25374   000B7E  50DF               	movf	indf2,w,c
 25375   000B80  A4D8               	btfss	status,2,c
 25376   000B82  D013               	goto	l21590
 25377                           
 25378                           ; BSR set to: 1
 25379                           ;../servo.c: 350:                                     currentPos[io]--;
 25380   000B84  51D7               	movf	pollServos@io& (0+255),w,b
 25381   000B86  0FA9               	addlw	low _currentPos
 25382   000B88  6ED9               	movwf	fsr2l,c
 25383   000B8A  6ADA               	clrf	fsr2h,c
 25384   000B8C  06DF               	decf	indf2,f,c
 25385                           
 25386                           ; BSR set to: 1
 25387                           ;../servo.c: 351:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 25388   000B8E  0E74               	movlw	low _pollsPerStepSpeed
 25389   000B90  25D7               	addwf	pollServos@io& (0+255),w,b
 25390   000B92  6ED9               	movwf	fsr2l,c
 25391   000B94  6ADA               	clrf	fsr2h,c
 25392   000B96  0E02               	movlw	high _pollsPerStepSpeed
 25393   000B98  22DA               	addwfc	fsr2h,f,c
 25394   000B9A  0E64               	movlw	low _pollCount
 25395   000B9C  25D7               	addwf	pollServos@io& (0+255),w,b
 25396   000B9E  6EE1               	movwf	fsr1l,c
 25397   000BA0  6AE2               	clrf	fsr1h,c
 25398   000BA2  0E02               	movlw	high _pollCount
 25399   000BA4  22E2               	addwfc	fsr1h,f,c
 25400   000BA6  CFDF FFE7          	movff	indf2,indf1
 25401   000BAA                     l21590:
 25402                           
 25403                           ; BSR set to: 1
 25404                           ;../servo.c: 355:                             if (currentPos[io] < targetPos[io]) {
 25405   000BAA  0E20               	movlw	low _targetPos
 25406   000BAC  25D7               	addwf	pollServos@io& (0+255),w,b
 25407   000BAE  6ED9               	movwf	fsr2l,c
 25408   000BB0  6ADA               	clrf	fsr2h,c
 25409   000BB2  0E01               	movlw	high _targetPos
 25410   000BB4  22DA               	addwfc	fsr2h,f,c
 25411   000BB6  51D7               	movf	pollServos@io& (0+255),w,b
 25412   000BB8  0FA9               	addlw	low _currentPos
 25413   000BBA  6EE1               	movwf	fsr1l,c
 25414   000BBC  6AE2               	clrf	fsr1h,c
 25415   000BBE  50DE               	movf	postinc2,w,c
 25416   000BC0  5CE6               	subwf	postinc1,w,c
 25417   000BC2  B0D8               	btfsc	status,0,c
 25418   000BC4  D00C               	goto	l21594
 25419                           
 25420                           ; BSR set to: 1
 25421                           ;../servo.c: 356:                                 currentPos[io] = targetPos[io];
 25422   000BC6  0E20               	movlw	low _targetPos
 25423   000BC8  25D7               	addwf	pollServos@io& (0+255),w,b
 25424   000BCA  6ED9               	movwf	fsr2l,c
 25425   000BCC  6ADA               	clrf	fsr2h,c
 25426   000BCE  0E01               	movlw	high _targetPos
 25427   000BD0  22DA               	addwfc	fsr2h,f,c
 25428   000BD2  51D7               	movf	pollServos@io& (0+255),w,b
 25429   000BD4  0FA9               	addlw	low _currentPos
 25430   000BD6  6EE1               	movwf	fsr1l,c
 25431   000BD8  6AE2               	clrf	fsr1h,c
 25432   000BDA  CFDF FFE7          	movff	indf2,indf1
 25433   000BDE                     l21594:
 25434                           
 25435                           ; BSR set to: 1
 25436                           ;../servo.c: 358:                             if ((currentPos[io] <= midway) && beforeMi
      +                          dway) {
 25437   000BDE  51D7               	movf	pollServos@io& (0+255),w,b
 25438   000BE0  0FA9               	addlw	low _currentPos
 25439   000BE2  6ED9               	movwf	fsr2l,c
 25440   000BE4  6ADA               	clrf	fsr2h,c
 25441   000BE6  50DE               	movf	postinc2,w,c
 25442   000BE8  5DD6               	subwf	pollServos@midway& (0+255),w,b
 25443   000BEA  A0D8               	btfss	status,0,c
 25444   000BEC  D014               	goto	l21600
 25445                           
 25446                           ; BSR set to: 1
 25447   000BEE  51D5               	movf	pollServos@beforeMidway& (0+255),w,b
 25448   000BF0  B4D8               	btfsc	status,2,c
 25449   000BF2  D011               	goto	l21600
 25450                           
 25451                           ; BSR set to: 1
 25452                           ;../servo.c: 360:                                 sendProducedEvent(((8 + 4*(io))+1), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25453   000BF4  51D7               	movf	pollServos@io& (0+255),w,b
 25454   000BF6  0D07               	mullw	7
 25455   000BF8  50F3               	movf	243,w,c
 25456   000BFA  0F11               	addlw	17
 25457   000BFC  ECD9  F05D         	call	_getNV
 25458   000C00  0100               	movlb	0	; () banked
 25459   000C02  518D               	movf	?_getNV& (0+255),w,b
 25460   000C04  0B40               	andlw	64
 25461   000C06  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25462   000C08  0101               	movlb	1	; () banked
 25463   000C0A  51D7               	movf	pollServos@io& (0+255),w,b
 25464   000C0C  0D04               	mullw	4
 25465   000C0E  50F3               	movf	243,w,c
 25466   000C10  0F09               	addlw	9
 25467   000C12  ECC2  F04A         	call	_sendProducedEvent
 25468   000C16                     l21600:
 25469                           
 25470                           ;../servo.c: 363:                         if (targetPos[io] == currentPos[io]) {
 25471   000C16  0101               	movlb	1	; () banked
 25472   000C18  51D7               	movf	pollServos@io& (0+255),w,b
 25473   000C1A  0FA9               	addlw	low _currentPos
 25474   000C1C  6ED9               	movwf	fsr2l,c
 25475   000C1E  6ADA               	clrf	fsr2h,c
 25476   000C20  0E20               	movlw	low _targetPos
 25477   000C22  25D7               	addwf	pollServos@io& (0+255),w,b
 25478   000C24  6EE1               	movwf	fsr1l,c
 25479   000C26  6AE2               	clrf	fsr1h,c
 25480   000C28  0E01               	movlw	high _targetPos
 25481   000C2A  22E2               	addwfc	fsr1h,f,c
 25482   000C2C  50DE               	movf	postinc2,w,c
 25483   000C2E  18E6               	xorwf	postinc1,w,c
 25484   000C30  A4D8               	btfss	status,2,c
 25485   000C32  EF49  F00B         	goto	l21766
 25486                           
 25487                           ; BSR set to: 1
 25488                           ;../servo.c: 364:                             servoState[io] = SS_STOPPED;
 25489   000C36  0E10               	movlw	low _servoState
 25490   000C38  25D7               	addwf	pollServos@io& (0+255),w,b
 25491   000C3A  6ED9               	movwf	fsr2l,c
 25492   000C3C  6ADA               	clrf	fsr2h,c
 25493   000C3E  0E01               	movlw	high _servoState
 25494   000C40  22DA               	addwfc	fsr2h,f,c
 25495   000C42  0E01               	movlw	1
 25496   000C44  6EDF               	movwf	indf2,c
 25497                           
 25498                           ; BSR set to: 1
 25499                           ;../servo.c: 365:                             ticksWhenStopped[io].val = tickGet();
 25500   000C46  EC6B  F05A         	call	_tickGet	;wreg free
 25501   000C4A  0101               	movlb	1	; () banked
 25502   000C4C  51D7               	movf	pollServos@io& (0+255),w,b
 25503   000C4E  0D04               	mullw	4
 25504   000C50  0E88               	movlw	low _ticksWhenStopped
 25505   000C52  24F3               	addwf	243,w,c
 25506   000C54  6ED9               	movwf	fsr2l,c
 25507   000C56  0E03               	movlw	high _ticksWhenStopped
 25508   000C58  20F4               	addwfc	prodh,w,c
 25509   000C5A  6EDA               	movwf	fsr2h,c
 25510   000C5C  0100               	movlb	0	; () banked
 25511   000C5E  C08D  FFDE         	movff	?_tickGet,postinc2
 25512   000C62  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25513   000C66  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25514   000C6A  C090  FFDE         	movff	?_tickGet+3,postinc2
 25515                           
 25516                           ; BSR set to: 0
 25517                           ;../servo.c: 367:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           2))) {
 25518   000C6E  0101               	movlb	1	; () banked
 25519   000C70  51D7               	movf	pollServos@io& (0+255),w,b
 25520   000C72  0D07               	mullw	7
 25521   000C74  50F3               	movf	243,w,c
 25522   000C76  0F12               	addlw	18
 25523   000C78  ECD9  F05D         	call	_getNV
 25524   000C7C  0101               	movlb	1	; () banked
 25525   000C7E  51D7               	movf	pollServos@io& (0+255),w,b
 25526   000C80  0FA9               	addlw	low _currentPos
 25527   000C82  6ED9               	movwf	fsr2l,c
 25528   000C84  6ADA               	clrf	fsr2h,c
 25529   000C86  50DF               	movf	indf2,w,c
 25530   000C88  6FCC               	movwf	??_pollServos& (0+255),b
 25531   000C8A  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25532   000C8C  0100               	movlb	0	; () banked
 25533   000C8E  518D               	movf	?_getNV& (0+255),w,b
 25534   000C90  0101               	movlb	1	; () banked
 25535   000C92  19CC               	xorwf	??_pollServos& (0+255),w,b
 25536   000C94  E11B               	bnz	l21610
 25537   000C96  0100               	movlb	0	; () banked
 25538   000C98  518E               	movf	(?_getNV+1)& (0+255),w,b
 25539   000C9A  0101               	movlb	1	; () banked
 25540   000C9C  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 25541   000C9E  A4D8               	btfss	status,2,c
 25542   000CA0  D015               	goto	l21610
 25543                           
 25544                           ; BSR set to: 1
 25545                           ;../servo.c: 368:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25546   000CA2  51D7               	movf	pollServos@io& (0+255),w,b
 25547   000CA4  0D07               	mullw	7
 25548   000CA6  50F3               	movf	243,w,c
 25549   000CA8  0F11               	addlw	17
 25550   000CAA  ECD9  F05D         	call	_getNV
 25551   000CAE  0100               	movlb	0	; () banked
 25552   000CB0  BD8D               	btfsc	?_getNV& (0+255),6,b
 25553   000CB2  D002               	goto	u22330
 25554   000CB4  0E01               	movlw	1
 25555   000CB6  D001               	goto	u22340
 25556   000CB8                     u22330:
 25557   000CB8  0E00               	movlw	0
 25558   000CBA                     u22340:
 25559   000CBA  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25560   000CBC  0101               	movlb	1	; () banked
 25561   000CBE  51D7               	movf	pollServos@io& (0+255),w,b
 25562   000CC0  0D04               	mullw	4
 25563   000CC2  50F3               	movf	243,w,c
 25564   000CC4  0F08               	addlw	8
 25565   000CC6  ECC2  F04A         	call	_sendProducedEvent
 25566                           
 25567                           ;../servo.c: 369:                             } else {
 25568   000CCA  D014               	goto	l21612
 25569   000CCC                     l21610:
 25570                           
 25571                           ; BSR set to: 1
 25572                           ;../servo.c: 370:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25573   000CCC  51D7               	movf	pollServos@io& (0+255),w,b
 25574   000CCE  0D07               	mullw	7
 25575   000CD0  50F3               	movf	243,w,c
 25576   000CD2  0F11               	addlw	17
 25577   000CD4  ECD9  F05D         	call	_getNV
 25578   000CD8  0100               	movlb	0	; () banked
 25579   000CDA  BD8D               	btfsc	?_getNV& (0+255),6,b
 25580   000CDC  D002               	goto	u22350
 25581   000CDE  0E01               	movlw	1
 25582   000CE0  D001               	goto	u22360
 25583   000CE2                     u22350:
 25584   000CE2  0E00               	movlw	0
 25585   000CE4                     u22360:
 25586   000CE4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25587   000CE6  0101               	movlb	1	; () banked
 25588   000CE8  51D7               	movf	pollServos@io& (0+255),w,b
 25589   000CEA  0D04               	mullw	4
 25590   000CEC  50F3               	movf	243,w,c
 25591   000CEE  0F0A               	addlw	10
 25592   000CF0  ECC2  F04A         	call	_sendProducedEvent
 25593   000CF4                     l21612:
 25594                           
 25595                           ;../servo.c: 372:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25596   000CF4  0EDE               	movlw	222
 25597   000CF6  0101               	movlb	1	; () banked
 25598   000CF8  25D7               	addwf	pollServos@io& (0+255),w,b
 25599   000CFA  6FCC               	movwf	??_pollServos& (0+255),b
 25600   000CFC  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25601   000CFE  0E03               	movlw	3
 25602   000D00  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 25603   000D02  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 25604   000D06  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25605   000D0A  0100               	movlb	0	; () banked
 25606   000D0C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25607   000D0E  0101               	movlb	1	; () banked
 25608   000D10  51D7               	movf	pollServos@io& (0+255),w,b
 25609   000D12  0FA9               	addlw	low _currentPos
 25610   000D14  6ED9               	movwf	fsr2l,c
 25611   000D16  6ADA               	clrf	fsr2h,c
 25612   000D18  50DF               	movf	indf2,w,c
 25613   000D1A  0100               	movlb	0	; () banked
 25614   000D1C  6FA7               	movwf	writeNVM@value& (0+255),b
 25615   000D1E  0E00               	movlw	0
 25616   000D20  ECE7  F05B         	call	_writeNVM
 25617   000D24  EF49  F00B         	goto	l21766
 25618   000D28                     l21616:
 25619                           
 25620                           ; BSR set to: 1
 25621   000D28  0E10               	movlw	low _servoState
 25622   000D2A  25D7               	addwf	pollServos@io& (0+255),w,b
 25623   000D2C  6ED9               	movwf	fsr2l,c
 25624   000D2E  6ADA               	clrf	fsr2h,c
 25625   000D30  0E01               	movlw	high _servoState
 25626   000D32  22DA               	addwfc	fsr2h,f,c
 25627   000D34  50DF               	movf	indf2,w,c
 25628   000D36  6FCC               	movwf	??_pollServos& (0+255),b
 25629   000D38  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25630                           
 25631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25632                           ; Switch size 1, requested type "simple"
 25633                           ; Number of cases is 1, Range of values is 0 to 0
 25634                           ; switch strategies available:
 25635                           ; Name         Instructions Cycles
 25636                           ; simple_byte            4     3 (average)
 25637                           ;	Chosen strategy is simple_byte
 25638   000D3A  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 25639   000D3C  0A00               	xorlw	0	; case 0
 25640   000D3E  A4D8               	btfss	status,2,c
 25641   000D40  EF49  F00B         	goto	l21766
 25642                           
 25643                           ; BSR set to: 1
 25644                           ; Switch size 1, requested type "simple"
 25645                           ; Number of cases is 4, Range of values is 0 to 3
 25646                           ; switch strategies available:
 25647                           ; Name         Instructions Cycles
 25648                           ; simple_byte           13     7 (average)
 25649                           ;	Chosen strategy is simple_byte
 25650   000D44  51CC               	movf	??_pollServos& (0+255),w,b
 25651   000D46  0A00               	xorlw	0	; case 0
 25652   000D48  B4D8               	btfsc	status,2,c
 25653   000D4A  EF49  F00B         	goto	l21766
 25654   000D4E  0A01               	xorlw	1	; case 1
 25655   000D50  B4D8               	btfsc	status,2,c
 25656   000D52  EF49  F00B         	goto	l21766
 25657   000D56  0A03               	xorlw	3	; case 2
 25658   000D58  B4D8               	btfsc	status,2,c
 25659   000D5A  D5F2               	goto	l21540
 25660   000D5C  0A01               	xorlw	1	; case 3
 25661   000D5E  B4D8               	btfsc	status,2,c
 25662   000D60  D5AA               	goto	l21532
 25663   000D62  EF49  F00B         	goto	l21766
 25664   000D66                     l21618:
 25665                           
 25666                           ; BSR set to: 1
 25667                           ;../servo.c: 383:                         initBounce(io);
 25668   000D66  51D7               	movf	pollServos@io& (0+255),w,b
 25669   000D68  EC35  F060         	call	_initBounce
 25670                           
 25671                           ;../servo.c: 384:                         servoState[io] = SS_MOVING;
 25672   000D6C  0E10               	movlw	low _servoState
 25673   000D6E  0101               	movlb	1	; () banked
 25674   000D70  25D7               	addwf	pollServos@io& (0+255),w,b
 25675   000D72  6ED9               	movwf	fsr2l,c
 25676   000D74  6ADA               	clrf	fsr2h,c
 25677   000D76  0E01               	movlw	high _servoState
 25678   000D78  22DA               	addwfc	fsr2h,f,c
 25679   000D7A  0E02               	movlw	2
 25680   000D7C  6EDF               	movwf	indf2,c
 25681                           
 25682                           ; BSR set to: 1
 25683                           ;../servo.c: 385:                         loopCount[io] = 0;
 25684   000D7E  0E54               	movlw	low _loopCount
 25685   000D80  25D7               	addwf	pollServos@io& (0+255),w,b
 25686   000D82  6ED9               	movwf	fsr2l,c
 25687   000D84  6ADA               	clrf	fsr2h,c
 25688   000D86  0E02               	movlw	high _loopCount
 25689   000D88  22DA               	addwfc	fsr2h,f,c
 25690   000D8A  6ADF               	clrf	indf2,c
 25691   000D8C                     l21624:
 25692                           
 25693                           ; BSR set to: 1
 25694                           ;../servo.c: 389:                         loopCount[io]++;
 25695   000D8C  0E54               	movlw	low _loopCount
 25696   000D8E  25D7               	addwf	pollServos@io& (0+255),w,b
 25697   000D90  6ED9               	movwf	fsr2l,c
 25698   000D92  6ADA               	clrf	fsr2h,c
 25699   000D94  0E02               	movlw	high _loopCount
 25700   000D96  22DA               	addwfc	fsr2h,f,c
 25701   000D98  2ADF               	incf	indf2,f,c
 25702                           
 25703                           ; BSR set to: 1
 25704                           ;../servo.c: 390:                         if (loopCount[io] >= 255) {
 25705   000D9A  0E54               	movlw	low _loopCount
 25706   000D9C  25D7               	addwf	pollServos@io& (0+255),w,b
 25707   000D9E  6ED9               	movwf	fsr2l,c
 25708   000DA0  6ADA               	clrf	fsr2h,c
 25709   000DA2  0E02               	movlw	high _loopCount
 25710   000DA4  22DA               	addwfc	fsr2h,f,c
 25711   000DA6  28DE               	incf	postinc2,w,c
 25712   000DA8  A4D8               	btfss	status,2,c
 25713   000DAA  D057               	goto	l21638
 25714                           
 25715                           ; BSR set to: 1
 25716                           ;../servo.c: 391:                             servoState[io] = SS_STOPPED;
 25717   000DAC  0E10               	movlw	low _servoState
 25718   000DAE  25D7               	addwf	pollServos@io& (0+255),w,b
 25719   000DB0  6ED9               	movwf	fsr2l,c
 25720   000DB2  6ADA               	clrf	fsr2h,c
 25721   000DB4  0E01               	movlw	high _servoState
 25722   000DB6  22DA               	addwfc	fsr2h,f,c
 25723   000DB8  0E01               	movlw	1
 25724   000DBA  6EDF               	movwf	indf2,c
 25725                           
 25726                           ; BSR set to: 1
 25727                           ;../servo.c: 392:                             ticksWhenStopped[io].val = tickGet();
 25728   000DBC  EC6B  F05A         	call	_tickGet	;wreg free
 25729   000DC0  0101               	movlb	1	; () banked
 25730   000DC2  51D7               	movf	pollServos@io& (0+255),w,b
 25731   000DC4  0D04               	mullw	4
 25732   000DC6  0E88               	movlw	low _ticksWhenStopped
 25733   000DC8  24F3               	addwf	243,w,c
 25734   000DCA  6ED9               	movwf	fsr2l,c
 25735   000DCC  0E03               	movlw	high _ticksWhenStopped
 25736   000DCE  20F4               	addwfc	prodh,w,c
 25737   000DD0  6EDA               	movwf	fsr2h,c
 25738   000DD2  0100               	movlb	0	; () banked
 25739   000DD4  C08D  FFDE         	movff	?_tickGet,postinc2
 25740   000DD8  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25741   000DDC  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25742   000DE0  C090  FFDE         	movff	?_tickGet+3,postinc2
 25743                           
 25744                           ; BSR set to: 0
 25745                           ;../servo.c: 393:                             currentPos[io] = targetPos[io];
 25746   000DE4  0E20               	movlw	low _targetPos
 25747   000DE6  0101               	movlb	1	; () banked
 25748   000DE8  25D7               	addwf	pollServos@io& (0+255),w,b
 25749   000DEA  6ED9               	movwf	fsr2l,c
 25750   000DEC  6ADA               	clrf	fsr2h,c
 25751   000DEE  0E01               	movlw	high _targetPos
 25752   000DF0  22DA               	addwfc	fsr2h,f,c
 25753   000DF2  51D7               	movf	pollServos@io& (0+255),w,b
 25754   000DF4  0FA9               	addlw	low _currentPos
 25755   000DF6  6EE1               	movwf	fsr1l,c
 25756   000DF8  6AE2               	clrf	fsr1h,c
 25757   000DFA  CFDF FFE7          	movff	indf2,indf1
 25758                           
 25759                           ; BSR set to: 1
 25760                           ;../servo.c: 394:                             sendProducedEvent(((8 + 4*(io))+0), !(getN
      +                          V((16 + 7*(io) + 1)) & 0x40));
 25761   000DFE  51D7               	movf	pollServos@io& (0+255),w,b
 25762   000E00  0D07               	mullw	7
 25763   000E02  50F3               	movf	243,w,c
 25764   000E04  0F11               	addlw	17
 25765   000E06  ECD9  F05D         	call	_getNV
 25766   000E0A  0100               	movlb	0	; () banked
 25767   000E0C  BD8D               	btfsc	?_getNV& (0+255),6,b
 25768   000E0E  D002               	goto	u22380
 25769   000E10  0E01               	movlw	1
 25770   000E12  D001               	goto	u22390
 25771   000E14                     u22380:
 25772   000E14  0E00               	movlw	0
 25773   000E16                     u22390:
 25774   000E16  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25775   000E18  0101               	movlb	1	; () banked
 25776   000E1A  51D7               	movf	pollServos@io& (0+255),w,b
 25777   000E1C  0D04               	mullw	4
 25778   000E1E  50F3               	movf	243,w,c
 25779   000E20  0F08               	addlw	8
 25780   000E22  ECC2  F04A         	call	_sendProducedEvent
 25781                           
 25782                           ;../servo.c: 395:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 25783   000E26  0EDE               	movlw	222
 25784   000E28  0101               	movlb	1	; () banked
 25785   000E2A  25D7               	addwf	pollServos@io& (0+255),w,b
 25786   000E2C  6FCC               	movwf	??_pollServos& (0+255),b
 25787   000E2E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25788   000E30  0E03               	movlw	3
 25789   000E32  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 25790   000E34  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 25791   000E38  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25792   000E3C  0100               	movlb	0	; () banked
 25793   000E3E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25794   000E40  0101               	movlb	1	; () banked
 25795   000E42  51D7               	movf	pollServos@io& (0+255),w,b
 25796   000E44  0FA9               	addlw	low _currentPos
 25797   000E46  6ED9               	movwf	fsr2l,c
 25798   000E48  6ADA               	clrf	fsr2h,c
 25799   000E4A  50DF               	movf	indf2,w,c
 25800   000E4C  0100               	movlb	0	; () banked
 25801   000E4E  6FA7               	movwf	writeNVM@value& (0+255),b
 25802   000E50  0E00               	movlw	0
 25803   000E52  ECE7  F05B         	call	_writeNVM
 25804                           
 25805                           ;../servo.c: 396:                             break;
 25806   000E56  EF49  F00B         	goto	l21766
 25807   000E5A                     l21638:
 25808                           
 25809                           ; BSR set to: 1
 25810                           ;../servo.c: 399:                         target = (uint8_t)getNV((16 + 7*(io) + 2));
 25811   000E5A  51D7               	movf	pollServos@io& (0+255),w,b
 25812   000E5C  0D07               	mullw	7
 25813   000E5E  50F3               	movf	243,w,c
 25814   000E60  0F12               	addlw	18
 25815   000E62  ECD9  F05D         	call	_getNV
 25816   000E66  0100               	movlb	0	; () banked
 25817   000E68  518D               	movf	?_getNV& (0+255),w,b
 25818   000E6A  0101               	movlb	1	; () banked
 25819   000E6C  6FD4               	movwf	pollServos@target& (0+255),b
 25820                           
 25821                           ; BSR set to: 1
 25822                           ;../servo.c: 403:                         if (targetPos[io] == target) {
 25823   000E6E  0E20               	movlw	low _targetPos
 25824   000E70  25D7               	addwf	pollServos@io& (0+255),w,b
 25825   000E72  6ED9               	movwf	fsr2l,c
 25826   000E74  6ADA               	clrf	fsr2h,c
 25827   000E76  0E01               	movlw	high _targetPos
 25828   000E78  22DA               	addwfc	fsr2h,f,c
 25829   000E7A  51D4               	movf	pollServos@target& (0+255),w,b
 25830   000E7C  18DE               	xorwf	postinc2,w,c
 25831   000E7E  A4D8               	btfss	status,2,c
 25832   000E80  D05E               	goto	l21654
 25833                           
 25834                           ; BSR set to: 1
 25835                           ;../servo.c: 404:                             if (bounceUp(io)) {
 25836   000E82  51D7               	movf	pollServos@io& (0+255),w,b
 25837   000E84  EC26  F02D         	call	_bounceUp
 25838   000E88  0900               	iorlw	0
 25839   000E8A  B4D8               	btfsc	status,2,c
 25840   000E8C  EF49  F00B         	goto	l21766
 25841                           
 25842                           ;../servo.c: 405:                                 servoState[io] = SS_STOPPED;
 25843   000E90  0E10               	movlw	low _servoState
 25844   000E92  0101               	movlb	1	; () banked
 25845   000E94  25D7               	addwf	pollServos@io& (0+255),w,b
 25846   000E96  6ED9               	movwf	fsr2l,c
 25847   000E98  6ADA               	clrf	fsr2h,c
 25848   000E9A  0E01               	movlw	high _servoState
 25849   000E9C  22DA               	addwfc	fsr2h,f,c
 25850   000E9E  0E01               	movlw	1
 25851   000EA0  6EDF               	movwf	indf2,c
 25852                           
 25853                           ; BSR set to: 1
 25854                           ;../servo.c: 406:                                 ticksWhenStopped[io].val = tickGet();
 25855   000EA2  EC6B  F05A         	call	_tickGet	;wreg free
 25856   000EA6  0101               	movlb	1	; () banked
 25857   000EA8  51D7               	movf	pollServos@io& (0+255),w,b
 25858   000EAA  0D04               	mullw	4
 25859   000EAC  0E88               	movlw	low _ticksWhenStopped
 25860   000EAE  24F3               	addwf	243,w,c
 25861   000EB0  6ED9               	movwf	fsr2l,c
 25862   000EB2  0E03               	movlw	high _ticksWhenStopped
 25863   000EB4  20F4               	addwfc	prodh,w,c
 25864   000EB6  6EDA               	movwf	fsr2h,c
 25865   000EB8  0100               	movlb	0	; () banked
 25866   000EBA  C08D  FFDE         	movff	?_tickGet,postinc2
 25867   000EBE  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25868   000EC2  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25869   000EC6  C090  FFDE         	movff	?_tickGet+3,postinc2
 25870                           
 25871                           ; BSR set to: 0
 25872                           ;../servo.c: 407:                                 currentPos[io] = targetPos[io];
 25873   000ECA  0E20               	movlw	low _targetPos
 25874   000ECC  0101               	movlb	1	; () banked
 25875   000ECE  25D7               	addwf	pollServos@io& (0+255),w,b
 25876   000ED0  6ED9               	movwf	fsr2l,c
 25877   000ED2  6ADA               	clrf	fsr2h,c
 25878   000ED4  0E01               	movlw	high _targetPos
 25879   000ED6  22DA               	addwfc	fsr2h,f,c
 25880   000ED8  51D7               	movf	pollServos@io& (0+255),w,b
 25881   000EDA  0FA9               	addlw	low _currentPos
 25882   000EDC  6EE1               	movwf	fsr1l,c
 25883   000EDE  6AE2               	clrf	fsr1h,c
 25884   000EE0  CFDF FFE7          	movff	indf2,indf1
 25885                           
 25886                           ; BSR set to: 1
 25887                           ;../servo.c: 408:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 25888   000EE4  51D7               	movf	pollServos@io& (0+255),w,b
 25889   000EE6  0D07               	mullw	7
 25890   000EE8  50F3               	movf	243,w,c
 25891   000EEA  0F11               	addlw	17
 25892   000EEC  ECD9  F05D         	call	_getNV
 25893   000EF0  0100               	movlb	0	; () banked
 25894   000EF2  BD8D               	btfsc	?_getNV& (0+255),6,b
 25895   000EF4  D002               	goto	u22420
 25896   000EF6  0E01               	movlw	1
 25897   000EF8  D001               	goto	u22430
 25898   000EFA                     u22420:
 25899   000EFA  0E00               	movlw	0
 25900   000EFC                     u22430:
 25901   000EFC  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25902   000EFE  0101               	movlb	1	; () banked
 25903   000F00  51D7               	movf	pollServos@io& (0+255),w,b
 25904   000F02  0D04               	mullw	4
 25905   000F04  50F3               	movf	243,w,c
 25906   000F06  0F08               	addlw	8
 25907   000F08  ECC2  F04A         	call	_sendProducedEvent
 25908                           
 25909                           ;../servo.c: 409:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 25910   000F0C  0EDE               	movlw	222
 25911   000F0E  0101               	movlb	1	; () banked
 25912   000F10  25D7               	addwf	pollServos@io& (0+255),w,b
 25913   000F12  6FCC               	movwf	??_pollServos& (0+255),b
 25914   000F14  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 25915   000F16  0E03               	movlw	3
 25916   000F18  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 25917   000F1A  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 25918   000F1E  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 25919   000F22  0100               	movlb	0	; () banked
 25920   000F24  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 25921   000F26  0101               	movlb	1	; () banked
 25922   000F28  51D7               	movf	pollServos@io& (0+255),w,b
 25923   000F2A  0FA9               	addlw	low _currentPos
 25924   000F2C  6ED9               	movwf	fsr2l,c
 25925   000F2E  6ADA               	clrf	fsr2h,c
 25926   000F30  50DF               	movf	indf2,w,c
 25927   000F32  0100               	movlb	0	; () banked
 25928   000F34  6FA7               	movwf	writeNVM@value& (0+255),b
 25929   000F36  0E00               	movlw	0
 25930   000F38  ECE7  F05B         	call	_writeNVM
 25931   000F3C  D3AA               	goto	l21766
 25932   000F3E                     l21654:
 25933                           
 25934                           ; BSR set to: 1
 25935                           ;../servo.c: 412:                             if (bounceDown(io)) {
 25936   000F3E  51D7               	movf	pollServos@io& (0+255),w,b
 25937   000F40  EC50  F014         	call	_bounceDown
 25938   000F44  0900               	iorlw	0
 25939   000F46  B4D8               	btfsc	status,2,c
 25940   000F48  D3A4               	goto	l21766
 25941                           
 25942                           ;../servo.c: 413:                                 servoState[io] = SS_STOPPED;
 25943   000F4A  0E10               	movlw	low _servoState
 25944   000F4C  0101               	movlb	1	; () banked
 25945   000F4E  25D7               	addwf	pollServos@io& (0+255),w,b
 25946   000F50  6ED9               	movwf	fsr2l,c
 25947   000F52  6ADA               	clrf	fsr2h,c
 25948   000F54  0E01               	movlw	high _servoState
 25949   000F56  22DA               	addwfc	fsr2h,f,c
 25950   000F58  0E01               	movlw	1
 25951   000F5A  6EDF               	movwf	indf2,c
 25952                           
 25953                           ; BSR set to: 1
 25954                           ;../servo.c: 414:                                 ticksWhenStopped[io].val = tickGet();
 25955   000F5C  EC6B  F05A         	call	_tickGet	;wreg free
 25956   000F60  0101               	movlb	1	; () banked
 25957   000F62  51D7               	movf	pollServos@io& (0+255),w,b
 25958   000F64  0D04               	mullw	4
 25959   000F66  0E88               	movlw	low _ticksWhenStopped
 25960   000F68  24F3               	addwf	243,w,c
 25961   000F6A  6ED9               	movwf	fsr2l,c
 25962   000F6C  0E03               	movlw	high _ticksWhenStopped
 25963   000F6E  20F4               	addwfc	prodh,w,c
 25964   000F70  6EDA               	movwf	fsr2h,c
 25965   000F72  0100               	movlb	0	; () banked
 25966   000F74  C08D  FFDE         	movff	?_tickGet,postinc2
 25967   000F78  C08E  FFDE         	movff	?_tickGet+1,postinc2
 25968   000F7C  C08F  FFDE         	movff	?_tickGet+2,postinc2
 25969   000F80  C090  FFDE         	movff	?_tickGet+3,postinc2
 25970                           
 25971                           ; BSR set to: 0
 25972                           ;../servo.c: 415:                                 currentPos[io] = targetPos[io];
 25973   000F84  0E20               	movlw	low _targetPos
 25974   000F86  0101               	movlb	1	; () banked
 25975   000F88  25D7               	addwf	pollServos@io& (0+255),w,b
 25976   000F8A  6ED9               	movwf	fsr2l,c
 25977   000F8C  6ADA               	clrf	fsr2h,c
 25978   000F8E  0E01               	movlw	high _targetPos
 25979   000F90  22DA               	addwfc	fsr2h,f,c
 25980   000F92  51D7               	movf	pollServos@io& (0+255),w,b
 25981   000F94  0FA9               	addlw	low _currentPos
 25982   000F96  6EE1               	movwf	fsr1l,c
 25983   000F98  6AE2               	clrf	fsr1h,c
 25984   000F9A  CFDF FFE7          	movff	indf2,indf1
 25985                           
 25986                           ; BSR set to: 1
 25987                           ;../servo.c: 416:                                 sendProducedEvent(((8 + 4*(io))+0), ge
      +                          tNV((16 + 7*(io) + 1)) & 0x40);
 25988   000F9E  51D7               	movf	pollServos@io& (0+255),w,b
 25989   000FA0  0D07               	mullw	7
 25990   000FA2  50F3               	movf	243,w,c
 25991   000FA4  0F11               	addlw	17
 25992   000FA6  ECD9  F05D         	call	_getNV
 25993   000FAA  0100               	movlb	0	; () banked
 25994   000FAC  518D               	movf	?_getNV& (0+255),w,b
 25995   000FAE  0B40               	andlw	64
 25996   000FB0  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 25997   000FB2  0101               	movlb	1	; () banked
 25998   000FB4  51D7               	movf	pollServos@io& (0+255),w,b
 25999   000FB6  0D04               	mullw	4
 26000   000FB8  50F3               	movf	243,w,c
 26001   000FBA  0F08               	addlw	8
 26002   000FBC  ECC2  F04A         	call	_sendProducedEvent
 26003                           
 26004                           ;../servo.c: 417:                                 writeNVM(EEPROM_NVM_TYPE, ((eeprom_add
      +                          ress_t)((0x3FF -8))-25)+io, currentPos[io]);
 26005   000FC0  0EDE               	movlw	222
 26006   000FC2  0101               	movlb	1	; () banked
 26007   000FC4  25D7               	addwf	pollServos@io& (0+255),w,b
 26008   000FC6  6FCC               	movwf	??_pollServos& (0+255),b
 26009   000FC8  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26010   000FCA  0E03               	movlw	3
 26011   000FCC  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 26012   000FCE  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 26013   000FD2  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26014   000FD6  0100               	movlb	0	; () banked
 26015   000FD8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26016   000FDA  0101               	movlb	1	; () banked
 26017   000FDC  51D7               	movf	pollServos@io& (0+255),w,b
 26018   000FDE  0FA9               	addlw	low _currentPos
 26019   000FE0  6ED9               	movwf	fsr2l,c
 26020   000FE2  6ADA               	clrf	fsr2h,c
 26021   000FE4  50DF               	movf	indf2,w,c
 26022   000FE6  0100               	movlb	0	; () banked
 26023   000FE8  6FA7               	movwf	writeNVM@value& (0+255),b
 26024   000FEA  0E00               	movlw	0
 26025   000FEC  ECE7  F05B         	call	_writeNVM
 26026   000FF0  D350               	goto	l21766
 26027   000FF2                     l21668:
 26028                           
 26029                           ; BSR set to: 0
 26030   000FF2  0E10               	movlw	low _servoState
 26031   000FF4  0101               	movlb	1	; () banked
 26032   000FF6  25D7               	addwf	pollServos@io& (0+255),w,b
 26033   000FF8  6ED9               	movwf	fsr2l,c
 26034   000FFA  6ADA               	clrf	fsr2h,c
 26035   000FFC  0E01               	movlw	high _servoState
 26036   000FFE  22DA               	addwfc	fsr2h,f,c
 26037   001000  50DF               	movf	indf2,w,c
 26038   001002  6FCC               	movwf	??_pollServos& (0+255),b
 26039   001004  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26040                           
 26041                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26042                           ; Switch size 1, requested type "simple"
 26043                           ; Number of cases is 1, Range of values is 0 to 0
 26044                           ; switch strategies available:
 26045                           ; Name         Instructions Cycles
 26046                           ; simple_byte            4     3 (average)
 26047                           ;	Chosen strategy is simple_byte
 26048   001006  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26049   001008  0A00               	xorlw	0	; case 0
 26050   00100A  A4D8               	btfss	status,2,c
 26051   00100C  D342               	goto	l21766
 26052                           
 26053                           ; BSR set to: 1
 26054                           ; Switch size 1, requested type "simple"
 26055                           ; Number of cases is 4, Range of values is 0 to 3
 26056                           ; switch strategies available:
 26057                           ; Name         Instructions Cycles
 26058                           ; simple_byte           13     7 (average)
 26059                           ;	Chosen strategy is simple_byte
 26060   00100E  51CC               	movf	??_pollServos& (0+255),w,b
 26061   001010  0A00               	xorlw	0	; case 0
 26062   001012  B4D8               	btfsc	status,2,c
 26063   001014  D33E               	goto	l21766
 26064   001016  0A01               	xorlw	1	; case 1
 26065   001018  B4D8               	btfsc	status,2,c
 26066   00101A  D33B               	goto	l21766
 26067   00101C  0A03               	xorlw	3	; case 2
 26068   00101E  B4D8               	btfsc	status,2,c
 26069   001020  D6B5               	goto	l21624
 26070   001022  0A01               	xorlw	1	; case 3
 26071   001024  B4D8               	btfsc	status,2,c
 26072   001026  D69F               	goto	l21618
 26073   001028  D334               	goto	l21766
 26074   00102A                     l21670:
 26075                           
 26076                           ; BSR set to: 1
 26077                           ;../servo.c: 429:                         if (currentPos[io] == getNV((16 + 7*(io) + 3))
      +                          ) {
 26078   00102A  51D7               	movf	pollServos@io& (0+255),w,b
 26079   00102C  0D07               	mullw	7
 26080   00102E  50F3               	movf	243,w,c
 26081   001030  0F13               	addlw	19
 26082   001032  ECD9  F05D         	call	_getNV
 26083   001036  0101               	movlb	1	; () banked
 26084   001038  51D7               	movf	pollServos@io& (0+255),w,b
 26085   00103A  0FA9               	addlw	low _currentPos
 26086   00103C  6ED9               	movwf	fsr2l,c
 26087   00103E  6ADA               	clrf	fsr2h,c
 26088   001040  50DF               	movf	indf2,w,c
 26089   001042  6FCC               	movwf	??_pollServos& (0+255),b
 26090   001044  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26091   001046  0100               	movlb	0	; () banked
 26092   001048  518D               	movf	?_getNV& (0+255),w,b
 26093   00104A  0101               	movlb	1	; () banked
 26094   00104C  19CC               	xorwf	??_pollServos& (0+255),w,b
 26095   00104E  E117               	bnz	l21674
 26096   001050  0100               	movlb	0	; () banked
 26097   001052  518E               	movf	(?_getNV+1)& (0+255),w,b
 26098   001054  0101               	movlb	1	; () banked
 26099   001056  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26100   001058  A4D8               	btfss	status,2,c
 26101   00105A  D011               	goto	l21674
 26102                           
 26103                           ; BSR set to: 1
 26104                           ;../servo.c: 430:                             sendProducedEvent(((8 + 4*(io))+0), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26105   00105C  51D7               	movf	pollServos@io& (0+255),w,b
 26106   00105E  0D07               	mullw	7
 26107   001060  50F3               	movf	243,w,c
 26108   001062  0F11               	addlw	17
 26109   001064  ECD9  F05D         	call	_getNV
 26110   001068  0100               	movlb	0	; () banked
 26111   00106A  518D               	movf	?_getNV& (0+255),w,b
 26112   00106C  0B40               	andlw	64
 26113   00106E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26114   001070  0101               	movlb	1	; () banked
 26115   001072  51D7               	movf	pollServos@io& (0+255),w,b
 26116   001074  0D04               	mullw	4
 26117   001076  50F3               	movf	243,w,c
 26118   001078  0F08               	addlw	8
 26119   00107A  ECC2  F04A         	call	_sendProducedEvent
 26120   00107E                     l21674:
 26121                           
 26122                           ;../servo.c: 432:                         if (currentPos[io] == getNV((16 + 7*(io) + 4))
      +                          ) {
 26123   00107E  0101               	movlb	1	; () banked
 26124   001080  51D7               	movf	pollServos@io& (0+255),w,b
 26125   001082  0D07               	mullw	7
 26126   001084  50F3               	movf	243,w,c
 26127   001086  0F14               	addlw	20
 26128   001088  ECD9  F05D         	call	_getNV
 26129   00108C  0101               	movlb	1	; () banked
 26130   00108E  51D7               	movf	pollServos@io& (0+255),w,b
 26131   001090  0FA9               	addlw	low _currentPos
 26132   001092  6ED9               	movwf	fsr2l,c
 26133   001094  6ADA               	clrf	fsr2h,c
 26134   001096  50DF               	movf	indf2,w,c
 26135   001098  6FCC               	movwf	??_pollServos& (0+255),b
 26136   00109A  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26137   00109C  0100               	movlb	0	; () banked
 26138   00109E  518D               	movf	?_getNV& (0+255),w,b
 26139   0010A0  0101               	movlb	1	; () banked
 26140   0010A2  19CC               	xorwf	??_pollServos& (0+255),w,b
 26141   0010A4  E117               	bnz	l21678
 26142   0010A6  0100               	movlb	0	; () banked
 26143   0010A8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26144   0010AA  0101               	movlb	1	; () banked
 26145   0010AC  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26146   0010AE  A4D8               	btfss	status,2,c
 26147   0010B0  D011               	goto	l21678
 26148                           
 26149                           ; BSR set to: 1
 26150                           ;../servo.c: 433:                             sendProducedEvent(((8 + 4*(io))+1), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26151   0010B2  51D7               	movf	pollServos@io& (0+255),w,b
 26152   0010B4  0D07               	mullw	7
 26153   0010B6  50F3               	movf	243,w,c
 26154   0010B8  0F11               	addlw	17
 26155   0010BA  ECD9  F05D         	call	_getNV
 26156   0010BE  0100               	movlb	0	; () banked
 26157   0010C0  518D               	movf	?_getNV& (0+255),w,b
 26158   0010C2  0B40               	andlw	64
 26159   0010C4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26160   0010C6  0101               	movlb	1	; () banked
 26161   0010C8  51D7               	movf	pollServos@io& (0+255),w,b
 26162   0010CA  0D04               	mullw	4
 26163   0010CC  50F3               	movf	243,w,c
 26164   0010CE  0F09               	addlw	9
 26165   0010D0  ECC2  F04A         	call	_sendProducedEvent
 26166   0010D4                     l21678:
 26167                           
 26168                           ;../servo.c: 435:                         if (currentPos[io] == getNV((16 + 7*(io) + 5))
      +                          ) {
 26169   0010D4  0101               	movlb	1	; () banked
 26170   0010D6  51D7               	movf	pollServos@io& (0+255),w,b
 26171   0010D8  0D07               	mullw	7
 26172   0010DA  50F3               	movf	243,w,c
 26173   0010DC  0F15               	addlw	21
 26174   0010DE  ECD9  F05D         	call	_getNV
 26175   0010E2  0101               	movlb	1	; () banked
 26176   0010E4  51D7               	movf	pollServos@io& (0+255),w,b
 26177   0010E6  0FA9               	addlw	low _currentPos
 26178   0010E8  6ED9               	movwf	fsr2l,c
 26179   0010EA  6ADA               	clrf	fsr2h,c
 26180   0010EC  50DF               	movf	indf2,w,c
 26181   0010EE  6FCC               	movwf	??_pollServos& (0+255),b
 26182   0010F0  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26183   0010F2  0100               	movlb	0	; () banked
 26184   0010F4  518D               	movf	?_getNV& (0+255),w,b
 26185   0010F6  0101               	movlb	1	; () banked
 26186   0010F8  19CC               	xorwf	??_pollServos& (0+255),w,b
 26187   0010FA  E117               	bnz	l21682
 26188   0010FC  0100               	movlb	0	; () banked
 26189   0010FE  518E               	movf	(?_getNV+1)& (0+255),w,b
 26190   001100  0101               	movlb	1	; () banked
 26191   001102  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26192   001104  A4D8               	btfss	status,2,c
 26193   001106  D011               	goto	l21682
 26194                           
 26195                           ; BSR set to: 1
 26196                           ;../servo.c: 436:                             sendProducedEvent(((8 + 4*(io))+2), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26197   001108  51D7               	movf	pollServos@io& (0+255),w,b
 26198   00110A  0D07               	mullw	7
 26199   00110C  50F3               	movf	243,w,c
 26200   00110E  0F11               	addlw	17
 26201   001110  ECD9  F05D         	call	_getNV
 26202   001114  0100               	movlb	0	; () banked
 26203   001116  518D               	movf	?_getNV& (0+255),w,b
 26204   001118  0B40               	andlw	64
 26205   00111A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26206   00111C  0101               	movlb	1	; () banked
 26207   00111E  51D7               	movf	pollServos@io& (0+255),w,b
 26208   001120  0D04               	mullw	4
 26209   001122  50F3               	movf	243,w,c
 26210   001124  0F0A               	addlw	10
 26211   001126  ECC2  F04A         	call	_sendProducedEvent
 26212   00112A                     l21682:
 26213                           
 26214                           ;../servo.c: 438:                         if (currentPos[io] == getNV((16 + 7*(io) + 6))
      +                          ) {
 26215   00112A  0101               	movlb	1	; () banked
 26216   00112C  51D7               	movf	pollServos@io& (0+255),w,b
 26217   00112E  0D07               	mullw	7
 26218   001130  50F3               	movf	243,w,c
 26219   001132  0F16               	addlw	22
 26220   001134  ECD9  F05D         	call	_getNV
 26221   001138  0101               	movlb	1	; () banked
 26222   00113A  51D7               	movf	pollServos@io& (0+255),w,b
 26223   00113C  0FA9               	addlw	low _currentPos
 26224   00113E  6ED9               	movwf	fsr2l,c
 26225   001140  6ADA               	clrf	fsr2h,c
 26226   001142  50DF               	movf	indf2,w,c
 26227   001144  6FCC               	movwf	??_pollServos& (0+255),b
 26228   001146  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26229   001148  0100               	movlb	0	; () banked
 26230   00114A  518D               	movf	?_getNV& (0+255),w,b
 26231   00114C  0101               	movlb	1	; () banked
 26232   00114E  19CC               	xorwf	??_pollServos& (0+255),w,b
 26233   001150  E117               	bnz	l21686
 26234   001152  0100               	movlb	0	; () banked
 26235   001154  518E               	movf	(?_getNV+1)& (0+255),w,b
 26236   001156  0101               	movlb	1	; () banked
 26237   001158  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26238   00115A  A4D8               	btfss	status,2,c
 26239   00115C  D011               	goto	l21686
 26240                           
 26241                           ; BSR set to: 1
 26242                           ;../servo.c: 439:                             sendProducedEvent(((8 + 4*(io))+3), getNV(
      +                          (16 + 7*(io) + 1)) & 0x40);
 26243   00115E  51D7               	movf	pollServos@io& (0+255),w,b
 26244   001160  0D07               	mullw	7
 26245   001162  50F3               	movf	243,w,c
 26246   001164  0F11               	addlw	17
 26247   001166  ECD9  F05D         	call	_getNV
 26248   00116A  0100               	movlb	0	; () banked
 26249   00116C  518D               	movf	?_getNV& (0+255),w,b
 26250   00116E  0B40               	andlw	64
 26251   001170  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26252   001172  0101               	movlb	1	; () banked
 26253   001174  51D7               	movf	pollServos@io& (0+255),w,b
 26254   001176  0D04               	mullw	4
 26255   001178  50F3               	movf	243,w,c
 26256   00117A  0F0B               	addlw	11
 26257   00117C  ECC2  F04A         	call	_sendProducedEvent
 26258   001180                     l21686:
 26259                           
 26260                           ;../servo.c: 441:                         servoState[io] = SS_MOVING;
 26261   001180  0E10               	movlw	low _servoState
 26262   001182  0101               	movlb	1	; () banked
 26263   001184  25D7               	addwf	pollServos@io& (0+255),w,b
 26264   001186  6ED9               	movwf	fsr2l,c
 26265   001188  6ADA               	clrf	fsr2h,c
 26266   00118A  0E01               	movlw	high _servoState
 26267   00118C  22DA               	addwfc	fsr2h,f,c
 26268   00118E  0E02               	movlw	2
 26269   001190  6EDF               	movwf	indf2,c
 26270   001192                     l21688:
 26271                           
 26272                           ; BSR set to: 1
 26273                           ;../servo.c: 444:                         if (targetPos[io] > currentPos[io]) {
 26274   001192  0E20               	movlw	low _targetPos
 26275   001194  25D7               	addwf	pollServos@io& (0+255),w,b
 26276   001196  6ED9               	movwf	fsr2l,c
 26277   001198  6ADA               	clrf	fsr2h,c
 26278   00119A  0E01               	movlw	high _targetPos
 26279   00119C  22DA               	addwfc	fsr2h,f,c
 26280   00119E  51D7               	movf	pollServos@io& (0+255),w,b
 26281   0011A0  0FA9               	addlw	low _currentPos
 26282   0011A2  6EE1               	movwf	fsr1l,c
 26283   0011A4  6AE2               	clrf	fsr1h,c
 26284   0011A6  50DE               	movf	postinc2,w,c
 26285   0011A8  5CE6               	subwf	postinc1,w,c
 26286   0011AA  B0D8               	btfsc	status,0,c
 26287   0011AC  D081               	goto	l21708
 26288                           
 26289                           ; BSR set to: 1
 26290                           ;../servo.c: 445:                             if (stepsPerPollSpeed[io]) {
 26291   0011AE  0E00               	movlw	low _stepsPerPollSpeed
 26292   0011B0  25D7               	addwf	pollServos@io& (0+255),w,b
 26293   0011B2  6ED9               	movwf	fsr2l,c
 26294   0011B4  6ADA               	clrf	fsr2h,c
 26295   0011B6  0E01               	movlw	high _stepsPerPollSpeed
 26296   0011B8  22DA               	addwfc	fsr2h,f,c
 26297   0011BA  50DF               	movf	indf2,w,c
 26298   0011BC  B4D8               	btfsc	status,2,c
 26299   0011BE  D03A               	goto	l21698
 26300                           
 26301                           ; BSR set to: 1
 26302                           ;../servo.c: 446:                                 if (currentPos[io] + stepsPerPollSpeed
      +                          [io] < currentPos[io]) {
 26303   0011C0  51D7               	movf	pollServos@io& (0+255),w,b
 26304   0011C2  0FA9               	addlw	low _currentPos
 26305   0011C4  6ED9               	movwf	fsr2l,c
 26306   0011C6  6ADA               	clrf	fsr2h,c
 26307   0011C8  50DF               	movf	indf2,w,c
 26308   0011CA  6FCC               	movwf	??_pollServos& (0+255),b
 26309   0011CC  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26310   0011CE  51D7               	movf	pollServos@io& (0+255),w,b
 26311   0011D0  0FA9               	addlw	low _currentPos
 26312   0011D2  6ED9               	movwf	fsr2l,c
 26313   0011D4  6ADA               	clrf	fsr2h,c
 26314   0011D6  50DF               	movf	indf2,w,c
 26315   0011D8  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 26316   0011DA  6BCF               	clrf	(??_pollServos+3)& (0+255),b
 26317   0011DC  0E00               	movlw	low _stepsPerPollSpeed
 26318   0011DE  25D7               	addwf	pollServos@io& (0+255),w,b
 26319   0011E0  6ED9               	movwf	fsr2l,c
 26320   0011E2  6ADA               	clrf	fsr2h,c
 26321   0011E4  0E01               	movlw	high _stepsPerPollSpeed
 26322   0011E6  22DA               	addwfc	fsr2h,f,c
 26323   0011E8  50DF               	movf	indf2,w,c
 26324   0011EA  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 26325   0011EC  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 26326   0011EE  27CE               	addwf	(??_pollServos+2)& (0+255),f,b
 26327   0011F0  0E00               	movlw	0
 26328   0011F2  23CF               	addwfc	(??_pollServos+3)& (0+255),f,b
 26329   0011F4  51CC               	movf	??_pollServos& (0+255),w,b
 26330   0011F6  5DCE               	subwf	(??_pollServos+2)& (0+255),w,b
 26331   0011F8  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 26332   0011FA  0A80               	xorlw	128
 26333   0011FC  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 26334   0011FE  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26335   001200  0A80               	xorlw	128
 26336   001202  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 26337   001204  B0D8               	btfsc	status,0,c
 26338   001206  D007               	goto	l21696
 26339                           
 26340                           ; BSR set to: 1
 26341                           ;../servo.c: 448:                                     currentPos[io] =255;
 26342   001208  51D7               	movf	pollServos@io& (0+255),w,b
 26343   00120A  0FA9               	addlw	low _currentPos
 26344   00120C  6ED9               	movwf	fsr2l,c
 26345   00120E  6ADA               	clrf	fsr2h,c
 26346   001210  0EFF               	movlw	255
 26347   001212  6EDF               	movwf	indf2,c
 26348                           
 26349                           ;../servo.c: 449:                                 } else {
 26350   001214  D032               	goto	l21704
 26351   001216                     l21696:
 26352                           
 26353                           ; BSR set to: 1
 26354                           ;../servo.c: 450:                                     currentPos[io] += stepsPerPollSpee
      +                          d[io];
 26355   001216  0E00               	movlw	low _stepsPerPollSpeed
 26356   001218  25D7               	addwf	pollServos@io& (0+255),w,b
 26357   00121A  6ED9               	movwf	fsr2l,c
 26358   00121C  6ADA               	clrf	fsr2h,c
 26359   00121E  0E01               	movlw	high _stepsPerPollSpeed
 26360   001220  22DA               	addwfc	fsr2h,f,c
 26361   001222  50DF               	movf	indf2,w,c
 26362   001224  6FCC               	movwf	??_pollServos& (0+255),b
 26363   001226  51D7               	movf	pollServos@io& (0+255),w,b
 26364   001228  0FA9               	addlw	low _currentPos
 26365   00122A  6ED9               	movwf	fsr2l,c
 26366   00122C  6ADA               	clrf	fsr2h,c
 26367   00122E  51CC               	movf	??_pollServos& (0+255),w,b
 26368   001230  26DF               	addwf	indf2,f,c
 26369   001232  D023               	goto	l21704
 26370   001234                     l21698:
 26371                           
 26372                           ; BSR set to: 1
 26373                           ;../servo.c: 453:                                 pollCount[io]--;
 26374   001234  0E64               	movlw	low _pollCount
 26375   001236  25D7               	addwf	pollServos@io& (0+255),w,b
 26376   001238  6ED9               	movwf	fsr2l,c
 26377   00123A  6ADA               	clrf	fsr2h,c
 26378   00123C  0E02               	movlw	high _pollCount
 26379   00123E  22DA               	addwfc	fsr2h,f,c
 26380   001240  06DF               	decf	indf2,f,c
 26381                           
 26382                           ;../servo.c: 454:                                 if (pollCount[io] == 0) {
 26383   001242  0E64               	movlw	low _pollCount
 26384   001244  25D7               	addwf	pollServos@io& (0+255),w,b
 26385   001246  6ED9               	movwf	fsr2l,c
 26386   001248  6ADA               	clrf	fsr2h,c
 26387   00124A  0E02               	movlw	high _pollCount
 26388   00124C  22DA               	addwfc	fsr2h,f,c
 26389   00124E  50DF               	movf	indf2,w,c
 26390   001250  A4D8               	btfss	status,2,c
 26391   001252  D013               	goto	l21704
 26392                           
 26393                           ; BSR set to: 1
 26394                           ;../servo.c: 455:                                     currentPos[io]++;
 26395   001254  51D7               	movf	pollServos@io& (0+255),w,b
 26396   001256  0FA9               	addlw	low _currentPos
 26397   001258  6ED9               	movwf	fsr2l,c
 26398   00125A  6ADA               	clrf	fsr2h,c
 26399   00125C  2ADF               	incf	indf2,f,c
 26400                           
 26401                           ; BSR set to: 1
 26402                           ;../servo.c: 456:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26403   00125E  0E74               	movlw	low _pollsPerStepSpeed
 26404   001260  25D7               	addwf	pollServos@io& (0+255),w,b
 26405   001262  6ED9               	movwf	fsr2l,c
 26406   001264  6ADA               	clrf	fsr2h,c
 26407   001266  0E02               	movlw	high _pollsPerStepSpeed
 26408   001268  22DA               	addwfc	fsr2h,f,c
 26409   00126A  0E64               	movlw	low _pollCount
 26410   00126C  25D7               	addwf	pollServos@io& (0+255),w,b
 26411   00126E  6EE1               	movwf	fsr1l,c
 26412   001270  6AE2               	clrf	fsr1h,c
 26413   001272  0E02               	movlw	high _pollCount
 26414   001274  22E2               	addwfc	fsr1h,f,c
 26415   001276  CFDF FFE7          	movff	indf2,indf1
 26416   00127A                     l21704:
 26417                           
 26418                           ; BSR set to: 1
 26419                           ;../servo.c: 459:                             if (currentPos[io] > targetPos[io]) {
 26420   00127A  51D7               	movf	pollServos@io& (0+255),w,b
 26421   00127C  0FA9               	addlw	low _currentPos
 26422   00127E  6ED9               	movwf	fsr2l,c
 26423   001280  6ADA               	clrf	fsr2h,c
 26424   001282  0E20               	movlw	low _targetPos
 26425   001284  25D7               	addwf	pollServos@io& (0+255),w,b
 26426   001286  6EE1               	movwf	fsr1l,c
 26427   001288  6AE2               	clrf	fsr1h,c
 26428   00128A  0E01               	movlw	high _targetPos
 26429   00128C  22E2               	addwfc	fsr1h,f,c
 26430   00128E  50DE               	movf	postinc2,w,c
 26431   001290  5CE6               	subwf	postinc1,w,c
 26432   001292  B0D8               	btfsc	status,0,c
 26433   001294  D08E               	goto	l1096
 26434   001296                     u22530:
 26435                           
 26436                           ; BSR set to: 1
 26437                           ;../servo.c: 460:                                 currentPos[io] = targetPos[io];
 26438   001296  0E20               	movlw	low _targetPos
 26439   001298  25D7               	addwf	pollServos@io& (0+255),w,b
 26440   00129A  6ED9               	movwf	fsr2l,c
 26441   00129C  6ADA               	clrf	fsr2h,c
 26442   00129E  0E01               	movlw	high _targetPos
 26443   0012A0  22DA               	addwfc	fsr2h,f,c
 26444   0012A2  51D7               	movf	pollServos@io& (0+255),w,b
 26445   0012A4  0FA9               	addlw	low _currentPos
 26446   0012A6  6EE1               	movwf	fsr1l,c
 26447   0012A8  6AE2               	clrf	fsr1h,c
 26448   0012AA  CFDF FFE7          	movff	indf2,indf1
 26449   0012AE  D081               	goto	l1096
 26450   0012B0                     l21708:
 26451                           
 26452                           ; BSR set to: 1
 26453   0012B0  51D7               	movf	pollServos@io& (0+255),w,b
 26454   0012B2  0FA9               	addlw	low _currentPos
 26455   0012B4  6ED9               	movwf	fsr2l,c
 26456   0012B6  6ADA               	clrf	fsr2h,c
 26457   0012B8  0E20               	movlw	low _targetPos
 26458   0012BA  25D7               	addwf	pollServos@io& (0+255),w,b
 26459   0012BC  6EE1               	movwf	fsr1l,c
 26460   0012BE  6AE2               	clrf	fsr1h,c
 26461   0012C0  0E01               	movlw	high _targetPos
 26462   0012C2  22E2               	addwfc	fsr1h,f,c
 26463   0012C4  50DE               	movf	postinc2,w,c
 26464   0012C6  5CE6               	subwf	postinc1,w,c
 26465   0012C8  B0D8               	btfsc	status,0,c
 26466   0012CA  D073               	goto	l1096
 26467                           
 26468                           ; BSR set to: 1
 26469                           ;../servo.c: 464:                             if (stepsPerPollSpeed[io]) {
 26470   0012CC  0E00               	movlw	low _stepsPerPollSpeed
 26471   0012CE  25D7               	addwf	pollServos@io& (0+255),w,b
 26472   0012D0  6ED9               	movwf	fsr2l,c
 26473   0012D2  6ADA               	clrf	fsr2h,c
 26474   0012D4  0E01               	movlw	high _stepsPerPollSpeed
 26475   0012D6  22DA               	addwfc	fsr2h,f,c
 26476   0012D8  50DF               	movf	indf2,w,c
 26477   0012DA  B4D8               	btfsc	status,2,c
 26478   0012DC  D039               	goto	l21718
 26479                           
 26480                           ; BSR set to: 1
 26481                           ;../servo.c: 465:                                 if (currentPos[io] - stepsPerPollSpeed
      +                          [io] > currentPos[io]) {
 26482   0012DE  51D7               	movf	pollServos@io& (0+255),w,b
 26483   0012E0  0FA9               	addlw	low _currentPos
 26484   0012E2  6ED9               	movwf	fsr2l,c
 26485   0012E4  6ADA               	clrf	fsr2h,c
 26486   0012E6  50DF               	movf	indf2,w,c
 26487   0012E8  6FCC               	movwf	??_pollServos& (0+255),b
 26488   0012EA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26489   0012EC  0E00               	movlw	low _stepsPerPollSpeed
 26490   0012EE  25D7               	addwf	pollServos@io& (0+255),w,b
 26491   0012F0  6ED9               	movwf	fsr2l,c
 26492   0012F2  6ADA               	clrf	fsr2h,c
 26493   0012F4  0E01               	movlw	high _stepsPerPollSpeed
 26494   0012F6  22DA               	addwfc	fsr2h,f,c
 26495   0012F8  50DF               	movf	indf2,w,c
 26496   0012FA  6FCE               	movwf	(??_pollServos+2)& (0+255),b
 26497   0012FC  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 26498   0012FE  5FCC               	subwf	??_pollServos& (0+255),f,b
 26499   001300  0E00               	movlw	0
 26500   001302  5BCD               	subwfb	(??_pollServos+1)& (0+255),f,b
 26501   001304  51D7               	movf	pollServos@io& (0+255),w,b
 26502   001306  0FA9               	addlw	low _currentPos
 26503   001308  6ED9               	movwf	fsr2l,c
 26504   00130A  6ADA               	clrf	fsr2h,c
 26505   00130C  50DF               	movf	indf2,w,c
 26506   00130E  6FCF               	movwf	(??_pollServos+3)& (0+255),b
 26507   001310  6BD0               	clrf	(??_pollServos+4)& (0+255),b
 26508   001312  51CC               	movf	??_pollServos& (0+255),w,b
 26509   001314  5DCF               	subwf	(??_pollServos+3)& (0+255),w,b
 26510   001316  51D0               	movf	(??_pollServos+4)& (0+255),w,b
 26511   001318  0A80               	xorlw	128
 26512   00131A  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 26513   00131C  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26514   00131E  0A80               	xorlw	128
 26515   001320  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 26516   001322  B0D8               	btfsc	status,0,c
 26517   001324  D006               	goto	l21716
 26518                           
 26519                           ; BSR set to: 1
 26520                           ;../servo.c: 467:                                     currentPos[io] = 0;
 26521   001326  51D7               	movf	pollServos@io& (0+255),w,b
 26522   001328  0FA9               	addlw	low _currentPos
 26523   00132A  6ED9               	movwf	fsr2l,c
 26524   00132C  6ADA               	clrf	fsr2h,c
 26525   00132E  6ADF               	clrf	indf2,c
 26526                           
 26527                           ;../servo.c: 468:                                 } else {
 26528   001330  D032               	goto	l21724
 26529   001332                     l21716:
 26530                           
 26531                           ; BSR set to: 1
 26532                           ;../servo.c: 469:                                     currentPos[io] -= stepsPerPollSpee
      +                          d[io];
 26533   001332  0E00               	movlw	low _stepsPerPollSpeed
 26534   001334  25D7               	addwf	pollServos@io& (0+255),w,b
 26535   001336  6ED9               	movwf	fsr2l,c
 26536   001338  6ADA               	clrf	fsr2h,c
 26537   00133A  0E01               	movlw	high _stepsPerPollSpeed
 26538   00133C  22DA               	addwfc	fsr2h,f,c
 26539   00133E  50DF               	movf	indf2,w,c
 26540   001340  6FCC               	movwf	??_pollServos& (0+255),b
 26541   001342  51D7               	movf	pollServos@io& (0+255),w,b
 26542   001344  0FA9               	addlw	low _currentPos
 26543   001346  6ED9               	movwf	fsr2l,c
 26544   001348  6ADA               	clrf	fsr2h,c
 26545   00134A  51CC               	movf	??_pollServos& (0+255),w,b
 26546   00134C  5EDF               	subwf	indf2,f,c
 26547   00134E  D023               	goto	l21724
 26548   001350                     l21718:
 26549                           
 26550                           ; BSR set to: 1
 26551                           ;../servo.c: 472:                                 pollCount[io]--;
 26552   001350  0E64               	movlw	low _pollCount
 26553   001352  25D7               	addwf	pollServos@io& (0+255),w,b
 26554   001354  6ED9               	movwf	fsr2l,c
 26555   001356  6ADA               	clrf	fsr2h,c
 26556   001358  0E02               	movlw	high _pollCount
 26557   00135A  22DA               	addwfc	fsr2h,f,c
 26558   00135C  06DF               	decf	indf2,f,c
 26559                           
 26560                           ;../servo.c: 473:                                 if (pollCount[io] == 0) {
 26561   00135E  0E64               	movlw	low _pollCount
 26562   001360  25D7               	addwf	pollServos@io& (0+255),w,b
 26563   001362  6ED9               	movwf	fsr2l,c
 26564   001364  6ADA               	clrf	fsr2h,c
 26565   001366  0E02               	movlw	high _pollCount
 26566   001368  22DA               	addwfc	fsr2h,f,c
 26567   00136A  50DF               	movf	indf2,w,c
 26568   00136C  A4D8               	btfss	status,2,c
 26569   00136E  D013               	goto	l21724
 26570                           
 26571                           ; BSR set to: 1
 26572                           ;../servo.c: 474:                                     currentPos[io]--;
 26573   001370  51D7               	movf	pollServos@io& (0+255),w,b
 26574   001372  0FA9               	addlw	low _currentPos
 26575   001374  6ED9               	movwf	fsr2l,c
 26576   001376  6ADA               	clrf	fsr2h,c
 26577   001378  06DF               	decf	indf2,f,c
 26578                           
 26579                           ; BSR set to: 1
 26580                           ;../servo.c: 475:                                     pollCount[io] = pollsPerStepSpeed[
      +                          io];
 26581   00137A  0E74               	movlw	low _pollsPerStepSpeed
 26582   00137C  25D7               	addwf	pollServos@io& (0+255),w,b
 26583   00137E  6ED9               	movwf	fsr2l,c
 26584   001380  6ADA               	clrf	fsr2h,c
 26585   001382  0E02               	movlw	high _pollsPerStepSpeed
 26586   001384  22DA               	addwfc	fsr2h,f,c
 26587   001386  0E64               	movlw	low _pollCount
 26588   001388  25D7               	addwf	pollServos@io& (0+255),w,b
 26589   00138A  6EE1               	movwf	fsr1l,c
 26590   00138C  6AE2               	clrf	fsr1h,c
 26591   00138E  0E02               	movlw	high _pollCount
 26592   001390  22E2               	addwfc	fsr1h,f,c
 26593   001392  CFDF FFE7          	movff	indf2,indf1
 26594   001396                     l21724:
 26595                           
 26596                           ; BSR set to: 1
 26597                           ;../servo.c: 478:                             if (currentPos[io] < targetPos[io]) {
 26598   001396  0E20               	movlw	low _targetPos
 26599   001398  25D7               	addwf	pollServos@io& (0+255),w,b
 26600   00139A  6ED9               	movwf	fsr2l,c
 26601   00139C  6ADA               	clrf	fsr2h,c
 26602   00139E  0E01               	movlw	high _targetPos
 26603   0013A0  22DA               	addwfc	fsr2h,f,c
 26604   0013A2  51D7               	movf	pollServos@io& (0+255),w,b
 26605   0013A4  0FA9               	addlw	low _currentPos
 26606   0013A6  6EE1               	movwf	fsr1l,c
 26607   0013A8  6AE2               	clrf	fsr1h,c
 26608   0013AA  50DE               	movf	postinc2,w,c
 26609   0013AC  5CE6               	subwf	postinc1,w,c
 26610   0013AE  A0D8               	btfss	status,0,c
 26611   0013B0  D772               	goto	u22530
 26612   0013B2                     l1096:
 26613                           
 26614                           ; BSR set to: 1
 26615                           ;../servo.c: 482:                         if (targetPos[io] == currentPos[io]) {
 26616   0013B2  51D7               	movf	pollServos@io& (0+255),w,b
 26617   0013B4  0FA9               	addlw	low _currentPos
 26618   0013B6  6ED9               	movwf	fsr2l,c
 26619   0013B8  6ADA               	clrf	fsr2h,c
 26620   0013BA  0E20               	movlw	low _targetPos
 26621   0013BC  25D7               	addwf	pollServos@io& (0+255),w,b
 26622   0013BE  6EE1               	movwf	fsr1l,c
 26623   0013C0  6AE2               	clrf	fsr1h,c
 26624   0013C2  0E01               	movlw	high _targetPos
 26625   0013C4  22E2               	addwfc	fsr1h,f,c
 26626   0013C6  50DE               	movf	postinc2,w,c
 26627   0013C8  18E6               	xorwf	postinc1,w,c
 26628   0013CA  A4D8               	btfss	status,2,c
 26629   0013CC  D162               	goto	l21766
 26630                           
 26631                           ; BSR set to: 1
 26632                           ;../servo.c: 483:                             servoState[io] = SS_STOPPED;
 26633   0013CE  0E10               	movlw	low _servoState
 26634   0013D0  25D7               	addwf	pollServos@io& (0+255),w,b
 26635   0013D2  6ED9               	movwf	fsr2l,c
 26636   0013D4  6ADA               	clrf	fsr2h,c
 26637   0013D6  0E01               	movlw	high _servoState
 26638   0013D8  22DA               	addwfc	fsr2h,f,c
 26639   0013DA  0E01               	movlw	1
 26640   0013DC  6EDF               	movwf	indf2,c
 26641                           
 26642                           ; BSR set to: 1
 26643                           ;../servo.c: 484:                             ticksWhenStopped[io].val = tickGet();
 26644   0013DE  EC6B  F05A         	call	_tickGet	;wreg free
 26645   0013E2  0101               	movlb	1	; () banked
 26646   0013E4  51D7               	movf	pollServos@io& (0+255),w,b
 26647   0013E6  0D04               	mullw	4
 26648   0013E8  0E88               	movlw	low _ticksWhenStopped
 26649   0013EA  24F3               	addwf	243,w,c
 26650   0013EC  6ED9               	movwf	fsr2l,c
 26651   0013EE  0E03               	movlw	high _ticksWhenStopped
 26652   0013F0  20F4               	addwfc	prodh,w,c
 26653   0013F2  6EDA               	movwf	fsr2h,c
 26654   0013F4  0100               	movlb	0	; () banked
 26655   0013F6  C08D  FFDE         	movff	?_tickGet,postinc2
 26656   0013FA  C08E  FFDE         	movff	?_tickGet+1,postinc2
 26657   0013FE  C08F  FFDE         	movff	?_tickGet+2,postinc2
 26658   001402  C090  FFDE         	movff	?_tickGet+3,postinc2
 26659                           
 26660                           ; BSR set to: 0
 26661                           ;../servo.c: 486:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           3))) {
 26662   001406  0101               	movlb	1	; () banked
 26663   001408  51D7               	movf	pollServos@io& (0+255),w,b
 26664   00140A  0D07               	mullw	7
 26665   00140C  50F3               	movf	243,w,c
 26666   00140E  0F13               	addlw	19
 26667   001410  ECD9  F05D         	call	_getNV
 26668   001414  0101               	movlb	1	; () banked
 26669   001416  51D7               	movf	pollServos@io& (0+255),w,b
 26670   001418  0FA9               	addlw	low _currentPos
 26671   00141A  6ED9               	movwf	fsr2l,c
 26672   00141C  6ADA               	clrf	fsr2h,c
 26673   00141E  50DF               	movf	indf2,w,c
 26674   001420  6FCC               	movwf	??_pollServos& (0+255),b
 26675   001422  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26676   001424  0100               	movlb	0	; () banked
 26677   001426  518D               	movf	?_getNV& (0+255),w,b
 26678   001428  0101               	movlb	1	; () banked
 26679   00142A  19CC               	xorwf	??_pollServos& (0+255),w,b
 26680   00142C  E11A               	bnz	l21736
 26681   00142E  0100               	movlb	0	; () banked
 26682   001430  518E               	movf	(?_getNV+1)& (0+255),w,b
 26683   001432  0101               	movlb	1	; () banked
 26684   001434  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26685   001436  A4D8               	btfss	status,2,c
 26686   001438  D014               	goto	l21736
 26687                           
 26688                           ; BSR set to: 1
 26689                           ;../servo.c: 487:                                 sendProducedEvent(((8 + 4*(io))+0), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26690   00143A  51D7               	movf	pollServos@io& (0+255),w,b
 26691   00143C  0D07               	mullw	7
 26692   00143E  50F3               	movf	243,w,c
 26693   001440  0F11               	addlw	17
 26694   001442  ECD9  F05D         	call	_getNV
 26695   001446  0100               	movlb	0	; () banked
 26696   001448  BD8D               	btfsc	?_getNV& (0+255),6,b
 26697   00144A  D002               	goto	u22610
 26698   00144C  0E01               	movlw	1
 26699   00144E  D001               	goto	u22620
 26700   001450                     u22610:
 26701   001450  0E00               	movlw	0
 26702   001452                     u22620:
 26703   001452  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26704   001454  0101               	movlb	1	; () banked
 26705   001456  51D7               	movf	pollServos@io& (0+255),w,b
 26706   001458  0D04               	mullw	4
 26707   00145A  50F3               	movf	243,w,c
 26708   00145C  0F08               	addlw	8
 26709   00145E  ECC2  F04A         	call	_sendProducedEvent
 26710   001462                     l21736:
 26711                           
 26712                           ;../servo.c: 489:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           4))) {
 26713   001462  0101               	movlb	1	; () banked
 26714   001464  51D7               	movf	pollServos@io& (0+255),w,b
 26715   001466  0D07               	mullw	7
 26716   001468  50F3               	movf	243,w,c
 26717   00146A  0F14               	addlw	20
 26718   00146C  ECD9  F05D         	call	_getNV
 26719   001470  0101               	movlb	1	; () banked
 26720   001472  51D7               	movf	pollServos@io& (0+255),w,b
 26721   001474  0FA9               	addlw	low _currentPos
 26722   001476  6ED9               	movwf	fsr2l,c
 26723   001478  6ADA               	clrf	fsr2h,c
 26724   00147A  50DF               	movf	indf2,w,c
 26725   00147C  6FCC               	movwf	??_pollServos& (0+255),b
 26726   00147E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26727   001480  0100               	movlb	0	; () banked
 26728   001482  518D               	movf	?_getNV& (0+255),w,b
 26729   001484  0101               	movlb	1	; () banked
 26730   001486  19CC               	xorwf	??_pollServos& (0+255),w,b
 26731   001488  E11A               	bnz	l21740
 26732   00148A  0100               	movlb	0	; () banked
 26733   00148C  518E               	movf	(?_getNV+1)& (0+255),w,b
 26734   00148E  0101               	movlb	1	; () banked
 26735   001490  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26736   001492  A4D8               	btfss	status,2,c
 26737   001494  D014               	goto	l21740
 26738                           
 26739                           ; BSR set to: 1
 26740                           ;../servo.c: 490:                                 sendProducedEvent(((8 + 4*(io))+1), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26741   001496  51D7               	movf	pollServos@io& (0+255),w,b
 26742   001498  0D07               	mullw	7
 26743   00149A  50F3               	movf	243,w,c
 26744   00149C  0F11               	addlw	17
 26745   00149E  ECD9  F05D         	call	_getNV
 26746   0014A2  0100               	movlb	0	; () banked
 26747   0014A4  BD8D               	btfsc	?_getNV& (0+255),6,b
 26748   0014A6  D002               	goto	u22640
 26749   0014A8  0E01               	movlw	1
 26750   0014AA  D001               	goto	u22650
 26751   0014AC                     u22640:
 26752   0014AC  0E00               	movlw	0
 26753   0014AE                     u22650:
 26754   0014AE  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26755   0014B0  0101               	movlb	1	; () banked
 26756   0014B2  51D7               	movf	pollServos@io& (0+255),w,b
 26757   0014B4  0D04               	mullw	4
 26758   0014B6  50F3               	movf	243,w,c
 26759   0014B8  0F09               	addlw	9
 26760   0014BA  ECC2  F04A         	call	_sendProducedEvent
 26761   0014BE                     l21740:
 26762                           
 26763                           ;../servo.c: 492:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           5))) {
 26764   0014BE  0101               	movlb	1	; () banked
 26765   0014C0  51D7               	movf	pollServos@io& (0+255),w,b
 26766   0014C2  0D07               	mullw	7
 26767   0014C4  50F3               	movf	243,w,c
 26768   0014C6  0F15               	addlw	21
 26769   0014C8  ECD9  F05D         	call	_getNV
 26770   0014CC  0101               	movlb	1	; () banked
 26771   0014CE  51D7               	movf	pollServos@io& (0+255),w,b
 26772   0014D0  0FA9               	addlw	low _currentPos
 26773   0014D2  6ED9               	movwf	fsr2l,c
 26774   0014D4  6ADA               	clrf	fsr2h,c
 26775   0014D6  50DF               	movf	indf2,w,c
 26776   0014D8  6FCC               	movwf	??_pollServos& (0+255),b
 26777   0014DA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26778   0014DC  0100               	movlb	0	; () banked
 26779   0014DE  518D               	movf	?_getNV& (0+255),w,b
 26780   0014E0  0101               	movlb	1	; () banked
 26781   0014E2  19CC               	xorwf	??_pollServos& (0+255),w,b
 26782   0014E4  E11A               	bnz	l21744
 26783   0014E6  0100               	movlb	0	; () banked
 26784   0014E8  518E               	movf	(?_getNV+1)& (0+255),w,b
 26785   0014EA  0101               	movlb	1	; () banked
 26786   0014EC  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26787   0014EE  A4D8               	btfss	status,2,c
 26788   0014F0  D014               	goto	l21744
 26789                           
 26790                           ; BSR set to: 1
 26791                           ;../servo.c: 493:                                 sendProducedEvent(((8 + 4*(io))+2), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26792   0014F2  51D7               	movf	pollServos@io& (0+255),w,b
 26793   0014F4  0D07               	mullw	7
 26794   0014F6  50F3               	movf	243,w,c
 26795   0014F8  0F11               	addlw	17
 26796   0014FA  ECD9  F05D         	call	_getNV
 26797   0014FE  0100               	movlb	0	; () banked
 26798   001500  BD8D               	btfsc	?_getNV& (0+255),6,b
 26799   001502  D002               	goto	u22670
 26800   001504  0E01               	movlw	1
 26801   001506  D001               	goto	u22680
 26802   001508                     u22670:
 26803   001508  0E00               	movlw	0
 26804   00150A                     u22680:
 26805   00150A  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26806   00150C  0101               	movlb	1	; () banked
 26807   00150E  51D7               	movf	pollServos@io& (0+255),w,b
 26808   001510  0D04               	mullw	4
 26809   001512  50F3               	movf	243,w,c
 26810   001514  0F0A               	addlw	10
 26811   001516  ECC2  F04A         	call	_sendProducedEvent
 26812   00151A                     l21744:
 26813                           
 26814                           ;../servo.c: 495:                             if (currentPos[io] == getNV((16 + 7*(io) +
      +                           6))) {
 26815   00151A  0101               	movlb	1	; () banked
 26816   00151C  51D7               	movf	pollServos@io& (0+255),w,b
 26817   00151E  0D07               	mullw	7
 26818   001520  50F3               	movf	243,w,c
 26819   001522  0F16               	addlw	22
 26820   001524  ECD9  F05D         	call	_getNV
 26821   001528  0101               	movlb	1	; () banked
 26822   00152A  51D7               	movf	pollServos@io& (0+255),w,b
 26823   00152C  0FA9               	addlw	low _currentPos
 26824   00152E  6ED9               	movwf	fsr2l,c
 26825   001530  6ADA               	clrf	fsr2h,c
 26826   001532  50DF               	movf	indf2,w,c
 26827   001534  6FCC               	movwf	??_pollServos& (0+255),b
 26828   001536  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26829   001538  0100               	movlb	0	; () banked
 26830   00153A  518D               	movf	?_getNV& (0+255),w,b
 26831   00153C  0101               	movlb	1	; () banked
 26832   00153E  19CC               	xorwf	??_pollServos& (0+255),w,b
 26833   001540  E11A               	bnz	l21748
 26834   001542  0100               	movlb	0	; () banked
 26835   001544  518E               	movf	(?_getNV+1)& (0+255),w,b
 26836   001546  0101               	movlb	1	; () banked
 26837   001548  19CD               	xorwf	(??_pollServos+1)& (0+255),w,b
 26838   00154A  A4D8               	btfss	status,2,c
 26839   00154C  D014               	goto	l21748
 26840                           
 26841                           ; BSR set to: 1
 26842                           ;../servo.c: 496:                                 sendProducedEvent(((8 + 4*(io))+3), !(
      +                          getNV((16 + 7*(io) + 1)) & 0x40));
 26843   00154E  51D7               	movf	pollServos@io& (0+255),w,b
 26844   001550  0D07               	mullw	7
 26845   001552  50F3               	movf	243,w,c
 26846   001554  0F11               	addlw	17
 26847   001556  ECD9  F05D         	call	_getNV
 26848   00155A  0100               	movlb	0	; () banked
 26849   00155C  BD8D               	btfsc	?_getNV& (0+255),6,b
 26850   00155E  D002               	goto	u22700
 26851   001560  0E01               	movlw	1
 26852   001562  D001               	goto	u22710
 26853   001564                     u22700:
 26854   001564  0E00               	movlw	0
 26855   001566                     u22710:
 26856   001566  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 26857   001568  0101               	movlb	1	; () banked
 26858   00156A  51D7               	movf	pollServos@io& (0+255),w,b
 26859   00156C  0D04               	mullw	4
 26860   00156E  50F3               	movf	243,w,c
 26861   001570  0F0B               	addlw	11
 26862   001572  ECC2  F04A         	call	_sendProducedEvent
 26863   001576                     l21748:
 26864                           
 26865                           ;../servo.c: 498:                             writeNVM(EEPROM_NVM_TYPE, ((eeprom_address
      +                          _t)((0x3FF -8))-25)+io, currentPos[io]);
 26866   001576  0EDE               	movlw	222
 26867   001578  0101               	movlb	1	; () banked
 26868   00157A  25D7               	addwf	pollServos@io& (0+255),w,b
 26869   00157C  6FCC               	movwf	??_pollServos& (0+255),b
 26870   00157E  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26871   001580  0E03               	movlw	3
 26872   001582  23CD               	addwfc	(??_pollServos+1)& (0+255),f,b
 26873   001584  C1CC  F0A4         	movff	??_pollServos,writeNVM@index
 26874   001588  C1CD  F0A5         	movff	??_pollServos+1,writeNVM@index+1
 26875   00158C  0100               	movlb	0	; () banked
 26876   00158E  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 26877   001590  0101               	movlb	1	; () banked
 26878   001592  51D7               	movf	pollServos@io& (0+255),w,b
 26879   001594  0FA9               	addlw	low _currentPos
 26880   001596  6ED9               	movwf	fsr2l,c
 26881   001598  6ADA               	clrf	fsr2h,c
 26882   00159A  50DF               	movf	indf2,w,c
 26883   00159C  0100               	movlb	0	; () banked
 26884   00159E  6FA7               	movwf	writeNVM@value& (0+255),b
 26885   0015A0  0E00               	movlw	0
 26886   0015A2  ECE7  F05B         	call	_writeNVM
 26887   0015A6  D075               	goto	l21766
 26888   0015A8                     l21752:
 26889                           
 26890                           ; BSR set to: 0
 26891   0015A8  0E10               	movlw	low _servoState
 26892   0015AA  0101               	movlb	1	; () banked
 26893   0015AC  25D7               	addwf	pollServos@io& (0+255),w,b
 26894   0015AE  6ED9               	movwf	fsr2l,c
 26895   0015B0  6ADA               	clrf	fsr2h,c
 26896   0015B2  0E01               	movlw	high _servoState
 26897   0015B4  22DA               	addwfc	fsr2h,f,c
 26898   0015B6  50DF               	movf	indf2,w,c
 26899   0015B8  6FCC               	movwf	??_pollServos& (0+255),b
 26900   0015BA  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 26901                           
 26902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26903                           ; Switch size 1, requested type "simple"
 26904                           ; Number of cases is 1, Range of values is 0 to 0
 26905                           ; switch strategies available:
 26906                           ; Name         Instructions Cycles
 26907                           ; simple_byte            4     3 (average)
 26908                           ;	Chosen strategy is simple_byte
 26909   0015BC  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 26910   0015BE  0A00               	xorlw	0	; case 0
 26911   0015C0  A4D8               	btfss	status,2,c
 26912   0015C2  D067               	goto	l21766
 26913                           
 26914                           ; BSR set to: 1
 26915                           ; Switch size 1, requested type "simple"
 26916                           ; Number of cases is 4, Range of values is 0 to 3
 26917                           ; switch strategies available:
 26918                           ; Name         Instructions Cycles
 26919                           ; simple_byte           13     7 (average)
 26920                           ;	Chosen strategy is simple_byte
 26921   0015C4  51CC               	movf	??_pollServos& (0+255),w,b
 26922   0015C6  0A00               	xorlw	0	; case 0
 26923   0015C8  B4D8               	btfsc	status,2,c
 26924   0015CA  D063               	goto	l21766
 26925   0015CC  0A01               	xorlw	1	; case 1
 26926   0015CE  B4D8               	btfsc	status,2,c
 26927   0015D0  D060               	goto	l21766
 26928   0015D2  0A03               	xorlw	3	; case 2
 26929   0015D4  B4D8               	btfsc	status,2,c
 26930   0015D6  D5DD               	goto	l21688
 26931   0015D8  0A01               	xorlw	1	; case 3
 26932   0015DA  B4D8               	btfsc	status,2,c
 26933   0015DC  D526               	goto	l21670
 26934   0015DE  D059               	goto	l21766
 26935   0015E0                     l21756:
 26936                           
 26937                           ; BSR set to: 1
 26938   0015E0  51D7               	movf	pollServos@io& (0+255),w,b
 26939   0015E2  0D07               	mullw	7
 26940   0015E4  50F3               	movf	243,w,c
 26941   0015E6  0F10               	addlw	16
 26942   0015E8  ECD9  F05D         	call	_getNV
 26943                           
 26944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26945                           ; Switch size 1, requested type "simple"
 26946                           ; Number of cases is 1, Range of values is 0 to 0
 26947                           ; switch strategies available:
 26948                           ; Name         Instructions Cycles
 26949                           ; simple_byte            4     3 (average)
 26950                           ;	Chosen strategy is simple_byte
 26951   0015EC  0100               	movlb	0	; () banked
 26952   0015EE  518E               	movf	(?_getNV+1)& (0+255),w,b
 26953   0015F0  0A00               	xorlw	0	; case 0
 26954   0015F2  A4D8               	btfss	status,2,c
 26955   0015F4  D04E               	goto	l21766
 26956                           
 26957                           ; BSR set to: 0
 26958                           ; Switch size 1, requested type "simple"
 26959                           ; Number of cases is 3, Range of values is 2 to 4
 26960                           ; switch strategies available:
 26961                           ; Name         Instructions Cycles
 26962                           ; simple_byte           10     6 (average)
 26963                           ;	Chosen strategy is simple_byte
 26964   0015F6  518D               	movf	?_getNV& (0+255),w,b
 26965   0015F8  0A02               	xorlw	2	; case 2
 26966   0015FA  B4D8               	btfsc	status,2,c
 26967   0015FC  EF2D  F004         	goto	l21528
 26968   001600  0A01               	xorlw	1	; case 3
 26969   001602  B4D8               	btfsc	status,2,c
 26970   001604  D4F6               	goto	l21668
 26971   001606  0A07               	xorlw	7	; case 4
 26972   001608  B4D8               	btfsc	status,2,c
 26973   00160A  D7CE               	goto	l21752
 26974                           
 26975                           ; BSR set to: 1
 26976                           ;../servo.c: 507:         switch (servoState[io]) {
 26977   00160C  D042               	goto	l21766
 26978   00160E                     l21758:
 26979                           
 26980                           ; BSR set to: 1
 26981                           ;../servo.c: 514:                 if (getNV((16 + 7*(io) + 1)) & 0x02) {
 26982   00160E  51D7               	movf	pollServos@io& (0+255),w,b
 26983   001610  0D07               	mullw	7
 26984   001612  50F3               	movf	243,w,c
 26985   001614  0F11               	addlw	17
 26986   001616  ECD9  F05D         	call	_getNV
 26987   00161A  0100               	movlb	0	; () banked
 26988   00161C  A38D               	btfss	?_getNV& (0+255),1,b
 26989   00161E  D051               	goto	l21768
 26990                           
 26991                           ; BSR set to: 0
 26992                           ;../servo.c: 515:                     if ((tickGet() - ticksWhenStopped[io].val) > 62500
      +                          ) {
 26993   001620  0101               	movlb	1	; () banked
 26994   001622  51D7               	movf	pollServos@io& (0+255),w,b
 26995   001624  0D04               	mullw	4
 26996   001626  0E88               	movlw	low _ticksWhenStopped
 26997   001628  24F3               	addwf	243,w,c
 26998   00162A  6ED9               	movwf	fsr2l,c
 26999   00162C  0E03               	movlw	high _ticksWhenStopped
 27000   00162E  20F4               	addwfc	prodh,w,c
 27001   001630  6EDA               	movwf	fsr2h,c
 27002   001632  CFDE F1CC          	movff	postinc2,??_pollServos
 27003   001636  CFDE F1CD          	movff	postinc2,??_pollServos+1
 27004   00163A  CFDE F1CE          	movff	postinc2,??_pollServos+2
 27005   00163E  CFDE F1CF          	movff	postinc2,??_pollServos+3
 27006   001642  EC6B  F05A         	call	_tickGet	;wreg free
 27007   001646  0101               	movlb	1	; () banked
 27008   001648  51CC               	movf	??_pollServos& (0+255),w,b
 27009   00164A  0100               	movlb	0	; () banked
 27010   00164C  5D8D               	subwf	?_tickGet& (0+255),w,b
 27011   00164E  0101               	movlb	1	; () banked
 27012   001650  6FD0               	movwf	(??_pollServos+4)& (0+255),b
 27013   001652  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 27014   001654  0100               	movlb	0	; () banked
 27015   001656  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 27016   001658  0101               	movlb	1	; () banked
 27017   00165A  6FD1               	movwf	(??_pollServos+5)& (0+255),b
 27018   00165C  51CE               	movf	(??_pollServos+2)& (0+255),w,b
 27019   00165E  0100               	movlb	0	; () banked
 27020   001660  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 27021   001662  0101               	movlb	1	; () banked
 27022   001664  6FD2               	movwf	(??_pollServos+6)& (0+255),b
 27023   001666  51CF               	movf	(??_pollServos+3)& (0+255),w,b
 27024   001668  0100               	movlb	0	; () banked
 27025   00166A  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 27026   00166C  0101               	movlb	1	; () banked
 27027   00166E  6FD3               	movwf	(??_pollServos+7)& (0+255),b
 27028   001670  51D3               	movf	(??_pollServos+7)& (0+255),w,b
 27029   001672  11D2               	iorwf	(??_pollServos+6)& (0+255),w,b
 27030   001674  E106               	bnz	u22730
 27031   001676  0E25               	movlw	37
 27032   001678  5DD0               	subwf	(??_pollServos+4)& (0+255),w,b
 27033   00167A  0EF4               	movlw	244
 27034   00167C  59D1               	subwfb	(??_pollServos+5)& (0+255),w,b
 27035   00167E  A0D8               	btfss	status,0,c
 27036   001680  D020               	goto	l21768
 27037   001682                     u22730:
 27038                           
 27039                           ; BSR set to: 1
 27040                           ;../servo.c: 516:                         servoState[io] = SS_OFF;
 27041   001682  0E10               	movlw	low _servoState
 27042   001684  25D7               	addwf	pollServos@io& (0+255),w,b
 27043   001686  6ED9               	movwf	fsr2l,c
 27044   001688  6ADA               	clrf	fsr2h,c
 27045   00168A  0E01               	movlw	high _servoState
 27046   00168C  22DA               	addwfc	fsr2h,f,c
 27047   00168E  6ADF               	clrf	indf2,c
 27048   001690  D018               	goto	l21768
 27049   001692                     l21766:
 27050   001692  0E10               	movlw	low _servoState
 27051   001694  0101               	movlb	1	; () banked
 27052   001696  25D7               	addwf	pollServos@io& (0+255),w,b
 27053   001698  6ED9               	movwf	fsr2l,c
 27054   00169A  6ADA               	clrf	fsr2h,c
 27055   00169C  0E01               	movlw	high _servoState
 27056   00169E  22DA               	addwfc	fsr2h,f,c
 27057   0016A0  50DF               	movf	indf2,w,c
 27058   0016A2  6FCC               	movwf	??_pollServos& (0+255),b
 27059   0016A4  6BCD               	clrf	(??_pollServos+1)& (0+255),b
 27060                           
 27061                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27062                           ; Switch size 1, requested type "simple"
 27063                           ; Number of cases is 1, Range of values is 0 to 0
 27064                           ; switch strategies available:
 27065                           ; Name         Instructions Cycles
 27066                           ; simple_byte            4     3 (average)
 27067                           ;	Chosen strategy is simple_byte
 27068   0016A6  51CD               	movf	(??_pollServos+1)& (0+255),w,b
 27069   0016A8  0A00               	xorlw	0	; case 0
 27070   0016AA  A4D8               	btfss	status,2,c
 27071   0016AC  D00A               	goto	l21768
 27072                           
 27073                           ; BSR set to: 1
 27074                           ; Switch size 1, requested type "simple"
 27075                           ; Number of cases is 4, Range of values is 0 to 3
 27076                           ; switch strategies available:
 27077                           ; Name         Instructions Cycles
 27078                           ; simple_byte           13     7 (average)
 27079                           ;	Chosen strategy is simple_byte
 27080   0016AE  51CC               	movf	??_pollServos& (0+255),w,b
 27081   0016B0  0A00               	xorlw	0	; case 0
 27082   0016B2  B4D8               	btfsc	status,2,c
 27083   0016B4  D006               	goto	l21768
 27084   0016B6  0A01               	xorlw	1	; case 1
 27085   0016B8  B4D8               	btfsc	status,2,c
 27086   0016BA  D7A9               	goto	l21758
 27087   0016BC  0A03               	xorlw	3	; case 2
 27088   0016BE  A4D8               	btfss	status,2,c
 27089   0016C0  0A01               	xorlw	1	; case 3
 27090   0016C2                     l21768:
 27091                           
 27092                           ;../servo.c: 526:     }
 27093   0016C2  0101               	movlb	1	; () banked
 27094   0016C4  2BD7               	incf	pollServos@io& (0+255),f,b
 27095                           
 27096                           ; BSR set to: 1
 27097   0016C6  0E0F               	movlw	15
 27098   0016C8  65D7               	cpfsgt	pollServos@io& (0+255),b
 27099   0016CA  D78A               	goto	l21756
 27100   0016CC  0012               	return	
 27101   0016CE                     __end_of_pollServos:
 27102                           	callstack 0
 27103                           
 27104 ;; *************** function _initBounce *****************
 27105 ;; Defined at:
 27106 ;;		line 89 in file "../bounce.c"
 27107 ;; Parameters:    Size  Location     Type
 27108 ;;  io              1    wreg     unsigned char 
 27109 ;; Auto vars:     Size  Location     Type
 27110 ;;  io              1   45[BANK0 ] unsigned char 
 27111 ;; Return value:  Size  Location     Type
 27112 ;;                  1    wreg      void 
 27113 ;; Registers used:
 27114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27115 ;; Tracked objects:
 27116 ;;		On entry : 0/0
 27117 ;;		On exit  : 0/0
 27118 ;;		Unchanged: 0/0
 27119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27121 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27123 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27124 ;;Total ram usage:        1 bytes
 27125 ;; Hardware stack levels used: 1
 27126 ;; Hardware stack levels required when called: 12
 27127 ;; This function calls:
 27128 ;;		Nothing
 27129 ;; This function is called by:
 27130 ;;		_pollServos
 27131 ;; This function uses a non-reentrant model
 27132 ;;
 27133                           
 27134                           	psect	text99
 27135   00C06A                     __ptext99:
 27136                           	callstack 0
 27137   00C06A                     _initBounce:
 27138                           	callstack 15
 27139                           
 27140                           ; BSR set to: 1
 27141                           ;incstack = 0
 27142                           ;initBounce@io stored from wreg
 27143   00C06A  0100               	movlb	0	; () banked
 27144   00C06C  6F8D               	movwf	initBounce@io& (0+255),b
 27145                           
 27146                           ;../bounce.c: 90:     bounceState[io] = STATE_FIRST_PULL;
 27147   00C06E  0E44               	movlw	low _bounceState
 27148   00C070  0100               	movlb	0	; () banked
 27149   00C072  258D               	addwf	initBounce@io& (0+255),w,b
 27150   00C074  6ED9               	movwf	fsr2l,c
 27151   00C076  6ADA               	clrf	fsr2h,c
 27152   00C078  0E02               	movlw	high _bounceState
 27153   00C07A  22DA               	addwfc	fsr2h,f,c
 27154   00C07C  6ADF               	clrf	indf2,c
 27155                           
 27156                           ; BSR set to: 0
 27157                           ;../bounce.c: 91:     speed[io] = 0;
 27158   00C07E  518D               	movf	initBounce@io& (0+255),w,b
 27159   00C080  0D02               	mullw	2
 27160   00C082  0E00               	movlw	low _speed
 27161   00C084  24F3               	addwf	243,w,c
 27162   00C086  6ED9               	movwf	fsr2l,c
 27163   00C088  0E02               	movlw	high _speed
 27164   00C08A  20F4               	addwfc	prodh,w,c
 27165   00C08C  6EDA               	movwf	fsr2h,c
 27166   00C08E  6ADE               	clrf	postinc2,c
 27167   00C090  6ADD               	clrf	postdec2,c
 27168                           
 27169                           ; BSR set to: 0
 27170   00C092  0012               	return		;funcret
 27171   00C094                     __end_of_initBounce:
 27172                           	callstack 0
 27173                           
 27174 ;; *************** function _bounceUp *****************
 27175 ;; Defined at:
 27176 ;;		line 161 in file "../bounce.c"
 27177 ;; Parameters:    Size  Location     Type
 27178 ;;  io              1    wreg     unsigned char 
 27179 ;; Auto vars:     Size  Location     Type
 27180 ;;  io              1   71[BANK0 ] unsigned char 
 27181 ;;  midway          1   70[BANK0 ] unsigned char 
 27182 ;;  reversed        1   69[BANK0 ] enum E12710
 27183 ;; Return value:  Size  Location     Type
 27184 ;;                  1    wreg      enum E12710
 27185 ;; Registers used:
 27186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27187 ;; Tracked objects:
 27188 ;;		On entry : 0/0
 27189 ;;		On exit  : 0/0
 27190 ;;		Unchanged: 0/0
 27191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27193 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27194 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27195 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27196 ;;Total ram usage:        9 bytes
 27197 ;; Hardware stack levels used: 1
 27198 ;; Hardware stack levels required when called: 13
 27199 ;; This function calls:
 27200 ;;		___awdiv
 27201 ;;		_getNV
 27202 ;; This function is called by:
 27203 ;;		_pollServos
 27204 ;; This function uses a non-reentrant model
 27205 ;;
 27206                           
 27207                           	psect	text100
 27208   005A4C                     __ptext100:
 27209                           	callstack 0
 27210   005A4C                     _bounceUp:
 27211                           	callstack 14
 27212                           
 27213                           ; BSR set to: 0
 27214                           ;incstack = 0
 27215                           ;bounceUp@io stored from wreg
 27216   005A4C  0100               	movlb	0	; () banked
 27217   005A4E  6FA7               	movwf	bounceUp@io& (0+255),b
 27218                           
 27219                           ;../bounce.c: 162:     Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint8_t)
      +                          getNV((16 + 7*(io) + 2)));
 27220   005A50  0100               	movlb	0	; () banked
 27221   005A52  51A7               	movf	bounceUp@io& (0+255),w,b
 27222   005A54  0D07               	mullw	7
 27223   005A56  50F3               	movf	243,w,c
 27224   005A58  0F12               	addlw	18
 27225   005A5A  ECD9  F05D         	call	_getNV
 27226   005A5E  C08D  F09F         	movff	?_getNV,??_bounceUp
 27227   005A62  C08E  F0A0         	movff	?_getNV+1,??_bounceUp+1
 27228   005A66  0100               	movlb	0	; () banked
 27229   005A68  51A7               	movf	bounceUp@io& (0+255),w,b
 27230   005A6A  0D07               	mullw	7
 27231   005A6C  50F3               	movf	243,w,c
 27232   005A6E  0F13               	addlw	19
 27233   005A70  ECD9  F05D         	call	_getNV
 27234   005A74  0100               	movlb	0	; () banked
 27235   005A76  518D               	movf	?_getNV& (0+255),w,b
 27236   005A78  5D9F               	subwf	??_bounceUp& (0+255),w,b
 27237   005A7A  B0D8               	btfsc	status,0,c
 27238   005A7C  D002               	goto	u21260
 27239   005A7E  0E01               	movlw	1
 27240   005A80  D001               	goto	u21270
 27241   005A82                     u21260:
 27242   005A82  0E00               	movlw	0
 27243   005A84                     u21270:
 27244   005A84  6FA5               	movwf	bounceUp@reversed& (0+255),b
 27245                           
 27246                           ;../bounce.c: 163:     uint8_t midway;;../bounce.c: 164:     switch(bounceState[io]) {
 27247   005A86  D10A               	goto	l20714
 27248   005A88                     l20664:
 27249                           
 27250                           ; BSR set to: 0
 27251                           ;../bounce.c: 167:         midway = ((uint8_t)getNV((16 + 7*(io) + 3)))/2 +
 27252   005A88  51A7               	movf	bounceUp@io& (0+255),w,b
 27253   005A8A  0D07               	mullw	7
 27254   005A8C  50F3               	movf	243,w,c
 27255   005A8E  0F12               	addlw	18
 27256   005A90  ECD9  F05D         	call	_getNV
 27257   005A94  0100               	movlb	0	; () banked
 27258   005A96  518D               	movf	?_getNV& (0+255),w,b
 27259   005A98  6F97               	movwf	___awdiv@dividend& (0+255),b
 27260   005A9A  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27261   005A9C  0E00               	movlw	0
 27262   005A9E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27263   005AA0  0E02               	movlw	2
 27264   005AA2  6F99               	movwf	___awdiv@divisor& (0+255),b
 27265   005AA4  ECA3  F052         	call	___awdiv	;wreg free
 27266   005AA8  C097  F09F         	movff	?___awdiv,??_bounceUp
 27267   005AAC  C098  F0A0         	movff	?___awdiv+1,??_bounceUp+1
 27268   005AB0  0100               	movlb	0	; () banked
 27269   005AB2  51A7               	movf	bounceUp@io& (0+255),w,b
 27270   005AB4  0D07               	mullw	7
 27271   005AB6  50F3               	movf	243,w,c
 27272   005AB8  0F13               	addlw	19
 27273   005ABA  ECD9  F05D         	call	_getNV
 27274   005ABE  0100               	movlb	0	; () banked
 27275   005AC0  518D               	movf	?_getNV& (0+255),w,b
 27276   005AC2  6F97               	movwf	___awdiv@dividend& (0+255),b
 27277   005AC4  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 27278   005AC6  0E00               	movlw	0
 27279   005AC8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27280   005ACA  0E02               	movlw	2
 27281   005ACC  6F99               	movwf	___awdiv@divisor& (0+255),b
 27282   005ACE  ECA3  F052         	call	___awdiv	;wreg free
 27283   005AD2  0100               	movlb	0	; () banked
 27284   005AD4  5197               	movf	?___awdiv& (0+255),w,b
 27285   005AD6  259F               	addwf	??_bounceUp& (0+255),w,b
 27286   005AD8  6FA6               	movwf	bounceUp@midway& (0+255),b
 27287                           
 27288                           ; BSR set to: 0
 27289                           ;../bounce.c: 169:         if (reversed) {
 27290   005ADA  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27291   005ADC  B4D8               	btfsc	status,2,c
 27292   005ADE  D024               	goto	l20676
 27293                           
 27294                           ; BSR set to: 0
 27295                           ;../bounce.c: 170:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27296   005AE0  51A7               	movf	bounceUp@io& (0+255),w,b
 27297   005AE2  0D07               	mullw	7
 27298   005AE4  50F3               	movf	243,w,c
 27299   005AE6  0F15               	addlw	21
 27300   005AE8  ECD9  F05D         	call	_getNV
 27301   005AEC  0100               	movlb	0	; () banked
 27302   005AEE  51A7               	movf	bounceUp@io& (0+255),w,b
 27303   005AF0  0FA9               	addlw	low _currentPos
 27304   005AF2  6ED9               	movwf	fsr2l,c
 27305   005AF4  6ADA               	clrf	fsr2h,c
 27306   005AF6  518D               	movf	?_getNV& (0+255),w,b
 27307   005AF8  5EDF               	subwf	indf2,f,c
 27308                           
 27309                           ; BSR set to: 0
 27310                           ;../bounce.c: 171:             if (currentPos[io] <= midway) {
 27311   005AFA  51A7               	movf	bounceUp@io& (0+255),w,b
 27312   005AFC  0FA9               	addlw	low _currentPos
 27313   005AFE  6ED9               	movwf	fsr2l,c
 27314   005B00  6ADA               	clrf	fsr2h,c
 27315   005B02  50DE               	movf	postinc2,w,c
 27316   005B04  5DA6               	subwf	bounceUp@midway& (0+255),w,b
 27317   005B06  A0D8               	btfss	status,0,c
 27318   005B08  D0E1               	goto	l20716
 27319                           
 27320                           ; BSR set to: 0
 27321                           ;../bounce.c: 172:                 bounceState[io] = STATE_PAUSE;
 27322   005B0A  0E44               	movlw	low _bounceState
 27323   005B0C  25A7               	addwf	bounceUp@io& (0+255),w,b
 27324   005B0E  6ED9               	movwf	fsr2l,c
 27325   005B10  6ADA               	clrf	fsr2h,c
 27326   005B12  0E02               	movlw	high _bounceState
 27327   005B14  22DA               	addwfc	fsr2h,f,c
 27328   005B16  0E01               	movlw	1
 27329   005B18  6EDF               	movwf	indf2,c
 27330                           
 27331                           ; BSR set to: 0
 27332                           ;../bounce.c: 173:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 27333   005B1A  51A7               	movf	bounceUp@io& (0+255),w,b
 27334   005B1C  0D07               	mullw	7
 27335   005B1E  50F3               	movf	243,w,c
 27336   005B20  0F16               	addlw	22
 27337   005B22  ECD9  F05D         	call	_getNV
 27338   005B26  D023               	goto	L6
 27339   005B28                     l20676:
 27340                           
 27341                           ; BSR set to: 0
 27342                           ;../bounce.c: 176:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 27343   005B28  51A7               	movf	bounceUp@io& (0+255),w,b
 27344   005B2A  0D07               	mullw	7
 27345   005B2C  50F3               	movf	243,w,c
 27346   005B2E  0F15               	addlw	21
 27347   005B30  ECD9  F05D         	call	_getNV
 27348   005B34  0100               	movlb	0	; () banked
 27349   005B36  51A7               	movf	bounceUp@io& (0+255),w,b
 27350   005B38  0FA9               	addlw	low _currentPos
 27351   005B3A  6ED9               	movwf	fsr2l,c
 27352   005B3C  6ADA               	clrf	fsr2h,c
 27353   005B3E  518D               	movf	?_getNV& (0+255),w,b
 27354   005B40  26DF               	addwf	indf2,f,c
 27355                           
 27356                           ; BSR set to: 0
 27357                           ;../bounce.c: 177:             if (currentPos[io] >= midway) {
 27358   005B42  51A7               	movf	bounceUp@io& (0+255),w,b
 27359   005B44  0FA9               	addlw	low _currentPos
 27360   005B46  6ED9               	movwf	fsr2l,c
 27361   005B48  6ADA               	clrf	fsr2h,c
 27362   005B4A  51A6               	movf	bounceUp@midway& (0+255),w,b
 27363   005B4C  5CDE               	subwf	postinc2,w,c
 27364   005B4E  A0D8               	btfss	status,0,c
 27365   005B50  D0BD               	goto	l20716
 27366                           
 27367                           ; BSR set to: 0
 27368                           ;../bounce.c: 178:                 bounceState[io] = STATE_PAUSE;
 27369   005B52  0E44               	movlw	low _bounceState
 27370   005B54  25A7               	addwf	bounceUp@io& (0+255),w,b
 27371   005B56  6ED9               	movwf	fsr2l,c
 27372   005B58  6ADA               	clrf	fsr2h,c
 27373   005B5A  0E02               	movlw	high _bounceState
 27374   005B5C  22DA               	addwfc	fsr2h,f,c
 27375   005B5E  0E01               	movlw	1
 27376   005B60  6EDF               	movwf	indf2,c
 27377                           
 27378                           ; BSR set to: 0
 27379                           ;../bounce.c: 179:                 speed[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 27380   005B62  51A7               	movf	bounceUp@io& (0+255),w,b
 27381   005B64  0D07               	mullw	7
 27382   005B66  50F3               	movf	243,w,c
 27383   005B68  0F16               	addlw	22
 27384   005B6A  ECD9  F05D         	call	_getNV
 27385   005B6E                     L6:
 27386   005B6E  0100               	movlb	0	; () banked
 27387   005B70  518D               	movf	?_getNV& (0+255),w,b
 27388   005B72  6F9F               	movwf	??_bounceUp& (0+255),b
 27389   005B74  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27390   005B76  51A7               	movf	bounceUp@io& (0+255),w,b
 27391   005B78  0D02               	mullw	2
 27392   005B7A  0E00               	movlw	low _speed
 27393   005B7C  24F3               	addwf	243,w,c
 27394   005B7E  6ED9               	movwf	fsr2l,c
 27395   005B80  0E02               	movlw	high _speed
 27396   005B82  20F4               	addwfc	prodh,w,c
 27397   005B84  6EDA               	movwf	fsr2h,c
 27398   005B86  C09F  FFDE         	movff	??_bounceUp,postinc2
 27399   005B8A  C0A0  FFDD         	movff	??_bounceUp+1,postdec2
 27400   005B8E  D09E               	goto	l20716
 27401   005B90                     l20684:
 27402                           
 27403                           ; BSR set to: 0
 27404                           ;../bounce.c: 185:         if (speed[io] == 0) bounceState[io] = STATE_SECOND_PULL;
 27405   005B90  51A7               	movf	bounceUp@io& (0+255),w,b
 27406   005B92  0D02               	mullw	2
 27407   005B94  0E00               	movlw	low _speed
 27408   005B96  24F3               	addwf	243,w,c
 27409   005B98  6ED9               	movwf	fsr2l,c
 27410   005B9A  0E02               	movlw	high _speed
 27411   005B9C  20F4               	addwfc	prodh,w,c
 27412   005B9E  6EDA               	movwf	fsr2h,c
 27413   005BA0  50DE               	movf	postinc2,w,c
 27414   005BA2  10DE               	iorwf	postinc2,w,c
 27415   005BA4  A4D8               	btfss	status,2,c
 27416   005BA6  D008               	goto	l20688
 27417                           
 27418                           ; BSR set to: 0
 27419   005BA8  0E44               	movlw	low _bounceState
 27420   005BAA  25A7               	addwf	bounceUp@io& (0+255),w,b
 27421   005BAC  6ED9               	movwf	fsr2l,c
 27422   005BAE  6ADA               	clrf	fsr2h,c
 27423   005BB0  0E02               	movlw	high _bounceState
 27424   005BB2  22DA               	addwfc	fsr2h,f,c
 27425   005BB4  0E02               	movlw	2
 27426   005BB6  6EDF               	movwf	indf2,c
 27427   005BB8                     l20688:
 27428                           
 27429                           ; BSR set to: 0
 27430                           ;../bounce.c: 186:         speed[io]--;
 27431   005BB8  51A7               	movf	bounceUp@io& (0+255),w,b
 27432   005BBA  0D02               	mullw	2
 27433   005BBC  0E00               	movlw	low _speed
 27434   005BBE  24F3               	addwf	243,w,c
 27435   005BC0  6ED9               	movwf	fsr2l,c
 27436   005BC2  0E02               	movlw	high _speed
 27437   005BC4  20F4               	addwfc	prodh,w,c
 27438   005BC6  6EDA               	movwf	fsr2h,c
 27439   005BC8  06DE               	decf	postinc2,f,c
 27440   005BCA  0E00               	movlw	0
 27441   005BCC  5ADD               	subwfb	postdec2,f,c
 27442                           
 27443                           ;../bounce.c: 187:         break;
 27444   005BCE  D07E               	goto	l20716
 27445   005BD0                     l20690:
 27446                           
 27447                           ; BSR set to: 0
 27448                           ;../bounce.c: 190:         if (reversed) {
 27449   005BD0  51A5               	movf	bounceUp@reversed& (0+255),w,b
 27450   005BD2  B4D8               	btfsc	status,2,c
 27451   005BD4  D036               	goto	l20702
 27452                           
 27453                           ; BSR set to: 0
 27454                           ;../bounce.c: 191:             currentPos[io] -= (uint8_t)getNV((16 + 7*(io) + 5));
 27455   005BD6  51A7               	movf	bounceUp@io& (0+255),w,b
 27456   005BD8  0D07               	mullw	7
 27457   005BDA  50F3               	movf	243,w,c
 27458   005BDC  0F15               	addlw	21
 27459   005BDE  ECD9  F05D         	call	_getNV
 27460   005BE2  0100               	movlb	0	; () banked
 27461   005BE4  51A7               	movf	bounceUp@io& (0+255),w,b
 27462   005BE6  0FA9               	addlw	low _currentPos
 27463   005BE8  6ED9               	movwf	fsr2l,c
 27464   005BEA  6ADA               	clrf	fsr2h,c
 27465   005BEC  518D               	movf	?_getNV& (0+255),w,b
 27466   005BEE  5EDF               	subwf	indf2,f,c
 27467                           
 27468                           ; BSR set to: 0
 27469                           ;../bounce.c: 192:             if (currentPos[io]<=targetPos[io]-3) {
 27470   005BF0  51A7               	movf	bounceUp@io& (0+255),w,b
 27471   005BF2  0FA9               	addlw	low _currentPos
 27472   005BF4  6ED9               	movwf	fsr2l,c
 27473   005BF6  6ADA               	clrf	fsr2h,c
 27474   005BF8  50DF               	movf	indf2,w,c
 27475   005BFA  6F9F               	movwf	??_bounceUp& (0+255),b
 27476   005BFC  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27477   005BFE  0E20               	movlw	low _targetPos
 27478   005C00  25A7               	addwf	bounceUp@io& (0+255),w,b
 27479   005C02  6ED9               	movwf	fsr2l,c
 27480   005C04  6ADA               	clrf	fsr2h,c
 27481   005C06  0E01               	movlw	high _targetPos
 27482   005C08  22DA               	addwfc	fsr2h,f,c
 27483   005C0A  50DF               	movf	indf2,w,c
 27484   005C0C  6FA1               	movwf	(??_bounceUp+2)& (0+255),b
 27485   005C0E  0EFD               	movlw	253
 27486   005C10  25A1               	addwf	(??_bounceUp+2)& (0+255),w,b
 27487   005C12  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27488   005C14  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27489   005C16  0EFF               	movlw	255
 27490   005C18  23A3               	addwfc	(??_bounceUp+4)& (0+255),f,b
 27491   005C1A  519F               	movf	??_bounceUp& (0+255),w,b
 27492   005C1C  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27493   005C1E  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27494   005C20  0A80               	xorlw	128
 27495   005C22  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27496   005C24  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27497   005C26  0A80               	xorlw	128
 27498   005C28  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27499   005C2A  A0D8               	btfss	status,0,c
 27500   005C2C  D04F               	goto	l20716
 27501   005C2E                     u21330:
 27502                           
 27503                           ; BSR set to: 0
 27504                           ;../bounce.c: 193:                 bounceState[io] = STATE_DONE;
 27505   005C2E  0E44               	movlw	low _bounceState
 27506   005C30  25A7               	addwf	bounceUp@io& (0+255),w,b
 27507   005C32  6ED9               	movwf	fsr2l,c
 27508   005C34  6ADA               	clrf	fsr2h,c
 27509   005C36  0E02               	movlw	high _bounceState
 27510   005C38  22DA               	addwfc	fsr2h,f,c
 27511   005C3A  0E03               	movlw	3
 27512   005C3C  6EDF               	movwf	indf2,c
 27513                           
 27514                           ; BSR set to: 0
 27515                           ;../bounce.c: 194:                 return TRUE;
 27516   005C3E  0E01               	movlw	1
 27517   005C40  0012               	return	
 27518   005C42                     l20702:
 27519                           
 27520                           ; BSR set to: 0
 27521                           ;../bounce.c: 197:             currentPos[io] += (uint8_t)getNV((16 + 7*(io) + 5));
 27522   005C42  51A7               	movf	bounceUp@io& (0+255),w,b
 27523   005C44  0D07               	mullw	7
 27524   005C46  50F3               	movf	243,w,c
 27525   005C48  0F15               	addlw	21
 27526   005C4A  ECD9  F05D         	call	_getNV
 27527   005C4E  0100               	movlb	0	; () banked
 27528   005C50  51A7               	movf	bounceUp@io& (0+255),w,b
 27529   005C52  0FA9               	addlw	low _currentPos
 27530   005C54  6ED9               	movwf	fsr2l,c
 27531   005C56  6ADA               	clrf	fsr2h,c
 27532   005C58  518D               	movf	?_getNV& (0+255),w,b
 27533   005C5A  26DF               	addwf	indf2,f,c
 27534                           
 27535                           ; BSR set to: 0
 27536                           ;../bounce.c: 198:             if (currentPos[io]>=targetPos[io]-3) {
 27537   005C5C  0E20               	movlw	low _targetPos
 27538   005C5E  25A7               	addwf	bounceUp@io& (0+255),w,b
 27539   005C60  6ED9               	movwf	fsr2l,c
 27540   005C62  6ADA               	clrf	fsr2h,c
 27541   005C64  0E01               	movlw	high _targetPos
 27542   005C66  22DA               	addwfc	fsr2h,f,c
 27543   005C68  50DF               	movf	indf2,w,c
 27544   005C6A  6F9F               	movwf	??_bounceUp& (0+255),b
 27545   005C6C  0EFD               	movlw	253
 27546   005C6E  259F               	addwf	??_bounceUp& (0+255),w,b
 27547   005C70  6FA0               	movwf	(??_bounceUp+1)& (0+255),b
 27548   005C72  6BA1               	clrf	(??_bounceUp+2)& (0+255),b
 27549   005C74  0EFF               	movlw	255
 27550   005C76  23A1               	addwfc	(??_bounceUp+2)& (0+255),f,b
 27551   005C78  51A7               	movf	bounceUp@io& (0+255),w,b
 27552   005C7A  0FA9               	addlw	low _currentPos
 27553   005C7C  6ED9               	movwf	fsr2l,c
 27554   005C7E  6ADA               	clrf	fsr2h,c
 27555   005C80  50DF               	movf	indf2,w,c
 27556   005C82  6FA2               	movwf	(??_bounceUp+3)& (0+255),b
 27557   005C84  6BA3               	clrf	(??_bounceUp+4)& (0+255),b
 27558   005C86  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27559   005C88  5DA2               	subwf	(??_bounceUp+3)& (0+255),w,b
 27560   005C8A  51A3               	movf	(??_bounceUp+4)& (0+255),w,b
 27561   005C8C  0A80               	xorlw	128
 27562   005C8E  6FA4               	movwf	(??_bounceUp+5)& (0+255),b
 27563   005C90  51A1               	movf	(??_bounceUp+2)& (0+255),w,b
 27564   005C92  0A80               	xorlw	128
 27565   005C94  59A4               	subwfb	(??_bounceUp+5)& (0+255),w,b
 27566   005C96  B0D8               	btfsc	status,0,c
 27567   005C98  D7CA               	goto	u21330
 27568   005C9A  D018               	goto	l20716
 27569   005C9C                     l20714:
 27570                           
 27571                           ; BSR set to: 0
 27572   005C9C  0E44               	movlw	low _bounceState
 27573   005C9E  25A7               	addwf	bounceUp@io& (0+255),w,b
 27574   005CA0  6ED9               	movwf	fsr2l,c
 27575   005CA2  6ADA               	clrf	fsr2h,c
 27576   005CA4  0E02               	movlw	high _bounceState
 27577   005CA6  22DA               	addwfc	fsr2h,f,c
 27578   005CA8  50DF               	movf	indf2,w,c
 27579   005CAA  6F9F               	movwf	??_bounceUp& (0+255),b
 27580   005CAC  6BA0               	clrf	(??_bounceUp+1)& (0+255),b
 27581                           
 27582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27583                           ; Switch size 1, requested type "simple"
 27584                           ; Number of cases is 1, Range of values is 0 to 0
 27585                           ; switch strategies available:
 27586                           ; Name         Instructions Cycles
 27587                           ; simple_byte            4     3 (average)
 27588                           ;	Chosen strategy is simple_byte
 27589   005CAE  51A0               	movf	(??_bounceUp+1)& (0+255),w,b
 27590   005CB0  0A00               	xorlw	0	; case 0
 27591   005CB2  A4D8               	btfss	status,2,c
 27592   005CB4  D00B               	goto	l20716
 27593                           
 27594                           ; BSR set to: 0
 27595                           ; Switch size 1, requested type "simple"
 27596                           ; Number of cases is 4, Range of values is 0 to 3
 27597                           ; switch strategies available:
 27598                           ; Name         Instructions Cycles
 27599                           ; simple_byte           13     7 (average)
 27600                           ;	Chosen strategy is simple_byte
 27601   005CB6  519F               	movf	??_bounceUp& (0+255),w,b
 27602   005CB8  0A00               	xorlw	0	; case 0
 27603   005CBA  B4D8               	btfsc	status,2,c
 27604   005CBC  D6E5               	goto	l20664
 27605   005CBE  0A01               	xorlw	1	; case 1
 27606   005CC0  B4D8               	btfsc	status,2,c
 27607   005CC2  D766               	goto	l20684
 27608   005CC4  0A03               	xorlw	3	; case 2
 27609   005CC6  B4D8               	btfsc	status,2,c
 27610   005CC8  D783               	goto	l20690
 27611   005CCA  0A01               	xorlw	1	; case 3
 27612   005CCC                     l20716:
 27613                           
 27614                           ; BSR set to: 0
 27615                           ;../bounce.c: 207:     return FALSE;
 27616   005CCC  0E00               	movlw	0
 27617                           
 27618                           ; BSR set to: 0
 27619   005CCE  0012               	return		;funcret
 27620   005CD0                     __end_of_bounceUp:
 27621                           	callstack 0
 27622                           
 27623 ;; *************** function _bounceDown *****************
 27624 ;; Defined at:
 27625 ;;		line 103 in file "../bounce.c"
 27626 ;; Parameters:    Size  Location     Type
 27627 ;;  io              1    wreg     unsigned char 
 27628 ;; Auto vars:     Size  Location     Type
 27629 ;;  io              1    3[BANK1 ] unsigned char 
 27630 ;;  tmp             2    1[BANK1 ] int 
 27631 ;;  reversed        1    0[BANK1 ] enum E12710
 27632 ;; Return value:  Size  Location     Type
 27633 ;;                  1    wreg      enum E12710
 27634 ;; Registers used:
 27635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27636 ;; Tracked objects:
 27637 ;;		On entry : 0/0
 27638 ;;		On exit  : 0/0
 27639 ;;		Unchanged: 0/0
 27640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27642 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27643 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27644 ;;      Totals:         0       7       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27645 ;;Total ram usage:       11 bytes
 27646 ;; Hardware stack levels used: 1
 27647 ;; Hardware stack levels required when called: 13
 27648 ;; This function calls:
 27649 ;;		___awdiv
 27650 ;;		___wmul
 27651 ;;		_getNV
 27652 ;; This function is called by:
 27653 ;;		_pollServos
 27654 ;; This function uses a non-reentrant model
 27655 ;;
 27656                           
 27657                           	psect	text101
 27658   0028A0                     __ptext101:
 27659                           	callstack 0
 27660   0028A0                     _bounceDown:
 27661                           	callstack 14
 27662                           
 27663                           ; BSR set to: 0
 27664                           ;incstack = 0
 27665                           ;bounceDown@io stored from wreg
 27666   0028A0  0101               	movlb	1	; () banked
 27667   0028A2  6FBD               	movwf	bounceDown@io& (0+255),b
 27668                           
 27669                           ;../bounce.c: 105:     if ((currentPos[io]>targetPos[io]+3) || (currentPos[io]<targetPos
      +                          [io]-3) || (speed[io]>3) || (speed[io]<-3)) {
 27670   0028A4  0101               	movlb	1	; () banked
 27671   0028A6  51BD               	movf	bounceDown@io& (0+255),w,b
 27672   0028A8  0FA9               	addlw	low _currentPos
 27673   0028AA  6ED9               	movwf	fsr2l,c
 27674   0028AC  6ADA               	clrf	fsr2h,c
 27675   0028AE  50DF               	movf	indf2,w,c
 27676   0028B0  0100               	movlb	0	; () banked
 27677   0028B2  6F9F               	movwf	??_bounceDown& (0+255),b
 27678   0028B4  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27679   0028B6  0E20               	movlw	low _targetPos
 27680   0028B8  0101               	movlb	1	; () banked
 27681   0028BA  25BD               	addwf	bounceDown@io& (0+255),w,b
 27682   0028BC  6ED9               	movwf	fsr2l,c
 27683   0028BE  6ADA               	clrf	fsr2h,c
 27684   0028C0  0E01               	movlw	high _targetPos
 27685   0028C2  22DA               	addwfc	fsr2h,f,c
 27686   0028C4  50DF               	movf	indf2,w,c
 27687   0028C6  0100               	movlb	0	; () banked
 27688   0028C8  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27689   0028CA  6BA2               	clrf	(??_bounceDown+3)& (0+255),b
 27690   0028CC  0E03               	movlw	3
 27691   0028CE  27A1               	addwf	(??_bounceDown+2)& (0+255),f,b
 27692   0028D0  0E00               	movlw	0
 27693   0028D2  23A2               	addwfc	(??_bounceDown+3)& (0+255),f,b
 27694   0028D4  519F               	movf	??_bounceDown& (0+255),w,b
 27695   0028D6  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 27696   0028D8  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27697   0028DA  0A80               	xorlw	128
 27698   0028DC  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27699   0028DE  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27700   0028E0  0A80               	xorlw	128
 27701   0028E2  59A3               	subwfb	(??_bounceDown+4)& (0+255),w,b
 27702   0028E4  A0D8               	btfss	status,0,c
 27703   0028E6  D047               	goto	u21380
 27704                           
 27705                           ; BSR set to: 0
 27706   0028E8  0E20               	movlw	low _targetPos
 27707   0028EA  0101               	movlb	1	; () banked
 27708   0028EC  25BD               	addwf	bounceDown@io& (0+255),w,b
 27709   0028EE  6ED9               	movwf	fsr2l,c
 27710   0028F0  6ADA               	clrf	fsr2h,c
 27711   0028F2  0E01               	movlw	high _targetPos
 27712   0028F4  22DA               	addwfc	fsr2h,f,c
 27713   0028F6  50DF               	movf	indf2,w,c
 27714   0028F8  0100               	movlb	0	; () banked
 27715   0028FA  6F9F               	movwf	??_bounceDown& (0+255),b
 27716   0028FC  0EFD               	movlw	253
 27717   0028FE  259F               	addwf	??_bounceDown& (0+255),w,b
 27718   002900  6FA0               	movwf	(??_bounceDown+1)& (0+255),b
 27719   002902  6BA1               	clrf	(??_bounceDown+2)& (0+255),b
 27720   002904  0EFF               	movlw	255
 27721   002906  23A1               	addwfc	(??_bounceDown+2)& (0+255),f,b
 27722   002908  0101               	movlb	1	; () banked
 27723   00290A  51BD               	movf	bounceDown@io& (0+255),w,b
 27724   00290C  0FA9               	addlw	low _currentPos
 27725   00290E  6ED9               	movwf	fsr2l,c
 27726   002910  6ADA               	clrf	fsr2h,c
 27727   002912  50DF               	movf	indf2,w,c
 27728   002914  0100               	movlb	0	; () banked
 27729   002916  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27730   002918  6BA3               	clrf	(??_bounceDown+4)& (0+255),b
 27731   00291A  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 27732   00291C  5DA2               	subwf	(??_bounceDown+3)& (0+255),w,b
 27733   00291E  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 27734   002920  0A80               	xorlw	128
 27735   002922  6FA4               	movwf	(??_bounceDown+5)& (0+255),b
 27736   002924  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27737   002926  0A80               	xorlw	128
 27738   002928  59A4               	subwfb	(??_bounceDown+5)& (0+255),w,b
 27739   00292A  A0D8               	btfss	status,0,c
 27740   00292C  D024               	goto	u21380
 27741                           
 27742                           ; BSR set to: 0
 27743   00292E  0101               	movlb	1	; () banked
 27744   002930  51BD               	movf	bounceDown@io& (0+255),w,b
 27745   002932  0D02               	mullw	2
 27746   002934  0E00               	movlw	low _speed
 27747   002936  24F3               	addwf	243,w,c
 27748   002938  6ED9               	movwf	fsr2l,c
 27749   00293A  0E02               	movlw	high _speed
 27750   00293C  20F4               	addwfc	prodh,w,c
 27751   00293E  6EDA               	movwf	fsr2h,c
 27752   002940  0E01               	movlw	1
 27753   002942  BEDB               	btfsc	plusw2,7,c
 27754   002944  D007               	goto	u21370
 27755   002946  0E01               	movlw	1
 27756   002948  50DB               	movf	plusw2,w,c
 27757   00294A  E115               	bnz	l20732
 27758   00294C  0E04               	movlw	4
 27759   00294E  5CDE               	subwf	postinc2,w,c
 27760   002950  B0D8               	btfsc	status,0,c
 27761   002952  D011               	goto	u21380
 27762   002954                     u21370:
 27763                           
 27764                           ; BSR set to: 1
 27765   002954  51BD               	movf	bounceDown@io& (0+255),w,b
 27766   002956  0D02               	mullw	2
 27767   002958  0E00               	movlw	low _speed
 27768   00295A  24F3               	addwf	243,w,c
 27769   00295C  6ED9               	movwf	fsr2l,c
 27770   00295E  0E02               	movlw	high _speed
 27771   002960  20F4               	addwfc	prodh,w,c
 27772   002962  6EDA               	movwf	fsr2h,c
 27773   002964  0E01               	movlw	1
 27774   002966  AEDB               	btfss	plusw2,7,c
 27775   002968  D1F3               	goto	l20760
 27776   00296A  0EFD               	movlw	253
 27777   00296C  5CDE               	subwf	postinc2,w,c
 27778   00296E  0EFF               	movlw	255
 27779   002970  58DE               	subwfb	postinc2,w,c
 27780   002972  B0D8               	btfsc	status,0,c
 27781   002974  D1ED               	goto	l20760
 27782   002976                     u21380:
 27783   002976                     l20732:
 27784                           
 27785                           ;../bounce.c: 106:         Boolean reversed = ((uint8_t)getNV((16 + 7*(io) + 3)) > (uint
      +                          8_t)getNV((16 + 7*(io) + 2)));
 27786   002976  0101               	movlb	1	; () banked
 27787   002978  51BD               	movf	bounceDown@io& (0+255),w,b
 27788   00297A  0D07               	mullw	7
 27789   00297C  50F3               	movf	243,w,c
 27790   00297E  0F12               	addlw	18
 27791   002980  ECD9  F05D         	call	_getNV
 27792   002984  C08D  F09F         	movff	?_getNV,??_bounceDown
 27793   002988  C08E  F0A0         	movff	?_getNV+1,??_bounceDown+1
 27794   00298C  0101               	movlb	1	; () banked
 27795   00298E  51BD               	movf	bounceDown@io& (0+255),w,b
 27796   002990  0D07               	mullw	7
 27797   002992  50F3               	movf	243,w,c
 27798   002994  0F13               	addlw	19
 27799   002996  ECD9  F05D         	call	_getNV
 27800   00299A  0100               	movlb	0	; () banked
 27801   00299C  518D               	movf	?_getNV& (0+255),w,b
 27802   00299E  5D9F               	subwf	??_bounceDown& (0+255),w,b
 27803   0029A0  B0D8               	btfsc	status,0,c
 27804   0029A2  D002               	goto	u21390
 27805   0029A4  0E01               	movlw	1
 27806   0029A6  D001               	goto	u21400
 27807   0029A8                     u21390:
 27808   0029A8  0E00               	movlw	0
 27809   0029AA                     u21400:
 27810   0029AA  0101               	movlb	1	; () banked
 27811   0029AC  6FBA               	movwf	bounceDown@reversed& (0+255),b
 27812                           
 27813                           ; BSR set to: 1
 27814                           ;../bounce.c: 107:         int tmp;;../bounce.c: 109:         if (! reversed) {
 27815   0029AE  51BA               	movf	bounceDown@reversed& (0+255),w,b
 27816   0029B0  A4D8               	btfss	status,2,c
 27817   0029B2  D0E8               	goto	l20746
 27818                           
 27819                           ; BSR set to: 1
 27820                           ;../bounce.c: 112:             if (currentPos[io] < (uint8_t)getNV((16 + 7*(io) + 3)) + 
      +                          speed[io]/30) {
 27821   0029B4  51BD               	movf	bounceDown@io& (0+255),w,b
 27822   0029B6  0D02               	mullw	2
 27823   0029B8  0E00               	movlw	low _speed
 27824   0029BA  24F3               	addwf	243,w,c
 27825   0029BC  6ED9               	movwf	fsr2l,c
 27826   0029BE  0E02               	movlw	high _speed
 27827   0029C0  20F4               	addwfc	prodh,w,c
 27828   0029C2  6EDA               	movwf	fsr2h,c
 27829   0029C4  CFDE F097          	movff	postinc2,___awdiv@dividend
 27830   0029C8  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27831   0029CC  0E00               	movlw	0
 27832   0029CE  0100               	movlb	0	; () banked
 27833   0029D0  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27834   0029D2  0E1E               	movlw	30
 27835   0029D4  6F99               	movwf	___awdiv@divisor& (0+255),b
 27836   0029D6  ECA3  F052         	call	___awdiv	;wreg free
 27837   0029DA  C097  F09F         	movff	?___awdiv,??_bounceDown
 27838   0029DE  C098  F0A0         	movff	?___awdiv+1,??_bounceDown+1
 27839   0029E2  0101               	movlb	1	; () banked
 27840   0029E4  51BD               	movf	bounceDown@io& (0+255),w,b
 27841   0029E6  0D07               	mullw	7
 27842   0029E8  50F3               	movf	243,w,c
 27843   0029EA  0F13               	addlw	19
 27844   0029EC  ECD9  F05D         	call	_getNV
 27845   0029F0  0100               	movlb	0	; () banked
 27846   0029F2  518D               	movf	?_getNV& (0+255),w,b
 27847   0029F4  259F               	addwf	??_bounceDown& (0+255),w,b
 27848   0029F6  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27849   0029F8  0E00               	movlw	0
 27850   0029FA  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 27851   0029FC  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 27852   0029FE  0101               	movlb	1	; () banked
 27853   002A00  51BD               	movf	bounceDown@io& (0+255),w,b
 27854   002A02  0FA9               	addlw	low _currentPos
 27855   002A04  6ED9               	movwf	fsr2l,c
 27856   002A06  6ADA               	clrf	fsr2h,c
 27857   002A08  50DF               	movf	indf2,w,c
 27858   002A0A  0100               	movlb	0	; () banked
 27859   002A0C  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 27860   002A0E  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 27861   002A10  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27862   002A12  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 27863   002A14  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 27864   002A16  0A80               	xorlw	128
 27865   002A18  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 27866   002A1A  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 27867   002A1C  0A80               	xorlw	128
 27868   002A1E  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 27869   002A20  B0D8               	btfsc	status,0,c
 27870   002A22  D084               	goto	l20742
 27871                           
 27872                           ; BSR set to: 0
 27873                           ;../bounce.c: 115:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 27874   002A24  0101               	movlb	1	; () banked
 27875   002A26  51BD               	movf	bounceDown@io& (0+255),w,b
 27876   002A28  0D07               	mullw	7
 27877   002A2A  50F3               	movf	243,w,c
 27878   002A2C  0F14               	addlw	20
 27879   002A2E  ECD9  F05D         	call	_getNV
 27880   002A32  C08D  F091         	movff	?_getNV,___wmul@multiplier
 27881   002A36  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 27882   002A3A  0101               	movlb	1	; () banked
 27883   002A3C  51BD               	movf	bounceDown@io& (0+255),w,b
 27884   002A3E  0D02               	mullw	2
 27885   002A40  0E00               	movlw	low _speed
 27886   002A42  24F3               	addwf	243,w,c
 27887   002A44  6ED9               	movwf	fsr2l,c
 27888   002A46  0E02               	movlw	high _speed
 27889   002A48  20F4               	addwfc	prodh,w,c
 27890   002A4A  6EDA               	movwf	fsr2h,c
 27891   002A4C  CFDE F09F          	movff	postinc2,??_bounceDown
 27892   002A50  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 27893   002A54  0100               	movlb	0	; () banked
 27894   002A56  1F9F               	comf	??_bounceDown& (0+255),f,b
 27895   002A58  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 27896   002A5A  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 27897   002A5C  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 27898   002A5E  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 27899   002A62  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 27900   002A66  ECD6  F060         	call	___wmul	;wreg free
 27901   002A6A  C091  F097         	movff	?___wmul,___awdiv@dividend
 27902   002A6E  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 27903   002A72  0E00               	movlw	0
 27904   002A74  0100               	movlb	0	; () banked
 27905   002A76  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27906   002A78  0E64               	movlw	100
 27907   002A7A  6F99               	movwf	___awdiv@divisor& (0+255),b
 27908   002A7C  ECA3  F052         	call	___awdiv	;wreg free
 27909   002A80  0101               	movlb	1	; () banked
 27910   002A82  51BD               	movf	bounceDown@io& (0+255),w,b
 27911   002A84  0D02               	mullw	2
 27912   002A86  0E00               	movlw	low _speed
 27913   002A88  24F3               	addwf	243,w,c
 27914   002A8A  6ED9               	movwf	fsr2l,c
 27915   002A8C  0E02               	movlw	high _speed
 27916   002A8E  20F4               	addwfc	prodh,w,c
 27917   002A90  6EDA               	movwf	fsr2h,c
 27918   002A92  0100               	movlb	0	; () banked
 27919   002A94  C097  FFDE         	movff	?___awdiv,postinc2
 27920   002A98  C098  FFDD         	movff	?___awdiv+1,postdec2
 27921                           
 27922                           ;../bounce.c: 117:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) -
 27923   002A9C  0101               	movlb	1	; () banked
 27924   002A9E  51BD               	movf	bounceDown@io& (0+255),w,b
 27925   002AA0  0D07               	mullw	7
 27926   002AA2  50F3               	movf	243,w,c
 27927   002AA4  0F13               	addlw	19
 27928   002AA6  ECD9  F05D         	call	_getNV
 27929   002AAA  0100               	movlb	0	; () banked
 27930   002AAC  518D               	movf	?_getNV& (0+255),w,b
 27931   002AAE  6F9F               	movwf	??_bounceDown& (0+255),b
 27932   002AB0  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 27933   002AB2  0101               	movlb	1	; () banked
 27934   002AB4  51BD               	movf	bounceDown@io& (0+255),w,b
 27935   002AB6  0D07               	mullw	7
 27936   002AB8  50F3               	movf	243,w,c
 27937   002ABA  0F13               	addlw	19
 27938   002ABC  ECD9  F05D         	call	_getNV
 27939   002AC0  0100               	movlb	0	; () banked
 27940   002AC2  518D               	movf	?_getNV& (0+255),w,b
 27941   002AC4  279F               	addwf	??_bounceDown& (0+255),f,b
 27942   002AC6  0E00               	movlw	0
 27943   002AC8  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 27944   002ACA  0101               	movlb	1	; () banked
 27945   002ACC  51BD               	movf	bounceDown@io& (0+255),w,b
 27946   002ACE  0FA9               	addlw	low _currentPos
 27947   002AD0  6ED9               	movwf	fsr2l,c
 27948   002AD2  6ADA               	clrf	fsr2h,c
 27949   002AD4  50DF               	movf	indf2,w,c
 27950   002AD6  0100               	movlb	0	; () banked
 27951   002AD8  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 27952   002ADA  51A1               	movf	(??_bounceDown+2)& (0+255),w,b
 27953   002ADC  5F9F               	subwf	??_bounceDown& (0+255),f,b
 27954   002ADE  0E00               	movlw	0
 27955   002AE0  5BA0               	subwfb	(??_bounceDown+1)& (0+255),f,b
 27956   002AE2  0101               	movlb	1	; () banked
 27957   002AE4  51BD               	movf	bounceDown@io& (0+255),w,b
 27958   002AE6  0D02               	mullw	2
 27959   002AE8  0E00               	movlw	low _speed
 27960   002AEA  24F3               	addwf	243,w,c
 27961   002AEC  6ED9               	movwf	fsr2l,c
 27962   002AEE  0E02               	movlw	high _speed
 27963   002AF0  20F4               	addwfc	prodh,w,c
 27964   002AF2  6EDA               	movwf	fsr2h,c
 27965   002AF4  CFDE F097          	movff	postinc2,___awdiv@dividend
 27966   002AF8  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 27967   002AFC  0E00               	movlw	0
 27968   002AFE  0100               	movlb	0	; () banked
 27969   002B00  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 27970   002B02  0E1E               	movlw	30
 27971   002B04  6F99               	movwf	___awdiv@divisor& (0+255),b
 27972   002B06  ECA3  F052         	call	___awdiv	;wreg free
 27973   002B0A  0100               	movlb	0	; () banked
 27974   002B0C  5197               	movf	?___awdiv& (0+255),w,b
 27975   002B0E  5D9F               	subwf	??_bounceDown& (0+255),w,b
 27976   002B10  0101               	movlb	1	; () banked
 27977   002B12  6FBB               	movwf	bounceDown@tmp& (0+255),b
 27978   002B14  0100               	movlb	0	; () banked
 27979   002B16  5198               	movf	(?___awdiv+1)& (0+255),w,b
 27980   002B18  59A0               	subwfb	(??_bounceDown+1)& (0+255),w,b
 27981   002B1A  0101               	movlb	1	; () banked
 27982   002B1C  6FBC               	movwf	(bounceDown@tmp+1)& (0+255),b
 27983                           
 27984                           ; BSR set to: 1
 27985                           ;../bounce.c: 120:                 currentPos[io] = (uint8_t)tmp;
 27986   002B1E  51BD               	movf	bounceDown@io& (0+255),w,b
 27987   002B20  0FA9               	addlw	low _currentPos
 27988   002B22  6ED9               	movwf	fsr2l,c
 27989   002B24  6ADA               	clrf	fsr2h,c
 27990   002B26  C1BB  FFDF         	movff	bounceDown@tmp,indf2
 27991                           
 27992                           ;../bounce.c: 121:             } else {
 27993   002B2A  D110               	goto	l20756
 27994   002B2C                     l20742:
 27995                           
 27996                           ; BSR set to: 0
 27997                           ;../bounce.c: 124:                 speed[io] += 3;
 27998   002B2C  0101               	movlb	1	; () banked
 27999   002B2E  51BD               	movf	bounceDown@io& (0+255),w,b
 28000   002B30  0D02               	mullw	2
 28001   002B32  0E00               	movlw	low _speed
 28002   002B34  24F3               	addwf	243,w,c
 28003   002B36  6ED9               	movwf	fsr2l,c
 28004   002B38  0E02               	movlw	high _speed
 28005   002B3A  20F4               	addwfc	prodh,w,c
 28006   002B3C  6EDA               	movwf	fsr2h,c
 28007   002B3E  0E03               	movlw	3
 28008   002B40  26DE               	addwf	postinc2,f,c
 28009   002B42  0E00               	movlw	0
 28010   002B44  22DD               	addwfc	postdec2,f,c
 28011                           
 28012                           ; BSR set to: 1
 28013                           ;../bounce.c: 125:                 currentPos[io] -= ((speed[io]/30)+1);
 28014   002B46  51BD               	movf	bounceDown@io& (0+255),w,b
 28015   002B48  0D02               	mullw	2
 28016   002B4A  0E00               	movlw	low _speed
 28017   002B4C  24F3               	addwf	243,w,c
 28018   002B4E  6ED9               	movwf	fsr2l,c
 28019   002B50  0E02               	movlw	high _speed
 28020   002B52  20F4               	addwfc	prodh,w,c
 28021   002B54  6EDA               	movwf	fsr2h,c
 28022   002B56  CFDE F097          	movff	postinc2,___awdiv@dividend
 28023   002B5A  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28024   002B5E  0E00               	movlw	0
 28025   002B60  0100               	movlb	0	; () banked
 28026   002B62  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28027   002B64  0E1E               	movlw	30
 28028   002B66  6F99               	movwf	___awdiv@divisor& (0+255),b
 28029   002B68  ECA3  F052         	call	___awdiv	;wreg free
 28030   002B6C  0E01               	movlw	1
 28031   002B6E  0100               	movlb	0	; () banked
 28032   002B70  2797               	addwf	?___awdiv& (0+255),f,b
 28033   002B72  0101               	movlb	1	; () banked
 28034   002B74  51BD               	movf	bounceDown@io& (0+255),w,b
 28035   002B76  0FA9               	addlw	low _currentPos
 28036   002B78  6ED9               	movwf	fsr2l,c
 28037   002B7A  6ADA               	clrf	fsr2h,c
 28038   002B7C  0100               	movlb	0	; () banked
 28039   002B7E  5197               	movf	?___awdiv& (0+255),w,b
 28040   002B80  5EDF               	subwf	indf2,f,c
 28041   002B82  D0E4               	goto	l20756
 28042   002B84                     l20746:
 28043                           
 28044                           ; BSR set to: 1
 28045                           ;../bounce.c: 130:             if (currentPos[io] > (uint8_t)getNV((16 + 7*(io) + 3)) - 
      +                          speed[io]/30) {
 28046   002B84  51BD               	movf	bounceDown@io& (0+255),w,b
 28047   002B86  0FA9               	addlw	low _currentPos
 28048   002B88  6ED9               	movwf	fsr2l,c
 28049   002B8A  6ADA               	clrf	fsr2h,c
 28050   002B8C  50DF               	movf	indf2,w,c
 28051   002B8E  0100               	movlb	0	; () banked
 28052   002B90  6F9F               	movwf	??_bounceDown& (0+255),b
 28053   002B92  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28054   002B94  0101               	movlb	1	; () banked
 28055   002B96  51BD               	movf	bounceDown@io& (0+255),w,b
 28056   002B98  0D07               	mullw	7
 28057   002B9A  50F3               	movf	243,w,c
 28058   002B9C  0F13               	addlw	19
 28059   002B9E  ECD9  F05D         	call	_getNV
 28060   002BA2  C08D  F0A1         	movff	?_getNV,??_bounceDown+2
 28061   002BA6  C08E  F0A2         	movff	?_getNV+1,??_bounceDown+3
 28062   002BAA  0101               	movlb	1	; () banked
 28063   002BAC  51BD               	movf	bounceDown@io& (0+255),w,b
 28064   002BAE  0D02               	mullw	2
 28065   002BB0  0E00               	movlw	low _speed
 28066   002BB2  24F3               	addwf	243,w,c
 28067   002BB4  6ED9               	movwf	fsr2l,c
 28068   002BB6  0E02               	movlw	high _speed
 28069   002BB8  20F4               	addwfc	prodh,w,c
 28070   002BBA  6EDA               	movwf	fsr2h,c
 28071   002BBC  CFDE F097          	movff	postinc2,___awdiv@dividend
 28072   002BC0  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28073   002BC4  0E00               	movlw	0
 28074   002BC6  0100               	movlb	0	; () banked
 28075   002BC8  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28076   002BCA  0E1E               	movlw	30
 28077   002BCC  6F99               	movwf	___awdiv@divisor& (0+255),b
 28078   002BCE  ECA3  F052         	call	___awdiv	;wreg free
 28079   002BD2  0100               	movlb	0	; () banked
 28080   002BD4  5197               	movf	?___awdiv& (0+255),w,b
 28081   002BD6  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28082   002BD8  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28083   002BDA  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28084   002BDC  A0D8               	btfss	status,0,c
 28085   002BDE  2998               	incf	(?___awdiv+1)& (0+255),w,b
 28086   002BE0  6BA4               	clrf	(??_bounceDown+5)& (0+255),b
 28087   002BE2  5FA4               	subwf	(??_bounceDown+5)& (0+255),f,b
 28088   002BE4  519F               	movf	??_bounceDown& (0+255),w,b
 28089   002BE6  5DA3               	subwf	(??_bounceDown+4)& (0+255),w,b
 28090   002BE8  51A4               	movf	(??_bounceDown+5)& (0+255),w,b
 28091   002BEA  0A80               	xorlw	128
 28092   002BEC  6FA5               	movwf	(??_bounceDown+6)& (0+255),b
 28093   002BEE  51A0               	movf	(??_bounceDown+1)& (0+255),w,b
 28094   002BF0  0A80               	xorlw	128
 28095   002BF2  59A5               	subwfb	(??_bounceDown+6)& (0+255),w,b
 28096   002BF4  B0D8               	btfsc	status,0,c
 28097   002BF6  D07F               	goto	l20752
 28098                           
 28099                           ; BSR set to: 0
 28100                           ;../bounce.c: 133:                 speed[io] = (-speed[io]*getNV((16 + 7*(io) + 4)))/100
      +                          ;
 28101   002BF8  0101               	movlb	1	; () banked
 28102   002BFA  51BD               	movf	bounceDown@io& (0+255),w,b
 28103   002BFC  0D07               	mullw	7
 28104   002BFE  50F3               	movf	243,w,c
 28105   002C00  0F14               	addlw	20
 28106   002C02  ECD9  F05D         	call	_getNV
 28107   002C06  C08D  F091         	movff	?_getNV,___wmul@multiplier
 28108   002C0A  C08E  F092         	movff	?_getNV+1,___wmul@multiplier+1
 28109   002C0E  0101               	movlb	1	; () banked
 28110   002C10  51BD               	movf	bounceDown@io& (0+255),w,b
 28111   002C12  0D02               	mullw	2
 28112   002C14  0E00               	movlw	low _speed
 28113   002C16  24F3               	addwf	243,w,c
 28114   002C18  6ED9               	movwf	fsr2l,c
 28115   002C1A  0E02               	movlw	high _speed
 28116   002C1C  20F4               	addwfc	prodh,w,c
 28117   002C1E  6EDA               	movwf	fsr2h,c
 28118   002C20  CFDE F09F          	movff	postinc2,??_bounceDown
 28119   002C24  CFDD F0A0          	movff	postdec2,??_bounceDown+1
 28120   002C28  0100               	movlb	0	; () banked
 28121   002C2A  1F9F               	comf	??_bounceDown& (0+255),f,b
 28122   002C2C  1FA0               	comf	(??_bounceDown+1)& (0+255),f,b
 28123   002C2E  4B9F               	infsnz	??_bounceDown& (0+255),f,b
 28124   002C30  2BA0               	incf	(??_bounceDown+1)& (0+255),f,b
 28125   002C32  C09F  F093         	movff	??_bounceDown,___wmul@multiplicand
 28126   002C36  C0A0  F094         	movff	??_bounceDown+1,___wmul@multiplicand+1
 28127   002C3A  ECD6  F060         	call	___wmul	;wreg free
 28128   002C3E  C091  F097         	movff	?___wmul,___awdiv@dividend
 28129   002C42  C092  F098         	movff	?___wmul+1,___awdiv@dividend+1
 28130   002C46  0E00               	movlw	0
 28131   002C48  0100               	movlb	0	; () banked
 28132   002C4A  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28133   002C4C  0E64               	movlw	100
 28134   002C4E  6F99               	movwf	___awdiv@divisor& (0+255),b
 28135   002C50  ECA3  F052         	call	___awdiv	;wreg free
 28136   002C54  0101               	movlb	1	; () banked
 28137   002C56  51BD               	movf	bounceDown@io& (0+255),w,b
 28138   002C58  0D02               	mullw	2
 28139   002C5A  0E00               	movlw	low _speed
 28140   002C5C  24F3               	addwf	243,w,c
 28141   002C5E  6ED9               	movwf	fsr2l,c
 28142   002C60  0E02               	movlw	high _speed
 28143   002C62  20F4               	addwfc	prodh,w,c
 28144   002C64  6EDA               	movwf	fsr2h,c
 28145   002C66  0100               	movlb	0	; () banked
 28146   002C68  C097  FFDE         	movff	?___awdiv,postinc2
 28147   002C6C  C098  FFDD         	movff	?___awdiv+1,postdec2
 28148                           
 28149                           ;../bounce.c: 135:                 tmp = (uint8_t)getNV((16 + 7*(io) + 3)) +
 28150   002C70  0101               	movlb	1	; () banked
 28151   002C72  51BD               	movf	bounceDown@io& (0+255),w,b
 28152   002C74  0D07               	mullw	7
 28153   002C76  50F3               	movf	243,w,c
 28154   002C78  0F13               	addlw	19
 28155   002C7A  ECD9  F05D         	call	_getNV
 28156   002C7E  0100               	movlb	0	; () banked
 28157   002C80  518D               	movf	?_getNV& (0+255),w,b
 28158   002C82  6F9F               	movwf	??_bounceDown& (0+255),b
 28159   002C84  6BA0               	clrf	(??_bounceDown+1)& (0+255),b
 28160   002C86  0101               	movlb	1	; () banked
 28161   002C88  51BD               	movf	bounceDown@io& (0+255),w,b
 28162   002C8A  0D07               	mullw	7
 28163   002C8C  50F3               	movf	243,w,c
 28164   002C8E  0F13               	addlw	19
 28165   002C90  ECD9  F05D         	call	_getNV
 28166   002C94  0100               	movlb	0	; () banked
 28167   002C96  518D               	movf	?_getNV& (0+255),w,b
 28168   002C98  279F               	addwf	??_bounceDown& (0+255),f,b
 28169   002C9A  0E00               	movlw	0
 28170   002C9C  23A0               	addwfc	(??_bounceDown+1)& (0+255),f,b
 28171   002C9E  0101               	movlb	1	; () banked
 28172   002CA0  51BD               	movf	bounceDown@io& (0+255),w,b
 28173   002CA2  0D02               	mullw	2
 28174   002CA4  0E00               	movlw	low _speed
 28175   002CA6  24F3               	addwf	243,w,c
 28176   002CA8  6ED9               	movwf	fsr2l,c
 28177   002CAA  0E02               	movlw	high _speed
 28178   002CAC  20F4               	addwfc	prodh,w,c
 28179   002CAE  6EDA               	movwf	fsr2h,c
 28180   002CB0  CFDE F097          	movff	postinc2,___awdiv@dividend
 28181   002CB4  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28182   002CB8  0E00               	movlw	0
 28183   002CBA  0100               	movlb	0	; () banked
 28184   002CBC  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28185   002CBE  0E1E               	movlw	30
 28186   002CC0  6F99               	movwf	___awdiv@divisor& (0+255),b
 28187   002CC2  ECA3  F052         	call	___awdiv	;wreg free
 28188   002CC6  0100               	movlb	0	; () banked
 28189   002CC8  5197               	movf	?___awdiv& (0+255),w,b
 28190   002CCA  259F               	addwf	??_bounceDown& (0+255),w,b
 28191   002CCC  6FA1               	movwf	(??_bounceDown+2)& (0+255),b
 28192   002CCE  5198               	movf	(?___awdiv+1)& (0+255),w,b
 28193   002CD0  21A0               	addwfc	(??_bounceDown+1)& (0+255),w,b
 28194   002CD2  6FA2               	movwf	(??_bounceDown+3)& (0+255),b
 28195   002CD4  0101               	movlb	1	; () banked
 28196   002CD6  51BD               	movf	bounceDown@io& (0+255),w,b
 28197   002CD8  0FA9               	addlw	low _currentPos
 28198   002CDA  6ED9               	movwf	fsr2l,c
 28199   002CDC  6ADA               	clrf	fsr2h,c
 28200   002CDE  50DF               	movf	indf2,w,c
 28201   002CE0  0100               	movlb	0	; () banked
 28202   002CE2  6FA3               	movwf	(??_bounceDown+4)& (0+255),b
 28203   002CE4  51A3               	movf	(??_bounceDown+4)& (0+255),w,b
 28204   002CE6  5DA1               	subwf	(??_bounceDown+2)& (0+255),w,b
 28205   002CE8  0101               	movlb	1	; () banked
 28206   002CEA  6FBB               	movwf	bounceDown@tmp& (0+255),b
 28207   002CEC  0100               	movlb	0	; () banked
 28208   002CEE  51A2               	movf	(??_bounceDown+3)& (0+255),w,b
 28209   002CF0  A0D8               	btfss	status,0,c
 28210   002CF2  05A2               	decf	(??_bounceDown+3)& (0+255),w,b
 28211   002CF4  D712               	goto	L7
 28212   002CF6                     l20752:
 28213                           
 28214                           ; BSR set to: 0
 28215                           ;../bounce.c: 142:                 speed[io] += 3;
 28216   002CF6  0101               	movlb	1	; () banked
 28217   002CF8  51BD               	movf	bounceDown@io& (0+255),w,b
 28218   002CFA  0D02               	mullw	2
 28219   002CFC  0E00               	movlw	low _speed
 28220   002CFE  24F3               	addwf	243,w,c
 28221   002D00  6ED9               	movwf	fsr2l,c
 28222   002D02  0E02               	movlw	high _speed
 28223   002D04  20F4               	addwfc	prodh,w,c
 28224   002D06  6EDA               	movwf	fsr2h,c
 28225   002D08  0E03               	movlw	3
 28226   002D0A  26DE               	addwf	postinc2,f,c
 28227   002D0C  0E00               	movlw	0
 28228   002D0E  22DD               	addwfc	postdec2,f,c
 28229                           
 28230                           ; BSR set to: 1
 28231                           ;../bounce.c: 143:                 currentPos[io] += ((speed[io]/30)+1);
 28232   002D10  51BD               	movf	bounceDown@io& (0+255),w,b
 28233   002D12  0D02               	mullw	2
 28234   002D14  0E00               	movlw	low _speed
 28235   002D16  24F3               	addwf	243,w,c
 28236   002D18  6ED9               	movwf	fsr2l,c
 28237   002D1A  0E02               	movlw	high _speed
 28238   002D1C  20F4               	addwfc	prodh,w,c
 28239   002D1E  6EDA               	movwf	fsr2h,c
 28240   002D20  CFDE F097          	movff	postinc2,___awdiv@dividend
 28241   002D24  CFDD F098          	movff	postdec2,___awdiv@dividend+1
 28242   002D28  0E00               	movlw	0
 28243   002D2A  0100               	movlb	0	; () banked
 28244   002D2C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28245   002D2E  0E1E               	movlw	30
 28246   002D30  6F99               	movwf	___awdiv@divisor& (0+255),b
 28247   002D32  ECA3  F052         	call	___awdiv	;wreg free
 28248   002D36  0E01               	movlw	1
 28249   002D38  0100               	movlb	0	; () banked
 28250   002D3A  2797               	addwf	?___awdiv& (0+255),f,b
 28251   002D3C  0101               	movlb	1	; () banked
 28252   002D3E  51BD               	movf	bounceDown@io& (0+255),w,b
 28253   002D40  0FA9               	addlw	low _currentPos
 28254   002D42  6ED9               	movwf	fsr2l,c
 28255   002D44  6ADA               	clrf	fsr2h,c
 28256   002D46  0100               	movlb	0	; () banked
 28257   002D48  5197               	movf	?___awdiv& (0+255),w,b
 28258   002D4A  26DF               	addwf	indf2,f,c
 28259   002D4C                     l20756:
 28260                           
 28261                           ;../bounce.c: 147:         return FALSE;
 28262   002D4C  0E00               	movlw	0
 28263   002D4E  0012               	return	
 28264   002D50                     l20760:
 28265                           
 28266                           ; BSR set to: 1
 28267                           ;../bounce.c: 149:     return TRUE;
 28268   002D50  0E01               	movlw	1
 28269   002D52  0012               	return		;funcret
 28270   002D54                     __end_of_bounceDown:
 28271                           	callstack 0
 28272                           
 28273 ;; *************** function _processOutputs *****************
 28274 ;; Defined at:
 28275 ;;		line 178 in file "../digitalOut.c"
 28276 ;; Parameters:    Size  Location     Type
 28277 ;;		None
 28278 ;; Auto vars:     Size  Location     Type
 28279 ;;  io              1   19[BANK1 ] unsigned char 
 28280 ;; Return value:  Size  Location     Type
 28281 ;;                  1    wreg      void 
 28282 ;; Registers used:
 28283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28284 ;; Tracked objects:
 28285 ;;		On entry : 0/0
 28286 ;;		On exit  : 0/0
 28287 ;;		Unchanged: 0/0
 28288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28290 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28291 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28292 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28293 ;;Total ram usage:        2 bytes
 28294 ;; Hardware stack levels used: 1
 28295 ;; Hardware stack levels required when called: 18
 28296 ;; This function calls:
 28297 ;;		_getNV
 28298 ;;		_sendProducedEvent
 28299 ;;		_setOutputPin
 28300 ;; This function is called by:
 28301 ;;		_loop
 28302 ;; This function uses a non-reentrant model
 28303 ;;
 28304                           
 28305                           	psect	text102
 28306   0069B6                     __ptext102:
 28307                           	callstack 0
 28308   0069B6                     _processOutputs:
 28309                           	callstack 11
 28310                           
 28311                           ;../digitalOut.c: 179:     uint8_t io;;../digitalOut.c: 180:     for (io=0; io<16; io++)
      +                           {
 28312                           
 28313                           ;incstack = 0
 28314   0069B6  0E00               	movlw	0
 28315   0069B8  0101               	movlb	1	; () banked
 28316   0069BA  6FCD               	movwf	processOutputs@io& (0+255),b
 28317   0069BC                     l22856:
 28318                           
 28319                           ; BSR set to: 1
 28320                           ;../digitalOut.c: 181:         if (getNV((16 + 7*(io) + 0)) == 1) {
 28321   0069BC  51CD               	movf	processOutputs@io& (0+255),w,b
 28322   0069BE  0D07               	mullw	7
 28323   0069C0  50F3               	movf	243,w,c
 28324   0069C2  0F10               	addlw	16
 28325   0069C4  ECD9  F05D         	call	_getNV
 28326   0069C8  0100               	movlb	0	; () banked
 28327   0069CA  058D               	decf	?_getNV& (0+255),w,b
 28328   0069CC  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 28329   0069CE  A4D8               	btfss	status,2,c
 28330   0069D0  D0D5               	goto	l281
 28331                           
 28332                           ; BSR set to: 0
 28333                           ;../digitalOut.c: 183:             if (flashDelays[io] == 1) {
 28334   0069D2  0E30               	movlw	low _flashDelays
 28335   0069D4  0101               	movlb	1	; () banked
 28336   0069D6  25CD               	addwf	processOutputs@io& (0+255),w,b
 28337   0069D8  6ED9               	movwf	fsr2l,c
 28338   0069DA  6ADA               	clrf	fsr2h,c
 28339   0069DC  0E01               	movlw	high _flashDelays
 28340   0069DE  22DA               	addwfc	fsr2h,f,c
 28341   0069E0  04DE               	decf	postinc2,w,c
 28342   0069E2  A4D8               	btfss	status,2,c
 28343   0069E4  D02F               	goto	l22866
 28344                           
 28345                           ; BSR set to: 1
 28346                           ;../digitalOut.c: 184:                 setOutputPin(io, getNV((16 + 7*(io) + 1)) & 0x20)
      +                          ;
 28347   0069E6  51CD               	movf	processOutputs@io& (0+255),w,b
 28348   0069E8  0D07               	mullw	7
 28349   0069EA  50F3               	movf	243,w,c
 28350   0069EC  0F11               	addlw	17
 28351   0069EE  ECD9  F05D         	call	_getNV
 28352   0069F2  0100               	movlb	0	; () banked
 28353   0069F4  518D               	movf	?_getNV& (0+255),w,b
 28354   0069F6  0B20               	andlw	32
 28355   0069F8  6F91               	movwf	setOutputPin@state& (0+255),b
 28356   0069FA  0101               	movlb	1	; () banked
 28357   0069FC  51CD               	movf	processOutputs@io& (0+255),w,b
 28358   0069FE  ECA5  F036         	call	_setOutputPin
 28359                           
 28360                           ;../digitalOut.c: 185:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 28361   006A02  0101               	movlb	1	; () banked
 28362   006A04  51CD               	movf	processOutputs@io& (0+255),w,b
 28363   006A06  0D07               	mullw	7
 28364   006A08  50F3               	movf	243,w,c
 28365   006A0A  0F13               	addlw	19
 28366   006A0C  ECD9  F05D         	call	_getNV
 28367   006A10  0E30               	movlw	low _flashDelays
 28368   006A12  0101               	movlb	1	; () banked
 28369   006A14  25CD               	addwf	processOutputs@io& (0+255),w,b
 28370   006A16  6ED9               	movwf	fsr2l,c
 28371   006A18  6ADA               	clrf	fsr2h,c
 28372   006A1A  0E01               	movlw	high _flashDelays
 28373   006A1C  22DA               	addwfc	fsr2h,f,c
 28374   006A1E  0100               	movlb	0	; () banked
 28375   006A20  C08D  FFDF         	movff	?_getNV,indf2
 28376                           
 28377                           ; BSR set to: 0
 28378                           ;../digitalOut.c: 186:                 flashDelays[io] = - flashDelays[io];
 28379   006A24  0E30               	movlw	low _flashDelays
 28380   006A26  0101               	movlb	1	; () banked
 28381   006A28  25CD               	addwf	processOutputs@io& (0+255),w,b
 28382   006A2A  6ED9               	movwf	fsr2l,c
 28383   006A2C  6ADA               	clrf	fsr2h,c
 28384   006A2E  0E01               	movlw	high _flashDelays
 28385   006A30  22DA               	addwfc	fsr2h,f,c
 28386   006A32  0E30               	movlw	low _flashDelays
 28387   006A34  25CD               	addwf	processOutputs@io& (0+255),w,b
 28388   006A36  6EE1               	movwf	fsr1l,c
 28389   006A38  6AE2               	clrf	fsr1h,c
 28390   006A3A  0E01               	movlw	high _flashDelays
 28391   006A3C  22E2               	addwfc	fsr1h,f,c
 28392   006A3E  50E7               	movf	indf1,w,c
 28393   006A40  0800               	sublw	0
 28394   006A42  6EDF               	movwf	indf2,c
 28395   006A44                     l22866:
 28396                           
 28397                           ; BSR set to: 1
 28398                           ;../digitalOut.c: 188:             if (flashDelays[io] == -1) {
 28399   006A44  0E30               	movlw	low _flashDelays
 28400   006A46  25CD               	addwf	processOutputs@io& (0+255),w,b
 28401   006A48  6ED9               	movwf	fsr2l,c
 28402   006A4A  6ADA               	clrf	fsr2h,c
 28403   006A4C  0E01               	movlw	high _flashDelays
 28404   006A4E  22DA               	addwfc	fsr2h,f,c
 28405   006A50  28DE               	incf	postinc2,w,c
 28406   006A52  A4D8               	btfss	status,2,c
 28407   006A54  D022               	goto	l22872
 28408                           
 28409                           ; BSR set to: 1
 28410                           ;../digitalOut.c: 189:                 setOutputPin(io, ! (getNV((16 + 7*(io) + 1)) & 0x
      +                          20));
 28411   006A56  51CD               	movf	processOutputs@io& (0+255),w,b
 28412   006A58  0D07               	mullw	7
 28413   006A5A  50F3               	movf	243,w,c
 28414   006A5C  0F11               	addlw	17
 28415   006A5E  ECD9  F05D         	call	_getNV
 28416   006A62  0100               	movlb	0	; () banked
 28417   006A64  BB8D               	btfsc	?_getNV& (0+255),5,b
 28418   006A66  D002               	goto	u24270
 28419   006A68  0E01               	movlw	1
 28420   006A6A  D001               	goto	u24280
 28421   006A6C                     u24270:
 28422   006A6C  0E00               	movlw	0
 28423   006A6E                     u24280:
 28424   006A6E  6F91               	movwf	setOutputPin@state& (0+255),b
 28425   006A70  0101               	movlb	1	; () banked
 28426   006A72  51CD               	movf	processOutputs@io& (0+255),w,b
 28427   006A74  ECA5  F036         	call	_setOutputPin
 28428                           
 28429                           ;../digitalOut.c: 190:                 flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3)
      +                          );
 28430   006A78  0101               	movlb	1	; () banked
 28431   006A7A  51CD               	movf	processOutputs@io& (0+255),w,b
 28432   006A7C  0D07               	mullw	7
 28433   006A7E  50F3               	movf	243,w,c
 28434   006A80  0F13               	addlw	19
 28435   006A82  ECD9  F05D         	call	_getNV
 28436   006A86  0E30               	movlw	low _flashDelays
 28437   006A88  0101               	movlb	1	; () banked
 28438   006A8A  25CD               	addwf	processOutputs@io& (0+255),w,b
 28439   006A8C  6ED9               	movwf	fsr2l,c
 28440   006A8E  6ADA               	clrf	fsr2h,c
 28441   006A90  0E01               	movlw	high _flashDelays
 28442   006A92  22DA               	addwfc	fsr2h,f,c
 28443   006A94  0100               	movlb	0	; () banked
 28444   006A96  C08D  FFDF         	movff	?_getNV,indf2
 28445   006A9A                     l22872:
 28446                           
 28447                           ;../digitalOut.c: 192:             if (flashDelays[io] > 1) {
 28448   006A9A  0E30               	movlw	low _flashDelays
 28449   006A9C  0101               	movlb	1	; () banked
 28450   006A9E  25CD               	addwf	processOutputs@io& (0+255),w,b
 28451   006AA0  6ED9               	movwf	fsr2l,c
 28452   006AA2  6ADA               	clrf	fsr2h,c
 28453   006AA4  0E01               	movlw	high _flashDelays
 28454   006AA6  22DA               	addwfc	fsr2h,f,c
 28455   006AA8  50DF               	movf	indf2,w,c
 28456   006AAA  0A80               	xorlw	128
 28457   006AAC  0F7E               	addlw	-130
 28458   006AAE  A0D8               	btfss	status,0,c
 28459   006AB0  D008               	goto	l22876
 28460                           
 28461                           ; BSR set to: 1
 28462                           ;../digitalOut.c: 193:                 flashDelays[io]--;
 28463   006AB2  0E30               	movlw	low _flashDelays
 28464   006AB4  25CD               	addwf	processOutputs@io& (0+255),w,b
 28465   006AB6  6ED9               	movwf	fsr2l,c
 28466   006AB8  6ADA               	clrf	fsr2h,c
 28467   006ABA  0E01               	movlw	high _flashDelays
 28468   006ABC  22DA               	addwfc	fsr2h,f,c
 28469   006ABE  06DF               	decf	indf2,f,c
 28470                           
 28471                           ;../digitalOut.c: 194:             } else if (flashDelays[io] < -1) {
 28472   006AC0  D012               	goto	l279
 28473   006AC2                     l22876:
 28474                           
 28475                           ; BSR set to: 1
 28476   006AC2  0E30               	movlw	low _flashDelays
 28477   006AC4  25CD               	addwf	processOutputs@io& (0+255),w,b
 28478   006AC6  6ED9               	movwf	fsr2l,c
 28479   006AC8  6ADA               	clrf	fsr2h,c
 28480   006ACA  0E01               	movlw	high _flashDelays
 28481   006ACC  22DA               	addwfc	fsr2h,f,c
 28482   006ACE  50DF               	movf	indf2,w,c
 28483   006AD0  0A80               	xorlw	128
 28484   006AD2  0F81               	addlw	129
 28485   006AD4  B0D8               	btfsc	status,0,c
 28486   006AD6  D007               	goto	l279
 28487                           
 28488                           ; BSR set to: 1
 28489                           ;../digitalOut.c: 195:                 flashDelays[io]++;
 28490   006AD8  0E30               	movlw	low _flashDelays
 28491   006ADA  25CD               	addwf	processOutputs@io& (0+255),w,b
 28492   006ADC  6ED9               	movwf	fsr2l,c
 28493   006ADE  6ADA               	clrf	fsr2h,c
 28494   006AE0  0E01               	movlw	high _flashDelays
 28495   006AE2  22DA               	addwfc	fsr2h,f,c
 28496   006AE4  2ADF               	incf	indf2,f,c
 28497   006AE6                     l279:
 28498                           
 28499                           ; BSR set to: 1
 28500                           ;../digitalOut.c: 198:             if (pulseDelays[io] != 0) {
 28501   006AE6  0EA4               	movlw	low _pulseDelays
 28502   006AE8  25CD               	addwf	processOutputs@io& (0+255),w,b
 28503   006AEA  6ED9               	movwf	fsr2l,c
 28504   006AEC  6ADA               	clrf	fsr2h,c
 28505   006AEE  0E02               	movlw	high _pulseDelays
 28506   006AF0  22DA               	addwfc	fsr2h,f,c
 28507   006AF2  50DF               	movf	indf2,w,c
 28508   006AF4  B4D8               	btfsc	status,2,c
 28509   006AF6  D042               	goto	l281
 28510                           
 28511                           ; BSR set to: 1
 28512                           ;../digitalOut.c: 199:                 pulseDelays[io]--;
 28513   006AF8  0EA4               	movlw	low _pulseDelays
 28514   006AFA  25CD               	addwf	processOutputs@io& (0+255),w,b
 28515   006AFC  6ED9               	movwf	fsr2l,c
 28516   006AFE  6ADA               	clrf	fsr2h,c
 28517   006B00  0E02               	movlw	high _pulseDelays
 28518   006B02  22DA               	addwfc	fsr2h,f,c
 28519   006B04  06DF               	decf	indf2,f,c
 28520                           
 28521                           ;../digitalOut.c: 202:                 if (pulseDelays[io] == 1) {
 28522   006B06  0EA4               	movlw	low _pulseDelays
 28523   006B08  25CD               	addwf	processOutputs@io& (0+255),w,b
 28524   006B0A  6ED9               	movwf	fsr2l,c
 28525   006B0C  6ADA               	clrf	fsr2h,c
 28526   006B0E  0E02               	movlw	high _pulseDelays
 28527   006B10  22DA               	addwfc	fsr2h,f,c
 28528   006B12  04DE               	decf	postinc2,w,c
 28529   006B14  A4D8               	btfss	status,2,c
 28530   006B16  D032               	goto	l281
 28531                           
 28532                           ; BSR set to: 1
 28533                           ;../digitalOut.c: 204:                     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 28534   006B18  51CD               	movf	processOutputs@io& (0+255),w,b
 28535   006B1A  0D07               	mullw	7
 28536   006B1C  50F3               	movf	243,w,c
 28537   006B1E  0F11               	addlw	17
 28538   006B20  ECD9  F05D         	call	_getNV
 28539   006B24  0100               	movlb	0	; () banked
 28540   006B26  AB8D               	btfss	?_getNV& (0+255),5,b
 28541   006B28  D007               	goto	l22886
 28542                           
 28543                           ; BSR set to: 0
 28544                           ;../digitalOut.c: 205:                         setOutputPin(io, TRUE);
 28545   006B2A  0E01               	movlw	1
 28546   006B2C  6F91               	movwf	setOutputPin@state& (0+255),b
 28547   006B2E  0101               	movlb	1	; () banked
 28548   006B30  51CD               	movf	processOutputs@io& (0+255),w,b
 28549   006B32  ECA5  F036         	call	_setOutputPin
 28550                           
 28551                           ;../digitalOut.c: 206:                     } else {
 28552   006B36  D006               	goto	l22888
 28553   006B38                     l22886:
 28554                           
 28555                           ; BSR set to: 0
 28556                           ;../digitalOut.c: 207:                         setOutputPin(io, FALSE);
 28557   006B38  0E00               	movlw	0
 28558   006B3A  6F91               	movwf	setOutputPin@state& (0+255),b
 28559   006B3C  0101               	movlb	1	; () banked
 28560   006B3E  51CD               	movf	processOutputs@io& (0+255),w,b
 28561   006B40  ECA5  F036         	call	_setOutputPin
 28562   006B44                     l22888:
 28563                           
 28564                           ;../digitalOut.c: 210:                     if ( ! (getNV((16 + 7*(io) + 1)) & 0x08)) {
 28565   006B44  0101               	movlb	1	; () banked
 28566   006B46  51CD               	movf	processOutputs@io& (0+255),w,b
 28567   006B48  0D07               	mullw	7
 28568   006B4A  50F3               	movf	243,w,c
 28569   006B4C  0F11               	addlw	17
 28570   006B4E  ECD9  F05D         	call	_getNV
 28571   006B52  0100               	movlb	0	; () banked
 28572   006B54  B78D               	btfsc	?_getNV& (0+255),3,b
 28573   006B56  D012               	goto	l281
 28574                           
 28575                           ; BSR set to: 0
 28576                           ;../digitalOut.c: 212:                         sendProducedEvent(((8 + 4*(io))+0), getNV
      +                          ((16 + 7*(io) + 1)) & 0x40);
 28577   006B58  0101               	movlb	1	; () banked
 28578   006B5A  51CD               	movf	processOutputs@io& (0+255),w,b
 28579   006B5C  0D07               	mullw	7
 28580   006B5E  50F3               	movf	243,w,c
 28581   006B60  0F11               	addlw	17
 28582   006B62  ECD9  F05D         	call	_getNV
 28583   006B66  0100               	movlb	0	; () banked
 28584   006B68  518D               	movf	?_getNV& (0+255),w,b
 28585   006B6A  0B40               	andlw	64
 28586   006B6C  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 28587   006B6E  0101               	movlb	1	; () banked
 28588   006B70  51CD               	movf	processOutputs@io& (0+255),w,b
 28589   006B72  0D04               	mullw	4
 28590   006B74  50F3               	movf	243,w,c
 28591   006B76  0F08               	addlw	8
 28592   006B78  ECC2  F04A         	call	_sendProducedEvent
 28593   006B7C                     l281:
 28594                           
 28595                           ;../digitalOut.c: 217:     }
 28596                           
 28597                           ; BSR set to: 0
 28598   006B7C  0101               	movlb	1	; () banked
 28599   006B7E  2BCD               	incf	processOutputs@io& (0+255),f,b
 28600                           
 28601                           ; BSR set to: 1
 28602   006B80  0E0F               	movlw	15
 28603   006B82  65CD               	cpfsgt	processOutputs@io& (0+255),b
 28604   006B84  D71B               	goto	l22856
 28605   006B86  0012               	return	
 28606   006B88                     __end_of_processOutputs:
 28607                           	callstack 0
 28608                           
 28609 ;; *************** function _processActions *****************
 28610 ;; Defined at:
 28611 ;;		line 233 in file "../universalEvents.c"
 28612 ;; Parameters:    Size  Location     Type
 28613 ;;		None
 28614 ;; Auto vars:     Size  Location     Type
 28615 ;;  nextAction      1   43[BANK1 ] unsigned char 
 28616 ;;  nextIo          1   40[BANK1 ] unsigned char 
 28617 ;;  nextType        1   39[BANK1 ] unsigned char 
 28618 ;;  action          1   45[BANK1 ] unsigned char 
 28619 ;;  io              1   44[BANK1 ] unsigned char 
 28620 ;;  ioAction        1   42[BANK1 ] unsigned char 
 28621 ;;  type            1   41[BANK1 ] unsigned char 
 28622 ;;  peekItem        1   38[BANK1 ] unsigned char 
 28623 ;;  simultaneous    1   37[BANK1 ] unsigned char 
 28624 ;; Return value:  Size  Location     Type
 28625 ;;                  1    wreg      void 
 28626 ;; Registers used:
 28627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 28628 ;; Tracked objects:
 28629 ;;		On entry : 0/0
 28630 ;;		On exit  : 0/0
 28631 ;;		Unchanged: 0/0
 28632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28634 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28636 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28637 ;;Total ram usage:        9 bytes
 28638 ;; Hardware stack levels used: 1
 28639 ;; Hardware stack levels required when called: 21
 28640 ;; This function calls:
 28641 ;;		___awdiv
 28642 ;;		___awmod
 28643 ;;		_completed
 28644 ;;		_deleteTwoActionQueue
 28645 ;;		_doSOD
 28646 ;;		_doWait
 28647 ;;		_doneTwoAction
 28648 ;;		_finaliseOutput
 28649 ;;		_getNV
 28650 ;;		_getTwoAction
 28651 ;;		_needsStarting
 28652 ;;		_peekTwoActionQueue
 28653 ;;		_setOutputState
 28654 ;;		_startOutput
 28655 ;; This function is called by:
 28656 ;;		_loop
 28657 ;; This function uses a non-reentrant model
 28658 ;;
 28659                           
 28660                           	psect	text103
 28661   0061A6                     __ptext103:
 28662                           	callstack 0
 28663   0061A6                     _processActions:
 28664                           	callstack 8
 28665                           
 28666                           ;../universalEvents.c: 242:         action = getTwoAction();
 28667                           
 28668                           ; BSR set to: 1
 28669                           ;incstack = 0
 28670                           ;../universalEvents.c: 234:     uint8_t io;;../universalEvents.c: 235:     uint8_t type;
      +                          ;../universalEvents.c: 236:     uint8_t action;;../universalEvents.c: 237:     uint8_t i
      +                          oAction;;../universalEvents.c: 238:     uint8_t simultaneous;;../universalEvents.c: 239:
      +                               uint8_t peekItem;;../universalEvents.c: 241:     while (1) {
 28671   0061A6  EC83  F062         	call	_getTwoAction	;wreg free
 28672   0061AA  0101               	movlb	1	; () banked
 28673   0061AC  6FE7               	movwf	processActions@action& (0+255),b
 28674                           
 28675                           ; BSR set to: 1
 28676                           ;../universalEvents.c: 244:         if (action == 0) {
 28677   0061AE  51E7               	movf	processActions@action& (0+255),w,b
 28678   0061B0  A4D8               	btfss	status,2,c
 28679   0061B2  D003               	goto	l22758
 28680   0061B4                     u24090:
 28681                           
 28682                           ;../universalEvents.c: 245:             doneTwoAction();
 28683   0061B4  EC94  F062         	call	_doneTwoAction	;wreg free
 28684   0061B8  0012               	return	
 28685   0061BA                     l22758:
 28686                           
 28687                           ; BSR set to: 1
 28688                           ;../universalEvents.c: 249:         if (action == 1) {
 28689   0061BA  05E7               	decf	processActions@action& (0+255),w,b
 28690   0061BC  A4D8               	btfss	status,2,c
 28691   0061BE  D003               	goto	l22766
 28692                           
 28693                           ; BSR set to: 1
 28694                           ;../universalEvents.c: 251:             doSOD();
 28695   0061C0  ECFE  F061         	call	_doSOD	;wreg free
 28696   0061C4  D7F7               	goto	u24090
 28697   0061C6                     l22766:
 28698                           
 28699                           ; BSR set to: 1
 28700                           ;../universalEvents.c: 255:         if (action == 2) {
 28701   0061C6  0E02               	movlw	2
 28702   0061C8  19E7               	xorwf	processActions@action& (0+255),w,b
 28703   0061CA  A4D8               	btfss	status,2,c
 28704   0061CC  D008               	goto	l22772
 28705                           
 28706                           ; BSR set to: 1
 28707                           ;../universalEvents.c: 256:             doWait(5);
 28708   0061CE  0E00               	movlw	0
 28709   0061D0  0100               	movlb	0	; () banked
 28710   0061D2  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28711   0061D4  0E05               	movlw	5
 28712   0061D6  6F9D               	movwf	doWait@duration& (0+255),b
 28713   0061D8  EC18  F052         	call	_doWait	;wreg free
 28714   0061DC  0012               	return	
 28715   0061DE                     l22772:
 28716                           
 28717                           ; BSR set to: 1
 28718                           ;../universalEvents.c: 259:         if (action == 3) {
 28719   0061DE  0E03               	movlw	3
 28720   0061E0  19E7               	xorwf	processActions@action& (0+255),w,b
 28721   0061E2  A4D8               	btfss	status,2,c
 28722   0061E4  D008               	goto	l22778
 28723                           
 28724                           ; BSR set to: 1
 28725                           ;../universalEvents.c: 260:             doWait(10);
 28726   0061E6  0E00               	movlw	0
 28727   0061E8  0100               	movlb	0	; () banked
 28728   0061EA  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28729   0061EC  0E0A               	movlw	10
 28730   0061EE  6F9D               	movwf	doWait@duration& (0+255),b
 28731   0061F0  EC18  F052         	call	_doWait	;wreg free
 28732   0061F4  0012               	return	
 28733   0061F6                     l22778:
 28734                           
 28735                           ; BSR set to: 1
 28736                           ;../universalEvents.c: 263:         if (action == 4) {
 28737   0061F6  0E04               	movlw	4
 28738   0061F8  19E7               	xorwf	processActions@action& (0+255),w,b
 28739   0061FA  A4D8               	btfss	status,2,c
 28740   0061FC  D008               	goto	l22784
 28741                           
 28742                           ; BSR set to: 1
 28743                           ;../universalEvents.c: 264:             doWait(20);
 28744   0061FE  0E00               	movlw	0
 28745   006200  0100               	movlb	0	; () banked
 28746   006202  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28747   006204  0E14               	movlw	20
 28748   006206  6F9D               	movwf	doWait@duration& (0+255),b
 28749   006208  EC18  F052         	call	_doWait	;wreg free
 28750   00620C  0012               	return	
 28751   00620E                     l22784:
 28752                           
 28753                           ; BSR set to: 1
 28754                           ;../universalEvents.c: 267:         if (action == 5) {
 28755   00620E  0E05               	movlw	5
 28756   006210  19E7               	xorwf	processActions@action& (0+255),w,b
 28757   006212  A4D8               	btfss	status,2,c
 28758   006214  D008               	goto	l22790
 28759                           
 28760                           ; BSR set to: 1
 28761                           ;../universalEvents.c: 268:             doWait(50);
 28762   006216  0E00               	movlw	0
 28763   006218  0100               	movlb	0	; () banked
 28764   00621A  6F9E               	movwf	(doWait@duration+1)& (0+255),b
 28765   00621C  0E32               	movlw	50
 28766   00621E  6F9D               	movwf	doWait@duration& (0+255),b
 28767   006220  EC18  F052         	call	_doWait	;wreg free
 28768   006224  0012               	return	
 28769   006226                     l22790:
 28770                           
 28771                           ; BSR set to: 1
 28772                           ;../universalEvents.c: 271:         simultaneous = action & 0x80;
 28773   006226  51E7               	movf	processActions@action& (0+255),w,b
 28774   006228  0B80               	andlw	128
 28775   00622A  6FDF               	movwf	processActions@simultaneous& (0+255),b
 28776                           
 28777                           ;../universalEvents.c: 272:         ioAction = action&0x7F;
 28778   00622C  51E7               	movf	processActions@action& (0+255),w,b
 28779   00622E  0B7F               	andlw	127
 28780   006230  6FE4               	movwf	processActions@ioAction& (0+255),b
 28781                           
 28782                           ;../universalEvents.c: 273:         if ((ioAction >= 8) && (ioAction < (8 + 5 * 16))) {
 28783   006232  0E07               	movlw	7
 28784   006234  65E4               	cpfsgt	processActions@ioAction& (0+255),b
 28785   006236  D0D0               	goto	l22848
 28786                           
 28787                           ; BSR set to: 1
 28788   006238  0E58               	movlw	88
 28789   00623A  61E4               	cpfslt	processActions@ioAction& (0+255),b
 28790   00623C  D0CD               	goto	l22848
 28791                           
 28792                           ; BSR set to: 1
 28793                           ;../universalEvents.c: 276:             io = (((ioAction)-8)/5);
 28794   00623E  0EF8               	movlw	248
 28795   006240  25E4               	addwf	processActions@ioAction& (0+255),w,b
 28796   006242  0100               	movlb	0	; () banked
 28797   006244  6F97               	movwf	___awdiv@dividend& (0+255),b
 28798   006246  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28799   006248  0EFF               	movlw	255
 28800   00624A  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 28801   00624C  0E00               	movlw	0
 28802   00624E  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28803   006250  0E05               	movlw	5
 28804   006252  6F99               	movwf	___awdiv@divisor& (0+255),b
 28805   006254  ECA3  F052         	call	___awdiv	;wreg free
 28806   006258  0100               	movlb	0	; () banked
 28807   00625A  5197               	movf	?___awdiv& (0+255),w,b
 28808   00625C  0101               	movlb	1	; () banked
 28809   00625E  6FE6               	movwf	processActions@io& (0+255),b
 28810                           
 28811                           ;../universalEvents.c: 277:             ioAction = (((ioAction)-8)%5);
 28812   006260  0EF8               	movlw	248
 28813   006262  25E4               	addwf	processActions@ioAction& (0+255),w,b
 28814   006264  0100               	movlb	0	; () banked
 28815   006266  6F8D               	movwf	___awmod@dividend& (0+255),b
 28816   006268  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 28817   00626A  0EFF               	movlw	255
 28818   00626C  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 28819   00626E  0E00               	movlw	0
 28820   006270  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 28821   006272  0E05               	movlw	5
 28822   006274  6F8F               	movwf	___awmod@divisor& (0+255),b
 28823   006276  ECB8  F056         	call	___awmod	;wreg free
 28824   00627A  0100               	movlb	0	; () banked
 28825   00627C  518D               	movf	?___awmod& (0+255),w,b
 28826   00627E  0101               	movlb	1	; () banked
 28827   006280  6FE4               	movwf	processActions@ioAction& (0+255),b
 28828                           
 28829                           ; BSR set to: 1
 28830                           ;../universalEvents.c: 278:             type = (uint8_t)getNV((16 + 7*(io) + 0));
 28831   006282  51E6               	movf	processActions@io& (0+255),w,b
 28832   006284  0D07               	mullw	7
 28833   006286  50F3               	movf	243,w,c
 28834   006288  0F10               	addlw	16
 28835   00628A  ECD9  F05D         	call	_getNV
 28836   00628E  0100               	movlb	0	; () banked
 28837   006290  518D               	movf	?_getNV& (0+255),w,b
 28838   006292  0101               	movlb	1	; () banked
 28839   006294  6FE3               	movwf	processActions@type& (0+255),b
 28840                           
 28841                           ; BSR set to: 1
 28842                           ;../universalEvents.c: 280:             setOutputState(io, ioAction, type);
 28843   006296  C1E4  F093         	movff	processActions@ioAction,setOutputState@act
 28844   00629A  C1E3  F094         	movff	processActions@type,setOutputState@type
 28845   00629E  51E6               	movf	processActions@io& (0+255),w,b
 28846   0062A0  ECEF  F05A         	call	_setOutputState
 28847                           
 28848                           ;../universalEvents.c: 281:             if (needsStarting(io, ioAction, type)) {
 28849   0062A4  C1E4  F08D         	movff	processActions@ioAction,needsStarting@act
 28850   0062A8  C1E3  F08E         	movff	processActions@type,needsStarting@type
 28851   0062AC  0101               	movlb	1	; () banked
 28852   0062AE  51E6               	movf	processActions@io& (0+255),w,b
 28853   0062B0  EC6B  F053         	call	_needsStarting
 28854   0062B4  0900               	iorlw	0
 28855   0062B6  B4D8               	btfsc	status,2,c
 28856   0062B8  D008               	goto	l22804
 28857                           
 28858                           ;../universalEvents.c: 282:                 startOutput(io, ioAction, type);
 28859   0062BA  C1E4  F1DC         	movff	processActions@ioAction,startOutput@act
 28860   0062BE  C1E3  F1DD         	movff	processActions@type,startOutput@type
 28861   0062C2  0101               	movlb	1	; () banked
 28862   0062C4  51E6               	movf	processActions@io& (0+255),w,b
 28863   0062C6  ECE5  F059         	call	_startOutput
 28864   0062CA                     l22804:
 28865                           
 28866                           ;../universalEvents.c: 285:             peekItem = 1;
 28867   0062CA  0E01               	movlw	1
 28868   0062CC  0101               	movlb	1	; () banked
 28869   0062CE  6FE0               	movwf	processActions@peekItem& (0+255),b
 28870                           
 28871                           ;../universalEvents.c: 286:             while (simultaneous) {
 28872   0062D0  D06D               	goto	l22840
 28873   0062D2                     l22806:
 28874                           
 28875                           ; BSR set to: 1
 28876                           ;../universalEvents.c: 287:                 uint8_t nextAction;;../universalEvents.c: 28
      +                          8:                 uint8_t nextIo;;../universalEvents.c: 289:                 uint8_t ne
      +                          xtType;;../universalEvents.c: 291:                 nextAction = peekTwoActionQueue(peekI
      +                          tem);
 28877   0062D2  51E0               	movf	processActions@peekItem& (0+255),w,b
 28878   0062D4  EC5E  F052         	call	_peekTwoActionQueue
 28879   0062D8  0101               	movlb	1	; () banked
 28880   0062DA  6FE5               	movwf	processActions@nextAction& (0+255),b
 28881                           
 28882                           ; BSR set to: 1
 28883                           ;../universalEvents.c: 293:                 if (nextAction == 0) break;
 28884   0062DC  51E5               	movf	processActions@nextAction& (0+255),w,b
 28885   0062DE  B4D8               	btfsc	status,2,c
 28886   0062E0  D068               	goto	u24220
 28887                           
 28888                           ; BSR set to: 1
 28889                           ;../universalEvents.c: 294:                 simultaneous = nextAction & 0x80;
 28890   0062E2  51E5               	movf	processActions@nextAction& (0+255),w,b
 28891   0062E4  0B80               	andlw	128
 28892   0062E6  6FDF               	movwf	processActions@simultaneous& (0+255),b
 28893                           
 28894                           ; BSR set to: 1
 28895                           ;../universalEvents.c: 295:                 nextAction &= 0x7F;
 28896   0062E8  9FE5               	bcf	processActions@nextAction& (0+255),7,b
 28897                           
 28898                           ; BSR set to: 1
 28899                           ;../universalEvents.c: 296:                 nextIo = (((nextAction)-8)/5);
 28900   0062EA  0EF8               	movlw	248
 28901   0062EC  25E5               	addwf	processActions@nextAction& (0+255),w,b
 28902   0062EE  0100               	movlb	0	; () banked
 28903   0062F0  6F97               	movwf	___awdiv@dividend& (0+255),b
 28904   0062F2  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 28905   0062F4  0EFF               	movlw	255
 28906   0062F6  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 28907   0062F8  0E00               	movlw	0
 28908   0062FA  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 28909   0062FC  0E05               	movlw	5
 28910   0062FE  6F99               	movwf	___awdiv@divisor& (0+255),b
 28911   006300  ECA3  F052         	call	___awdiv	;wreg free
 28912   006304  0100               	movlb	0	; () banked
 28913   006306  5197               	movf	?___awdiv& (0+255),w,b
 28914   006308  0101               	movlb	1	; () banked
 28915   00630A  6FE2               	movwf	processActions@nextIo& (0+255),b
 28916                           
 28917                           ; BSR set to: 1
 28918                           ;../universalEvents.c: 297:                 if (nextIo == io) {
 28919   00630C  51E6               	movf	processActions@io& (0+255),w,b
 28920   00630E  19E2               	xorwf	processActions@nextIo& (0+255),w,b
 28921   006310  B4D8               	btfsc	status,2,c
 28922   006312  D04F               	goto	u24220
 28923                           
 28924                           ; BSR set to: 1
 28925                           ;../universalEvents.c: 303:                 nextAction = (((nextAction)-8)%5);
 28926   006314  0EF8               	movlw	248
 28927   006316  25E5               	addwf	processActions@nextAction& (0+255),w,b
 28928   006318  0100               	movlb	0	; () banked
 28929   00631A  6F8D               	movwf	___awmod@dividend& (0+255),b
 28930   00631C  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 28931   00631E  0EFF               	movlw	255
 28932   006320  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 28933   006322  0E00               	movlw	0
 28934   006324  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 28935   006326  0E05               	movlw	5
 28936   006328  6F8F               	movwf	___awmod@divisor& (0+255),b
 28937   00632A  ECB8  F056         	call	___awmod	;wreg free
 28938   00632E  0100               	movlb	0	; () banked
 28939   006330  518D               	movf	?___awmod& (0+255),w,b
 28940   006332  0101               	movlb	1	; () banked
 28941   006334  6FE5               	movwf	processActions@nextAction& (0+255),b
 28942                           
 28943                           ; BSR set to: 1
 28944                           ;../universalEvents.c: 304:                 nextType = (uint8_t)getNV((16 + 7*(io) + 0))
      +                          ;
 28945   006336  51E6               	movf	processActions@io& (0+255),w,b
 28946   006338  0D07               	mullw	7
 28947   00633A  50F3               	movf	243,w,c
 28948   00633C  0F10               	addlw	16
 28949   00633E  ECD9  F05D         	call	_getNV
 28950   006342  0100               	movlb	0	; () banked
 28951   006344  518D               	movf	?_getNV& (0+255),w,b
 28952   006346  0101               	movlb	1	; () banked
 28953   006348  6FE1               	movwf	processActions@nextType& (0+255),b
 28954                           
 28955                           ; BSR set to: 1
 28956                           ;../universalEvents.c: 305:                 setOutputState(nextIo, nextAction, nextType)
      +                          ;
 28957   00634A  C1E5  F093         	movff	processActions@nextAction,setOutputState@act
 28958   00634E  C1E1  F094         	movff	processActions@nextType,setOutputState@type
 28959   006352  51E2               	movf	processActions@nextIo& (0+255),w,b
 28960   006354  ECEF  F05A         	call	_setOutputState
 28961                           
 28962                           ;../universalEvents.c: 306:                 if (needsStarting(nextIo, nextAction, nextTy
      +                          pe)) {
 28963   006358  C1E5  F08D         	movff	processActions@nextAction,needsStarting@act
 28964   00635C  C1E1  F08E         	movff	processActions@nextType,needsStarting@type
 28965   006360  0101               	movlb	1	; () banked
 28966   006362  51E2               	movf	processActions@nextIo& (0+255),w,b
 28967   006364  EC6B  F053         	call	_needsStarting
 28968   006368  0900               	iorlw	0
 28969   00636A  B4D8               	btfsc	status,2,c
 28970   00636C  D008               	goto	l22832
 28971                           
 28972                           ;../universalEvents.c: 307:                     startOutput(nextIo, nextAction, nextType
      +                          );
 28973   00636E  C1E5  F1DC         	movff	processActions@nextAction,startOutput@act
 28974   006372  C1E1  F1DD         	movff	processActions@nextType,startOutput@type
 28975   006376  0101               	movlb	1	; () banked
 28976   006378  51E2               	movf	processActions@nextIo& (0+255),w,b
 28977   00637A  ECE5  F059         	call	_startOutput
 28978   00637E                     l22832:
 28979                           
 28980                           ;../universalEvents.c: 309:                 if (completed(nextIo, nextAction, nextType))
      +                           {
 28981   00637E  C1E5  F08D         	movff	processActions@nextAction,completed@action
 28982   006382  C1E1  F08E         	movff	processActions@nextType,completed@type
 28983   006386  0101               	movlb	1	; () banked
 28984   006388  51E2               	movf	processActions@nextIo& (0+255),w,b
 28985   00638A  EC1D  F050         	call	_completed
 28986   00638E  0900               	iorlw	0
 28987   006390  B4D8               	btfsc	status,2,c
 28988   006392  D00A               	goto	l22838
 28989                           
 28990                           ;../universalEvents.c: 310:                     deleteTwoActionQueue(peekItem);
 28991   006394  0101               	movlb	1	; () banked
 28992   006396  51E0               	movf	processActions@peekItem& (0+255),w,b
 28993   006398  ECEB  F053         	call	_deleteTwoActionQueue
 28994                           
 28995                           ;../universalEvents.c: 311:                     finaliseOutput(io, type);
 28996   00639C  C1E3  F08D         	movff	processActions@type,finaliseOutput@type
 28997   0063A0  0101               	movlb	1	; () banked
 28998   0063A2  51E6               	movf	processActions@io& (0+255),w,b
 28999   0063A4  EC87  F062         	call	_finaliseOutput
 29000   0063A8                     l22838:
 29001                           
 29002                           ;../universalEvents.c: 313:                 peekItem++;
 29003   0063A8  0101               	movlb	1	; () banked
 29004   0063AA  2BE0               	incf	processActions@peekItem& (0+255),f,b
 29005   0063AC                     l22840:
 29006                           
 29007                           ; BSR set to: 1
 29008                           ;../universalEvents.c: 286:             while (simultaneous) {
 29009   0063AC  51DF               	movf	processActions@simultaneous& (0+255),w,b
 29010   0063AE  A4D8               	btfss	status,2,c
 29011   0063B0  D790               	goto	l22806
 29012   0063B2                     u24220:
 29013                           
 29014                           ; BSR set to: 1
 29015                           ;../universalEvents.c: 316:             if (completed(io, action, type)) {
 29016   0063B2  C1E7  F08D         	movff	processActions@action,completed@action
 29017   0063B6  C1E3  F08E         	movff	processActions@type,completed@type
 29018   0063BA  51E6               	movf	processActions@io& (0+255),w,b
 29019   0063BC  EC1D  F050         	call	_completed
 29020   0063C0  0900               	iorlw	0
 29021   0063C2  B4D8               	btfsc	status,2,c
 29022   0063C4  0012               	return	
 29023                           
 29024                           ;../universalEvents.c: 317:                 doneTwoAction();
 29025   0063C6  EC94  F062         	call	_doneTwoAction	;wreg free
 29026                           
 29027                           ;../universalEvents.c: 318:                 finaliseOutput(io, type);
 29028   0063CA  C1E3  F08D         	movff	processActions@type,finaliseOutput@type
 29029   0063CE  0101               	movlb	1	; () banked
 29030   0063D0  51E6               	movf	processActions@io& (0+255),w,b
 29031   0063D2  EC87  F062         	call	_finaliseOutput
 29032                           
 29033                           ;../universalEvents.c: 319:             } else {
 29034   0063D6  D6E7               	goto	__ptext103
 29035   0063D8                     l22848:
 29036                           
 29037                           ; BSR set to: 1
 29038                           ;../universalEvents.c: 327:             doneTwoAction();
 29039   0063D8  EC94  F062         	call	_doneTwoAction	;wreg free
 29040   0063DC  D6E4               	goto	__ptext103
 29041   0063DE                     __end_of_processActions:
 29042                           	callstack 0
 29043                           
 29044 ;; *************** function _startOutput *****************
 29045 ;; Defined at:
 29046 ;;		line 72 in file "../outputs.c"
 29047 ;; Parameters:    Size  Location     Type
 29048 ;;  io              1    wreg     unsigned char 
 29049 ;;  act             1   34[BANK1 ] unsigned char 
 29050 ;;  type            1   35[BANK1 ] unsigned char 
 29051 ;; Auto vars:     Size  Location     Type
 29052 ;;  io              1   36[BANK1 ] unsigned char 
 29053 ;; Return value:  Size  Location     Type
 29054 ;;                  1    wreg      void 
 29055 ;; Registers used:
 29056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29057 ;; Tracked objects:
 29058 ;;		On entry : 0/0
 29059 ;;		On exit  : 0/0
 29060 ;;		Unchanged: 0/0
 29061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29062 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29063 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29065 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29066 ;;Total ram usage:        3 bytes
 29067 ;; Hardware stack levels used: 1
 29068 ;; Hardware stack levels required when called: 20
 29069 ;; This function calls:
 29070 ;;		_startBounceOutput
 29071 ;;		_startDigitalOutput
 29072 ;;		_startMultiOutput
 29073 ;;		_startServoOutput
 29074 ;; This function is called by:
 29075 ;;		_processActions
 29076 ;; This function uses a non-reentrant model
 29077 ;;
 29078                           
 29079                           	psect	text104
 29080   00B3CA                     __ptext104:
 29081                           	callstack 0
 29082   00B3CA                     _startOutput:
 29083                           	callstack 8
 29084                           
 29085                           ;incstack = 0
 29086                           ;startOutput@io stored from wreg
 29087   00B3CA  0101               	movlb	1	; () banked
 29088   00B3CC  6FDE               	movwf	startOutput@io& (0+255),b
 29089                           
 29090                           ;../outputs.c: 73:     switch(type) {
 29091   00B3CE  D018               	goto	l21412
 29092   00B3D0                     l21394:
 29093                           
 29094                           ; BSR set to: 1
 29095                           ;../outputs.c: 78:             startDigitalOutput(io, act);
 29096   00B3D0  C1DC  F1D4         	movff	startOutput@act,startDigitalOutput@state
 29097   00B3D4  51DE               	movf	startOutput@io& (0+255),w,b
 29098   00B3D6  EC82  F02A         	call	_startDigitalOutput
 29099   00B3DA  0012               	return	
 29100   00B3DC                     l21398:
 29101                           
 29102                           ; BSR set to: 1
 29103                           ;../outputs.c: 82:             startBounceOutput(io, act);
 29104   00B3DC  C1DC  F08D         	movff	startOutput@act,startBounceOutput@action
 29105   00B3E0  51DE               	movf	startOutput@io& (0+255),w,b
 29106   00B3E2  EC30  F058         	call	_startBounceOutput
 29107   00B3E6  0012               	return	
 29108   00B3E8                     l21402:
 29109                           
 29110                           ; BSR set to: 1
 29111                           ;../outputs.c: 87:             startServoOutput(io, act);
 29112   00B3E8  C1DC  F091         	movff	startOutput@act,startServoOutput@action
 29113   00B3EC  51DE               	movf	startOutput@io& (0+255),w,b
 29114   00B3EE  ECE4  F048         	call	_startServoOutput
 29115   00B3F2  0012               	return	
 29116   00B3F4                     l21406:
 29117                           
 29118                           ; BSR set to: 1
 29119                           ;../outputs.c: 92:             startMultiOutput(io, act);
 29120   00B3F4  C1DC  F091         	movff	startOutput@act,startMultiOutput@action
 29121   00B3F8  51DE               	movf	startOutput@io& (0+255),w,b
 29122   00B3FA  EC72  F04D         	call	_startMultiOutput
 29123   00B3FE  0012               	return	
 29124   00B400                     l21412:
 29125   00B400  0101               	movlb	1	; () banked
 29126   00B402  51DD               	movf	startOutput@type& (0+255),w,b
 29127                           
 29128                           ; Switch size 1, requested type "simple"
 29129                           ; Number of cases is 5, Range of values is 0 to 4
 29130                           ; switch strategies available:
 29131                           ; Name         Instructions Cycles
 29132                           ; simple_byte           16     9 (average)
 29133                           ;	Chosen strategy is simple_byte
 29134   00B404  0A00               	xorlw	0	; case 0
 29135   00B406  B4D8               	btfsc	status,2,c
 29136   00B408  0012               	return	
 29137   00B40A  0A01               	xorlw	1	; case 1
 29138   00B40C  B4D8               	btfsc	status,2,c
 29139   00B40E  D7E0               	goto	l21394
 29140   00B410  0A03               	xorlw	3	; case 2
 29141   00B412  B4D8               	btfsc	status,2,c
 29142   00B414  D7E9               	goto	l21402
 29143   00B416  0A01               	xorlw	1	; case 3
 29144   00B418  B4D8               	btfsc	status,2,c
 29145   00B41A  D7E0               	goto	l21398
 29146   00B41C  0A07               	xorlw	7	; case 4
 29147   00B41E  A4D8               	btfss	status,2,c
 29148   00B420  0012               	return	
 29149   00B422  D7E8               	goto	l21406
 29150   00B424                     __end_of_startOutput:
 29151                           	callstack 0
 29152                           
 29153 ;; *************** function _startServoOutput *****************
 29154 ;; Defined at:
 29155 ;;		line 538 in file "../servo.c"
 29156 ;; Parameters:    Size  Location     Type
 29157 ;;  io              1    wreg     unsigned char 
 29158 ;;  action          1   49[BANK0 ] unsigned char 
 29159 ;; Auto vars:     Size  Location     Type
 29160 ;;  io              1   51[BANK0 ] unsigned char 
 29161 ;; Return value:  Size  Location     Type
 29162 ;;                  1    wreg      void 
 29163 ;; Registers used:
 29164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29165 ;; Tracked objects:
 29166 ;;		On entry : 0/0
 29167 ;;		On exit  : 0/0
 29168 ;;		Unchanged: 0/0
 29169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29170 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29171 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29172 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29173 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29174 ;;Total ram usage:        3 bytes
 29175 ;; Hardware stack levels used: 1
 29176 ;; Hardware stack levels required when called: 13
 29177 ;; This function calls:
 29178 ;;		_getNV
 29179 ;; This function is called by:
 29180 ;;		_APP_nvValueChanged
 29181 ;;		_startOutput
 29182 ;; This function uses a non-reentrant model
 29183 ;;
 29184                           
 29185                           	psect	text105
 29186   0091C8                     __ptext105:
 29187                           	callstack 0
 29188   0091C8                     _startServoOutput:
 29189                           	callstack 13
 29190                           
 29191                           ;incstack = 0
 29192                           ;startServoOutput@io stored from wreg
 29193   0091C8  0100               	movlb	0	; () banked
 29194   0091CA  6F93               	movwf	startServoOutput@io& (0+255),b
 29195                           
 29196                           ;../servo.c: 539:     switch (action) {
 29197   0091CC  D017               	goto	l19990
 29198   0091CE                     l19984:
 29199                           
 29200                           ; BSR set to: 0
 29201                           ;../servo.c: 541:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 29202   0091CE  5193               	movf	startServoOutput@io& (0+255),w,b
 29203   0091D0  0D07               	mullw	7
 29204   0091D2  50F3               	movf	243,w,c
 29205   0091D4  0F15               	addlw	21
 29206   0091D6  ECD9  F05D         	call	_getNV
 29207   0091DA  D006               	goto	L8
 29208   0091DC                     l19986:
 29209                           
 29210                           ; BSR set to: 0
 29211                           ;../servo.c: 544:             stepsPerPollSpeed[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 29212   0091DC  5193               	movf	startServoOutput@io& (0+255),w,b
 29213   0091DE  0D07               	mullw	7
 29214   0091E0  50F3               	movf	243,w,c
 29215   0091E2  0F14               	addlw	20
 29216   0091E4  ECD9  F05D         	call	_getNV
 29217   0091E8                     L8:
 29218   0091E8  0E00               	movlw	low _stepsPerPollSpeed
 29219   0091EA  0100               	movlb	0	; () banked
 29220   0091EC  2593               	addwf	startServoOutput@io& (0+255),w,b
 29221   0091EE  6ED9               	movwf	fsr2l,c
 29222   0091F0  6ADA               	clrf	fsr2h,c
 29223   0091F2  0E01               	movlw	high _stepsPerPollSpeed
 29224   0091F4  22DA               	addwfc	fsr2h,f,c
 29225   0091F6  C08D  FFDF         	movff	?_getNV,indf2
 29226                           
 29227                           ;../servo.c: 545:             break;
 29228   0091FA  D008               	goto	l19992
 29229   0091FC                     l19990:
 29230   0091FC  0100               	movlb	0	; () banked
 29231   0091FE  5191               	movf	startServoOutput@action& (0+255),w,b
 29232                           
 29233                           ; Switch size 1, requested type "simple"
 29234                           ; Number of cases is 2, Range of values is 1 to 2
 29235                           ; switch strategies available:
 29236                           ; Name         Instructions Cycles
 29237                           ; simple_byte            7     4 (average)
 29238                           ;	Chosen strategy is simple_byte
 29239   009200  0A01               	xorlw	1	; case 1
 29240   009202  B4D8               	btfsc	status,2,c
 29241   009204  D7EB               	goto	l19986
 29242   009206  0A03               	xorlw	3	; case 2
 29243   009208  B4D8               	btfsc	status,2,c
 29244   00920A  D7E1               	goto	l19984
 29245   00920C                     l19992:
 29246                           
 29247                           ; BSR set to: 0
 29248                           ;../servo.c: 547:     if (stepsPerPollSpeed[io] > 234) {
 29249   00920C  0E00               	movlw	low _stepsPerPollSpeed
 29250   00920E  2593               	addwf	startServoOutput@io& (0+255),w,b
 29251   009210  6ED9               	movwf	fsr2l,c
 29252   009212  6ADA               	clrf	fsr2h,c
 29253   009214  0E01               	movlw	high _stepsPerPollSpeed
 29254   009216  22DA               	addwfc	fsr2h,f,c
 29255   009218  0EEA               	movlw	234
 29256   00921A  64DF               	cpfsgt	indf2,c
 29257   00921C  D00E               	goto	l19996
 29258                           
 29259                           ; BSR set to: 0
 29260                           ;../servo.c: 548:         stepsPerPollSpeed[io] -= 234;
 29261   00921E  0E00               	movlw	low _stepsPerPollSpeed
 29262   009220  2593               	addwf	startServoOutput@io& (0+255),w,b
 29263   009222  6ED9               	movwf	fsr2l,c
 29264   009224  6ADA               	clrf	fsr2h,c
 29265   009226  0E01               	movlw	high _stepsPerPollSpeed
 29266   009228  22DA               	addwfc	fsr2h,f,c
 29267   00922A  0EEA               	movlw	234
 29268   00922C  5EDF               	subwf	indf2,f,c
 29269                           
 29270                           ;../servo.c: 549:         pollsPerStepSpeed[io] = 0;
 29271   00922E  0E74               	movlw	low _pollsPerStepSpeed
 29272   009230  2593               	addwf	startServoOutput@io& (0+255),w,b
 29273   009232  6ED9               	movwf	fsr2l,c
 29274   009234  6ADA               	clrf	fsr2h,c
 29275   009236  0E02               	movlw	high _pollsPerStepSpeed
 29276   009238  D01E               	goto	L9
 29277   00923A                     l19996:
 29278                           
 29279                           ; BSR set to: 0
 29280                           ;../servo.c: 551:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 29281   00923A  0E74               	movlw	low _pollsPerStepSpeed
 29282   00923C  2593               	addwf	startServoOutput@io& (0+255),w,b
 29283   00923E  6ED9               	movwf	fsr2l,c
 29284   009240  6ADA               	clrf	fsr2h,c
 29285   009242  0E02               	movlw	high _pollsPerStepSpeed
 29286   009244  22DA               	addwfc	fsr2h,f,c
 29287   009246  0E00               	movlw	low _stepsPerPollSpeed
 29288   009248  2593               	addwf	startServoOutput@io& (0+255),w,b
 29289   00924A  6EE1               	movwf	fsr1l,c
 29290   00924C  6AE2               	clrf	fsr1h,c
 29291   00924E  0E01               	movlw	high _stepsPerPollSpeed
 29292   009250  22E2               	addwfc	fsr1h,f,c
 29293   009252  50E7               	movf	indf1,w,c
 29294   009254  6F92               	movwf	??_startServoOutput& (0+255),b
 29295   009256  5192               	movf	??_startServoOutput& (0+255),w,b
 29296   009258  08EB               	sublw	235
 29297   00925A  6EDF               	movwf	indf2,c
 29298                           
 29299                           ; BSR set to: 0
 29300                           ;../servo.c: 552:         pollCount[io] = 1;
 29301   00925C  0E64               	movlw	low _pollCount
 29302   00925E  2593               	addwf	startServoOutput@io& (0+255),w,b
 29303   009260  6ED9               	movwf	fsr2l,c
 29304   009262  6ADA               	clrf	fsr2h,c
 29305   009264  0E02               	movlw	high _pollCount
 29306   009266  22DA               	addwfc	fsr2h,f,c
 29307   009268  0E01               	movlw	1
 29308   00926A  6EDF               	movwf	indf2,c
 29309                           
 29310                           ; BSR set to: 0
 29311                           ;../servo.c: 553:         stepsPerPollSpeed[io] = 0;
 29312   00926C  0E00               	movlw	low _stepsPerPollSpeed
 29313   00926E  2593               	addwf	startServoOutput@io& (0+255),w,b
 29314   009270  6ED9               	movwf	fsr2l,c
 29315   009272  6ADA               	clrf	fsr2h,c
 29316   009274  0E01               	movlw	high _stepsPerPollSpeed
 29317   009276                     L9:
 29318   009276  22DA               	addwfc	fsr2h,f,c
 29319   009278  6ADF               	clrf	indf2,c
 29320                           
 29321                           ; BSR set to: 0
 29322                           ;../servo.c: 555:     servoState[io] = SS_STARTING;
 29323   00927A  0E10               	movlw	low _servoState
 29324   00927C  2593               	addwf	startServoOutput@io& (0+255),w,b
 29325   00927E  6ED9               	movwf	fsr2l,c
 29326   009280  6ADA               	clrf	fsr2h,c
 29327   009282  0E01               	movlw	high _servoState
 29328   009284  22DA               	addwfc	fsr2h,f,c
 29329   009286  0E03               	movlw	3
 29330   009288  6EDF               	movwf	indf2,c
 29331                           
 29332                           ; BSR set to: 0
 29333   00928A  0012               	return		;funcret
 29334   00928C                     __end_of_startServoOutput:
 29335                           	callstack 0
 29336                           
 29337 ;; *************** function _startMultiOutput *****************
 29338 ;; Defined at:
 29339 ;;		line 584 in file "../servo.c"
 29340 ;; Parameters:    Size  Location     Type
 29341 ;;  io              1    wreg     unsigned char 
 29342 ;;  action          1   49[BANK0 ] unsigned char 
 29343 ;; Auto vars:     Size  Location     Type
 29344 ;;  io              1   51[BANK0 ] unsigned char 
 29345 ;; Return value:  Size  Location     Type
 29346 ;;                  1    wreg      void 
 29347 ;; Registers used:
 29348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29349 ;; Tracked objects:
 29350 ;;		On entry : 0/0
 29351 ;;		On exit  : 0/0
 29352 ;;		Unchanged: 0/0
 29353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29354 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29357 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29358 ;;Total ram usage:        3 bytes
 29359 ;; Hardware stack levels used: 1
 29360 ;; Hardware stack levels required when called: 13
 29361 ;; This function calls:
 29362 ;;		_getNV
 29363 ;; This function is called by:
 29364 ;;		_APP_nvValueChanged
 29365 ;;		_startOutput
 29366 ;; This function uses a non-reentrant model
 29367 ;;
 29368                           
 29369                           	psect	text106
 29370   009AE4                     __ptext106:
 29371                           	callstack 0
 29372   009AE4                     _startMultiOutput:
 29373                           	callstack 13
 29374                           
 29375                           ; BSR set to: 0
 29376                           ;incstack = 0
 29377                           ;startMultiOutput@io stored from wreg
 29378   009AE4  0100               	movlb	0	; () banked
 29379   009AE6  6F93               	movwf	startMultiOutput@io& (0+255),b
 29380                           
 29381                           ;../servo.c: 586:     stepsPerPollSpeed[io] = (uint8_t)getNV(3);
 29382   009AE8  0E03               	movlw	3
 29383   009AEA  ECD9  F05D         	call	_getNV
 29384   009AEE  0E00               	movlw	low _stepsPerPollSpeed
 29385   009AF0  0100               	movlb	0	; () banked
 29386   009AF2  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29387   009AF4  6ED9               	movwf	fsr2l,c
 29388   009AF6  6ADA               	clrf	fsr2h,c
 29389   009AF8  0E01               	movlw	high _stepsPerPollSpeed
 29390   009AFA  22DA               	addwfc	fsr2h,f,c
 29391   009AFC  C08D  FFDF         	movff	?_getNV,indf2
 29392                           
 29393                           ; BSR set to: 0
 29394                           ;../servo.c: 587:     if (stepsPerPollSpeed[io] > 234) {
 29395   009B00  0E00               	movlw	low _stepsPerPollSpeed
 29396   009B02  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29397   009B04  6ED9               	movwf	fsr2l,c
 29398   009B06  6ADA               	clrf	fsr2h,c
 29399   009B08  0E01               	movlw	high _stepsPerPollSpeed
 29400   009B0A  22DA               	addwfc	fsr2h,f,c
 29401   009B0C  0EEA               	movlw	234
 29402   009B0E  64DF               	cpfsgt	indf2,c
 29403   009B10  D00E               	goto	l20060
 29404                           
 29405                           ; BSR set to: 0
 29406                           ;../servo.c: 588:         stepsPerPollSpeed[io] -= 234;
 29407   009B12  0E00               	movlw	low _stepsPerPollSpeed
 29408   009B14  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29409   009B16  6ED9               	movwf	fsr2l,c
 29410   009B18  6ADA               	clrf	fsr2h,c
 29411   009B1A  0E01               	movlw	high _stepsPerPollSpeed
 29412   009B1C  22DA               	addwfc	fsr2h,f,c
 29413   009B1E  0EEA               	movlw	234
 29414   009B20  5EDF               	subwf	indf2,f,c
 29415                           
 29416                           ;../servo.c: 589:         pollsPerStepSpeed[io] = 0;
 29417   009B22  0E74               	movlw	low _pollsPerStepSpeed
 29418   009B24  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29419   009B26  6ED9               	movwf	fsr2l,c
 29420   009B28  6ADA               	clrf	fsr2h,c
 29421   009B2A  0E02               	movlw	high _pollsPerStepSpeed
 29422   009B2C  D01E               	goto	L10
 29423   009B2E                     l20060:
 29424                           
 29425                           ; BSR set to: 0
 29426                           ;../servo.c: 591:         pollsPerStepSpeed[io] = 234 - stepsPerPollSpeed[io] +1;
 29427   009B2E  0E74               	movlw	low _pollsPerStepSpeed
 29428   009B30  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29429   009B32  6ED9               	movwf	fsr2l,c
 29430   009B34  6ADA               	clrf	fsr2h,c
 29431   009B36  0E02               	movlw	high _pollsPerStepSpeed
 29432   009B38  22DA               	addwfc	fsr2h,f,c
 29433   009B3A  0E00               	movlw	low _stepsPerPollSpeed
 29434   009B3C  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29435   009B3E  6EE1               	movwf	fsr1l,c
 29436   009B40  6AE2               	clrf	fsr1h,c
 29437   009B42  0E01               	movlw	high _stepsPerPollSpeed
 29438   009B44  22E2               	addwfc	fsr1h,f,c
 29439   009B46  50E7               	movf	indf1,w,c
 29440   009B48  6F92               	movwf	??_startMultiOutput& (0+255),b
 29441   009B4A  5192               	movf	??_startMultiOutput& (0+255),w,b
 29442   009B4C  08EB               	sublw	235
 29443   009B4E  6EDF               	movwf	indf2,c
 29444                           
 29445                           ; BSR set to: 0
 29446                           ;../servo.c: 592:         pollCount[io] = 1;
 29447   009B50  0E64               	movlw	low _pollCount
 29448   009B52  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29449   009B54  6ED9               	movwf	fsr2l,c
 29450   009B56  6ADA               	clrf	fsr2h,c
 29451   009B58  0E02               	movlw	high _pollCount
 29452   009B5A  22DA               	addwfc	fsr2h,f,c
 29453   009B5C  0E01               	movlw	1
 29454   009B5E  6EDF               	movwf	indf2,c
 29455                           
 29456                           ; BSR set to: 0
 29457                           ;../servo.c: 593:         stepsPerPollSpeed[io] = 0;
 29458   009B60  0E00               	movlw	low _stepsPerPollSpeed
 29459   009B62  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29460   009B64  6ED9               	movwf	fsr2l,c
 29461   009B66  6ADA               	clrf	fsr2h,c
 29462   009B68  0E01               	movlw	high _stepsPerPollSpeed
 29463   009B6A                     L10:
 29464   009B6A  22DA               	addwfc	fsr2h,f,c
 29465   009B6C  6ADF               	clrf	indf2,c
 29466                           
 29467                           ; BSR set to: 0
 29468                           ;../servo.c: 595:     servoState[io] = SS_STARTING;
 29469   009B6E  0E10               	movlw	low _servoState
 29470   009B70  2593               	addwf	startMultiOutput@io& (0+255),w,b
 29471   009B72  6ED9               	movwf	fsr2l,c
 29472   009B74  6ADA               	clrf	fsr2h,c
 29473   009B76  0E01               	movlw	high _servoState
 29474   009B78  22DA               	addwfc	fsr2h,f,c
 29475   009B7A  0E03               	movlw	3
 29476   009B7C  6EDF               	movwf	indf2,c
 29477                           
 29478                           ; BSR set to: 0
 29479   009B7E  0012               	return		;funcret
 29480   009B80                     __end_of_startMultiOutput:
 29481                           	callstack 0
 29482                           
 29483 ;; *************** function _startDigitalOutput *****************
 29484 ;; Defined at:
 29485 ;;		line 107 in file "../digitalOut.c"
 29486 ;; Parameters:    Size  Location     Type
 29487 ;;  io              1    wreg     unsigned char 
 29488 ;;  state           1   26[BANK1 ] unsigned char 
 29489 ;; Auto vars:     Size  Location     Type
 29490 ;;  io              1   33[BANK1 ] unsigned char 
 29491 ;;  actionState     1   32[BANK1 ] enum E12760
 29492 ;;  pinState        1   31[BANK1 ] enum E12760
 29493 ;; Return value:  Size  Location     Type
 29494 ;;                  1    wreg      void 
 29495 ;; Registers used:
 29496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29497 ;; Tracked objects:
 29498 ;;		On entry : 0/0
 29499 ;;		On exit  : 0/0
 29500 ;;		Unchanged: 0/0
 29501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29502 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29503 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29504 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29505 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29506 ;;Total ram usage:        8 bytes
 29507 ;; Hardware stack levels used: 1
 29508 ;; Hardware stack levels required when called: 19
 29509 ;; This function calls:
 29510 ;;		_getNV
 29511 ;;		_sendInvertedProducedEvent
 29512 ;;		_setOutputPin
 29513 ;;		_writeNVM
 29514 ;; This function is called by:
 29515 ;;		_startOutput
 29516 ;; This function uses a non-reentrant model
 29517 ;;
 29518                           
 29519                           	psect	text107
 29520   005504                     __ptext107:
 29521                           	callstack 0
 29522   005504                     _startDigitalOutput:
 29523                           	callstack 8
 29524                           
 29525                           ; BSR set to: 0
 29526                           ;incstack = 0
 29527                           ;startDigitalOutput@io stored from wreg
 29528   005504  0101               	movlb	1	; () banked
 29529   005506  6FDB               	movwf	startDigitalOutput@io& (0+255),b
 29530                           
 29531                           ;../digitalOut.c: 108:     Boolean pinState;;../digitalOut.c: 109:     Boolean actionSta
      +                          te;;../digitalOut.c: 116:     if (state == 3) {
 29532   005508  0E03               	movlw	3
 29533   00550A  0101               	movlb	1	; () banked
 29534   00550C  19D4               	xorwf	startDigitalOutput@state& (0+255),w,b
 29535   00550E  A4D8               	btfss	status,2,c
 29536   005510  D058               	goto	l20380
 29537                           
 29538                           ; BSR set to: 1
 29539                           ;../digitalOut.c: 117:         flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 29540   005512  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29541   005514  0D07               	mullw	7
 29542   005516  50F3               	movf	243,w,c
 29543   005518  0F13               	addlw	19
 29544   00551A  ECD9  F05D         	call	_getNV
 29545   00551E  0E30               	movlw	low _flashDelays
 29546   005520  0101               	movlb	1	; () banked
 29547   005522  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29548   005524  6ED9               	movwf	fsr2l,c
 29549   005526  6ADA               	clrf	fsr2h,c
 29550   005528  0E01               	movlw	high _flashDelays
 29551   00552A  22DA               	addwfc	fsr2h,f,c
 29552   00552C  0100               	movlb	0	; () banked
 29553   00552E  C08D  FFDF         	movff	?_getNV,indf2
 29554                           
 29555                           ; BSR set to: 0
 29556                           ;../digitalOut.c: 118:         pulseDelays[io] = 1;
 29557   005532  0EA4               	movlw	low _pulseDelays
 29558   005534  0101               	movlb	1	; () banked
 29559   005536  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29560   005538  6ED9               	movwf	fsr2l,c
 29561   00553A  6ADA               	clrf	fsr2h,c
 29562   00553C  0E02               	movlw	high _pulseDelays
 29563   00553E  22DA               	addwfc	fsr2h,f,c
 29564   005540  0E01               	movlw	1
 29565   005542  6EDF               	movwf	indf2,c
 29566                           
 29567                           ; BSR set to: 1
 29568                           ;../digitalOut.c: 119:         setOutputPin(io, ! getNV((16 + 7*(io) + 1) & 0x20));
 29569   005544  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29570   005546  0D07               	mullw	7
 29571   005548  50F3               	movf	243,w,c
 29572   00554A  0F11               	addlw	17
 29573   00554C  0B20               	andlw	32
 29574   00554E  ECD9  F05D         	call	_getNV
 29575   005552  0100               	movlb	0	; () banked
 29576   005554  518D               	movf	?_getNV& (0+255),w,b
 29577   005556  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29578   005558  A4D8               	btfss	status,2,c
 29579   00555A  D002               	goto	u20600
 29580   00555C  0E01               	movlw	1
 29581   00555E  D001               	goto	u20610
 29582   005560                     u20600:
 29583   005560  0E00               	movlw	0
 29584   005562                     u20610:
 29585   005562  6F91               	movwf	setOutputPin@state& (0+255),b
 29586   005564  0101               	movlb	1	; () banked
 29587   005566  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29588   005568  ECA5  F036         	call	_setOutputPin
 29589                           
 29590                           ;../digitalOut.c: 120:         writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)((eeprom_addr
      +                          ess_t)((0x3FF -8))-25)+io, state);
 29591   00556C  0EDE               	movlw	222
 29592   00556E  0101               	movlb	1	; () banked
 29593   005570  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29594   005572  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 29595   005574  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29596   005576  0E03               	movlw	3
 29597   005578  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29598   00557A  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29599   00557E  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29600   005582  0100               	movlb	0	; () banked
 29601   005584  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29602   005586  C1D4  F0A7         	movff	startDigitalOutput@state,writeNVM@value
 29603   00558A  0E00               	movlw	0
 29604   00558C  ECE7  F05B         	call	_writeNVM
 29605                           
 29606                           ;../digitalOut.c: 121:         sendInvertedProducedEvent(((8 + 4*(io))+0), EVENT_ON,
 29607   005590  0E01               	movlw	1
 29608   005592  0101               	movlb	1	; () banked
 29609   005594  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29610   005596  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29611   005598  0D07               	mullw	7
 29612   00559A  50F3               	movf	243,w,c
 29613   00559C  0F11               	addlw	17
 29614   00559E  ECD9  F05D         	call	_getNV
 29615   0055A2  0100               	movlb	0	; () banked
 29616   0055A4  518D               	movf	?_getNV& (0+255),w,b
 29617   0055A6  0B40               	andlw	64
 29618   0055A8  0101               	movlb	1	; () banked
 29619   0055AA  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29620   0055AC  0E01               	movlw	1
 29621   0055AE  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29622   0055B0  0E01               	movlw	1
 29623   0055B2  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29624   0055B4  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29625   0055B6  0D04               	mullw	4
 29626   0055B8  50F3               	movf	243,w,c
 29627   0055BA  0F08               	addlw	8
 29628   0055BC  EC7E  F05C         	call	_sendInvertedProducedEvent
 29629   0055C0  0012               	return	
 29630   0055C2                     l20380:
 29631                           
 29632                           ; BSR set to: 1
 29633                           ;../digitalOut.c: 125:     flashDelays[io] = 0;
 29634   0055C2  0E30               	movlw	low _flashDelays
 29635   0055C4  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29636   0055C6  6ED9               	movwf	fsr2l,c
 29637   0055C8  6ADA               	clrf	fsr2h,c
 29638   0055CA  0E01               	movlw	high _flashDelays
 29639   0055CC  22DA               	addwfc	fsr2h,f,c
 29640   0055CE  6ADF               	clrf	indf2,c
 29641                           
 29642                           ; BSR set to: 1
 29643                           ;../digitalOut.c: 127:     actionState = (state == 1);
 29644   0055D0  05D4               	decf	startDigitalOutput@state& (0+255),w,b
 29645   0055D2  A4D8               	btfss	status,2,c
 29646   0055D4  D002               	goto	u20620
 29647   0055D6  0E01               	movlw	1
 29648   0055D8  D001               	goto	u20630
 29649   0055DA                     u20620:
 29650   0055DA  0E00               	movlw	0
 29651   0055DC                     u20630:
 29652   0055DC  6FDA               	movwf	startDigitalOutput@actionState& (0+255),b
 29653                           
 29654                           ; BSR set to: 1
 29655                           ;../digitalOut.c: 130:     if (getNV((16 + 7*(io) + 1)) & 0x01) {
 29656   0055DE  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29657   0055E0  0D07               	mullw	7
 29658   0055E2  50F3               	movf	243,w,c
 29659   0055E4  0F11               	addlw	17
 29660   0055E6  ECD9  F05D         	call	_getNV
 29661   0055EA  0100               	movlb	0	; () banked
 29662   0055EC  A18D               	btfss	?_getNV& (0+255),0,b
 29663   0055EE  D008               	goto	l259
 29664                           
 29665                           ; BSR set to: 0
 29666                           ;../digitalOut.c: 131:         actionState = !actionState;
 29667   0055F0  0101               	movlb	1	; () banked
 29668   0055F2  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 29669   0055F4  A4D8               	btfss	status,2,c
 29670   0055F6  D002               	goto	u20650
 29671   0055F8  0E01               	movlw	1
 29672   0055FA  D001               	goto	u20660
 29673   0055FC                     u20650:
 29674   0055FC  0E00               	movlw	0
 29675   0055FE                     u20660:
 29676   0055FE  6FDA               	movwf	startDigitalOutput@actionState& (0+255),b
 29677   005600                     l259:
 29678                           
 29679                           ;../digitalOut.c: 135:     if (( ! actionState) && getNV((16 + 7*(io) + 2))) {
 29680   005600  0101               	movlb	1	; () banked
 29681   005602  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 29682   005604  A4D8               	btfss	status,2,c
 29683   005606  D015               	goto	l20394
 29684                           
 29685                           ; BSR set to: 1
 29686   005608  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29687   00560A  0D07               	mullw	7
 29688   00560C  50F3               	movf	243,w,c
 29689   00560E  0F12               	addlw	18
 29690   005610  ECD9  F05D         	call	_getNV
 29691   005614  0100               	movlb	0	; () banked
 29692   005616  518D               	movf	?_getNV& (0+255),w,b
 29693   005618  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29694   00561A  B4D8               	btfsc	status,2,c
 29695   00561C  D00A               	goto	l20394
 29696                           
 29697                           ; BSR set to: 0
 29698                           ;../digitalOut.c: 136:         pulseDelays[io] = 1;
 29699   00561E  0EA4               	movlw	low _pulseDelays
 29700   005620  0101               	movlb	1	; () banked
 29701   005622  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29702   005624  6ED9               	movwf	fsr2l,c
 29703   005626  6ADA               	clrf	fsr2h,c
 29704   005628  0E02               	movlw	high _pulseDelays
 29705   00562A  22DA               	addwfc	fsr2h,f,c
 29706   00562C  0E01               	movlw	1
 29707   00562E  6EDF               	movwf	indf2,c
 29708   005630  0012               	return	
 29709   005632                     l20394:
 29710                           
 29711                           ;../digitalOut.c: 142:     if ((actionState) && getNV((16 + 7*(io) + 2)) && (pulseDelays
      +                          [io] == 0)) {
 29712   005632  0101               	movlb	1	; () banked
 29713   005634  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 29714   005636  B4D8               	btfsc	status,2,c
 29715   005638  D038               	goto	l20404
 29716                           
 29717                           ; BSR set to: 1
 29718   00563A  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29719   00563C  0D07               	mullw	7
 29720   00563E  50F3               	movf	243,w,c
 29721   005640  0F12               	addlw	18
 29722   005642  ECD9  F05D         	call	_getNV
 29723   005646  0100               	movlb	0	; () banked
 29724   005648  518D               	movf	?_getNV& (0+255),w,b
 29725   00564A  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 29726   00564C  B4D8               	btfsc	status,2,c
 29727   00564E  D02D               	goto	l20404
 29728                           
 29729                           ; BSR set to: 0
 29730   005650  0EA4               	movlw	low _pulseDelays
 29731   005652  0101               	movlb	1	; () banked
 29732   005654  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29733   005656  6ED9               	movwf	fsr2l,c
 29734   005658  6ADA               	clrf	fsr2h,c
 29735   00565A  0E02               	movlw	high _pulseDelays
 29736   00565C  22DA               	addwfc	fsr2h,f,c
 29737   00565E  50DF               	movf	indf2,w,c
 29738   005660  A4D8               	btfss	status,2,c
 29739   005662  D023               	goto	l20404
 29740                           
 29741                           ; BSR set to: 1
 29742                           ;../digitalOut.c: 143:         pulseDelays[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 29743   005664  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29744   005666  0D07               	mullw	7
 29745   005668  50F3               	movf	243,w,c
 29746   00566A  0F12               	addlw	18
 29747   00566C  ECD9  F05D         	call	_getNV
 29748   005670  0EA4               	movlw	low _pulseDelays
 29749   005672  0101               	movlb	1	; () banked
 29750   005674  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29751   005676  6ED9               	movwf	fsr2l,c
 29752   005678  6ADA               	clrf	fsr2h,c
 29753   00567A  0E02               	movlw	high _pulseDelays
 29754   00567C  22DA               	addwfc	fsr2h,f,c
 29755   00567E  0100               	movlb	0	; () banked
 29756   005680  C08D  FFDF         	movff	?_getNV,indf2
 29757                           
 29758                           ; BSR set to: 0
 29759                           ;../digitalOut.c: 146:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, 2);
 29760   005684  0EDE               	movlw	222
 29761   005686  0101               	movlb	1	; () banked
 29762   005688  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29763   00568A  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 29764   00568C  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29765   00568E  0E03               	movlw	3
 29766   005690  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29767   005692  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29768   005696  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29769   00569A  0100               	movlb	0	; () banked
 29770   00569C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29771   00569E  0E02               	movlw	2
 29772   0056A0  6FA7               	movwf	writeNVM@value& (0+255),b
 29773   0056A2  0E00               	movlw	0
 29774   0056A4  ECE7  F05B         	call	_writeNVM
 29775                           
 29776                           ;../digitalOut.c: 147:     } else {
 29777   0056A8  D025               	goto	l20414
 29778   0056AA                     l20404:
 29779                           
 29780                           ;../digitalOut.c: 148:         pulseDelays[io] = 1;
 29781   0056AA  0EA4               	movlw	low _pulseDelays
 29782   0056AC  0101               	movlb	1	; () banked
 29783   0056AE  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29784   0056B0  6ED9               	movwf	fsr2l,c
 29785   0056B2  6ADA               	clrf	fsr2h,c
 29786   0056B4  0E02               	movlw	high _pulseDelays
 29787   0056B6  22DA               	addwfc	fsr2h,f,c
 29788   0056B8  0E01               	movlw	1
 29789   0056BA  6EDF               	movwf	indf2,c
 29790                           
 29791                           ; BSR set to: 1
 29792                           ;../digitalOut.c: 149:         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)((0x3FF -8))
      +                          -25)+io, actionState?1:2);
 29793   0056BC  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 29794   0056BE  A4D8               	btfss	status,2,c
 29795   0056C0  D004               	goto	l20410
 29796                           
 29797                           ; BSR set to: 1
 29798   0056C2  0E00               	movlw	0
 29799   0056C4  6FD8               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 29800   0056C6  0E02               	movlw	2
 29801   0056C8  D003               	goto	L11
 29802   0056CA                     l20410:
 29803                           
 29804                           ; BSR set to: 1
 29805   0056CA  0E00               	movlw	0
 29806   0056CC  6FD8               	movwf	(_startDigitalOutput$808+1)& (0+255),b
 29807   0056CE  0E01               	movlw	1
 29808   0056D0                     L11:
 29809   0056D0  6FD7               	movwf	_startDigitalOutput$808& (0+255),b
 29810                           
 29811                           ; BSR set to: 1
 29812   0056D2  0EDE               	movlw	222
 29813   0056D4  25DB               	addwf	startDigitalOutput@io& (0+255),w,b
 29814   0056D6  6FD5               	movwf	??_startDigitalOutput& (0+255),b
 29815   0056D8  6BD6               	clrf	(??_startDigitalOutput+1)& (0+255),b
 29816   0056DA  0E03               	movlw	3
 29817   0056DC  23D6               	addwfc	(??_startDigitalOutput+1)& (0+255),f,b
 29818   0056DE  C1D5  F0A4         	movff	??_startDigitalOutput,writeNVM@index
 29819   0056E2  C1D6  F0A5         	movff	??_startDigitalOutput+1,writeNVM@index+1
 29820   0056E6  0100               	movlb	0	; () banked
 29821   0056E8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 29822   0056EA  C1D7  F0A7         	movff	_startDigitalOutput$808,writeNVM@value
 29823   0056EE  0E00               	movlw	0
 29824   0056F0  ECE7  F05B         	call	_writeNVM
 29825   0056F4                     l20414:
 29826                           
 29827                           ;../digitalOut.c: 152:     pinState = actionState;
 29828   0056F4  C1DA  F1D9         	movff	startDigitalOutput@actionState,startDigitalOutput@pinState
 29829                           
 29830                           ;../digitalOut.c: 153:     if (getNV((16 + 7*(io) + 1)) & 0x20) {
 29831   0056F8  0101               	movlb	1	; () banked
 29832   0056FA  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29833   0056FC  0D07               	mullw	7
 29834   0056FE  50F3               	movf	243,w,c
 29835   005700  0F11               	addlw	17
 29836   005702  ECD9  F05D         	call	_getNV
 29837   005706  0100               	movlb	0	; () banked
 29838   005708  AB8D               	btfss	?_getNV& (0+255),5,b
 29839   00570A  D008               	goto	l20420
 29840                           
 29841                           ; BSR set to: 0
 29842                           ;../digitalOut.c: 154:         pinState = !pinState;
 29843   00570C  0101               	movlb	1	; () banked
 29844   00570E  51D9               	movf	startDigitalOutput@pinState& (0+255),w,b
 29845   005710  A4D8               	btfss	status,2,c
 29846   005712  D002               	goto	u20740
 29847   005714  0E01               	movlw	1
 29848   005716  D001               	goto	u20750
 29849   005718                     u20740:
 29850   005718  0E00               	movlw	0
 29851   00571A                     u20750:
 29852   00571A  6FD9               	movwf	startDigitalOutput@pinState& (0+255),b
 29853   00571C                     l20420:
 29854                           
 29855                           ;../digitalOut.c: 156:     setOutputPin(io, pinState);
 29856   00571C  C1D9  F091         	movff	startDigitalOutput@pinState,setOutputPin@state
 29857   005720  0101               	movlb	1	; () banked
 29858   005722  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29859   005724  ECA5  F036         	call	_setOutputPin
 29860                           
 29861                           ;../digitalOut.c: 161:     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 29862   005728  0101               	movlb	1	; () banked
 29863   00572A  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29864   00572C  0D07               	mullw	7
 29865   00572E  50F3               	movf	243,w,c
 29866   005730  0F11               	addlw	17
 29867   005732  ECD9  F05D         	call	_getNV
 29868   005736  0100               	movlb	0	; () banked
 29869   005738  A78D               	btfss	?_getNV& (0+255),3,b
 29870   00573A  D021               	goto	l20428
 29871                           
 29872                           ; BSR set to: 0
 29873                           ;../digitalOut.c: 162:         if (actionState) {
 29874   00573C  0101               	movlb	1	; () banked
 29875   00573E  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 29876   005740  B4D8               	btfsc	status,2,c
 29877   005742  0012               	return	
 29878                           
 29879                           ; BSR set to: 1
 29880                           ;../digitalOut.c: 165:             sendInvertedProducedEvent(((8 + 4*(io))+0), actionSta
      +                          te?EVENT_ON:EVENT_OFF,
 29881   005744  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 29882   005746  B4D8               	btfsc	status,2,c
 29883   005748  D002               	goto	u20780
 29884   00574A  0E01               	movlw	1
 29885   00574C  D001               	goto	u20790
 29886   00574E                     u20780:
 29887   00574E  0E00               	movlw	0
 29888   005750                     u20790:
 29889   005750  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29890   005752  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29891   005754  0D07               	mullw	7
 29892   005756  50F3               	movf	243,w,c
 29893   005758  0F11               	addlw	17
 29894   00575A  ECD9  F05D         	call	_getNV
 29895   00575E  0100               	movlb	0	; () banked
 29896   005760  518D               	movf	?_getNV& (0+255),w,b
 29897   005762  0B40               	andlw	64
 29898   005764  0101               	movlb	1	; () banked
 29899   005766  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29900   005768  0E01               	movlw	1
 29901   00576A  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29902   00576C  0E01               	movlw	1
 29903   00576E  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29904   005770  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29905   005772  0D04               	mullw	4
 29906   005774  50F3               	movf	243,w,c
 29907   005776  0F08               	addlw	8
 29908   005778  EC7E  F05C         	call	_sendInvertedProducedEvent
 29909   00577C  0012               	return	
 29910   00577E                     l20428:
 29911                           
 29912                           ; BSR set to: 0
 29913                           ;../digitalOut.c: 170:         sendInvertedProducedEvent(((8 + 4*(io))+0), actionState?E
      +                          VENT_ON:EVENT_OFF,
 29914   00577E  0101               	movlb	1	; () banked
 29915   005780  51DA               	movf	startDigitalOutput@actionState& (0+255),w,b
 29916   005782  B4D8               	btfsc	status,2,c
 29917   005784  D002               	goto	u20800
 29918   005786  0E01               	movlw	1
 29919   005788  D001               	goto	u20810
 29920   00578A                     u20800:
 29921   00578A  0E00               	movlw	0
 29922   00578C                     u20810:
 29923   00578C  6FCC               	movwf	sendInvertedProducedEvent@state& (0+255),b
 29924   00578E  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29925   005790  0D07               	mullw	7
 29926   005792  50F3               	movf	243,w,c
 29927   005794  0F11               	addlw	17
 29928   005796  ECD9  F05D         	call	_getNV
 29929   00579A  0100               	movlb	0	; () banked
 29930   00579C  518D               	movf	?_getNV& (0+255),w,b
 29931   00579E  0B40               	andlw	64
 29932   0057A0  0101               	movlb	1	; () banked
 29933   0057A2  6FCD               	movwf	sendInvertedProducedEvent@invert& (0+255),b
 29934   0057A4  0E01               	movlw	1
 29935   0057A6  6FCE               	movwf	sendInvertedProducedEvent@can_send_on& (0+255),b
 29936   0057A8  0E01               	movlw	1
 29937   0057AA  6FCF               	movwf	sendInvertedProducedEvent@can_send_off& (0+255),b
 29938   0057AC  51DB               	movf	startDigitalOutput@io& (0+255),w,b
 29939   0057AE  0D04               	mullw	4
 29940   0057B0  50F3               	movf	243,w,c
 29941   0057B2  0F08               	addlw	8
 29942   0057B4  EC7E  F05C         	call	_sendInvertedProducedEvent
 29943   0057B8  0012               	return		;funcret
 29944   0057BA                     __end_of_startDigitalOutput:
 29945                           	callstack 0
 29946                           
 29947 ;; *************** function _sendInvertedProducedEvent *****************
 29948 ;; Defined at:
 29949 ;;		line 362 in file "../universalEvents.c"
 29950 ;; Parameters:    Size  Location     Type
 29951 ;;  happening       1    wreg     unsigned char 
 29952 ;;  state           1   18[BANK1 ] enum E12781
 29953 ;;  invert          1   19[BANK1 ] enum E12761
 29954 ;;  can_send_on     1   20[BANK1 ] enum E12761
 29955 ;;  can_send_off    1   21[BANK1 ] enum E12761
 29956 ;; Auto vars:     Size  Location     Type
 29957 ;;  happening       1   22[BANK1 ] unsigned char 
 29958 ;;  state_to_sen    1   25[BANK1 ] enum E12781
 29959 ;; Return value:  Size  Location     Type
 29960 ;;                  1    wreg      enum E12760
 29961 ;; Registers used:
 29962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 29963 ;; Tracked objects:
 29964 ;;		On entry : 0/0
 29965 ;;		On exit  : 0/0
 29966 ;;		Unchanged: 0/0
 29967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29968 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29969 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29971 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29972 ;;Total ram usage:        8 bytes
 29973 ;; Hardware stack levels used: 1
 29974 ;; Hardware stack levels required when called: 18
 29975 ;; This function calls:
 29976 ;;		_sendProducedEvent
 29977 ;; This function is called by:
 29978 ;;		_startDigitalOutput
 29979 ;;		_sodTRCallback
 29980 ;; This function uses a non-reentrant model
 29981 ;;
 29982                           
 29983                           	psect	text108
 29984   00B8FC                     __ptext108:
 29985                           	callstack 0
 29986   00B8FC                     _sendInvertedProducedEvent:
 29987                           	callstack 9
 29988                           
 29989                           ;incstack = 0
 29990                           ;sendInvertedProducedEvent@happening stored from wreg
 29991   00B8FC  0101               	movlb	1	; () banked
 29992   00B8FE  6FD0               	movwf	sendInvertedProducedEvent@happening& (0+255),b
 29993                           
 29994                           ;../universalEvents.c: 363:  EventState state_to_send = invert?!state:state;
 29995   00B900  0101               	movlb	1	; () banked
 29996   00B902  51CD               	movf	sendInvertedProducedEvent@invert& (0+255),w,b
 29997   00B904  A4D8               	btfss	status,2,c
 29998   00B906  D003               	goto	l19872
 29999                           
 30000                           ; BSR set to: 1
 30001   00B908  C1CC  F1D1         	movff	sendInvertedProducedEvent@state,_sendInvertedProducedEvent$1404
 30002   00B90C  D007               	goto	L12
 30003   00B90E                     l19872:
 30004                           
 30005                           ; BSR set to: 1
 30006   00B90E  51CC               	movf	sendInvertedProducedEvent@state& (0+255),w,b
 30007   00B910  A4D8               	btfss	status,2,c
 30008   00B912  D002               	goto	u19910
 30009   00B914  0E01               	movlw	1
 30010   00B916  D001               	goto	u19920
 30011   00B918                     u19910:
 30012   00B918  0E00               	movlw	0
 30013   00B91A                     u19920:
 30014   00B91A  6FD1               	movwf	_sendInvertedProducedEvent$1404& (0+255),b
 30015   00B91C                     L12:
 30016   00B91C  6BD2               	clrf	(_sendInvertedProducedEvent$1404+1)& (0+255),b
 30017                           
 30018                           ; BSR set to: 1
 30019   00B91E  C1D1  F1D3         	movff	_sendInvertedProducedEvent$1404,sendInvertedProducedEvent@state_to_send
 30020                           
 30021                           ;../universalEvents.c: 364:  if ((state_to_send && can_send_on) || (!state_to_send && ca
      +                          n_send_off)) {
 30022   00B922  51D3               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30023   00B924  B4D8               	btfsc	status,2,c
 30024   00B926  D003               	goto	u19940
 30025                           
 30026                           ; BSR set to: 1
 30027   00B928  51CE               	movf	sendInvertedProducedEvent@can_send_on& (0+255),w,b
 30028   00B92A  A4D8               	btfss	status,2,c
 30029   00B92C  D006               	goto	u19960
 30030   00B92E                     u19940:
 30031                           
 30032                           ; BSR set to: 1
 30033   00B92E  51D3               	movf	sendInvertedProducedEvent@state_to_send& (0+255),w,b
 30034   00B930  A4D8               	btfss	status,2,c
 30035   00B932  0012               	return	
 30036                           
 30037                           ; BSR set to: 1
 30038   00B934  51CF               	movf	sendInvertedProducedEvent@can_send_off& (0+255),w,b
 30039   00B936  B4D8               	btfsc	status,2,c
 30040   00B938  0012               	return	
 30041   00B93A                     u19960:
 30042                           
 30043                           ; BSR set to: 1
 30044                           ;../universalEvents.c: 365:   return sendProducedEvent(happening, state_to_send);;	Retur
      +                          n value of _sendInvertedProducedEvent is never used
 30045   00B93A  C1D3  F0A7         	movff	sendInvertedProducedEvent@state_to_send,sendProducedEvent@onOff
 30046   00B93E  51D0               	movf	sendInvertedProducedEvent@happening& (0+255),w,b
 30047   00B940  ECC2  F04A         	call	_sendProducedEvent
 30048   00B944  0012               	return		;funcret
 30049   00B946                     __end_of_sendInvertedProducedEvent:
 30050                           	callstack 0
 30051                           
 30052 ;; *************** function _startBounceOutput *****************
 30053 ;; Defined at:
 30054 ;;		line 566 in file "../servo.c"
 30055 ;; Parameters:    Size  Location     Type
 30056 ;;  io              1    wreg     unsigned char 
 30057 ;;  action          1   45[BANK0 ] unsigned char 
 30058 ;; Auto vars:     Size  Location     Type
 30059 ;;  io              1   46[BANK0 ] unsigned char 
 30060 ;; Return value:  Size  Location     Type
 30061 ;;                  1    wreg      void 
 30062 ;; Registers used:
 30063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30064 ;; Tracked objects:
 30065 ;;		On entry : 0/0
 30066 ;;		On exit  : 0/0
 30067 ;;		Unchanged: 0/0
 30068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30069 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30072 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30073 ;;Total ram usage:        2 bytes
 30074 ;; Hardware stack levels used: 1
 30075 ;; Hardware stack levels required when called: 12
 30076 ;; This function calls:
 30077 ;;		Nothing
 30078 ;; This function is called by:
 30079 ;;		_APP_nvValueChanged
 30080 ;;		_startOutput
 30081 ;; This function uses a non-reentrant model
 30082 ;;
 30083                           
 30084                           	psect	text109
 30085   00B060                     __ptext109:
 30086                           	callstack 0
 30087   00B060                     _startBounceOutput:
 30088                           	callstack 14
 30089                           
 30090                           ;incstack = 0
 30091                           ;startBounceOutput@io stored from wreg
 30092   00B060  0100               	movlb	0	; () banked
 30093   00B062  6F8E               	movwf	startBounceOutput@io& (0+255),b
 30094                           
 30095                           ;../servo.c: 567:     switch (action) {
 30096   00B064  D018               	goto	l20032
 30097   00B066                     l20026:
 30098                           
 30099                           ; BSR set to: 0
 30100                           ;../servo.c: 569:             speed[io] = 0;
 30101   00B066  518E               	movf	startBounceOutput@io& (0+255),w,b
 30102   00B068  0D02               	mullw	2
 30103   00B06A  0E00               	movlw	low _speed
 30104   00B06C  24F3               	addwf	243,w,c
 30105   00B06E  6ED9               	movwf	fsr2l,c
 30106   00B070  0E02               	movlw	high _speed
 30107   00B072  20F4               	addwfc	prodh,w,c
 30108   00B074  6EDA               	movwf	fsr2h,c
 30109   00B076  6ADE               	clrf	postinc2,c
 30110   00B078  6ADD               	clrf	postdec2,c
 30111                           
 30112                           ;../servo.c: 570:             break;
 30113   00B07A  D015               	goto	l20034
 30114   00B07C                     l20028:
 30115                           
 30116                           ; BSR set to: 0
 30117                           ;../servo.c: 572:             speed[io] = 12;
 30118   00B07C  518E               	movf	startBounceOutput@io& (0+255),w,b
 30119   00B07E  0D02               	mullw	2
 30120   00B080  0E00               	movlw	low _speed
 30121   00B082  24F3               	addwf	243,w,c
 30122   00B084  6ED9               	movwf	fsr2l,c
 30123   00B086  0E02               	movlw	high _speed
 30124   00B088  20F4               	addwfc	prodh,w,c
 30125   00B08A  6EDA               	movwf	fsr2h,c
 30126   00B08C  0E0C               	movlw	12
 30127   00B08E  6EDE               	movwf	postinc2,c
 30128   00B090  0E00               	movlw	0
 30129   00B092  6EDD               	movwf	postdec2,c
 30130                           
 30131                           ;../servo.c: 573:             break;
 30132   00B094  D008               	goto	l20034
 30133   00B096                     l20032:
 30134   00B096  0100               	movlb	0	; () banked
 30135   00B098  518D               	movf	startBounceOutput@action& (0+255),w,b
 30136                           
 30137                           ; Switch size 1, requested type "simple"
 30138                           ; Number of cases is 2, Range of values is 1 to 2
 30139                           ; switch strategies available:
 30140                           ; Name         Instructions Cycles
 30141                           ; simple_byte            7     4 (average)
 30142                           ;	Chosen strategy is simple_byte
 30143   00B09A  0A01               	xorlw	1	; case 1
 30144   00B09C  B4D8               	btfsc	status,2,c
 30145   00B09E  D7EE               	goto	l20028
 30146   00B0A0  0A03               	xorlw	3	; case 2
 30147   00B0A2  B4D8               	btfsc	status,2,c
 30148   00B0A4  D7E0               	goto	l20026
 30149   00B0A6                     l20034:
 30150                           
 30151                           ; BSR set to: 0
 30152                           ;../servo.c: 575:     servoState[io] = SS_STARTING;
 30153   00B0A6  0E10               	movlw	low _servoState
 30154   00B0A8  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30155   00B0AA  6ED9               	movwf	fsr2l,c
 30156   00B0AC  6ADA               	clrf	fsr2h,c
 30157   00B0AE  0E01               	movlw	high _servoState
 30158   00B0B0  22DA               	addwfc	fsr2h,f,c
 30159   00B0B2  0E03               	movlw	3
 30160   00B0B4  6EDF               	movwf	indf2,c
 30161                           
 30162                           ;../servo.c: 576:     loopCount[io] = 0;
 30163   00B0B6  0E54               	movlw	low _loopCount
 30164   00B0B8  258E               	addwf	startBounceOutput@io& (0+255),w,b
 30165   00B0BA  6ED9               	movwf	fsr2l,c
 30166   00B0BC  6ADA               	clrf	fsr2h,c
 30167   00B0BE  0E02               	movlw	high _loopCount
 30168   00B0C0  22DA               	addwfc	fsr2h,f,c
 30169   00B0C2  6ADF               	clrf	indf2,c
 30170                           
 30171                           ; BSR set to: 0
 30172   00B0C4  0012               	return		;funcret
 30173   00B0C6                     __end_of_startBounceOutput:
 30174                           	callstack 0
 30175                           
 30176 ;; *************** function _setOutputState *****************
 30177 ;; Defined at:
 30178 ;;		line 110 in file "../outputs.c"
 30179 ;; Parameters:    Size  Location     Type
 30180 ;;  io              1    wreg     unsigned char 
 30181 ;;  act             1   51[BANK0 ] unsigned char 
 30182 ;;  type            1   52[BANK0 ] unsigned char 
 30183 ;; Auto vars:     Size  Location     Type
 30184 ;;  io              1   53[BANK0 ] unsigned char 
 30185 ;; Return value:  Size  Location     Type
 30186 ;;                  1    wreg      void 
 30187 ;; Registers used:
 30188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30189 ;; Tracked objects:
 30190 ;;		On entry : 0/0
 30191 ;;		On exit  : 0/0
 30192 ;;		Unchanged: 0/0
 30193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30195 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30197 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30198 ;;Total ram usage:        3 bytes
 30199 ;; Hardware stack levels used: 1
 30200 ;; Hardware stack levels required when called: 14
 30201 ;; This function calls:
 30202 ;;		_setBounceState
 30203 ;;		_setMultiState
 30204 ;;		_setServoState
 30205 ;; This function is called by:
 30206 ;;		_processActions
 30207 ;; This function uses a non-reentrant model
 30208 ;;
 30209                           
 30210                           	psect	text110
 30211   00B5DE                     __ptext110:
 30212                           	callstack 0
 30213   00B5DE                     _setOutputState:
 30214                           	callstack 14
 30215                           
 30216                           ; BSR set to: 0
 30217                           ;incstack = 0
 30218                           ;setOutputState@io stored from wreg
 30219   00B5DE  0100               	movlb	0	; () banked
 30220   00B5E0  6F95               	movwf	setOutputState@io& (0+255),b
 30221                           
 30222                           ;../outputs.c: 111:     switch(type) {
 30223   00B5E2  D012               	goto	l21362
 30224   00B5E4                     l21348:
 30225                           
 30226                           ; BSR set to: 0
 30227                           ;../outputs.c: 124:             setBounceState(io, act);
 30228   00B5E4  C093  F091         	movff	setOutputState@act,setBounceState@action
 30229   00B5E8  5195               	movf	setOutputState@io& (0+255),w,b
 30230   00B5EA  EC64  F04A         	call	_setBounceState
 30231   00B5EE  0012               	return	
 30232   00B5F0                     l21352:
 30233                           
 30234                           ; BSR set to: 0
 30235                           ;../outputs.c: 129:             setServoState(io, act);
 30236   00B5F0  C093  F091         	movff	setOutputState@act,setServoState@action
 30237   00B5F4  5195               	movf	setOutputState@io& (0+255),w,b
 30238   00B5F6  EC06  F04A         	call	_setServoState
 30239   00B5FA  0012               	return	
 30240   00B5FC                     l21356:
 30241                           
 30242                           ; BSR set to: 0
 30243                           ;../outputs.c: 134:             setMultiState(io, act);
 30244   00B5FC  C093  F091         	movff	setOutputState@act,setMultiState@action
 30245   00B600  5195               	movf	setOutputState@io& (0+255),w,b
 30246   00B602  ECF3  F043         	call	_setMultiState
 30247   00B606  0012               	return	
 30248   00B608                     l21362:
 30249   00B608  0100               	movlb	0	; () banked
 30250   00B60A  5194               	movf	setOutputState@type& (0+255),w,b
 30251                           
 30252                           ; Switch size 1, requested type "simple"
 30253                           ; Number of cases is 7, Range of values is 0 to 6
 30254                           ; switch strategies available:
 30255                           ; Name         Instructions Cycles
 30256                           ; simple_byte           22    12 (average)
 30257                           ;	Chosen strategy is simple_byte
 30258   00B60C  0A00               	xorlw	0	; case 0
 30259   00B60E  B4D8               	btfsc	status,2,c
 30260   00B610  0012               	return	
 30261   00B612  0A01               	xorlw	1	; case 1
 30262   00B614  B4D8               	btfsc	status,2,c
 30263   00B616  0012               	return	
 30264   00B618  0A03               	xorlw	3	; case 2
 30265   00B61A  B4D8               	btfsc	status,2,c
 30266   00B61C  D7E9               	goto	l21352
 30267   00B61E  0A01               	xorlw	1	; case 3
 30268   00B620  B4D8               	btfsc	status,2,c
 30269   00B622  D7E0               	goto	l21348
 30270   00B624  0A07               	xorlw	7	; case 4
 30271   00B626  B4D8               	btfsc	status,2,c
 30272   00B628  D7E9               	goto	l21356
 30273   00B62A  0A01               	xorlw	1	; case 5
 30274   00B62C  B4D8               	btfsc	status,2,c
 30275   00B62E  0012               	return	
 30276   00B630  0A03               	xorlw	3	; case 6
 30277   00B632  0012               	return	
 30278   00B634                     __end_of_setOutputState:
 30279                           	callstack 0
 30280                           
 30281 ;; *************** function _setServoState *****************
 30282 ;; Defined at:
 30283 ;;		line 606 in file "../servo.c"
 30284 ;; Parameters:    Size  Location     Type
 30285 ;;  io              1    wreg     unsigned char 
 30286 ;;  action          1   49[BANK0 ] unsigned char 
 30287 ;; Auto vars:     Size  Location     Type
 30288 ;;  io              1   50[BANK0 ] unsigned char 
 30289 ;; Return value:  Size  Location     Type
 30290 ;;                  1    wreg      void 
 30291 ;; Registers used:
 30292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30293 ;; Tracked objects:
 30294 ;;		On entry : 0/0
 30295 ;;		On exit  : 0/0
 30296 ;;		Unchanged: 0/0
 30297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30298 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30301 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30302 ;;Total ram usage:        2 bytes
 30303 ;; Hardware stack levels used: 1
 30304 ;; Hardware stack levels required when called: 13
 30305 ;; This function calls:
 30306 ;;		_getNV
 30307 ;; This function is called by:
 30308 ;;		_APP_nvValueChanged
 30309 ;;		_setOutputState
 30310 ;; This function uses a non-reentrant model
 30311 ;;
 30312                           
 30313                           	psect	text111
 30314   00940C                     __ptext111:
 30315                           	callstack 0
 30316   00940C                     _setServoState:
 30317                           	callstack 13
 30318                           
 30319                           ;incstack = 0
 30320                           ;setServoState@io stored from wreg
 30321   00940C  0100               	movlb	0	; () banked
 30322   00940E  6F92               	movwf	setServoState@io& (0+255),b
 30323                           
 30324                           ;../servo.c: 607:     switch (action) {
 30325   009410  D052               	goto	l19980
 30326   009412                     l19966:
 30327                           
 30328                           ; BSR set to: 0
 30329                           ;../servo.c: 609:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30330   009412  5192               	movf	setServoState@io& (0+255),w,b
 30331   009414  0D07               	mullw	7
 30332   009416  50F3               	movf	243,w,c
 30333   009418  0F11               	addlw	17
 30334   00941A  ECD9  F05D         	call	_getNV
 30335   00941E  0100               	movlb	0	; () banked
 30336   009420  A18D               	btfss	?_getNV& (0+255),0,b
 30337   009422  D010               	goto	l19970
 30338                           
 30339                           ; BSR set to: 0
 30340                           ;../servo.c: 610:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30341   009424  5192               	movf	setServoState@io& (0+255),w,b
 30342   009426  0D07               	mullw	7
 30343   009428  50F3               	movf	243,w,c
 30344   00942A  0F13               	addlw	19
 30345   00942C  ECD9  F05D         	call	_getNV
 30346   009430  0E20               	movlw	low _targetPos
 30347   009432  0100               	movlb	0	; () banked
 30348   009434  2592               	addwf	setServoState@io& (0+255),w,b
 30349   009436  6ED9               	movwf	fsr2l,c
 30350   009438  6ADA               	clrf	fsr2h,c
 30351   00943A  0E01               	movlw	high _targetPos
 30352   00943C  22DA               	addwfc	fsr2h,f,c
 30353   00943E  C08D  FFDF         	movff	?_getNV,indf2
 30354                           
 30355                           ;../servo.c: 611:             } else {
 30356   009442  0012               	return	
 30357   009444                     l19970:
 30358                           
 30359                           ; BSR set to: 0
 30360                           ;../servo.c: 612:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30361   009444  5192               	movf	setServoState@io& (0+255),w,b
 30362   009446  0D07               	mullw	7
 30363   009448  50F3               	movf	243,w,c
 30364   00944A  0F12               	addlw	18
 30365   00944C  ECD9  F05D         	call	_getNV
 30366   009450  0E20               	movlw	low _targetPos
 30367   009452  0100               	movlb	0	; () banked
 30368   009454  2592               	addwf	setServoState@io& (0+255),w,b
 30369   009456  6ED9               	movwf	fsr2l,c
 30370   009458  6ADA               	clrf	fsr2h,c
 30371   00945A  0E01               	movlw	high _targetPos
 30372   00945C  22DA               	addwfc	fsr2h,f,c
 30373   00945E  C08D  FFDF         	movff	?_getNV,indf2
 30374   009462  0012               	return	
 30375   009464                     l19972:
 30376                           
 30377                           ; BSR set to: 0
 30378                           ;../servo.c: 616:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30379   009464  5192               	movf	setServoState@io& (0+255),w,b
 30380   009466  0D07               	mullw	7
 30381   009468  50F3               	movf	243,w,c
 30382   00946A  0F11               	addlw	17
 30383   00946C  ECD9  F05D         	call	_getNV
 30384   009470  0100               	movlb	0	; () banked
 30385   009472  A18D               	btfss	?_getNV& (0+255),0,b
 30386   009474  D010               	goto	l19976
 30387                           
 30388                           ; BSR set to: 0
 30389                           ;../servo.c: 617:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30390   009476  5192               	movf	setServoState@io& (0+255),w,b
 30391   009478  0D07               	mullw	7
 30392   00947A  50F3               	movf	243,w,c
 30393   00947C  0F12               	addlw	18
 30394   00947E  ECD9  F05D         	call	_getNV
 30395   009482  0E20               	movlw	low _targetPos
 30396   009484  0100               	movlb	0	; () banked
 30397   009486  2592               	addwf	setServoState@io& (0+255),w,b
 30398   009488  6ED9               	movwf	fsr2l,c
 30399   00948A  6ADA               	clrf	fsr2h,c
 30400   00948C  0E01               	movlw	high _targetPos
 30401   00948E  22DA               	addwfc	fsr2h,f,c
 30402   009490  C08D  FFDF         	movff	?_getNV,indf2
 30403                           
 30404                           ;../servo.c: 618:             } else {
 30405   009494  0012               	return	
 30406   009496                     l19976:
 30407                           
 30408                           ; BSR set to: 0
 30409                           ;../servo.c: 619:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30410   009496  5192               	movf	setServoState@io& (0+255),w,b
 30411   009498  0D07               	mullw	7
 30412   00949A  50F3               	movf	243,w,c
 30413   00949C  0F13               	addlw	19
 30414   00949E  ECD9  F05D         	call	_getNV
 30415   0094A2  0E20               	movlw	low _targetPos
 30416   0094A4  0100               	movlb	0	; () banked
 30417   0094A6  2592               	addwf	setServoState@io& (0+255),w,b
 30418   0094A8  6ED9               	movwf	fsr2l,c
 30419   0094AA  6ADA               	clrf	fsr2h,c
 30420   0094AC  0E01               	movlw	high _targetPos
 30421   0094AE  22DA               	addwfc	fsr2h,f,c
 30422   0094B0  C08D  FFDF         	movff	?_getNV,indf2
 30423   0094B4  0012               	return	
 30424   0094B6                     l19980:
 30425   0094B6  0100               	movlb	0	; () banked
 30426   0094B8  5191               	movf	setServoState@action& (0+255),w,b
 30427                           
 30428                           ; Switch size 1, requested type "simple"
 30429                           ; Number of cases is 2, Range of values is 1 to 2
 30430                           ; switch strategies available:
 30431                           ; Name         Instructions Cycles
 30432                           ; simple_byte            7     4 (average)
 30433                           ;	Chosen strategy is simple_byte
 30434   0094BA  0A01               	xorlw	1	; case 1
 30435   0094BC  B4D8               	btfsc	status,2,c
 30436   0094BE  D7D2               	goto	l19972
 30437   0094C0  0A03               	xorlw	3	; case 2
 30438   0094C2  A4D8               	btfss	status,2,c
 30439   0094C4  0012               	return	
 30440   0094C6  D7A5               	goto	l19966
 30441   0094C8                     __end_of_setServoState:
 30442                           	callstack 0
 30443                           
 30444 ;; *************** function _setMultiState *****************
 30445 ;; Defined at:
 30446 ;;		line 657 in file "../servo.c"
 30447 ;; Parameters:    Size  Location     Type
 30448 ;;  io              1    wreg     unsigned char 
 30449 ;;  action          1   49[BANK0 ] unsigned char 
 30450 ;; Auto vars:     Size  Location     Type
 30451 ;;  io              1   50[BANK0 ] unsigned char 
 30452 ;; Return value:  Size  Location     Type
 30453 ;;                  1    wreg      void 
 30454 ;; Registers used:
 30455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30456 ;; Tracked objects:
 30457 ;;		On entry : 0/0
 30458 ;;		On exit  : 0/0
 30459 ;;		Unchanged: 0/0
 30460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30461 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30464 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30465 ;;Total ram usage:        2 bytes
 30466 ;; Hardware stack levels used: 1
 30467 ;; Hardware stack levels required when called: 13
 30468 ;; This function calls:
 30469 ;;		_getNV
 30470 ;; This function is called by:
 30471 ;;		_APP_nvValueChanged
 30472 ;;		_setOutputState
 30473 ;; This function uses a non-reentrant model
 30474 ;;
 30475                           
 30476                           	psect	text112
 30477   0087E6                     __ptext112:
 30478                           	callstack 0
 30479   0087E6                     _setMultiState:
 30480                           	callstack 13
 30481                           
 30482                           ; BSR set to: 0
 30483                           ;incstack = 0
 30484                           ;setMultiState@io stored from wreg
 30485   0087E6  0100               	movlb	0	; () banked
 30486   0087E8  6F92               	movwf	setMultiState@io& (0+255),b
 30487                           
 30488                           ;../servo.c: 658:     switch (action) {
 30489   0087EA  D05E               	goto	l20052
 30490   0087EC                     l20038:
 30491                           
 30492                           ; BSR set to: 0
 30493                           ;../servo.c: 660:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30494   0087EC  5192               	movf	setMultiState@io& (0+255),w,b
 30495   0087EE  0D07               	mullw	7
 30496   0087F0  50F3               	movf	243,w,c
 30497   0087F2  0F13               	addlw	19
 30498   0087F4  ECD9  F05D         	call	_getNV
 30499   0087F8  0E20               	movlw	low _targetPos
 30500   0087FA  0100               	movlb	0	; () banked
 30501   0087FC  2592               	addwf	setMultiState@io& (0+255),w,b
 30502   0087FE  6ED9               	movwf	fsr2l,c
 30503   008800  6ADA               	clrf	fsr2h,c
 30504   008802  0E01               	movlw	high _targetPos
 30505   008804  22DA               	addwfc	fsr2h,f,c
 30506   008806  C08D  FFDF         	movff	?_getNV,indf2
 30507                           
 30508                           ;../servo.c: 661:             break;
 30509   00880A  0012               	return	
 30510   00880C                     l20040:
 30511                           
 30512                           ; BSR set to: 0
 30513                           ;../servo.c: 663:             targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 4));
 30514   00880C  5192               	movf	setMultiState@io& (0+255),w,b
 30515   00880E  0D07               	mullw	7
 30516   008810  50F3               	movf	243,w,c
 30517   008812  0F14               	addlw	20
 30518   008814  ECD9  F05D         	call	_getNV
 30519   008818  0E20               	movlw	low _targetPos
 30520   00881A  0100               	movlb	0	; () banked
 30521   00881C  2592               	addwf	setMultiState@io& (0+255),w,b
 30522   00881E  6ED9               	movwf	fsr2l,c
 30523   008820  6ADA               	clrf	fsr2h,c
 30524   008822  0E01               	movlw	high _targetPos
 30525   008824  22DA               	addwfc	fsr2h,f,c
 30526   008826  C08D  FFDF         	movff	?_getNV,indf2
 30527                           
 30528                           ;../servo.c: 664:             break;
 30529   00882A  0012               	return	
 30530   00882C                     l20042:
 30531                           
 30532                           ; BSR set to: 0
 30533                           ;../servo.c: 666:             if (getNV((16 + 7*(io) + 2)) >= 3) {
 30534   00882C  5192               	movf	setMultiState@io& (0+255),w,b
 30535   00882E  0D07               	mullw	7
 30536   008830  50F3               	movf	243,w,c
 30537   008832  0F12               	addlw	18
 30538   008834  ECD9  F05D         	call	_getNV
 30539   008838  0100               	movlb	0	; () banked
 30540   00883A  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30541   00883C  0012               	return	
 30542   00883E  518E               	movf	(?_getNV+1)& (0+255),w,b
 30543   008840  E104               	bnz	u20070
 30544   008842  0E03               	movlw	3
 30545   008844  5D8D               	subwf	?_getNV& (0+255),w,b
 30546   008846  A0D8               	btfss	status,0,c
 30547   008848  0012               	return	
 30548   00884A                     u20070:
 30549                           
 30550                           ; BSR set to: 0
 30551                           ;../servo.c: 667:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 5));
 30552   00884A  5192               	movf	setMultiState@io& (0+255),w,b
 30553   00884C  0D07               	mullw	7
 30554   00884E  50F3               	movf	243,w,c
 30555   008850  0F15               	addlw	21
 30556   008852  ECD9  F05D         	call	_getNV
 30557   008856  0E20               	movlw	low _targetPos
 30558   008858  0100               	movlb	0	; () banked
 30559   00885A  2592               	addwf	setMultiState@io& (0+255),w,b
 30560   00885C  6ED9               	movwf	fsr2l,c
 30561   00885E  6ADA               	clrf	fsr2h,c
 30562   008860  0E01               	movlw	high _targetPos
 30563   008862  22DA               	addwfc	fsr2h,f,c
 30564   008864  C08D  FFDF         	movff	?_getNV,indf2
 30565   008868  0012               	return	
 30566   00886A                     l20046:
 30567                           
 30568                           ; BSR set to: 0
 30569                           ;../servo.c: 671:             if (getNV((16 + 7*(io) + 2)) >= 4) {
 30570   00886A  5192               	movf	setMultiState@io& (0+255),w,b
 30571   00886C  0D07               	mullw	7
 30572   00886E  50F3               	movf	243,w,c
 30573   008870  0F12               	addlw	18
 30574   008872  ECD9  F05D         	call	_getNV
 30575   008876  0100               	movlb	0	; () banked
 30576   008878  BF8E               	btfsc	(?_getNV+1)& (0+255),7,b
 30577   00887A  0012               	return	
 30578   00887C  518E               	movf	(?_getNV+1)& (0+255),w,b
 30579   00887E  E104               	bnz	u20080
 30580   008880  0E04               	movlw	4
 30581   008882  5D8D               	subwf	?_getNV& (0+255),w,b
 30582   008884  A0D8               	btfss	status,0,c
 30583   008886  0012               	return	
 30584   008888                     u20080:
 30585                           
 30586                           ; BSR set to: 0
 30587                           ;../servo.c: 672:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 6));
 30588   008888  5192               	movf	setMultiState@io& (0+255),w,b
 30589   00888A  0D07               	mullw	7
 30590   00888C  50F3               	movf	243,w,c
 30591   00888E  0F16               	addlw	22
 30592   008890  ECD9  F05D         	call	_getNV
 30593   008894  0E20               	movlw	low _targetPos
 30594   008896  0100               	movlb	0	; () banked
 30595   008898  2592               	addwf	setMultiState@io& (0+255),w,b
 30596   00889A  6ED9               	movwf	fsr2l,c
 30597   00889C  6ADA               	clrf	fsr2h,c
 30598   00889E  0E01               	movlw	high _targetPos
 30599   0088A0  22DA               	addwfc	fsr2h,f,c
 30600   0088A2  C08D  FFDF         	movff	?_getNV,indf2
 30601   0088A6  0012               	return	
 30602   0088A8                     l20052:
 30603   0088A8  0100               	movlb	0	; () banked
 30604   0088AA  5191               	movf	setMultiState@action& (0+255),w,b
 30605                           
 30606                           ; Switch size 1, requested type "simple"
 30607                           ; Number of cases is 4, Range of values is 0 to 3
 30608                           ; switch strategies available:
 30609                           ; Name         Instructions Cycles
 30610                           ; simple_byte           13     7 (average)
 30611                           ;	Chosen strategy is simple_byte
 30612   0088AC  0A00               	xorlw	0	; case 0
 30613   0088AE  B4D8               	btfsc	status,2,c
 30614   0088B0  D79D               	goto	l20038
 30615   0088B2  0A01               	xorlw	1	; case 1
 30616   0088B4  B4D8               	btfsc	status,2,c
 30617   0088B6  D7AA               	goto	l20040
 30618   0088B8  0A03               	xorlw	3	; case 2
 30619   0088BA  B4D8               	btfsc	status,2,c
 30620   0088BC  D7B7               	goto	l20042
 30621   0088BE  0A01               	xorlw	1	; case 3
 30622   0088C0  A4D8               	btfss	status,2,c
 30623   0088C2  0012               	return	
 30624   0088C4  D7D2               	goto	l20046
 30625   0088C6                     __end_of_setMultiState:
 30626                           	callstack 0
 30627                           
 30628 ;; *************** function _setBounceState *****************
 30629 ;; Defined at:
 30630 ;;		line 633 in file "../servo.c"
 30631 ;; Parameters:    Size  Location     Type
 30632 ;;  io              1    wreg     unsigned char 
 30633 ;;  action          1   49[BANK0 ] unsigned char 
 30634 ;; Auto vars:     Size  Location     Type
 30635 ;;  io              1   50[BANK0 ] unsigned char 
 30636 ;; Return value:  Size  Location     Type
 30637 ;;                  1    wreg      void 
 30638 ;; Registers used:
 30639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30640 ;; Tracked objects:
 30641 ;;		On entry : 0/0
 30642 ;;		On exit  : 0/0
 30643 ;;		Unchanged: 0/0
 30644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30645 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30648 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30649 ;;Total ram usage:        2 bytes
 30650 ;; Hardware stack levels used: 1
 30651 ;; Hardware stack levels required when called: 13
 30652 ;; This function calls:
 30653 ;;		_getNV
 30654 ;; This function is called by:
 30655 ;;		_APP_nvValueChanged
 30656 ;;		_setOutputState
 30657 ;; This function uses a non-reentrant model
 30658 ;;
 30659                           
 30660                           	psect	text113
 30661   0094C8                     __ptext113:
 30662                           	callstack 0
 30663   0094C8                     _setBounceState:
 30664                           	callstack 13
 30665                           
 30666                           ; BSR set to: 0
 30667                           ;incstack = 0
 30668                           ;setBounceState@io stored from wreg
 30669   0094C8  0100               	movlb	0	; () banked
 30670   0094CA  6F92               	movwf	setBounceState@io& (0+255),b
 30671                           
 30672                           ;../servo.c: 634:     switch (action) {
 30673   0094CC  D052               	goto	l20022
 30674   0094CE                     l20008:
 30675                           
 30676                           ; BSR set to: 0
 30677                           ;../servo.c: 636:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30678   0094CE  5192               	movf	setBounceState@io& (0+255),w,b
 30679   0094D0  0D07               	mullw	7
 30680   0094D2  50F3               	movf	243,w,c
 30681   0094D4  0F11               	addlw	17
 30682   0094D6  ECD9  F05D         	call	_getNV
 30683   0094DA  0100               	movlb	0	; () banked
 30684   0094DC  A18D               	btfss	?_getNV& (0+255),0,b
 30685   0094DE  D010               	goto	l20012
 30686                           
 30687                           ; BSR set to: 0
 30688                           ;../servo.c: 637:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30689   0094E0  5192               	movf	setBounceState@io& (0+255),w,b
 30690   0094E2  0D07               	mullw	7
 30691   0094E4  50F3               	movf	243,w,c
 30692   0094E6  0F12               	addlw	18
 30693   0094E8  ECD9  F05D         	call	_getNV
 30694   0094EC  0E20               	movlw	low _targetPos
 30695   0094EE  0100               	movlb	0	; () banked
 30696   0094F0  2592               	addwf	setBounceState@io& (0+255),w,b
 30697   0094F2  6ED9               	movwf	fsr2l,c
 30698   0094F4  6ADA               	clrf	fsr2h,c
 30699   0094F6  0E01               	movlw	high _targetPos
 30700   0094F8  22DA               	addwfc	fsr2h,f,c
 30701   0094FA  C08D  FFDF         	movff	?_getNV,indf2
 30702                           
 30703                           ;../servo.c: 638:             } else {
 30704   0094FE  0012               	return	
 30705   009500                     l20012:
 30706                           
 30707                           ; BSR set to: 0
 30708                           ;../servo.c: 639:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30709   009500  5192               	movf	setBounceState@io& (0+255),w,b
 30710   009502  0D07               	mullw	7
 30711   009504  50F3               	movf	243,w,c
 30712   009506  0F13               	addlw	19
 30713   009508  ECD9  F05D         	call	_getNV
 30714   00950C  0E20               	movlw	low _targetPos
 30715   00950E  0100               	movlb	0	; () banked
 30716   009510  2592               	addwf	setBounceState@io& (0+255),w,b
 30717   009512  6ED9               	movwf	fsr2l,c
 30718   009514  6ADA               	clrf	fsr2h,c
 30719   009516  0E01               	movlw	high _targetPos
 30720   009518  22DA               	addwfc	fsr2h,f,c
 30721   00951A  C08D  FFDF         	movff	?_getNV,indf2
 30722   00951E  0012               	return	
 30723   009520                     l20014:
 30724                           
 30725                           ; BSR set to: 0
 30726                           ;../servo.c: 643:             if (getNV((16 + 7*(io) + 1)) & 0x01) {
 30727   009520  5192               	movf	setBounceState@io& (0+255),w,b
 30728   009522  0D07               	mullw	7
 30729   009524  50F3               	movf	243,w,c
 30730   009526  0F11               	addlw	17
 30731   009528  ECD9  F05D         	call	_getNV
 30732   00952C  0100               	movlb	0	; () banked
 30733   00952E  A18D               	btfss	?_getNV& (0+255),0,b
 30734   009530  D010               	goto	l20018
 30735                           
 30736                           ; BSR set to: 0
 30737                           ;../servo.c: 644:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 3));
 30738   009532  5192               	movf	setBounceState@io& (0+255),w,b
 30739   009534  0D07               	mullw	7
 30740   009536  50F3               	movf	243,w,c
 30741   009538  0F13               	addlw	19
 30742   00953A  ECD9  F05D         	call	_getNV
 30743   00953E  0E20               	movlw	low _targetPos
 30744   009540  0100               	movlb	0	; () banked
 30745   009542  2592               	addwf	setBounceState@io& (0+255),w,b
 30746   009544  6ED9               	movwf	fsr2l,c
 30747   009546  6ADA               	clrf	fsr2h,c
 30748   009548  0E01               	movlw	high _targetPos
 30749   00954A  22DA               	addwfc	fsr2h,f,c
 30750   00954C  C08D  FFDF         	movff	?_getNV,indf2
 30751                           
 30752                           ;../servo.c: 645:             } else {
 30753   009550  0012               	return	
 30754   009552                     l20018:
 30755                           
 30756                           ; BSR set to: 0
 30757                           ;../servo.c: 646:                 targetPos[io] = (uint8_t)getNV((16 + 7*(io) + 2));
 30758   009552  5192               	movf	setBounceState@io& (0+255),w,b
 30759   009554  0D07               	mullw	7
 30760   009556  50F3               	movf	243,w,c
 30761   009558  0F12               	addlw	18
 30762   00955A  ECD9  F05D         	call	_getNV
 30763   00955E  0E20               	movlw	low _targetPos
 30764   009560  0100               	movlb	0	; () banked
 30765   009562  2592               	addwf	setBounceState@io& (0+255),w,b
 30766   009564  6ED9               	movwf	fsr2l,c
 30767   009566  6ADA               	clrf	fsr2h,c
 30768   009568  0E01               	movlw	high _targetPos
 30769   00956A  22DA               	addwfc	fsr2h,f,c
 30770   00956C  C08D  FFDF         	movff	?_getNV,indf2
 30771   009570  0012               	return	
 30772   009572                     l20022:
 30773   009572  0100               	movlb	0	; () banked
 30774   009574  5191               	movf	setBounceState@action& (0+255),w,b
 30775                           
 30776                           ; Switch size 1, requested type "simple"
 30777                           ; Number of cases is 2, Range of values is 1 to 2
 30778                           ; switch strategies available:
 30779                           ; Name         Instructions Cycles
 30780                           ; simple_byte            7     4 (average)
 30781                           ;	Chosen strategy is simple_byte
 30782   009576  0A01               	xorlw	1	; case 1
 30783   009578  B4D8               	btfsc	status,2,c
 30784   00957A  D7D2               	goto	l20014
 30785   00957C  0A03               	xorlw	3	; case 2
 30786   00957E  A4D8               	btfss	status,2,c
 30787   009580  0012               	return	
 30788   009582  D7A5               	goto	l20008
 30789   009584                     __end_of_setBounceState:
 30790                           	callstack 0
 30791                           
 30792 ;; *************** function _needsStarting *****************
 30793 ;; Defined at:
 30794 ;;		line 182 in file "../outputs.c"
 30795 ;; Parameters:    Size  Location     Type
 30796 ;;  io              1    wreg     unsigned char 
 30797 ;;  act             1   45[BANK0 ] unsigned char 
 30798 ;;  type            1   46[BANK0 ] unsigned char 
 30799 ;; Auto vars:     Size  Location     Type
 30800 ;;  io              1   49[BANK0 ] unsigned char 
 30801 ;; Return value:  Size  Location     Type
 30802 ;;                  1    wreg      enum E12761
 30803 ;; Registers used:
 30804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30805 ;; Tracked objects:
 30806 ;;		On entry : 0/0
 30807 ;;		On exit  : 0/0
 30808 ;;		Unchanged: 0/0
 30809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30810 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30813 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30814 ;;Total ram usage:        5 bytes
 30815 ;; Hardware stack levels used: 1
 30816 ;; Hardware stack levels required when called: 12
 30817 ;; This function calls:
 30818 ;;		Nothing
 30819 ;; This function is called by:
 30820 ;;		_processActions
 30821 ;; This function uses a non-reentrant model
 30822 ;;
 30823                           
 30824                           	psect	text114
 30825   00A6D6                     __ptext114:
 30826                           	callstack 0
 30827   00A6D6                     _needsStarting:
 30828                           	callstack 16
 30829                           
 30830                           ; BSR set to: 0
 30831                           ;incstack = 0
 30832                           ;needsStarting@io stored from wreg
 30833   00A6D6  0100               	movlb	0	; () banked
 30834   00A6D8  6F91               	movwf	needsStarting@io& (0+255),b
 30835                           
 30836                           ;../outputs.c: 183:     switch(type) {
 30837   00A6DA  D02B               	goto	l21386
 30838   00A6DC                     l21366:
 30839                           
 30840                           ; BSR set to: 0
 30841                           ;../outputs.c: 186:             return FALSE;
 30842   00A6DC  0E00               	movlw	0
 30843   00A6DE  0012               	return	
 30844   00A6E0                     l21370:
 30845                           
 30846                           ; BSR set to: 0
 30847                           ;../outputs.c: 195:             return (pulseDelays[io] == 0);
 30848   00A6E0  0EA4               	movlw	low _pulseDelays
 30849   00A6E2  2591               	addwf	needsStarting@io& (0+255),w,b
 30850   00A6E4  6ED9               	movwf	fsr2l,c
 30851   00A6E6  6ADA               	clrf	fsr2h,c
 30852   00A6E8  0E02               	movlw	high _pulseDelays
 30853   00A6EA  22DA               	addwfc	fsr2h,f,c
 30854   00A6EC  50DF               	movf	indf2,w,c
 30855   00A6EE  A4D8               	btfss	status,2,c
 30856   00A6F0  D002               	goto	u21930
 30857   00A6F2  0E01               	movlw	1
 30858   00A6F4  0012               	return	
 30859   00A6F6                     u21930:
 30860   00A6F6  0E00               	movlw	0
 30861   00A6F8  0012               	return	
 30862   00A6FA                     l21374:
 30863                           
 30864                           ; BSR set to: 0
 30865                           ;../outputs.c: 205:             if (targetPos[io] == currentPos[io]) {
 30866   00A6FA  5191               	movf	needsStarting@io& (0+255),w,b
 30867   00A6FC  0FA9               	addlw	low _currentPos
 30868   00A6FE  6ED9               	movwf	fsr2l,c
 30869   00A700  6ADA               	clrf	fsr2h,c
 30870   00A702  0E20               	movlw	low _targetPos
 30871   00A704  2591               	addwf	needsStarting@io& (0+255),w,b
 30872   00A706  6EE1               	movwf	fsr1l,c
 30873   00A708  6AE2               	clrf	fsr1h,c
 30874   00A70A  0E01               	movlw	high _targetPos
 30875   00A70C  22E2               	addwfc	fsr1h,f,c
 30876   00A70E  50DE               	movf	postinc2,w,c
 30877   00A710  18E6               	xorwf	postinc1,w,c
 30878   00A712  B4D8               	btfsc	status,2,c
 30879   00A714  D7E3               	goto	l21366
 30880                           
 30881                           ; BSR set to: 0
 30882                           ;../outputs.c: 209:             return (servoState[io] != SS_MOVING);
 30883   00A716  0E10               	movlw	low _servoState
 30884   00A718  2591               	addwf	needsStarting@io& (0+255),w,b
 30885   00A71A  6ED9               	movwf	fsr2l,c
 30886   00A71C  6ADA               	clrf	fsr2h,c
 30887   00A71E  0E01               	movlw	high _servoState
 30888   00A720  22DA               	addwfc	fsr2h,f,c
 30889   00A722  0E02               	movlw	2
 30890   00A724  18DE               	xorwf	postinc2,w,c
 30891   00A726  B4D8               	btfsc	status,2,c
 30892   00A728  D002               	goto	u21960
 30893   00A72A  0E01               	movlw	1
 30894   00A72C  0012               	return	
 30895   00A72E                     u21960:
 30896   00A72E  0E00               	movlw	0
 30897   00A730  0012               	return	
 30898   00A732                     l21386:
 30899   00A732  0100               	movlb	0	; () banked
 30900   00A734  518E               	movf	needsStarting@type& (0+255),w,b
 30901                           
 30902                           ; Switch size 1, requested type "simple"
 30903                           ; Number of cases is 5, Range of values is 0 to 4
 30904                           ; switch strategies available:
 30905                           ; Name         Instructions Cycles
 30906                           ; simple_byte           16     9 (average)
 30907                           ;	Chosen strategy is simple_byte
 30908   00A736  0A00               	xorlw	0	; case 0
 30909   00A738  B4D8               	btfsc	status,2,c
 30910   00A73A  D7D0               	goto	l21366
 30911   00A73C  0A01               	xorlw	1	; case 1
 30912   00A73E  B4D8               	btfsc	status,2,c
 30913   00A740  D7CF               	goto	l21370
 30914   00A742  0A03               	xorlw	3	; case 2
 30915   00A744  B4D8               	btfsc	status,2,c
 30916   00A746  D7D9               	goto	l21374
 30917   00A748  0A01               	xorlw	1	; case 3
 30918   00A74A  B4D8               	btfsc	status,2,c
 30919   00A74C  D7D6               	goto	l21374
 30920   00A74E  0A07               	xorlw	7	; case 4
 30921   00A750  B4D8               	btfsc	status,2,c
 30922   00A752  D7D3               	goto	l21374
 30923                           
 30924                           ; BSR set to: 0
 30925                           ;../outputs.c: 212:     return TRUE;
 30926   00A754  0E01               	movlw	1
 30927                           
 30928                           ; BSR set to: 0
 30929   00A756  0012               	return		;funcret
 30930   00A758                     __end_of_needsStarting:
 30931                           	callstack 0
 30932                           
 30933 ;; *************** function _getTwoAction *****************
 30934 ;; Defined at:
 30935 ;;		line 414 in file "../event_consumerDualActionQueue.c"
 30936 ;; Parameters:    Size  Location     Type
 30937 ;;		None
 30938 ;; Auto vars:     Size  Location     Type
 30939 ;;		None
 30940 ;; Return value:  Size  Location     Type
 30941 ;;                  1    wreg      unsigned char 
 30942 ;; Registers used:
 30943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30944 ;; Tracked objects:
 30945 ;;		On entry : 0/0
 30946 ;;		On exit  : 0/0
 30947 ;;		Unchanged: 0/0
 30948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30953 ;;Total ram usage:        0 bytes
 30954 ;; Hardware stack levels used: 1
 30955 ;; Hardware stack levels required when called: 13
 30956 ;; This function calls:
 30957 ;;		_peekTwoActionQueue
 30958 ;; This function is called by:
 30959 ;;		_processActions
 30960 ;; This function uses a non-reentrant model
 30961 ;;
 30962                           
 30963                           	psect	text115
 30964   00C506                     __ptext115:
 30965                           	callstack 0
 30966   00C506                     _getTwoAction:
 30967                           	callstack 15
 30968                           
 30969                           ;../event_consumerDualActionQueue.c: 415:  return peekTwoActionQueue(0);
 30970                           
 30971                           ; BSR set to: 0
 30972                           ;incstack = 0
 30973   00C506  0E00               	movlw	0
 30974   00C508  EC5E  F052         	call	_peekTwoActionQueue
 30975   00C50C  0012               	return		;funcret
 30976   00C50E                     __end_of_getTwoAction:
 30977                           	callstack 0
 30978                           
 30979 ;; *************** function _peekTwoActionQueue *****************
 30980 ;; Defined at:
 30981 ;;		line 453 in file "../event_consumerDualActionQueue.c"
 30982 ;; Parameters:    Size  Location     Type
 30983 ;;  index           1    wreg     unsigned char 
 30984 ;; Auto vars:     Size  Location     Type
 30985 ;;  index           1   46[BANK0 ] unsigned char 
 30986 ;;  qty             1   45[BANK0 ] unsigned char 
 30987 ;; Return value:  Size  Location     Type
 30988 ;;                  1    wreg      unsigned char 
 30989 ;; Registers used:
 30990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30991 ;; Tracked objects:
 30992 ;;		On entry : 0/0
 30993 ;;		On exit  : 0/0
 30994 ;;		Unchanged: 0/0
 30995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30997 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30999 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31000 ;;Total ram usage:        2 bytes
 31001 ;; Hardware stack levels used: 1
 31002 ;; Hardware stack levels required when called: 12
 31003 ;; This function calls:
 31004 ;;		Nothing
 31005 ;; This function is called by:
 31006 ;;		_getTwoAction
 31007 ;;		_processActions
 31008 ;; This function uses a non-reentrant model
 31009 ;;
 31010                           
 31011                           	psect	text116
 31012   00A4BC                     __ptext116:
 31013                           	callstack 0
 31014   00A4BC                     _peekTwoActionQueue:
 31015                           	callstack 16
 31016                           
 31017                           ;incstack = 0
 31018                           ;peekTwoActionQueue@index stored from wreg
 31019   00A4BC  0100               	movlb	0	; () banked
 31020   00A4BE  6F8E               	movwf	peekTwoActionQueue@index& (0+255),b
 31021                           
 31022                           ;../event_consumerDualActionQueue.c: 454:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 455:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31023   00A4C0  0100               	movlb	0	; () banked
 31024   00A4C2  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31025   00A4C4  5DCC               	subwf	_expeditedWriteIndex& (0+255),w,b
 31026   00A4C6  0B07               	andlw	7
 31027   00A4C8  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31028                           
 31029                           ;../event_consumerDualActionQueue.c: 456:     if (index < qty) {
 31030   00A4CA  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31031   00A4CC  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31032   00A4CE  B0D8               	btfsc	status,0,c
 31033   00A4D0  D019               	goto	l20460
 31034                           
 31035                           ; BSR set to: 0
 31036                           ;../event_consumerDualActionQueue.c: 457:         if (expeditedReadIndex == expeditedWri
      +                          teIndex) return 0;
 31037   00A4D2  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 31038   00A4D4  19CD               	xorwf	_expeditedReadIndex& (0+255),w,b
 31039   00A4D6  A4D8               	btfss	status,2,c
 31040   00A4D8  D002               	goto	l20448
 31041   00A4DA                     u20840:
 31042                           
 31043                           ; BSR set to: 0
 31044   00A4DA  0E00               	movlw	0
 31045   00A4DC  0012               	return	
 31046   00A4DE                     l20448:
 31047                           
 31048                           ; BSR set to: 0
 31049                           ;../event_consumerDualActionQueue.c: 458:         index += expeditedReadIndex;
 31050   00A4DE  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31051   00A4E0  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31052                           
 31053                           ;../event_consumerDualActionQueue.c: 459:         if (index >= 8) {
 31054   00A4E2  0E07               	movlw	7
 31055   00A4E4  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31056   00A4E6  D002               	goto	l546
 31057                           
 31058                           ; BSR set to: 0
 31059                           ;../event_consumerDualActionQueue.c: 460:             index -= 8;
 31060   00A4E8  0E08               	movlw	8
 31061   00A4EA  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31062   00A4EC                     l546:
 31063                           
 31064                           ; BSR set to: 0
 31065                           ;../event_consumerDualActionQueue.c: 462:         if (index == expeditedWriteIndex) retu
      +                          rn 0;
 31066   00A4EC  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 31067   00A4EE  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31068   00A4F0  B4D8               	btfsc	status,2,c
 31069   00A4F2  D7F3               	goto	u20840
 31070                           
 31071                           ; BSR set to: 0
 31072                           ;../event_consumerDualActionQueue.c: 463:         return expeditedQueueBuf[index];
 31073   00A4F4  0EC4               	movlw	low _expeditedQueueBuf
 31074   00A4F6  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31075   00A4F8  6ED9               	movwf	fsr2l,c
 31076   00A4FA  6ADA               	clrf	fsr2h,c
 31077   00A4FC  0E02               	movlw	high _expeditedQueueBuf
 31078   00A4FE  22DA               	addwfc	fsr2h,f,c
 31079   00A500  50DF               	movf	indf2,w,c
 31080   00A502  0012               	return	
 31081   00A504                     l20460:
 31082                           
 31083                           ; BSR set to: 0
 31084                           ;../event_consumerDualActionQueue.c: 465:     index -= qty;
 31085   00A504  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31086   00A506  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31087                           
 31088                           ;../event_consumerDualActionQueue.c: 466:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31089   00A508  51CF               	movf	_normalReadIndex& (0+255),w,b
 31090   00A50A  5DCE               	subwf	_normalWriteIndex& (0+255),w,b
 31091   00A50C  0B3F               	andlw	63
 31092   00A50E  6F8D               	movwf	peekTwoActionQueue@qty& (0+255),b
 31093                           
 31094                           ;../event_consumerDualActionQueue.c: 467:     if (index < qty) {
 31095   00A510  518D               	movf	peekTwoActionQueue@qty& (0+255),w,b
 31096   00A512  5D8E               	subwf	peekTwoActionQueue@index& (0+255),w,b
 31097   00A514  B0D8               	btfsc	status,0,c
 31098   00A516  D7E1               	goto	u20840
 31099                           
 31100                           ; BSR set to: 0
 31101                           ;../event_consumerDualActionQueue.c: 468:         if (normalReadIndex == normalWriteInde
      +                          x) return 0;
 31102   00A518  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31103   00A51A  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 31104   00A51C  B4D8               	btfsc	status,2,c
 31105   00A51E  D7DD               	goto	u20840
 31106                           
 31107                           ; BSR set to: 0
 31108                           ;../event_consumerDualActionQueue.c: 469:         index += normalReadIndex;
 31109   00A520  51CF               	movf	_normalReadIndex& (0+255),w,b
 31110   00A522  278E               	addwf	peekTwoActionQueue@index& (0+255),f,b
 31111                           
 31112                           ;../event_consumerDualActionQueue.c: 470:         if (index >= 64) {
 31113   00A524  0E3F               	movlw	63
 31114   00A526  658E               	cpfsgt	peekTwoActionQueue@index& (0+255),b
 31115   00A528  D002               	goto	l550
 31116                           
 31117                           ; BSR set to: 0
 31118                           ;../event_consumerDualActionQueue.c: 471:             index -= 64;
 31119   00A52A  0E40               	movlw	64
 31120   00A52C  5F8E               	subwf	peekTwoActionQueue@index& (0+255),f,b
 31121   00A52E                     l550:
 31122                           
 31123                           ; BSR set to: 0
 31124                           ;../event_consumerDualActionQueue.c: 473:         if (index == normalWriteIndex) return 
      +                          0;
 31125   00A52E  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31126   00A530  198E               	xorwf	peekTwoActionQueue@index& (0+255),w,b
 31127   00A532  B4D8               	btfsc	status,2,c
 31128   00A534  D7D2               	goto	u20840
 31129                           
 31130                           ; BSR set to: 0
 31131                           ;../event_consumerDualActionQueue.c: 474:         return normalQueueBuf[index];
 31132   00A536  0E80               	movlw	low _normalQueueBuf
 31133   00A538  258E               	addwf	peekTwoActionQueue@index& (0+255),w,b
 31134   00A53A  6ED9               	movwf	fsr2l,c
 31135   00A53C  6ADA               	clrf	fsr2h,c
 31136   00A53E  0E04               	movlw	high _normalQueueBuf
 31137   00A540  22DA               	addwfc	fsr2h,f,c
 31138   00A542  50DF               	movf	indf2,w,c
 31139                           
 31140                           ; BSR set to: 0
 31141   00A544  0012               	return		;funcret
 31142   00A546                     __end_of_peekTwoActionQueue:
 31143                           	callstack 0
 31144                           
 31145 ;; *************** function _finaliseOutput *****************
 31146 ;; Defined at:
 31147 ;;		line 253 in file "../outputs.c"
 31148 ;; Parameters:    Size  Location     Type
 31149 ;;  io              1    wreg     unsigned char 
 31150 ;;  type            1   45[BANK0 ] unsigned char 
 31151 ;; Auto vars:     Size  Location     Type
 31152 ;;  io              1    0[COMRAM] unsigned char 
 31153 ;; Return value:  Size  Location     Type
 31154 ;;                  1    wreg      void 
 31155 ;; Registers used:
 31156 ;;		wreg, status,2, status,0
 31157 ;; Tracked objects:
 31158 ;;		On entry : 0/0
 31159 ;;		On exit  : 0/0
 31160 ;;		Unchanged: 0/0
 31161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31162 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31165 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31166 ;;Total ram usage:        1 bytes
 31167 ;; Hardware stack levels used: 1
 31168 ;; Hardware stack levels required when called: 12
 31169 ;; This function calls:
 31170 ;;		Nothing
 31171 ;; This function is called by:
 31172 ;;		_processActions
 31173 ;; This function uses a non-reentrant model
 31174 ;;
 31175                           
 31176                           	psect	text117
 31177   00C50E                     __ptext117:
 31178                           	callstack 0
 31179   00C50E                     _finaliseOutput:
 31180                           	callstack 16
 31181                           
 31182                           ;../outputs.c: 254:     switch(type) {
 31183                           
 31184                           ; BSR set to: 0
 31185                           ;incstack = 0
 31186   00C50E  0100               	movlb	0	; () banked
 31187   00C510  518D               	movf	finaliseOutput@type& (0+255),w,b
 31188                           
 31189                           ; Switch size 1, requested type "simple"
 31190                           ; Number of cases is 1, Range of values is 1 to 1
 31191                           ; switch strategies available:
 31192                           ; Name         Instructions Cycles
 31193                           ; simple_byte            4     3 (average)
 31194                           ;	Chosen strategy is simple_byte
 31195   00C512  0A01               	xorlw	1	; case 1
 31196   00C514  0012               	return	
 31197   00C516                     __end_of_finaliseOutput:
 31198                           	callstack 0
 31199                           
 31200 ;; *************** function _doWait *****************
 31201 ;; Defined at:
 31202 ;;		line 337 in file "../universalEvents.c"
 31203 ;; Parameters:    Size  Location     Type
 31204 ;;  duration        2   61[BANK0 ] unsigned short 
 31205 ;; Auto vars:     Size  Location     Type
 31206 ;;		None
 31207 ;; Return value:  Size  Location     Type
 31208 ;;                  1    wreg      void 
 31209 ;; Registers used:
 31210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31211 ;; Tracked objects:
 31212 ;;		On entry : 0/0
 31213 ;;		On exit  : 0/0
 31214 ;;		Unchanged: 0/0
 31215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31218 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31219 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31220 ;;Total ram usage:        6 bytes
 31221 ;; Hardware stack levels used: 1
 31222 ;; Hardware stack levels required when called: 14
 31223 ;; This function calls:
 31224 ;;		___lmul
 31225 ;;		_doneTwoAction
 31226 ;;		_tickGet
 31227 ;; This function is called by:
 31228 ;;		_processActions
 31229 ;; This function uses a non-reentrant model
 31230 ;;
 31231                           
 31232                           	psect	text118
 31233   00A430                     __ptext118:
 31234                           	callstack 0
 31235   00A430                     _doWait:
 31236                           	callstack 14
 31237                           
 31238                           ;../universalEvents.c: 339:     if (startWait.val == 0) {
 31239                           
 31240                           ; BSR set to: 0
 31241                           ;incstack = 0
 31242   00A430  5037               	movf	_startWait^0,w,c
 31243   00A432  1038               	iorwf	(_startWait+1)^0,w,c
 31244   00A434  1039               	iorwf	(_startWait+2)^0,w,c
 31245   00A436  103A               	iorwf	(_startWait+3)^0,w,c
 31246   00A438  A4D8               	btfss	status,2,c
 31247   00A43A  D00B               	goto	l21338
 31248                           
 31249                           ;../universalEvents.c: 340:         startWait.val = tickGet();
 31250   00A43C  EC6B  F05A         	call	_tickGet	;wreg free
 31251   00A440  C08D  F037         	movff	?_tickGet,_startWait
 31252   00A444  C08E  F038         	movff	?_tickGet+1,_startWait+1
 31253   00A448  C08F  F039         	movff	?_tickGet+2,_startWait+2
 31254   00A44C  C090  F03A         	movff	?_tickGet+3,_startWait+3
 31255   00A450  0012               	return	
 31256   00A452                     l21338:
 31257                           
 31258                           ;../universalEvents.c: 344:         if (((tickGet() - startWait.val) > ((long)duration *
      +                           (long)(62500/10)))) {
 31259   00A452  EC6B  F05A         	call	_tickGet	;wreg free
 31260   00A456  5037               	movf	_startWait^0,w,c
 31261   00A458  0100               	movlb	0	; () banked
 31262   00A45A  5D8D               	subwf	?_tickGet& (0+255),w,b
 31263   00A45C  6F9F               	movwf	??_doWait& (0+255),b
 31264   00A45E  5038               	movf	(_startWait+1)^0,w,c
 31265   00A460  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 31266   00A462  6FA0               	movwf	(??_doWait+1)& (0+255),b
 31267   00A464  5039               	movf	(_startWait+2)^0,w,c
 31268   00A466  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 31269   00A468  6FA1               	movwf	(??_doWait+2)& (0+255),b
 31270   00A46A  503A               	movf	(_startWait+3)^0,w,c
 31271   00A46C  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 31272   00A46E  6FA2               	movwf	(??_doWait+3)& (0+255),b
 31273   00A470  C09D  F091         	movff	doWait@duration,___lmul@multiplier
 31274   00A474  C09E  F092         	movff	doWait@duration+1,___lmul@multiplier+1
 31275   00A478  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 31276   00A47A  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 31277   00A47C  0E6A               	movlw	106
 31278   00A47E  6F95               	movwf	___lmul@multiplicand& (0+255),b
 31279   00A480  0E18               	movlw	24
 31280   00A482  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31281   00A484  0E00               	movlw	0
 31282   00A486  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31283   00A488  0E00               	movlw	0
 31284   00A48A  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31285   00A48C  EC97  F05A         	call	___lmul	;wreg free
 31286   00A490  0100               	movlb	0	; () banked
 31287   00A492  519F               	movf	??_doWait& (0+255),w,b
 31288   00A494  5D91               	subwf	?___lmul& (0+255),w,b
 31289   00A496  51A0               	movf	(??_doWait+1)& (0+255),w,b
 31290   00A498  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 31291   00A49A  51A1               	movf	(??_doWait+2)& (0+255),w,b
 31292   00A49C  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 31293   00A49E  51A2               	movf	(??_doWait+3)& (0+255),w,b
 31294   00A4A0  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 31295   00A4A2  B0D8               	btfsc	status,0,c
 31296   00A4A4  0012               	return	
 31297                           
 31298                           ; BSR set to: 0
 31299                           ;../universalEvents.c: 345:             doneTwoAction();
 31300   00A4A6  EC94  F062         	call	_doneTwoAction	;wreg free
 31301                           
 31302                           ;../universalEvents.c: 346:             startWait.val = 0;
 31303   00A4AA  0E00               	movlw	0
 31304   00A4AC  6E37               	movwf	_startWait^0,c
 31305   00A4AE  0E00               	movlw	0
 31306   00A4B0  6E38               	movwf	(_startWait+1)^0,c
 31307   00A4B2  0E00               	movlw	0
 31308   00A4B4  6E39               	movwf	(_startWait+2)^0,c
 31309   00A4B6  0E00               	movlw	0
 31310   00A4B8  6E3A               	movwf	(_startWait+3)^0,c
 31311   00A4BA  0012               	return		;funcret
 31312   00A4BC                     __end_of_doWait:
 31313                           	callstack 0
 31314                           
 31315 ;; *************** function _doneTwoAction *****************
 31316 ;; Defined at:
 31317 ;;		line 444 in file "../event_consumerDualActionQueue.c"
 31318 ;; Parameters:    Size  Location     Type
 31319 ;;		None
 31320 ;; Auto vars:     Size  Location     Type
 31321 ;;		None
 31322 ;; Return value:  Size  Location     Type
 31323 ;;                  1    wreg      void 
 31324 ;; Registers used:
 31325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31326 ;; Tracked objects:
 31327 ;;		On entry : 0/0
 31328 ;;		On exit  : 0/0
 31329 ;;		Unchanged: 0/0
 31330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31335 ;;Total ram usage:        0 bytes
 31336 ;; Hardware stack levels used: 1
 31337 ;; Hardware stack levels required when called: 13
 31338 ;; This function calls:
 31339 ;;		_popTwoAction
 31340 ;; This function is called by:
 31341 ;;		_processActions
 31342 ;;		_doWait
 31343 ;; This function uses a non-reentrant model
 31344 ;;
 31345                           
 31346                           	psect	text119
 31347   00C528                     __ptext119:
 31348                           	callstack 0
 31349   00C528                     _doneTwoAction:
 31350                           	callstack 15
 31351                           
 31352                           ;../event_consumerDualActionQueue.c: 445:  popTwoAction();
 31353                           
 31354                           ;incstack = 0
 31355   00C528  ECDD  F05F         	call	_popTwoAction	;wreg free
 31356   00C52C  0012               	return		;funcret
 31357   00C52E                     __end_of_doneTwoAction:
 31358                           	callstack 0
 31359                           
 31360 ;; *************** function _popTwoAction *****************
 31361 ;; Defined at:
 31362 ;;		line 423 in file "../event_consumerDualActionQueue.c"
 31363 ;; Parameters:    Size  Location     Type
 31364 ;;		None
 31365 ;; Auto vars:     Size  Location     Type
 31366 ;;  ret             1    0        unsigned char 
 31367 ;; Return value:  Size  Location     Type
 31368 ;;                  1    wreg      unsigned char 
 31369 ;; Registers used:
 31370 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31371 ;; Tracked objects:
 31372 ;;		On entry : 0/0
 31373 ;;		On exit  : 0/0
 31374 ;;		Unchanged: 0/0
 31375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31380 ;;Total ram usage:        0 bytes
 31381 ;; Hardware stack levels used: 1
 31382 ;; Hardware stack levels required when called: 12
 31383 ;; This function calls:
 31384 ;;		Nothing
 31385 ;; This function is called by:
 31386 ;;		_doneTwoAction
 31387 ;; This function uses a non-reentrant model
 31388 ;;
 31389                           
 31390                           	psect	text120
 31391   00BFBA                     __ptext120:
 31392                           	callstack 0
 31393   00BFBA                     _popTwoAction:
 31394                           	callstack 15
 31395                           
 31396                           ;../event_consumerDualActionQueue.c: 424:     uint8_t ret;;../event_consumerDualActionQu
      +                          eue.c: 426:  if (expeditedWriteIndex != expeditedReadIndex) {
 31397                           
 31398                           ;incstack = 0
 31399   00BFBA  0100               	movlb	0	; () banked
 31400   00BFBC  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31401   00BFBE  19CC               	xorwf	_expeditedWriteIndex& (0+255),w,b
 31402   00BFC0  B4D8               	btfsc	status,2,c
 31403   00BFC2  D007               	goto	l19900
 31404                           
 31405                           ; BSR set to: 0
 31406                           
 31407                           ; BSR set to: 0
 31408   00BFC4  2BCD               	incf	_expeditedReadIndex& (0+255),f,b
 31409                           
 31410                           ; BSR set to: 0
 31411                           ;../event_consumerDualActionQueue.c: 429:         if (expeditedReadIndex >= 8) expedited
      +                          ReadIndex = 0;
 31412   00BFC6  0E07               	movlw	7
 31413   00BFC8  65CD               	cpfsgt	_expeditedReadIndex& (0+255),b
 31414   00BFCA  0012               	return	
 31415                           
 31416                           ; BSR set to: 0
 31417   00BFCC  0E00               	movlw	0
 31418   00BFCE  6FCD               	movwf	_expeditedReadIndex& (0+255),b
 31419   00BFD0  0012               	return	
 31420   00BFD2                     l19900:
 31421                           
 31422                           ; BSR set to: 0
 31423                           ;../event_consumerDualActionQueue.c: 433:  if (normalWriteIndex == normalReadIndex) {
 31424   00BFD2  51CF               	movf	_normalReadIndex& (0+255),w,b
 31425   00BFD4  19CE               	xorwf	_normalWriteIndex& (0+255),w,b
 31426   00BFD6  B4D8               	btfsc	status,2,c
 31427   00BFD8  0012               	return	
 31428                           
 31429                           ; BSR set to: 0
 31430                           
 31431                           ; BSR set to: 0
 31432   00BFDA  2BCF               	incf	_normalReadIndex& (0+255),f,b
 31433                           
 31434                           ; BSR set to: 0
 31435                           ;../event_consumerDualActionQueue.c: 437:  if (normalReadIndex >= 64) normalReadIndex = 
      +                          0;
 31436   00BFDC  0E3F               	movlw	63
 31437   00BFDE  65CF               	cpfsgt	_normalReadIndex& (0+255),b
 31438   00BFE0  0012               	return	
 31439                           
 31440                           ; BSR set to: 0
 31441   00BFE2  0E00               	movlw	0
 31442   00BFE4  6FCF               	movwf	_normalReadIndex& (0+255),b
 31443                           
 31444                           ; BSR set to: 0
 31445   00BFE6  0012               	return		;funcret
 31446   00BFE8                     __end_of_popTwoAction:
 31447                           	callstack 0
 31448                           
 31449 ;; *************** function _doSOD *****************
 31450 ;; Defined at:
 31451 ;;		line 387 in file "../universalEvents.c"
 31452 ;; Parameters:    Size  Location     Type
 31453 ;;		None
 31454 ;; Auto vars:     Size  Location     Type
 31455 ;;		None
 31456 ;; Return value:  Size  Location     Type
 31457 ;;                  1    wreg      void 
 31458 ;; Registers used:
 31459 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31460 ;; Tracked objects:
 31461 ;;		On entry : 0/0
 31462 ;;		On exit  : 0/0
 31463 ;;		Unchanged: 0/0
 31464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31469 ;;Total ram usage:        0 bytes
 31470 ;; Hardware stack levels used: 1
 31471 ;; Hardware stack levels required when called: 13
 31472 ;; This function calls:
 31473 ;;		_findServiceIndex
 31474 ;;		_startTimedResponse
 31475 ;; This function is called by:
 31476 ;;		_processActions
 31477 ;; This function uses a non-reentrant model
 31478 ;;
 31479                           
 31480                           	psect	text121
 31481   00C3FC                     __ptext121:
 31482                           	callstack 0
 31483   00C3FC                     _doSOD:
 31484                           	callstack 15
 31485                           
 31486                           ;../universalEvents.c: 388:     startTimedResponse(1, findServiceIndex(SERVICE_ID_PRODUC
      +                          ER), sodTRCallback);
 31487                           
 31488                           ; BSR set to: 0
 31489                           ;incstack = 0
 31490   00C3FC  0E05               	movlw	5
 31491   00C3FE  EC46  F056         	call	_findServiceIndex
 31492   00C402  0100               	movlb	0	; () banked
 31493   00C404  6F91               	movwf	startTimedResponse@serviceIndex& (0+255),b
 31494   00C406  0E68               	movlw	low _sodTRCallback
 31495   00C408  6F92               	movwf	startTimedResponse@callback& (0+255),b
 31496   00C40A  0E82               	movlw	high _sodTRCallback
 31497   00C40C  6F93               	movwf	(startTimedResponse@callback+1)& (0+255),b
 31498   00C40E  0E01               	movlw	1
 31499   00C410  EC9B  F05D         	call	_startTimedResponse
 31500   00C414  0012               	return		;funcret
 31501   00C416                     __end_of_doSOD:
 31502                           	callstack 0
 31503                           
 31504 ;; *************** function _startTimedResponse *****************
 31505 ;; Defined at:
 31506 ;;		line 85 in file "../../VLCBlib_PIC/timedResponse.c"
 31507 ;; Parameters:    Size  Location     Type
 31508 ;;  type            1    wreg     unsigned char 
 31509 ;;  serviceIndex    1   49[BANK0 ] unsigned char 
 31510 ;;  callback        2   50[BANK0 ] PTR FTN(unsigned char ,u
 31511 ;;		 -> reqevCallback(1), nerdCallback(1), nvTRnvrdCallback(1), mnsTRserviceDiscoveryCallback(1), 
 31512 ;;		 -> mnsTRallDiagnosticsCallback(1), mnsTRrqnpnCallback(1), sodTRCallback(1), 
 31513 ;; Auto vars:     Size  Location     Type
 31514 ;;  type            1   52[BANK0 ] unsigned char 
 31515 ;; Return value:  Size  Location     Type
 31516 ;;                  1    wreg      void 
 31517 ;; Registers used:
 31518 ;;		wreg, status,2, status,0
 31519 ;; Tracked objects:
 31520 ;;		On entry : 0/0
 31521 ;;		On exit  : 0/0
 31522 ;;		Unchanged: 0/0
 31523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31524 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31525 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31527 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31528 ;;Total ram usage:        4 bytes
 31529 ;; Hardware stack levels used: 1
 31530 ;; Hardware stack levels required when called: 12
 31531 ;; This function calls:
 31532 ;;		Nothing
 31533 ;; This function is called by:
 31534 ;;		_doSOD
 31535 ;;		_mnsProcessMessage
 31536 ;;		_nvProcessMessage
 31537 ;;		_doNerd
 31538 ;;		_doReqev
 31539 ;; This function uses a non-reentrant model
 31540 ;;
 31541                           
 31542                           	psect	text122
 31543   00BB36                     __ptext122:
 31544                           	callstack 0
 31545   00BB36                     _startTimedResponse:
 31546                           	callstack 15
 31547                           
 31548                           ;incstack = 0
 31549                           ;startTimedResponse@type stored from wreg
 31550   00BB36  0100               	movlb	0	; () banked
 31551   00BB38  6F94               	movwf	startTimedResponse@type& (0+255),b
 31552                           
 31553                           ;../../VLCBlib_PIC/timedResponse.c: 86:     timedResponseType = type;
 31554   00BB3A  C094  F0C5         	movff	startTimedResponse@type,_timedResponseType
 31555                           
 31556                           ;../../VLCBlib_PIC/timedResponse.c: 87:     if (serviceIndex == 0) {
 31557   00BB3E  0100               	movlb	0	; () banked
 31558   00BB40  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31559   00BB42  A4D8               	btfss	status,2,c
 31560   00BB44  D004               	goto	l20530
 31561                           
 31562                           ; BSR set to: 0
 31563                           ;../../VLCBlib_PIC/timedResponse.c: 89:         timedResponseAllServicesFlag = 1;
 31564   00BB46  0E01               	movlw	1
 31565   00BB48  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31566                           
 31567                           ;../../VLCBlib_PIC/timedResponse.c: 90:         timedResponseServiceIndex = 0;
 31568   00BB4A  0E00               	movlw	0
 31569   00BB4C  D00B               	goto	L13
 31570   00BB4E                     l20530:
 31571                           
 31572                           ; BSR set to: 0
 31573                           ;../../VLCBlib_PIC/timedResponse.c: 92:         timedResponseAllServicesFlag = 0;
 31574   00BB4E  0E00               	movlw	0
 31575   00BB50  6E44               	movwf	_timedResponseAllServicesFlag^0,c
 31576                           
 31577                           ;../../VLCBlib_PIC/timedResponse.c: 93:         if ((serviceIndex < 1) || (serviceIndex 
      +                          > 9)) {
 31578   00BB52  5191               	movf	startTimedResponse@serviceIndex& (0+255),w,b
 31579   00BB54  B4D8               	btfsc	status,2,c
 31580   00BB56  D003               	goto	u21010
 31581                           
 31582                           ; BSR set to: 0
 31583   00BB58  0E09               	movlw	9
 31584   00BB5A  6591               	cpfsgt	startTimedResponse@serviceIndex& (0+255),b
 31585   00BB5C  D002               	goto	l20534
 31586   00BB5E                     u21010:
 31587                           
 31588                           ; BSR set to: 0
 31589                           ;../../VLCBlib_PIC/timedResponse.c: 95:             timedResponseType = 0xFF;
 31590   00BB5E  69C5               	setf	_timedResponseType& (0+255),b
 31591                           
 31592                           ;../../VLCBlib_PIC/timedResponse.c: 96:             return;
 31593   00BB60  0012               	return	
 31594   00BB62                     l20534:
 31595                           
 31596                           ; BSR set to: 0
 31597                           ;../../VLCBlib_PIC/timedResponse.c: 98:         timedResponseServiceIndex = (uint8_t)ser
      +                          viceIndex-1;
 31598   00BB62  0591               	decf	startTimedResponse@serviceIndex& (0+255),w,b
 31599   00BB64                     L13:
 31600   00BB64  6FC6               	movwf	_timedResponseServiceIndex& (0+255),b
 31601                           
 31602                           ; BSR set to: 0
 31603                           ;../../VLCBlib_PIC/timedResponse.c: 100:     timedResponseStep = 0;
 31604   00BB66  0E00               	movlw	0
 31605   00BB68  6E43               	movwf	_timedResponseStep^0,c
 31606                           
 31607                           ; BSR set to: 0
 31608                           ;../../VLCBlib_PIC/timedResponse.c: 101:     timedResponseCallback = callback;
 31609   00BB6A  C092  F03F         	movff	startTimedResponse@callback,_timedResponseCallback
 31610   00BB6E  C093  F040         	movff	startTimedResponse@callback+1,_timedResponseCallback+1
 31611                           
 31612                           ; BSR set to: 0
 31613   00BB72  0012               	return		;funcret
 31614   00BB74                     __end_of_startTimedResponse:
 31615                           	callstack 0
 31616                           
 31617 ;; *************** function _findServiceIndex *****************
 31618 ;; Defined at:
 31619 ;;		line 822 in file "../../VLCBlib_PIC/vlcb.c"
 31620 ;; Parameters:    Size  Location     Type
 31621 ;;  serviceType     1    wreg     unsigned char 
 31622 ;; Auto vars:     Size  Location     Type
 31623 ;;  serviceType     1   47[BANK0 ] unsigned char 
 31624 ;;  i               1   48[BANK0 ] unsigned char 
 31625 ;; Return value:  Size  Location     Type
 31626 ;;                  1    wreg      unsigned char 
 31627 ;; Registers used:
 31628 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 31629 ;; Tracked objects:
 31630 ;;		On entry : 0/0
 31631 ;;		On exit  : 0/0
 31632 ;;		Unchanged: 0/0
 31633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31635 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31636 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31637 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31638 ;;Total ram usage:        4 bytes
 31639 ;; Hardware stack levels used: 1
 31640 ;; Hardware stack levels required when called: 12
 31641 ;; This function calls:
 31642 ;;		Nothing
 31643 ;; This function is called by:
 31644 ;;		_doSOD
 31645 ;;		_mnsProcessMessage
 31646 ;;		_nvProcessMessage
 31647 ;;		_doNerd
 31648 ;;		_doReqev
 31649 ;; This function uses a non-reentrant model
 31650 ;;
 31651                           
 31652                           	psect	text123
 31653   00AC8C                     __ptext123:
 31654                           	callstack 0
 31655   00AC8C                     _findServiceIndex:
 31656                           	callstack 15
 31657                           
 31658                           ; BSR set to: 0
 31659                           ;incstack = 0
 31660                           ;findServiceIndex@serviceType stored from wreg
 31661   00AC8C  0100               	movlb	0	; () banked
 31662   00AC8E  6F8F               	movwf	findServiceIndex@serviceType& (0+255),b
 31663                           
 31664                           ;../../VLCBlib_PIC/vlcb.c: 823:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 824:     for (i
      +                          =0; i<9; i++) {
 31665   00AC90  0E00               	movlw	0
 31666   00AC92  0100               	movlb	0	; () banked
 31667   00AC94  6F90               	movwf	findServiceIndex@i& (0+255),b
 31668   00AC96                     l20508:
 31669                           
 31670                           ; BSR set to: 0
 31671                           ;../../VLCBlib_PIC/vlcb.c: 825:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == serviceType)) {
 31672   00AC96  5190               	movf	findServiceIndex@i& (0+255),w,b
 31673   00AC98  0D02               	mullw	2
 31674   00AC9A  0E75               	movlw	low _services
 31675   00AC9C  24F3               	addwf	243,w,c
 31676   00AC9E  6EF6               	movwf	tblptrl,c
 31677   00ACA0  0EEE               	movlw	high _services
 31678   00ACA2  20F4               	addwfc	244,w,c
 31679   00ACA4  6EF7               	movwf	tblptrh,c
 31680   00ACA6                     	if	1	;There are 3 active tblptr bytes
 31681   00ACA6  6AF8               	clrf	tblptru,c
 31682   00ACA8  0E00               	movlw	low (__mediumconst shr (0+16))
 31683   00ACAA  22F8               	addwfc	tblptru,f,c
 31684   00ACAC                     	endif
 31685   00ACAC  0009               	tblrd		*+
 31686   00ACAE  50F5               	movf	tablat,w,c
 31687   00ACB0  0009               	tblrd		*+
 31688   00ACB2  10F5               	iorwf	tablat,w,c
 31689   00ACB4  B4D8               	btfsc	status,2,c
 31690   00ACB6  D01D               	goto	l20516
 31691                           
 31692                           ; BSR set to: 0
 31693   00ACB8  5190               	movf	findServiceIndex@i& (0+255),w,b
 31694   00ACBA  0D02               	mullw	2
 31695   00ACBC  0E75               	movlw	low _services
 31696   00ACBE  24F3               	addwf	243,w,c
 31697   00ACC0  6EF6               	movwf	tblptrl,c
 31698   00ACC2  0EEE               	movlw	high _services
 31699   00ACC4  20F4               	addwfc	244,w,c
 31700   00ACC6  6EF7               	movwf	tblptrh,c
 31701   00ACC8                     	if	1	;There are 3 active tblptr bytes
 31702   00ACC8  6AF8               	clrf	tblptru,c
 31703   00ACCA  0E00               	movlw	low (__mediumconst shr (0+16))
 31704   00ACCC  22F8               	addwfc	tblptru,f,c
 31705   00ACCE                     	endif
 31706   00ACCE  0009               	tblrd		*+
 31707   00ACD0  CFF5 F08D          	movff	tablat,??_findServiceIndex
 31708   00ACD4  0009               	tblrd		*+
 31709   00ACD6  CFF5 F08E          	movff	tablat,??_findServiceIndex+1
 31710   00ACDA  C08D  FFF6         	movff	??_findServiceIndex,tblptrl
 31711   00ACDE  C08E  FFF7         	movff	??_findServiceIndex+1,tblptrh
 31712   00ACE2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 31713   00ACE2  6AF8               	clrf	tblptru,c
 31714   00ACE4                     	endif
 31715   00ACE4                     	if	0	;tblptru may be non-zero
 31716   00ACE4                     	endif
 31717   00ACE4  0008               	tblrd		*
 31718   00ACE6  50F5               	movf	tablat,w,c
 31719   00ACE8  198F               	xorwf	findServiceIndex@serviceType& (0+255),w,b
 31720   00ACEA  A4D8               	btfss	status,2,c
 31721   00ACEC  D002               	goto	l20516
 31722                           
 31723                           ; BSR set to: 0
 31724                           ;../../VLCBlib_PIC/vlcb.c: 826:             return i;
 31725   00ACEE  5190               	movf	findServiceIndex@i& (0+255),w,b
 31726   00ACF0  0012               	return	
 31727   00ACF2                     l20516:
 31728                           
 31729                           ; BSR set to: 0
 31730                           ;../../VLCBlib_PIC/vlcb.c: 828:     }
 31731   00ACF2  2B90               	incf	findServiceIndex@i& (0+255),f,b
 31732                           
 31733                           ; BSR set to: 0
 31734   00ACF4  0E08               	movlw	8
 31735   00ACF6  6590               	cpfsgt	findServiceIndex@i& (0+255),b
 31736   00ACF8  D7CE               	goto	l20508
 31737                           
 31738                           ; BSR set to: 0
 31739                           ;../../VLCBlib_PIC/vlcb.c: 829:     return 0xFF;
 31740   00ACFA  0EFF               	movlw	255
 31741                           
 31742                           ; BSR set to: 0
 31743   00ACFC  0012               	return		;funcret
 31744   00ACFE                     __end_of_findServiceIndex:
 31745                           	callstack 0
 31746                           
 31747 ;; *************** function _deleteTwoActionQueue *****************
 31748 ;; Defined at:
 31749 ;;		line 483 in file "../event_consumerDualActionQueue.c"
 31750 ;; Parameters:    Size  Location     Type
 31751 ;;  index           1    wreg     unsigned char 
 31752 ;; Auto vars:     Size  Location     Type
 31753 ;;  index           1   46[BANK0 ] unsigned char 
 31754 ;;  qty             1   45[BANK0 ] unsigned char 
 31755 ;; Return value:  Size  Location     Type
 31756 ;;                  1    wreg      void 
 31757 ;; Registers used:
 31758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31759 ;; Tracked objects:
 31760 ;;		On entry : 0/0
 31761 ;;		On exit  : 0/0
 31762 ;;		Unchanged: 0/0
 31763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31767 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31768 ;;Total ram usage:        2 bytes
 31769 ;; Hardware stack levels used: 1
 31770 ;; Hardware stack levels required when called: 12
 31771 ;; This function calls:
 31772 ;;		Nothing
 31773 ;; This function is called by:
 31774 ;;		_processActions
 31775 ;; This function uses a non-reentrant model
 31776 ;;
 31777                           
 31778                           	psect	text124
 31779   00A7D6                     __ptext124:
 31780                           	callstack 0
 31781   00A7D6                     _deleteTwoActionQueue:
 31782                           	callstack 16
 31783                           
 31784                           ; BSR set to: 0
 31785                           ;incstack = 0
 31786                           ;deleteTwoActionQueue@index stored from wreg
 31787   00A7D6  0100               	movlb	0	; () banked
 31788   00A7D8  6F8E               	movwf	deleteTwoActionQueue@index& (0+255),b
 31789                           
 31790                           ;../event_consumerDualActionQueue.c: 484:     uint8_t qty;;../event_consumerDualActionQu
      +                          eue.c: 485:     qty = (expeditedWriteIndex - expeditedReadIndex) & (8 -1);
 31791   00A7DA  0100               	movlb	0	; () banked
 31792   00A7DC  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31793   00A7DE  5DCC               	subwf	_expeditedWriteIndex& (0+255),w,b
 31794   00A7E0  0B07               	andlw	7
 31795   00A7E2  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31796                           
 31797                           ;../event_consumerDualActionQueue.c: 486:     if (index < qty) {
 31798   00A7E4  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31799   00A7E6  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31800   00A7E8  B0D8               	btfsc	status,0,c
 31801   00A7EA  D013               	goto	l21312
 31802                           
 31803                           ; BSR set to: 0
 31804                           ;../event_consumerDualActionQueue.c: 487:         index += expeditedReadIndex;
 31805   00A7EC  51CD               	movf	_expeditedReadIndex& (0+255),w,b
 31806   00A7EE  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31807                           
 31808                           ;../event_consumerDualActionQueue.c: 488:         if (index >= 8) {
 31809   00A7F0  0E07               	movlw	7
 31810   00A7F2  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31811   00A7F4  D002               	goto	l555
 31812                           
 31813                           ; BSR set to: 0
 31814                           ;../event_consumerDualActionQueue.c: 489:             index -= 8;
 31815   00A7F6  0E08               	movlw	8
 31816   00A7F8  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31817   00A7FA                     l555:
 31818                           
 31819                           ; BSR set to: 0
 31820                           ;../event_consumerDualActionQueue.c: 491:         if (index == expeditedWriteIndex) retu
      +                          rn;
 31821   00A7FA  51CC               	movf	_expeditedWriteIndex& (0+255),w,b
 31822   00A7FC  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31823   00A7FE  B4D8               	btfsc	status,2,c
 31824   00A800  0012               	return	
 31825                           
 31826                           ; BSR set to: 0
 31827                           ;../event_consumerDualActionQueue.c: 492:         expeditedQueueBuf[index] = 0;
 31828   00A802  0EC4               	movlw	low _expeditedQueueBuf
 31829   00A804  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31830   00A806  6ED9               	movwf	fsr2l,c
 31831   00A808  6ADA               	clrf	fsr2h,c
 31832   00A80A  0E02               	movlw	high _expeditedQueueBuf
 31833   00A80C  22DA               	addwfc	fsr2h,f,c
 31834   00A80E  6ADF               	clrf	indf2,c
 31835   00A810  0012               	return	
 31836   00A812                     l21312:
 31837                           
 31838                           ; BSR set to: 0
 31839                           ;../event_consumerDualActionQueue.c: 495:     index -= qty;
 31840   00A812  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31841   00A814  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31842                           
 31843                           ;../event_consumerDualActionQueue.c: 496:     qty = (normalWriteIndex - normalReadIndex)
      +                           & (64 -1);
 31844   00A816  51CF               	movf	_normalReadIndex& (0+255),w,b
 31845   00A818  5DCE               	subwf	_normalWriteIndex& (0+255),w,b
 31846   00A81A  0B3F               	andlw	63
 31847   00A81C  6F8D               	movwf	deleteTwoActionQueue@qty& (0+255),b
 31848                           
 31849                           ;../event_consumerDualActionQueue.c: 497:     if (index < qty) {
 31850   00A81E  518D               	movf	deleteTwoActionQueue@qty& (0+255),w,b
 31851   00A820  5D8E               	subwf	deleteTwoActionQueue@index& (0+255),w,b
 31852   00A822  B0D8               	btfsc	status,0,c
 31853   00A824  0012               	return	
 31854                           
 31855                           ; BSR set to: 0
 31856                           ;../event_consumerDualActionQueue.c: 498:         if (normalReadIndex == normalWriteInde
      +                          x) return;
 31857   00A826  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31858   00A828  19CF               	xorwf	_normalReadIndex& (0+255),w,b
 31859   00A82A  B4D8               	btfsc	status,2,c
 31860   00A82C  0012               	return	
 31861                           
 31862                           ; BSR set to: 0
 31863                           ;../event_consumerDualActionQueue.c: 499:         index += normalReadIndex;
 31864   00A82E  51CF               	movf	_normalReadIndex& (0+255),w,b
 31865   00A830  278E               	addwf	deleteTwoActionQueue@index& (0+255),f,b
 31866                           
 31867                           ;../event_consumerDualActionQueue.c: 500:         if (index >= 64) {
 31868   00A832  0E3F               	movlw	63
 31869   00A834  658E               	cpfsgt	deleteTwoActionQueue@index& (0+255),b
 31870   00A836  D002               	goto	l560
 31871                           
 31872                           ; BSR set to: 0
 31873                           ;../event_consumerDualActionQueue.c: 501:             index -= 64;
 31874   00A838  0E40               	movlw	64
 31875   00A83A  5F8E               	subwf	deleteTwoActionQueue@index& (0+255),f,b
 31876   00A83C                     l560:
 31877                           
 31878                           ; BSR set to: 0
 31879                           ;../event_consumerDualActionQueue.c: 503:         if (index == normalWriteIndex) return;
 31880   00A83C  51CE               	movf	_normalWriteIndex& (0+255),w,b
 31881   00A83E  198E               	xorwf	deleteTwoActionQueue@index& (0+255),w,b
 31882   00A840  B4D8               	btfsc	status,2,c
 31883   00A842  0012               	return	
 31884                           
 31885                           ; BSR set to: 0
 31886                           ;../event_consumerDualActionQueue.c: 504:         normalQueueBuf[index] = 0;
 31887   00A844  0E80               	movlw	low _normalQueueBuf
 31888   00A846  258E               	addwf	deleteTwoActionQueue@index& (0+255),w,b
 31889   00A848  6ED9               	movwf	fsr2l,c
 31890   00A84A  6ADA               	clrf	fsr2h,c
 31891   00A84C  0E04               	movlw	high _normalQueueBuf
 31892   00A84E  22DA               	addwfc	fsr2h,f,c
 31893   00A850  6ADF               	clrf	indf2,c
 31894                           
 31895                           ; BSR set to: 0
 31896   00A852  0012               	return		;funcret
 31897   00A854                     __end_of_deleteTwoActionQueue:
 31898                           	callstack 0
 31899                           
 31900 ;; *************** function _completed *****************
 31901 ;; Defined at:
 31902 ;;		line 219 in file "../outputs.c"
 31903 ;; Parameters:    Size  Location     Type
 31904 ;;  io              1    wreg     unsigned char 
 31905 ;;  action          1   45[BANK0 ] unsigned char 
 31906 ;;  type            1   46[BANK0 ] unsigned char 
 31907 ;; Auto vars:     Size  Location     Type
 31908 ;;  io              1   50[BANK0 ] unsigned char 
 31909 ;; Return value:  Size  Location     Type
 31910 ;;                  1    wreg      enum E12761
 31911 ;; Registers used:
 31912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31913 ;; Tracked objects:
 31914 ;;		On entry : 0/0
 31915 ;;		On exit  : 0/0
 31916 ;;		Unchanged: 0/0
 31917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31918 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31921 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31922 ;;Total ram usage:        6 bytes
 31923 ;; Hardware stack levels used: 1
 31924 ;; Hardware stack levels required when called: 12
 31925 ;; This function calls:
 31926 ;;		Nothing
 31927 ;; This function is called by:
 31928 ;;		_processActions
 31929 ;; This function uses a non-reentrant model
 31930 ;;
 31931                           
 31932                           	psect	text125
 31933   00A03A                     __ptext125:
 31934                           	callstack 0
 31935   00A03A                     _completed:
 31936                           	callstack 16
 31937                           
 31938                           ; BSR set to: 0
 31939                           ;incstack = 0
 31940                           ;completed@io stored from wreg
 31941   00A03A  0100               	movlb	0	; () banked
 31942   00A03C  6F92               	movwf	completed@io& (0+255),b
 31943                           
 31944                           ;../outputs.c: 220:     switch(type) {
 31945   00A03E  D035               	goto	l21438
 31946   00A040                     l21416:
 31947                           
 31948                           ; BSR set to: 0
 31949                           ;../outputs.c: 223:             return TRUE;
 31950   00A040  0E01               	movlw	1
 31951   00A042  0012               	return	
 31952   00A044                     l21420:
 31953                           
 31954                           ; BSR set to: 0
 31955                           ;../outputs.c: 226:             return pulseDelays[io] == 1;
 31956   00A044  0EA4               	movlw	low _pulseDelays
 31957   00A046  2592               	addwf	completed@io& (0+255),w,b
 31958   00A048  6ED9               	movwf	fsr2l,c
 31959   00A04A  6ADA               	clrf	fsr2h,c
 31960   00A04C  0E02               	movlw	high _pulseDelays
 31961   00A04E  22DA               	addwfc	fsr2h,f,c
 31962   00A050  04DE               	decf	postinc2,w,c
 31963   00A052  A4D8               	btfss	status,2,c
 31964   00A054  D002               	goto	u21980
 31965   00A056  0E01               	movlw	1
 31966   00A058  0012               	return	
 31967   00A05A                     u21980:
 31968   00A05A  0E00               	movlw	0
 31969   00A05C  0012               	return	
 31970   00A05E                     l21424:
 31971                           
 31972                           ; BSR set to: 0
 31973                           ;../outputs.c: 235:             return (targetPos[io] == currentPos[io]) && ((servoState
      +                          [io] == SS_STOPPED) || (servoState[io] == SS_OFF));
 31974   00A05E  0E00               	movlw	0
 31975   00A060  6F91               	movwf	_completed$1545& (0+255),b
 31976                           
 31977                           ; BSR set to: 0
 31978   00A062  5192               	movf	completed@io& (0+255),w,b
 31979   00A064  0FA9               	addlw	low _currentPos
 31980   00A066  6ED9               	movwf	fsr2l,c
 31981   00A068  6ADA               	clrf	fsr2h,c
 31982   00A06A  0E20               	movlw	low _targetPos
 31983   00A06C  2592               	addwf	completed@io& (0+255),w,b
 31984   00A06E  6EE1               	movwf	fsr1l,c
 31985   00A070  6AE2               	clrf	fsr1h,c
 31986   00A072  0E01               	movlw	high _targetPos
 31987   00A074  22E2               	addwfc	fsr1h,f,c
 31988   00A076  50DE               	movf	postinc2,w,c
 31989   00A078  18E6               	xorwf	postinc1,w,c
 31990   00A07A  A4D8               	btfss	status,2,c
 31991   00A07C  D014               	goto	l916
 31992                           
 31993                           ; BSR set to: 0
 31994   00A07E  0E10               	movlw	low _servoState
 31995   00A080  2592               	addwf	completed@io& (0+255),w,b
 31996   00A082  6ED9               	movwf	fsr2l,c
 31997   00A084  6ADA               	clrf	fsr2h,c
 31998   00A086  0E01               	movlw	high _servoState
 31999   00A088  22DA               	addwfc	fsr2h,f,c
 32000   00A08A  04DE               	decf	postinc2,w,c
 32001   00A08C  B4D8               	btfsc	status,2,c
 32002   00A08E  D009               	goto	u22020
 32003                           
 32004                           ; BSR set to: 0
 32005   00A090  0E10               	movlw	low _servoState
 32006   00A092  2592               	addwf	completed@io& (0+255),w,b
 32007   00A094  6ED9               	movwf	fsr2l,c
 32008   00A096  6ADA               	clrf	fsr2h,c
 32009   00A098  0E01               	movlw	high _servoState
 32010   00A09A  22DA               	addwfc	fsr2h,f,c
 32011   00A09C  50DF               	movf	indf2,w,c
 32012   00A09E  A4D8               	btfss	status,2,c
 32013   00A0A0  D002               	goto	l916
 32014   00A0A2                     u22020:
 32015                           
 32016                           ; BSR set to: 0
 32017   00A0A2  0E01               	movlw	1
 32018   00A0A4  6F91               	movwf	_completed$1545& (0+255),b
 32019   00A0A6                     l916:
 32020                           
 32021                           ; BSR set to: 0
 32022   00A0A6  5191               	movf	_completed$1545& (0+255),w,b
 32023   00A0A8  0012               	return	
 32024   00A0AA                     l21438:
 32025   00A0AA  0100               	movlb	0	; () banked
 32026   00A0AC  518E               	movf	completed@type& (0+255),w,b
 32027                           
 32028                           ; Switch size 1, requested type "simple"
 32029                           ; Number of cases is 5, Range of values is 0 to 4
 32030                           ; switch strategies available:
 32031                           ; Name         Instructions Cycles
 32032                           ; simple_byte           16     9 (average)
 32033                           ;	Chosen strategy is simple_byte
 32034   00A0AE  0A00               	xorlw	0	; case 0
 32035   00A0B0  B4D8               	btfsc	status,2,c
 32036   00A0B2  D7C6               	goto	l21416
 32037   00A0B4  0A01               	xorlw	1	; case 1
 32038   00A0B6  B4D8               	btfsc	status,2,c
 32039   00A0B8  D7C5               	goto	l21420
 32040   00A0BA  0A03               	xorlw	3	; case 2
 32041   00A0BC  B4D8               	btfsc	status,2,c
 32042   00A0BE  D7CF               	goto	l21424
 32043   00A0C0  0A01               	xorlw	1	; case 3
 32044   00A0C2  B4D8               	btfsc	status,2,c
 32045   00A0C4  D7CC               	goto	l21424
 32046   00A0C6  0A07               	xorlw	7	; case 4
 32047   00A0C8  B4D8               	btfsc	status,2,c
 32048   00A0CA  D7C9               	goto	l21424
 32049   00A0CC  D7B9               	goto	l21416
 32050   00A0CE                     __end_of_completed:
 32051                           	callstack 0
 32052                           
 32053 ;; *************** function _inputScan *****************
 32054 ;; Defined at:
 32055 ;;		line 101 in file "../inputs.c"
 32056 ;; Parameters:    Size  Location     Type
 32057 ;;		None
 32058 ;; Auto vars:     Size  Location     Type
 32059 ;;  change          1   20[BANK1 ] enum E12711
 32060 ;;  input           1   21[BANK1 ] unsigned char 
 32061 ;; Return value:  Size  Location     Type
 32062 ;;                  1    wreg      void 
 32063 ;; Registers used:
 32064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32065 ;; Tracked objects:
 32066 ;;		On entry : 0/0
 32067 ;;		On exit  : 0/0
 32068 ;;		Unchanged: 0/0
 32069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32071 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32072 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32073 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32074 ;;Total ram usage:        4 bytes
 32075 ;; Hardware stack levels used: 1
 32076 ;; Hardware stack levels required when called: 18
 32077 ;; This function calls:
 32078 ;;		_getNV
 32079 ;;		_readInput
 32080 ;;		_sendProducedEvent
 32081 ;;		_writeNVM
 32082 ;; This function is called by:
 32083 ;;		_loop
 32084 ;; This function uses a non-reentrant model
 32085 ;;
 32086                           
 32087                           	psect	text126
 32088   004F7A                     __ptext126:
 32089                           	callstack 0
 32090   004F7A                     _inputScan:
 32091                           	callstack 11
 32092                           
 32093                           ;../inputs.c: 102:     for (io=0; io< 16; io++) {
 32094                           
 32095                           ; BSR set to: 0
 32096                           ;incstack = 0
 32097   004F7A  0E00               	movlw	0
 32098   004F7C  0100               	movlb	0	; () banked
 32099   004F7E  6FD0               	movwf	_io@inputs$F849& (0+255),b
 32100   004F80                     l22680:
 32101                           
 32102                           ; BSR set to: 0
 32103   004F80  0E0F               	movlw	15
 32104   004F82  65D0               	cpfsgt	_io@inputs$F849& (0+255),b
 32105   004F84  D001               	goto	l22684
 32106   004F86  0012               	return	
 32107   004F88                     l22684:
 32108                           
 32109                           ; BSR set to: 0
 32110                           ;../inputs.c: 103:         if (getNV((16 + 7*(io) + 0)) == 0) {
 32111   004F88  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32112   004F8A  0D07               	mullw	7
 32113   004F8C  50F3               	movf	243,w,c
 32114   004F8E  0F10               	addlw	16
 32115   004F90  ECD9  F05D         	call	_getNV
 32116   004F94  0100               	movlb	0	; () banked
 32117   004F96  518D               	movf	?_getNV& (0+255),w,b
 32118   004F98  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 32119   004F9A  A4D8               	btfss	status,2,c
 32120   004F9C  D151               	goto	l22746
 32121                           
 32122                           ; BSR set to: 0
 32123                           ;../inputs.c: 104:             uint8_t input = readInput(io);
 32124   004F9E  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32125   004FA0  ECAA  F03F         	call	_readInput
 32126   004FA4  0101               	movlb	1	; () banked
 32127   004FA6  6FCF               	movwf	inputScan@input& (0+255),b
 32128                           
 32129                           ; BSR set to: 1
 32130                           ;../inputs.c: 105:             if (input != inputState[io]) {
 32131   004FA8  0E94               	movlw	low _inputState
 32132   004FAA  0100               	movlb	0	; () banked
 32133   004FAC  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32134   004FAE  6ED9               	movwf	fsr2l,c
 32135   004FB0  6ADA               	clrf	fsr2h,c
 32136   004FB2  0E02               	movlw	high _inputState
 32137   004FB4  22DA               	addwfc	fsr2h,f,c
 32138   004FB6  0101               	movlb	1	; () banked
 32139   004FB8  51CF               	movf	inputScan@input& (0+255),w,b
 32140   004FBA  18DE               	xorwf	postinc2,w,c
 32141   004FBC  B4D8               	btfsc	status,2,c
 32142   004FBE  D138               	goto	l22744
 32143                           
 32144                           ; BSR set to: 1
 32145                           ;../inputs.c: 106:                 Boolean change = FALSE;
 32146   004FC0  0E00               	movlw	0
 32147   004FC2  6FCE               	movwf	inputScan@change& (0+255),b
 32148                           
 32149                           ; BSR set to: 1
 32150                           ;../inputs.c: 108:                 if (inputState[io] && (delayCount[io] == getNV((16 + 
      +                          7*(io) + 2)))) {
 32151   004FC4  0E94               	movlw	low _inputState
 32152   004FC6  0100               	movlb	0	; () banked
 32153   004FC8  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32154   004FCA  6ED9               	movwf	fsr2l,c
 32155   004FCC  6ADA               	clrf	fsr2h,c
 32156   004FCE  0E02               	movlw	high _inputState
 32157   004FD0  22DA               	addwfc	fsr2h,f,c
 32158   004FD2  50DF               	movf	indf2,w,c
 32159   004FD4  B4D8               	btfsc	status,2,c
 32160   004FD6  D01E               	goto	l22698
 32161                           
 32162                           ; BSR set to: 0
 32163   004FD8  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32164   004FDA  0D07               	mullw	7
 32165   004FDC  50F3               	movf	243,w,c
 32166   004FDE  0F12               	addlw	18
 32167   004FE0  ECD9  F05D         	call	_getNV
 32168   004FE4  0E84               	movlw	low _delayCount
 32169   004FE6  0100               	movlb	0	; () banked
 32170   004FE8  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32171   004FEA  6ED9               	movwf	fsr2l,c
 32172   004FEC  6ADA               	clrf	fsr2h,c
 32173   004FEE  0E02               	movlw	high _delayCount
 32174   004FF0  22DA               	addwfc	fsr2h,f,c
 32175   004FF2  50DF               	movf	indf2,w,c
 32176   004FF4  0101               	movlb	1	; () banked
 32177   004FF6  6FCC               	movwf	??_inputScan& (0+255),b
 32178   004FF8  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32179   004FFA  0100               	movlb	0	; () banked
 32180   004FFC  518D               	movf	?_getNV& (0+255),w,b
 32181   004FFE  0101               	movlb	1	; () banked
 32182   005000  19CC               	xorwf	??_inputScan& (0+255),w,b
 32183   005002  E108               	bnz	l22698
 32184   005004  0100               	movlb	0	; () banked
 32185   005006  518E               	movf	(?_getNV+1)& (0+255),w,b
 32186   005008  0101               	movlb	1	; () banked
 32187   00500A  19CD               	xorwf	(??_inputScan+1)& (0+255),w,b
 32188   00500C  A4D8               	btfss	status,2,c
 32189   00500E  D002               	goto	l22698
 32190                           
 32191                           ; BSR set to: 1
 32192                           ;../inputs.c: 109:                     change = TRUE;
 32193   005010  0E01               	movlw	1
 32194   005012  6FCE               	movwf	inputScan@change& (0+255),b
 32195   005014                     l22698:
 32196                           
 32197                           ;../inputs.c: 111:                 if (!inputState[io] && (delayCount[io] == getNV((16 +
      +                           7*(io) + 3)))) {
 32198   005014  0E94               	movlw	low _inputState
 32199   005016  0100               	movlb	0	; () banked
 32200   005018  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32201   00501A  6ED9               	movwf	fsr2l,c
 32202   00501C  6ADA               	clrf	fsr2h,c
 32203   00501E  0E02               	movlw	high _inputState
 32204   005020  22DA               	addwfc	fsr2h,f,c
 32205   005022  50DF               	movf	indf2,w,c
 32206   005024  A4D8               	btfss	status,2,c
 32207   005026  D01E               	goto	l352
 32208                           
 32209                           ; BSR set to: 0
 32210   005028  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32211   00502A  0D07               	mullw	7
 32212   00502C  50F3               	movf	243,w,c
 32213   00502E  0F13               	addlw	19
 32214   005030  ECD9  F05D         	call	_getNV
 32215   005034  0E84               	movlw	low _delayCount
 32216   005036  0100               	movlb	0	; () banked
 32217   005038  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32218   00503A  6ED9               	movwf	fsr2l,c
 32219   00503C  6ADA               	clrf	fsr2h,c
 32220   00503E  0E02               	movlw	high _delayCount
 32221   005040  22DA               	addwfc	fsr2h,f,c
 32222   005042  50DF               	movf	indf2,w,c
 32223   005044  0101               	movlb	1	; () banked
 32224   005046  6FCC               	movwf	??_inputScan& (0+255),b
 32225   005048  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32226   00504A  0100               	movlb	0	; () banked
 32227   00504C  518D               	movf	?_getNV& (0+255),w,b
 32228   00504E  0101               	movlb	1	; () banked
 32229   005050  19CC               	xorwf	??_inputScan& (0+255),w,b
 32230   005052  E108               	bnz	l352
 32231   005054  0100               	movlb	0	; () banked
 32232   005056  518E               	movf	(?_getNV+1)& (0+255),w,b
 32233   005058  0101               	movlb	1	; () banked
 32234   00505A  19CD               	xorwf	(??_inputScan+1)& (0+255),w,b
 32235   00505C  A4D8               	btfss	status,2,c
 32236   00505E  D002               	goto	l352
 32237                           
 32238                           ; BSR set to: 1
 32239                           ;../inputs.c: 112:                     change = TRUE;
 32240   005060  0E01               	movlw	1
 32241   005062  6FCE               	movwf	inputScan@change& (0+255),b
 32242   005064                     l352:
 32243                           
 32244                           ;../inputs.c: 114:                 if (change) {
 32245   005064  0101               	movlb	1	; () banked
 32246   005066  51CE               	movf	inputScan@change& (0+255),w,b
 32247   005068  B4D8               	btfsc	status,2,c
 32248   00506A  D0D9               	goto	l22742
 32249                           
 32250                           ; BSR set to: 1
 32251                           ;../inputs.c: 116:                     delayCount[io] = 0;
 32252   00506C  0E84               	movlw	low _delayCount
 32253   00506E  0100               	movlb	0	; () banked
 32254   005070  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32255   005072  6ED9               	movwf	fsr2l,c
 32256   005074  6ADA               	clrf	fsr2h,c
 32257   005076  0E02               	movlw	high _delayCount
 32258   005078  22DA               	addwfc	fsr2h,f,c
 32259   00507A  6ADF               	clrf	indf2,c
 32260                           
 32261                           ;../inputs.c: 117:                     inputState[io] = input;
 32262   00507C  0E94               	movlw	low _inputState
 32263   00507E  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32264   005080  6ED9               	movwf	fsr2l,c
 32265   005082  6ADA               	clrf	fsr2h,c
 32266   005084  0E02               	movlw	high _inputState
 32267   005086  22DA               	addwfc	fsr2h,f,c
 32268   005088  C1CF  FFDF         	movff	inputScan@input,indf2
 32269                           
 32270                           ; BSR set to: 0
 32271                           ;../inputs.c: 119:                     if (!(getNV((16 + 7*(io) + 1)) & 0x01)) {
 32272   00508C  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32273   00508E  0D07               	mullw	7
 32274   005090  50F3               	movf	243,w,c
 32275   005092  0F11               	addlw	17
 32276   005094  ECD9  F05D         	call	_getNV
 32277   005098  0100               	movlb	0	; () banked
 32278   00509A  B18D               	btfsc	?_getNV& (0+255),0,b
 32279   00509C  D008               	goto	l22710
 32280                           
 32281                           ; BSR set to: 0
 32282                           ;../inputs.c: 120:                         input = !input;
 32283   00509E  0101               	movlb	1	; () banked
 32284   0050A0  51CF               	movf	inputScan@input& (0+255),w,b
 32285   0050A2  A4D8               	btfss	status,2,c
 32286   0050A4  D002               	goto	u23960
 32287   0050A6  0E01               	movlw	1
 32288   0050A8  D001               	goto	u23970
 32289   0050AA                     u23960:
 32290   0050AA  0E00               	movlw	0
 32291   0050AC                     u23970:
 32292   0050AC  6FCF               	movwf	inputScan@input& (0+255),b
 32293   0050AE                     l22710:
 32294                           
 32295                           ;../inputs.c: 123:                     if (getNV((16 + 7*(io) + 1)) & 0x10) {
 32296   0050AE  0100               	movlb	0	; () banked
 32297   0050B0  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32298   0050B2  0D07               	mullw	7
 32299   0050B4  50F3               	movf	243,w,c
 32300   0050B6  0F11               	addlw	17
 32301   0050B8  ECD9  F05D         	call	_getNV
 32302   0050BC  0100               	movlb	0	; () banked
 32303   0050BE  A98D               	btfss	?_getNV& (0+255),4,b
 32304   0050C0  D031               	goto	l22718
 32305                           
 32306                           ; BSR set to: 0
 32307                           ;../inputs.c: 124:                         if (input) {
 32308   0050C2  0101               	movlb	1	; () banked
 32309   0050C4  51CF               	movf	inputScan@input& (0+255),w,b
 32310   0050C6  B4D8               	btfsc	status,2,c
 32311   0050C8  D0BB               	goto	l22746
 32312                           
 32313                           ; BSR set to: 1
 32314                           ;../inputs.c: 125:                             outputState[io] = ! outputState[io];
 32315   0050CA  0EB4               	movlw	low _outputState
 32316   0050CC  0100               	movlb	0	; () banked
 32317   0050CE  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32318   0050D0  6ED9               	movwf	fsr2l,c
 32319   0050D2  6ADA               	clrf	fsr2h,c
 32320   0050D4  0E02               	movlw	high _outputState
 32321   0050D6  22DA               	addwfc	fsr2h,f,c
 32322   0050D8  0EB4               	movlw	low _outputState
 32323   0050DA  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32324   0050DC  6EE1               	movwf	fsr1l,c
 32325   0050DE  6AE2               	clrf	fsr1h,c
 32326   0050E0  0E02               	movlw	high _outputState
 32327   0050E2  22E2               	addwfc	fsr1h,f,c
 32328   0050E4  50E7               	movf	indf1,w,c
 32329   0050E6  A4D8               	btfss	status,2,c
 32330   0050E8  D002               	goto	u24000
 32331   0050EA  0E01               	movlw	1
 32332   0050EC  D001               	goto	u24010
 32333   0050EE                     u24000:
 32334   0050EE  0E00               	movlw	0
 32335   0050F0                     u24010:
 32336   0050F0  6EDF               	movwf	indf2,c
 32337                           
 32338                           ; BSR set to: 0
 32339                           ;../inputs.c: 129:                         writeNVM(EEPROM_NVM_TYPE, ((eeprom_address_t)
      +                          ((0x3FF -8))-25)+io, outputState[io]);
 32340                           
 32341                           ;../inputs.c: 126:                         } else {
 32342   0050F2  0EDE               	movlw	222
 32343   0050F4  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32344   0050F6  0101               	movlb	1	; () banked
 32345   0050F8  6FCC               	movwf	??_inputScan& (0+255),b
 32346   0050FA  6BCD               	clrf	(??_inputScan+1)& (0+255),b
 32347   0050FC  0E03               	movlw	3
 32348   0050FE  23CD               	addwfc	(??_inputScan+1)& (0+255),f,b
 32349   005100  C1CC  F0A4         	movff	??_inputScan,writeNVM@index
 32350   005104  C1CD  F0A5         	movff	??_inputScan+1,writeNVM@index+1
 32351   005108  0100               	movlb	0	; () banked
 32352   00510A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 32353   00510C  0EB4               	movlw	low _outputState
 32354   00510E  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32355   005110  6ED9               	movwf	fsr2l,c
 32356   005112  6ADA               	clrf	fsr2h,c
 32357   005114  0E02               	movlw	high _outputState
 32358   005116  22DA               	addwfc	fsr2h,f,c
 32359   005118  50DF               	movf	indf2,w,c
 32360   00511A  6FA7               	movwf	writeNVM@value& (0+255),b
 32361   00511C  0E00               	movlw	0
 32362   00511E  ECE7  F05B         	call	_writeNVM
 32363                           
 32364                           ;../inputs.c: 130:                      } else {
 32365   005122  D008               	goto	l22720
 32366   005124                     l22718:
 32367                           
 32368                           ; BSR set to: 0
 32369                           ;../inputs.c: 131:                         outputState[io] = input;
 32370   005124  0EB4               	movlw	low _outputState
 32371   005126  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32372   005128  6ED9               	movwf	fsr2l,c
 32373   00512A  6ADA               	clrf	fsr2h,c
 32374   00512C  0E02               	movlw	high _outputState
 32375   00512E  22DA               	addwfc	fsr2h,f,c
 32376   005130  C1CF  FFDF         	movff	inputScan@input,indf2
 32377   005134                     l22720:
 32378                           
 32379                           ;../inputs.c: 135:                     if (getNV((16 + 7*(io) + 1)) & 0x08) {
 32380   005134  0100               	movlb	0	; () banked
 32381   005136  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32382   005138  0D07               	mullw	7
 32383   00513A  50F3               	movf	243,w,c
 32384   00513C  0F11               	addlw	17
 32385   00513E  ECD9  F05D         	call	_getNV
 32386   005142  0100               	movlb	0	; () banked
 32387   005144  A78D               	btfss	?_getNV& (0+255),3,b
 32388   005146  D03F               	goto	l22736
 32389                           
 32390                           ; BSR set to: 0
 32391                           ;../inputs.c: 136:                         if (outputState[io]) {
 32392   005148  0EB4               	movlw	low _outputState
 32393   00514A  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32394   00514C  6ED9               	movwf	fsr2l,c
 32395   00514E  6ADA               	clrf	fsr2h,c
 32396   005150  0E02               	movlw	high _outputState
 32397   005152  22DA               	addwfc	fsr2h,f,c
 32398   005154  50DF               	movf	indf2,w,c
 32399   005156  B4D8               	btfsc	status,2,c
 32400   005158  D01B               	goto	l22730
 32401                           
 32402                           ; BSR set to: 0
 32403                           ;../inputs.c: 139:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32404   00515A  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32405   00515C  0D07               	mullw	7
 32406   00515E  50F3               	movf	243,w,c
 32407   005160  0F11               	addlw	17
 32408   005162  ECD9  F05D         	call	_getNV
 32409   005166  0100               	movlb	0	; () banked
 32410   005168  AD8D               	btfss	?_getNV& (0+255),6,b
 32411   00516A  D009               	goto	l22728
 32412                           
 32413                           ; BSR set to: 0
 32414                           ;../inputs.c: 140:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_OFF);
 32415   00516C  0E00               	movlw	0
 32416   00516E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32417   005170  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32418   005172  0D04               	mullw	4
 32419   005174  50F3               	movf	243,w,c
 32420   005176  0F08               	addlw	8
 32421   005178  ECC2  F04A         	call	_sendProducedEvent
 32422                           
 32423                           ;../inputs.c: 141:                             } else {
 32424   00517C  D061               	goto	l22746
 32425   00517E                     l22728:
 32426                           
 32427                           ; BSR set to: 0
 32428                           ;../inputs.c: 142:                                 sendProducedEvent(((8 + 4*(io))+0), E
      +                          VENT_ON);
 32429   00517E  0E01               	movlw	1
 32430   005180  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32431   005182  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32432   005184  0D04               	mullw	4
 32433   005186  50F3               	movf	243,w,c
 32434   005188  0F08               	addlw	8
 32435   00518A  ECC2  F04A         	call	_sendProducedEvent
 32436   00518E  D058               	goto	l22746
 32437   005190                     l22730:
 32438                           
 32439                           ; BSR set to: 0
 32440                           ;../inputs.c: 145:                             if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32441   005190  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32442   005192  0D07               	mullw	7
 32443   005194  50F3               	movf	243,w,c
 32444   005196  0F11               	addlw	17
 32445   005198  ECD9  F05D         	call	_getNV
 32446   00519C  0100               	movlb	0	; () banked
 32447   00519E  AD8D               	btfss	?_getNV& (0+255),6,b
 32448   0051A0  D009               	goto	l22734
 32449                           
 32450                           ; BSR set to: 0
 32451                           ;../inputs.c: 146:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_OFF);
 32452   0051A2  0E00               	movlw	0
 32453   0051A4  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32454   0051A6  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32455   0051A8  0D04               	mullw	4
 32456   0051AA  50F3               	movf	243,w,c
 32457   0051AC  0F09               	addlw	9
 32458   0051AE  ECC2  F04A         	call	_sendProducedEvent
 32459                           
 32460                           ;../inputs.c: 147:                             } else {
 32461   0051B2  D046               	goto	l22746
 32462   0051B4                     l22734:
 32463                           
 32464                           ; BSR set to: 0
 32465                           ;../inputs.c: 148:                                 sendProducedEvent(((8 + 4*(io))+1), E
      +                          VENT_ON);
 32466   0051B4  0E01               	movlw	1
 32467   0051B6  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32468   0051B8  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32469   0051BA  0D04               	mullw	4
 32470   0051BC  50F3               	movf	243,w,c
 32471   0051BE  0F09               	addlw	9
 32472   0051C0  ECC2  F04A         	call	_sendProducedEvent
 32473   0051C4  D03D               	goto	l22746
 32474   0051C6                     l22736:
 32475                           
 32476                           ; BSR set to: 0
 32477                           ;../inputs.c: 153:                         if (getNV((16 + 7*(io) + 1)) & 0x40) {
 32478   0051C6  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32479   0051C8  0D07               	mullw	7
 32480   0051CA  50F3               	movf	243,w,c
 32481   0051CC  0F11               	addlw	17
 32482   0051CE  ECD9  F05D         	call	_getNV
 32483   0051D2  0100               	movlb	0	; () banked
 32484   0051D4  AD8D               	btfss	?_getNV& (0+255),6,b
 32485   0051D6  D014               	goto	l22740
 32486                           
 32487                           ; BSR set to: 0
 32488                           ;../inputs.c: 154:                             sendProducedEvent(((8 + 4*(io))+0), !outp
      +                          utState[io]);
 32489   0051D8  0EB4               	movlw	low _outputState
 32490   0051DA  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32491   0051DC  6ED9               	movwf	fsr2l,c
 32492   0051DE  6ADA               	clrf	fsr2h,c
 32493   0051E0  0E02               	movlw	high _outputState
 32494   0051E2  22DA               	addwfc	fsr2h,f,c
 32495   0051E4  50DF               	movf	indf2,w,c
 32496   0051E6  A4D8               	btfss	status,2,c
 32497   0051E8  D002               	goto	u24070
 32498   0051EA  0E01               	movlw	1
 32499   0051EC  D001               	goto	u24080
 32500   0051EE                     u24070:
 32501   0051EE  0E00               	movlw	0
 32502   0051F0                     u24080:
 32503   0051F0  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32504   0051F2  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32505   0051F4  0D04               	mullw	4
 32506   0051F6  50F3               	movf	243,w,c
 32507   0051F8  0F08               	addlw	8
 32508   0051FA  ECC2  F04A         	call	_sendProducedEvent
 32509                           
 32510                           ;../inputs.c: 155:                         } else {
 32511   0051FE  D020               	goto	l22746
 32512   005200                     l22740:
 32513                           
 32514                           ; BSR set to: 0
 32515                           ;../inputs.c: 156:                             sendProducedEvent(((8 + 4*(io))+0), outpu
      +                          tState[io]);
 32516   005200  0EB4               	movlw	low _outputState
 32517   005202  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32518   005204  6ED9               	movwf	fsr2l,c
 32519   005206  6ADA               	clrf	fsr2h,c
 32520   005208  0E02               	movlw	high _outputState
 32521   00520A  22DA               	addwfc	fsr2h,f,c
 32522   00520C  50DF               	movf	indf2,w,c
 32523   00520E  6FA7               	movwf	sendProducedEvent@onOff& (0+255),b
 32524   005210  51D0               	movf	_io@inputs$F849& (0+255),w,b
 32525   005212  0D04               	mullw	4
 32526   005214  50F3               	movf	243,w,c
 32527   005216  0F08               	addlw	8
 32528   005218  ECC2  F04A         	call	_sendProducedEvent
 32529   00521C  D011               	goto	l22746
 32530   00521E                     l22742:
 32531                           
 32532                           ; BSR set to: 1
 32533                           ;../inputs.c: 160:                     delayCount[io]++;
 32534   00521E  0E84               	movlw	low _delayCount
 32535   005220  0100               	movlb	0	; () banked
 32536   005222  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32537   005224  6ED9               	movwf	fsr2l,c
 32538   005226  6ADA               	clrf	fsr2h,c
 32539   005228  0E02               	movlw	high _delayCount
 32540   00522A  22DA               	addwfc	fsr2h,f,c
 32541   00522C  2ADF               	incf	indf2,f,c
 32542   00522E  D008               	goto	l22746
 32543   005230                     l22744:
 32544                           
 32545                           ; BSR set to: 1
 32546                           ;../inputs.c: 163:                 delayCount[io] = 0;
 32547   005230  0E84               	movlw	low _delayCount
 32548   005232  0100               	movlb	0	; () banked
 32549   005234  25D0               	addwf	_io@inputs$F849& (0+255),w,b
 32550   005236  6ED9               	movwf	fsr2l,c
 32551   005238  6ADA               	clrf	fsr2h,c
 32552   00523A  0E02               	movlw	high _delayCount
 32553   00523C  22DA               	addwfc	fsr2h,f,c
 32554   00523E  6ADF               	clrf	indf2,c
 32555   005240                     l22746:
 32556   005240  0100               	movlb	0	; () banked
 32557   005242  2BD0               	incf	_io@inputs$F849& (0+255),f,b
 32558   005244  D69D               	goto	l22680
 32559   005246                     __end_of_inputScan:
 32560                           	callstack 0
 32561                           
 32562 ;; *************** function _sendProducedEvent *****************
 32563 ;; Defined at:
 32564 ;;		line 217 in file "../../VLCBlib_PIC/event_producer_happening.c"
 32565 ;; Parameters:    Size  Location     Type
 32566 ;;  happening       1    wreg     unsigned char 
 32567 ;;  onOff           1   71[BANK0 ] enum E12730
 32568 ;; Auto vars:     Size  Location     Type
 32569 ;;  happening       1   17[BANK1 ] unsigned char 
 32570 ;;  producedEven    2   15[BANK1 ] struct Word
 32571 ;;  producedEven    2   13[BANK1 ] struct Word
 32572 ;;  opc             1   12[BANK1 ] unsigned char 
 32573 ;; Return value:  Size  Location     Type
 32574 ;;                  1    wreg      enum E12710
 32575 ;; Registers used:
 32576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32577 ;; Tracked objects:
 32578 ;;		On entry : 0/0
 32579 ;;		On exit  : 0/0
 32580 ;;		Unchanged: 0/0
 32581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32582 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32583 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32584 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32585 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32586 ;;Total ram usage:        8 bytes
 32587 ;; Hardware stack levels used: 1
 32588 ;; Hardware stack levels required when called: 17
 32589 ;; This function calls:
 32590 ;;		_getEN
 32591 ;;		_getNN
 32592 ;;		_sendMessage4
 32593 ;; This function is called by:
 32594 ;;		_loop
 32595 ;;		_processOutputs
 32596 ;;		_inputScan
 32597 ;;		_sendInvertedProducedEvent
 32598 ;;		_pollServos
 32599 ;;		_alwaysSendInvertedProducedEvent
 32600 ;; This function uses a non-reentrant model
 32601 ;;
 32602                           
 32603                           	psect	text127
 32604   009584                     __ptext127:
 32605                           	callstack 0
 32606   009584                     _sendProducedEvent:
 32607                           	callstack 9
 32608                           
 32609                           ; BSR set to: 0
 32610                           ;incstack = 0
 32611                           ;sendProducedEvent@happening stored from wreg
 32612   009584  0101               	movlb	1	; () banked
 32613   009586  6FCB               	movwf	sendProducedEvent@happening& (0+255),b
 32614                           
 32615                           ;../../VLCBlib_PIC/event_producer_happening.c: 218:     Word producedEventNN;;../../VLCB
      +                          lib_PIC/event_producer_happening.c: 219:     Word producedEventEN;;../../VLCBlib_PIC/eve
      +                          nt_producer_happening.c: 220:     uint8_t opc;;../../VLCBlib_PIC/event_producer_happenin
      +                          g.c: 226:     if ((happening < 1) || (happening > (7+16*4))) return FALSE;
 32616   009588  0101               	movlb	1	; () banked
 32617   00958A  51CB               	movf	sendProducedEvent@happening& (0+255),w,b
 32618   00958C  B4D8               	btfsc	status,2,c
 32619   00958E  D003               	goto	u19690
 32620                           
 32621                           ; BSR set to: 1
 32622   009590  0E47               	movlw	71
 32623   009592  65CB               	cpfsgt	sendProducedEvent@happening& (0+255),b
 32624   009594  D002               	goto	l19656
 32625   009596                     u19690:
 32626                           
 32627                           ; BSR set to: 1
 32628   009596  0E00               	movlw	0
 32629   009598  0012               	return	
 32630   00959A                     l19656:
 32631                           
 32632                           ; BSR set to: 1
 32633                           ;../../VLCBlib_PIC/event_producer_happening.c: 227:     if (happening2Event[happening-1]
      +                           == 0xff) return FALSE;
 32634   00959A  0EFF               	movlw	low (_happening2Event+65535)
 32635   00959C  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32636   00959E  6ED9               	movwf	fsr2l,c
 32637   0095A0  6ADA               	clrf	fsr2h,c
 32638   0095A2  0E02               	movlw	high (_happening2Event+65535)
 32639   0095A4  22DA               	addwfc	fsr2h,f,c
 32640   0095A6  28DE               	incf	postinc2,w,c
 32641   0095A8  B4D8               	btfsc	status,2,c
 32642   0095AA  D7F5               	goto	u19690
 32643                           
 32644                           ; BSR set to: 1
 32645                           ;../../VLCBlib_PIC/event_producer_happening.c: 228:     producedEventNN.word = getNN(hap
      +                          pening2Event[happening-1]);
 32646   0095AC  0EFF               	movlw	low (_happening2Event+65535)
 32647   0095AE  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32648   0095B0  6ED9               	movwf	fsr2l,c
 32649   0095B2  6ADA               	clrf	fsr2h,c
 32650   0095B4  0E02               	movlw	high (_happening2Event+65535)
 32651   0095B6  22DA               	addwfc	fsr2h,f,c
 32652   0095B8  50DF               	movf	indf2,w,c
 32653   0095BA  EC46  F049         	call	_getNN
 32654   0095BE  C097  F1C9         	movff	?_getNN,sendProducedEvent@producedEventNN
 32655   0095C2  C098  F1CA         	movff	?_getNN+1,sendProducedEvent@producedEventNN+1
 32656                           
 32657                           ;../../VLCBlib_PIC/event_producer_happening.c: 229:     producedEventEN.word = getEN(hap
      +                          pening2Event[happening-1]);
 32658   0095C6  0EFF               	movlw	low (_happening2Event+65535)
 32659   0095C8  0101               	movlb	1	; () banked
 32660   0095CA  25CB               	addwf	sendProducedEvent@happening& (0+255),w,b
 32661   0095CC  6ED9               	movwf	fsr2l,c
 32662   0095CE  6ADA               	clrf	fsr2h,c
 32663   0095D0  0E02               	movlw	high (_happening2Event+65535)
 32664   0095D2  22DA               	addwfc	fsr2h,f,c
 32665   0095D4  50DF               	movf	indf2,w,c
 32666   0095D6  EC22  F055         	call	_getEN
 32667   0095DA  C097  F1C7         	movff	?_getEN,sendProducedEvent@producedEventEN
 32668   0095DE  C098  F1C8         	movff	?_getEN+1,sendProducedEvent@producedEventEN+1
 32669                           
 32670                           ;../../VLCBlib_PIC/event_producer_happening.c: 253:                 if (producedEventNN.
      +                          word == 0) {
 32671   0095E2  0101               	movlb	1	; () banked
 32672   0095E4  51C9               	movf	sendProducedEvent@producedEventNN& (0+255),w,b
 32673   0095E6  11CA               	iorwf	(sendProducedEvent@producedEventNN+1)& (0+255),w,b
 32674   0095E8  A4D8               	btfss	status,2,c
 32675   0095EA  D00E               	goto	l19674
 32676                           
 32677                           ; BSR set to: 1
 32678                           ;../../VLCBlib_PIC/event_producer_happening.c: 255:                     if (onOff == EVE
      +                          NT_ON) {
 32679   0095EC  0100               	movlb	0	; () banked
 32680   0095EE  05A7               	decf	sendProducedEvent@onOff& (0+255),w,b
 32681   0095F0  A4D8               	btfss	status,2,c
 32682   0095F2  D002               	goto	l19670
 32683                           
 32684                           ; BSR set to: 0
 32685                           ;../../VLCBlib_PIC/event_producer_happening.c: 256:                         opc = OPC_AS
      +                          ON;
 32686   0095F4  0E98               	movlw	152
 32687   0095F6  D001               	goto	L14
 32688   0095F8                     l19670:
 32689                           
 32690                           ; BSR set to: 0
 32691                           ;../../VLCBlib_PIC/event_producer_happening.c: 258:                         opc = OPC_AS
      +                          OF;
 32692   0095F8  0E99               	movlw	153
 32693   0095FA                     L14:
 32694   0095FA  0101               	movlb	1	; () banked
 32695   0095FC  6FC6               	movwf	sendProducedEvent@opc& (0+255),b
 32696                           
 32697                           ; BSR set to: 1
 32698                           ;../../VLCBlib_PIC/event_producer_happening.c: 260:                     producedEventNN.
      +                          word = nn.word;
 32699   0095FE  C0BF  F1C9         	movff	_nn,sendProducedEvent@producedEventNN
 32700   009602  C0C0  F1CA         	movff	_nn+1,sendProducedEvent@producedEventNN+1
 32701                           
 32702                           ;../../VLCBlib_PIC/event_producer_happening.c: 261:                 } else {
 32703   009606  D009               	goto	l19680
 32704   009608                     l19674:
 32705                           
 32706                           ; BSR set to: 1
 32707                           ;../../VLCBlib_PIC/event_producer_happening.c: 263:                     if (onOff == EVE
      +                          NT_ON) {
 32708   009608  0100               	movlb	0	; () banked
 32709   00960A  05A7               	decf	sendProducedEvent@onOff& (0+255),w,b
 32710   00960C  A4D8               	btfss	status,2,c
 32711   00960E  D002               	goto	l19678
 32712                           
 32713                           ; BSR set to: 0
 32714                           ;../../VLCBlib_PIC/event_producer_happening.c: 264:                         opc = OPC_AC
      +                          ON;
 32715   009610  0E90               	movlw	144
 32716   009612  D001               	goto	L15
 32717   009614                     l19678:
 32718                           
 32719                           ; BSR set to: 0
 32720                           ;../../VLCBlib_PIC/event_producer_happening.c: 266:                         opc = OPC_AC
      +                          OF;
 32721   009614  0E91               	movlw	145
 32722   009616                     L15:
 32723   009616  0101               	movlb	1	; () banked
 32724   009618  6FC6               	movwf	sendProducedEvent@opc& (0+255),b
 32725   00961A                     l19680:
 32726                           
 32727                           ; BSR set to: 1
 32728                           ;../../VLCBlib_PIC/event_producer_happening.c: 269:                 sendMessage4(opc, pr
      +                          oducedEventNN.bytes.hi, producedEventNN.bytes.lo, producedEventEN.bytes.hi, producedEven
      +                          tEN.bytes.lo);
 32729   00961A  C1CA  F1C2         	movff	sendProducedEvent@producedEventNN+1,sendMessage4@data1
 32730   00961E  C1C9  F1C3         	movff	sendProducedEvent@producedEventNN,sendMessage4@data2
 32731   009622  C1C8  F1C4         	movff	sendProducedEvent@producedEventEN+1,sendMessage4@data3
 32732   009626  C1C7  F1C5         	movff	sendProducedEvent@producedEventEN,sendMessage4@data4
 32733   00962A  51C6               	movf	sendProducedEvent@opc& (0+255),w,b
 32734   00962C  EC80  F05F         	call	_sendMessage4
 32735                           
 32736                           ;../../VLCBlib_PIC/event_producer_happening.c: 271:                 producerDiagnostics[
      +                          1].asUint++;
 32737   009630  0101               	movlb	1	; () banked
 32738   009632  4BAC               	infsnz	(_producerDiagnostics+2)& (0+255),f,b
 32739   009634  2BAD               	incf	(_producerDiagnostics+3)& (0+255),f,b
 32740                           
 32741                           ; BSR set to: 1
 32742                           ;../../VLCBlib_PIC/event_producer_happening.c: 273:                 return TRUE;
 32743   009636  0E01               	movlw	1
 32744                           
 32745                           ; BSR set to: 1
 32746   009638  0012               	return		;funcret
 32747   00963A                     __end_of_sendProducedEvent:
 32748                           	callstack 0
 32749                           
 32750 ;; *************** function _sendMessage4 *****************
 32751 ;; Defined at:
 32752 ;;		line 1167 in file "../../VLCBlib_PIC/vlcb.c"
 32753 ;; Parameters:    Size  Location     Type
 32754 ;;  opc             1    wreg     enum E12392
 32755 ;;  data1           1    8[BANK1 ] unsigned char 
 32756 ;;  data2           1    9[BANK1 ] unsigned char 
 32757 ;;  data3           1   10[BANK1 ] unsigned char 
 32758 ;;  data4           1   11[BANK1 ] unsigned char 
 32759 ;; Auto vars:     Size  Location     Type
 32760 ;;  opc             1   70[BANK0 ] enum E12392
 32761 ;; Return value:  Size  Location     Type
 32762 ;;                  1    wreg      void 
 32763 ;; Registers used:
 32764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32765 ;; Tracked objects:
 32766 ;;		On entry : 0/0
 32767 ;;		On exit  : 0/0
 32768 ;;		Unchanged: 0/0
 32769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32770 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32773 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32774 ;;Total ram usage:        5 bytes
 32775 ;; Hardware stack levels used: 1
 32776 ;; Hardware stack levels required when called: 16
 32777 ;; This function calls:
 32778 ;;		_sendMessage
 32779 ;; This function is called by:
 32780 ;;		_mnsProcessMessage
 32781 ;;		_mnsTRrqnpnCallback
 32782 ;;		_nvProcessMessage
 32783 ;;		_nvTRnvrdCallback
 32784 ;;		_producerProcessMessage
 32785 ;;		_sendProducedEvent
 32786 ;; This function uses a non-reentrant model
 32787 ;;
 32788                           
 32789                           	psect	text128
 32790   00BF00                     __ptext128:
 32791                           	callstack 0
 32792   00BF00                     _sendMessage4:
 32793                           	callstack 12
 32794                           
 32795                           ; BSR set to: 1
 32796                           ;incstack = 0
 32797                           ;sendMessage4@opc stored from wreg
 32798   00BF00  0100               	movlb	0	; () banked
 32799   00BF02  6FA6               	movwf	sendMessage4@opc& (0+255),b
 32800                           
 32801                           ;../../VLCBlib_PIC/vlcb.c: 1168:     sendMessage(opc, 5, data1, data2, data3, data4, 0,0
      +                          ,0);
 32802   00BF04  0E05               	movlw	5
 32803   00BF06  0101               	movlb	1	; () banked
 32804   00BF08  6FBA               	movwf	sendMessage@len& (0+255),b
 32805   00BF0A  C1C2  F1BB         	movff	sendMessage4@data1,sendMessage@data1
 32806   00BF0E  C1C3  F1BC         	movff	sendMessage4@data2,sendMessage@data2
 32807   00BF12  C1C4  F1BD         	movff	sendMessage4@data3,sendMessage@data3
 32808   00BF16  C1C5  F1BE         	movff	sendMessage4@data4,sendMessage@data4
 32809   00BF1A  0E00               	movlw	0
 32810   00BF1C  6FBF               	movwf	sendMessage@data5& (0+255),b
 32811   00BF1E  0E00               	movlw	0
 32812   00BF20  6FC0               	movwf	sendMessage@data6& (0+255),b
 32813   00BF22  0E00               	movlw	0
 32814   00BF24  6FC1               	movwf	sendMessage@data7& (0+255),b
 32815   00BF26  0100               	movlb	0	; () banked
 32816   00BF28  51A6               	movf	sendMessage4@opc& (0+255),w,b
 32817   00BF2A  EC2A  F054         	call	_sendMessage
 32818   00BF2E  0012               	return		;funcret
 32819   00BF30                     __end_of_sendMessage4:
 32820                           	callstack 0
 32821                           
 32822 ;; *************** function _sendMessage *****************
 32823 ;; Defined at:
 32824 ;;		line 1225 in file "../../VLCBlib_PIC/vlcb.c"
 32825 ;; Parameters:    Size  Location     Type
 32826 ;;  opc             1    wreg     enum E12392
 32827 ;;  len             1    0[BANK1 ] unsigned char 
 32828 ;;  data1           1    1[BANK1 ] unsigned char 
 32829 ;;  data2           1    2[BANK1 ] unsigned char 
 32830 ;;  data3           1    3[BANK1 ] unsigned char 
 32831 ;;  data4           1    4[BANK1 ] unsigned char 
 32832 ;;  data5           1    5[BANK1 ] unsigned char 
 32833 ;;  data6           1    6[BANK1 ] unsigned char 
 32834 ;;  data7           1    7[BANK1 ] unsigned char 
 32835 ;; Auto vars:     Size  Location     Type
 32836 ;;  opc             1   69[BANK0 ] enum E12392
 32837 ;; Return value:  Size  Location     Type
 32838 ;;                  1    wreg      void 
 32839 ;; Registers used:
 32840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 32841 ;; Tracked objects:
 32842 ;;		On entry : 0/0
 32843 ;;		On exit  : 0/0
 32844 ;;		Unchanged: 0/0
 32845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32846 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32848 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32849 ;;      Totals:         0       3       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32850 ;;Total ram usage:       11 bytes
 32851 ;; Hardware stack levels used: 1
 32852 ;; Hardware stack levels required when called: 15
 32853 ;; This function calls:
 32854 ;;		_canSendMessage
 32855 ;; This function is called by:
 32856 ;;		_sendMessage2
 32857 ;;		_sendMessage3
 32858 ;;		_sendMessage4
 32859 ;;		_sendMessage5
 32860 ;;		_sendMessage6
 32861 ;;		_sendMessage7
 32862 ;;		_sendMessage0
 32863 ;;		_sendMessage1
 32864 ;; This function uses a non-reentrant model
 32865 ;;
 32866                           
 32867                           	psect	text129
 32868   00A854                     __ptext129:
 32869                           	callstack 0
 32870   00A854                     _sendMessage:
 32871                           	callstack 11
 32872                           
 32873                           ;incstack = 0
 32874                           ;sendMessage@opc stored from wreg
 32875   00A854  0100               	movlb	0	; () banked
 32876   00A856  6FA5               	movwf	sendMessage@opc& (0+255),b
 32877                           
 32878                           ;../../VLCBlib_PIC/vlcb.c: 1226:     tmpMessage.opc = opc;
 32879   00A858  C0A5  F19C         	movff	sendMessage@opc,_tmpMessage+1
 32880                           
 32881                           ;../../VLCBlib_PIC/vlcb.c: 1227:     tmpMessage.len = len;
 32882   00A85C  C1BA  F19B         	movff	sendMessage@len,_tmpMessage
 32883                           
 32884                           ;../../VLCBlib_PIC/vlcb.c: 1228:     tmpMessage.bytes[0] = data1;
 32885   00A860  C1BB  F19D         	movff	sendMessage@data1,_tmpMessage+2
 32886                           
 32887                           ;../../VLCBlib_PIC/vlcb.c: 1229:     tmpMessage.bytes[1] = data2;
 32888   00A864  C1BC  F19E         	movff	sendMessage@data2,_tmpMessage+3
 32889                           
 32890                           ;../../VLCBlib_PIC/vlcb.c: 1230:     tmpMessage.bytes[2] = data3;
 32891   00A868  C1BD  F19F         	movff	sendMessage@data3,_tmpMessage+4
 32892                           
 32893                           ;../../VLCBlib_PIC/vlcb.c: 1231:     tmpMessage.bytes[3] = data4;
 32894   00A86C  C1BE  F1A0         	movff	sendMessage@data4,_tmpMessage+5
 32895                           
 32896                           ;../../VLCBlib_PIC/vlcb.c: 1232:     tmpMessage.bytes[4] = data5;
 32897   00A870  C1BF  F1A1         	movff	sendMessage@data5,_tmpMessage+6
 32898                           
 32899                           ;../../VLCBlib_PIC/vlcb.c: 1233:     tmpMessage.bytes[5] = data6;
 32900   00A874  C1C0  F1A2         	movff	sendMessage@data6,_tmpMessage+7
 32901                           
 32902                           ;../../VLCBlib_PIC/vlcb.c: 1234:     tmpMessage.bytes[6] = data7;
 32903   00A878  C1C1  F1A3         	movff	sendMessage@data7,_tmpMessage+8
 32904                           
 32905                           ;../../VLCBlib_PIC/vlcb.c: 1235:     if (transport != ((void*)0)) {
 32906   00A87C  0101               	movlb	1	; () banked
 32907   00A87E  5162               	movf	_transport& (0+255),w,b
 32908   00A880  1163               	iorwf	(_transport+1)& (0+255),w,b
 32909   00A882  B4D8               	btfsc	status,2,c
 32910   00A884  0012               	return	
 32911                           
 32912                           ; BSR set to: 1
 32913                           ;../../VLCBlib_PIC/vlcb.c: 1236:         if (transport->sendMessage != ((void*)0)) {
 32914   00A886  C162  FFF6         	movff	_transport,tblptrl
 32915   00A88A  C163  FFF7         	movff	_transport+1,tblptrh
 32916   00A88E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32917   00A88E  6AF8               	clrf	tblptru,c
 32918   00A890                     	endif
 32919   00A890                     	if	0	;tblptru may be non-zero
 32920   00A890                     	endif
 32921   00A890  0009               	tblrd		*+
 32922   00A892  50F5               	movf	tablat,w,c
 32923   00A894  0009               	tblrd		*+
 32924   00A896  10F5               	iorwf	tablat,w,c
 32925   00A898  B4D8               	btfsc	status,2,c
 32926   00A89A  0012               	return	
 32927                           
 32928                           ; BSR set to: 1
 32929                           ;../../VLCBlib_PIC/vlcb.c: 1237:             transport->sendMessage(&tmpMessage);
 32930   00A89C  0E9B               	movlw	low _tmpMessage
 32931   00A89E  0100               	movlb	0	; () banked
 32932   00A8A0  6F99               	movwf	canSendMessage@mp& (0+255),b
 32933   00A8A2  0E01               	movlw	high _tmpMessage
 32934   00A8A4  6F9A               	movwf	(canSendMessage@mp+1)& (0+255),b
 32935   00A8A6  C162  FFF6         	movff	_transport,tblptrl
 32936   00A8AA  C163  FFF7         	movff	_transport+1,tblptrh
 32937   00A8AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 32938   00A8AE  6AF8               	clrf	tblptru,c
 32939   00A8B0                     	endif
 32940   00A8B0                     	if	0	;tblptru may be non-zero
 32941   00A8B0                     	endif
 32942   00A8B0  0009               	tblrd		*+
 32943   00A8B2  CFF5 F0A3          	movff	tablat,??_sendMessage
 32944   00A8B6  0009               	tblrd		*+
 32945   00A8B8  CFF5 F0A4          	movff	tablat,??_sendMessage+1
 32946   00A8BC  D801               	call	u19348
 32947   00A8BE  0012               	return	
 32948   00A8C0                     u19348:
 32949   00A8C0  0005               	push	
 32950   00A8C2  6EFA               	movwf	pclath,c
 32951   00A8C4  51A3               	movf	??_sendMessage& (0+255),w,b
 32952   00A8C6  6EFD               	movwf	tosl,c
 32953   00A8C8  51A4               	movf	(??_sendMessage+1)& (0+255),w,b
 32954   00A8CA  6EFE               	movwf	tosh,c
 32955   00A8CC  6AFF               	clrf	tosu,c
 32956   00A8CE  50FA               	movf	pclath,w,c
 32957   00A8D0  0012               	return		;indir
 32958   00A8D2                     __end_of_sendMessage:
 32959                           	callstack 0
 32960                           
 32961 ;; *************** function _canSendMessage *****************
 32962 ;; Defined at:
 32963 ;;		line 493 in file "../../VLCBlib_PIC/can18_ecan.c"
 32964 ;; Parameters:    Size  Location     Type
 32965 ;;  mp              2   57[BANK0 ] PTR struct Message
 32966 ;;		 -> tmpMessage(9), 
 32967 ;; Auto vars:     Size  Location     Type
 32968 ;;  m               2   65[BANK0 ] PTR struct Message
 32969 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 32970 ;;  no              1   64[BANK0 ] unsigned char 
 32971 ;; Return value:  Size  Location     Type
 32972 ;;                  1    wreg      enum E13075
 32973 ;; Registers used:
 32974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32975 ;; Tracked objects:
 32976 ;;		On entry : 0/0
 32977 ;;		On exit  : 0/0
 32978 ;;		Unchanged: 0/0
 32979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32980 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32981 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32982 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32983 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32984 ;;Total ram usage:       10 bytes
 32985 ;; Hardware stack levels used: 1
 32986 ;; Hardware stack levels required when called: 14
 32987 ;; This function calls:
 32988 ;;		_getNextWriteMessage
 32989 ;;		_getNumTxBuffersInUse
 32990 ;;		_have
 32991 ;;		_isEvent
 32992 ;;		_push
 32993 ;;		_quantity
 32994 ;;		_updateModuleErrorStatus
 32995 ;; This function is called by:
 32996 ;;		_sendMessage
 32997 ;; This function uses a non-reentrant model
 32998 ;;
 32999                           
 33000                           	psect	text130
 33001   0049A0                     __ptext130:
 33002                           	callstack 0
 33003   0049A0                     _canSendMessage:
 33004                           	callstack 11
 33005                           
 33006                           ;../../VLCBlib_PIC/can18_ecan.c: 495:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 4
      +                          98:     uint8_t no;;../../VLCBlib_PIC/can18_ecan.c: 502:     PIE5bits.TXBnIE = 0;
 33007                           
 33008                           ;incstack = 0
 33009   0049A0  9876               	bcf	118,4,c	;volatile
 33010                           
 33011                           ;../../VLCBlib_PIC/can18_ecan.c: 503:     if (quantity(&txQueue) == 0) {
 33012   0049A2  0E48               	movlw	low _txQueue
 33013   0049A4  0100               	movlb	0	; () banked
 33014   0049A6  6F8D               	movwf	quantity@q& (0+255),b
 33015   0049A8  EC89  F05E         	call	_quantity	;wreg free
 33016   0049AC  0900               	iorlw	0
 33017   0049AE  A4D8               	btfss	status,2,c
 33018   0049B0  D150               	goto	l19288
 33019                           
 33020                           ;../../VLCBlib_PIC/can18_ecan.c: 505:         if (TXB0CONbits.TXREQ == 0) {
 33021   0049B2  010F               	movlb	15	; () banked
 33022   0049B4  B720               	btfsc	32,3,b	;volatile
 33023   0049B6  D14D               	goto	l19288
 33024                           
 33025                           ; BSR set to: 15
 33026                           ;../../VLCBlib_PIC/can18_ecan.c: 507:             if ((canId == 0) && (enumerationState 
      +                          == NO_ENUMERATION)) {
 33027   0049B8  0100               	movlb	0	; () banked
 33028   0049BA  51C3               	movf	_canId& (0+255),w,b
 33029   0049BC  A4D8               	btfss	status,2,c
 33030   0049BE  D007               	goto	l19224
 33031                           
 33032                           ; BSR set to: 0
 33033   0049C0  51C1               	movf	_enumerationState& (0+255),w,b
 33034   0049C2  A4D8               	btfss	status,2,c
 33035   0049C4  D004               	goto	l19224
 33036                           
 33037                           ; BSR set to: 0
 33038                           ;../../VLCBlib_PIC/can18_ecan.c: 508:                 enumerationState = ENUMERATION_REQ
      +                          UIRED;
 33039   0049C6  0E01               	movlw	1
 33040   0049C8  6FC1               	movwf	_enumerationState& (0+255),b
 33041                           
 33042                           ;../../VLCBlib_PIC/can18_ecan.c: 509:                 canId = 1;
 33043   0049CA  0E01               	movlw	1
 33044   0049CC  6FC3               	movwf	_canId& (0+255),b
 33045   0049CE                     l19224:
 33046                           
 33047                           ; BSR set to: 0
 33048                           ;../../VLCBlib_PIC/can18_ecan.c: 511:             PIE5bits.TXBnIE = 1;
 33049   0049CE  8876               	bsf	118,4,c	;volatile
 33050                           
 33051                           ; BSR set to: 0
 33052                           ;../../VLCBlib_PIC/can18_ecan.c: 513:             if (mp->len >8) mp->len = 8;
 33053   0049D0  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33054   0049D4  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33055   0049D8  0E08               	movlw	8
 33056   0049DA  64DF               	cpfsgt	indf2,c
 33057   0049DC  D006               	goto	l19230
 33058                           
 33059                           ; BSR set to: 0
 33060   0049DE  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33061   0049E2  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33062   0049E6  0E08               	movlw	8
 33063   0049E8  6EDF               	movwf	indf2,c
 33064   0049EA                     l19230:
 33065                           
 33066                           ; BSR set to: 0
 33067                           ;../../VLCBlib_PIC/can18_ecan.c: 515:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 33068   0049EA  EE20 F001          	lfsr	2,1
 33069   0049EE  5199               	movf	canSendMessage@mp& (0+255),w,b
 33070   0049F0  26D9               	addwf	fsr2l,f,c
 33071   0049F2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33072   0049F4  22DA               	addwfc	fsr2h,f,c
 33073   0049F6  50DF               	movf	indf2,w,c
 33074   0049F8  6F9B               	movwf	??_canSendMessage& (0+255),b
 33075   0049FA  6B9C               	clrf	(??_canSendMessage+1)& (0+255),b
 33076   0049FC  0E35               	movlw	low _priorities
 33077   0049FE  259B               	addwf	??_canSendMessage& (0+255),w,b
 33078   004A00  6EF6               	movwf	tblptrl,c
 33079   004A02  0EED               	movlw	high _priorities
 33080   004A04  219C               	addwfc	(??_canSendMessage+1)& (0+255),w,b
 33081   004A06  6EF7               	movwf	tblptrh,c
 33082   004A08                     	if	1	;There are 3 active tblptr bytes
 33083   004A08  6AF8               	clrf	tblptru,c
 33084   004A0A  0E00               	movlw	low (__mediumconst shr (0+16))
 33085   004A0C  22F8               	addwfc	tblptru,f,c
 33086   004A0E                     	endif
 33087   004A0E  0008               	tblrd		*
 33088   004A10  50F5               	movf	tablat,w,c
 33089   004A12  6F9D               	movwf	(??_canSendMessage+2)& (0+255),b
 33090   004A14  6B9E               	clrf	(??_canSendMessage+3)& (0+255),b
 33091   004A16  0E87               	movlw	low _canPri
 33092   004A18  259D               	addwf	(??_canSendMessage+2)& (0+255),w,b
 33093   004A1A  6EF6               	movwf	tblptrl,c
 33094   004A1C  0EEE               	movlw	high _canPri
 33095   004A1E  219E               	addwfc	(??_canSendMessage+3)& (0+255),w,b
 33096   004A20  6EF7               	movwf	tblptrh,c
 33097   004A22                     	if	1	;There are 3 active tblptr bytes
 33098   004A22  6AF8               	clrf	tblptru,c
 33099   004A24  0E00               	movlw	low (__mediumconst shr (0+16))
 33100   004A26  22F8               	addwfc	tblptru,f,c
 33101   004A28                     	endif
 33102   004A28  0008               	tblrd		*
 33103   004A2A  CFF5 F09F          	movff	tablat,??_canSendMessage+4
 33104   004A2E  39C3               	swapf	_canId& (0+255),w,b
 33105   004A30  46E8               	rlncf	wreg,f,c
 33106   004A32  0B1F               	andlw	31
 33107   004A34  0B0F               	andlw	15
 33108   004A36  119F               	iorwf	(??_canSendMessage+4)& (0+255),w,b
 33109   004A38  010F               	movlb	15	; () banked
 33110   004A3A  6F21               	movwf	33,b	;volatile
 33111                           
 33112                           ; BSR set to: 15
 33113                           ;../../VLCBlib_PIC/can18_ecan.c: 516:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 33114   004A3C  C0C3  F09B         	movff	_canId,??_canSendMessage
 33115   004A40  0E07               	movlw	7
 33116   004A42  0100               	movlb	0	; () banked
 33117   004A44  179B               	andwf	??_canSendMessage& (0+255),f,b
 33118   004A46  0E05               	movlw	5
 33119   004A48  6F9C               	movwf	(??_canSendMessage+1)& (0+255),b
 33120   004A4A                     u19005:
 33121   004A4A  90D8               	bcf	status,0,c
 33122   004A4C  379B               	rlcf	??_canSendMessage& (0+255),f,b
 33123   004A4E  2F9C               	decfsz	(??_canSendMessage+1)& (0+255),f,b
 33124   004A50  D7FC               	goto	u19005
 33125   004A52  519B               	movf	??_canSendMessage& (0+255),w,b
 33126   004A54  010F               	movlb	15	; () banked
 33127   004A56  6F22               	movwf	34,b	;volatile
 33128                           
 33129                           ; BSR set to: 15
 33130                           ;../../VLCBlib_PIC/can18_ecan.c: 517:             TXB0D0 = mp->opc;
 33131   004A58  0100               	movlb	0	; () banked
 33132   004A5A  EE20 F001          	lfsr	2,1
 33133   004A5E  5199               	movf	canSendMessage@mp& (0+255),w,b
 33134   004A60  26D9               	addwf	fsr2l,f,c
 33135   004A62  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33136   004A64  22DA               	addwfc	fsr2h,f,c
 33137   004A66  50DF               	movf	indf2,w,c
 33138   004A68  010F               	movlb	15	; () banked
 33139   004A6A  6F26               	movwf	38,b	;volatile
 33140                           
 33141                           ; BSR set to: 15
 33142                           ;../../VLCBlib_PIC/can18_ecan.c: 518:             TXB0D1 = mp->bytes[0];
 33143   004A6C  0100               	movlb	0	; () banked
 33144   004A6E  EE20 F002          	lfsr	2,2
 33145   004A72  5199               	movf	canSendMessage@mp& (0+255),w,b
 33146   004A74  26D9               	addwf	fsr2l,f,c
 33147   004A76  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33148   004A78  22DA               	addwfc	fsr2h,f,c
 33149   004A7A  50DF               	movf	indf2,w,c
 33150   004A7C  010F               	movlb	15	; () banked
 33151   004A7E  6F27               	movwf	39,b	;volatile
 33152                           
 33153                           ; BSR set to: 15
 33154                           ;../../VLCBlib_PIC/can18_ecan.c: 519:             TXB0D2 = mp->bytes[1];
 33155   004A80  0100               	movlb	0	; () banked
 33156   004A82  EE20 F003          	lfsr	2,3
 33157   004A86  5199               	movf	canSendMessage@mp& (0+255),w,b
 33158   004A88  26D9               	addwf	fsr2l,f,c
 33159   004A8A  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33160   004A8C  22DA               	addwfc	fsr2h,f,c
 33161   004A8E  50DF               	movf	indf2,w,c
 33162   004A90  010F               	movlb	15	; () banked
 33163   004A92  6F28               	movwf	40,b	;volatile
 33164                           
 33165                           ; BSR set to: 15
 33166                           ;../../VLCBlib_PIC/can18_ecan.c: 520:             TXB0D3 = mp->bytes[2];
 33167   004A94  0100               	movlb	0	; () banked
 33168   004A96  EE20 F004          	lfsr	2,4
 33169   004A9A  5199               	movf	canSendMessage@mp& (0+255),w,b
 33170   004A9C  26D9               	addwf	fsr2l,f,c
 33171   004A9E  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33172   004AA0  22DA               	addwfc	fsr2h,f,c
 33173   004AA2  50DF               	movf	indf2,w,c
 33174   004AA4  010F               	movlb	15	; () banked
 33175   004AA6  6F29               	movwf	41,b	;volatile
 33176                           
 33177                           ; BSR set to: 15
 33178                           ;../../VLCBlib_PIC/can18_ecan.c: 521:             TXB0D4 = mp->bytes[3];
 33179   004AA8  0100               	movlb	0	; () banked
 33180   004AAA  EE20 F005          	lfsr	2,5
 33181   004AAE  5199               	movf	canSendMessage@mp& (0+255),w,b
 33182   004AB0  26D9               	addwf	fsr2l,f,c
 33183   004AB2  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33184   004AB4  22DA               	addwfc	fsr2h,f,c
 33185   004AB6  50DF               	movf	indf2,w,c
 33186   004AB8  010F               	movlb	15	; () banked
 33187   004ABA  6F2A               	movwf	42,b	;volatile
 33188                           
 33189                           ; BSR set to: 15
 33190                           ;../../VLCBlib_PIC/can18_ecan.c: 522:             TXB0D5 = mp->bytes[4];
 33191   004ABC  0100               	movlb	0	; () banked
 33192   004ABE  EE20 F006          	lfsr	2,6
 33193   004AC2  5199               	movf	canSendMessage@mp& (0+255),w,b
 33194   004AC4  26D9               	addwf	fsr2l,f,c
 33195   004AC6  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33196   004AC8  22DA               	addwfc	fsr2h,f,c
 33197   004ACA  50DF               	movf	indf2,w,c
 33198   004ACC  010F               	movlb	15	; () banked
 33199   004ACE  6F2B               	movwf	43,b	;volatile
 33200                           
 33201                           ; BSR set to: 15
 33202                           ;../../VLCBlib_PIC/can18_ecan.c: 523:             TXB0D6 = mp->bytes[5];
 33203   004AD0  0100               	movlb	0	; () banked
 33204   004AD2  EE20 F007          	lfsr	2,7
 33205   004AD6  5199               	movf	canSendMessage@mp& (0+255),w,b
 33206   004AD8  26D9               	addwf	fsr2l,f,c
 33207   004ADA  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33208   004ADC  22DA               	addwfc	fsr2h,f,c
 33209   004ADE  50DF               	movf	indf2,w,c
 33210   004AE0  010F               	movlb	15	; () banked
 33211   004AE2  6F2C               	movwf	44,b	;volatile
 33212                           
 33213                           ; BSR set to: 15
 33214                           ;../../VLCBlib_PIC/can18_ecan.c: 524:             TXB0D7 = mp->bytes[6];
 33215   004AE4  0100               	movlb	0	; () banked
 33216   004AE6  EE20 F008          	lfsr	2,8
 33217   004AEA  5199               	movf	canSendMessage@mp& (0+255),w,b
 33218   004AEC  26D9               	addwf	fsr2l,f,c
 33219   004AEE  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33220   004AF0  22DA               	addwfc	fsr2h,f,c
 33221   004AF2  50DF               	movf	indf2,w,c
 33222   004AF4  010F               	movlb	15	; () banked
 33223   004AF6  6F2D               	movwf	45,b	;volatile
 33224                           
 33225                           ; BSR set to: 15
 33226                           ;../../VLCBlib_PIC/can18_ecan.c: 525:             TXB0DLC = mp->len & 0x0F;
 33227   004AF8  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33228   004AFC  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33229   004B00  50DF               	movf	indf2,w,c
 33230   004B02  0B0F               	andlw	15
 33231   004B04  6F25               	movwf	37,b	;volatile
 33232                           
 33233                           ; BSR set to: 15
 33234                           ;../../VLCBlib_PIC/can18_ecan.c: 527:             TXB0CONbits.TXREQ = 1;
 33235   004B06  8720               	bsf	32,3,b	;volatile
 33236                           
 33237                           ; BSR set to: 15
 33238                           ;../../VLCBlib_PIC/can18_ecan.c: 529:             canDiagnostics[0x06].asUint++;
 33239   004B08  0101               	movlb	1	; () banked
 33240   004B0A  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 33241   004B0C  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 33242                           
 33243                           ; BSR set to: 1
 33244                           ;../../VLCBlib_PIC/can18_ecan.c: 534:             if (isEvent(mp->opc)) {
 33245   004B0E  0100               	movlb	0	; () banked
 33246   004B10  EE20 F001          	lfsr	2,1
 33247   004B14  5199               	movf	canSendMessage@mp& (0+255),w,b
 33248   004B16  26D9               	addwf	fsr2l,f,c
 33249   004B18  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33250   004B1A  22DA               	addwfc	fsr2h,f,c
 33251   004B1C  50DF               	movf	indf2,w,c
 33252   004B1E  ECC2  F060         	call	_isEvent
 33253   004B22  0900               	iorlw	0
 33254   004B24  B4D8               	btfsc	status,2,c
 33255   004B26  0012               	return	
 33256                           
 33257                           ;../../VLCBlib_PIC/can18_ecan.c: 535:                 if (have(SERVICE_ID_CONSUME_OWN_EV
      +                          ENTS)) {
 33258   004B28  0E08               	movlw	8
 33259   004B2A  EC7F  F056         	call	_have
 33260   004B2E  0900               	iorlw	0
 33261   004B30  B4D8               	btfsc	status,2,c
 33262   004B32  0012               	return	
 33263                           
 33264                           ;../../VLCBlib_PIC/can18_ecan.c: 537:                     m = getNextWriteMessage(&rxQue
      +                          ue);
 33265   004B34  0E4D               	movlw	low _rxQueue
 33266   004B36  0100               	movlb	0	; () banked
 33267   004B38  6F8D               	movwf	getNextWriteMessage@q& (0+255),b
 33268   004B3A  ECAB  F045         	call	_getNextWriteMessage	;wreg free
 33269   004B3E  C08D  F0A1         	movff	?_getNextWriteMessage,canSendMessage@m
 33270   004B42  C08E  F0A2         	movff	?_getNextWriteMessage+1,canSendMessage@m+1
 33271                           
 33272                           ;../../VLCBlib_PIC/can18_ecan.c: 538:                     if (m == ((void*)0)) {
 33273   004B46  0100               	movlb	0	; () banked
 33274   004B48  51A1               	movf	canSendMessage@m& (0+255),w,b
 33275   004B4A  11A2               	iorwf	(canSendMessage@m+1)& (0+255),w,b
 33276   004B4C  A4D8               	btfss	status,2,c
 33277   004B4E  D006               	goto	l19268
 33278                           
 33279                           ; BSR set to: 0
 33280                           ;../../VLCBlib_PIC/can18_ecan.c: 540:                         canDiagnostics[0x08].asUin
      +                          t++;
 33281   004B50  0101               	movlb	1	; () banked
 33282   004B52  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 33283   004B54  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 33284                           
 33285                           ; BSR set to: 1
 33286                           ;../../VLCBlib_PIC/can18_ecan.c: 541:                         updateModuleErrorStatus();
 33287   004B56  EC62  F062         	call	_updateModuleErrorStatus	;wreg free
 33288                           
 33289                           ;../../VLCBlib_PIC/can18_ecan.c: 543:                     } else {
 33290   004B5A  0012               	return	
 33291   004B5C                     l19268:
 33292                           
 33293                           ; BSR set to: 0
 33294                           ;../../VLCBlib_PIC/can18_ecan.c: 545:                         m->opc = mp->opc;
 33295   004B5C  EE20 F001          	lfsr	2,1
 33296   004B60  5199               	movf	canSendMessage@mp& (0+255),w,b
 33297   004B62  26D9               	addwf	fsr2l,f,c
 33298   004B64  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33299   004B66  22DA               	addwfc	fsr2h,f,c
 33300   004B68  EE10 F001          	lfsr	1,1
 33301   004B6C  51A1               	movf	canSendMessage@m& (0+255),w,b
 33302   004B6E  26E1               	addwf	fsr1l,f,c
 33303   004B70  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33304   004B72  22E2               	addwfc	fsr1h,f,c
 33305   004B74  CFDF FFE7          	movff	indf2,indf1
 33306                           
 33307                           ; BSR set to: 0
 33308                           ;../../VLCBlib_PIC/can18_ecan.c: 546:                         m->len = mp->len;
 33309   004B78  C099  FFD9         	movff	canSendMessage@mp,fsr2l
 33310   004B7C  C09A  FFDA         	movff	canSendMessage@mp+1,fsr2h
 33311   004B80  C0A1  FFE1         	movff	canSendMessage@m,fsr1l
 33312   004B84  C0A2  FFE2         	movff	canSendMessage@m+1,fsr1h
 33313   004B88  CFDF FFE7          	movff	indf2,indf1
 33314                           
 33315                           ; BSR set to: 0
 33316                           ;../../VLCBlib_PIC/can18_ecan.c: 547:                         m->bytes[0] = mp->bytes[0]
      +                          ;
 33317   004B8C  EE20 F002          	lfsr	2,2
 33318   004B90  5199               	movf	canSendMessage@mp& (0+255),w,b
 33319   004B92  26D9               	addwf	fsr2l,f,c
 33320   004B94  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33321   004B96  22DA               	addwfc	fsr2h,f,c
 33322   004B98  EE10 F002          	lfsr	1,2
 33323   004B9C  51A1               	movf	canSendMessage@m& (0+255),w,b
 33324   004B9E  26E1               	addwf	fsr1l,f,c
 33325   004BA0  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33326   004BA2  22E2               	addwfc	fsr1h,f,c
 33327   004BA4  CFDF FFE7          	movff	indf2,indf1
 33328                           
 33329                           ; BSR set to: 0
 33330                           ;../../VLCBlib_PIC/can18_ecan.c: 548:                         m->bytes[1] = mp->bytes[1]
      +                          ;
 33331   004BA8  EE20 F003          	lfsr	2,3
 33332   004BAC  5199               	movf	canSendMessage@mp& (0+255),w,b
 33333   004BAE  26D9               	addwf	fsr2l,f,c
 33334   004BB0  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33335   004BB2  22DA               	addwfc	fsr2h,f,c
 33336   004BB4  EE10 F003          	lfsr	1,3
 33337   004BB8  51A1               	movf	canSendMessage@m& (0+255),w,b
 33338   004BBA  26E1               	addwf	fsr1l,f,c
 33339   004BBC  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33340   004BBE  22E2               	addwfc	fsr1h,f,c
 33341   004BC0  CFDF FFE7          	movff	indf2,indf1
 33342                           
 33343                           ; BSR set to: 0
 33344                           ;../../VLCBlib_PIC/can18_ecan.c: 549:                         m->bytes[2] = mp->bytes[2]
      +                          ;
 33345   004BC4  EE20 F004          	lfsr	2,4
 33346   004BC8  5199               	movf	canSendMessage@mp& (0+255),w,b
 33347   004BCA  26D9               	addwf	fsr2l,f,c
 33348   004BCC  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33349   004BCE  22DA               	addwfc	fsr2h,f,c
 33350   004BD0  EE10 F004          	lfsr	1,4
 33351   004BD4  51A1               	movf	canSendMessage@m& (0+255),w,b
 33352   004BD6  26E1               	addwf	fsr1l,f,c
 33353   004BD8  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33354   004BDA  22E2               	addwfc	fsr1h,f,c
 33355   004BDC  CFDF FFE7          	movff	indf2,indf1
 33356                           
 33357                           ; BSR set to: 0
 33358                           ;../../VLCBlib_PIC/can18_ecan.c: 550:                         m->bytes[3] = mp->bytes[3]
      +                          ;
 33359   004BE0  EE20 F005          	lfsr	2,5
 33360   004BE4  5199               	movf	canSendMessage@mp& (0+255),w,b
 33361   004BE6  26D9               	addwf	fsr2l,f,c
 33362   004BE8  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33363   004BEA  22DA               	addwfc	fsr2h,f,c
 33364   004BEC  EE10 F005          	lfsr	1,5
 33365   004BF0  51A1               	movf	canSendMessage@m& (0+255),w,b
 33366   004BF2  26E1               	addwf	fsr1l,f,c
 33367   004BF4  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33368   004BF6  22E2               	addwfc	fsr1h,f,c
 33369   004BF8  CFDF FFE7          	movff	indf2,indf1
 33370                           
 33371                           ; BSR set to: 0
 33372                           ;../../VLCBlib_PIC/can18_ecan.c: 551:                         m->bytes[4] = mp->bytes[4]
      +                          ;
 33373   004BFC  EE20 F006          	lfsr	2,6
 33374   004C00  5199               	movf	canSendMessage@mp& (0+255),w,b
 33375   004C02  26D9               	addwf	fsr2l,f,c
 33376   004C04  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33377   004C06  22DA               	addwfc	fsr2h,f,c
 33378   004C08  EE10 F006          	lfsr	1,6
 33379   004C0C  51A1               	movf	canSendMessage@m& (0+255),w,b
 33380   004C0E  26E1               	addwf	fsr1l,f,c
 33381   004C10  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33382   004C12  22E2               	addwfc	fsr1h,f,c
 33383   004C14  CFDF FFE7          	movff	indf2,indf1
 33384                           
 33385                           ; BSR set to: 0
 33386                           ;../../VLCBlib_PIC/can18_ecan.c: 552:                         m->bytes[5] = mp->bytes[5]
      +                          ;
 33387   004C18  EE20 F007          	lfsr	2,7
 33388   004C1C  5199               	movf	canSendMessage@mp& (0+255),w,b
 33389   004C1E  26D9               	addwf	fsr2l,f,c
 33390   004C20  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33391   004C22  22DA               	addwfc	fsr2h,f,c
 33392   004C24  EE10 F007          	lfsr	1,7
 33393   004C28  51A1               	movf	canSendMessage@m& (0+255),w,b
 33394   004C2A  26E1               	addwf	fsr1l,f,c
 33395   004C2C  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33396   004C2E  22E2               	addwfc	fsr1h,f,c
 33397   004C30  CFDF FFE7          	movff	indf2,indf1
 33398                           
 33399                           ; BSR set to: 0
 33400                           ;../../VLCBlib_PIC/can18_ecan.c: 553:                         m->bytes[6] = mp->bytes[6]
      +                          ;
 33401   004C34  EE20 F008          	lfsr	2,8
 33402   004C38  5199               	movf	canSendMessage@mp& (0+255),w,b
 33403   004C3A  26D9               	addwf	fsr2l,f,c
 33404   004C3C  519A               	movf	(canSendMessage@mp+1)& (0+255),w,b
 33405   004C3E  22DA               	addwfc	fsr2h,f,c
 33406   004C40  EE10 F008          	lfsr	1,8
 33407   004C44  51A1               	movf	canSendMessage@m& (0+255),w,b
 33408   004C46  26E1               	addwf	fsr1l,f,c
 33409   004C48  51A2               	movf	(canSendMessage@m+1)& (0+255),w,b
 33410   004C4A  22E2               	addwfc	fsr1h,f,c
 33411   004C4C  CFDF FFE7          	movff	indf2,indf1
 33412   004C50  0012               	return	
 33413   004C52                     l19288:
 33414                           
 33415                           ;../../VLCBlib_PIC/can18_ecan.c: 562:     if (push(&txQueue, mp) == QUEUE_FAIL) {
 33416   004C52  0E48               	movlw	low _txQueue
 33417   004C54  0100               	movlb	0	; () banked
 33418   004C56  6F8D               	movwf	push@q& (0+255),b
 33419   004C58  C099  F08E         	movff	canSendMessage@mp,push@m
 33420   004C5C  C09A  F08F         	movff	canSendMessage@mp+1,push@m+1
 33421   004C60  ECEB  F01F         	call	_push	;wreg free
 33422   004C64  0900               	iorlw	0
 33423   004C66  A4D8               	btfss	status,2,c
 33424   004C68  D007               	goto	l19298
 33425                           
 33426                           ;../../VLCBlib_PIC/can18_ecan.c: 564:         canDiagnostics[0x05].asUint++;
 33427   004C6A  0101               	movlb	1	; () banked
 33428   004C6C  4B71               	infsnz	(_canDiagnostics+10)& (0+255),f,b
 33429   004C6E  2B72               	incf	(_canDiagnostics+11)& (0+255),f,b
 33430                           
 33431                           ; BSR set to: 1
 33432                           ;../../VLCBlib_PIC/can18_ecan.c: 565:         updateModuleErrorStatus();
 33433   004C70  EC62  F062         	call	_updateModuleErrorStatus	;wreg free
 33434                           
 33435                           ;../../VLCBlib_PIC/can18_ecan.c: 567:         PIE5bits.TXBnIE = 1;
 33436   004C74  8876               	bsf	118,4,c	;volatile
 33437   004C76  0012               	return	
 33438   004C78                     l19298:
 33439                           
 33440                           ;../../VLCBlib_PIC/can18_ecan.c: 571:     no = getNumTxBuffersInUse();
 33441   004C78  EC5C  F062         	call	_getNumTxBuffersInUse	;wreg free
 33442   004C7C  0100               	movlb	0	; () banked
 33443   004C7E  6FA0               	movwf	canSendMessage@no& (0+255),b
 33444                           
 33445                           ; BSR set to: 0
 33446                           ;../../VLCBlib_PIC/can18_ecan.c: 572:     if (canDiagnostics[0x11].asUint < no) {
 33447   004C80  51A0               	movf	canSendMessage@no& (0+255),w,b
 33448   004C82  0101               	movlb	1	; () banked
 33449   004C84  5D89               	subwf	(_canDiagnostics+34)& (0+255),w,b
 33450   004C86  0E00               	movlw	0
 33451   004C88  598A               	subwfb	(_canDiagnostics+35)& (0+255),w,b
 33452   004C8A  B0D8               	btfsc	status,0,c
 33453   004C8C  D003               	goto	l2480
 33454                           
 33455                           ; BSR set to: 1
 33456                           ;../../VLCBlib_PIC/can18_ecan.c: 573:         canDiagnostics[0x11].asUint = no;
 33457   004C8E  C0A0  F189         	movff	canSendMessage@no,_canDiagnostics+34
 33458   004C92  6B8A               	clrf	(_canDiagnostics+35)& (0+255),b
 33459   004C94                     l2480:
 33460                           
 33461                           ; BSR set to: 1
 33462                           ;../../VLCBlib_PIC/can18_ecan.c: 576:     PIE5bits.TXBnIE = 1;
 33463   004C94  8876               	bsf	118,4,c	;volatile
 33464                           
 33465                           ;../../VLCBlib_PIC/can18_ecan.c: 577:     return SEND_OK;;	Return value of _canSendMessa
      +                          ge is never used
 33466   004C96  0012               	return		;funcret
 33467   004C98                     __end_of_canSendMessage:
 33468                           	callstack 0
 33469                           
 33470 ;; *************** function _push *****************
 33471 ;; Defined at:
 33472 ;;		line 58 in file "../../VLCBlib_PIC/messageQueue.c"
 33473 ;; Parameters:    Size  Location     Type
 33474 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 33475 ;;		 -> txQueue(5), 
 33476 ;;  m               2   46[BANK0 ] PTR struct Message
 33477 ;;		 -> tmpMessage(9), 
 33478 ;; Auto vars:     Size  Location     Type
 33479 ;;		None
 33480 ;; Return value:  Size  Location     Type
 33481 ;;                  1    wreg      enum E12928
 33482 ;; Registers used:
 33483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33484 ;; Tracked objects:
 33485 ;;		On entry : 0/0
 33486 ;;		On exit  : 0/0
 33487 ;;		Unchanged: 0/0
 33488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33489 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33491 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33492 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33493 ;;Total ram usage:       12 bytes
 33494 ;; Hardware stack levels used: 1
 33495 ;; Hardware stack levels required when called: 12
 33496 ;; This function calls:
 33497 ;;		Nothing
 33498 ;; This function is called by:
 33499 ;;		_canSendMessage
 33500 ;; This function uses a non-reentrant model
 33501 ;;
 33502                           
 33503                           	psect	text131
 33504   003FD6                     __ptext131:
 33505                           	callstack 0
 33506   003FD6                     _push:
 33507                           	callstack 12
 33508                           
 33509                           ;incstack = 0
 33510   003FD6  0100               	movlb	0	; () banked
 33511   003FD8  518D               	movf	push@q& (0+255),w,b
 33512   003FDA  6ED9               	movwf	fsr2l,c
 33513   003FDC  6ADA               	clrf	fsr2h,c
 33514   003FDE  0E02               	movlw	2
 33515   003FE0  26D9               	addwf	fsr2l,f,c
 33516   003FE2  50DF               	movf	indf2,w,c
 33517   003FE4  6F90               	movwf	??_push& (0+255),b
 33518   003FE6  6B91               	clrf	(??_push+1)& (0+255),b
 33519   003FE8  518D               	movf	push@q& (0+255),w,b
 33520   003FEA  6ED9               	movwf	fsr2l,c
 33521   003FEC  6ADA               	clrf	fsr2h,c
 33522   003FEE  0E04               	movlw	4
 33523   003FF0  26D9               	addwf	fsr2l,f,c
 33524   003FF2  50DF               	movf	indf2,w,c
 33525   003FF4  6F92               	movwf	(??_push+2)& (0+255),b
 33526   003FF6  0EFF               	movlw	255
 33527   003FF8  2592               	addwf	(??_push+2)& (0+255),w,b
 33528   003FFA  6F93               	movwf	(??_push+3)& (0+255),b
 33529   003FFC  6B94               	clrf	(??_push+4)& (0+255),b
 33530   003FFE  0EFF               	movlw	255
 33531   004000  2394               	addwfc	(??_push+4)& (0+255),f,b
 33532   004002  518D               	movf	push@q& (0+255),w,b
 33533   004004  6ED9               	movwf	fsr2l,c
 33534   004006  6ADA               	clrf	fsr2h,c
 33535   004008  0E03               	movlw	3
 33536   00400A  26D9               	addwf	fsr2l,f,c
 33537   00400C  50DF               	movf	indf2,w,c
 33538   00400E  6F95               	movwf	(??_push+5)& (0+255),b
 33539   004010  6B96               	clrf	(??_push+6)& (0+255),b
 33540   004012  0E01               	movlw	1
 33541   004014  2795               	addwf	(??_push+5)& (0+255),f,b
 33542   004016  0E00               	movlw	0
 33543   004018  2396               	addwfc	(??_push+6)& (0+255),f,b
 33544   00401A  5193               	movf	(??_push+3)& (0+255),w,b
 33545   00401C  1595               	andwf	(??_push+5)& (0+255),w,b
 33546   00401E  6F97               	movwf	(??_push+7)& (0+255),b
 33547   004020  5194               	movf	(??_push+4)& (0+255),w,b
 33548   004022  1596               	andwf	(??_push+6)& (0+255),w,b
 33549   004024  6F98               	movwf	(??_push+8)& (0+255),b
 33550   004026  5190               	movf	??_push& (0+255),w,b
 33551   004028  1997               	xorwf	(??_push+7)& (0+255),w,b
 33552   00402A  E106               	bnz	l19090
 33553   00402C  5191               	movf	(??_push+1)& (0+255),w,b
 33554   00402E  1998               	xorwf	(??_push+8)& (0+255),w,b
 33555   004030  A4D8               	btfss	status,2,c
 33556   004032  D002               	goto	l19090
 33557                           
 33558                           ; BSR set to: 0
 33559   004034  0E00               	movlw	0
 33560   004036  0012               	return	
 33561   004038                     l19090:
 33562                           
 33563                           ; BSR set to: 0
 33564   004038  EE20 F001          	lfsr	2,1
 33565   00403C  518E               	movf	push@m& (0+255),w,b
 33566   00403E  26D9               	addwf	fsr2l,f,c
 33567   004040  518F               	movf	(push@m+1)& (0+255),w,b
 33568   004042  22DA               	addwfc	fsr2h,f,c
 33569   004044  518D               	movf	push@q& (0+255),w,b
 33570   004046  6EE1               	movwf	fsr1l,c
 33571   004048  6AE2               	clrf	fsr1h,c
 33572   00404A  0E03               	movlw	3
 33573   00404C  26E1               	addwf	fsr1l,f,c
 33574   00404E  50E7               	movf	indf1,w,c
 33575   004050  6F90               	movwf	??_push& (0+255),b
 33576   004052  5190               	movf	??_push& (0+255),w,b
 33577   004054  0D09               	mullw	9
 33578   004056  CFF3 F091          	movff	prodl,??_push+1
 33579   00405A  CFF4 F092          	movff	prodh,??_push+2
 33580   00405E  518D               	movf	push@q& (0+255),w,b
 33581   004060  6EE1               	movwf	fsr1l,c
 33582   004062  6AE2               	clrf	fsr1h,c
 33583   004064  CFE6 F093          	movff	postinc1,??_push+3
 33584   004068  CFE5 F094          	movff	postdec1,??_push+4
 33585   00406C  5191               	movf	(??_push+1)& (0+255),w,b
 33586   00406E  2593               	addwf	(??_push+3)& (0+255),w,b
 33587   004070  6F95               	movwf	(??_push+5)& (0+255),b
 33588   004072  5192               	movf	(??_push+2)& (0+255),w,b
 33589   004074  2194               	addwfc	(??_push+4)& (0+255),w,b
 33590   004076  6F96               	movwf	(??_push+6)& (0+255),b
 33591   004078  0E01               	movlw	1
 33592   00407A  2595               	addwf	(??_push+5)& (0+255),w,b
 33593   00407C  6EE1               	movwf	fsr1l,c
 33594   00407E  0E00               	movlw	0
 33595   004080  2196               	addwfc	(??_push+6)& (0+255),w,b
 33596   004082  6EE2               	movwf	fsr1h,c
 33597   004084  CFDF FFE7          	movff	indf2,indf1
 33598   004088  EE20 F002          	lfsr	2,2
 33599   00408C  518E               	movf	push@m& (0+255),w,b
 33600   00408E  26D9               	addwf	fsr2l,f,c
 33601   004090  518F               	movf	(push@m+1)& (0+255),w,b
 33602   004092  22DA               	addwfc	fsr2h,f,c
 33603   004094  518D               	movf	push@q& (0+255),w,b
 33604   004096  6EE1               	movwf	fsr1l,c
 33605   004098  6AE2               	clrf	fsr1h,c
 33606   00409A  0E03               	movlw	3
 33607   00409C  26E1               	addwf	fsr1l,f,c
 33608   00409E  50E7               	movf	indf1,w,c
 33609   0040A0  6F90               	movwf	??_push& (0+255),b
 33610   0040A2  5190               	movf	??_push& (0+255),w,b
 33611   0040A4  0D09               	mullw	9
 33612   0040A6  CFF3 F091          	movff	prodl,??_push+1
 33613   0040AA  CFF4 F092          	movff	prodh,??_push+2
 33614   0040AE  518D               	movf	push@q& (0+255),w,b
 33615   0040B0  6EE1               	movwf	fsr1l,c
 33616   0040B2  6AE2               	clrf	fsr1h,c
 33617   0040B4  CFE6 F093          	movff	postinc1,??_push+3
 33618   0040B8  CFE5 F094          	movff	postdec1,??_push+4
 33619   0040BC  5191               	movf	(??_push+1)& (0+255),w,b
 33620   0040BE  2593               	addwf	(??_push+3)& (0+255),w,b
 33621   0040C0  6F95               	movwf	(??_push+5)& (0+255),b
 33622   0040C2  5192               	movf	(??_push+2)& (0+255),w,b
 33623   0040C4  2194               	addwfc	(??_push+4)& (0+255),w,b
 33624   0040C6  6F96               	movwf	(??_push+6)& (0+255),b
 33625   0040C8  0E02               	movlw	2
 33626   0040CA  2595               	addwf	(??_push+5)& (0+255),w,b
 33627   0040CC  6EE1               	movwf	fsr1l,c
 33628   0040CE  0E00               	movlw	0
 33629   0040D0  2196               	addwfc	(??_push+6)& (0+255),w,b
 33630   0040D2  6EE2               	movwf	fsr1h,c
 33631   0040D4  CFDF FFE7          	movff	indf2,indf1
 33632   0040D8  EE20 F003          	lfsr	2,3
 33633   0040DC  518E               	movf	push@m& (0+255),w,b
 33634   0040DE  26D9               	addwf	fsr2l,f,c
 33635   0040E0  518F               	movf	(push@m+1)& (0+255),w,b
 33636   0040E2  22DA               	addwfc	fsr2h,f,c
 33637   0040E4  518D               	movf	push@q& (0+255),w,b
 33638   0040E6  6EE1               	movwf	fsr1l,c
 33639   0040E8  6AE2               	clrf	fsr1h,c
 33640   0040EA  0E03               	movlw	3
 33641   0040EC  26E1               	addwf	fsr1l,f,c
 33642   0040EE  50E7               	movf	indf1,w,c
 33643   0040F0  6F90               	movwf	??_push& (0+255),b
 33644   0040F2  5190               	movf	??_push& (0+255),w,b
 33645   0040F4  0D09               	mullw	9
 33646   0040F6  CFF3 F091          	movff	prodl,??_push+1
 33647   0040FA  CFF4 F092          	movff	prodh,??_push+2
 33648   0040FE  518D               	movf	push@q& (0+255),w,b
 33649   004100  6EE1               	movwf	fsr1l,c
 33650   004102  6AE2               	clrf	fsr1h,c
 33651   004104  CFE6 F093          	movff	postinc1,??_push+3
 33652   004108  CFE5 F094          	movff	postdec1,??_push+4
 33653   00410C  5191               	movf	(??_push+1)& (0+255),w,b
 33654   00410E  2593               	addwf	(??_push+3)& (0+255),w,b
 33655   004110  6F95               	movwf	(??_push+5)& (0+255),b
 33656   004112  5192               	movf	(??_push+2)& (0+255),w,b
 33657   004114  2194               	addwfc	(??_push+4)& (0+255),w,b
 33658   004116  6F96               	movwf	(??_push+6)& (0+255),b
 33659   004118  0E03               	movlw	3
 33660   00411A  2595               	addwf	(??_push+5)& (0+255),w,b
 33661   00411C  6EE1               	movwf	fsr1l,c
 33662   00411E  0E00               	movlw	0
 33663   004120  2196               	addwfc	(??_push+6)& (0+255),w,b
 33664   004122  6EE2               	movwf	fsr1h,c
 33665   004124  CFDF FFE7          	movff	indf2,indf1
 33666   004128  EE20 F004          	lfsr	2,4
 33667   00412C  518E               	movf	push@m& (0+255),w,b
 33668   00412E  26D9               	addwf	fsr2l,f,c
 33669   004130  518F               	movf	(push@m+1)& (0+255),w,b
 33670   004132  22DA               	addwfc	fsr2h,f,c
 33671   004134  518D               	movf	push@q& (0+255),w,b
 33672   004136  6EE1               	movwf	fsr1l,c
 33673   004138  6AE2               	clrf	fsr1h,c
 33674   00413A  0E03               	movlw	3
 33675   00413C  26E1               	addwf	fsr1l,f,c
 33676   00413E  50E7               	movf	indf1,w,c
 33677   004140  6F90               	movwf	??_push& (0+255),b
 33678   004142  5190               	movf	??_push& (0+255),w,b
 33679   004144  0D09               	mullw	9
 33680   004146  CFF3 F091          	movff	prodl,??_push+1
 33681   00414A  CFF4 F092          	movff	prodh,??_push+2
 33682   00414E  518D               	movf	push@q& (0+255),w,b
 33683   004150  6EE1               	movwf	fsr1l,c
 33684   004152  6AE2               	clrf	fsr1h,c
 33685   004154  CFE6 F093          	movff	postinc1,??_push+3
 33686   004158  CFE5 F094          	movff	postdec1,??_push+4
 33687   00415C  5191               	movf	(??_push+1)& (0+255),w,b
 33688   00415E  2593               	addwf	(??_push+3)& (0+255),w,b
 33689   004160  6F95               	movwf	(??_push+5)& (0+255),b
 33690   004162  5192               	movf	(??_push+2)& (0+255),w,b
 33691   004164  2194               	addwfc	(??_push+4)& (0+255),w,b
 33692   004166  6F96               	movwf	(??_push+6)& (0+255),b
 33693   004168  0E04               	movlw	4
 33694   00416A  2595               	addwf	(??_push+5)& (0+255),w,b
 33695   00416C  6EE1               	movwf	fsr1l,c
 33696   00416E  0E00               	movlw	0
 33697   004170  2196               	addwfc	(??_push+6)& (0+255),w,b
 33698   004172  6EE2               	movwf	fsr1h,c
 33699   004174  CFDF FFE7          	movff	indf2,indf1
 33700   004178  EE20 F005          	lfsr	2,5
 33701   00417C  518E               	movf	push@m& (0+255),w,b
 33702   00417E  26D9               	addwf	fsr2l,f,c
 33703   004180  518F               	movf	(push@m+1)& (0+255),w,b
 33704   004182  22DA               	addwfc	fsr2h,f,c
 33705   004184  518D               	movf	push@q& (0+255),w,b
 33706   004186  6EE1               	movwf	fsr1l,c
 33707   004188  6AE2               	clrf	fsr1h,c
 33708   00418A  0E03               	movlw	3
 33709   00418C  26E1               	addwf	fsr1l,f,c
 33710   00418E  50E7               	movf	indf1,w,c
 33711   004190  6F90               	movwf	??_push& (0+255),b
 33712   004192  5190               	movf	??_push& (0+255),w,b
 33713   004194  0D09               	mullw	9
 33714   004196  CFF3 F091          	movff	prodl,??_push+1
 33715   00419A  CFF4 F092          	movff	prodh,??_push+2
 33716   00419E  518D               	movf	push@q& (0+255),w,b
 33717   0041A0  6EE1               	movwf	fsr1l,c
 33718   0041A2  6AE2               	clrf	fsr1h,c
 33719   0041A4  CFE6 F093          	movff	postinc1,??_push+3
 33720   0041A8  CFE5 F094          	movff	postdec1,??_push+4
 33721   0041AC  5191               	movf	(??_push+1)& (0+255),w,b
 33722   0041AE  2593               	addwf	(??_push+3)& (0+255),w,b
 33723   0041B0  6F95               	movwf	(??_push+5)& (0+255),b
 33724   0041B2  5192               	movf	(??_push+2)& (0+255),w,b
 33725   0041B4  2194               	addwfc	(??_push+4)& (0+255),w,b
 33726   0041B6  6F96               	movwf	(??_push+6)& (0+255),b
 33727   0041B8  0E05               	movlw	5
 33728   0041BA  2595               	addwf	(??_push+5)& (0+255),w,b
 33729   0041BC  6EE1               	movwf	fsr1l,c
 33730   0041BE  0E00               	movlw	0
 33731   0041C0  2196               	addwfc	(??_push+6)& (0+255),w,b
 33732   0041C2  6EE2               	movwf	fsr1h,c
 33733   0041C4  CFDF FFE7          	movff	indf2,indf1
 33734   0041C8  EE20 F006          	lfsr	2,6
 33735   0041CC  518E               	movf	push@m& (0+255),w,b
 33736   0041CE  26D9               	addwf	fsr2l,f,c
 33737   0041D0  518F               	movf	(push@m+1)& (0+255),w,b
 33738   0041D2  22DA               	addwfc	fsr2h,f,c
 33739   0041D4  518D               	movf	push@q& (0+255),w,b
 33740   0041D6  6EE1               	movwf	fsr1l,c
 33741   0041D8  6AE2               	clrf	fsr1h,c
 33742   0041DA  0E03               	movlw	3
 33743   0041DC  26E1               	addwf	fsr1l,f,c
 33744   0041DE  50E7               	movf	indf1,w,c
 33745   0041E0  6F90               	movwf	??_push& (0+255),b
 33746   0041E2  5190               	movf	??_push& (0+255),w,b
 33747   0041E4  0D09               	mullw	9
 33748   0041E6  CFF3 F091          	movff	prodl,??_push+1
 33749   0041EA  CFF4 F092          	movff	prodh,??_push+2
 33750   0041EE  518D               	movf	push@q& (0+255),w,b
 33751   0041F0  6EE1               	movwf	fsr1l,c
 33752   0041F2  6AE2               	clrf	fsr1h,c
 33753   0041F4  CFE6 F093          	movff	postinc1,??_push+3
 33754   0041F8  CFE5 F094          	movff	postdec1,??_push+4
 33755   0041FC  5191               	movf	(??_push+1)& (0+255),w,b
 33756   0041FE  2593               	addwf	(??_push+3)& (0+255),w,b
 33757   004200  6F95               	movwf	(??_push+5)& (0+255),b
 33758   004202  5192               	movf	(??_push+2)& (0+255),w,b
 33759   004204  2194               	addwfc	(??_push+4)& (0+255),w,b
 33760   004206  6F96               	movwf	(??_push+6)& (0+255),b
 33761   004208  0E06               	movlw	6
 33762   00420A  2595               	addwf	(??_push+5)& (0+255),w,b
 33763   00420C  6EE1               	movwf	fsr1l,c
 33764   00420E  0E00               	movlw	0
 33765   004210  2196               	addwfc	(??_push+6)& (0+255),w,b
 33766   004212  6EE2               	movwf	fsr1h,c
 33767   004214  CFDF FFE7          	movff	indf2,indf1
 33768   004218  EE20 F007          	lfsr	2,7
 33769   00421C  518E               	movf	push@m& (0+255),w,b
 33770   00421E  26D9               	addwf	fsr2l,f,c
 33771   004220  518F               	movf	(push@m+1)& (0+255),w,b
 33772   004222  22DA               	addwfc	fsr2h,f,c
 33773   004224  518D               	movf	push@q& (0+255),w,b
 33774   004226  6EE1               	movwf	fsr1l,c
 33775   004228  6AE2               	clrf	fsr1h,c
 33776   00422A  0E03               	movlw	3
 33777   00422C  26E1               	addwf	fsr1l,f,c
 33778   00422E  50E7               	movf	indf1,w,c
 33779   004230  6F90               	movwf	??_push& (0+255),b
 33780   004232  5190               	movf	??_push& (0+255),w,b
 33781   004234  0D09               	mullw	9
 33782   004236  CFF3 F091          	movff	prodl,??_push+1
 33783   00423A  CFF4 F092          	movff	prodh,??_push+2
 33784   00423E  518D               	movf	push@q& (0+255),w,b
 33785   004240  6EE1               	movwf	fsr1l,c
 33786   004242  6AE2               	clrf	fsr1h,c
 33787   004244  CFE6 F093          	movff	postinc1,??_push+3
 33788   004248  CFE5 F094          	movff	postdec1,??_push+4
 33789   00424C  5191               	movf	(??_push+1)& (0+255),w,b
 33790   00424E  2593               	addwf	(??_push+3)& (0+255),w,b
 33791   004250  6F95               	movwf	(??_push+5)& (0+255),b
 33792   004252  5192               	movf	(??_push+2)& (0+255),w,b
 33793   004254  2194               	addwfc	(??_push+4)& (0+255),w,b
 33794   004256  6F96               	movwf	(??_push+6)& (0+255),b
 33795   004258  0E07               	movlw	7
 33796   00425A  2595               	addwf	(??_push+5)& (0+255),w,b
 33797   00425C  6EE1               	movwf	fsr1l,c
 33798   00425E  0E00               	movlw	0
 33799   004260  2196               	addwfc	(??_push+6)& (0+255),w,b
 33800   004262  6EE2               	movwf	fsr1h,c
 33801   004264  CFDF FFE7          	movff	indf2,indf1
 33802   004268  EE20 F008          	lfsr	2,8
 33803   00426C  518E               	movf	push@m& (0+255),w,b
 33804   00426E  26D9               	addwf	fsr2l,f,c
 33805   004270  518F               	movf	(push@m+1)& (0+255),w,b
 33806   004272  22DA               	addwfc	fsr2h,f,c
 33807   004274  518D               	movf	push@q& (0+255),w,b
 33808   004276  6EE1               	movwf	fsr1l,c
 33809   004278  6AE2               	clrf	fsr1h,c
 33810   00427A  0E03               	movlw	3
 33811   00427C  26E1               	addwf	fsr1l,f,c
 33812   00427E  50E7               	movf	indf1,w,c
 33813   004280  6F90               	movwf	??_push& (0+255),b
 33814   004282  5190               	movf	??_push& (0+255),w,b
 33815   004284  0D09               	mullw	9
 33816   004286  CFF3 F091          	movff	prodl,??_push+1
 33817   00428A  CFF4 F092          	movff	prodh,??_push+2
 33818   00428E  518D               	movf	push@q& (0+255),w,b
 33819   004290  6EE1               	movwf	fsr1l,c
 33820   004292  6AE2               	clrf	fsr1h,c
 33821   004294  CFE6 F093          	movff	postinc1,??_push+3
 33822   004298  CFE5 F094          	movff	postdec1,??_push+4
 33823   00429C  5191               	movf	(??_push+1)& (0+255),w,b
 33824   00429E  2593               	addwf	(??_push+3)& (0+255),w,b
 33825   0042A0  6F95               	movwf	(??_push+5)& (0+255),b
 33826   0042A2  5192               	movf	(??_push+2)& (0+255),w,b
 33827   0042A4  2194               	addwfc	(??_push+4)& (0+255),w,b
 33828   0042A6  6F96               	movwf	(??_push+6)& (0+255),b
 33829   0042A8  0E08               	movlw	8
 33830   0042AA  2595               	addwf	(??_push+5)& (0+255),w,b
 33831   0042AC  6EE1               	movwf	fsr1l,c
 33832   0042AE  0E00               	movlw	0
 33833   0042B0  2196               	addwfc	(??_push+6)& (0+255),w,b
 33834   0042B2  6EE2               	movwf	fsr1h,c
 33835   0042B4  CFDF FFE7          	movff	indf2,indf1
 33836   0042B8  C08E  FFD9         	movff	push@m,fsr2l
 33837   0042BC  C08F  FFDA         	movff	push@m+1,fsr2h
 33838   0042C0  518D               	movf	push@q& (0+255),w,b
 33839   0042C2  6EE1               	movwf	fsr1l,c
 33840   0042C4  6AE2               	clrf	fsr1h,c
 33841   0042C6  0E03               	movlw	3
 33842   0042C8  26E1               	addwf	fsr1l,f,c
 33843   0042CA  50E7               	movf	indf1,w,c
 33844   0042CC  6F90               	movwf	??_push& (0+255),b
 33845   0042CE  5190               	movf	??_push& (0+255),w,b
 33846   0042D0  0D09               	mullw	9
 33847   0042D2  CFF3 F091          	movff	prodl,??_push+1
 33848   0042D6  CFF4 F092          	movff	prodh,??_push+2
 33849   0042DA  518D               	movf	push@q& (0+255),w,b
 33850   0042DC  6EE1               	movwf	fsr1l,c
 33851   0042DE  6AE2               	clrf	fsr1h,c
 33852   0042E0  CFE6 F093          	movff	postinc1,??_push+3
 33853   0042E4  CFE5 F094          	movff	postdec1,??_push+4
 33854   0042E8  5191               	movf	(??_push+1)& (0+255),w,b
 33855   0042EA  2593               	addwf	(??_push+3)& (0+255),w,b
 33856   0042EC  6EE1               	movwf	fsr1l,c
 33857   0042EE  5192               	movf	(??_push+2)& (0+255),w,b
 33858   0042F0  2194               	addwfc	(??_push+4)& (0+255),w,b
 33859   0042F2  6EE2               	movwf	fsr1h,c
 33860   0042F4  CFDF FFE7          	movff	indf2,indf1
 33861                           
 33862                           ; BSR set to: 0
 33863   0042F8  518D               	movf	push@q& (0+255),w,b
 33864   0042FA  6ED9               	movwf	fsr2l,c
 33865   0042FC  6ADA               	clrf	fsr2h,c
 33866   0042FE  0E03               	movlw	3
 33867   004300  26D9               	addwf	fsr2l,f,c
 33868   004302  2ADF               	incf	indf2,f,c
 33869                           
 33870                           ; BSR set to: 0
 33871   004304  518D               	movf	push@q& (0+255),w,b
 33872   004306  6ED9               	movwf	fsr2l,c
 33873   004308  6ADA               	clrf	fsr2h,c
 33874   00430A  0E04               	movlw	4
 33875   00430C  26D9               	addwf	fsr2l,f,c
 33876   00430E  518D               	movf	push@q& (0+255),w,b
 33877   004310  6EE1               	movwf	fsr1l,c
 33878   004312  6AE2               	clrf	fsr1h,c
 33879   004314  0E03               	movlw	3
 33880   004316  26E1               	addwf	fsr1l,f,c
 33881   004318  50DE               	movf	postinc2,w,c
 33882   00431A  5CE6               	subwf	postinc1,w,c
 33883   00431C  A0D8               	btfss	status,0,c
 33884   00431E  D006               	goto	l19098
 33885                           
 33886                           ; BSR set to: 0
 33887   004320  518D               	movf	push@q& (0+255),w,b
 33888   004322  6ED9               	movwf	fsr2l,c
 33889   004324  6ADA               	clrf	fsr2h,c
 33890   004326  0E03               	movlw	3
 33891   004328  26D9               	addwf	fsr2l,f,c
 33892   00432A  6ADF               	clrf	indf2,c
 33893   00432C                     l19098:
 33894                           
 33895                           ; BSR set to: 0
 33896   00432C  0E01               	movlw	1
 33897                           
 33898                           ; BSR set to: 0
 33899   00432E  0012               	return		;funcret
 33900   004330                     __end_of_push:
 33901                           	callstack 0
 33902                           
 33903 ;; *************** function _isEvent *****************
 33904 ;; Defined at:
 33905 ;;		line 1117 in file "../../VLCBlib_PIC/vlcb.c"
 33906 ;; Parameters:    Size  Location     Type
 33907 ;;  opc             1    wreg     unsigned char 
 33908 ;; Auto vars:     Size  Location     Type
 33909 ;;  opc             1   46[BANK0 ] unsigned char 
 33910 ;; Return value:  Size  Location     Type
 33911 ;;                  1    wreg      enum E12760
 33912 ;; Registers used:
 33913 ;;		wreg, status,2, status,0
 33914 ;; Tracked objects:
 33915 ;;		On entry : 0/0
 33916 ;;		On exit  : 0/0
 33917 ;;		Unchanged: 0/0
 33918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33920 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33922 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33923 ;;Total ram usage:        2 bytes
 33924 ;; Hardware stack levels used: 1
 33925 ;; Hardware stack levels required when called: 12
 33926 ;; This function calls:
 33927 ;;		Nothing
 33928 ;; This function is called by:
 33929 ;;		_canSendMessage
 33930 ;; This function uses a non-reentrant model
 33931 ;;
 33932                           
 33933                           	psect	text132
 33934   00C184                     __ptext132:
 33935                           	callstack 0
 33936   00C184                     _isEvent:
 33937                           	callstack 12
 33938                           
 33939                           ; BSR set to: 0
 33940                           ;incstack = 0
 33941                           ;isEvent@opc stored from wreg
 33942   00C184  0100               	movlb	0	; () banked
 33943   00C186  6F8E               	movwf	isEvent@opc& (0+255),b
 33944                           
 33945                           ;../../VLCBlib_PIC/vlcb.c: 1118:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 33946   00C188  0E00               	movlw	0
 33947   00C18A  0100               	movlb	0	; () banked
 33948   00C18C  6F8D               	movwf	_isEvent$4867& (0+255),b
 33949                           
 33950                           ; BSR set to: 0
 33951   00C18E  518E               	movf	isEvent@opc& (0+255),w,b
 33952   00C190  0B90               	andlw	144
 33953   00C192  0A90               	xorlw	144
 33954   00C194  A4D8               	btfss	status,2,c
 33955   00C196  D008               	goto	l2018
 33956                           
 33957                           ; BSR set to: 0
 33958   00C198  518E               	movf	isEvent@opc& (0+255),w,b
 33959   00C19A  0AFF               	xorlw	255
 33960   00C19C  0B06               	andlw	6
 33961   00C19E  0A06               	xorlw	6
 33962   00C1A0  A4D8               	btfss	status,2,c
 33963   00C1A2  D002               	goto	l2018
 33964                           
 33965                           ; BSR set to: 0
 33966   00C1A4  0E01               	movlw	1
 33967   00C1A6  6F8D               	movwf	_isEvent$4867& (0+255),b
 33968   00C1A8                     l2018:
 33969                           
 33970                           ; BSR set to: 0
 33971   00C1A8  518D               	movf	_isEvent$4867& (0+255),w,b
 33972                           
 33973                           ; BSR set to: 0
 33974   00C1AA  0012               	return		;funcret
 33975   00C1AC                     __end_of_isEvent:
 33976                           	callstack 0
 33977                           
 33978 ;; *************** function _have *****************
 33979 ;; Defined at:
 33980 ;;		line 837 in file "../../VLCBlib_PIC/vlcb.c"
 33981 ;; Parameters:    Size  Location     Type
 33982 ;;  id              1    wreg     unsigned char 
 33983 ;; Auto vars:     Size  Location     Type
 33984 ;;  id              1   47[BANK0 ] unsigned char 
 33985 ;;  i               1   48[BANK0 ] unsigned char 
 33986 ;; Return value:  Size  Location     Type
 33987 ;;                  1    wreg      enum E12891
 33988 ;; Registers used:
 33989 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 33990 ;; Tracked objects:
 33991 ;;		On entry : 0/0
 33992 ;;		On exit  : 0/0
 33993 ;;		Unchanged: 0/0
 33994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33997 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33998 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33999 ;;Total ram usage:        4 bytes
 34000 ;; Hardware stack levels used: 1
 34001 ;; Hardware stack levels required when called: 12
 34002 ;; This function calls:
 34003 ;;		Nothing
 34004 ;; This function is called by:
 34005 ;;		_getParameterFlags
 34006 ;;		_getParameter
 34007 ;;		_canSendMessage
 34008 ;; This function uses a non-reentrant model
 34009 ;;
 34010                           
 34011                           	psect	text133
 34012   00ACFE                     __ptext133:
 34013                           	callstack 0
 34014   00ACFE                     _have:
 34015                           	callstack 12
 34016                           
 34017                           ; BSR set to: 0
 34018                           ;incstack = 0
 34019                           ;have@id stored from wreg
 34020   00ACFE  0100               	movlb	0	; () banked
 34021   00AD00  6F8F               	movwf	have@id& (0+255),b
 34022                           
 34023                           ;../../VLCBlib_PIC/vlcb.c: 838:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 839:     for (i
      +                          =0; i<9; i++) {
 34024   00AD02  0E00               	movlw	0
 34025   00AD04  0100               	movlb	0	; () banked
 34026   00AD06  6F90               	movwf	have@i& (0+255),b
 34027   00AD08                     l19058:
 34028                           
 34029                           ; BSR set to: 0
 34030                           ;../../VLCBlib_PIC/vlcb.c: 840:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >serviceNo == id)) {
 34031   00AD08  5190               	movf	have@i& (0+255),w,b
 34032   00AD0A  0D02               	mullw	2
 34033   00AD0C  0E75               	movlw	low _services
 34034   00AD0E  24F3               	addwf	243,w,c
 34035   00AD10  6EF6               	movwf	tblptrl,c
 34036   00AD12  0EEE               	movlw	high _services
 34037   00AD14  20F4               	addwfc	244,w,c
 34038   00AD16  6EF7               	movwf	tblptrh,c
 34039   00AD18                     	if	1	;There are 3 active tblptr bytes
 34040   00AD18  6AF8               	clrf	tblptru,c
 34041   00AD1A  0E00               	movlw	low (__mediumconst shr (0+16))
 34042   00AD1C  22F8               	addwfc	tblptru,f,c
 34043   00AD1E                     	endif
 34044   00AD1E  0009               	tblrd		*+
 34045   00AD20  50F5               	movf	tablat,w,c
 34046   00AD22  0009               	tblrd		*+
 34047   00AD24  10F5               	iorwf	tablat,w,c
 34048   00AD26  B4D8               	btfsc	status,2,c
 34049   00AD28  D01D               	goto	l19066
 34050                           
 34051                           ; BSR set to: 0
 34052   00AD2A  5190               	movf	have@i& (0+255),w,b
 34053   00AD2C  0D02               	mullw	2
 34054   00AD2E  0E75               	movlw	low _services
 34055   00AD30  24F3               	addwf	243,w,c
 34056   00AD32  6EF6               	movwf	tblptrl,c
 34057   00AD34  0EEE               	movlw	high _services
 34058   00AD36  20F4               	addwfc	244,w,c
 34059   00AD38  6EF7               	movwf	tblptrh,c
 34060   00AD3A                     	if	1	;There are 3 active tblptr bytes
 34061   00AD3A  6AF8               	clrf	tblptru,c
 34062   00AD3C  0E00               	movlw	low (__mediumconst shr (0+16))
 34063   00AD3E  22F8               	addwfc	tblptru,f,c
 34064   00AD40                     	endif
 34065   00AD40  0009               	tblrd		*+
 34066   00AD42  CFF5 F08D          	movff	tablat,??_have
 34067   00AD46  0009               	tblrd		*+
 34068   00AD48  CFF5 F08E          	movff	tablat,??_have+1
 34069   00AD4C  C08D  FFF6         	movff	??_have,tblptrl
 34070   00AD50  C08E  FFF7         	movff	??_have+1,tblptrh
 34071   00AD54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34072   00AD54  6AF8               	clrf	tblptru,c
 34073   00AD56                     	endif
 34074   00AD56                     	if	0	;tblptru may be non-zero
 34075   00AD56                     	endif
 34076   00AD56  0008               	tblrd		*
 34077   00AD58  50F5               	movf	tablat,w,c
 34078   00AD5A  198F               	xorwf	have@id& (0+255),w,b
 34079   00AD5C  A4D8               	btfss	status,2,c
 34080   00AD5E  D002               	goto	l19066
 34081                           
 34082                           ; BSR set to: 0
 34083                           ;../../VLCBlib_PIC/vlcb.c: 841:             return PRESENT;
 34084   00AD60  0E01               	movlw	1
 34085   00AD62  0012               	return	
 34086   00AD64                     l19066:
 34087                           
 34088                           ; BSR set to: 0
 34089                           ;../../VLCBlib_PIC/vlcb.c: 843:     }
 34090   00AD64  2B90               	incf	have@i& (0+255),f,b
 34091                           
 34092                           ; BSR set to: 0
 34093   00AD66  0E08               	movlw	8
 34094   00AD68  6590               	cpfsgt	have@i& (0+255),b
 34095   00AD6A  D7CE               	goto	l19058
 34096                           
 34097                           ; BSR set to: 0
 34098                           ;../../VLCBlib_PIC/vlcb.c: 844:     return NOT_PRESENT;
 34099   00AD6C  0E00               	movlw	0
 34100                           
 34101                           ; BSR set to: 0
 34102   00AD6E  0012               	return		;funcret
 34103   00AD70                     __end_of_have:
 34104                           	callstack 0
 34105                           
 34106 ;; *************** function _getNumTxBuffersInUse *****************
 34107 ;; Defined at:
 34108 ;;		line 461 in file "../../VLCBlib_PIC/can18_ecan.c"
 34109 ;; Parameters:    Size  Location     Type
 34110 ;;		None
 34111 ;; Auto vars:     Size  Location     Type
 34112 ;;		None
 34113 ;; Return value:  Size  Location     Type
 34114 ;;                  1    wreg      unsigned char 
 34115 ;; Registers used:
 34116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34117 ;; Tracked objects:
 34118 ;;		On entry : 0/0
 34119 ;;		On exit  : 0/0
 34120 ;;		Unchanged: 0/0
 34121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34126 ;;Total ram usage:        0 bytes
 34127 ;; Hardware stack levels used: 1
 34128 ;; Hardware stack levels required when called: 13
 34129 ;; This function calls:
 34130 ;;		_quantity
 34131 ;; This function is called by:
 34132 ;;		_canGetDiagnostic
 34133 ;;		_canSendMessage
 34134 ;; This function uses a non-reentrant model
 34135 ;;
 34136                           
 34137                           	psect	text134
 34138   00C4B8                     __ptext134:
 34139                           	callstack 0
 34140   00C4B8                     _getNumTxBuffersInUse:
 34141                           	callstack 11
 34142                           
 34143                           ;../../VLCBlib_PIC/can18_ecan.c: 462:     return quantity(&txQueue);
 34144                           
 34145                           ; BSR set to: 0
 34146                           ;incstack = 0
 34147   00C4B8  0E48               	movlw	low _txQueue
 34148   00C4BA  0100               	movlb	0	; () banked
 34149   00C4BC  6F8D               	movwf	quantity@q& (0+255),b
 34150   00C4BE  EC89  F05E         	call	_quantity	;wreg free
 34151   00C4C2  0012               	return		;funcret
 34152   00C4C4                     __end_of_getNumTxBuffersInUse:
 34153                           	callstack 0
 34154                           
 34155 ;; *************** function _quantity *****************
 34156 ;; Defined at:
 34157 ;;		line 130 in file "../../VLCBlib_PIC/messageQueue.c"
 34158 ;; Parameters:    Size  Location     Type
 34159 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34160 ;;		 -> txQueue(5), rxQueue(5), 
 34161 ;; Auto vars:     Size  Location     Type
 34162 ;;		None
 34163 ;; Return value:  Size  Location     Type
 34164 ;;                  1    wreg      unsigned char 
 34165 ;; Registers used:
 34166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34167 ;; Tracked objects:
 34168 ;;		On entry : 0/0
 34169 ;;		On exit  : 0/0
 34170 ;;		Unchanged: 0/0
 34171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34172 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34174 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34175 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34176 ;;Total ram usage:        5 bytes
 34177 ;; Hardware stack levels used: 1
 34178 ;; Hardware stack levels required when called: 12
 34179 ;; This function calls:
 34180 ;;		Nothing
 34181 ;; This function is called by:
 34182 ;;		_getNumTxBuffersInUse
 34183 ;;		_getNumRxBuffersInUse
 34184 ;;		_canSendMessage
 34185 ;; This function uses a non-reentrant model
 34186 ;;
 34187                           
 34188                           	psect	text135
 34189   00BD12                     __ptext135:
 34190                           	callstack 0
 34191   00BD12                     _quantity:
 34192                           	callstack 12
 34193                           
 34194                           ;../../VLCBlib_PIC/messageQueue.c: 131:     return (q->writeIndex - q->readIndex) & (q->
      +                          size -1);
 34195                           
 34196                           ;incstack = 0
 34197   00BD12  0100               	movlb	0	; () banked
 34198   00BD14  518D               	movf	quantity@q& (0+255),w,b
 34199   00BD16  6ED9               	movwf	fsr2l,c
 34200   00BD18  6ADA               	clrf	fsr2h,c
 34201   00BD1A  0E02               	movlw	2
 34202   00BD1C  26D9               	addwf	fsr2l,f,c
 34203   00BD1E  50DF               	movf	indf2,w,c
 34204   00BD20  6F8E               	movwf	??_quantity& (0+255),b
 34205   00BD22  518D               	movf	quantity@q& (0+255),w,b
 34206   00BD24  6ED9               	movwf	fsr2l,c
 34207   00BD26  6ADA               	clrf	fsr2h,c
 34208   00BD28  0E03               	movlw	3
 34209   00BD2A  26D9               	addwf	fsr2l,f,c
 34210   00BD2C  50DF               	movf	indf2,w,c
 34211   00BD2E  6F8F               	movwf	(??_quantity+1)& (0+255),b
 34212   00BD30  518E               	movf	??_quantity& (0+255),w,b
 34213   00BD32  5D8F               	subwf	(??_quantity+1)& (0+255),w,b
 34214   00BD34  6F90               	movwf	(??_quantity+2)& (0+255),b
 34215   00BD36  518D               	movf	quantity@q& (0+255),w,b
 34216   00BD38  6ED9               	movwf	fsr2l,c
 34217   00BD3A  6ADA               	clrf	fsr2h,c
 34218   00BD3C  0E04               	movlw	4
 34219   00BD3E  26D9               	addwf	fsr2l,f,c
 34220   00BD40  50DF               	movf	indf2,w,c
 34221   00BD42  6F91               	movwf	(??_quantity+3)& (0+255),b
 34222   00BD44  0591               	decf	(??_quantity+3)& (0+255),w,b
 34223   00BD46  1590               	andwf	(??_quantity+2)& (0+255),w,b
 34224                           
 34225                           ; BSR set to: 0
 34226   00BD48  0012               	return		;funcret
 34227   00BD4A                     __end_of_quantity:
 34228                           	callstack 0
 34229                           
 34230 ;; *************** function _getNextWriteMessage *****************
 34231 ;; Defined at:
 34232 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 34233 ;; Parameters:    Size  Location     Type
 34234 ;;  q               1   45[BANK0 ] PTR struct MessageQueue
 34235 ;;		 -> rxQueue(5), 
 34236 ;; Auto vars:     Size  Location     Type
 34237 ;;  wr              1   56[BANK0 ] unsigned char 
 34238 ;; Return value:  Size  Location     Type
 34239 ;;                  2   45[BANK0 ] PTR struct Message
 34240 ;; Registers used:
 34241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34242 ;; Tracked objects:
 34243 ;;		On entry : 0/0
 34244 ;;		On exit  : 0/0
 34245 ;;		Unchanged: 0/0
 34246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34249 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34250 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34251 ;;Total ram usage:       12 bytes
 34252 ;; Hardware stack levels used: 1
 34253 ;; Hardware stack levels required when called: 12
 34254 ;; This function calls:
 34255 ;;		Nothing
 34256 ;; This function is called by:
 34257 ;;		_canSendMessage
 34258 ;; This function uses a non-reentrant model
 34259 ;;
 34260                           
 34261                           	psect	text136
 34262   008B56                     __ptext136:
 34263                           	callstack 0
 34264   008B56                     _getNextWriteMessage:
 34265                           	callstack 12
 34266                           
 34267                           ; BSR set to: 0
 34268                           ;incstack = 0
 34269   008B56  0100               	movlb	0	; () banked
 34270   008B58  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34271   008B5A  6ED9               	movwf	fsr2l,c
 34272   008B5C  6ADA               	clrf	fsr2h,c
 34273   008B5E  0E02               	movlw	2
 34274   008B60  26D9               	addwf	fsr2l,f,c
 34275   008B62  50DF               	movf	indf2,w,c
 34276   008B64  6F8F               	movwf	??_getNextWriteMessage& (0+255),b
 34277   008B66  6B90               	clrf	(??_getNextWriteMessage+1)& (0+255),b
 34278   008B68  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34279   008B6A  6ED9               	movwf	fsr2l,c
 34280   008B6C  6ADA               	clrf	fsr2h,c
 34281   008B6E  0E04               	movlw	4
 34282   008B70  26D9               	addwf	fsr2l,f,c
 34283   008B72  50DF               	movf	indf2,w,c
 34284   008B74  6F91               	movwf	(??_getNextWriteMessage+2)& (0+255),b
 34285   008B76  0EFF               	movlw	255
 34286   008B78  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 34287   008B7A  6F92               	movwf	(??_getNextWriteMessage+3)& (0+255),b
 34288   008B7C  6B93               	clrf	(??_getNextWriteMessage+4)& (0+255),b
 34289   008B7E  0EFF               	movlw	255
 34290   008B80  2393               	addwfc	(??_getNextWriteMessage+4)& (0+255),f,b
 34291   008B82  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34292   008B84  6ED9               	movwf	fsr2l,c
 34293   008B86  6ADA               	clrf	fsr2h,c
 34294   008B88  0E03               	movlw	3
 34295   008B8A  26D9               	addwf	fsr2l,f,c
 34296   008B8C  50DF               	movf	indf2,w,c
 34297   008B8E  6F94               	movwf	(??_getNextWriteMessage+5)& (0+255),b
 34298   008B90  6B95               	clrf	(??_getNextWriteMessage+6)& (0+255),b
 34299   008B92  0E01               	movlw	1
 34300   008B94  2794               	addwf	(??_getNextWriteMessage+5)& (0+255),f,b
 34301   008B96  0E00               	movlw	0
 34302   008B98  2395               	addwfc	(??_getNextWriteMessage+6)& (0+255),f,b
 34303   008B9A  5192               	movf	(??_getNextWriteMessage+3)& (0+255),w,b
 34304   008B9C  1594               	andwf	(??_getNextWriteMessage+5)& (0+255),w,b
 34305   008B9E  6F96               	movwf	(??_getNextWriteMessage+7)& (0+255),b
 34306   008BA0  5193               	movf	(??_getNextWriteMessage+4)& (0+255),w,b
 34307   008BA2  1595               	andwf	(??_getNextWriteMessage+6)& (0+255),w,b
 34308   008BA4  6F97               	movwf	(??_getNextWriteMessage+8)& (0+255),b
 34309   008BA6  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 34310   008BA8  1996               	xorwf	(??_getNextWriteMessage+7)& (0+255),w,b
 34311   008BAA  E109               	bnz	l19108
 34312   008BAC  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 34313   008BAE  1997               	xorwf	(??_getNextWriteMessage+8)& (0+255),w,b
 34314   008BB0  A4D8               	btfss	status,2,c
 34315   008BB2  D005               	goto	l19108
 34316                           
 34317                           ; BSR set to: 0
 34318   008BB4  0E00               	movlw	0
 34319   008BB6  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 34320   008BB8  0E00               	movlw	0
 34321   008BBA  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 34322   008BBC  0012               	return	
 34323   008BBE                     l19108:
 34324                           
 34325                           ; BSR set to: 0
 34326   008BBE  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34327   008BC0  6ED9               	movwf	fsr2l,c
 34328   008BC2  6ADA               	clrf	fsr2h,c
 34329   008BC4  0E03               	movlw	3
 34330   008BC6  26D9               	addwf	fsr2l,f,c
 34331   008BC8  50DF               	movf	indf2,w,c
 34332   008BCA  6F98               	movwf	getNextWriteMessage@wr& (0+255),b
 34333   008BCC  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34334   008BCE  6ED9               	movwf	fsr2l,c
 34335   008BD0  6ADA               	clrf	fsr2h,c
 34336   008BD2  0E03               	movlw	3
 34337   008BD4  26D9               	addwf	fsr2l,f,c
 34338   008BD6  2ADF               	incf	indf2,f,c
 34339                           
 34340                           ; BSR set to: 0
 34341   008BD8  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34342   008BDA  6ED9               	movwf	fsr2l,c
 34343   008BDC  6ADA               	clrf	fsr2h,c
 34344   008BDE  0E04               	movlw	4
 34345   008BE0  26D9               	addwf	fsr2l,f,c
 34346   008BE2  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34347   008BE4  6EE1               	movwf	fsr1l,c
 34348   008BE6  6AE2               	clrf	fsr1h,c
 34349   008BE8  0E03               	movlw	3
 34350   008BEA  26E1               	addwf	fsr1l,f,c
 34351   008BEC  50DE               	movf	postinc2,w,c
 34352   008BEE  5CE6               	subwf	postinc1,w,c
 34353   008BF0  A0D8               	btfss	status,0,c
 34354   008BF2  D006               	goto	l19114
 34355                           
 34356                           ; BSR set to: 0
 34357   008BF4  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34358   008BF6  6ED9               	movwf	fsr2l,c
 34359   008BF8  6ADA               	clrf	fsr2h,c
 34360   008BFA  0E03               	movlw	3
 34361   008BFC  26D9               	addwf	fsr2l,f,c
 34362   008BFE  6ADF               	clrf	indf2,c
 34363   008C00                     l19114:
 34364                           
 34365                           ; BSR set to: 0
 34366   008C00  5198               	movf	getNextWriteMessage@wr& (0+255),w,b
 34367   008C02  0D09               	mullw	9
 34368   008C04  CFF3 F08F          	movff	prodl,??_getNextWriteMessage
 34369   008C08  CFF4 F090          	movff	prodh,??_getNextWriteMessage+1
 34370   008C0C  518D               	movf	getNextWriteMessage@q& (0+255),w,b
 34371   008C0E  6ED9               	movwf	fsr2l,c
 34372   008C10  6ADA               	clrf	fsr2h,c
 34373   008C12  CFDE F091          	movff	postinc2,??_getNextWriteMessage+2
 34374   008C16  CFDD F092          	movff	postdec2,??_getNextWriteMessage+3
 34375   008C1A  518F               	movf	??_getNextWriteMessage& (0+255),w,b
 34376   008C1C  2591               	addwf	(??_getNextWriteMessage+2)& (0+255),w,b
 34377   008C1E  6F8D               	movwf	?_getNextWriteMessage& (0+255),b
 34378   008C20  5190               	movf	(??_getNextWriteMessage+1)& (0+255),w,b
 34379   008C22  2192               	addwfc	(??_getNextWriteMessage+3)& (0+255),w,b
 34380   008C24  6F8E               	movwf	(?_getNextWriteMessage+1)& (0+255),b
 34381                           
 34382                           ; BSR set to: 0
 34383   008C26  0012               	return		;funcret
 34384   008C28                     __end_of_getNextWriteMessage:
 34385                           	callstack 0
 34386                           
 34387 ;; *************** function _readInput *****************
 34388 ;; Defined at:
 34389 ;;		line 174 in file "../inputs.c"
 34390 ;; Parameters:    Size  Location     Type
 34391 ;;  io              1    wreg     unsigned char 
 34392 ;; Auto vars:     Size  Location     Type
 34393 ;;  io              1   51[BANK0 ] unsigned char 
 34394 ;; Return value:  Size  Location     Type
 34395 ;;                  1    wreg      enum E12711
 34396 ;; Registers used:
 34397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34398 ;; Tracked objects:
 34399 ;;		On entry : 0/0
 34400 ;;		On exit  : 0/0
 34401 ;;		Unchanged: 0/0
 34402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34406 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34407 ;;Total ram usage:        3 bytes
 34408 ;; Hardware stack levels used: 1
 34409 ;; Hardware stack levels required when called: 13
 34410 ;; This function calls:
 34411 ;;		_getNV
 34412 ;; This function is called by:
 34413 ;;		_initInputScan
 34414 ;;		_inputScan
 34415 ;; This function uses a non-reentrant model
 34416 ;;
 34417                           
 34418                           	psect	text137
 34419   007F54                     __ptext137:
 34420                           	callstack 0
 34421   007F54                     _readInput:
 34422                           	callstack 15
 34423                           
 34424                           ; BSR set to: 0
 34425                           ;incstack = 0
 34426                           ;readInput@io stored from wreg
 34427   007F54  0100               	movlb	0	; () banked
 34428   007F56  6F93               	movwf	readInput@io& (0+255),b
 34429                           
 34430                           ;../inputs.c: 175:     if (getNV((16 + 7*(io) + 0)) == 0) {
 34431   007F58  0100               	movlb	0	; () banked
 34432   007F5A  5193               	movf	readInput@io& (0+255),w,b
 34433   007F5C  0D07               	mullw	7
 34434   007F5E  50F3               	movf	243,w,c
 34435   007F60  0F10               	addlw	16
 34436   007F62  ECD9  F05D         	call	_getNV
 34437   007F66  0100               	movlb	0	; () banked
 34438   007F68  518D               	movf	?_getNV& (0+255),w,b
 34439   007F6A  118E               	iorwf	(?_getNV+1)& (0+255),w,b
 34440   007F6C  B4D8               	btfsc	status,2,c
 34441   007F6E  D05B               	goto	l21232
 34442   007F70  D074               	goto	l21234
 34443   007F72                     l21218:
 34444                           
 34445                           ; BSR set to: 0
 34446                           ;../inputs.c: 178:                 return PORTA & (1<<configs[io].no);
 34447   007F72  5193               	movf	readInput@io& (0+255),w,b
 34448   007F74  0D04               	mullw	4
 34449   007F76  0E02               	movlw	2
 34450   007F78  26F3               	addwf	243,f,c
 34451   007F7A  0E00               	movlw	0
 34452   007F7C  22F4               	addwfc	244,f,c
 34453   007F7E  0E35               	movlw	low _configs
 34454   007F80  24F3               	addwf	243,w,c
 34455   007F82  6EF6               	movwf	tblptrl,c
 34456   007F84  0EEE               	movlw	high _configs
 34457   007F86  20F4               	addwfc	244,w,c
 34458   007F88  6EF7               	movwf	tblptrh,c
 34459   007F8A                     	if	1	;There are 3 active tblptr bytes
 34460   007F8A  6AF8               	clrf	tblptru,c
 34461   007F8C  0E00               	movlw	low (__mediumconst shr (0+16))
 34462   007F8E  22F8               	addwfc	tblptru,f,c
 34463   007F90                     	endif
 34464   007F90  0008               	tblrd		*
 34465   007F92  CFF5 F091          	movff	tablat,??_readInput
 34466   007F96  0E01               	movlw	1
 34467   007F98  6F92               	movwf	(??_readInput+1)& (0+255),b
 34468   007F9A  2B91               	incf	??_readInput& (0+255),f,b
 34469   007F9C  D002               	goto	u21744
 34470   007F9E                     u21745:
 34471   007F9E  90D8               	bcf	status,0,c
 34472   007FA0  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34473   007FA2                     u21744:
 34474   007FA2  2F91               	decfsz	??_readInput& (0+255),f,b
 34475   007FA4  D7FC               	goto	u21745
 34476   007FA6  0100               	movlb	0	; () banked
 34477   007FA8  5192               	movf	(??_readInput+1)& (0+255),w,b
 34478   007FAA  1480               	andwf	128,w,c	;volatile
 34479   007FAC  0012               	return	
 34480   007FAE                     l21222:
 34481                           
 34482                           ; BSR set to: 0
 34483                           ;../inputs.c: 180:                 return PORTB & (1<<configs[io].no);
 34484   007FAE  5193               	movf	readInput@io& (0+255),w,b
 34485   007FB0  0D04               	mullw	4
 34486   007FB2  0E02               	movlw	2
 34487   007FB4  26F3               	addwf	243,f,c
 34488   007FB6  0E00               	movlw	0
 34489   007FB8  22F4               	addwfc	244,f,c
 34490   007FBA  0E35               	movlw	low _configs
 34491   007FBC  24F3               	addwf	243,w,c
 34492   007FBE  6EF6               	movwf	tblptrl,c
 34493   007FC0  0EEE               	movlw	high _configs
 34494   007FC2  20F4               	addwfc	244,w,c
 34495   007FC4  6EF7               	movwf	tblptrh,c
 34496   007FC6                     	if	1	;There are 3 active tblptr bytes
 34497   007FC6  6AF8               	clrf	tblptru,c
 34498   007FC8  0E00               	movlw	low (__mediumconst shr (0+16))
 34499   007FCA  22F8               	addwfc	tblptru,f,c
 34500   007FCC                     	endif
 34501   007FCC  0008               	tblrd		*
 34502   007FCE  CFF5 F091          	movff	tablat,??_readInput
 34503   007FD2  0E01               	movlw	1
 34504   007FD4  6F92               	movwf	(??_readInput+1)& (0+255),b
 34505   007FD6  2B91               	incf	??_readInput& (0+255),f,b
 34506   007FD8  D002               	goto	u21754
 34507   007FDA                     u21755:
 34508   007FDA  90D8               	bcf	status,0,c
 34509   007FDC  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34510   007FDE                     u21754:
 34511   007FDE  2F91               	decfsz	??_readInput& (0+255),f,b
 34512   007FE0  D7FC               	goto	u21755
 34513   007FE2  0100               	movlb	0	; () banked
 34514   007FE4  5192               	movf	(??_readInput+1)& (0+255),w,b
 34515   007FE6  1481               	andwf	129,w,c	;volatile
 34516   007FE8  0012               	return	
 34517   007FEA                     l21226:
 34518                           
 34519                           ; BSR set to: 0
 34520                           ;../inputs.c: 182:                 return PORTC & (1<<configs[io].no);
 34521   007FEA  5193               	movf	readInput@io& (0+255),w,b
 34522   007FEC  0D04               	mullw	4
 34523   007FEE  0E02               	movlw	2
 34524   007FF0  26F3               	addwf	243,f,c
 34525   007FF2  0E00               	movlw	0
 34526   007FF4  22F4               	addwfc	244,f,c
 34527   007FF6  0E35               	movlw	low _configs
 34528   007FF8  24F3               	addwf	243,w,c
 34529   007FFA  6EF6               	movwf	tblptrl,c
 34530   007FFC  0EEE               	movlw	high _configs
 34531   007FFE  20F4               	addwfc	244,w,c
 34532   008000  6EF7               	movwf	tblptrh,c
 34533   008002                     	if	1	;There are 3 active tblptr bytes
 34534   008002  6AF8               	clrf	tblptru,c
 34535   008004  0E00               	movlw	low (__mediumconst shr (0+16))
 34536   008006  22F8               	addwfc	tblptru,f,c
 34537   008008                     	endif
 34538   008008  0008               	tblrd		*
 34539   00800A  CFF5 F091          	movff	tablat,??_readInput
 34540   00800E  0E01               	movlw	1
 34541   008010  6F92               	movwf	(??_readInput+1)& (0+255),b
 34542   008012  2B91               	incf	??_readInput& (0+255),f,b
 34543   008014  D002               	goto	u21764
 34544   008016                     u21765:
 34545   008016  90D8               	bcf	status,0,c
 34546   008018  3792               	rlcf	(??_readInput+1)& (0+255),f,b
 34547   00801A                     u21764:
 34548   00801A  2F91               	decfsz	??_readInput& (0+255),f,b
 34549   00801C  D7FC               	goto	u21765
 34550   00801E  0100               	movlb	0	; () banked
 34551   008020  5192               	movf	(??_readInput+1)& (0+255),w,b
 34552   008022  1482               	andwf	130,w,c	;volatile
 34553   008024  0012               	return	
 34554   008026                     l21232:
 34555                           
 34556                           ; BSR set to: 0
 34557   008026  5193               	movf	readInput@io& (0+255),w,b
 34558   008028  0D04               	mullw	4
 34559   00802A  0E01               	movlw	1
 34560   00802C  26F3               	addwf	243,f,c
 34561   00802E  0E00               	movlw	0
 34562   008030  22F4               	addwfc	244,f,c
 34563   008032  0E35               	movlw	low _configs
 34564   008034  24F3               	addwf	243,w,c
 34565   008036  6EF6               	movwf	tblptrl,c
 34566   008038  0EEE               	movlw	high _configs
 34567   00803A  20F4               	addwfc	244,w,c
 34568   00803C  6EF7               	movwf	tblptrh,c
 34569   00803E                     	if	1	;There are 3 active tblptr bytes
 34570   00803E  6AF8               	clrf	tblptru,c
 34571   008040  0E00               	movlw	low (__mediumconst shr (0+16))
 34572   008042  22F8               	addwfc	tblptru,f,c
 34573   008044                     	endif
 34574   008044  0008               	tblrd		*
 34575   008046  50F5               	movf	tablat,w,c
 34576                           
 34577                           ; Switch size 1, requested type "simple"
 34578                           ; Number of cases is 3, Range of values is 65 to 67
 34579                           ; switch strategies available:
 34580                           ; Name         Instructions Cycles
 34581                           ; simple_byte           10     6 (average)
 34582                           ;	Chosen strategy is simple_byte
 34583   008048  0A41               	xorlw	65	; case 65
 34584   00804A  B4D8               	btfsc	status,2,c
 34585   00804C  D792               	goto	l21218
 34586   00804E  0A03               	xorlw	3	; case 66
 34587   008050  B4D8               	btfsc	status,2,c
 34588   008052  D7AD               	goto	l21222
 34589   008054  0A01               	xorlw	1	; case 67
 34590   008056  B4D8               	btfsc	status,2,c
 34591   008058  D7C8               	goto	l21226
 34592   00805A                     l21234:
 34593                           
 34594                           ; BSR set to: 0
 34595                           ;../inputs.c: 191:     return FALSE;
 34596   00805A  0E00               	movlw	0
 34597                           
 34598                           ; BSR set to: 0
 34599   00805C  0012               	return		;funcret
 34600   00805E                     __end_of_readInput:
 34601                           	callstack 0
 34602                           
 34603 ;; *************** function _initRomOps *****************
 34604 ;; Defined at:
 34605 ;;		line 148 in file "../../VLCBlib_PIC/nvm.c"
 34606 ;; Parameters:    Size  Location     Type
 34607 ;;		None
 34608 ;; Auto vars:     Size  Location     Type
 34609 ;;		None
 34610 ;; Return value:  Size  Location     Type
 34611 ;;                  1    wreg      void 
 34612 ;; Registers used:
 34613 ;;		wreg, status,2
 34614 ;; Tracked objects:
 34615 ;;		On entry : 0/0
 34616 ;;		On exit  : 0/0
 34617 ;;		Unchanged: 0/0
 34618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34623 ;;Total ram usage:        0 bytes
 34624 ;; Hardware stack levels used: 1
 34625 ;; Hardware stack levels required when called: 12
 34626 ;; This function calls:
 34627 ;;		Nothing
 34628 ;; This function is called by:
 34629 ;;		_main
 34630 ;; This function uses a non-reentrant model
 34631 ;;
 34632                           
 34633                           	psect	text138
 34634   00C45C                     __ptext138:
 34635                           	callstack 0
 34636   00C45C                     _initRomOps:
 34637                           	callstack 18
 34638                           
 34639                           ;../../VLCBlib_PIC/nvm.c: 149:     flashFlags.asByte = 0;
 34640                           
 34641                           ; BSR set to: 0
 34642                           ;incstack = 0
 34643   00C45C  0E00               	movlw	0
 34644   00C45E  0100               	movlb	0	; () banked
 34645   00C460  6FC4               	movwf	_flashFlags& (0+255),b
 34646                           
 34647                           ;../../VLCBlib_PIC/nvm.c: 150:     flashBlock = 0x0000;
 34648   00C462  0E00               	movlw	0
 34649   00C464  6FBA               	movwf	(_flashBlock+1)& (0+255),b
 34650   00C466  0E00               	movlw	0
 34651   00C468  6FB9               	movwf	_flashBlock& (0+255),b
 34652                           
 34653                           ;../../VLCBlib_PIC/nvm.c: 152:     TBLPTRU = 0;
 34654   00C46A  0E00               	movlw	0
 34655   00C46C  6EF8               	movwf	248,c	;volatile
 34656                           
 34657                           ; BSR set to: 0
 34658   00C46E  0012               	return		;funcret
 34659   00C470                     __end_of_initRomOps:
 34660                           	callstack 0
 34661                           
 34662 ;; *************** function _checkPowerOnPb *****************
 34663 ;; Defined at:
 34664 ;;		line 953 in file "../../VLCBlib_PIC/vlcb.c"
 34665 ;; Parameters:    Size  Location     Type
 34666 ;;		None
 34667 ;; Auto vars:     Size  Location     Type
 34668 ;;  i               1   57[BANK1 ] unsigned char 
 34669 ;; Return value:  Size  Location     Type
 34670 ;;                  1    wreg      void 
 34671 ;; Registers used:
 34672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34673 ;; Tracked objects:
 34674 ;;		On entry : 0/0
 34675 ;;		On exit  : 0/0
 34676 ;;		Unchanged: 0/0
 34677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34679 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34681 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34682 ;;Total ram usage:        1 bytes
 34683 ;; Hardware stack levels used: 1
 34684 ;; Hardware stack levels required when called: 27
 34685 ;; This function calls:
 34686 ;;		_APP_testMode
 34687 ;;		_factoryReset
 34688 ;;		_pbDownTimer
 34689 ;;		_pbUpTimer
 34690 ;;		_showStatus
 34691 ;; This function is called by:
 34692 ;;		_main
 34693 ;; This function uses a non-reentrant model
 34694 ;;
 34695                           
 34696                           	psect	text139
 34697   00B36C                     __ptext139:
 34698                           	callstack 0
 34699   00B36C                     _checkPowerOnPb:
 34700                           	callstack 3
 34701                           
 34702                           ;../../VLCBlib_PIC/vlcb.c: 954:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 957:     if ((!
      +                          (PORTAbits.RA2))) {
 34703                           
 34704                           ; BSR set to: 0
 34705                           ;incstack = 0
 34706   00B36C  B480               	btfsc	128,2,c	;volatile
 34707   00B36E  0012               	return	
 34708                           
 34709                           ;../../VLCBlib_PIC/vlcb.c: 959:         i = pbDownTimer(30);
 34710   00B370  0E1E               	movlw	30
 34711   00B372  ECCE  F04B         	call	_pbDownTimer
 34712   00B376  0101               	movlb	1	; () banked
 34713   00B378  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 34714                           
 34715                           ; BSR set to: 1
 34716                           ;../../VLCBlib_PIC/vlcb.c: 960:         if (i == 0) {
 34717   00B37A  51F3               	movf	checkPowerOnPb@i& (0+255),w,b
 34718   00B37C  B4D8               	btfsc	status,2,c
 34719   00B37E  0012               	return	
 34720                           
 34721                           ; BSR set to: 1
 34722                           
 34723                           ; BSR set to: 1
 34724                           ;../../VLCBlib_PIC/vlcb.c: 962:             return;
 34725   00B380  0E01               	movlw	1
 34726   00B382  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34727   00B384  D006               	goto	l24678
 34728                           
 34729                           ; BSR set to: 1
 34730   00B386  0E06               	movlw	6
 34731   00B388  61F3               	cpfslt	checkPowerOnPb@i& (0+255),b
 34732   00B38A  D003               	goto	l24678
 34733                           
 34734                           ; BSR set to: 1
 34735                           ;../../VLCBlib_PIC/vlcb.c: 964:             APP_testMode();
 34736   00B38C  EC9F  F062         	call	_APP_testMode	;wreg free
 34737                           
 34738                           ;../../VLCBlib_PIC/vlcb.c: 965:         } else if (i >= 10) {
 34739   00B390  0012               	return	
 34740   00B392                     l24678:
 34741                           
 34742                           ; BSR set to: 1
 34743   00B392  0E09               	movlw	9
 34744   00B394  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34745   00B396  0012               	return	
 34746                           
 34747                           ; BSR set to: 1
 34748                           ;../../VLCBlib_PIC/vlcb.c: 966:             showStatus(STATUS_RESET_WARNING);
 34749   00B398  0E04               	movlw	4
 34750   00B39A  EC81  F043         	call	_showStatus
 34751                           
 34752                           ;../../VLCBlib_PIC/vlcb.c: 968:             i = pbUpTimer(5);
 34753   00B39E  0E05               	movlw	5
 34754   00B3A0  EC76  F04B         	call	_pbUpTimer
 34755   00B3A4  0101               	movlb	1	; () banked
 34756   00B3A6  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 34757                           
 34758                           ; BSR set to: 1
 34759                           ;../../VLCBlib_PIC/vlcb.c: 969:             if (i == 0) {
 34760   00B3A8  51F3               	movf	checkPowerOnPb@i& (0+255),w,b
 34761   00B3AA  B4D8               	btfsc	status,2,c
 34762   00B3AC  0012               	return	
 34763                           
 34764                           ; BSR set to: 1
 34765                           ;../../VLCBlib_PIC/vlcb.c: 973:             i = pbDownTimer(5);
 34766   00B3AE  0E05               	movlw	5
 34767   00B3B0  ECCE  F04B         	call	_pbDownTimer
 34768   00B3B4  0101               	movlb	1	; () banked
 34769   00B3B6  6FF3               	movwf	checkPowerOnPb@i& (0+255),b
 34770                           
 34771                           ; BSR set to: 1
 34772                           ;../../VLCBlib_PIC/vlcb.c: 974:             if ((i>=2) && (i < 4)) {
 34773   00B3B8  0E01               	movlw	1
 34774   00B3BA  65F3               	cpfsgt	checkPowerOnPb@i& (0+255),b
 34775   00B3BC  0012               	return	
 34776                           
 34777                           ; BSR set to: 1
 34778   00B3BE  0E04               	movlw	4
 34779   00B3C0  61F3               	cpfslt	checkPowerOnPb@i& (0+255),b
 34780   00B3C2  0012               	return	
 34781                           
 34782                           ; BSR set to: 1
 34783                           ;../../VLCBlib_PIC/vlcb.c: 975:                 factoryReset();
 34784   00B3C4  EC9C  F042         	call	_factoryReset	;wreg free
 34785   00B3C8  0012               	return		;funcret
 34786   00B3CA                     __end_of_checkPowerOnPb:
 34787                           	callstack 0
 34788                           
 34789 ;; *************** function _showStatus *****************
 34790 ;; Defined at:
 34791 ;;		line 235 in file "../../VLCBlib_PIC/statusLeds2.c"
 34792 ;; Parameters:    Size  Location     Type
 34793 ;;  s               1    wreg     enum E12891
 34794 ;; Auto vars:     Size  Location     Type
 34795 ;;  s               1   47[BANK0 ] enum E12891
 34796 ;; Return value:  Size  Location     Type
 34797 ;;                  1    wreg      void 
 34798 ;; Registers used:
 34799 ;;		wreg, status,2, status,0
 34800 ;; Tracked objects:
 34801 ;;		On entry : 0/0
 34802 ;;		On exit  : 0/0
 34803 ;;		Unchanged: 0/0
 34804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34806 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34807 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34808 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34809 ;;Total ram usage:        3 bytes
 34810 ;; Hardware stack levels used: 1
 34811 ;; Hardware stack levels required when called: 12
 34812 ;; This function calls:
 34813 ;;		Nothing
 34814 ;; This function is called by:
 34815 ;;		_setLEDsByMode
 34816 ;;		_checkPowerOnPb
 34817 ;;		_poll
 34818 ;; This function uses a non-reentrant model
 34819 ;;
 34820                           
 34821                           	psect	text140
 34822   008702                     __ptext140:
 34823                           	callstack 0
 34824   008702                     _showStatus:
 34825                           	callstack 15
 34826                           
 34827                           ;incstack = 0
 34828                           ;showStatus@s stored from wreg
 34829   008702  0100               	movlb	0	; () banked
 34830   008704  6F8F               	movwf	showStatus@s& (0+255),b
 34831                           
 34832                           ;../../VLCBlib_PIC/statusLeds2.c: 236:     switch (s) {
 34833   008706  D03E               	goto	l20946
 34834   008708                     l20916:
 34835                           
 34836                           ; BSR set to: 0
 34837                           ;../../VLCBlib_PIC/statusLeds2.c: 238:             ledState[0] = LED_OFF;
 34838   008708  0E00               	movlw	0
 34839   00870A  6FBD               	movwf	_ledState& (0+255),b
 34840                           
 34841                           ;../../VLCBlib_PIC/statusLeds2.c: 239:             ledState[1] = LED_OFF;
 34842   00870C  0E00               	movlw	0
 34843   00870E  6FBE               	movwf	(_ledState+1)& (0+255),b
 34844                           
 34845                           ;../../VLCBlib_PIC/statusLeds2.c: 240:             break;
 34846   008710  0012               	return	
 34847   008712                     l20918:
 34848                           
 34849                           ; BSR set to: 0
 34850                           ;../../VLCBlib_PIC/statusLeds2.c: 242:             ledState[0] = LED_ON;
 34851   008712  0E01               	movlw	1
 34852   008714  6FBD               	movwf	_ledState& (0+255),b
 34853                           
 34854                           ;../../VLCBlib_PIC/statusLeds2.c: 243:             ledState[1] = LED_OFF;
 34855   008716  0E00               	movlw	0
 34856   008718  6FBE               	movwf	(_ledState+1)& (0+255),b
 34857                           
 34858                           ;../../VLCBlib_PIC/statusLeds2.c: 244:             break;
 34859   00871A  0012               	return	
 34860   00871C                     l20920:
 34861                           
 34862                           ; BSR set to: 0
 34863                           ;../../VLCBlib_PIC/statusLeds2.c: 246:             ledState[0] = LED_OFF;
 34864   00871C  0E00               	movlw	0
 34865   00871E  6FBD               	movwf	_ledState& (0+255),b
 34866                           
 34867                           ;../../VLCBlib_PIC/statusLeds2.c: 247:             ledState[1] = LED_FLASH_50_1HZ;
 34868   008720  0E03               	movlw	3
 34869   008722  6FBE               	movwf	(_ledState+1)& (0+255),b
 34870                           
 34871                           ;../../VLCBlib_PIC/statusLeds2.c: 248:             break;
 34872   008724  0012               	return	
 34873   008726                     l1771:
 34874                           
 34875                           ; BSR set to: 0
 34876                           ;../../VLCBlib_PIC/statusLeds2.c: 254:             ledState[0] = LED_OFF;
 34877                           
 34878                           ; BSR set to: 0
 34879   008726  0E00               	movlw	0
 34880   008728  6FBD               	movwf	_ledState& (0+255),b
 34881                           
 34882                           ;../../VLCBlib_PIC/statusLeds2.c: 255:             ledState[1] = LED_ON;
 34883   00872A  0E01               	movlw	1
 34884   00872C  6FBE               	movwf	(_ledState+1)& (0+255),b
 34885                           
 34886                           ;../../VLCBlib_PIC/statusLeds2.c: 256:             break;
 34887   00872E  0012               	return	
 34888   008730                     l20924:
 34889                           
 34890                           ; BSR set to: 0
 34891                           ;../../VLCBlib_PIC/statusLeds2.c: 258:             flashCounter[1] = 0;
 34892   008730  0E00               	movlw	0
 34893   008732  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34894                           
 34895                           ;../../VLCBlib_PIC/statusLeds2.c: 259:             flashCounter[0] = 25;
 34896   008734  0E19               	movlw	25
 34897   008736  6FBB               	movwf	_flashCounter& (0+255),b
 34898                           
 34899                           ;../../VLCBlib_PIC/statusLeds2.c: 260:             ledState[0] = LED_FLASH_50_2HZ;
 34900   008738  0E02               	movlw	2
 34901   00873A  6FBD               	movwf	_ledState& (0+255),b
 34902                           
 34903                           ;../../VLCBlib_PIC/statusLeds2.c: 261:             ledState[1] = LED_FLASH_50_2HZ;
 34904   00873C  0E02               	movlw	2
 34905   00873E  6FBE               	movwf	(_ledState+1)& (0+255),b
 34906                           
 34907                           ;../../VLCBlib_PIC/statusLeds2.c: 262:             break;
 34908   008740  0012               	return	
 34909   008742                     l20926:
 34910                           
 34911                           ; BSR set to: 0
 34912                           ;../../VLCBlib_PIC/statusLeds2.c: 264:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 34913   008742  29C8               	incf	_mode_state& (0+255),w,b
 34914   008744  A4D8               	btfss	status,2,c
 34915   008746  D003               	goto	l20930
 34916                           
 34917                           ; BSR set to: 0
 34918                           ;../../VLCBlib_PIC/statusLeds2.c: 265:                 ledState[1] = LED_SINGLE_FLICKER_
      +                          ON;
 34919   008748  0E06               	movlw	6
 34920   00874A  6FBE               	movwf	(_ledState+1)& (0+255),b
 34921                           
 34922                           ;../../VLCBlib_PIC/statusLeds2.c: 266:             } else if (mode_state == MODE_NORMAL)
      +                           {
 34923   00874C  0012               	return	
 34924   00874E                     l20930:
 34925                           
 34926                           ; BSR set to: 0
 34927   00874E  05C8               	decf	_mode_state& (0+255),w,b
 34928   008750  A4D8               	btfss	status,2,c
 34929   008752  0012               	return	
 34930                           
 34931                           ; BSR set to: 0
 34932                           ;../../VLCBlib_PIC/statusLeds2.c: 267:                 ledState[0] = LED_SINGLE_FLICKER_
      +                          ON;
 34933   008754  0E06               	movlw	6
 34934   008756  6FBD               	movwf	_ledState& (0+255),b
 34935   008758  0012               	return	
 34936   00875A                     l20934:
 34937                           
 34938                           ; BSR set to: 0
 34939                           ;../../VLCBlib_PIC/statusLeds2.c: 271:             if (mode_state == MODE_UNINITIALISED)
      +                           {
 34940   00875A  29C8               	incf	_mode_state& (0+255),w,b
 34941   00875C  A4D8               	btfss	status,2,c
 34942   00875E  D003               	goto	l20938
 34943                           
 34944                           ; BSR set to: 0
 34945                           ;../../VLCBlib_PIC/statusLeds2.c: 272:                 ledState[1] = LED_LONG_FLICKER_ON
      +                          ;
 34946   008760  0E08               	movlw	8
 34947   008762  6FBE               	movwf	(_ledState+1)& (0+255),b
 34948                           
 34949                           ;../../VLCBlib_PIC/statusLeds2.c: 273:             } else if (mode_state == MODE_NORMAL)
      +                           {
 34950   008764  0012               	return	
 34951   008766                     l20938:
 34952                           
 34953                           ; BSR set to: 0
 34954   008766  05C8               	decf	_mode_state& (0+255),w,b
 34955   008768  A4D8               	btfss	status,2,c
 34956   00876A  0012               	return	
 34957                           
 34958                           ; BSR set to: 0
 34959                           ;../../VLCBlib_PIC/statusLeds2.c: 274:                 ledState[0] = LED_LONG_FLICKER_ON
      +                          ;
 34960   00876C  0E08               	movlw	8
 34961   00876E  6FBD               	movwf	_ledState& (0+255),b
 34962   008770  0012               	return	
 34963   008772                     l20942:
 34964                           
 34965                           ; BSR set to: 0
 34966                           ;../../VLCBlib_PIC/statusLeds2.c: 279:             flashCounter[1] = 0;
 34967   008772  0E00               	movlw	0
 34968   008774  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 34969                           
 34970                           ;../../VLCBlib_PIC/statusLeds2.c: 280:             flashCounter[0] = 0;
 34971   008776  0E00               	movlw	0
 34972   008778  6FBB               	movwf	_flashCounter& (0+255),b
 34973                           
 34974                           ;../../VLCBlib_PIC/statusLeds2.c: 281:             ledState[0] = LED_FLASH_50_2HZ;
 34975   00877A  0E02               	movlw	2
 34976   00877C  6FBD               	movwf	_ledState& (0+255),b
 34977                           
 34978                           ;../../VLCBlib_PIC/statusLeds2.c: 282:             ledState[1] = LED_FLASH_50_2HZ;
 34979   00877E  0E02               	movlw	2
 34980   008780  6FBE               	movwf	(_ledState+1)& (0+255),b
 34981                           
 34982                           ;../../VLCBlib_PIC/statusLeds2.c: 283:             break;
 34983   008782  0012               	return	
 34984   008784                     l20946:
 34985   008784  0100               	movlb	0	; () banked
 34986   008786  518F               	movf	showStatus@s& (0+255),w,b
 34987   008788  6F8D               	movwf	??_showStatus& (0+255),b
 34988   00878A  6B8E               	clrf	(??_showStatus+1)& (0+255),b
 34989                           
 34990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34991                           ; Switch size 1, requested type "simple"
 34992                           ; Number of cases is 1, Range of values is 0 to 0
 34993                           ; switch strategies available:
 34994                           ; Name         Instructions Cycles
 34995                           ; simple_byte            4     3 (average)
 34996                           ;	Chosen strategy is simple_byte
 34997   00878C  518E               	movf	(??_showStatus+1)& (0+255),w,b
 34998   00878E  0A00               	xorlw	0	; case 0
 34999   008790  A4D8               	btfss	status,2,c
 35000   008792  0012               	return	
 35001                           
 35002                           ; BSR set to: 0
 35003                           ; Switch size 1, requested type "simple"
 35004                           ; Number of cases is 13, Range of values is 0 to 12
 35005                           ; switch strategies available:
 35006                           ; Name         Instructions Cycles
 35007                           ; simple_byte           40    21 (average)
 35008                           ;	Chosen strategy is simple_byte
 35009   008794  518D               	movf	??_showStatus& (0+255),w,b
 35010   008796  0A00               	xorlw	0	; case 0
 35011   008798  B4D8               	btfsc	status,2,c
 35012   00879A  D7B6               	goto	l20916
 35013   00879C  0A01               	xorlw	1	; case 1
 35014   00879E  B4D8               	btfsc	status,2,c
 35015   0087A0  D7B8               	goto	l20918
 35016   0087A2  0A03               	xorlw	3	; case 2
 35017   0087A4  B4D8               	btfsc	status,2,c
 35018   0087A6  D7BA               	goto	l20920
 35019   0087A8  0A01               	xorlw	1	; case 3
 35020   0087AA  B4D8               	btfsc	status,2,c
 35021   0087AC  D7BC               	goto	l1771
 35022   0087AE  0A07               	xorlw	7	; case 4
 35023   0087B0  B4D8               	btfsc	status,2,c
 35024   0087B2  D7BE               	goto	l20924
 35025   0087B4  0A01               	xorlw	1	; case 5
 35026   0087B6  B4D8               	btfsc	status,2,c
 35027   0087B8  D7B6               	goto	l1771
 35028   0087BA  0A03               	xorlw	3	; case 6
 35029   0087BC  B4D8               	btfsc	status,2,c
 35030   0087BE  D7B3               	goto	l1771
 35031   0087C0  0A01               	xorlw	1	; case 7
 35032   0087C2  B4D8               	btfsc	status,2,c
 35033   0087C4  D7BE               	goto	l20926
 35034   0087C6  0A0F               	xorlw	15	; case 8
 35035   0087C8  B4D8               	btfsc	status,2,c
 35036   0087CA  D7C7               	goto	l20934
 35037   0087CC  0A01               	xorlw	1	; case 9
 35038   0087CE  B4D8               	btfsc	status,2,c
 35039   0087D0  D7AA               	goto	l1771
 35040   0087D2  0A03               	xorlw	3	; case 10
 35041   0087D4  B4D8               	btfsc	status,2,c
 35042   0087D6  D7A7               	goto	l1771
 35043   0087D8  0A01               	xorlw	1	; case 11
 35044   0087DA  B4D8               	btfsc	status,2,c
 35045   0087DC  D7CA               	goto	l20942
 35046   0087DE  0A07               	xorlw	7	; case 12
 35047   0087E0  A4D8               	btfss	status,2,c
 35048   0087E2  0012               	return	
 35049   0087E4  D7C6               	goto	l20942
 35050   0087E6                     __end_of_showStatus:
 35051                           	callstack 0
 35052                           
 35053 ;; *************** function _pbUpTimer *****************
 35054 ;; Defined at:
 35055 ;;		line 930 in file "../../VLCBlib_PIC/vlcb.c"
 35056 ;; Parameters:    Size  Location     Type
 35057 ;;  timeout         1    wreg     unsigned char 
 35058 ;; Auto vars:     Size  Location     Type
 35059 ;;  timeout         1   72[BANK0 ] unsigned char 
 35060 ;; Return value:  Size  Location     Type
 35061 ;;                  1    wreg      unsigned char 
 35062 ;; Registers used:
 35063 ;;		wreg, status,2, status,0, cstack
 35064 ;; Tracked objects:
 35065 ;;		On entry : 0/0
 35066 ;;		On exit  : 0/0
 35067 ;;		Unchanged: 0/0
 35068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35070 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35071 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35072 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35073 ;;Total ram usage:        5 bytes
 35074 ;; Hardware stack levels used: 1
 35075 ;; Hardware stack levels required when called: 14
 35076 ;; This function calls:
 35077 ;;		___lldiv
 35078 ;;		___lmul
 35079 ;;		_leds_poll
 35080 ;;		_tickGet
 35081 ;; This function is called by:
 35082 ;;		_checkPowerOnPb
 35083 ;; This function uses a non-reentrant model
 35084 ;;
 35085                           
 35086                           	psect	text141
 35087   0096EC                     __ptext141:
 35088                           	callstack 0
 35089   0096EC                     _pbUpTimer:
 35090                           	callstack 15
 35091                           
 35092                           ; BSR set to: 0
 35093                           ;incstack = 0
 35094                           ;pbUpTimer@timeout stored from wreg
 35095   0096EC  0100               	movlb	0	; () banked
 35096   0096EE  6FA8               	movwf	pbUpTimer@timeout& (0+255),b
 35097                           
 35098                           ;../../VLCBlib_PIC/vlcb.c: 932:     pbTimer.val = tickGet();
 35099   0096F0  EC6B  F05A         	call	_tickGet	;wreg free
 35100   0096F4  C08D  F033         	movff	?_tickGet,_pbTimer
 35101   0096F8  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 35102   0096FC  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 35103   009700  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 35104                           
 35105                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 35106   009704  D02D               	goto	l1962
 35107   009706                     l23956:
 35108                           
 35109                           ;../../VLCBlib_PIC/vlcb.c: 934:         leds_poll();
 35110   009706  EC68  F02E         	call	_leds_poll	;wreg free
 35111                           
 35112                           ;../../VLCBlib_PIC/vlcb.c: 935:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35113   00970A  EC6B  F05A         	call	_tickGet	;wreg free
 35114   00970E  5033               	movf	_pbTimer^0,w,c
 35115   009710  0100               	movlb	0	; () banked
 35116   009712  5D8D               	subwf	?_tickGet& (0+255),w,b
 35117   009714  6FA4               	movwf	??_pbUpTimer& (0+255),b
 35118   009716  5034               	movf	(_pbTimer+1)^0,w,c
 35119   009718  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35120   00971A  6FA5               	movwf	(??_pbUpTimer+1)& (0+255),b
 35121   00971C  5035               	movf	(_pbTimer+2)^0,w,c
 35122   00971E  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35123   009720  6FA6               	movwf	(??_pbUpTimer+2)& (0+255),b
 35124   009722  5036               	movf	(_pbTimer+3)^0,w,c
 35125   009724  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35126   009726  6FA7               	movwf	(??_pbUpTimer+3)& (0+255),b
 35127   009728  51A8               	movf	pbUpTimer@timeout& (0+255),w,b
 35128   00972A  6F91               	movwf	___lmul@multiplier& (0+255),b
 35129   00972C  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35130   00972E  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35131   009730  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35132   009732  0E24               	movlw	36
 35133   009734  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35134   009736  0EF4               	movlw	244
 35135   009738  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35136   00973A  0E00               	movlw	0
 35137   00973C  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35138   00973E  0E00               	movlw	0
 35139   009740  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35140   009742  EC97  F05A         	call	___lmul	;wreg free
 35141   009746  0100               	movlb	0	; () banked
 35142   009748  51A4               	movf	??_pbUpTimer& (0+255),w,b
 35143   00974A  5D91               	subwf	?___lmul& (0+255),w,b
 35144   00974C  51A5               	movf	(??_pbUpTimer+1)& (0+255),w,b
 35145   00974E  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35146   009750  51A6               	movf	(??_pbUpTimer+2)& (0+255),w,b
 35147   009752  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35148   009754  51A7               	movf	(??_pbUpTimer+3)& (0+255),w,b
 35149   009756  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35150   009758  B0D8               	btfsc	status,0,c
 35151   00975A  D002               	goto	l1962
 35152                           
 35153                           ; BSR set to: 0
 35154                           ;../../VLCBlib_PIC/vlcb.c: 936:             return 0;
 35155   00975C  0E00               	movlw	0
 35156   00975E  0012               	return	
 35157   009760                     l1962:
 35158                           
 35159                           ;../../VLCBlib_PIC/vlcb.c: 933:     while (! ((!(PORTAbits.RA2)))) {
 35160   009760  B480               	btfsc	128,2,c	;volatile
 35161   009762  D7D1               	goto	l23956
 35162                           
 35163                           ;../../VLCBlib_PIC/vlcb.c: 940:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35164   009764  EC6B  F05A         	call	_tickGet	;wreg free
 35165   009768  5033               	movf	_pbTimer^0,w,c
 35166   00976A  0100               	movlb	0	; () banked
 35167   00976C  5D8D               	subwf	?_tickGet& (0+255),w,b
 35168   00976E  6F97               	movwf	___lldiv@dividend& (0+255),b
 35169   009770  5034               	movf	(_pbTimer+1)^0,w,c
 35170   009772  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35171   009774  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35172   009776  5035               	movf	(_pbTimer+2)^0,w,c
 35173   009778  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35174   00977A  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35175   00977C  5036               	movf	(_pbTimer+3)^0,w,c
 35176   00977E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35177   009780  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35178   009782  0E24               	movlw	36
 35179   009784  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35180   009786  0EF4               	movlw	244
 35181   009788  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35182   00978A  0E00               	movlw	0
 35183   00978C  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35184   00978E  0E00               	movlw	0
 35185   009790  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35186   009792  EC29  F053         	call	___lldiv	;wreg free
 35187   009796  0100               	movlb	0	; () banked
 35188   009798  5197               	movf	?___lldiv& (0+255),w,b
 35189                           
 35190                           ; BSR set to: 0
 35191   00979A  0012               	return		;funcret
 35192   00979C                     __end_of_pbUpTimer:
 35193                           	callstack 0
 35194                           
 35195 ;; *************** function _pbDownTimer *****************
 35196 ;; Defined at:
 35197 ;;		line 911 in file "../../VLCBlib_PIC/vlcb.c"
 35198 ;; Parameters:    Size  Location     Type
 35199 ;;  timeout         1    wreg     unsigned char 
 35200 ;; Auto vars:     Size  Location     Type
 35201 ;;  timeout         1   72[BANK0 ] unsigned char 
 35202 ;; Return value:  Size  Location     Type
 35203 ;;                  1    wreg      unsigned char 
 35204 ;; Registers used:
 35205 ;;		wreg, status,2, status,0, cstack
 35206 ;; Tracked objects:
 35207 ;;		On entry : 0/0
 35208 ;;		On exit  : 0/0
 35209 ;;		Unchanged: 0/0
 35210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35213 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35214 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35215 ;;Total ram usage:        5 bytes
 35216 ;; Hardware stack levels used: 1
 35217 ;; Hardware stack levels required when called: 14
 35218 ;; This function calls:
 35219 ;;		___lldiv
 35220 ;;		___lmul
 35221 ;;		_leds_poll
 35222 ;;		_tickGet
 35223 ;; This function is called by:
 35224 ;;		_checkPowerOnPb
 35225 ;; This function uses a non-reentrant model
 35226 ;;
 35227                           
 35228                           	psect	text142
 35229   00979C                     __ptext142:
 35230                           	callstack 0
 35231   00979C                     _pbDownTimer:
 35232                           	callstack 15
 35233                           
 35234                           ; BSR set to: 0
 35235                           ;incstack = 0
 35236                           ;pbDownTimer@timeout stored from wreg
 35237   00979C  0100               	movlb	0	; () banked
 35238   00979E  6FA8               	movwf	pbDownTimer@timeout& (0+255),b
 35239                           
 35240                           ;../../VLCBlib_PIC/vlcb.c: 913:     pbTimer.val = tickGet();
 35241   0097A0  EC6B  F05A         	call	_tickGet	;wreg free
 35242   0097A4  C08D  F033         	movff	?_tickGet,_pbTimer
 35243   0097A8  C08E  F034         	movff	?_tickGet+1,_pbTimer+1
 35244   0097AC  C08F  F035         	movff	?_tickGet+2,_pbTimer+2
 35245   0097B0  C090  F036         	movff	?_tickGet+3,_pbTimer+3
 35246                           
 35247                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 35248   0097B4  D02D               	goto	l1955
 35249   0097B6                     l23944:
 35250                           
 35251                           ;../../VLCBlib_PIC/vlcb.c: 915:         leds_poll();
 35252   0097B6  EC68  F02E         	call	_leds_poll	;wreg free
 35253                           
 35254                           ;../../VLCBlib_PIC/vlcb.c: 916:         if ((tickGet() - pbTimer.val) > timeout*62500) {
 35255   0097BA  EC6B  F05A         	call	_tickGet	;wreg free
 35256   0097BE  5033               	movf	_pbTimer^0,w,c
 35257   0097C0  0100               	movlb	0	; () banked
 35258   0097C2  5D8D               	subwf	?_tickGet& (0+255),w,b
 35259   0097C4  6FA4               	movwf	??_pbDownTimer& (0+255),b
 35260   0097C6  5034               	movf	(_pbTimer+1)^0,w,c
 35261   0097C8  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35262   0097CA  6FA5               	movwf	(??_pbDownTimer+1)& (0+255),b
 35263   0097CC  5035               	movf	(_pbTimer+2)^0,w,c
 35264   0097CE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35265   0097D0  6FA6               	movwf	(??_pbDownTimer+2)& (0+255),b
 35266   0097D2  5036               	movf	(_pbTimer+3)^0,w,c
 35267   0097D4  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35268   0097D6  6FA7               	movwf	(??_pbDownTimer+3)& (0+255),b
 35269   0097D8  51A8               	movf	pbDownTimer@timeout& (0+255),w,b
 35270   0097DA  6F91               	movwf	___lmul@multiplier& (0+255),b
 35271   0097DC  6B92               	clrf	(___lmul@multiplier+1)& (0+255),b
 35272   0097DE  6B93               	clrf	(___lmul@multiplier+2)& (0+255),b
 35273   0097E0  6B94               	clrf	(___lmul@multiplier+3)& (0+255),b
 35274   0097E2  0E24               	movlw	36
 35275   0097E4  6F95               	movwf	___lmul@multiplicand& (0+255),b
 35276   0097E6  0EF4               	movlw	244
 35277   0097E8  6F96               	movwf	(___lmul@multiplicand+1)& (0+255),b
 35278   0097EA  0E00               	movlw	0
 35279   0097EC  6F97               	movwf	(___lmul@multiplicand+2)& (0+255),b
 35280   0097EE  0E00               	movlw	0
 35281   0097F0  6F98               	movwf	(___lmul@multiplicand+3)& (0+255),b
 35282   0097F2  EC97  F05A         	call	___lmul	;wreg free
 35283   0097F6  0100               	movlb	0	; () banked
 35284   0097F8  51A4               	movf	??_pbDownTimer& (0+255),w,b
 35285   0097FA  5D91               	subwf	?___lmul& (0+255),w,b
 35286   0097FC  51A5               	movf	(??_pbDownTimer+1)& (0+255),w,b
 35287   0097FE  5992               	subwfb	(?___lmul+1)& (0+255),w,b
 35288   009800  51A6               	movf	(??_pbDownTimer+2)& (0+255),w,b
 35289   009802  5993               	subwfb	(?___lmul+2)& (0+255),w,b
 35290   009804  51A7               	movf	(??_pbDownTimer+3)& (0+255),w,b
 35291   009806  5994               	subwfb	(?___lmul+3)& (0+255),w,b
 35292   009808  B0D8               	btfsc	status,0,c
 35293   00980A  D002               	goto	l1955
 35294                           
 35295                           ; BSR set to: 0
 35296                           ;../../VLCBlib_PIC/vlcb.c: 917:             return 0;
 35297   00980C  0E00               	movlw	0
 35298   00980E  0012               	return	
 35299   009810                     l1955:
 35300                           
 35301                           ;../../VLCBlib_PIC/vlcb.c: 914:     while ((!(PORTAbits.RA2))) {
 35302   009810  A480               	btfss	128,2,c	;volatile
 35303   009812  D7D1               	goto	l23944
 35304                           
 35305                           ;../../VLCBlib_PIC/vlcb.c: 921:     return (uint8_t)((tickGet() - pbTimer.val)/62500);
 35306   009814  EC6B  F05A         	call	_tickGet	;wreg free
 35307   009818  5033               	movf	_pbTimer^0,w,c
 35308   00981A  0100               	movlb	0	; () banked
 35309   00981C  5D8D               	subwf	?_tickGet& (0+255),w,b
 35310   00981E  6F97               	movwf	___lldiv@dividend& (0+255),b
 35311   009820  5034               	movf	(_pbTimer+1)^0,w,c
 35312   009822  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35313   009824  6F98               	movwf	(___lldiv@dividend+1)& (0+255),b
 35314   009826  5035               	movf	(_pbTimer+2)^0,w,c
 35315   009828  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35316   00982A  6F99               	movwf	(___lldiv@dividend+2)& (0+255),b
 35317   00982C  5036               	movf	(_pbTimer+3)^0,w,c
 35318   00982E  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35319   009830  6F9A               	movwf	(___lldiv@dividend+3)& (0+255),b
 35320   009832  0E24               	movlw	36
 35321   009834  6F9B               	movwf	___lldiv@divisor& (0+255),b
 35322   009836  0EF4               	movlw	244
 35323   009838  6F9C               	movwf	(___lldiv@divisor+1)& (0+255),b
 35324   00983A  0E00               	movlw	0
 35325   00983C  6F9D               	movwf	(___lldiv@divisor+2)& (0+255),b
 35326   00983E  0E00               	movlw	0
 35327   009840  6F9E               	movwf	(___lldiv@divisor+3)& (0+255),b
 35328   009842  EC29  F053         	call	___lldiv	;wreg free
 35329   009846  0100               	movlb	0	; () banked
 35330   009848  5197               	movf	?___lldiv& (0+255),w,b
 35331                           
 35332                           ; BSR set to: 0
 35333   00984A  0012               	return		;funcret
 35334   00984C                     __end_of_pbDownTimer:
 35335                           	callstack 0
 35336                           
 35337 ;; *************** function _leds_poll *****************
 35338 ;; Defined at:
 35339 ;;		line 89 in file "../../VLCBlib_PIC/statusLeds2.c"
 35340 ;; Parameters:    Size  Location     Type
 35341 ;;		None
 35342 ;; Auto vars:     Size  Location     Type
 35343 ;;		None
 35344 ;; Return value:  Size  Location     Type
 35345 ;;                  1    wreg      void 
 35346 ;; Registers used:
 35347 ;;		wreg, status,2, status,0, cstack
 35348 ;; Tracked objects:
 35349 ;;		On entry : 0/0
 35350 ;;		On exit  : 0/0
 35351 ;;		Unchanged: 0/0
 35352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35355 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35356 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35357 ;;Total ram usage:        4 bytes
 35358 ;; Hardware stack levels used: 1
 35359 ;; Hardware stack levels required when called: 13
 35360 ;; This function calls:
 35361 ;;		___awdiv
 35362 ;;		_tickGet
 35363 ;; This function is called by:
 35364 ;;		_pbDownTimer
 35365 ;;		_pbUpTimer
 35366 ;;		_poll
 35367 ;; This function uses a non-reentrant model
 35368 ;;
 35369                           
 35370                           	psect	text143
 35371   005CD0                     __ptext143:
 35372                           	callstack 0
 35373   005CD0                     _leds_poll:
 35374                           	callstack 16
 35375                           
 35376                           ;../../VLCBlib_PIC/statusLeds2.c: 90:     if ((tickGet() - ledTimer.val) > (62500/100)) 
      +                          {
 35377                           
 35378                           ; BSR set to: 0
 35379                           ;incstack = 0
 35380   005CD0  EC6B  F05A         	call	_tickGet	;wreg free
 35381   005CD4  0101               	movlb	1	; () banked
 35382   005CD6  5148               	movf	_ledTimer& (0+255),w,b
 35383   005CD8  0100               	movlb	0	; () banked
 35384   005CDA  5D8D               	subwf	?_tickGet& (0+255),w,b
 35385   005CDC  6F9F               	movwf	??_leds_poll& (0+255),b
 35386   005CDE  0101               	movlb	1	; () banked
 35387   005CE0  5149               	movf	(_ledTimer+1)& (0+255),w,b
 35388   005CE2  0100               	movlb	0	; () banked
 35389   005CE4  598E               	subwfb	(?_tickGet+1)& (0+255),w,b
 35390   005CE6  6FA0               	movwf	(??_leds_poll+1)& (0+255),b
 35391   005CE8  0101               	movlb	1	; () banked
 35392   005CEA  514A               	movf	(_ledTimer+2)& (0+255),w,b
 35393   005CEC  0100               	movlb	0	; () banked
 35394   005CEE  598F               	subwfb	(?_tickGet+2)& (0+255),w,b
 35395   005CF0  6FA1               	movwf	(??_leds_poll+2)& (0+255),b
 35396   005CF2  0101               	movlb	1	; () banked
 35397   005CF4  514B               	movf	(_ledTimer+3)& (0+255),w,b
 35398   005CF6  0100               	movlb	0	; () banked
 35399   005CF8  5990               	subwfb	(?_tickGet+3)& (0+255),w,b
 35400   005CFA  6FA2               	movwf	(??_leds_poll+3)& (0+255),b
 35401   005CFC  51A2               	movf	(??_leds_poll+3)& (0+255),w,b
 35402   005CFE  11A1               	iorwf	(??_leds_poll+2)& (0+255),w,b
 35403   005D00  E106               	bnz	u22970
 35404   005D02  0E72               	movlw	114
 35405   005D04  5D9F               	subwf	??_leds_poll& (0+255),w,b
 35406   005D06  0E02               	movlw	2
 35407   005D08  59A0               	subwfb	(??_leds_poll+1)& (0+255),w,b
 35408   005D0A  A0D8               	btfss	status,0,c
 35409   005D0C  D06B               	goto	l22044
 35410   005D0E                     u22970:
 35411                           
 35412                           ; BSR set to: 0
 35413                           ;../../VLCBlib_PIC/statusLeds2.c: 91:         flashCounter[0]++;
 35414   005D0E  2BBB               	incf	_flashCounter& (0+255),f,b
 35415                           
 35416                           ;../../VLCBlib_PIC/statusLeds2.c: 92:         flashCounter[1]++;
 35417   005D10  2BBC               	incf	(_flashCounter+1)& (0+255),f,b
 35418                           
 35419                           ; BSR set to: 0
 35420                           ;../../VLCBlib_PIC/statusLeds2.c: 93:         ledTimer.val = tickGet();
 35421   005D12  EC6B  F05A         	call	_tickGet	;wreg free
 35422   005D16  C08D  F148         	movff	?_tickGet,_ledTimer
 35423   005D1A  C08E  F149         	movff	?_tickGet+1,_ledTimer+1
 35424   005D1E  C08F  F14A         	movff	?_tickGet+2,_ledTimer+2
 35425   005D22  C090  F14B         	movff	?_tickGet+3,_ledTimer+3
 35426   005D26  D05E               	goto	l22044
 35427   005D28                     l1721:
 35428                           
 35429                           ; BSR set to: 0
 35430                           ;../../VLCBlib_PIC/statusLeds2.c: 98:             (LATBbits.LATB6=1);
 35431   005D28  8C8A               	bsf	138,6,c	;volatile
 35432   005D2A                     l22000:
 35433                           
 35434                           ; BSR set to: 0
 35435                           ;../../VLCBlib_PIC/statusLeds2.c: 99:             flashCounter[1] = 0;
 35436   005D2A  0E00               	movlw	0
 35437   005D2C  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 35438                           
 35439                           ;../../VLCBlib_PIC/statusLeds2.c: 100:             break;
 35440   005D2E  D0E0               	goto	l22090
 35441   005D30                     l1723:
 35442                           
 35443                           ; BSR set to: 0
 35444                           ;../../VLCBlib_PIC/statusLeds2.c: 102:             (LATBbits.LATB6=0);
 35445   005D30  9C8A               	bcf	138,6,c	;volatile
 35446   005D32  D7FB               	goto	l22000
 35447   005D34                     l22004:
 35448                           
 35449                           ; BSR set to: 0
 35450                           ;../../VLCBlib_PIC/statusLeds2.c: 107:             (LATBbits.LATB6=flashCounter[1]/25);
 35451   005D34  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 35452   005D38  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35453   005D3A  0E00               	movlw	0
 35454   005D3C  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35455   005D3E  0E19               	movlw	25
 35456   005D40  6F99               	movwf	___awdiv@divisor& (0+255),b
 35457   005D42  ECA3  F052         	call	___awdiv	;wreg free
 35458   005D46  0100               	movlb	0	; () banked
 35459   005D48  3B97               	swapf	?___awdiv& (0+255),f,b
 35460   005D4A  4797               	rlncf	?___awdiv& (0+255),f,b
 35461   005D4C  4797               	rlncf	?___awdiv& (0+255),f,b
 35462   005D4E  508A               	movf	138,w,c	;volatile
 35463   005D50  1997               	xorwf	?___awdiv& (0+255),w,b
 35464   005D52  0BBF               	andlw	-65
 35465   005D54  1997               	xorwf	?___awdiv& (0+255),w,b
 35466   005D56  6E8A               	movwf	138,c	;volatile
 35467                           
 35468                           ; BSR set to: 0
 35469                           ;../../VLCBlib_PIC/statusLeds2.c: 108:             if (flashCounter[1] >= 50) {
 35470   005D58  0E31               	movlw	49
 35471   005D5A                     L16:
 35472   005D5A  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 35473   005D5C  D0C9               	goto	l22090
 35474   005D5E  D7E5               	goto	l22000
 35475   005D60                     l22010:
 35476                           
 35477                           ; BSR set to: 0
 35478                           ;../../VLCBlib_PIC/statusLeds2.c: 114:             (LATBbits.LATB6=flashCounter[1]/50);
 35479   005D60  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 35480   005D64  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35481   005D66  0E00               	movlw	0
 35482   005D68  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35483   005D6A  0E32               	movlw	50
 35484   005D6C  6F99               	movwf	___awdiv@divisor& (0+255),b
 35485   005D6E  ECA3  F052         	call	___awdiv	;wreg free
 35486   005D72  0100               	movlb	0	; () banked
 35487   005D74  3B97               	swapf	?___awdiv& (0+255),f,b
 35488   005D76  4797               	rlncf	?___awdiv& (0+255),f,b
 35489   005D78  4797               	rlncf	?___awdiv& (0+255),f,b
 35490   005D7A  508A               	movf	138,w,c	;volatile
 35491   005D7C  1997               	xorwf	?___awdiv& (0+255),w,b
 35492   005D7E  0BBF               	andlw	-65
 35493   005D80  1997               	xorwf	?___awdiv& (0+255),w,b
 35494   005D82  6E8A               	movwf	138,c	;volatile
 35495                           
 35496                           ; BSR set to: 0
 35497                           ;../../VLCBlib_PIC/statusLeds2.c: 115:             if (flashCounter[1] >= 100) {
 35498   005D84  0E63               	movlw	99
 35499   005D86  D7E9               	goto	L16
 35500   005D88                     l22016:
 35501                           
 35502                           ; BSR set to: 0
 35503                           ;../../VLCBlib_PIC/statusLeds2.c: 120:             (LATBbits.LATB6=flashCounter[1]/100);
 35504   005D88  C0BC  F097         	movff	_flashCounter+1,___awdiv@dividend
 35505   005D8C  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35506   005D8E  0E00               	movlw	0
 35507   005D90  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35508   005D92  0E64               	movlw	100
 35509   005D94  6F99               	movwf	___awdiv@divisor& (0+255),b
 35510   005D96  ECA3  F052         	call	___awdiv	;wreg free
 35511   005D9A  0100               	movlb	0	; () banked
 35512   005D9C  3B97               	swapf	?___awdiv& (0+255),f,b
 35513   005D9E  4797               	rlncf	?___awdiv& (0+255),f,b
 35514   005DA0  4797               	rlncf	?___awdiv& (0+255),f,b
 35515   005DA2  508A               	movf	138,w,c	;volatile
 35516   005DA4  1997               	xorwf	?___awdiv& (0+255),w,b
 35517   005DA6  0BBF               	andlw	-65
 35518   005DA8  1997               	xorwf	?___awdiv& (0+255),w,b
 35519   005DAA  6E8A               	movwf	138,c	;volatile
 35520                           
 35521                           ; BSR set to: 0
 35522                           ;../../VLCBlib_PIC/statusLeds2.c: 121:             if (flashCounter[1] >= 200) {
 35523   005DAC  0EC7               	movlw	199
 35524   005DAE  D7D5               	goto	L16
 35525   005DB0                     l1730:
 35526                           
 35527                           ; BSR set to: 0
 35528                           ;../../VLCBlib_PIC/statusLeds2.c: 126:             (LATBbits.LATB6=1);
 35529   005DB0  8C8A               	bsf	138,6,c	;volatile
 35530                           
 35531                           ; BSR set to: 0
 35532                           ;../../VLCBlib_PIC/statusLeds2.c: 127:             if (flashCounter[1] >= 25) {
 35533   005DB2  0E18               	movlw	24
 35534   005DB4  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 35535   005DB6  D09C               	goto	l22090
 35536                           
 35537                           ; BSR set to: 0
 35538                           ;../../VLCBlib_PIC/statusLeds2.c: 128:                 flashCounter[1] = 0;
 35539   005DB8  0E00               	movlw	0
 35540   005DBA  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 35541                           
 35542                           ;../../VLCBlib_PIC/statusLeds2.c: 129:                 ledState[1] = LED_OFF;
 35543   005DBC  0E00               	movlw	0
 35544   005DBE  D007               	goto	L17
 35545   005DC0                     l1732:
 35546                           
 35547                           ; BSR set to: 0
 35548                           ;../../VLCBlib_PIC/statusLeds2.c: 133:             (LATBbits.LATB6=0);
 35549   005DC0  9C8A               	bcf	138,6,c	;volatile
 35550                           
 35551                           ; BSR set to: 0
 35552                           ;../../VLCBlib_PIC/statusLeds2.c: 134:             if (flashCounter[1] >= 25) {
 35553   005DC2  0E18               	movlw	24
 35554   005DC4  65BC               	cpfsgt	(_flashCounter+1)& (0+255),b
 35555   005DC6  D094               	goto	l22090
 35556                           
 35557                           ; BSR set to: 0
 35558                           ;../../VLCBlib_PIC/statusLeds2.c: 135:                 flashCounter[1] = 0;
 35559   005DC8  0E00               	movlw	0
 35560   005DCA  6FBC               	movwf	(_flashCounter+1)& (0+255),b
 35561                           
 35562                           ;../../VLCBlib_PIC/statusLeds2.c: 136:                 ledState[1] = LED_ON;
 35563   005DCC  0E01               	movlw	1
 35564   005DCE                     L17:
 35565   005DCE  6FBE               	movwf	(_ledState+1)& (0+255),b
 35566   005DD0  D08F               	goto	l22090
 35567   005DD2                     l1734:
 35568                           
 35569                           ; BSR set to: 0
 35570                           ;../../VLCBlib_PIC/statusLeds2.c: 140:             (LATBbits.LATB6=1);
 35571   005DD2  8C8A               	bsf	138,6,c	;volatile
 35572                           
 35573                           ; BSR set to: 0
 35574                           ;../../VLCBlib_PIC/statusLeds2.c: 141:             if (flashCounter[1] >= 50) {
 35575   005DD4  0E31               	movlw	49
 35576   005DD6  D7EE               	goto	L20
 35577   005DD8                     l1736:
 35578                           
 35579                           ; BSR set to: 0
 35580                           ;../../VLCBlib_PIC/statusLeds2.c: 147:             (LATBbits.LATB6=0);
 35581   005DD8  9C8A               	bcf	138,6,c	;volatile
 35582                           
 35583                           ; BSR set to: 0
 35584                           ;../../VLCBlib_PIC/statusLeds2.c: 148:             if (flashCounter[1] >= 50) {
 35585   005DDA  0E31               	movlw	49
 35586   005DDC  D7F3               	goto	L21
 35587   005DDE                     l1738:
 35588                           
 35589                           ; BSR set to: 0
 35590                           ;../../VLCBlib_PIC/statusLeds2.c: 154:             (LATBbits.LATB6=0);
 35591   005DDE  9C8A               	bcf	138,6,c	;volatile
 35592                           
 35593                           ; BSR set to: 0
 35594                           ;../../VLCBlib_PIC/statusLeds2.c: 155:             if (flashCounter[1] >= 100) {
 35595   005DE0  0E63               	movlw	99
 35596   005DE2  D7F0               	goto	L21
 35597   005DE4                     l22044:
 35598   005DE4  0100               	movlb	0	; () banked
 35599   005DE6  51BE               	movf	(_ledState+1)& (0+255),w,b
 35600   005DE8  6F9F               	movwf	??_leds_poll& (0+255),b
 35601   005DEA  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35602                           
 35603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35604                           ; Switch size 1, requested type "simple"
 35605                           ; Number of cases is 1, Range of values is 0 to 0
 35606                           ; switch strategies available:
 35607                           ; Name         Instructions Cycles
 35608                           ; simple_byte            4     3 (average)
 35609                           ;	Chosen strategy is simple_byte
 35610   005DEC  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35611   005DEE  0A00               	xorlw	0	; case 0
 35612   005DF0  A4D8               	btfss	status,2,c
 35613   005DF2  D07E               	goto	l22090
 35614                           
 35615                           ; BSR set to: 0
 35616                           ; Switch size 1, requested type "simple"
 35617                           ; Number of cases is 10, Range of values is 0 to 9
 35618                           ; switch strategies available:
 35619                           ; Name         Instructions Cycles
 35620                           ; simple_byte           31    16 (average)
 35621                           ;	Chosen strategy is simple_byte
 35622   005DF4  519F               	movf	??_leds_poll& (0+255),w,b
 35623   005DF6  0A00               	xorlw	0	; case 0
 35624   005DF8  B4D8               	btfsc	status,2,c
 35625   005DFA  D79A               	goto	l1723
 35626   005DFC  0A01               	xorlw	1	; case 1
 35627   005DFE  B4D8               	btfsc	status,2,c
 35628   005E00  D793               	goto	l1721
 35629   005E02  0A03               	xorlw	3	; case 2
 35630   005E04  B4D8               	btfsc	status,2,c
 35631   005E06  D796               	goto	l22004
 35632   005E08  0A01               	xorlw	1	; case 3
 35633   005E0A  B4D8               	btfsc	status,2,c
 35634   005E0C  D7A9               	goto	l22010
 35635   005E0E  0A07               	xorlw	7	; case 4
 35636   005E10  B4D8               	btfsc	status,2,c
 35637   005E12  D7BA               	goto	l22016
 35638   005E14  0A01               	xorlw	1	; case 5
 35639   005E16  B4D8               	btfsc	status,2,c
 35640   005E18  D7D3               	goto	l1732
 35641   005E1A  0A03               	xorlw	3	; case 6
 35642   005E1C  B4D8               	btfsc	status,2,c
 35643   005E1E  D7C8               	goto	l1730
 35644   005E20  0A01               	xorlw	1	; case 7
 35645   005E22  B4D8               	btfsc	status,2,c
 35646   005E24  D7D9               	goto	l1736
 35647   005E26  0A0F               	xorlw	15	; case 8
 35648   005E28  B4D8               	btfsc	status,2,c
 35649   005E2A  D7D3               	goto	l1734
 35650   005E2C  0A01               	xorlw	1	; case 9
 35651   005E2E  B4D8               	btfsc	status,2,c
 35652   005E30  D7D6               	goto	l1738
 35653   005E32  D05E               	goto	l22090
 35654   005E34                     l1741:
 35655                           
 35656                           ; BSR set to: 0
 35657                           ;../../VLCBlib_PIC/statusLeds2.c: 164:             (LATBbits.LATB7=1);
 35658   005E34  8E8A               	bsf	138,7,c	;volatile
 35659   005E36                     l22046:
 35660                           
 35661                           ; BSR set to: 0
 35662                           ;../../VLCBlib_PIC/statusLeds2.c: 165:             flashCounter[0] = 0;
 35663   005E36  0E00               	movlw	0
 35664   005E38  6FBB               	movwf	_flashCounter& (0+255),b
 35665                           
 35666                           ;../../VLCBlib_PIC/statusLeds2.c: 166:             break;
 35667   005E3A  0012               	return	
 35668   005E3C                     l1743:
 35669                           
 35670                           ; BSR set to: 0
 35671                           ;../../VLCBlib_PIC/statusLeds2.c: 168:             (LATBbits.LATB7=0);
 35672   005E3C  9E8A               	bcf	138,7,c	;volatile
 35673   005E3E  D7FB               	goto	l22046
 35674   005E40                     l22050:
 35675                           
 35676                           ; BSR set to: 0
 35677                           ;../../VLCBlib_PIC/statusLeds2.c: 173:             (LATBbits.LATB7=flashCounter[0]/25);
 35678   005E40  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35679   005E44  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35680   005E46  0E00               	movlw	0
 35681   005E48  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35682   005E4A  0E19               	movlw	25
 35683   005E4C  6F99               	movwf	___awdiv@divisor& (0+255),b
 35684   005E4E  ECA3  F052         	call	___awdiv	;wreg free
 35685   005E52  0100               	movlb	0	; () banked
 35686   005E54  3397               	rrcf	?___awdiv& (0+255),f,b
 35687   005E56  3397               	rrcf	?___awdiv& (0+255),f,b
 35688   005E58  508A               	movf	138,w,c	;volatile
 35689   005E5A  1997               	xorwf	?___awdiv& (0+255),w,b
 35690   005E5C  0B7F               	andlw	-129
 35691   005E5E  1997               	xorwf	?___awdiv& (0+255),w,b
 35692   005E60  6E8A               	movwf	138,c	;volatile
 35693                           
 35694                           ; BSR set to: 0
 35695                           ;../../VLCBlib_PIC/statusLeds2.c: 174:             if (flashCounter[0] >= 50) {
 35696   005E62  0E31               	movlw	49
 35697   005E64                     L19:
 35698   005E64  65BB               	cpfsgt	_flashCounter& (0+255),b
 35699   005E66  0012               	return	
 35700   005E68  D7E6               	goto	l22046
 35701   005E6A                     l22056:
 35702                           
 35703                           ; BSR set to: 0
 35704                           ;../../VLCBlib_PIC/statusLeds2.c: 180:             (LATBbits.LATB7=flashCounter[0]/50);
 35705   005E6A  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35706   005E6E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35707   005E70  0E00               	movlw	0
 35708   005E72  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35709   005E74  0E32               	movlw	50
 35710   005E76  6F99               	movwf	___awdiv@divisor& (0+255),b
 35711   005E78  ECA3  F052         	call	___awdiv	;wreg free
 35712   005E7C  0100               	movlb	0	; () banked
 35713   005E7E  3397               	rrcf	?___awdiv& (0+255),f,b
 35714   005E80  3397               	rrcf	?___awdiv& (0+255),f,b
 35715   005E82  508A               	movf	138,w,c	;volatile
 35716   005E84  1997               	xorwf	?___awdiv& (0+255),w,b
 35717   005E86  0B7F               	andlw	-129
 35718   005E88  1997               	xorwf	?___awdiv& (0+255),w,b
 35719   005E8A  6E8A               	movwf	138,c	;volatile
 35720                           
 35721                           ; BSR set to: 0
 35722                           ;../../VLCBlib_PIC/statusLeds2.c: 181:             if (flashCounter[0] >= 100) {
 35723   005E8C  0E63               	movlw	99
 35724   005E8E  D7EA               	goto	L19
 35725   005E90                     l22062:
 35726                           
 35727                           ; BSR set to: 0
 35728                           ;../../VLCBlib_PIC/statusLeds2.c: 186:             (LATBbits.LATB7=flashCounter[0]/100);
 35729   005E90  C0BB  F097         	movff	_flashCounter,___awdiv@dividend
 35730   005E94  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 35731   005E96  0E00               	movlw	0
 35732   005E98  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 35733   005E9A  0E64               	movlw	100
 35734   005E9C  6F99               	movwf	___awdiv@divisor& (0+255),b
 35735   005E9E  ECA3  F052         	call	___awdiv	;wreg free
 35736   005EA2  0100               	movlb	0	; () banked
 35737   005EA4  3397               	rrcf	?___awdiv& (0+255),f,b
 35738   005EA6  3397               	rrcf	?___awdiv& (0+255),f,b
 35739   005EA8  508A               	movf	138,w,c	;volatile
 35740   005EAA  1997               	xorwf	?___awdiv& (0+255),w,b
 35741   005EAC  0B7F               	andlw	-129
 35742   005EAE  1997               	xorwf	?___awdiv& (0+255),w,b
 35743   005EB0  6E8A               	movwf	138,c	;volatile
 35744                           
 35745                           ; BSR set to: 0
 35746                           ;../../VLCBlib_PIC/statusLeds2.c: 187:             if (flashCounter[0] >= 200) {
 35747   005EB2  0EC7               	movlw	199
 35748   005EB4  D7D7               	goto	L19
 35749   005EB6                     l1750:
 35750                           
 35751                           ; BSR set to: 0
 35752                           ;../../VLCBlib_PIC/statusLeds2.c: 192:             (LATBbits.LATB7=1);
 35753   005EB6  8E8A               	bsf	138,7,c	;volatile
 35754                           
 35755                           ; BSR set to: 0
 35756                           ;../../VLCBlib_PIC/statusLeds2.c: 193:             if (flashCounter[0] >= 25) {
 35757   005EB8  0E18               	movlw	24
 35758   005EBA  D00F               	goto	L23
 35759   005EBC                     u23090:
 35760                           
 35761                           ; BSR set to: 0
 35762                           ;../../VLCBlib_PIC/statusLeds2.c: 194:                 flashCounter[0] = 0;
 35763   005EBC  0E00               	movlw	0
 35764   005EBE  6FBB               	movwf	_flashCounter& (0+255),b
 35765                           
 35766                           ;../../VLCBlib_PIC/statusLeds2.c: 195:                 ledState[0] = LED_OFF;
 35767   005EC0  0E00               	movlw	0
 35768   005EC2  6FBD               	movwf	_ledState& (0+255),b
 35769   005EC4  0012               	return	
 35770   005EC6                     l1752:
 35771                           
 35772                           ; BSR set to: 0
 35773                           ;../../VLCBlib_PIC/statusLeds2.c: 199:             (LATBbits.LATB7=0);
 35774   005EC6  9E8A               	bcf	138,7,c	;volatile
 35775                           
 35776                           ; BSR set to: 0
 35777                           ;../../VLCBlib_PIC/statusLeds2.c: 200:             if (flashCounter[0] >= 25) {
 35778   005EC8  0E18               	movlw	24
 35779   005ECA  D00C               	goto	L22
 35780   005ECC                     u23100:
 35781                           
 35782                           ; BSR set to: 0
 35783                           ;../../VLCBlib_PIC/statusLeds2.c: 201:                 flashCounter[0] = 0;
 35784   005ECC  0E00               	movlw	0
 35785   005ECE  6FBB               	movwf	_flashCounter& (0+255),b
 35786                           
 35787                           ;../../VLCBlib_PIC/statusLeds2.c: 202:                 ledState[0] = LED_ON;
 35788   005ED0  0E01               	movlw	1
 35789   005ED2  6FBD               	movwf	_ledState& (0+255),b
 35790   005ED4  0012               	return	
 35791   005ED6                     l1754:
 35792                           
 35793                           ; BSR set to: 0
 35794                           ;../../VLCBlib_PIC/statusLeds2.c: 206:             (LATBbits.LATB7=1);
 35795   005ED6  8E8A               	bsf	138,7,c	;volatile
 35796                           
 35797                           ; BSR set to: 0
 35798                           ;../../VLCBlib_PIC/statusLeds2.c: 207:             if (flashCounter[0] >= 50) {
 35799   005ED8  0E31               	movlw	49
 35800   005EDA                     L23:
 35801   005EDA  65BB               	cpfsgt	_flashCounter& (0+255),b
 35802   005EDC  0012               	return	
 35803   005EDE  D7EE               	goto	u23090
 35804   005EE0                     l1756:
 35805                           
 35806                           ; BSR set to: 0
 35807                           ;../../VLCBlib_PIC/statusLeds2.c: 213:             (LATBbits.LATB7=0);
 35808   005EE0  9E8A               	bcf	138,7,c	;volatile
 35809                           
 35810                           ; BSR set to: 0
 35811                           ;../../VLCBlib_PIC/statusLeds2.c: 214:             if (flashCounter[0] >= 50) {
 35812   005EE2  0E31               	movlw	49
 35813   005EE4                     L22:
 35814   005EE4  65BB               	cpfsgt	_flashCounter& (0+255),b
 35815   005EE6  0012               	return	
 35816   005EE8  D7F1               	goto	u23100
 35817   005EEA                     l1758:
 35818                           
 35819                           ; BSR set to: 0
 35820                           ;../../VLCBlib_PIC/statusLeds2.c: 220:             (LATBbits.LATB7=0);
 35821   005EEA  9E8A               	bcf	138,7,c	;volatile
 35822                           
 35823                           ; BSR set to: 0
 35824                           ;../../VLCBlib_PIC/statusLeds2.c: 221:             if (flashCounter[0] >= 100) {
 35825   005EEC  0E63               	movlw	99
 35826   005EEE  D7FA               	goto	L22
 35827   005EF0                     l22090:
 35828                           
 35829                           ; BSR set to: 0
 35830   005EF0  51BD               	movf	_ledState& (0+255),w,b
 35831   005EF2  6F9F               	movwf	??_leds_poll& (0+255),b
 35832   005EF4  6BA0               	clrf	(??_leds_poll+1)& (0+255),b
 35833                           
 35834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35835                           ; Switch size 1, requested type "simple"
 35836                           ; Number of cases is 1, Range of values is 0 to 0
 35837                           ; switch strategies available:
 35838                           ; Name         Instructions Cycles
 35839                           ; simple_byte            4     3 (average)
 35840                           ;	Chosen strategy is simple_byte
 35841   005EF6  51A0               	movf	(??_leds_poll+1)& (0+255),w,b
 35842   005EF8  0A00               	xorlw	0	; case 0
 35843   005EFA  A4D8               	btfss	status,2,c
 35844   005EFC  0012               	return	
 35845                           
 35846                           ; BSR set to: 0
 35847                           ; Switch size 1, requested type "simple"
 35848                           ; Number of cases is 10, Range of values is 0 to 9
 35849                           ; switch strategies available:
 35850                           ; Name         Instructions Cycles
 35851                           ; simple_byte           31    16 (average)
 35852                           ;	Chosen strategy is simple_byte
 35853   005EFE  519F               	movf	??_leds_poll& (0+255),w,b
 35854   005F00  0A00               	xorlw	0	; case 0
 35855   005F02  B4D8               	btfsc	status,2,c
 35856   005F04  D79B               	goto	l1743
 35857   005F06  0A01               	xorlw	1	; case 1
 35858   005F08  B4D8               	btfsc	status,2,c
 35859   005F0A  D794               	goto	l1741
 35860   005F0C  0A03               	xorlw	3	; case 2
 35861   005F0E  B4D8               	btfsc	status,2,c
 35862   005F10  D797               	goto	l22050
 35863   005F12  0A01               	xorlw	1	; case 3
 35864   005F14  B4D8               	btfsc	status,2,c
 35865   005F16  D7A9               	goto	l22056
 35866   005F18  0A07               	xorlw	7	; case 4
 35867   005F1A  B4D8               	btfsc	status,2,c
 35868   005F1C  D7B9               	goto	l22062
 35869   005F1E  0A01               	xorlw	1	; case 5
 35870   005F20  B4D8               	btfsc	status,2,c
 35871   005F22  D7D1               	goto	l1752
 35872   005F24  0A03               	xorlw	3	; case 6
 35873   005F26  B4D8               	btfsc	status,2,c
 35874   005F28  D7C6               	goto	l1750
 35875   005F2A  0A01               	xorlw	1	; case 7
 35876   005F2C  B4D8               	btfsc	status,2,c
 35877   005F2E  D7D8               	goto	l1756
 35878   005F30  0A0F               	xorlw	15	; case 8
 35879   005F32  B4D8               	btfsc	status,2,c
 35880   005F34  D7D0               	goto	l1754
 35881   005F36  0A01               	xorlw	1	; case 9
 35882   005F38  A4D8               	btfss	status,2,c
 35883   005F3A  0012               	return	
 35884   005F3C  D7D6               	goto	l1758
 35885   005F3E                     __end_of_leds_poll:
 35886                           	callstack 0
 35887                           
 35888 ;; *************** function _tickGet *****************
 35889 ;; Defined at:
 35890 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 35891 ;; Parameters:    Size  Location     Type
 35892 ;;		None
 35893 ;; Auto vars:     Size  Location     Type
 35894 ;;  currentTime     4   51[BANK0 ] struct _TickValue
 35895 ;;  IntFlag1        1   50[BANK0 ] unsigned char 
 35896 ;;  IntFlag2        1   49[BANK0 ] unsigned char 
 35897 ;; Return value:  Size  Location     Type
 35898 ;;                  4   45[BANK0 ] unsigned long 
 35899 ;; Registers used:
 35900 ;;		wreg, status,2, status,0
 35901 ;; Tracked objects:
 35902 ;;		On entry : 0/0
 35903 ;;		On exit  : 0/0
 35904 ;;		Unchanged: 0/0
 35905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35906 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35907 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35909 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35910 ;;Total ram usage:       10 bytes
 35911 ;; Hardware stack levels used: 1
 35912 ;; Hardware stack levels required when called: 12
 35913 ;; This function calls:
 35914 ;;		Nothing
 35915 ;; This function is called by:
 35916 ;;		_setup
 35917 ;;		_loop
 35918 ;;		_doWait
 35919 ;;		_initServos
 35920 ;;		_pollServos
 35921 ;;		_mnsPowerUp
 35922 ;;		_mnsPoll
 35923 ;;		_leds_powerUp
 35924 ;;		_leds_poll
 35925 ;;		_pbDownTimer
 35926 ;;		_pbUpTimer
 35927 ;;		_poll
 35928 ;;		_canPowerUp
 35929 ;;		_handleSelfEnumeration
 35930 ;;		_processEnumeration
 35931 ;; This function uses a non-reentrant model
 35932 ;;
 35933                           
 35934                           	psect	text144
 35935   00B4D6                     __ptext144:
 35936                           	callstack 0
 35937   00B4D6                     _tickGet:
 35938                           	callstack 17
 35939                           
 35940                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 35941                           
 35942                           ; BSR set to: 0
 35943                           ;incstack = 0
 35944   00B4D6  0E00               	movlw	0
 35945   00B4D8  0100               	movlb	0	; () banked
 35946   00B4DA  6F95               	movwf	(tickGet@currentTime+2)& (0+255),b
 35947                           
 35948                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 35949   00B4DC  0E00               	movlw	0
 35950   00B4DE  6F96               	movwf	(tickGet@currentTime+3)& (0+255),b
 35951                           
 35952                           ; BSR set to: 0
 35953                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 35954   00B4E0  9AF2               	bcf	242,5,c	;volatile
 35955   00B4E2                     l20244:
 35956                           
 35957                           ; BSR set to: 0
 35958                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 35959   00B4E2  0E00               	movlw	0
 35960   00B4E4  B4F2               	btfsc	242,2,c	;volatile
 35961   00B4E6  0E01               	movlw	1
 35962   00B4E8  6F92               	movwf	tickGet@IntFlag1& (0+255),b
 35963                           
 35964                           ; BSR set to: 0
 35965                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 35966   00B4EA  CFD6 F093          	movff	4054,tickGet@currentTime	;volatile
 35967                           
 35968                           ; BSR set to: 0
 35969                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 35970   00B4EE  CFD7 F094          	movff	4055,tickGet@currentTime+1	;volatile
 35971                           
 35972                           ; BSR set to: 0
 35973                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 35974   00B4F2  0E00               	movlw	0
 35975   00B4F4  B4F2               	btfsc	242,2,c	;volatile
 35976   00B4F6  0E01               	movlw	1
 35977   00B4F8  6F91               	movwf	tickGet@IntFlag2& (0+255),b
 35978                           
 35979                           ; BSR set to: 0
 35980                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 35981   00B4FA  5191               	movf	tickGet@IntFlag2& (0+255),w,b
 35982   00B4FC  1992               	xorwf	tickGet@IntFlag1& (0+255),w,b
 35983   00B4FE  A4D8               	btfss	status,2,c
 35984   00B500  D7F0               	goto	l20244
 35985                           
 35986                           ; BSR set to: 0
 35987                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 35988   00B502  5192               	movf	tickGet@IntFlag1& (0+255),w,b
 35989   00B504  B4D8               	btfsc	status,2,c
 35990   00B506  D005               	goto	l20264
 35991                           
 35992                           ; BSR set to: 0
 35993                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 35994   00B508  94F2               	bcf	242,2,c	;volatile
 35995                           
 35996                           ; BSR set to: 0
 35997                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 35998   00B50A  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 35999                           
 36000                           ; BSR set to: 0
 36001                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 36002   00B50C  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 36003   00B50E  B4D8               	btfsc	status,2,c
 36004                           
 36005                           ; BSR set to: 0
 36006                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 36007   00B510  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 36008   00B512                     l20264:
 36009                           
 36010                           ; BSR set to: 0
 36011                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 36012   00B512  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 36013   00B514  2795               	addwf	(tickGet@currentTime+2)& (0+255),f,b
 36014                           
 36015                           ; BSR set to: 0
 36016                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 36017   00B516  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 36018   00B518  2796               	addwf	(tickGet@currentTime+3)& (0+255),f,b
 36019                           
 36020                           ; BSR set to: 0
 36021                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 36022   00B51A  8AF2               	bsf	242,5,c	;volatile
 36023                           
 36024                           ; BSR set to: 0
 36025                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 36026   00B51C  C093  F08D         	movff	tickGet@currentTime,?_tickGet
 36027   00B520  C094  F08E         	movff	tickGet@currentTime+1,?_tickGet+1
 36028   00B524  C095  F08F         	movff	tickGet@currentTime+2,?_tickGet+2
 36029   00B528  C096  F090         	movff	tickGet@currentTime+3,?_tickGet+3
 36030                           
 36031                           ; BSR set to: 0
 36032   00B52C  0012               	return		;funcret
 36033   00B52E                     __end_of_tickGet:
 36034                           	callstack 0
 36035                           
 36036 ;; *************** function ___lmul *****************
 36037 ;; Defined at:
 36038 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
 36039 ;; Parameters:    Size  Location     Type
 36040 ;;  multiplier      4   49[BANK0 ] unsigned long 
 36041 ;;  multiplicand    4   53[BANK0 ] unsigned long 
 36042 ;; Auto vars:     Size  Location     Type
 36043 ;;  product         4   57[BANK0 ] unsigned long 
 36044 ;; Return value:  Size  Location     Type
 36045 ;;                  4   49[BANK0 ] unsigned long 
 36046 ;; Registers used:
 36047 ;;		wreg, status,2, status,0
 36048 ;; Tracked objects:
 36049 ;;		On entry : 0/0
 36050 ;;		On exit  : 0/0
 36051 ;;		Unchanged: 0/0
 36052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36053 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36054 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36056 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36057 ;;Total ram usage:       12 bytes
 36058 ;; Hardware stack levels used: 1
 36059 ;; Hardware stack levels required when called: 12
 36060 ;; This function calls:
 36061 ;;		Nothing
 36062 ;; This function is called by:
 36063 ;;		_loop
 36064 ;;		_doWait
 36065 ;;		_pbDownTimer
 36066 ;;		_pbUpTimer
 36067 ;;		_poll
 36068 ;; This function uses a non-reentrant model
 36069 ;;
 36070                           
 36071                           	psect	text145
 36072   00B52E                     __ptext145:
 36073                           	callstack 0
 36074   00B52E                     ___lmul:
 36075                           	callstack 17
 36076                           
 36077                           ; BSR set to: 0
 36078                           ;incstack = 0
 36079   00B52E  0E00               	movlw	0
 36080   00B530  0100               	movlb	0	; () banked
 36081   00B532  6F99               	movwf	___lmul@product& (0+255),b
 36082   00B534  0E00               	movlw	0
 36083   00B536  6F9A               	movwf	(___lmul@product+1)& (0+255),b
 36084   00B538  0E00               	movlw	0
 36085   00B53A  6F9B               	movwf	(___lmul@product+2)& (0+255),b
 36086   00B53C  0E00               	movlw	0
 36087   00B53E  6F9C               	movwf	(___lmul@product+3)& (0+255),b
 36088   00B540                     l21164:
 36089                           
 36090                           ; BSR set to: 0
 36091   00B540  A191               	btfss	___lmul@multiplier& (0+255),0,b
 36092   00B542  D008               	goto	l21168
 36093                           
 36094                           ; BSR set to: 0
 36095   00B544  5195               	movf	___lmul@multiplicand& (0+255),w,b
 36096   00B546  2799               	addwf	___lmul@product& (0+255),f,b
 36097   00B548  5196               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 36098   00B54A  239A               	addwfc	(___lmul@product+1)& (0+255),f,b
 36099   00B54C  5197               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 36100   00B54E  239B               	addwfc	(___lmul@product+2)& (0+255),f,b
 36101   00B550  5198               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 36102   00B552  239C               	addwfc	(___lmul@product+3)& (0+255),f,b
 36103   00B554                     l21168:
 36104                           
 36105                           ; BSR set to: 0
 36106   00B554  90D8               	bcf	status,0,c
 36107   00B556  3795               	rlcf	___lmul@multiplicand& (0+255),f,b
 36108   00B558  3796               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 36109   00B55A  3797               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 36110   00B55C  3798               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 36111                           
 36112                           ; BSR set to: 0
 36113   00B55E  90D8               	bcf	status,0,c
 36114   00B560  3394               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 36115   00B562  3393               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 36116   00B564  3392               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 36117   00B566  3391               	rrcf	___lmul@multiplier& (0+255),f,b
 36118   00B568  5191               	movf	___lmul@multiplier& (0+255),w,b
 36119   00B56A  1192               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 36120   00B56C  1193               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 36121   00B56E  1194               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 36122   00B570  A4D8               	btfss	status,2,c
 36123   00B572  D7E6               	goto	l21164
 36124                           
 36125                           ; BSR set to: 0
 36126   00B574  C099  F091         	movff	___lmul@product,?___lmul
 36127   00B578  C09A  F092         	movff	___lmul@product+1,?___lmul+1
 36128   00B57C  C09B  F093         	movff	___lmul@product+2,?___lmul+2
 36129   00B580  C09C  F094         	movff	___lmul@product+3,?___lmul+3
 36130                           
 36131                           ; BSR set to: 0
 36132   00B584  0012               	return		;funcret
 36133   00B586                     __end_of___lmul:
 36134                           	callstack 0
 36135                           
 36136 ;; *************** function ___lldiv *****************
 36137 ;; Defined at:
 36138 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
 36139 ;; Parameters:    Size  Location     Type
 36140 ;;  dividend        4   55[BANK0 ] unsigned long 
 36141 ;;  divisor         4   59[BANK0 ] unsigned long 
 36142 ;; Auto vars:     Size  Location     Type
 36143 ;;  quotient        4   63[BANK0 ] unsigned long 
 36144 ;;  counter         1   67[BANK0 ] unsigned char 
 36145 ;; Return value:  Size  Location     Type
 36146 ;;                  4   55[BANK0 ] unsigned long 
 36147 ;; Registers used:
 36148 ;;		wreg, status,2, status,0
 36149 ;; Tracked objects:
 36150 ;;		On entry : 0/0
 36151 ;;		On exit  : 0/0
 36152 ;;		Unchanged: 0/0
 36153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36154 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36155 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36157 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36158 ;;Total ram usage:       13 bytes
 36159 ;; Hardware stack levels used: 1
 36160 ;; Hardware stack levels required when called: 12
 36161 ;; This function calls:
 36162 ;;		Nothing
 36163 ;; This function is called by:
 36164 ;;		_pbDownTimer
 36165 ;;		_pbUpTimer
 36166 ;; This function uses a non-reentrant model
 36167 ;;
 36168                           
 36169                           	psect	text146
 36170   00A652                     __ptext146:
 36171                           	callstack 0
 36172   00A652                     ___lldiv:
 36173                           	callstack 16
 36174                           
 36175                           ; BSR set to: 0
 36176                           ;incstack = 0
 36177   00A652  0E00               	movlw	0
 36178   00A654  0100               	movlb	0	; () banked
 36179   00A656  6F9F               	movwf	___lldiv@quotient& (0+255),b
 36180   00A658  0E00               	movlw	0
 36181   00A65A  6FA0               	movwf	(___lldiv@quotient+1)& (0+255),b
 36182   00A65C  0E00               	movlw	0
 36183   00A65E  6FA1               	movwf	(___lldiv@quotient+2)& (0+255),b
 36184   00A660  0E00               	movlw	0
 36185   00A662  6FA2               	movwf	(___lldiv@quotient+3)& (0+255),b
 36186                           
 36187                           ; BSR set to: 0
 36188   00A664  519B               	movf	___lldiv@divisor& (0+255),w,b
 36189   00A666  119C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 36190   00A668  119D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 36191   00A66A  119E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 36192   00A66C  B4D8               	btfsc	status,2,c
 36193   00A66E  D02A               	goto	l3096
 36194                           
 36195                           ; BSR set to: 0
 36196   00A670  0E01               	movlw	1
 36197   00A672  6FA3               	movwf	___lldiv@counter& (0+255),b
 36198   00A674  D006               	goto	l15410
 36199   00A676                     l15408:
 36200                           
 36201                           ; BSR set to: 0
 36202   00A676  90D8               	bcf	status,0,c
 36203   00A678  379B               	rlcf	___lldiv@divisor& (0+255),f,b
 36204   00A67A  379C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 36205   00A67C  379D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 36206   00A67E  379E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 36207   00A680  2BA3               	incf	___lldiv@counter& (0+255),f,b
 36208   00A682                     l15410:
 36209                           
 36210                           ; BSR set to: 0
 36211   00A682  AF9E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 36212   00A684  D7F8               	goto	l15408
 36213   00A686                     u14910:
 36214                           
 36215                           ; BSR set to: 0
 36216   00A686  90D8               	bcf	status,0,c
 36217   00A688  379F               	rlcf	___lldiv@quotient& (0+255),f,b
 36218   00A68A  37A0               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 36219   00A68C  37A1               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 36220   00A68E  37A2               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 36221                           
 36222                           ; BSR set to: 0
 36223   00A690  519B               	movf	___lldiv@divisor& (0+255),w,b
 36224   00A692  5D97               	subwf	___lldiv@dividend& (0+255),w,b
 36225   00A694  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36226   00A696  5998               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 36227   00A698  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36228   00A69A  5999               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 36229   00A69C  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36230   00A69E  599A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 36231   00A6A0  A0D8               	btfss	status,0,c
 36232   00A6A2  D009               	goto	l15420
 36233                           
 36234                           ; BSR set to: 0
 36235   00A6A4  519B               	movf	___lldiv@divisor& (0+255),w,b
 36236   00A6A6  5F97               	subwf	___lldiv@dividend& (0+255),f,b
 36237   00A6A8  519C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 36238   00A6AA  5B98               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 36239   00A6AC  519D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 36240   00A6AE  5B99               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 36241   00A6B0  519E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 36242   00A6B2  5B9A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 36243                           
 36244                           ; BSR set to: 0
 36245   00A6B4  819F               	bsf	___lldiv@quotient& (0+255),0,b
 36246   00A6B6                     l15420:
 36247                           
 36248                           ; BSR set to: 0
 36249   00A6B6  90D8               	bcf	status,0,c
 36250   00A6B8  339E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 36251   00A6BA  339D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 36252   00A6BC  339C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 36253   00A6BE  339B               	rrcf	___lldiv@divisor& (0+255),f,b
 36254                           
 36255                           ; BSR set to: 0
 36256   00A6C0  2FA3               	decfsz	___lldiv@counter& (0+255),f,b
 36257   00A6C2  D7E1               	goto	u14910
 36258   00A6C4                     l3096:
 36259                           
 36260                           ; BSR set to: 0
 36261   00A6C4  C09F  F097         	movff	___lldiv@quotient,?___lldiv
 36262   00A6C8  C0A0  F098         	movff	___lldiv@quotient+1,?___lldiv+1
 36263   00A6CC  C0A1  F099         	movff	___lldiv@quotient+2,?___lldiv+2
 36264   00A6D0  C0A2  F09A         	movff	___lldiv@quotient+3,?___lldiv+3
 36265                           
 36266                           ; BSR set to: 0
 36267   00A6D4  0012               	return		;funcret
 36268   00A6D6                     __end_of___lldiv:
 36269                           	callstack 0
 36270                           
 36271 ;; *************** function _factoryReset *****************
 36272 ;; Defined at:
 36273 ;;		line 856 in file "../../VLCBlib_PIC/vlcb.c"
 36274 ;; Parameters:    Size  Location     Type
 36275 ;;		None
 36276 ;; Auto vars:     Size  Location     Type
 36277 ;;  i               1   56[BANK1 ] unsigned char 
 36278 ;; Return value:  Size  Location     Type
 36279 ;;                  1    wreg      void 
 36280 ;; Registers used:
 36281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36282 ;; Tracked objects:
 36283 ;;		On entry : 0/0
 36284 ;;		On exit  : 0/0
 36285 ;;		Unchanged: 0/0
 36286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36288 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36289 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36290 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36291 ;;Total ram usage:        5 bytes
 36292 ;; Hardware stack levels used: 1
 36293 ;; Hardware stack levels required when called: 26
 36294 ;; This function calls:
 36295 ;;		NULL
 36296 ;;		_APP_factoryReset
 36297 ;;		_canFactoryReset
 36298 ;;		_mnsFactoryReset
 36299 ;;		_nvFactoryReset
 36300 ;;		_teachFactoryReset
 36301 ;;		_writeNVM
 36302 ;; This function is called by:
 36303 ;;		_mnsProcessMessage
 36304 ;;		_checkPowerOnPb
 36305 ;;		_main
 36306 ;; This function uses a non-reentrant model
 36307 ;;
 36308                           
 36309                           	psect	text147
 36310   008538                     __ptext147:
 36311                           	callstack 0
 36312   008538                     _factoryReset:
 36313                           	callstack 2
 36314                           
 36315                           ;../../VLCBlib_PIC/vlcb.c: 857:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 859:     for (i
      +                          =0; i<9; i++) {
 36316                           
 36317                           ; BSR set to: 0
 36318                           ;incstack = 0
 36319   008538  0E00               	movlw	0
 36320   00853A  0101               	movlb	1	; () banked
 36321   00853C  6FF2               	movwf	factoryReset@i& (0+255),b
 36322   00853E                     l21878:
 36323                           
 36324                           ; BSR set to: 1
 36325                           ;../../VLCBlib_PIC/vlcb.c: 860:         if ((services[i] != ((void*)0)) && (services[i]-
      +                          >factoryReset != ((void*)0))) {
 36326   00853E  51F2               	movf	factoryReset@i& (0+255),w,b
 36327   008540  0D02               	mullw	2
 36328   008542  0E75               	movlw	low _services
 36329   008544  24F3               	addwf	243,w,c
 36330   008546  6EF6               	movwf	tblptrl,c
 36331   008548  0EEE               	movlw	high _services
 36332   00854A  20F4               	addwfc	244,w,c
 36333   00854C  6EF7               	movwf	tblptrh,c
 36334   00854E                     	if	1	;There are 3 active tblptr bytes
 36335   00854E  6AF8               	clrf	tblptru,c
 36336   008550  0E00               	movlw	low (__mediumconst shr (0+16))
 36337   008552  22F8               	addwfc	tblptru,f,c
 36338   008554                     	endif
 36339   008554  0009               	tblrd		*+
 36340   008556  50F5               	movf	tablat,w,c
 36341   008558  0009               	tblrd		*+
 36342   00855A  10F5               	iorwf	tablat,w,c
 36343   00855C  B4D8               	btfsc	status,2,c
 36344   00855E  D04B               	goto	u22869
 36345                           
 36346                           ; BSR set to: 1
 36347   008560  51F2               	movf	factoryReset@i& (0+255),w,b
 36348   008562  0D02               	mullw	2
 36349   008564  0E75               	movlw	low _services
 36350   008566  24F3               	addwf	243,w,c
 36351   008568  6EF6               	movwf	tblptrl,c
 36352   00856A  0EEE               	movlw	high _services
 36353   00856C  20F4               	addwfc	244,w,c
 36354   00856E  6EF7               	movwf	tblptrh,c
 36355   008570                     	if	1	;There are 3 active tblptr bytes
 36356   008570  6AF8               	clrf	tblptru,c
 36357   008572  0E00               	movlw	low (__mediumconst shr (0+16))
 36358   008574  22F8               	addwfc	tblptru,f,c
 36359   008576                     	endif
 36360   008576  0009               	tblrd		*+
 36361   008578  CFF5 F1EE          	movff	tablat,??_factoryReset
 36362   00857C  0009               	tblrd		*+
 36363   00857E  CFF5 F1EF          	movff	tablat,??_factoryReset+1
 36364   008582  0E02               	movlw	2
 36365   008584  27EE               	addwf	??_factoryReset& (0+255),f,b
 36366   008586  0E00               	movlw	0
 36367   008588  23EF               	addwfc	(??_factoryReset+1)& (0+255),f,b
 36368   00858A  C1EE  FFF6         	movff	??_factoryReset,tblptrl
 36369   00858E  C1EF  FFF7         	movff	??_factoryReset+1,tblptrh
 36370   008592                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36371   008592  6AF8               	clrf	tblptru,c
 36372   008594                     	endif
 36373   008594                     	if	0	;tblptru may be non-zero
 36374   008594                     	endif
 36375   008594  0009               	tblrd		*+
 36376   008596  50F5               	movf	tablat,w,c
 36377   008598  0009               	tblrd		*+
 36378   00859A  10F5               	iorwf	tablat,w,c
 36379   00859C  B4D8               	btfsc	status,2,c
 36380   00859E  D02B               	goto	u22869
 36381                           
 36382                           ; BSR set to: 1
 36383                           ;../../VLCBlib_PIC/vlcb.c: 861:             services[i]->factoryReset();
 36384   0085A0  51F2               	movf	factoryReset@i& (0+255),w,b
 36385   0085A2  0D02               	mullw	2
 36386   0085A4  0E75               	movlw	low _services
 36387   0085A6  24F3               	addwf	243,w,c
 36388   0085A8  6EF6               	movwf	tblptrl,c
 36389   0085AA  0EEE               	movlw	high _services
 36390   0085AC  20F4               	addwfc	244,w,c
 36391   0085AE  6EF7               	movwf	tblptrh,c
 36392   0085B0                     	if	1	;There are 3 active tblptr bytes
 36393   0085B0  6AF8               	clrf	tblptru,c
 36394   0085B2  0E00               	movlw	low (__mediumconst shr (0+16))
 36395   0085B4  22F8               	addwfc	tblptru,f,c
 36396   0085B6                     	endif
 36397   0085B6  0009               	tblrd		*+
 36398   0085B8  CFF5 F1EE          	movff	tablat,??_factoryReset
 36399   0085BC  0009               	tblrd		*+
 36400   0085BE  CFF5 F1EF          	movff	tablat,??_factoryReset+1
 36401   0085C2  0E02               	movlw	2
 36402   0085C4  27EE               	addwf	??_factoryReset& (0+255),f,b
 36403   0085C6  0E00               	movlw	0
 36404   0085C8  23EF               	addwfc	(??_factoryReset+1)& (0+255),f,b
 36405   0085CA  C1EE  FFF6         	movff	??_factoryReset,tblptrl
 36406   0085CE  C1EF  FFF7         	movff	??_factoryReset+1,tblptrh
 36407   0085D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 36408   0085D2  6AF8               	clrf	tblptru,c
 36409   0085D4                     	endif
 36410   0085D4                     	if	0	;tblptru may be non-zero
 36411   0085D4                     	endif
 36412   0085D4  0009               	tblrd		*+
 36413   0085D6  CFF5 F1F0          	movff	tablat,??_factoryReset+2
 36414   0085DA  0009               	tblrd		*+
 36415   0085DC  CFF5 F1F1          	movff	tablat,??_factoryReset+3
 36416   0085E0  D801               	call	u22868
 36417   0085E2  D009               	goto	u22869
 36418   0085E4                     u22868:
 36419   0085E4  0005               	push	
 36420   0085E6  6EFA               	movwf	pclath,c
 36421   0085E8  51F0               	movf	(??_factoryReset+2)& (0+255),w,b
 36422   0085EA  6EFD               	movwf	tosl,c
 36423   0085EC  51F1               	movf	(??_factoryReset+3)& (0+255),w,b
 36424   0085EE  6EFE               	movwf	tosh,c
 36425   0085F0  6AFF               	clrf	tosu,c
 36426   0085F2  50FA               	movf	pclath,w,c
 36427   0085F4  0012               	return		;indir
 36428   0085F6                     u22869:
 36429                           
 36430                           ;../../VLCBlib_PIC/vlcb.c: 863:     }
 36431   0085F6  0101               	movlb	1	; () banked
 36432   0085F8  2BF2               	incf	factoryReset@i& (0+255),f,b
 36433                           
 36434                           ; BSR set to: 1
 36435   0085FA  0E08               	movlw	8
 36436   0085FC  65F2               	cpfsgt	factoryReset@i& (0+255),b
 36437   0085FE  D79F               	goto	l21878
 36438                           
 36439                           ; BSR set to: 1
 36440                           ;../../VLCBlib_PIC/vlcb.c: 865:     writeNVM(EEPROM_NVM_TYPE, 0x3FA, 1);
 36441   008600  0EFA               	movlw	250
 36442   008602  0100               	movlb	0	; () banked
 36443   008604  6FA4               	movwf	writeNVM@index& (0+255),b
 36444   008606  0E03               	movlw	3
 36445   008608  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36446   00860A  0E00               	movlw	0
 36447   00860C  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36448   00860E  0E01               	movlw	1
 36449   008610  6FA7               	movwf	writeNVM@value& (0+255),b
 36450   008612  0E00               	movlw	0
 36451   008614  ECE7  F05B         	call	_writeNVM
 36452                           
 36453                           ;../../VLCBlib_PIC/vlcb.c: 867:     APP_factoryReset();
 36454   008618  EC34  F061         	call	_APP_factoryReset	;wreg free
 36455   00861C  0012               	return		;funcret
 36456   00861E                     __end_of_factoryReset:
 36457                           	callstack 0
 36458                           
 36459 ;; *************** function _canFactoryReset *****************
 36460 ;; Defined at:
 36461 ;;		line 204 in file "../../VLCBlib_PIC/can18_ecan.c"
 36462 ;; Parameters:    Size  Location     Type
 36463 ;;		None
 36464 ;; Auto vars:     Size  Location     Type
 36465 ;;		None
 36466 ;; Return value:  Size  Location     Type
 36467 ;;                  1    wreg      void 
 36468 ;; Registers used:
 36469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36470 ;; Tracked objects:
 36471 ;;		On entry : 0/0
 36472 ;;		On exit  : 0/0
 36473 ;;		Unchanged: 0/0
 36474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36479 ;;Total ram usage:        0 bytes
 36480 ;; Hardware stack levels used: 1
 36481 ;; Hardware stack levels required when called: 18
 36482 ;; This function calls:
 36483 ;;		_writeNVM
 36484 ;; This function is called by:
 36485 ;;		_factoryReset
 36486 ;; This function uses a non-reentrant model
 36487 ;;
 36488                           
 36489                           	psect	text148
 36490   00C372                     __ptext148:
 36491                           	callstack 0
 36492   00C372                     _canFactoryReset:
 36493                           	callstack 9
 36494                           
 36495                           ;../../VLCBlib_PIC/can18_ecan.c: 205:     canId = 0;
 36496                           
 36497                           ;incstack = 0
 36498   00C372  0E00               	movlw	0
 36499   00C374  0100               	movlb	0	; () banked
 36500   00C376  6FC3               	movwf	_canId& (0+255),b
 36501                           
 36502                           ; BSR set to: 0
 36503                           ;../../VLCBlib_PIC/can18_ecan.c: 206:     writeNVM(EEPROM_NVM_TYPE, 0x3FE, canId);
 36504   00C378  0EFE               	movlw	254
 36505   00C37A  6FA4               	movwf	writeNVM@index& (0+255),b
 36506   00C37C  0E03               	movlw	3
 36507   00C37E  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36508   00C380  0E00               	movlw	0
 36509   00C382  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36510   00C384  C0C3  F0A7         	movff	_canId,writeNVM@value
 36511   00C388  0E00               	movlw	0
 36512   00C38A  ECE7  F05B         	call	_writeNVM
 36513   00C38E  0012               	return		;funcret
 36514   00C390                     __end_of_canFactoryReset:
 36515                           	callstack 0
 36516                           
 36517 ;; *************** function _nvFactoryReset *****************
 36518 ;; Defined at:
 36519 ;;		line 126 in file "../../VLCBlib_PIC/nv.c"
 36520 ;; Parameters:    Size  Location     Type
 36521 ;;		None
 36522 ;; Auto vars:     Size  Location     Type
 36523 ;;  i               1    4[BANK1 ] unsigned char 
 36524 ;; Return value:  Size  Location     Type
 36525 ;;                  1    wreg      void 
 36526 ;; Registers used:
 36527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36528 ;; Tracked objects:
 36529 ;;		On entry : 0/0
 36530 ;;		On exit  : 0/0
 36531 ;;		Unchanged: 0/0
 36532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36534 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36535 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36536 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36537 ;;Total ram usage:        3 bytes
 36538 ;; Hardware stack levels used: 1
 36539 ;; Hardware stack levels required when called: 18
 36540 ;; This function calls:
 36541 ;;		_APP_nvDefault
 36542 ;;		_writeNVM
 36543 ;; This function is called by:
 36544 ;;		_factoryReset
 36545 ;; This function uses a non-reentrant model
 36546 ;;
 36547                           
 36548                           	psect	text149
 36549   00BBF0                     __ptext149:
 36550                           	callstack 0
 36551   00BBF0                     _nvFactoryReset:
 36552                           	callstack 9
 36553                           
 36554                           ;../../VLCBlib_PIC/nv.c: 127:     uint8_t i;;../../VLCBlib_PIC/nv.c: 128:     for (i=1; 
      +                          i<= (15+7*16); i++) {
 36555                           
 36556                           ;incstack = 0
 36557   00BBF0  0E01               	movlw	1
 36558   00BBF2  0101               	movlb	1	; () banked
 36559   00BBF4  6FBE               	movwf	nvFactoryReset@i& (0+255),b
 36560   00BBF6                     l20960:
 36561                           
 36562                           ; BSR set to: 1
 36563                           ;../../VLCBlib_PIC/nv.c: 129:         writeNVM(FLASH_NVM_TYPE, 0xFF80 +i, APP_nvDefault(
      +                          i));
 36564   00BBF6  0E80               	movlw	128
 36565   00BBF8  25BE               	addwf	nvFactoryReset@i& (0+255),w,b
 36566   00BBFA  6FBC               	movwf	??_nvFactoryReset& (0+255),b
 36567   00BBFC  6BBD               	clrf	(??_nvFactoryReset+1)& (0+255),b
 36568   00BBFE  0EFF               	movlw	255
 36569   00BC00  23BD               	addwfc	(??_nvFactoryReset+1)& (0+255),f,b
 36570   00BC02  C1BC  F0A4         	movff	??_nvFactoryReset,writeNVM@index
 36571   00BC06  C1BD  F0A5         	movff	??_nvFactoryReset+1,writeNVM@index+1
 36572   00BC0A  0100               	movlb	0	; () banked
 36573   00BC0C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36574   00BC0E  0101               	movlb	1	; () banked
 36575   00BC10  51BE               	movf	nvFactoryReset@i& (0+255),w,b
 36576   00BC12  EC14  F046         	call	_APP_nvDefault
 36577   00BC16  0100               	movlb	0	; () banked
 36578   00BC18  6FA7               	movwf	writeNVM@value& (0+255),b
 36579   00BC1A  0E01               	movlw	1
 36580   00BC1C  ECE7  F05B         	call	_writeNVM
 36581                           
 36582                           ;../../VLCBlib_PIC/nv.c: 130:     }
 36583   00BC20  0101               	movlb	1	; () banked
 36584   00BC22  2BBE               	incf	nvFactoryReset@i& (0+255),f,b
 36585                           
 36586                           ; BSR set to: 1
 36587   00BC24  0E7F               	movlw	127
 36588   00BC26  65BE               	cpfsgt	nvFactoryReset@i& (0+255),b
 36589   00BC28  D7E6               	goto	l20960
 36590   00BC2A  0012               	return	
 36591   00BC2C                     __end_of_nvFactoryReset:
 36592                           	callstack 0
 36593                           
 36594 ;; *************** function _mnsFactoryReset *****************
 36595 ;; Defined at:
 36596 ;;		line 276 in file "../../VLCBlib_PIC/mns.c"
 36597 ;; Parameters:    Size  Location     Type
 36598 ;;		None
 36599 ;; Auto vars:     Size  Location     Type
 36600 ;;		None
 36601 ;; Return value:  Size  Location     Type
 36602 ;;                  1    wreg      void 
 36603 ;; Registers used:
 36604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36605 ;; Tracked objects:
 36606 ;;		On entry : 0/0
 36607 ;;		On exit  : 0/0
 36608 ;;		Unchanged: 0/0
 36609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36614 ;;Total ram usage:        0 bytes
 36615 ;; Hardware stack levels used: 1
 36616 ;; Hardware stack levels required when called: 18
 36617 ;; This function calls:
 36618 ;;		_writeNVM
 36619 ;; This function is called by:
 36620 ;;		_factoryReset
 36621 ;; This function uses a non-reentrant model
 36622 ;;
 36623                           
 36624                           	psect	text150
 36625   00AABE                     __ptext150:
 36626                           	callstack 0
 36627   00AABE                     _mnsFactoryReset:
 36628                           	callstack 9
 36629                           
 36630                           ;../../VLCBlib_PIC/mns.c: 277:     nn.bytes.hi = 0;
 36631                           
 36632                           ; BSR set to: 1
 36633                           ;incstack = 0
 36634   00AABE  0E00               	movlw	0
 36635   00AAC0  0100               	movlb	0	; () banked
 36636   00AAC2  6FC0               	movwf	(_nn+1)& (0+255),b
 36637                           
 36638                           ;../../VLCBlib_PIC/mns.c: 278:     nn.bytes.lo = 0;
 36639   00AAC4  0E00               	movlw	0
 36640   00AAC6  6FBF               	movwf	_nn& (0+255),b
 36641                           
 36642                           ; BSR set to: 0
 36643                           ;../../VLCBlib_PIC/mns.c: 279:     writeNVM(EEPROM_NVM_TYPE, 0x3FC, nn.bytes.hi);
 36644   00AAC8  0EFC               	movlw	252
 36645   00AACA  6FA4               	movwf	writeNVM@index& (0+255),b
 36646   00AACC  0E03               	movlw	3
 36647   00AACE  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36648   00AAD0  0E00               	movlw	0
 36649   00AAD2  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36650   00AAD4  C0C0  F0A7         	movff	_nn+1,writeNVM@value
 36651   00AAD8  0E00               	movlw	0
 36652   00AADA  ECE7  F05B         	call	_writeNVM
 36653                           
 36654                           ;../../VLCBlib_PIC/mns.c: 280:     writeNVM(EEPROM_NVM_TYPE, 0x3FC +1, nn.bytes.lo);
 36655   00AADE  0EFD               	movlw	253
 36656   00AAE0  0100               	movlb	0	; () banked
 36657   00AAE2  6FA4               	movwf	writeNVM@index& (0+255),b
 36658   00AAE4  0E03               	movlw	3
 36659   00AAE6  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36660   00AAE8  0E00               	movlw	0
 36661   00AAEA  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36662   00AAEC  C0BF  F0A7         	movff	_nn,writeNVM@value
 36663   00AAF0  0E00               	movlw	0
 36664   00AAF2  ECE7  F05B         	call	_writeNVM
 36665                           
 36666                           ;../../VLCBlib_PIC/mns.c: 282:     last_mode_state = mode_state = MODE_UNINITIALISED;
 36667   00AAF6  0100               	movlb	0	; () banked
 36668   00AAF8  69C8               	setf	_mode_state& (0+255),b
 36669   00AAFA  69C7               	setf	_last_mode_state& (0+255),b
 36670                           
 36671                           ; BSR set to: 0
 36672                           ;../../VLCBlib_PIC/mns.c: 283:     writeNVM(EEPROM_NVM_TYPE, 0x3FB, mode_state);
 36673   00AAFC  0EFB               	movlw	251
 36674   00AAFE  6FA4               	movwf	writeNVM@index& (0+255),b
 36675   00AB00  0E03               	movlw	3
 36676   00AB02  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36677   00AB04  0E00               	movlw	0
 36678   00AB06  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36679   00AB08  C0C8  F0A7         	movff	_mode_state,writeNVM@value
 36680   00AB0C  0E00               	movlw	0
 36681   00AB0E  ECE7  F05B         	call	_writeNVM
 36682                           
 36683                           ;../../VLCBlib_PIC/mns.c: 286:     last_mode_flags = mode_flags = 0;
 36684   00AB12  0E00               	movlw	0
 36685   00AB14  0101               	movlb	1	; () banked
 36686   00AB16  6F66               	movwf	_mode_flags& (0+255),b
 36687   00AB18  C166  F046         	movff	_mode_flags,_last_mode_flags
 36688                           
 36689                           ;../../VLCBlib_PIC/mns.c: 287:     writeNVM(EEPROM_NVM_TYPE, 0x3F9, mode_flags);
 36690   00AB1C  0EF9               	movlw	249
 36691   00AB1E  0100               	movlb	0	; () banked
 36692   00AB20  6FA4               	movwf	writeNVM@index& (0+255),b
 36693   00AB22  0E03               	movlw	3
 36694   00AB24  6FA5               	movwf	(writeNVM@index+1)& (0+255),b
 36695   00AB26  0E00               	movlw	0
 36696   00AB28  6FA6               	movwf	(writeNVM@index+2)& (0+255),b
 36697   00AB2A  C166  F0A7         	movff	_mode_flags,writeNVM@value
 36698   00AB2E  0E00               	movlw	0
 36699   00AB30  ECE7  F05B         	call	_writeNVM
 36700   00AB34  0012               	return		;funcret
 36701   00AB36                     __end_of_mnsFactoryReset:
 36702                           	callstack 0
 36703                           
 36704 ;; *************** function _teachFactoryReset *****************
 36705 ;; Defined at:
 36706 ;;		line 352 in file "../../VLCBlib_PIC/event_teach_large.c"
 36707 ;; Parameters:    Size  Location     Type
 36708 ;;		None
 36709 ;; Auto vars:     Size  Location     Type
 36710 ;;		None
 36711 ;; Return value:  Size  Location     Type
 36712 ;;                  1    wreg      void 
 36713 ;; Registers used:
 36714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36715 ;; Tracked objects:
 36716 ;;		On entry : 0/0
 36717 ;;		On exit  : 0/0
 36718 ;;		Unchanged: 0/0
 36719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36724 ;;Total ram usage:        0 bytes
 36725 ;; Hardware stack levels used: 1
 36726 ;; Hardware stack levels required when called: 19
 36727 ;; This function calls:
 36728 ;;		_clearAllEvents
 36729 ;; This function is called by:
 36730 ;;		_factoryReset
 36731 ;; This function uses a non-reentrant model
 36732 ;;
 36733                           
 36734                           	psect	text151
 36735   00C52E                     __ptext151:
 36736                           	callstack 0
 36737   00C52E                     _teachFactoryReset:
 36738                           	callstack 8
 36739                           
 36740                           ;../../VLCBlib_PIC/event_teach_large.c: 353:     clearAllEvents();
 36741                           
 36742                           ;incstack = 0
 36743   00C52E  EC1A  F05B         	call	_clearAllEvents	;wreg free
 36744   00C532  0012               	return		;funcret
 36745   00C534                     __end_of_teachFactoryReset:
 36746                           	callstack 0
 36747                           
 36748 ;; *************** function _clearAllEvents *****************
 36749 ;; Defined at:
 36750 ;;		line 558 in file "../../VLCBlib_PIC/event_teach_large.c"
 36751 ;; Parameters:    Size  Location     Type
 36752 ;;		None
 36753 ;; Auto vars:     Size  Location     Type
 36754 ;;  tableIndex      1   13[BANK1 ] unsigned char 
 36755 ;; Return value:  Size  Location     Type
 36756 ;;                  1    wreg      void 
 36757 ;; Registers used:
 36758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36759 ;; Tracked objects:
 36760 ;;		On entry : 0/0
 36761 ;;		On exit  : 0/0
 36762 ;;		Unchanged: 0/0
 36763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36765 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36766 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36767 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36768 ;;Total ram usage:        5 bytes
 36769 ;; Hardware stack levels used: 1
 36770 ;; Hardware stack levels required when called: 18
 36771 ;; This function calls:
 36772 ;;		_flushFlashBlock
 36773 ;;		_rebuildHashtable
 36774 ;;		_writeNVM
 36775 ;; This function is called by:
 36776 ;;		_teachFactoryReset
 36777 ;;		_doNnclr
 36778 ;; This function uses a non-reentrant model
 36779 ;;
 36780                           
 36781                           	psect	text152
 36782   00B634                     __ptext152:
 36783                           	callstack 0
 36784   00B634                     _clearAllEvents:
 36785                           	callstack 9
 36786                           
 36787                           ;../../VLCBlib_PIC/event_teach_large.c: 559:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 560:     for (tableIndex=0; tableIndex<255; tableIndex++) {
 36788                           
 36789                           ;incstack = 0
 36790   00B634  0E00               	movlw	0
 36791   00B636  0101               	movlb	1	; () banked
 36792   00B638  6FC7               	movwf	clearAllEvents@tableIndex& (0+255),b
 36793   00B63A                     l20126:
 36794                           
 36795                           ; BSR set to: 1
 36796                           ;../../VLCBlib_PIC/event_teach_large.c: 562:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex + 0, 0xff);
 36797   00B63A  51C7               	movf	clearAllEvents@tableIndex& (0+255),w,b
 36798   00B63C  6FC3               	movwf	??_clearAllEvents& (0+255),b
 36799   00B63E  6BC4               	clrf	(??_clearAllEvents+1)& (0+255),b
 36800   00B640  3BC3               	swapf	??_clearAllEvents& (0+255),f,b
 36801   00B642  3BC4               	swapf	(??_clearAllEvents+1)& (0+255),f,b
 36802   00B644  0EF0               	movlw	240
 36803   00B646  17C4               	andwf	(??_clearAllEvents+1)& (0+255),f,b
 36804   00B648  51C3               	movf	??_clearAllEvents& (0+255),w,b
 36805   00B64A  0B0F               	andlw	15
 36806   00B64C  13C4               	iorwf	(??_clearAllEvents+1)& (0+255),f,b
 36807   00B64E  0EF0               	movlw	240
 36808   00B650  17C3               	andwf	??_clearAllEvents& (0+255),f,b
 36809   00B652  0E80               	movlw	128
 36810   00B654  25C3               	addwf	??_clearAllEvents& (0+255),w,b
 36811   00B656  6FC5               	movwf	(??_clearAllEvents+2)& (0+255),b
 36812   00B658  0EEF               	movlw	239
 36813   00B65A  21C4               	addwfc	(??_clearAllEvents+1)& (0+255),w,b
 36814   00B65C  6FC6               	movwf	(??_clearAllEvents+3)& (0+255),b
 36815   00B65E  C1C5  F0A4         	movff	??_clearAllEvents+2,writeNVM@index
 36816   00B662  C1C6  F0A5         	movff	??_clearAllEvents+3,writeNVM@index+1
 36817   00B666  0100               	movlb	0	; () banked
 36818   00B668  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 36819   00B66A  0EFF               	movlw	255
 36820   00B66C  6FA7               	movwf	writeNVM@value& (0+255),b
 36821   00B66E  0E01               	movlw	1
 36822   00B670  ECE7  F05B         	call	_writeNVM
 36823                           
 36824                           ;../../VLCBlib_PIC/event_teach_large.c: 563:     }
 36825   00B674  0101               	movlb	1	; () banked
 36826   00B676  2BC7               	incf	clearAllEvents@tableIndex& (0+255),f,b
 36827                           
 36828                           ; BSR set to: 1
 36829   00B678  29C7               	incf	clearAllEvents@tableIndex& (0+255),w,b
 36830   00B67A  A4D8               	btfss	status,2,c
 36831   00B67C  D7DE               	goto	l20126
 36832                           
 36833                           ; BSR set to: 1
 36834                           ;../../VLCBlib_PIC/event_teach_large.c: 564:     flushFlashBlock();
 36835   00B67E  ECE6  F052         	call	_flushFlashBlock	;wreg free
 36836                           
 36837                           ;../../VLCBlib_PIC/event_teach_large.c: 566:     rebuildHashtable();
 36838   00B682  EC8D  F03E         	call	_rebuildHashtable	;wreg free
 36839   00B686  0012               	return		;funcret
 36840   00B688                     __end_of_clearAllEvents:
 36841                           	callstack 0
 36842                           
 36843 ;; *************** function _APP_nvDefault *****************
 36844 ;; Defined at:
 36845 ;;		line 73 in file "../universalNv.c"
 36846 ;; Parameters:    Size  Location     Type
 36847 ;;  index           1    wreg     unsigned char 
 36848 ;; Auto vars:     Size  Location     Type
 36849 ;;  index           1   67[BANK0 ] unsigned char 
 36850 ;; Return value:  Size  Location     Type
 36851 ;;                  1    wreg      unsigned char 
 36852 ;; Registers used:
 36853 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36854 ;; Tracked objects:
 36855 ;;		On entry : 0/0
 36856 ;;		On exit  : 0/0
 36857 ;;		Unchanged: 0/0
 36858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36861 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36862 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36863 ;;Total ram usage:        5 bytes
 36864 ;; Hardware stack levels used: 1
 36865 ;; Hardware stack levels required when called: 13
 36866 ;; This function calls:
 36867 ;;		___awdiv
 36868 ;;		___awmod
 36869 ;;		___wmul
 36870 ;; This function is called by:
 36871 ;;		_nvFactoryReset
 36872 ;; This function uses a non-reentrant model
 36873 ;;
 36874                           
 36875                           	psect	text153
 36876   008C28                     __ptext153:
 36877                           	callstack 0
 36878   008C28                     _APP_nvDefault:
 36879                           	callstack 13
 36880                           
 36881                           ;incstack = 0
 36882                           ;APP_nvDefault@index stored from wreg
 36883   008C28  0100               	movlb	0	; () banked
 36884   008C2A  6FA3               	movwf	APP_nvDefault@index& (0+255),b
 36885                           
 36886                           ;../universalNv.c: 74:     if (index < 16) {
 36887   008C2C  0E10               	movlw	16
 36888   008C2E  0100               	movlb	0	; () banked
 36889   008C30  61A3               	cpfslt	APP_nvDefault@index& (0+255),b
 36890   008C32  D02A               	goto	l19954
 36891   008C34  D00C               	goto	l19952
 36892   008C36                     l19918:
 36893                           
 36894                           ; BSR set to: 0
 36895                           ;../universalNv.c: 78:                 return 0;
 36896   008C36  0E00               	movlw	0
 36897   008C38  0012               	return	
 36898   008C3A                     l19926:
 36899                           
 36900                           ; BSR set to: 0
 36901                           ;../universalNv.c: 82:                 return 234;
 36902   008C3A  0EEA               	movlw	234
 36903   008C3C  0012               	return	
 36904   008C3E                     l19930:
 36905                           
 36906                           ; BSR set to: 0
 36907                           ;../universalNv.c: 84:                 return 0x33;
 36908   008C3E  0E33               	movlw	51
 36909   008C40  0012               	return	
 36910   008C42                     l19934:
 36911                           
 36912                           ; BSR set to: 0
 36913                           ;../universalNv.c: 86:                 return 2;
 36914   008C42  0E02               	movlw	2
 36915   008C44  0012               	return	
 36916   008C46                     l19938:
 36917                           
 36918                           ; BSR set to: 0
 36919                           ;../universalNv.c: 90:                 return 0xFF;
 36920   008C46  0EFF               	movlw	255
 36921   008C48  0012               	return	
 36922   008C4A                     l19942:
 36923                           
 36924                           ; BSR set to: 0
 36925                           ;../universalNv.c: 92:                 return 20;
 36926   008C4A  0E14               	movlw	20
 36927   008C4C  0012               	return	
 36928   008C4E                     l19952:
 36929                           
 36930                           ; BSR set to: 0
 36931   008C4E  51A3               	movf	APP_nvDefault@index& (0+255),w,b
 36932                           
 36933                           ; Switch size 1, requested type "simple"
 36934                           ; Number of cases is 9, Range of values is 1 to 9
 36935                           ; switch strategies available:
 36936                           ; Name         Instructions Cycles
 36937                           ; simple_byte           28    15 (average)
 36938                           ;	Chosen strategy is simple_byte
 36939   008C50  0A01               	xorlw	1	; case 1
 36940   008C52  B4D8               	btfsc	status,2,c
 36941   008C54  D7F0               	goto	l19918
 36942   008C56  0A03               	xorlw	3	; case 2
 36943   008C58  B4D8               	btfsc	status,2,c
 36944   008C5A  D7ED               	goto	l19918
 36945   008C5C  0A01               	xorlw	1	; case 3
 36946   008C5E  B4D8               	btfsc	status,2,c
 36947   008C60  D7EC               	goto	l19926
 36948   008C62  0A07               	xorlw	7	; case 4
 36949   008C64  B4D8               	btfsc	status,2,c
 36950   008C66  D7EB               	goto	l19930
 36951   008C68  0A01               	xorlw	1	; case 5
 36952   008C6A  B4D8               	btfsc	status,2,c
 36953   008C6C  D7EA               	goto	l19934
 36954   008C6E  0A03               	xorlw	3	; case 6
 36955   008C70  B4D8               	btfsc	status,2,c
 36956   008C72  D7E9               	goto	l19938
 36957   008C74  0A01               	xorlw	1	; case 7
 36958   008C76  B4D8               	btfsc	status,2,c
 36959   008C78  D7E6               	goto	l19938
 36960   008C7A  0A0F               	xorlw	15	; case 8
 36961   008C7C  B4D8               	btfsc	status,2,c
 36962   008C7E  D7E3               	goto	l19938
 36963   008C80  0A01               	xorlw	1	; case 9
 36964   008C82  B4D8               	btfsc	status,2,c
 36965   008C84  D7E2               	goto	l19942
 36966   008C86  D7D7               	goto	l19918
 36967   008C88                     l19954:
 36968                           
 36969                           ; BSR set to: 0
 36970                           ;../universalNv.c: 98:     return channelDefaultNVs[(((uint8_t)((index-16)/7)) < 8) ? 0 
      +                          : 0][(index-16) % 7];
 36971   008C88  0EF0               	movlw	240
 36972   008C8A  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 36973   008C8C  6F97               	movwf	___awdiv@dividend& (0+255),b
 36974   008C8E  6B98               	clrf	(___awdiv@dividend+1)& (0+255),b
 36975   008C90  0EFF               	movlw	255
 36976   008C92  2398               	addwfc	(___awdiv@dividend+1)& (0+255),f,b
 36977   008C94  0E00               	movlw	0
 36978   008C96  6F9A               	movwf	(___awdiv@divisor+1)& (0+255),b
 36979   008C98  0E07               	movlw	7
 36980   008C9A  6F99               	movwf	___awdiv@divisor& (0+255),b
 36981   008C9C  ECA3  F052         	call	___awdiv	;wreg free
 36982   008CA0  0E00               	movlw	0
 36983   008CA2  0100               	movlb	0	; () banked
 36984   008CA4  6F92               	movwf	(___wmul@multiplier+1)& (0+255),b
 36985   008CA6  0E00               	movlw	0
 36986   008CA8  6F91               	movwf	___wmul@multiplier& (0+255),b
 36987   008CAA  0E00               	movlw	0
 36988   008CAC  6F94               	movwf	(___wmul@multiplicand+1)& (0+255),b
 36989   008CAE  0E07               	movlw	7
 36990   008CB0  6F93               	movwf	___wmul@multiplicand& (0+255),b
 36991   008CB2  ECD6  F060         	call	___wmul	;wreg free
 36992   008CB6  0E8C               	movlw	low _channelDefaultNVs
 36993   008CB8  0100               	movlb	0	; () banked
 36994   008CBA  2591               	addwf	?___wmul& (0+255),w,b
 36995   008CBC  6F9F               	movwf	??_APP_nvDefault& (0+255),b
 36996   008CBE  0EEE               	movlw	high _channelDefaultNVs
 36997   008CC0  2192               	addwfc	(?___wmul+1)& (0+255),w,b
 36998   008CC2  6FA0               	movwf	(??_APP_nvDefault+1)& (0+255),b
 36999   008CC4  0EF0               	movlw	240
 37000   008CC6  25A3               	addwf	APP_nvDefault@index& (0+255),w,b
 37001   008CC8  6F8D               	movwf	___awmod@dividend& (0+255),b
 37002   008CCA  6B8E               	clrf	(___awmod@dividend+1)& (0+255),b
 37003   008CCC  0EFF               	movlw	255
 37004   008CCE  238E               	addwfc	(___awmod@dividend+1)& (0+255),f,b
 37005   008CD0  0E00               	movlw	0
 37006   008CD2  6F90               	movwf	(___awmod@divisor+1)& (0+255),b
 37007   008CD4  0E07               	movlw	7
 37008   008CD6  6F8F               	movwf	___awmod@divisor& (0+255),b
 37009   008CD8  ECB8  F056         	call	___awmod	;wreg free
 37010   008CDC  0100               	movlb	0	; () banked
 37011   008CDE  518D               	movf	?___awmod& (0+255),w,b
 37012   008CE0  259F               	addwf	??_APP_nvDefault& (0+255),w,b
 37013   008CE2  6FA1               	movwf	(??_APP_nvDefault+2)& (0+255),b
 37014   008CE4  518E               	movf	(?___awmod+1)& (0+255),w,b
 37015   008CE6  21A0               	addwfc	(??_APP_nvDefault+1)& (0+255),w,b
 37016   008CE8  6FA2               	movwf	(??_APP_nvDefault+3)& (0+255),b
 37017   008CEA  C0A1  FFF6         	movff	??_APP_nvDefault+2,tblptrl
 37018   008CEE  C0A2  FFF7         	movff	??_APP_nvDefault+3,tblptrh
 37019   008CF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37020   008CF2  6AF8               	clrf	tblptru,c
 37021   008CF4                     	endif
 37022   008CF4                     	if	0	;tblptru may be non-zero
 37023   008CF4                     	endif
 37024   008CF4  0008               	tblrd		*
 37025   008CF6  50F5               	movf	tablat,w,c
 37026                           
 37027                           ; BSR set to: 0
 37028   008CF8  0012               	return		;funcret
 37029   008CFA                     __end_of_APP_nvDefault:
 37030                           	callstack 0
 37031                           
 37032 ;; *************** function ___wmul *****************
 37033 ;; Defined at:
 37034 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
 37035 ;; Parameters:    Size  Location     Type
 37036 ;;  multiplier      2   49[BANK0 ] unsigned int 
 37037 ;;  multiplicand    2   51[BANK0 ] unsigned int 
 37038 ;; Auto vars:     Size  Location     Type
 37039 ;;  product         2   53[BANK0 ] unsigned int 
 37040 ;; Return value:  Size  Location     Type
 37041 ;;                  2   49[BANK0 ] unsigned int 
 37042 ;; Registers used:
 37043 ;;		wreg, status,2, status,0, prodl, prodh
 37044 ;; Tracked objects:
 37045 ;;		On entry : 0/0
 37046 ;;		On exit  : 0/0
 37047 ;;		Unchanged: 0/0
 37048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37052 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37053 ;;Total ram usage:        6 bytes
 37054 ;; Hardware stack levels used: 1
 37055 ;; Hardware stack levels required when called: 12
 37056 ;; This function calls:
 37057 ;;		Nothing
 37058 ;; This function is called by:
 37059 ;;		_APP_nvDefault
 37060 ;;		_bounceDown
 37061 ;; This function uses a non-reentrant model
 37062 ;;
 37063                           
 37064                           	psect	text154
 37065   00C1AC                     __ptext154:
 37066                           	callstack 0
 37067   00C1AC                     ___wmul:
 37068                           	callstack 13
 37069                           
 37070                           ; BSR set to: 0
 37071                           ;incstack = 0
 37072   00C1AC  0100               	movlb	0	; () banked
 37073   00C1AE  5191               	movf	___wmul@multiplier& (0+255),w,b
 37074   00C1B0  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37075   00C1B2  CFF3 F095          	movff	prodl,___wmul@product
 37076   00C1B6  CFF4 F096          	movff	prodh,___wmul@product+1
 37077   00C1BA  5191               	movf	___wmul@multiplier& (0+255),w,b
 37078   00C1BC  0394               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 37079   00C1BE  50F3               	movf	243,w,c
 37080   00C1C0  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37081   00C1C2  5192               	movf	(___wmul@multiplier+1)& (0+255),w,b
 37082   00C1C4  0393               	mulwf	___wmul@multiplicand& (0+255),b
 37083   00C1C6  50F3               	movf	243,w,c
 37084   00C1C8  2796               	addwf	(___wmul@product+1)& (0+255),f,b
 37085                           
 37086                           ; BSR set to: 0
 37087   00C1CA  C095  F091         	movff	___wmul@product,?___wmul
 37088   00C1CE  C096  F092         	movff	___wmul@product+1,?___wmul+1
 37089                           
 37090                           ; BSR set to: 0
 37091   00C1D2  0012               	return		;funcret
 37092   00C1D4                     __end_of___wmul:
 37093                           	callstack 0
 37094                           
 37095 ;; *************** function ___awmod *****************
 37096 ;; Defined at:
 37097 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
 37098 ;; Parameters:    Size  Location     Type
 37099 ;;  dividend        2   45[BANK0 ] int 
 37100 ;;  divisor         2   47[BANK0 ] int 
 37101 ;; Auto vars:     Size  Location     Type
 37102 ;;  sign            1   50[BANK0 ] unsigned char 
 37103 ;;  counter         1   49[BANK0 ] unsigned char 
 37104 ;; Return value:  Size  Location     Type
 37105 ;;                  2   45[BANK0 ] int 
 37106 ;; Registers used:
 37107 ;;		wreg, status,2, status,0
 37108 ;; Tracked objects:
 37109 ;;		On entry : 0/0
 37110 ;;		On exit  : 0/0
 37111 ;;		Unchanged: 0/0
 37112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37113 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37114 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37116 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37117 ;;Total ram usage:        6 bytes
 37118 ;; Hardware stack levels used: 1
 37119 ;; Hardware stack levels required when called: 12
 37120 ;; This function calls:
 37121 ;;		Nothing
 37122 ;; This function is called by:
 37123 ;;		_consumer2QProcessMessage
 37124 ;;		_processActions
 37125 ;;		_APP_nvDefault
 37126 ;;		_APP_nvValueChanged
 37127 ;;		_APP_nvValidate
 37128 ;; This function uses a non-reentrant model
 37129 ;;
 37130                           
 37131                           	psect	text155
 37132   00AD70                     __ptext155:
 37133                           	callstack 0
 37134   00AD70                     ___awmod:
 37135                           	callstack 14
 37136                           
 37137                           ; BSR set to: 0
 37138                           ;incstack = 0
 37139   00AD70  0E00               	movlw	0
 37140   00AD72  0100               	movlb	0	; () banked
 37141   00AD74  6F92               	movwf	___awmod@sign& (0+255),b
 37142                           
 37143                           ; BSR set to: 0
 37144   00AD76  AF8E               	btfss	(___awmod@dividend+1)& (0+255),7,b
 37145   00AD78  D006               	goto	l19820
 37146                           
 37147                           ; BSR set to: 0
 37148   00AD7A  6D8D               	negf	___awmod@dividend& (0+255),b
 37149   00AD7C  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37150   00AD7E  B0D8               	btfsc	status,0,c
 37151   00AD80  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37152                           
 37153                           ; BSR set to: 0
 37154   00AD82  0E01               	movlw	1
 37155   00AD84  6F92               	movwf	___awmod@sign& (0+255),b
 37156   00AD86                     l19820:
 37157                           
 37158                           ; BSR set to: 0
 37159   00AD86  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37160   00AD88  D004               	goto	l19824
 37161                           
 37162                           ; BSR set to: 0
 37163   00AD8A  6D8F               	negf	___awmod@divisor& (0+255),b
 37164   00AD8C  1F90               	comf	(___awmod@divisor+1)& (0+255),f,b
 37165   00AD8E  B0D8               	btfsc	status,0,c
 37166   00AD90  2B90               	incf	(___awmod@divisor+1)& (0+255),f,b
 37167   00AD92                     l19824:
 37168                           
 37169                           ; BSR set to: 0
 37170   00AD92  518F               	movf	___awmod@divisor& (0+255),w,b
 37171   00AD94  1190               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 37172   00AD96  B4D8               	btfsc	status,2,c
 37173   00AD98  D018               	goto	l19840
 37174                           
 37175                           ; BSR set to: 0
 37176   00AD9A  0E01               	movlw	1
 37177   00AD9C  6F91               	movwf	___awmod@counter& (0+255),b
 37178   00AD9E  D004               	goto	l19830
 37179   00ADA0                     l19828:
 37180                           
 37181                           ; BSR set to: 0
 37182   00ADA0  90D8               	bcf	status,0,c
 37183   00ADA2  378F               	rlcf	___awmod@divisor& (0+255),f,b
 37184   00ADA4  3790               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 37185   00ADA6  2B91               	incf	___awmod@counter& (0+255),f,b
 37186   00ADA8                     l19830:
 37187                           
 37188                           ; BSR set to: 0
 37189   00ADA8  AF90               	btfss	(___awmod@divisor+1)& (0+255),7,b
 37190   00ADAA  D7FA               	goto	l19828
 37191   00ADAC                     u19840:
 37192                           
 37193                           ; BSR set to: 0
 37194   00ADAC  518F               	movf	___awmod@divisor& (0+255),w,b
 37195   00ADAE  5D8D               	subwf	___awmod@dividend& (0+255),w,b
 37196   00ADB0  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37197   00ADB2  598E               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 37198   00ADB4  A0D8               	btfss	status,0,c
 37199   00ADB6  D004               	goto	l19836
 37200                           
 37201                           ; BSR set to: 0
 37202   00ADB8  518F               	movf	___awmod@divisor& (0+255),w,b
 37203   00ADBA  5F8D               	subwf	___awmod@dividend& (0+255),f,b
 37204   00ADBC  5190               	movf	(___awmod@divisor+1)& (0+255),w,b
 37205   00ADBE  5B8E               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 37206   00ADC0                     l19836:
 37207                           
 37208                           ; BSR set to: 0
 37209   00ADC0  90D8               	bcf	status,0,c
 37210   00ADC2  3390               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 37211   00ADC4  338F               	rrcf	___awmod@divisor& (0+255),f,b
 37212                           
 37213                           ; BSR set to: 0
 37214   00ADC6  2F91               	decfsz	___awmod@counter& (0+255),f,b
 37215   00ADC8  D7F1               	goto	u19840
 37216   00ADCA                     l19840:
 37217                           
 37218                           ; BSR set to: 0
 37219   00ADCA  5192               	movf	___awmod@sign& (0+255),w,b
 37220   00ADCC  B4D8               	btfsc	status,2,c
 37221   00ADCE  D004               	goto	l19844
 37222                           
 37223                           ; BSR set to: 0
 37224   00ADD0  6D8D               	negf	___awmod@dividend& (0+255),b
 37225   00ADD2  1F8E               	comf	(___awmod@dividend+1)& (0+255),f,b
 37226   00ADD4  B0D8               	btfsc	status,0,c
 37227   00ADD6  2B8E               	incf	(___awmod@dividend+1)& (0+255),f,b
 37228   00ADD8                     l19844:
 37229                           
 37230                           ; BSR set to: 0
 37231   00ADD8  C08D  F08D         	movff	___awmod@dividend,?___awmod
 37232   00ADDC  C08E  F08E         	movff	___awmod@dividend+1,?___awmod+1
 37233                           
 37234                           ; BSR set to: 0
 37235   00ADE0  0012               	return		;funcret
 37236   00ADE2                     __end_of___awmod:
 37237                           	callstack 0
 37238                           
 37239 ;; *************** function ___awdiv *****************
 37240 ;; Defined at:
 37241 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
 37242 ;; Parameters:    Size  Location     Type
 37243 ;;  dividend        2   55[BANK0 ] int 
 37244 ;;  divisor         2   57[BANK0 ] int 
 37245 ;; Auto vars:     Size  Location     Type
 37246 ;;  quotient        2   61[BANK0 ] int 
 37247 ;;  sign            1   60[BANK0 ] unsigned char 
 37248 ;;  counter         1   59[BANK0 ] unsigned char 
 37249 ;; Return value:  Size  Location     Type
 37250 ;;                  2   55[BANK0 ] int 
 37251 ;; Registers used:
 37252 ;;		wreg, status,2, status,0
 37253 ;; Tracked objects:
 37254 ;;		On entry : 0/0
 37255 ;;		On exit  : 0/0
 37256 ;;		Unchanged: 0/0
 37257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37259 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37261 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37262 ;;Total ram usage:        8 bytes
 37263 ;; Hardware stack levels used: 1
 37264 ;; Hardware stack levels required when called: 12
 37265 ;; This function calls:
 37266 ;;		Nothing
 37267 ;; This function is called by:
 37268 ;;		_APP_GetEventState
 37269 ;;		_consumer2QProcessMessage
 37270 ;;		_processActions
 37271 ;;		_sodTRCallback
 37272 ;;		_APP_nvDefault
 37273 ;;		_APP_nvValueChanged
 37274 ;;		_APP_nvValidate
 37275 ;;		_pollServos
 37276 ;;		_bounceDown
 37277 ;;		_bounceUp
 37278 ;;		_leds_poll
 37279 ;; This function uses a non-reentrant model
 37280 ;;
 37281                           
 37282                           	psect	text156
 37283   00A546                     __ptext156:
 37284                           	callstack 0
 37285   00A546                     ___awdiv:
 37286                           	callstack 15
 37287                           
 37288                           ; BSR set to: 0
 37289                           ;incstack = 0
 37290   00A546  0E00               	movlw	0
 37291   00A548  0100               	movlb	0	; () banked
 37292   00A54A  6F9C               	movwf	___awdiv@sign& (0+255),b
 37293                           
 37294                           ; BSR set to: 0
 37295   00A54C  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 37296   00A54E  D006               	goto	l19776
 37297                           
 37298                           ; BSR set to: 0
 37299   00A550  6D99               	negf	___awdiv@divisor& (0+255),b
 37300   00A552  1F9A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 37301   00A554  B0D8               	btfsc	status,0,c
 37302   00A556  2B9A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 37303                           
 37304                           ; BSR set to: 0
 37305   00A558  0E01               	movlw	1
 37306   00A55A  6F9C               	movwf	___awdiv@sign& (0+255),b
 37307   00A55C                     l19776:
 37308                           
 37309                           ; BSR set to: 0
 37310   00A55C  AF98               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 37311   00A55E  D006               	goto	l19782
 37312                           
 37313                           ; BSR set to: 0
 37314   00A560  6D97               	negf	___awdiv@dividend& (0+255),b
 37315   00A562  1F98               	comf	(___awdiv@dividend+1)& (0+255),f,b
 37316   00A564  B0D8               	btfsc	status,0,c
 37317   00A566  2B98               	incf	(___awdiv@dividend+1)& (0+255),f,b
 37318                           
 37319                           ; BSR set to: 0
 37320   00A568  0E01               	movlw	1
 37321   00A56A  1B9C               	xorwf	___awdiv@sign& (0+255),f,b
 37322   00A56C                     l19782:
 37323                           
 37324                           ; BSR set to: 0
 37325   00A56C  0E00               	movlw	0
 37326   00A56E  6F9E               	movwf	(___awdiv@quotient+1)& (0+255),b
 37327   00A570  0E00               	movlw	0
 37328   00A572  6F9D               	movwf	___awdiv@quotient& (0+255),b
 37329                           
 37330                           ; BSR set to: 0
 37331   00A574  5199               	movf	___awdiv@divisor& (0+255),w,b
 37332   00A576  119A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 37333   00A578  B4D8               	btfsc	status,2,c
 37334   00A57A  D01C               	goto	l19804
 37335                           
 37336                           ; BSR set to: 0
 37337   00A57C  0E01               	movlw	1
 37338   00A57E  6F9B               	movwf	___awdiv@counter& (0+255),b
 37339   00A580  D004               	goto	l19790
 37340   00A582                     l19788:
 37341                           
 37342                           ; BSR set to: 0
 37343   00A582  90D8               	bcf	status,0,c
 37344   00A584  3799               	rlcf	___awdiv@divisor& (0+255),f,b
 37345   00A586  379A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 37346   00A588  2B9B               	incf	___awdiv@counter& (0+255),f,b
 37347   00A58A                     l19790:
 37348                           
 37349                           ; BSR set to: 0
 37350   00A58A  AF9A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 37351   00A58C  D7FA               	goto	l19788
 37352   00A58E                     u19780:
 37353                           
 37354                           ; BSR set to: 0
 37355   00A58E  90D8               	bcf	status,0,c
 37356   00A590  379D               	rlcf	___awdiv@quotient& (0+255),f,b
 37357   00A592  379E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 37358                           
 37359                           ; BSR set to: 0
 37360   00A594  5199               	movf	___awdiv@divisor& (0+255),w,b
 37361   00A596  5D97               	subwf	___awdiv@dividend& (0+255),w,b
 37362   00A598  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 37363   00A59A  5998               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 37364   00A59C  A0D8               	btfss	status,0,c
 37365   00A59E  D005               	goto	l19800
 37366                           
 37367                           ; BSR set to: 0
 37368   00A5A0  5199               	movf	___awdiv@divisor& (0+255),w,b
 37369   00A5A2  5F97               	subwf	___awdiv@dividend& (0+255),f,b
 37370   00A5A4  519A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 37371   00A5A6  5B98               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 37372                           
 37373                           ; BSR set to: 0
 37374   00A5A8  819D               	bsf	___awdiv@quotient& (0+255),0,b
 37375   00A5AA                     l19800:
 37376                           
 37377                           ; BSR set to: 0
 37378   00A5AA  90D8               	bcf	status,0,c
 37379   00A5AC  339A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 37380   00A5AE  3399               	rrcf	___awdiv@divisor& (0+255),f,b
 37381                           
 37382                           ; BSR set to: 0
 37383   00A5B0  2F9B               	decfsz	___awdiv@counter& (0+255),f,b
 37384   00A5B2  D7ED               	goto	u19780
 37385   00A5B4                     l19804:
 37386                           
 37387                           ; BSR set to: 0
 37388   00A5B4  519C               	movf	___awdiv@sign& (0+255),w,b
 37389   00A5B6  B4D8               	btfsc	status,2,c
 37390   00A5B8  D004               	goto	l19808
 37391                           
 37392                           ; BSR set to: 0
 37393   00A5BA  6D9D               	negf	___awdiv@quotient& (0+255),b
 37394   00A5BC  1F9E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 37395   00A5BE  B0D8               	btfsc	status,0,c
 37396   00A5C0  2B9E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 37397   00A5C2                     l19808:
 37398                           
 37399                           ; BSR set to: 0
 37400   00A5C2  C09D  F097         	movff	___awdiv@quotient,?___awdiv
 37401   00A5C6  C09E  F098         	movff	___awdiv@quotient+1,?___awdiv+1
 37402                           
 37403                           ; BSR set to: 0
 37404   00A5CA  0012               	return		;funcret
 37405   00A5CC                     __end_of___awdiv:
 37406                           	callstack 0
 37407                           
 37408 ;; *************** function _APP_factoryReset *****************
 37409 ;; Defined at:
 37410 ;;		line 214 in file "../main.c"
 37411 ;; Parameters:    Size  Location     Type
 37412 ;;		None
 37413 ;; Auto vars:     Size  Location     Type
 37414 ;;  io              1   51[BANK1 ] unsigned char 
 37415 ;; Return value:  Size  Location     Type
 37416 ;;                  1    wreg      void 
 37417 ;; Registers used:
 37418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37419 ;; Tracked objects:
 37420 ;;		On entry : 0/0
 37421 ;;		On exit  : 0/0
 37422 ;;		Unchanged: 0/0
 37423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37425 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37427 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37428 ;;Total ram usage:        1 bytes
 37429 ;; Hardware stack levels used: 1
 37430 ;; Hardware stack levels required when called: 25
 37431 ;; This function calls:
 37432 ;;		_factoryResetGlobalEvents
 37433 ;;		_flushFlashBlock
 37434 ;;		_setType
 37435 ;; This function is called by:
 37436 ;;		_factoryReset
 37437 ;; This function uses a non-reentrant model
 37438 ;;
 37439                           
 37440                           	psect	text157
 37441   00C268                     __ptext157:
 37442                           	callstack 0
 37443   00C268                     _APP_factoryReset:
 37444                           	callstack 2
 37445                           
 37446                           ;../main.c: 215:     uint8_t io;;../main.c: 217:     factoryResetGlobalEvents();
 37447                           
 37448                           ; BSR set to: 0
 37449                           ;incstack = 0
 37450   00C268  EC9E  F062         	call	_factoryResetGlobalEvents	;wreg free
 37451                           
 37452                           ;../main.c: 219:     for (io=0; io<16; io++) {
 37453   00C26C  0E00               	movlw	0
 37454   00C26E  0101               	movlb	1	; () banked
 37455   00C270  6FED               	movwf	APP_factoryReset@io& (0+255),b
 37456   00C272                     l20226:
 37457                           
 37458                           ; BSR set to: 1
 37459                           
 37460                           ; BSR set to: 1
 37461                           
 37462                           ; BSR set to: 1
 37463   00C272  0E00               	movlw	0
 37464   00C274  6FEA               	movwf	setType@type& (0+255),b
 37465   00C276  51ED               	movf	APP_factoryReset@io& (0+255),w,b
 37466   00C278  EC27  F059         	call	_setType
 37467                           
 37468                           ;../main.c: 221:     }
 37469   00C27C  0101               	movlb	1	; () banked
 37470   00C27E  2BED               	incf	APP_factoryReset@io& (0+255),f,b
 37471                           
 37472                           ; BSR set to: 1
 37473   00C280  0E0F               	movlw	15
 37474   00C282  65ED               	cpfsgt	APP_factoryReset@io& (0+255),b
 37475   00C284  D7F6               	goto	l20226
 37476                           
 37477                           ; BSR set to: 1
 37478                           ;../main.c: 222:     flushFlashBlock();
 37479   00C286  ECE6  F052         	call	_flushFlashBlock	;wreg free
 37480   00C28A  0012               	return		;funcret
 37481   00C28C                     __end_of_APP_factoryReset:
 37482                           	callstack 0
 37483                           
 37484 ;; *************** function _setType *****************
 37485 ;; Defined at:
 37486 ;;		line 527 in file "../main.c"
 37487 ;; Parameters:    Size  Location     Type
 37488 ;;  io              1    wreg     unsigned char 
 37489 ;;  type            1   48[BANK1 ] unsigned char 
 37490 ;; Auto vars:     Size  Location     Type
 37491 ;;  io              1   50[BANK1 ] unsigned char 
 37492 ;;  index           1   49[BANK1 ] unsigned char 
 37493 ;; Return value:  Size  Location     Type
 37494 ;;                  1    wreg      void 
 37495 ;; Registers used:
 37496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37497 ;; Tracked objects:
 37498 ;;		On entry : 0/0
 37499 ;;		On exit  : 0/0
 37500 ;;		Unchanged: 0/0
 37501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37502 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37503 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37505 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37506 ;;Total ram usage:        3 bytes
 37507 ;; Hardware stack levels used: 1
 37508 ;; Hardware stack levels required when called: 24
 37509 ;; This function calls:
 37510 ;;		_configIO
 37511 ;;		_defaultEvents
 37512 ;;		_defaultNVs
 37513 ;;		_saveNV
 37514 ;; This function is called by:
 37515 ;;		_APP_factoryReset
 37516 ;;		_APP_nvValueChanged
 37517 ;; This function uses a non-reentrant model
 37518 ;;
 37519                           
 37520                           	psect	text158
 37521   00B24E                     __ptext158:
 37522                           	callstack 0
 37523   00B24E                     _setType:
 37524                           	callstack 2
 37525                           
 37526                           ;incstack = 0
 37527                           ;setType@io stored from wreg
 37528   00B24E  0101               	movlb	1	; () banked
 37529   00B250  6FEC               	movwf	setType@io& (0+255),b
 37530                           
 37531                           ;../main.c: 528:     uint8_t index;;../main.c: 530:     index = (16 + 7*(io) + 0);
 37532   00B252  0101               	movlb	1	; () banked
 37533   00B254  51EC               	movf	setType@io& (0+255),w,b
 37534   00B256  0D07               	mullw	7
 37535   00B258  50F3               	movf	243,w,c
 37536   00B25A  0F10               	addlw	16
 37537   00B25C  6FEB               	movwf	setType@index& (0+255),b
 37538                           
 37539                           ; BSR set to: 1
 37540                           ;../main.c: 531:     saveNV((uint8_t)index, type);
 37541   00B25E  C1EA  F1BC         	movff	setType@type,saveNV@value
 37542   00B262  51EB               	movf	setType@index& (0+255),w,b
 37543   00B264  EC33  F05E         	call	_saveNV
 37544                           
 37545                           ;../main.c: 534:     defaultNVs(io, type);
 37546   00B268  C1EA  F1C0         	movff	setType@type,defaultNVs@type
 37547   00B26C  0101               	movlb	1	; () banked
 37548   00B26E  51EC               	movf	setType@io& (0+255),w,b
 37549   00B270  EC98  F05B         	call	_defaultNVs
 37550                           
 37551                           ;../main.c: 537:     configIO(io);
 37552   00B274  0101               	movlb	1	; () banked
 37553   00B276  51EC               	movf	setType@io& (0+255),w,b
 37554   00B278  EC4C  F026         	call	_configIO
 37555                           
 37556                           ;../main.c: 539:     if ((type == 2) || (type== 3) || (type == 4)) {
 37557   00B27C  0E02               	movlw	2
 37558   00B27E  0101               	movlb	1	; () banked
 37559   00B280  19EA               	xorwf	setType@type& (0+255),w,b
 37560   00B282  B4D8               	btfsc	status,2,c
 37561   00B284  D008               	goto	u19890
 37562                           
 37563                           ; BSR set to: 1
 37564   00B286  0E03               	movlw	3
 37565   00B288  19EA               	xorwf	setType@type& (0+255),w,b
 37566   00B28A  B4D8               	btfsc	status,2,c
 37567   00B28C  D004               	goto	u19890
 37568                           
 37569                           ; BSR set to: 1
 37570   00B28E  0E04               	movlw	4
 37571   00B290  19EA               	xorwf	setType@type& (0+255),w,b
 37572   00B292  A4D8               	btfss	status,2,c
 37573   00B294  D006               	goto	l19864
 37574   00B296                     u19890:
 37575                           
 37576                           ; BSR set to: 1
 37577                           ;../main.c: 540:         currentPos[io] = 128;
 37578   00B296  51EC               	movf	setType@io& (0+255),w,b
 37579   00B298  0FA9               	addlw	low _currentPos
 37580   00B29A  6ED9               	movwf	fsr2l,c
 37581   00B29C  6ADA               	clrf	fsr2h,c
 37582   00B29E  0E80               	movlw	128
 37583   00B2A0  6EDF               	movwf	indf2,c
 37584   00B2A2                     l19864:
 37585                           
 37586                           ; BSR set to: 1
 37587                           ;../main.c: 544:     defaultEvents(io, type);
 37588   00B2A2  C1EA  F1E6         	movff	setType@type,defaultEvents@type
 37589   00B2A6  51EC               	movf	setType@io& (0+255),w,b
 37590   00B2A8  ECA6  F03A         	call	_defaultEvents
 37591   00B2AC  0012               	return		;funcret
 37592   00B2AE                     __end_of_setType:
 37593                           	callstack 0
 37594                           
 37595 ;; *************** function _defaultNVs *****************
 37596 ;; Defined at:
 37597 ;;		line 342 in file "../universalNv.c"
 37598 ;; Parameters:    Size  Location     Type
 37599 ;;  io              1    wreg     unsigned char 
 37600 ;;  type            1    6[BANK1 ] unsigned char 
 37601 ;; Auto vars:     Size  Location     Type
 37602 ;;  io              1    9[BANK1 ] unsigned char 
 37603 ;;  i               1   10[BANK1 ] unsigned char 
 37604 ;; Return value:  Size  Location     Type
 37605 ;;                  1    wreg      void 
 37606 ;; Registers used:
 37607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37608 ;; Tracked objects:
 37609 ;;		On entry : 0/0
 37610 ;;		On exit  : 0/0
 37611 ;;		Unchanged: 0/0
 37612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37613 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37614 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37615 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37616 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37617 ;;Total ram usage:        5 bytes
 37618 ;; Hardware stack levels used: 1
 37619 ;; Hardware stack levels required when called: 19
 37620 ;; This function calls:
 37621 ;;		_loadNvCache
 37622 ;;		_saveNV
 37623 ;; This function is called by:
 37624 ;;		_setType
 37625 ;; This function uses a non-reentrant model
 37626 ;;
 37627                           
 37628                           	psect	text159
 37629   00B730                     __ptext159:
 37630                           	callstack 0
 37631   00B730                     _defaultNVs:
 37632                           	callstack 6
 37633                           
 37634                           ;incstack = 0
 37635                           ;defaultNVs@io stored from wreg
 37636   00B730  0101               	movlb	1	; () banked
 37637   00B732  6FC3               	movwf	defaultNVs@io& (0+255),b
 37638                           
 37639                           ;../universalNv.c: 343:     uint8_t i;;../universalNv.c: 345:     for (i=1; i<7; i++) {
 37640   00B734  0E01               	movlw	1
 37641   00B736  0101               	movlb	1	; () banked
 37642   00B738  6FC4               	movwf	defaultNVs@i& (0+255),b
 37643   00B73A                     l19698:
 37644                           
 37645                           ; BSR set to: 1
 37646                           ;../universalNv.c: 346:         saveNV((16 + 7*(io) + 0)+i , channelDefaultNVs[type][i])
      +                          ;
 37647   00B73A  51C0               	movf	defaultNVs@type& (0+255),w,b
 37648   00B73C  0D07               	mullw	7
 37649   00B73E  0E8C               	movlw	low _channelDefaultNVs
 37650   00B740  24F3               	addwf	243,w,c
 37651   00B742  6FC1               	movwf	??_defaultNVs& (0+255),b
 37652   00B744  0EEE               	movlw	high _channelDefaultNVs
 37653   00B746  20F4               	addwfc	prodh,w,c
 37654   00B748  6FC2               	movwf	(??_defaultNVs+1)& (0+255),b
 37655   00B74A  51C4               	movf	defaultNVs@i& (0+255),w,b
 37656   00B74C  27C1               	addwf	??_defaultNVs& (0+255),f,b
 37657   00B74E  0E00               	movlw	0
 37658   00B750  23C2               	addwfc	(??_defaultNVs+1)& (0+255),f,b
 37659   00B752  C1C1  FFF6         	movff	??_defaultNVs,tblptrl
 37660   00B756  C1C2  FFF7         	movff	??_defaultNVs+1,tblptrh
 37661   00B75A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 37662   00B75A  6AF8               	clrf	tblptru,c
 37663   00B75C                     	endif
 37664   00B75C                     	if	0	;tblptru may be non-zero
 37665   00B75C                     	endif
 37666   00B75C  0008               	tblrd		*
 37667   00B75E  CFF5 F1BC          	movff	tablat,saveNV@value
 37668   00B762  51C3               	movf	defaultNVs@io& (0+255),w,b
 37669   00B764  0D07               	mullw	7
 37670   00B766  50F3               	movf	243,w,c
 37671   00B768  25C4               	addwf	defaultNVs@i& (0+255),w,b
 37672   00B76A  0F10               	addlw	16
 37673   00B76C  EC33  F05E         	call	_saveNV
 37674                           
 37675                           ;../universalNv.c: 347:     }
 37676   00B770  0101               	movlb	1	; () banked
 37677   00B772  2BC4               	incf	defaultNVs@i& (0+255),f,b
 37678                           
 37679                           ; BSR set to: 1
 37680   00B774  0E06               	movlw	6
 37681   00B776  65C4               	cpfsgt	defaultNVs@i& (0+255),b
 37682   00B778  D7E0               	goto	l19698
 37683                           
 37684                           ; BSR set to: 1
 37685                           ;../universalNv.c: 348:     loadNvCache();
 37686   00B77A  ECA3  F05C         	call	_loadNvCache	;wreg free
 37687   00B77E  0012               	return		;funcret
 37688   00B780                     __end_of_defaultNVs:
 37689                           	callstack 0
 37690                           
 37691 ;; *************** function _saveNV *****************
 37692 ;; Defined at:
 37693 ;;		line 199 in file "../../VLCBlib_PIC/nv.c"
 37694 ;; Parameters:    Size  Location     Type
 37695 ;;  index           1    wreg     unsigned char 
 37696 ;;  value           1    2[BANK1 ] unsigned char 
 37697 ;; Auto vars:     Size  Location     Type
 37698 ;;  index           1    5[BANK1 ] unsigned char 
 37699 ;; Return value:  Size  Location     Type
 37700 ;;                  1    wreg      void 
 37701 ;; Registers used:
 37702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37703 ;; Tracked objects:
 37704 ;;		On entry : 0/0
 37705 ;;		On exit  : 0/0
 37706 ;;		Unchanged: 0/0
 37707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37708 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37709 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37710 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37711 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37712 ;;Total ram usage:        4 bytes
 37713 ;; Hardware stack levels used: 1
 37714 ;; Hardware stack levels required when called: 18
 37715 ;; This function calls:
 37716 ;;		_writeNVM
 37717 ;; This function is called by:
 37718 ;;		_setType
 37719 ;;		_defaultNVs
 37720 ;; This function uses a non-reentrant model
 37721 ;;
 37722                           
 37723                           	psect	text160
 37724   00BC66                     __ptext160:
 37725                           	callstack 0
 37726   00BC66                     _saveNV:
 37727                           	callstack 7
 37728                           
 37729                           ;incstack = 0
 37730                           ;saveNV@index stored from wreg
 37731   00BC66  0101               	movlb	1	; () banked
 37732   00BC68  6FBF               	movwf	saveNV@index& (0+255),b
 37733                           
 37734                           ;../../VLCBlib_PIC/nv.c: 201:     nvCache[index] = value;
 37735   00BC6A  0E00               	movlw	low _nvCache
 37736   00BC6C  0101               	movlb	1	; () banked
 37737   00BC6E  25BF               	addwf	saveNV@index& (0+255),w,b
 37738   00BC70  6ED9               	movwf	fsr2l,c
 37739   00BC72  6ADA               	clrf	fsr2h,c
 37740   00BC74  0E04               	movlw	high _nvCache
 37741   00BC76  22DA               	addwfc	fsr2h,f,c
 37742   00BC78  C1BC  FFDF         	movff	saveNV@value,indf2
 37743                           
 37744                           ; BSR set to: 1
 37745                           ;../../VLCBlib_PIC/nv.c: 203:     writeNVM(FLASH_NVM_TYPE, 0xFF80 +index, value);
 37746   00BC7C  0E80               	movlw	128
 37747   00BC7E  25BF               	addwf	saveNV@index& (0+255),w,b
 37748   00BC80  6FBD               	movwf	??_saveNV& (0+255),b
 37749   00BC82  6BBE               	clrf	(??_saveNV+1)& (0+255),b
 37750   00BC84  0EFF               	movlw	255
 37751   00BC86  23BE               	addwfc	(??_saveNV+1)& (0+255),f,b
 37752   00BC88  C1BD  F0A4         	movff	??_saveNV,writeNVM@index
 37753   00BC8C  C1BE  F0A5         	movff	??_saveNV+1,writeNVM@index+1
 37754   00BC90  0100               	movlb	0	; () banked
 37755   00BC92  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 37756   00BC94  C1BC  F0A7         	movff	saveNV@value,writeNVM@value
 37757   00BC98  0E01               	movlw	1
 37758   00BC9A  ECE7  F05B         	call	_writeNVM
 37759   00BC9E  0012               	return		;funcret
 37760   00BCA0                     __end_of_saveNV:
 37761                           	callstack 0
 37762                           
 37763 ;; *************** function _loadNvCache *****************
 37764 ;; Defined at:
 37765 ;;		line 162 in file "../../VLCBlib_PIC/nv.c"
 37766 ;; Parameters:    Size  Location     Type
 37767 ;;		None
 37768 ;; Auto vars:     Size  Location     Type
 37769 ;;  temp            2   57[BANK0 ] short 
 37770 ;;  i               1   59[BANK0 ] unsigned char 
 37771 ;; Return value:  Size  Location     Type
 37772 ;;                  1    wreg      void 
 37773 ;; Registers used:
 37774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37775 ;; Tracked objects:
 37776 ;;		On entry : 0/0
 37777 ;;		On exit  : 0/0
 37778 ;;		Unchanged: 0/0
 37779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37781 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37782 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37783 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37784 ;;Total ram usage:        5 bytes
 37785 ;; Hardware stack levels used: 1
 37786 ;; Hardware stack levels required when called: 14
 37787 ;; This function calls:
 37788 ;;		_readNVM
 37789 ;; This function is called by:
 37790 ;;		_defaultNVs
 37791 ;;		_nvPowerUp
 37792 ;; This function uses a non-reentrant model
 37793 ;;
 37794                           
 37795                           	psect	text161
 37796   00B946                     __ptext161:
 37797                           	callstack 0
 37798   00B946                     _loadNvCache:
 37799                           	callstack 14
 37800                           
 37801                           ;../../VLCBlib_PIC/nv.c: 163:     uint8_t i;;../../VLCBlib_PIC/nv.c: 164:     int16_t te
      +                          mp;;../../VLCBlib_PIC/nv.c: 166:     for (i=1; i<= (15+7*16); i++) {
 37802                           
 37803                           ;incstack = 0
 37804   00B946  0E01               	movlw	1
 37805   00B948  0100               	movlb	0	; () banked
 37806   00B94A  6F9B               	movwf	loadNvCache@i& (0+255),b
 37807   00B94C                     l19570:
 37808                           
 37809                           ; BSR set to: 0
 37810                           ;../../VLCBlib_PIC/nv.c: 167:         temp = readNVM(FLASH_NVM_TYPE, 0xFF80 +i);
 37811   00B94C  0E80               	movlw	128
 37812   00B94E  259B               	addwf	loadNvCache@i& (0+255),w,b
 37813   00B950  6F97               	movwf	??_loadNvCache& (0+255),b
 37814   00B952  6B98               	clrf	(??_loadNvCache+1)& (0+255),b
 37815   00B954  0EFF               	movlw	255
 37816   00B956  2398               	addwfc	(??_loadNvCache+1)& (0+255),f,b
 37817   00B958  C097  F091         	movff	??_loadNvCache,readNVM@index
 37818   00B95C  C098  F092         	movff	??_loadNvCache+1,readNVM@index+1
 37819   00B960  6B93               	clrf	(readNVM@index+2)& (0+255),b
 37820   00B962  0E01               	movlw	1
 37821   00B964  EC57  F059         	call	_readNVM
 37822   00B968  C091  F099         	movff	?_readNVM,loadNvCache@temp
 37823   00B96C  C092  F09A         	movff	?_readNVM+1,loadNvCache@temp+1
 37824                           
 37825                           ;../../VLCBlib_PIC/nv.c: 168:         if (temp < 0) {
 37826   00B970  0100               	movlb	0	; () banked
 37827   00B972  BF9A               	btfsc	(loadNvCache@temp+1)& (0+255),7,b
 37828   00B974  D008               	goto	l19578
 37829                           
 37830                           ; BSR set to: 0
 37831                           ;../../VLCBlib_PIC/nv.c: 171:             nvCache[i] = (uint8_t)temp;
 37832   00B976  0E00               	movlw	low _nvCache
 37833   00B978  259B               	addwf	loadNvCache@i& (0+255),w,b
 37834   00B97A  6ED9               	movwf	fsr2l,c
 37835   00B97C  6ADA               	clrf	fsr2h,c
 37836   00B97E  0E04               	movlw	high _nvCache
 37837   00B980  22DA               	addwfc	fsr2h,f,c
 37838   00B982  C099  FFDF         	movff	loadNvCache@temp,indf2
 37839   00B986                     l19578:
 37840                           
 37841                           ; BSR set to: 0
 37842                           ;../../VLCBlib_PIC/nv.c: 173:     }
 37843   00B986  2B9B               	incf	loadNvCache@i& (0+255),f,b
 37844                           
 37845                           ; BSR set to: 0
 37846   00B988  0E7F               	movlw	127
 37847   00B98A  659B               	cpfsgt	loadNvCache@i& (0+255),b
 37848   00B98C  D7DF               	goto	l19570
 37849   00B98E  0012               	return	
 37850   00B990                     __end_of_loadNvCache:
 37851                           	callstack 0
 37852                           
 37853 ;; *************** function _defaultEvents *****************
 37854 ;; Defined at:
 37855 ;;		line 110 in file "../universalEvents.c"
 37856 ;; Parameters:    Size  Location     Type
 37857 ;;  io              1    wreg     unsigned char 
 37858 ;;  type            1   44[BANK1 ] unsigned char 
 37859 ;; Auto vars:     Size  Location     Type
 37860 ;;  io              1   47[BANK1 ] unsigned char 
 37861 ;;  en              2   45[BANK1 ] unsigned short 
 37862 ;;  b               1    0        unsigned char 
 37863 ;; Return value:  Size  Location     Type
 37864 ;;                  1    wreg      void 
 37865 ;; Registers used:
 37866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37867 ;; Tracked objects:
 37868 ;;		On entry : 0/0
 37869 ;;		On exit  : 0/0
 37870 ;;		Unchanged: 0/0
 37871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37872 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37873 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37875 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37876 ;;Total ram usage:        4 bytes
 37877 ;; Hardware stack levels used: 1
 37878 ;; Hardware stack levels required when called: 23
 37879 ;; This function calls:
 37880 ;;		_addEvent
 37881 ;;		_clearEvents
 37882 ;; This function is called by:
 37883 ;;		_setType
 37884 ;; This function uses a non-reentrant model
 37885 ;;
 37886                           
 37887                           	psect	text162
 37888   00754C                     __ptext162:
 37889                           	callstack 0
 37890   00754C                     _defaultEvents:
 37891                           	callstack 2
 37892                           
 37893                           ; BSR set to: 0
 37894                           ;incstack = 0
 37895                           ;defaultEvents@io stored from wreg
 37896   00754C  0101               	movlb	1	; () banked
 37897   00754E  6FE9               	movwf	defaultEvents@io& (0+255),b
 37898                           
 37899                           ;../universalEvents.c: 111:     uint16_t en = io+1;
 37900   007550  0E01               	movlw	1
 37901   007552  0101               	movlb	1	; () banked
 37902   007554  25E9               	addwf	defaultEvents@io& (0+255),w,b
 37903   007556  6FE7               	movwf	defaultEvents@en& (0+255),b
 37904   007558  6BE8               	clrf	(defaultEvents@en+1)& (0+255),b
 37905   00755A  0E00               	movlw	0
 37906   00755C  23E8               	addwfc	(defaultEvents@en+1)& (0+255),f,b
 37907                           
 37908                           ; BSR set to: 1
 37909                           ;../universalEvents.c: 112:     uint8_t b;;../universalEvents.c: 120:         clearEvent
      +                          s(io);
 37910   00755E  51E9               	movf	defaultEvents@io& (0+255),w,b
 37911   007560  ECBA  F05D         	call	_clearEvents
 37912                           
 37913                           ;../universalEvents.c: 125:     switch(type) {
 37914   007564  D094               	goto	l19718
 37915   007566                     l19710:
 37916                           
 37917                           ; BSR set to: 1
 37918                           ;../universalEvents.c: 129:              addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), 
      +                          TRUE);
 37919   007566  C0BF  F1D7         	movff	_nn,addEvent@nodeNumber
 37920   00756A  C0C0  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 37921   00756E  0E64               	movlw	100
 37922   007570  25E7               	addwf	defaultEvents@en& (0+255),w,b
 37923   007572  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 37924   007574  0E00               	movlw	0
 37925   007576  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37926   007578  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37927   00757A  0E00               	movlw	0
 37928   00757C  6FDB               	movwf	addEvent@evNum& (0+255),b
 37929   00757E  51E9               	movf	defaultEvents@io& (0+255),w,b
 37930   007580  0D04               	mullw	4
 37931   007582  50F3               	movf	243,w,c
 37932   007584  0F08               	addlw	8
 37933   007586  6FDC               	movwf	addEvent@evVal& (0+255),b
 37934   007588  0E01               	movlw	1
 37935   00758A  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 37936   00758C  ECEF  F031         	call	_addEvent	;wreg free
 37937   007590                     l645:
 37938                           
 37939                           ;../universalEvents.c: 134:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 37940   007590  C0BF  F1D7         	movff	_nn,addEvent@nodeNumber
 37941   007594  C0C0  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 37942   007598  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 37943   00759C  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37944   0075A0  0E01               	movlw	1
 37945   0075A2  0101               	movlb	1	; () banked
 37946   0075A4  6FDB               	movwf	addEvent@evNum& (0+255),b
 37947   0075A6  51E9               	movf	defaultEvents@io& (0+255),w,b
 37948   0075A8  0D05               	mullw	5
 37949   0075AA  50F3               	movf	243,w,c
 37950   0075AC  0F08               	addlw	8
 37951   0075AE  6FDC               	movwf	addEvent@evVal& (0+255),b
 37952   0075B0  0E01               	movlw	1
 37953   0075B2  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 37954   0075B4  ECEF  F031         	call	_addEvent	;wreg free
 37955                           
 37956                           ;../universalEvents.c: 137:             break;
 37957   0075B8  0012               	return	
 37958   0075BA                     l19712:
 37959                           
 37960                           ; BSR set to: 1
 37961                           ;../universalEvents.c: 140:             addEvent(nn.word, en, 0, ((8 + 4*(io))+0), TRUE)
      +                          ;
 37962   0075BA  C0BF  F1D7         	movff	_nn,addEvent@nodeNumber
 37963   0075BE  C0C0  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 37964   0075C2  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 37965   0075C6  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 37966   0075CA  0E00               	movlw	0
 37967   0075CC  6FDB               	movwf	addEvent@evNum& (0+255),b
 37968   0075CE  51E9               	movf	defaultEvents@io& (0+255),w,b
 37969   0075D0  0D04               	mullw	4
 37970   0075D2  50F3               	movf	243,w,c
 37971   0075D4  0F08               	addlw	8
 37972   0075D6  6FDC               	movwf	addEvent@evVal& (0+255),b
 37973   0075D8  0E01               	movlw	1
 37974   0075DA  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 37975   0075DC  ECEF  F031         	call	_addEvent	;wreg free
 37976                           
 37977                           ;../universalEvents.c: 141:             break;
 37978   0075E0  0012               	return	
 37979   0075E2                     l19714:
 37980                           
 37981                           ; BSR set to: 1
 37982                           ;../universalEvents.c: 145:             addEvent(nn.word, 100+en, 0, ((8 + 4*(io))+0), T
      +                          RUE);
 37983   0075E2  C0BF  F1D7         	movff	_nn,addEvent@nodeNumber
 37984   0075E6  C0C0  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 37985   0075EA  0E64               	movlw	100
 37986   0075EC  25E7               	addwf	defaultEvents@en& (0+255),w,b
 37987   0075EE  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 37988   0075F0  0E00               	movlw	0
 37989   0075F2  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 37990   0075F4  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 37991   0075F6  0E00               	movlw	0
 37992   0075F8  6FDB               	movwf	addEvent@evNum& (0+255),b
 37993   0075FA  51E9               	movf	defaultEvents@io& (0+255),w,b
 37994   0075FC  0D04               	mullw	4
 37995   0075FE  50F3               	movf	243,w,c
 37996   007600  0F08               	addlw	8
 37997   007602  6FDC               	movwf	addEvent@evVal& (0+255),b
 37998   007604  0E01               	movlw	1
 37999   007606  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38000   007608  ECEF  F031         	call	_addEvent	;wreg free
 38001                           
 38002                           ;../universalEvents.c: 146:             addEvent(nn.word, 300+en, 0, ((8 + 4*(io))+1), T
      +                          RUE);
 38003   00760C  C0BF  F1D7         	movff	_nn,addEvent@nodeNumber
 38004   007610  C0C0  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38005   007614  0E2C               	movlw	44
 38006   007616  0101               	movlb	1	; () banked
 38007   007618  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38008   00761A  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38009   00761C  0E01               	movlw	1
 38010   00761E  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38011   007620  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38012   007622  0E00               	movlw	0
 38013   007624  6FDB               	movwf	addEvent@evNum& (0+255),b
 38014   007626  51E9               	movf	defaultEvents@io& (0+255),w,b
 38015   007628  0D04               	mullw	4
 38016   00762A  50F3               	movf	243,w,c
 38017   00762C  0F09               	addlw	9
 38018   00762E  6FDC               	movwf	addEvent@evVal& (0+255),b
 38019   007630  0E01               	movlw	1
 38020   007632  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38021   007634  ECEF  F031         	call	_addEvent	;wreg free
 38022                           
 38023                           ;../universalEvents.c: 147:             addEvent(nn.word, 200+en, 0, ((8 + 4*(io))+2), T
      +                          RUE);
 38024   007638  C0BF  F1D7         	movff	_nn,addEvent@nodeNumber
 38025   00763C  C0C0  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38026   007640  0EC8               	movlw	200
 38027   007642  0101               	movlb	1	; () banked
 38028   007644  25E7               	addwf	defaultEvents@en& (0+255),w,b
 38029   007646  6FD9               	movwf	addEvent@eventNumber& (0+255),b
 38030   007648  0E00               	movlw	0
 38031   00764A  21E8               	addwfc	(defaultEvents@en+1)& (0+255),w,b
 38032   00764C  6FDA               	movwf	(addEvent@eventNumber+1)& (0+255),b
 38033   00764E  0E00               	movlw	0
 38034   007650  6FDB               	movwf	addEvent@evNum& (0+255),b
 38035   007652  51E9               	movf	defaultEvents@io& (0+255),w,b
 38036   007654  0D04               	mullw	4
 38037   007656  50F3               	movf	243,w,c
 38038   007658  0F0A               	addlw	10
 38039   00765A  6FDC               	movwf	addEvent@evVal& (0+255),b
 38040   00765C  0E01               	movlw	1
 38041   00765E  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38042   007660  ECEF  F031         	call	_addEvent	;wreg free
 38043                           
 38044                           ;../universalEvents.c: 149:             addEvent(nn.word, en, 1, ((8 + 5*(io))+0), TRUE)
      +                          ;
 38045   007664  C0BF  F1D7         	movff	_nn,addEvent@nodeNumber
 38046   007668  C0C0  F1D8         	movff	_nn+1,addEvent@nodeNumber+1
 38047   00766C  C1E7  F1D9         	movff	defaultEvents@en,addEvent@eventNumber
 38048   007670  C1E8  F1DA         	movff	defaultEvents@en+1,addEvent@eventNumber+1
 38049   007674  0E01               	movlw	1
 38050   007676  0101               	movlb	1	; () banked
 38051   007678  6FDB               	movwf	addEvent@evNum& (0+255),b
 38052   00767A  51E9               	movf	defaultEvents@io& (0+255),w,b
 38053   00767C  0D05               	mullw	5
 38054   00767E  50F3               	movf	243,w,c
 38055   007680  0F08               	addlw	8
 38056   007682  6FDC               	movwf	addEvent@evVal& (0+255),b
 38057   007684  0E01               	movlw	1
 38058   007686  6FDD               	movwf	addEvent@forceOwnNN& (0+255),b
 38059   007688  ECEF  F031         	call	_addEvent	;wreg free
 38060                           
 38061                           ;../universalEvents.c: 150:             break;
 38062   00768C  0012               	return	
 38063   00768E                     l19718:
 38064   00768E  0101               	movlb	1	; () banked
 38065   007690  51E6               	movf	defaultEvents@type& (0+255),w,b
 38066                           
 38067                           ; Switch size 1, requested type "simple"
 38068                           ; Number of cases is 5, Range of values is 0 to 4
 38069                           ; switch strategies available:
 38070                           ; Name         Instructions Cycles
 38071                           ; simple_byte           16     9 (average)
 38072                           ;	Chosen strategy is simple_byte
 38073   007692  0A00               	xorlw	0	; case 0
 38074   007694  B4D8               	btfsc	status,2,c
 38075   007696  D791               	goto	l19712
 38076   007698  0A01               	xorlw	1	; case 1
 38077   00769A  B4D8               	btfsc	status,2,c
 38078   00769C  D779               	goto	l645
 38079   00769E  0A03               	xorlw	3	; case 2
 38080   0076A0  B4D8               	btfsc	status,2,c
 38081   0076A2  D79F               	goto	l19714
 38082   0076A4  0A01               	xorlw	1	; case 3
 38083   0076A6  B4D8               	btfsc	status,2,c
 38084   0076A8  D75E               	goto	l19710
 38085   0076AA  0A07               	xorlw	7	; case 4
 38086   0076AC  0012               	return	
 38087   0076AE                     __end_of_defaultEvents:
 38088                           	callstack 0
 38089                           
 38090 ;; *************** function _clearEvents *****************
 38091 ;; Defined at:
 38092 ;;		line 222 in file "../universalEvents.c"
 38093 ;; Parameters:    Size  Location     Type
 38094 ;;  io              1    wreg     unsigned char 
 38095 ;; Auto vars:     Size  Location     Type
 38096 ;;  io              1   39[BANK1 ] unsigned char 
 38097 ;; Return value:  Size  Location     Type
 38098 ;;                  1    wreg      void 
 38099 ;; Registers used:
 38100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38101 ;; Tracked objects:
 38102 ;;		On entry : 0/0
 38103 ;;		On exit  : 0/0
 38104 ;;		Unchanged: 0/0
 38105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38107 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38109 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38110 ;;Total ram usage:        1 bytes
 38111 ;; Hardware stack levels used: 1
 38112 ;; Hardware stack levels required when called: 22
 38113 ;; This function calls:
 38114 ;;		_deleteActionRange
 38115 ;;		_deleteHappeningRange
 38116 ;; This function is called by:
 38117 ;;		_defaultEvents
 38118 ;; This function uses a non-reentrant model
 38119 ;;
 38120                           
 38121                           	psect	text163
 38122   00BB74                     __ptext163:
 38123                           	callstack 0
 38124   00BB74                     _clearEvents:
 38125                           	callstack 2
 38126                           
 38127                           ;incstack = 0
 38128                           ;clearEvents@io stored from wreg
 38129   00BB74  0101               	movlb	1	; () banked
 38130   00BB76  6FE1               	movwf	clearEvents@io& (0+255),b
 38131                           
 38132                           ;../universalEvents.c: 223:     deleteActionRange((uint8_t)(uint8_t)(8 + 5*(io)), 5);
 38133   00BB78  0E05               	movlw	5
 38134   00BB7A  0101               	movlb	1	; () banked
 38135   00BB7C  6FD7               	movwf	deleteActionRange@number& (0+255),b
 38136   00BB7E  51E1               	movf	clearEvents@io& (0+255),w,b
 38137   00BB80  0D05               	mullw	5
 38138   00BB82  50F3               	movf	243,w,c
 38139   00BB84  0F08               	addlw	8
 38140   00BB86  EC1D  F04B         	call	_deleteActionRange
 38141                           
 38142                           ;../universalEvents.c: 224:     deleteActionRange((uint8_t)(uint8_t)((8 + 5*(io)) | 0x80
      +                          ), 5);
 38143   00BB8A  0E05               	movlw	5
 38144   00BB8C  0101               	movlb	1	; () banked
 38145   00BB8E  6FD7               	movwf	deleteActionRange@number& (0+255),b
 38146   00BB90  51E1               	movf	clearEvents@io& (0+255),w,b
 38147   00BB92  0D05               	mullw	5
 38148   00BB94  50F3               	movf	243,w,c
 38149   00BB96  0F08               	addlw	8
 38150   00BB98  0980               	iorlw	128
 38151   00BB9A  EC1D  F04B         	call	_deleteActionRange
 38152                           
 38153                           ;../universalEvents.c: 225:     deleteHappeningRange((8 + 4*(io)), 4);
 38154   00BB9E  0E04               	movlw	4
 38155   00BBA0  0101               	movlb	1	; () banked
 38156   00BBA2  6FD7               	movwf	deleteHappeningRange@number& (0+255),b
 38157   00BBA4  51E1               	movf	clearEvents@io& (0+255),w,b
 38158   00BBA6  0D04               	mullw	4
 38159   00BBA8  50F3               	movf	243,w,c
 38160   00BBAA  0F08               	addlw	8
 38161   00BBAC  ECD1  F044         	call	_deleteHappeningRange
 38162   00BBB0  0012               	return		;funcret
 38163   00BBB2                     __end_of_clearEvents:
 38164                           	callstack 0
 38165                           
 38166 ;; *************** function _deleteHappeningRange *****************
 38167 ;; Defined at:
 38168 ;;		line 287 in file "../../VLCBlib_PIC/event_producer_happening.c"
 38169 ;; Parameters:    Size  Location     Type
 38170 ;;  happening       1    wreg     unsigned char 
 38171 ;;  number          1   29[BANK1 ] unsigned char 
 38172 ;; Auto vars:     Size  Location     Type
 38173 ;;  happening       1   35[BANK1 ] unsigned char 
 38174 ;;  h               1   36[BANK1 ] unsigned char 
 38175 ;;  f               1    0        struct .
 38176 ;;  tableIndex      1   37[BANK1 ] unsigned char 
 38177 ;; Return value:  Size  Location     Type
 38178 ;;                  1    wreg      void 
 38179 ;; Registers used:
 38180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38181 ;; Tracked objects:
 38182 ;;		On entry : 0/0
 38183 ;;		On exit  : 0/0
 38184 ;;		Unchanged: 0/0
 38185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38186 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38187 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38188 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38189 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38190 ;;Total ram usage:        9 bytes
 38191 ;; Hardware stack levels used: 1
 38192 ;; Hardware stack levels required when called: 21
 38193 ;; This function calls:
 38194 ;;		_checkRemoveTableEntry
 38195 ;;		_flushFlashBlock
 38196 ;;		_readNVM
 38197 ;;		_rebuildHashtable
 38198 ;;		_validStart
 38199 ;;		_writeEv
 38200 ;; This function is called by:
 38201 ;;		_clearEvents
 38202 ;; This function uses a non-reentrant model
 38203 ;;
 38204                           
 38205                           	psect	text164
 38206   0089A2                     __ptext164:
 38207                           	callstack 0
 38208   0089A2                     _deleteHappeningRange:
 38209                           	callstack 2
 38210                           
 38211                           ;incstack = 0
 38212                           ;deleteHappeningRange@happening stored from wreg
 38213   0089A2  0101               	movlb	1	; () banked
 38214   0089A4  6FDD               	movwf	deleteHappeningRange@happening& (0+255),b
 38215                           
 38216                           ;../../VLCBlib_PIC/event_producer_happening.c: 288:     uint8_t tableIndex;;../../VLCBli
      +                          b_PIC/event_producer_happening.c: 289:     for (tableIndex=0; tableIndex < 255; tableInd
      +                          ex++) {
 38217   0089A6  0E00               	movlw	0
 38218   0089A8  0101               	movlb	1	; () banked
 38219   0089AA  6FDF               	movwf	deleteHappeningRange@tableIndex& (0+255),b
 38220   0089AC                     l19428:
 38221                           
 38222                           ; BSR set to: 1
 38223                           ;../../VLCBlib_PIC/event_producer_happening.c: 290:         if ( validStart(tableIndex))
      +                           {
 38224   0089AC  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38225   0089AE  ECC0  F05B         	call	_validStart
 38226   0089B2  0900               	iorlw	0
 38227   0089B4  B4D8               	btfsc	status,2,c
 38228   0089B6  D059               	goto	l19440
 38229   0089B8  0101               	movlb	1	; () banked
 38230   0089BA  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38231   0089BC  6FD8               	movwf	??_deleteHappeningRange& (0+255),b
 38232   0089BE  6BD9               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38233   0089C0  3BD8               	swapf	??_deleteHappeningRange& (0+255),f,b
 38234   0089C2  3BD9               	swapf	(??_deleteHappeningRange+1)& (0+255),f,b
 38235   0089C4  0EF0               	movlw	240
 38236   0089C6  17D9               	andwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38237   0089C8  51D8               	movf	??_deleteHappeningRange& (0+255),w,b
 38238   0089CA  0B0F               	andlw	15
 38239   0089CC  13D9               	iorwf	(??_deleteHappeningRange+1)& (0+255),f,b
 38240   0089CE  0EF0               	movlw	240
 38241   0089D0  17D8               	andwf	??_deleteHappeningRange& (0+255),f,b
 38242   0089D2  0E80               	movlw	128
 38243   0089D4  25D8               	addwf	??_deleteHappeningRange& (0+255),w,b
 38244   0089D6  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38245   0089D8  0EEF               	movlw	239
 38246   0089DA  21D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38247   0089DC  6FDB               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38248   0089DE  C1DA  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38249   0089E2  C1DB  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38250   0089E6  0100               	movlb	0	; () banked
 38251   0089E8  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38252   0089EA  0E01               	movlw	1
 38253   0089EC  EC57  F059         	call	_readNVM
 38254                           
 38255                           ;../../VLCBlib_PIC/event_producer_happening.c: 295:             h = (Happening)readNVM(F
      +                          LASH_NVM_TYPE,
 38256   0089F0  0101               	movlb	1	; () banked
 38257   0089F2  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38258   0089F4  0D10               	mullw	16
 38259   0089F6  CFF3 F1D8          	movff	prodl,??_deleteHappeningRange
 38260   0089FA  CFF4 F1D9          	movff	prodh,??_deleteHappeningRange+1
 38261   0089FE  0E86               	movlw	134
 38262   008A00  25D8               	addwf	??_deleteHappeningRange& (0+255),w,b
 38263   008A02  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38264   008A04  0EEF               	movlw	239
 38265   008A06  21D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),w,b
 38266   008A08  6FDB               	movwf	(??_deleteHappeningRange+3)& (0+255),b
 38267   008A0A  C1DA  F091         	movff	??_deleteHappeningRange+2,readNVM@index
 38268   008A0E  C1DB  F092         	movff	??_deleteHappeningRange+3,readNVM@index+1
 38269   008A12  0100               	movlb	0	; () banked
 38270   008A14  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38271   008A16  0E01               	movlw	1
 38272   008A18  EC57  F059         	call	_readNVM
 38273   008A1C  0100               	movlb	0	; () banked
 38274   008A1E  5191               	movf	?_readNVM& (0+255),w,b
 38275   008A20  0101               	movlb	1	; () banked
 38276   008A22  6FDE               	movwf	deleteHappeningRange@h& (0+255),b
 38277                           
 38278                           ; BSR set to: 1
 38279                           ;../../VLCBlib_PIC/event_producer_happening.c: 297:             if ((h >= happening) && 
      +                          (h < happening+number)) {
 38280   008A24  51DD               	movf	deleteHappeningRange@happening& (0+255),w,b
 38281   008A26  5DDE               	subwf	deleteHappeningRange@h& (0+255),w,b
 38282   008A28  A0D8               	btfss	status,0,c
 38283   008A2A  D01F               	goto	l19440
 38284                           
 38285                           ; BSR set to: 1
 38286   008A2C  51D7               	movf	deleteHappeningRange@number& (0+255),w,b
 38287   008A2E  C1DD  F1D8         	movff	deleteHappeningRange@happening,??_deleteHappeningRange
 38288   008A32  6BD9               	clrf	(??_deleteHappeningRange+1)& (0+255),b
 38289   008A34  27D8               	addwf	??_deleteHappeningRange& (0+255),f,b
 38290   008A36  0E00               	movlw	0
 38291   008A38  23D9               	addwfc	(??_deleteHappeningRange+1)& (0+255),f,b
 38292   008A3A  51DE               	movf	deleteHappeningRange@h& (0+255),w,b
 38293   008A3C  6FDA               	movwf	(??_deleteHappeningRange+2)& (0+255),b
 38294   008A3E  6BDB               	clrf	(??_deleteHappeningRange+3)& (0+255),b
 38295   008A40  51D8               	movf	??_deleteHappeningRange& (0+255),w,b
 38296   008A42  5DDA               	subwf	(??_deleteHappeningRange+2)& (0+255),w,b
 38297   008A44  51DB               	movf	(??_deleteHappeningRange+3)& (0+255),w,b
 38298   008A46  0A80               	xorlw	128
 38299   008A48  6FDC               	movwf	(??_deleteHappeningRange+4)& (0+255),b
 38300   008A4A  51D9               	movf	(??_deleteHappeningRange+1)& (0+255),w,b
 38301   008A4C  0A80               	xorlw	128
 38302   008A4E  59DC               	subwfb	(??_deleteHappeningRange+4)& (0+255),w,b
 38303   008A50  B0D8               	btfsc	status,0,c
 38304   008A52  D00B               	goto	l19440
 38305                           
 38306                           ; BSR set to: 1
 38307                           ;../../VLCBlib_PIC/event_producer_happening.c: 298:                 writeEv(tableIndex, 
      +                          0, 0);
 38308   008A54  0E00               	movlw	0
 38309   008A56  6FCB               	movwf	writeEv@evNum& (0+255),b
 38310   008A58  0E00               	movlw	0
 38311   008A5A  6FCC               	movwf	writeEv@evVal& (0+255),b
 38312   008A5C  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38313   008A5E  ECF1  F018         	call	_writeEv
 38314                           
 38315                           ;../../VLCBlib_PIC/event_producer_happening.c: 299:                 checkRemoveTableEntr
      +                          y(tableIndex);
 38316   008A62  0101               	movlb	1	; () banked
 38317   008A64  51DF               	movf	deleteHappeningRange@tableIndex& (0+255),w,b
 38318   008A66  EC11  F05D         	call	_checkRemoveTableEntry
 38319   008A6A                     l19440:
 38320                           
 38321                           ;../../VLCBlib_PIC/event_producer_happening.c: 302:     }
 38322   008A6A  0101               	movlb	1	; () banked
 38323   008A6C  2BDF               	incf	deleteHappeningRange@tableIndex& (0+255),f,b
 38324                           
 38325                           ; BSR set to: 1
 38326   008A6E  29DF               	incf	deleteHappeningRange@tableIndex& (0+255),w,b
 38327   008A70  A4D8               	btfss	status,2,c
 38328   008A72  D79C               	goto	l19428
 38329                           
 38330                           ; BSR set to: 1
 38331                           ;../../VLCBlib_PIC/event_producer_happening.c: 303:     flushFlashBlock();
 38332   008A74  ECE6  F052         	call	_flushFlashBlock	;wreg free
 38333                           
 38334                           ;../../VLCBlib_PIC/event_producer_happening.c: 304:     rebuildHashtable();
 38335   008A78  EC8D  F03E         	call	_rebuildHashtable	;wreg free
 38336   008A7C  0012               	return		;funcret
 38337   008A7E                     __end_of_deleteHappeningRange:
 38338                           	callstack 0
 38339                           
 38340 ;; *************** function _deleteActionRange *****************
 38341 ;; Defined at:
 38342 ;;		line 529 in file "../event_consumerDualActionQueue.c"
 38343 ;; Parameters:    Size  Location     Type
 38344 ;;  action          1    wreg     unsigned char 
 38345 ;;  number          1   29[BANK1 ] unsigned char 
 38346 ;; Auto vars:     Size  Location     Type
 38347 ;;  action          1   36[BANK1 ] unsigned char 
 38348 ;;  e               1   37[BANK1 ] unsigned char 
 38349 ;;  updated         1   35[BANK1 ] enum E12760
 38350 ;;  tableIndex      1   38[BANK1 ] unsigned char 
 38351 ;; Return value:  Size  Location     Type
 38352 ;;                  1    wreg      void 
 38353 ;; Registers used:
 38354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38355 ;; Tracked objects:
 38356 ;;		On entry : 0/0
 38357 ;;		On exit  : 0/0
 38358 ;;		Unchanged: 0/0
 38359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38360 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38361 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38362 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38363 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38364 ;;Total ram usage:       10 bytes
 38365 ;; Hardware stack levels used: 1
 38366 ;; Hardware stack levels required when called: 21
 38367 ;; This function calls:
 38368 ;;		_checkRemoveTableEntry
 38369 ;;		_flushFlashBlock
 38370 ;;		_getEVs
 38371 ;;		_rebuildHashtable
 38372 ;;		_validStart
 38373 ;;		_writeEv
 38374 ;; This function is called by:
 38375 ;;		_clearEvents
 38376 ;; This function uses a non-reentrant model
 38377 ;;
 38378                           
 38379                           	psect	text165
 38380   00963A                     __ptext165:
 38381                           	callstack 0
 38382   00963A                     _deleteActionRange:
 38383                           	callstack 2
 38384                           
 38385                           ;incstack = 0
 38386                           ;deleteActionRange@action stored from wreg
 38387   00963A  0101               	movlb	1	; () banked
 38388   00963C  6FDE               	movwf	deleteActionRange@action& (0+255),b
 38389                           
 38390                           ;../event_consumerDualActionQueue.c: 530:     uint8_t tableIndex;;../event_consumerDualA
      +                          ctionQueue.c: 531:     for (tableIndex=0; tableIndex < 255; tableIndex++) {
 38391   00963E  0E00               	movlw	0
 38392   009640  0101               	movlb	1	; () banked
 38393   009642  6FE0               	movwf	deleteActionRange@tableIndex& (0+255),b
 38394   009644                     l19384:
 38395                           
 38396                           ; BSR set to: 1
 38397                           ;../event_consumerDualActionQueue.c: 532:         if (validStart(tableIndex)) {
 38398   009644  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38399   009646  ECC0  F05B         	call	_validStart
 38400   00964A  0900               	iorlw	0
 38401   00964C  B4D8               	btfsc	status,2,c
 38402   00964E  D044               	goto	l19414
 38403                           
 38404                           ;../event_consumerDualActionQueue.c: 533:             Boolean updated = FALSE;
 38405   009650  0E00               	movlw	0
 38406   009652  0101               	movlb	1	; () banked
 38407   009654  6FDD               	movwf	deleteActionRange@updated& (0+255),b
 38408                           
 38409                           ; BSR set to: 1
 38410                           ;../event_consumerDualActionQueue.c: 534:             uint8_t e;;../event_consumerDualAc
      +                          tionQueue.c: 535:             if (getEVs(tableIndex)) {
 38411   009656  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38412   009658  ECB2  F040         	call	_getEVs
 38413   00965C  0900               	iorlw	0
 38414   00965E  A4D8               	btfss	status,2,c
 38415   009660  0012               	return	
 38416                           
 38417                           ;../event_consumerDualActionQueue.c: 539:             for (e=1; e<20; e++) {
 38418   009662  0E01               	movlw	1
 38419   009664  0101               	movlb	1	; () banked
 38420   009666  6FDF               	movwf	deleteActionRange@e& (0+255),b
 38421   009668                     l19398:
 38422                           
 38423                           ; BSR set to: 1
 38424                           ;../event_consumerDualActionQueue.c: 540:                 if ((evs[e] >= action) && (evs
      +                          [e] < action+number)) {
 38425   009668  0E20               	movlw	low _evs
 38426   00966A  25DF               	addwf	deleteActionRange@e& (0+255),w,b
 38427   00966C  6ED9               	movwf	fsr2l,c
 38428   00966E  6ADA               	clrf	fsr2h,c
 38429   009670  0E02               	movlw	high _evs
 38430   009672  22DA               	addwfc	fsr2h,f,c
 38431   009674  51DE               	movf	deleteActionRange@action& (0+255),w,b
 38432   009676  5CDE               	subwf	postinc2,w,c
 38433   009678  A0D8               	btfss	status,0,c
 38434   00967A  D024               	goto	l19406
 38435                           
 38436                           ; BSR set to: 1
 38437   00967C  51D7               	movf	deleteActionRange@number& (0+255),w,b
 38438   00967E  C1DE  F1D8         	movff	deleteActionRange@action,??_deleteActionRange
 38439   009682  6BD9               	clrf	(??_deleteActionRange+1)& (0+255),b
 38440   009684  27D8               	addwf	??_deleteActionRange& (0+255),f,b
 38441   009686  0E00               	movlw	0
 38442   009688  23D9               	addwfc	(??_deleteActionRange+1)& (0+255),f,b
 38443   00968A  0E20               	movlw	low _evs
 38444   00968C  25DF               	addwf	deleteActionRange@e& (0+255),w,b
 38445   00968E  6ED9               	movwf	fsr2l,c
 38446   009690  6ADA               	clrf	fsr2h,c
 38447   009692  0E02               	movlw	high _evs
 38448   009694  22DA               	addwfc	fsr2h,f,c
 38449   009696  50DF               	movf	indf2,w,c
 38450   009698  6FDA               	movwf	(??_deleteActionRange+2)& (0+255),b
 38451   00969A  6BDB               	clrf	(??_deleteActionRange+3)& (0+255),b
 38452   00969C  51D8               	movf	??_deleteActionRange& (0+255),w,b
 38453   00969E  5DDA               	subwf	(??_deleteActionRange+2)& (0+255),w,b
 38454   0096A0  51DB               	movf	(??_deleteActionRange+3)& (0+255),w,b
 38455   0096A2  0A80               	xorlw	128
 38456   0096A4  6FDC               	movwf	(??_deleteActionRange+4)& (0+255),b
 38457   0096A6  51D9               	movf	(??_deleteActionRange+1)& (0+255),w,b
 38458   0096A8  0A80               	xorlw	128
 38459   0096AA  59DC               	subwfb	(??_deleteActionRange+4)& (0+255),w,b
 38460   0096AC  B0D8               	btfsc	status,0,c
 38461   0096AE  D00A               	goto	l19406
 38462                           
 38463                           ; BSR set to: 1
 38464                           ;../event_consumerDualActionQueue.c: 541:                     writeEv(tableIndex, e, 0);
 38465   0096B0  C1DF  F1CB         	movff	deleteActionRange@e,writeEv@evNum
 38466   0096B4  0E00               	movlw	0
 38467   0096B6  6FCC               	movwf	writeEv@evVal& (0+255),b
 38468   0096B8  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38469   0096BA  ECF1  F018         	call	_writeEv
 38470                           
 38471                           ;../event_consumerDualActionQueue.c: 542:                     updated = TRUE;
 38472   0096BE  0E01               	movlw	1
 38473   0096C0  0101               	movlb	1	; () banked
 38474   0096C2  6FDD               	movwf	deleteActionRange@updated& (0+255),b
 38475   0096C4                     l19406:
 38476                           
 38477                           ; BSR set to: 1
 38478                           ;../event_consumerDualActionQueue.c: 544:             }
 38479   0096C4  2BDF               	incf	deleteActionRange@e& (0+255),f,b
 38480                           
 38481                           ; BSR set to: 1
 38482   0096C6  0E13               	movlw	19
 38483   0096C8  65DF               	cpfsgt	deleteActionRange@e& (0+255),b
 38484   0096CA  D7CE               	goto	l19398
 38485                           
 38486                           ; BSR set to: 1
 38487                           ;../event_consumerDualActionQueue.c: 545:             if (updated) {
 38488   0096CC  51DD               	movf	deleteActionRange@updated& (0+255),w,b
 38489   0096CE  B4D8               	btfsc	status,2,c
 38490   0096D0  D003               	goto	l19414
 38491                           
 38492                           ; BSR set to: 1
 38493                           ;../event_consumerDualActionQueue.c: 546:                 checkRemoveTableEntry(tableInd
      +                          ex);
 38494   0096D2  51E0               	movf	deleteActionRange@tableIndex& (0+255),w,b
 38495   0096D4  EC11  F05D         	call	_checkRemoveTableEntry
 38496   0096D8                     l19414:
 38497                           
 38498                           ;../event_consumerDualActionQueue.c: 549:     }
 38499   0096D8  0101               	movlb	1	; () banked
 38500   0096DA  2BE0               	incf	deleteActionRange@tableIndex& (0+255),f,b
 38501                           
 38502                           ; BSR set to: 1
 38503   0096DC  29E0               	incf	deleteActionRange@tableIndex& (0+255),w,b
 38504   0096DE  A4D8               	btfss	status,2,c
 38505   0096E0  D7B1               	goto	l19384
 38506                           
 38507                           ; BSR set to: 1
 38508                           ;../event_consumerDualActionQueue.c: 550:     flushFlashBlock();
 38509   0096E2  ECE6  F052         	call	_flushFlashBlock	;wreg free
 38510                           
 38511                           ;../event_consumerDualActionQueue.c: 552:     rebuildHashtable();
 38512   0096E6  EC8D  F03E         	call	_rebuildHashtable	;wreg free
 38513   0096EA  0012               	return		;funcret
 38514   0096EC                     __end_of_deleteActionRange:
 38515                           	callstack 0
 38516                           
 38517 ;; *************** function _addEvent *****************
 38518 ;; Defined at:
 38519 ;;		line 938 in file "../../VLCBlib_PIC/event_teach_large.c"
 38520 ;; Parameters:    Size  Location     Type
 38521 ;;  nodeNumber      2   29[BANK1 ] unsigned short 
 38522 ;;  eventNumber     2   31[BANK1 ] unsigned short 
 38523 ;;  evNum           1   33[BANK1 ] unsigned char 
 38524 ;;  evVal           1   34[BANK1 ] unsigned char 
 38525 ;;  forceOwnNN      1   35[BANK1 ] enum E12760
 38526 ;; Auto vars:     Size  Location     Type
 38527 ;;  e               1   42[BANK1 ] unsigned char 
 38528 ;;  f               1   41[BANK1 ] struct .
 38529 ;;  tableIndex      1   43[BANK1 ] unsigned char 
 38530 ;;  error           1   40[BANK1 ] unsigned char 
 38531 ;; Return value:  Size  Location     Type
 38532 ;;                  1    wreg      unsigned char 
 38533 ;; Registers used:
 38534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38535 ;; Tracked objects:
 38536 ;;		On entry : 0/0
 38537 ;;		On exit  : 0/0
 38538 ;;		Unchanged: 0/0
 38539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38540 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38541 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38542 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38543 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38544 ;;Total ram usage:       15 bytes
 38545 ;; Hardware stack levels used: 1
 38546 ;; Hardware stack levels required when called: 21
 38547 ;; This function calls:
 38548 ;;		_findEvent
 38549 ;;		_flushFlashBlock
 38550 ;;		_readNVM
 38551 ;;		_rebuildHashtable
 38552 ;;		_writeEv
 38553 ;;		_writeNVM
 38554 ;; This function is called by:
 38555 ;;		_defaultEvents
 38556 ;;		_APP_addEvent
 38557 ;; This function uses a non-reentrant model
 38558 ;;
 38559                           
 38560                           	psect	text166
 38561   0063DE                     __ptext166:
 38562                           	callstack 0
 38563   0063DE                     _addEvent:
 38564                           	callstack 5
 38565                           
 38566                           ;../../VLCBlib_PIC/event_teach_large.c: 939:     uint8_t tableIndex;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 940:     uint8_t error;;../../VLCBlib_PIC/event_teach_large.c: 942: 
      +                              tableIndex = findEvent(nodeNumber, eventNumber);
 38567                           
 38568                           ;incstack = 0
 38569   0063DE  C1D7  F1BA         	movff	addEvent@nodeNumber,findEvent@nodeNumber
 38570   0063E2  C1D8  F1BB         	movff	addEvent@nodeNumber+1,findEvent@nodeNumber+1
 38571   0063E6  C1D9  F1BC         	movff	addEvent@eventNumber,findEvent@eventNumber
 38572   0063EA  C1DA  F1BD         	movff	addEvent@eventNumber+1,findEvent@eventNumber+1
 38573   0063EE  EC42  F051         	call	_findEvent	;wreg free
 38574   0063F2  0101               	movlb	1	; () banked
 38575   0063F4  6FE5               	movwf	addEvent@tableIndex& (0+255),b
 38576                           
 38577                           ; BSR set to: 1
 38578                           ;../../VLCBlib_PIC/event_teach_large.c: 943:     if (tableIndex == 0xff) {
 38579   0063F6  29E5               	incf	addEvent@tableIndex& (0+255),w,b
 38580   0063F8  A4D8               	btfss	status,2,c
 38581   0063FA  D0E2               	goto	l19550
 38582                           
 38583                           ; BSR set to: 1
 38584                           ;../../VLCBlib_PIC/event_teach_large.c: 949:         if (evVal == 0) {
 38585   0063FC  51DC               	movf	addEvent@evVal& (0+255),w,b
 38586   0063FE  A4D8               	btfss	status,2,c
 38587   006400  D002               	goto	l19508
 38588   006402                     u19410:
 38589                           
 38590                           ;../../VLCBlib_PIC/event_teach_large.c: 950:             return 0;
 38591   006402  0E00               	movlw	0
 38592   006404  0012               	return	
 38593   006406                     l19508:
 38594                           
 38595                           ; BSR set to: 1
 38596                           ;../../VLCBlib_PIC/event_teach_large.c: 952:         error = 1;
 38597   006406  0E01               	movlw	1
 38598   006408  6FE2               	movwf	addEvent@error& (0+255),b
 38599                           
 38600                           ;../../VLCBlib_PIC/event_teach_large.c: 954:         for (tableIndex=0; tableIndex<255; 
      +                          tableIndex++) {
 38601   00640A  0E00               	movlw	0
 38602   00640C  6FE5               	movwf	addEvent@tableIndex& (0+255),b
 38603   00640E                     l19514:
 38604                           
 38605                           ; BSR set to: 1
 38606                           ;../../VLCBlib_PIC/event_teach_large.c: 955:             EventTableFlags f;;../../VLCBli
      +                          b_PIC/event_teach_large.c: 956:             f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+0);
 38607   00640E  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38608   006410  6FDE               	movwf	??_addEvent& (0+255),b
 38609   006412  6BDF               	clrf	(??_addEvent+1)& (0+255),b
 38610   006414  3BDE               	swapf	??_addEvent& (0+255),f,b
 38611   006416  3BDF               	swapf	(??_addEvent+1)& (0+255),f,b
 38612   006418  0EF0               	movlw	240
 38613   00641A  17DF               	andwf	(??_addEvent+1)& (0+255),f,b
 38614   00641C  51DE               	movf	??_addEvent& (0+255),w,b
 38615   00641E  0B0F               	andlw	15
 38616   006420  13DF               	iorwf	(??_addEvent+1)& (0+255),f,b
 38617   006422  0EF0               	movlw	240
 38618   006424  17DE               	andwf	??_addEvent& (0+255),f,b
 38619   006426  0E80               	movlw	128
 38620   006428  25DE               	addwf	??_addEvent& (0+255),w,b
 38621   00642A  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38622   00642C  0EEF               	movlw	239
 38623   00642E  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38624   006430  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38625   006432  C1E0  F091         	movff	??_addEvent+2,readNVM@index
 38626   006436  C1E1  F092         	movff	??_addEvent+3,readNVM@index+1
 38627   00643A  0100               	movlb	0	; () banked
 38628   00643C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38629   00643E  0E01               	movlw	1
 38630   006440  EC57  F059         	call	_readNVM
 38631   006444  0100               	movlb	0	; () banked
 38632   006446  5191               	movf	?_readNVM& (0+255),w,b
 38633   006448  0101               	movlb	1	; () banked
 38634   00644A  6FE3               	movwf	addEvent@f& (0+255),b
 38635                           
 38636                           ; BSR set to: 1
 38637                           ;../../VLCBlib_PIC/event_teach_large.c: 957:             if (f.freeEntry) {
 38638   00644C  AFE3               	btfss	addEvent@f& (0+255),7,b
 38639   00644E  D0AF               	goto	l19540
 38640                           
 38641                           ; BSR set to: 1
 38642                           ;../../VLCBlib_PIC/event_teach_large.c: 958:                 uint8_t e;;../../VLCBlib_PI
      +                          C/event_teach_large.c: 960:                 writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIn
      +                          dex+2, nodeNumber&0xFF);
 38643   006450  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38644   006452  0D10               	mullw	16
 38645   006454  CFF3 F1DE          	movff	prodl,??_addEvent
 38646   006458  CFF4 F1DF          	movff	prodh,??_addEvent+1
 38647   00645C  0E82               	movlw	130
 38648   00645E  25DE               	addwf	??_addEvent& (0+255),w,b
 38649   006460  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38650   006462  0EEF               	movlw	239
 38651   006464  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38652   006466  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38653   006468  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 38654   00646C  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38655   006470  0100               	movlb	0	; () banked
 38656   006472  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38657   006474  C1D7  F0A7         	movff	addEvent@nodeNumber,writeNVM@value
 38658   006478  0E01               	movlw	1
 38659   00647A  ECE7  F05B         	call	_writeNVM
 38660                           
 38661                           ;../../VLCBlib_PIC/event_teach_large.c: 961:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+2 +1, nodeNumber>>8);
 38662   00647E  0101               	movlb	1	; () banked
 38663   006480  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38664   006482  0D10               	mullw	16
 38665   006484  CFF3 F1DE          	movff	prodl,??_addEvent
 38666   006488  CFF4 F1DF          	movff	prodh,??_addEvent+1
 38667   00648C  0E83               	movlw	131
 38668   00648E  25DE               	addwf	??_addEvent& (0+255),w,b
 38669   006490  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38670   006492  0EEF               	movlw	239
 38671   006494  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38672   006496  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38673   006498  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 38674   00649C  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38675   0064A0  0100               	movlb	0	; () banked
 38676   0064A2  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38677   0064A4  0101               	movlb	1	; () banked
 38678   0064A6  51D8               	movf	(addEvent@nodeNumber+1)& (0+255),w,b
 38679   0064A8  0100               	movlb	0	; () banked
 38680   0064AA  6FA7               	movwf	writeNVM@value& (0+255),b
 38681   0064AC  0E01               	movlw	1
 38682   0064AE  ECE7  F05B         	call	_writeNVM
 38683                           
 38684                           ;../../VLCBlib_PIC/event_teach_large.c: 962:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4, eventNumber&0xFF);
 38685   0064B2  0101               	movlb	1	; () banked
 38686   0064B4  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38687   0064B6  0D10               	mullw	16
 38688   0064B8  CFF3 F1DE          	movff	prodl,??_addEvent
 38689   0064BC  CFF4 F1DF          	movff	prodh,??_addEvent+1
 38690   0064C0  0E84               	movlw	132
 38691   0064C2  25DE               	addwf	??_addEvent& (0+255),w,b
 38692   0064C4  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38693   0064C6  0EEF               	movlw	239
 38694   0064C8  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38695   0064CA  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38696   0064CC  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 38697   0064D0  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38698   0064D4  0100               	movlb	0	; () banked
 38699   0064D6  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38700   0064D8  C1D9  F0A7         	movff	addEvent@eventNumber,writeNVM@value
 38701   0064DC  0E01               	movlw	1
 38702   0064DE  ECE7  F05B         	call	_writeNVM
 38703                           
 38704                           ;../../VLCBlib_PIC/event_teach_large.c: 963:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+4 +1, eventNumber>>8);
 38705   0064E2  0101               	movlb	1	; () banked
 38706   0064E4  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38707   0064E6  0D10               	mullw	16
 38708   0064E8  CFF3 F1DE          	movff	prodl,??_addEvent
 38709   0064EC  CFF4 F1DF          	movff	prodh,??_addEvent+1
 38710   0064F0  0E85               	movlw	133
 38711   0064F2  25DE               	addwf	??_addEvent& (0+255),w,b
 38712   0064F4  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38713   0064F6  0EEF               	movlw	239
 38714   0064F8  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38715   0064FA  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38716   0064FC  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 38717   006500  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38718   006504  0100               	movlb	0	; () banked
 38719   006506  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38720   006508  0101               	movlb	1	; () banked
 38721   00650A  51DA               	movf	(addEvent@eventNumber+1)& (0+255),w,b
 38722   00650C  0100               	movlb	0	; () banked
 38723   00650E  6FA7               	movwf	writeNVM@value& (0+255),b
 38724   006510  0E01               	movlw	1
 38725   006512  ECE7  F05B         	call	_writeNVM
 38726                           
 38727                           ;../../VLCBlib_PIC/event_teach_large.c: 964:                 f.asByte = 0;
 38728   006516  0E00               	movlw	0
 38729   006518  0101               	movlb	1	; () banked
 38730   00651A  6FE3               	movwf	addEvent@f& (0+255),b
 38731                           
 38732                           ; BSR set to: 1
 38733                           ;../../VLCBlib_PIC/event_teach_large.c: 965:                 f.forceOwnNN = forceOwnNN;
 38734   00651C  B1DD               	btfsc	addEvent@forceOwnNN& (0+255),0,b
 38735   00651E  D002               	bra	u19435
 38736   006520  9DE3               	bcf	addEvent@f& (0+255),6,b
 38737   006522  D002               	bra	u19436
 38738   006524                     u19435:
 38739   006524  0101               	movlb	1	; () banked
 38740   006526  8DE3               	bsf	addEvent@f& (0+255),6,b
 38741   006528                     u19436:
 38742                           
 38743                           ; BSR set to: 1
 38744                           ;../../VLCBlib_PIC/event_teach_large.c: 966:                 writeNVM(FLASH_NVM_TYPE, 0x
      +                          EF80 + 16*tableIndex+0, f.asByte);
 38745   006528  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38746   00652A  6FDE               	movwf	??_addEvent& (0+255),b
 38747   00652C  6BDF               	clrf	(??_addEvent+1)& (0+255),b
 38748   00652E  3BDE               	swapf	??_addEvent& (0+255),f,b
 38749   006530  3BDF               	swapf	(??_addEvent+1)& (0+255),f,b
 38750   006532  0EF0               	movlw	240
 38751   006534  17DF               	andwf	(??_addEvent+1)& (0+255),f,b
 38752   006536  51DE               	movf	??_addEvent& (0+255),w,b
 38753   006538  0B0F               	andlw	15
 38754   00653A  13DF               	iorwf	(??_addEvent+1)& (0+255),f,b
 38755   00653C  0EF0               	movlw	240
 38756   00653E  17DE               	andwf	??_addEvent& (0+255),f,b
 38757   006540  0E80               	movlw	128
 38758   006542  25DE               	addwf	??_addEvent& (0+255),w,b
 38759   006544  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38760   006546  0EEF               	movlw	239
 38761   006548  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38762   00654A  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38763   00654C  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 38764   006550  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38765   006554  0100               	movlb	0	; () banked
 38766   006556  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38767   006558  C1E3  F0A7         	movff	addEvent@f,writeNVM@value
 38768   00655C  0E01               	movlw	1
 38769   00655E  ECE7  F05B         	call	_writeNVM
 38770                           
 38771                           ;../../VLCBlib_PIC/event_teach_large.c: 968:                 for (e = 0; e < 10; e++) {
 38772   006562  0E00               	movlw	0
 38773   006564  0101               	movlb	1	; () banked
 38774   006566  6FE4               	movwf	addEvent@e& (0+255),b
 38775   006568                     l19532:
 38776                           
 38777                           ; BSR set to: 1
 38778                           ;../../VLCBlib_PIC/event_teach_large.c: 969:                     writeNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +e, 0);
 38779   006568  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38780   00656A  0D10               	mullw	16
 38781   00656C  CFF3 F1DE          	movff	prodl,??_addEvent
 38782   006570  CFF4 F1DF          	movff	prodh,??_addEvent+1
 38783   006574  51E4               	movf	addEvent@e& (0+255),w,b
 38784   006576  27DE               	addwf	??_addEvent& (0+255),f,b
 38785   006578  0E00               	movlw	0
 38786   00657A  23DF               	addwfc	(??_addEvent+1)& (0+255),f,b
 38787   00657C  0E86               	movlw	134
 38788   00657E  25DE               	addwf	??_addEvent& (0+255),w,b
 38789   006580  6FE0               	movwf	(??_addEvent+2)& (0+255),b
 38790   006582  0EEF               	movlw	239
 38791   006584  21DF               	addwfc	(??_addEvent+1)& (0+255),w,b
 38792   006586  6FE1               	movwf	(??_addEvent+3)& (0+255),b
 38793   006588  C1E0  F0A4         	movff	??_addEvent+2,writeNVM@index
 38794   00658C  C1E1  F0A5         	movff	??_addEvent+3,writeNVM@index+1
 38795   006590  0100               	movlb	0	; () banked
 38796   006592  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 38797   006594  0E00               	movlw	0
 38798   006596  6FA7               	movwf	writeNVM@value& (0+255),b
 38799   006598  0E01               	movlw	1
 38800   00659A  ECE7  F05B         	call	_writeNVM
 38801                           
 38802                           ;../../VLCBlib_PIC/event_teach_large.c: 970:                 }
 38803   00659E  0101               	movlb	1	; () banked
 38804   0065A0  2BE4               	incf	addEvent@e& (0+255),f,b
 38805                           
 38806                           ; BSR set to: 1
 38807   0065A2  0E09               	movlw	9
 38808   0065A4  65E4               	cpfsgt	addEvent@e& (0+255),b
 38809   0065A6  D7E0               	goto	l19532
 38810                           
 38811                           ; BSR set to: 1
 38812                           ;../../VLCBlib_PIC/event_teach_large.c: 971:                 error = 0;
 38813   0065A8  0E00               	movlw	0
 38814   0065AA  6FE2               	movwf	addEvent@error& (0+255),b
 38815                           
 38816                           ;../../VLCBlib_PIC/event_teach_large.c: 972:                 break;
 38817   0065AC  D004               	goto	u19450
 38818   0065AE                     l19540:
 38819                           
 38820                           ; BSR set to: 1
 38821                           ;../../VLCBlib_PIC/event_teach_large.c: 974:         }
 38822   0065AE  2BE5               	incf	addEvent@tableIndex& (0+255),f,b
 38823                           
 38824                           ; BSR set to: 1
 38825   0065B0  29E5               	incf	addEvent@tableIndex& (0+255),w,b
 38826   0065B2  A4D8               	btfss	status,2,c
 38827   0065B4  D72C               	goto	l19514
 38828   0065B6                     u19450:
 38829                           
 38830                           ; BSR set to: 1
 38831                           ;../../VLCBlib_PIC/event_teach_large.c: 975:         if (error) {
 38832   0065B6  51E2               	movf	addEvent@error& (0+255),w,b
 38833   0065B8  B4D8               	btfsc	status,2,c
 38834   0065BA  D002               	goto	l19550
 38835                           
 38836                           ; BSR set to: 1
 38837                           ;../../VLCBlib_PIC/event_teach_large.c: 976:             return CMDERR_TOO_MANY_EVENTS;
 38838   0065BC  0E04               	movlw	4
 38839   0065BE  0012               	return	
 38840   0065C0                     l19550:
 38841                           
 38842                           ; BSR set to: 1
 38843                           ;../../VLCBlib_PIC/event_teach_large.c: 980:     if (writeEv(tableIndex, evNum, evVal)) 
      +                          {
 38844   0065C0  C1DB  F1CB         	movff	addEvent@evNum,writeEv@evNum
 38845   0065C4  C1DC  F1CC         	movff	addEvent@evVal,writeEv@evVal
 38846   0065C8  51E5               	movf	addEvent@tableIndex& (0+255),w,b
 38847   0065CA  ECF1  F018         	call	_writeEv
 38848   0065CE  0900               	iorlw	0
 38849   0065D0  B4D8               	btfsc	status,2,c
 38850   0065D2  D002               	goto	l19556
 38851                           
 38852                           ;../../VLCBlib_PIC/event_teach_large.c: 982:         return CMDERR_INV_EV_IDX;
 38853   0065D4  0E06               	movlw	6
 38854   0065D6  0012               	return	
 38855   0065D8                     l19556:
 38856                           
 38857                           ;../../VLCBlib_PIC/event_teach_large.c: 985:     flushFlashBlock();
 38858   0065D8  ECE6  F052         	call	_flushFlashBlock	;wreg free
 38859                           
 38860                           ;../../VLCBlib_PIC/event_teach_large.c: 987:     rebuildHashtable();
 38861   0065DC  EC8D  F03E         	call	_rebuildHashtable	;wreg free
 38862   0065E0  D710               	goto	u19410
 38863   0065E2                     __end_of_addEvent:
 38864                           	callstack 0
 38865                           
 38866 ;; *************** function _writeEv *****************
 38867 ;; Defined at:
 38868 ;;		line 1039 in file "../../VLCBlib_PIC/event_teach_large.c"
 38869 ;; Parameters:    Size  Location     Type
 38870 ;;  tableIndex      1    wreg     unsigned char 
 38871 ;;  evNum           1   17[BANK1 ] unsigned char 
 38872 ;;  evVal           1   18[BANK1 ] unsigned char 
 38873 ;; Auto vars:     Size  Location     Type
 38874 ;;  tableIndex      1   27[BANK1 ] unsigned char 
 38875 ;;  e               1   25[BANK1 ] unsigned char 
 38876 ;;  nextF           1   24[BANK1 ] struct .
 38877 ;;  nextIdx         1   28[BANK1 ] unsigned char 
 38878 ;;  f               1   26[BANK1 ] struct .
 38879 ;;  startIndex      1   23[BANK1 ] unsigned char 
 38880 ;; Return value:  Size  Location     Type
 38881 ;;                  1    wreg      unsigned char 
 38882 ;; Registers used:
 38883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38884 ;; Tracked objects:
 38885 ;;		On entry : 0/0
 38886 ;;		On exit  : 0/0
 38887 ;;		Unchanged: 0/0
 38888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38889 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38890 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38891 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38892 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38893 ;;Total ram usage:       12 bytes
 38894 ;; Hardware stack levels used: 1
 38895 ;; Hardware stack levels required when called: 20
 38896 ;; This function calls:
 38897 ;;		_checkRemoveTableEntry
 38898 ;;		_readNVM
 38899 ;;		_writeNVM
 38900 ;; This function is called by:
 38901 ;;		_deleteActionRange
 38902 ;;		_APP_addEvent
 38903 ;;		_addEvent
 38904 ;;		_deleteHappeningRange
 38905 ;; This function uses a non-reentrant model
 38906 ;;
 38907                           
 38908                           	psect	text167
 38909   0031E2                     __ptext167:
 38910                           	callstack 0
 38911   0031E2                     _writeEv:
 38912                           	callstack 6
 38913                           
 38914                           ;incstack = 0
 38915                           ;writeEv@tableIndex stored from wreg
 38916   0031E2  0101               	movlb	1	; () banked
 38917   0031E4  6FD5               	movwf	writeEv@tableIndex& (0+255),b
 38918                           
 38919                           ;../../VLCBlib_PIC/event_teach_large.c: 1040:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1041:     uint8_t startIndex = tableIndex;
 38920   0031E6  C1D5  F1D1         	movff	writeEv@tableIndex,writeEv@startIndex
 38921                           
 38922                           ;../../VLCBlib_PIC/event_teach_large.c: 1042:     if (evNum >= 20) {
 38923   0031EA  0E13               	movlw	19
 38924   0031EC  0101               	movlb	1	; () banked
 38925   0031EE  65CB               	cpfsgt	writeEv@evNum& (0+255),b
 38926   0031F0  D14F               	goto	l19192
 38927                           
 38928                           ; BSR set to: 1
 38929                           ;../../VLCBlib_PIC/event_teach_large.c: 1043:         return CMDERR_INV_EV_IDX;
 38930   0031F2  0E06               	movlw	6
 38931   0031F4  0012               	return	
 38932   0031F6                     l19130:
 38933                           
 38934                           ; BSR set to: 1
 38935                           ;../../VLCBlib_PIC/event_teach_large.c: 1046:         uint8_t nextIdx;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1049:         evNum -= 10;
 38936   0031F6  0E0A               	movlw	10
 38937   0031F8  5FCB               	subwf	writeEv@evNum& (0+255),f,b
 38938                           
 38939                           ; BSR set to: 1
 38940                           ;../../VLCBlib_PIC/event_teach_large.c: 1050:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 38941   0031FA  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 38942   0031FC  6FCD               	movwf	??_writeEv& (0+255),b
 38943   0031FE  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 38944   003200  3BCD               	swapf	??_writeEv& (0+255),f,b
 38945   003202  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 38946   003204  0EF0               	movlw	240
 38947   003206  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 38948   003208  51CD               	movf	??_writeEv& (0+255),w,b
 38949   00320A  0B0F               	andlw	15
 38950   00320C  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 38951   00320E  0EF0               	movlw	240
 38952   003210  17CD               	andwf	??_writeEv& (0+255),f,b
 38953   003212  0E80               	movlw	128
 38954   003214  25CD               	addwf	??_writeEv& (0+255),w,b
 38955   003216  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 38956   003218  0EEF               	movlw	239
 38957   00321A  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 38958   00321C  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 38959   00321E  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 38960   003222  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 38961   003226  0100               	movlb	0	; () banked
 38962   003228  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38963   00322A  0E01               	movlw	1
 38964   00322C  EC57  F059         	call	_readNVM
 38965   003230  0100               	movlb	0	; () banked
 38966   003232  5191               	movf	?_readNVM& (0+255),w,b
 38967   003234  0101               	movlb	1	; () banked
 38968   003236  6FD4               	movwf	writeEv@f& (0+255),b
 38969                           
 38970                           ; BSR set to: 1
 38971                           ;../../VLCBlib_PIC/event_teach_large.c: 1052:         if (f.continued) {
 38972   003238  A9D4               	btfss	writeEv@f& (0+255),4,b
 38973   00323A  D01E               	goto	l19144
 38974                           
 38975                           ; BSR set to: 1
 38976                           ;../../VLCBlib_PIC/event_teach_large.c: 1053:             tableIndex = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 38977   00323C  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 38978   00323E  0D10               	mullw	16
 38979   003240  CFF3 F1CD          	movff	prodl,??_writeEv
 38980   003244  CFF4 F1CE          	movff	prodh,??_writeEv+1
 38981   003248  0E81               	movlw	129
 38982   00324A  25CD               	addwf	??_writeEv& (0+255),w,b
 38983   00324C  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 38984   00324E  0EEF               	movlw	239
 38985   003250  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 38986   003252  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 38987   003254  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 38988   003258  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 38989   00325C  0100               	movlb	0	; () banked
 38990   00325E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 38991   003260  0E01               	movlw	1
 38992   003262  EC57  F059         	call	_readNVM
 38993   003266  0100               	movlb	0	; () banked
 38994   003268  5191               	movf	?_readNVM& (0+255),w,b
 38995   00326A  0101               	movlb	1	; () banked
 38996   00326C  6FD5               	movwf	writeEv@tableIndex& (0+255),b
 38997                           
 38998                           ; BSR set to: 1
 38999                           ;../../VLCBlib_PIC/event_teach_large.c: 1054:             if (tableIndex == 0xff) {
 39000   00326E  29D5               	incf	writeEv@tableIndex& (0+255),w,b
 39001   003270  A4D8               	btfss	status,2,c
 39002   003272  D10E               	goto	l19192
 39003                           
 39004                           ; BSR set to: 1
 39005                           ;../../VLCBlib_PIC/event_teach_large.c: 1055:                 return CMDERR_INVALID_EVEN
      +                          T;
 39006   003274  0E07               	movlw	7
 39007   003276  0012               	return	
 39008   003278                     l19144:
 39009                           
 39010                           ; BSR set to: 1
 39011                           ;../../VLCBlib_PIC/event_teach_large.c: 1064:             if (evVal == 0) {
 39012   003278  51CC               	movf	writeEv@evVal& (0+255),w,b
 39013   00327A  A4D8               	btfss	status,2,c
 39014   00327C  D002               	goto	l19150
 39015   00327E                     u18860:
 39016                           
 39017                           ;../../VLCBlib_PIC/event_teach_large.c: 1065:                 return 0;
 39018   00327E  0E00               	movlw	0
 39019   003280  0012               	return	
 39020   003282                     l19150:
 39021                           
 39022                           ; BSR set to: 1
 39023                           ;../../VLCBlib_PIC/event_teach_large.c: 1068:             for (nextIdx = tableIndex+1 ; 
      +                          nextIdx < 255; nextIdx++) {
 39024   003282  29D5               	incf	writeEv@tableIndex& (0+255),w,b
 39025   003284  6FD6               	movwf	writeEv@nextIdx& (0+255),b
 39026   003286  D0FB               	goto	l19184
 39027   003288                     l19154:
 39028                           
 39029                           ; BSR set to: 1
 39030                           ;../../VLCBlib_PIC/event_teach_large.c: 1069:                 EventTableFlags nextF;;../
      +                          ../VLCBlib_PIC/event_teach_large.c: 1070:                 nextF.asByte = (uint8_t)readNV
      +                          M(FLASH_NVM_TYPE, 0xEF80 + 16*nextIdx+0);
 39031   003288  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39032   00328A  6FCD               	movwf	??_writeEv& (0+255),b
 39033   00328C  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39034   00328E  3BCD               	swapf	??_writeEv& (0+255),f,b
 39035   003290  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39036   003292  0EF0               	movlw	240
 39037   003294  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39038   003296  51CD               	movf	??_writeEv& (0+255),w,b
 39039   003298  0B0F               	andlw	15
 39040   00329A  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39041   00329C  0EF0               	movlw	240
 39042   00329E  17CD               	andwf	??_writeEv& (0+255),f,b
 39043   0032A0  0E80               	movlw	128
 39044   0032A2  25CD               	addwf	??_writeEv& (0+255),w,b
 39045   0032A4  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39046   0032A6  0EEF               	movlw	239
 39047   0032A8  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39048   0032AA  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39049   0032AC  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39050   0032B0  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39051   0032B4  0100               	movlb	0	; () banked
 39052   0032B6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39053   0032B8  0E01               	movlw	1
 39054   0032BA  EC57  F059         	call	_readNVM
 39055   0032BE  0100               	movlb	0	; () banked
 39056   0032C0  5191               	movf	?_readNVM& (0+255),w,b
 39057   0032C2  0101               	movlb	1	; () banked
 39058   0032C4  6FD2               	movwf	writeEv@nextF& (0+255),b
 39059                           
 39060                           ; BSR set to: 1
 39061                           ;../../VLCBlib_PIC/event_teach_large.c: 1071:                 if (nextF.freeEntry) {
 39062   0032C6  AFD2               	btfss	writeEv@nextF& (0+255),7,b
 39063   0032C8  D0D9               	goto	l19182
 39064                           
 39065                           ; BSR set to: 1
 39066                           ;../../VLCBlib_PIC/event_teach_large.c: 1072:                     uint8_t e;;../../VLCBl
      +                          ib_PIC/event_teach_large.c: 1074:                     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*nextIdx+2, 0xff);
 39067   0032CA  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39068   0032CC  0D10               	mullw	16
 39069   0032CE  CFF3 F1CD          	movff	prodl,??_writeEv
 39070   0032D2  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39071   0032D6  0E82               	movlw	130
 39072   0032D8  25CD               	addwf	??_writeEv& (0+255),w,b
 39073   0032DA  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39074   0032DC  0EEF               	movlw	239
 39075   0032DE  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39076   0032E0  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39077   0032E2  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39078   0032E6  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39079   0032EA  0100               	movlb	0	; () banked
 39080   0032EC  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39081   0032EE  0EFF               	movlw	255
 39082   0032F0  6FA7               	movwf	writeNVM@value& (0+255),b
 39083   0032F2  0E01               	movlw	1
 39084   0032F4  ECE7  F05B         	call	_writeNVM
 39085                           
 39086                           ;../../VLCBlib_PIC/event_teach_large.c: 1075:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+2 +1, 0xff);
 39087   0032F8  0101               	movlb	1	; () banked
 39088   0032FA  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39089   0032FC  0D10               	mullw	16
 39090   0032FE  CFF3 F1CD          	movff	prodl,??_writeEv
 39091   003302  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39092   003306  0E83               	movlw	131
 39093   003308  25CD               	addwf	??_writeEv& (0+255),w,b
 39094   00330A  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39095   00330C  0EEF               	movlw	239
 39096   00330E  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39097   003310  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39098   003312  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39099   003316  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39100   00331A  0100               	movlb	0	; () banked
 39101   00331C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39102   00331E  0EFF               	movlw	255
 39103   003320  6FA7               	movwf	writeNVM@value& (0+255),b
 39104   003322  0E01               	movlw	1
 39105   003324  ECE7  F05B         	call	_writeNVM
 39106                           
 39107                           ;../../VLCBlib_PIC/event_teach_large.c: 1076:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4, 0xff);
 39108   003328  0101               	movlb	1	; () banked
 39109   00332A  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39110   00332C  0D10               	mullw	16
 39111   00332E  CFF3 F1CD          	movff	prodl,??_writeEv
 39112   003332  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39113   003336  0E84               	movlw	132
 39114   003338  25CD               	addwf	??_writeEv& (0+255),w,b
 39115   00333A  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39116   00333C  0EEF               	movlw	239
 39117   00333E  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39118   003340  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39119   003342  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39120   003346  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39121   00334A  0100               	movlb	0	; () banked
 39122   00334C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39123   00334E  0EFF               	movlw	255
 39124   003350  6FA7               	movwf	writeNVM@value& (0+255),b
 39125   003352  0E01               	movlw	1
 39126   003354  ECE7  F05B         	call	_writeNVM
 39127                           
 39128                           ;../../VLCBlib_PIC/event_teach_large.c: 1077:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+4 +1, 0xff);
 39129   003358  0101               	movlb	1	; () banked
 39130   00335A  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39131   00335C  0D10               	mullw	16
 39132   00335E  CFF3 F1CD          	movff	prodl,??_writeEv
 39133   003362  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39134   003366  0E85               	movlw	133
 39135   003368  25CD               	addwf	??_writeEv& (0+255),w,b
 39136   00336A  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39137   00336C  0EEF               	movlw	239
 39138   00336E  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39139   003370  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39140   003372  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39141   003376  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39142   00337A  0100               	movlb	0	; () banked
 39143   00337C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39144   00337E  0EFF               	movlw	255
 39145   003380  6FA7               	movwf	writeNVM@value& (0+255),b
 39146   003382  0E01               	movlw	1
 39147   003384  ECE7  F05B         	call	_writeNVM
 39148                           
 39149                           ;../../VLCBlib_PIC/event_teach_large.c: 1078:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*nextIdx+0, 0x20);
 39150   003388  0101               	movlb	1	; () banked
 39151   00338A  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39152   00338C  6FCD               	movwf	??_writeEv& (0+255),b
 39153   00338E  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39154   003390  3BCD               	swapf	??_writeEv& (0+255),f,b
 39155   003392  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39156   003394  0EF0               	movlw	240
 39157   003396  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39158   003398  51CD               	movf	??_writeEv& (0+255),w,b
 39159   00339A  0B0F               	andlw	15
 39160   00339C  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39161   00339E  0EF0               	movlw	240
 39162   0033A0  17CD               	andwf	??_writeEv& (0+255),f,b
 39163   0033A2  0E80               	movlw	128
 39164   0033A4  25CD               	addwf	??_writeEv& (0+255),w,b
 39165   0033A6  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39166   0033A8  0EEF               	movlw	239
 39167   0033AA  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39168   0033AC  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39169   0033AE  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39170   0033B2  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39171   0033B6  0100               	movlb	0	; () banked
 39172   0033B8  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39173   0033BA  0E20               	movlw	32
 39174   0033BC  6FA7               	movwf	writeNVM@value& (0+255),b
 39175   0033BE  0E01               	movlw	1
 39176   0033C0  ECE7  F05B         	call	_writeNVM
 39177                           
 39178                           ;../../VLCBlib_PIC/event_teach_large.c: 1079:                     for (e = 0; e < 10; e+
      +                          +) {
 39179   0033C4  0E00               	movlw	0
 39180   0033C6  0101               	movlb	1	; () banked
 39181   0033C8  6FD3               	movwf	writeEv@e& (0+255),b
 39182   0033CA                     l19168:
 39183                           
 39184                           ; BSR set to: 1
 39185                           ;../../VLCBlib_PIC/event_teach_large.c: 1080:                         writeNVM(FLASH_NVM
      +                          _TYPE, 0xEF80 + 16*nextIdx+6 +e, 0);
 39186   0033CA  51D6               	movf	writeEv@nextIdx& (0+255),w,b
 39187   0033CC  0D10               	mullw	16
 39188   0033CE  CFF3 F1CD          	movff	prodl,??_writeEv
 39189   0033D2  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39190   0033D6  51D3               	movf	writeEv@e& (0+255),w,b
 39191   0033D8  27CD               	addwf	??_writeEv& (0+255),f,b
 39192   0033DA  0E00               	movlw	0
 39193   0033DC  23CE               	addwfc	(??_writeEv+1)& (0+255),f,b
 39194   0033DE  0E86               	movlw	134
 39195   0033E0  25CD               	addwf	??_writeEv& (0+255),w,b
 39196   0033E2  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39197   0033E4  0EEF               	movlw	239
 39198   0033E6  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39199   0033E8  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39200   0033EA  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39201   0033EE  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39202   0033F2  0100               	movlb	0	; () banked
 39203   0033F4  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39204   0033F6  0E00               	movlw	0
 39205   0033F8  6FA7               	movwf	writeNVM@value& (0+255),b
 39206   0033FA  0E01               	movlw	1
 39207   0033FC  ECE7  F05B         	call	_writeNVM
 39208                           
 39209                           ;../../VLCBlib_PIC/event_teach_large.c: 1081:                     }
 39210   003400  0101               	movlb	1	; () banked
 39211   003402  2BD3               	incf	writeEv@e& (0+255),f,b
 39212                           
 39213                           ; BSR set to: 1
 39214   003404  0E09               	movlw	9
 39215   003406  65D3               	cpfsgt	writeEv@e& (0+255),b
 39216   003408  D7E0               	goto	l19168
 39217                           
 39218                           ; BSR set to: 1
 39219                           ;../../VLCBlib_PIC/event_teach_large.c: 1083:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+1, nextIdx);
 39220   00340A  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39221   00340C  0D10               	mullw	16
 39222   00340E  CFF3 F1CD          	movff	prodl,??_writeEv
 39223   003412  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39224   003416  0E81               	movlw	129
 39225   003418  25CD               	addwf	??_writeEv& (0+255),w,b
 39226   00341A  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39227   00341C  0EEF               	movlw	239
 39228   00341E  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39229   003420  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39230   003422  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39231   003426  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39232   00342A  0100               	movlb	0	; () banked
 39233   00342C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39234   00342E  C1D6  F0A7         	movff	writeEv@nextIdx,writeNVM@value
 39235   003432  0E01               	movlw	1
 39236   003434  ECE7  F05B         	call	_writeNVM
 39237                           
 39238                           ;../../VLCBlib_PIC/event_teach_large.c: 1085:                     f.continued = 1;
 39239   003438  0101               	movlb	1	; () banked
 39240   00343A  89D4               	bsf	writeEv@f& (0+255),4,b
 39241                           
 39242                           ; BSR set to: 1
 39243                           ;../../VLCBlib_PIC/event_teach_large.c: 1086:                     writeNVM(FLASH_NVM_TYP
      +                          E, 0xEF80 + 16*tableIndex+0, f.asByte);
 39244   00343C  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39245   00343E  6FCD               	movwf	??_writeEv& (0+255),b
 39246   003440  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39247   003442  3BCD               	swapf	??_writeEv& (0+255),f,b
 39248   003444  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39249   003446  0EF0               	movlw	240
 39250   003448  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39251   00344A  51CD               	movf	??_writeEv& (0+255),w,b
 39252   00344C  0B0F               	andlw	15
 39253   00344E  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39254   003450  0EF0               	movlw	240
 39255   003452  17CD               	andwf	??_writeEv& (0+255),f,b
 39256   003454  0E80               	movlw	128
 39257   003456  25CD               	addwf	??_writeEv& (0+255),w,b
 39258   003458  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39259   00345A  0EEF               	movlw	239
 39260   00345C  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39261   00345E  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39262   003460  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39263   003464  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39264   003468  0100               	movlb	0	; () banked
 39265   00346A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39266   00346C  C1D4  F0A7         	movff	writeEv@f,writeNVM@value
 39267   003470  0E01               	movlw	1
 39268   003472  ECE7  F05B         	call	_writeNVM
 39269                           
 39270                           ;../../VLCBlib_PIC/event_teach_large.c: 1087:                     tableIndex = nextIdx;
 39271   003476  C1D6  F1D5         	movff	writeEv@nextIdx,writeEv@tableIndex
 39272                           
 39273                           ;../../VLCBlib_PIC/event_teach_large.c: 1088:                     break;
 39274   00347A  D004               	goto	u18900
 39275   00347C                     l19182:
 39276                           
 39277                           ; BSR set to: 1
 39278                           ;../../VLCBlib_PIC/event_teach_large.c: 1090:             }
 39279   00347C  2BD6               	incf	writeEv@nextIdx& (0+255),f,b
 39280   00347E                     l19184:
 39281                           
 39282                           ; BSR set to: 1
 39283   00347E  29D6               	incf	writeEv@nextIdx& (0+255),w,b
 39284   003480  A4D8               	btfss	status,2,c
 39285   003482  D702               	goto	l19154
 39286   003484                     u18900:
 39287                           
 39288                           ;../../VLCBlib_PIC/event_teach_large.c: 1091:             if (nextIdx >= 255) {
 39289   003484  0101               	movlb	1	; () banked
 39290   003486  29D6               	incf	writeEv@nextIdx& (0+255),w,b
 39291   003488  A4D8               	btfss	status,2,c
 39292   00348A  D002               	goto	l19192
 39293                           
 39294                           ; BSR set to: 1
 39295                           ;../../VLCBlib_PIC/event_teach_large.c: 1093:                 return CMDERR_TOO_MANY_EVE
      +                          NTS;
 39296   00348C  0E04               	movlw	4
 39297   00348E  0012               	return	
 39298   003490                     l19192:
 39299                           
 39300                           ; BSR set to: 1
 39301                           ;../../VLCBlib_PIC/event_teach_large.c: 1045:     while (evNum >= 10) {
 39302   003490  0E0A               	movlw	10
 39303   003492  61CB               	cpfslt	writeEv@evNum& (0+255),b
 39304   003494  D6B0               	goto	l19130
 39305                           
 39306                           ; BSR set to: 1
 39307                           ;../../VLCBlib_PIC/event_teach_large.c: 1098:     writeNVM(FLASH_NVM_TYPE, 0xEF80 + 16*t
      +                          ableIndex+6 +evNum, evVal);
 39308   003496  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39309   003498  0D10               	mullw	16
 39310   00349A  CFF3 F1CD          	movff	prodl,??_writeEv
 39311   00349E  CFF4 F1CE          	movff	prodh,??_writeEv+1
 39312   0034A2  51CB               	movf	writeEv@evNum& (0+255),w,b
 39313   0034A4  27CD               	addwf	??_writeEv& (0+255),f,b
 39314   0034A6  0E00               	movlw	0
 39315   0034A8  23CE               	addwfc	(??_writeEv+1)& (0+255),f,b
 39316   0034AA  0E86               	movlw	134
 39317   0034AC  25CD               	addwf	??_writeEv& (0+255),w,b
 39318   0034AE  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39319   0034B0  0EEF               	movlw	239
 39320   0034B2  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39321   0034B4  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39322   0034B6  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39323   0034BA  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39324   0034BE  0100               	movlb	0	; () banked
 39325   0034C0  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39326   0034C2  C1CC  F0A7         	movff	writeEv@evVal,writeNVM@value
 39327   0034C6  0E01               	movlw	1
 39328   0034C8  ECE7  F05B         	call	_writeNVM
 39329                           
 39330                           ;../../VLCBlib_PIC/event_teach_large.c: 1100:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 39331   0034CC  0101               	movlb	1	; () banked
 39332   0034CE  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39333   0034D0  6FCD               	movwf	??_writeEv& (0+255),b
 39334   0034D2  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39335   0034D4  3BCD               	swapf	??_writeEv& (0+255),f,b
 39336   0034D6  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39337   0034D8  0EF0               	movlw	240
 39338   0034DA  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39339   0034DC  51CD               	movf	??_writeEv& (0+255),w,b
 39340   0034DE  0B0F               	andlw	15
 39341   0034E0  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39342   0034E2  0EF0               	movlw	240
 39343   0034E4  17CD               	andwf	??_writeEv& (0+255),f,b
 39344   0034E6  0E80               	movlw	128
 39345   0034E8  25CD               	addwf	??_writeEv& (0+255),w,b
 39346   0034EA  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39347   0034EC  0EEF               	movlw	239
 39348   0034EE  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39349   0034F0  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39350   0034F2  C1CF  F091         	movff	??_writeEv+2,readNVM@index
 39351   0034F6  C1D0  F092         	movff	??_writeEv+3,readNVM@index+1
 39352   0034FA  0100               	movlb	0	; () banked
 39353   0034FC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39354   0034FE  0E01               	movlw	1
 39355   003500  EC57  F059         	call	_readNVM
 39356   003504  0100               	movlb	0	; () banked
 39357   003506  5191               	movf	?_readNVM& (0+255),w,b
 39358   003508  0101               	movlb	1	; () banked
 39359   00350A  6FD4               	movwf	writeEv@f& (0+255),b
 39360                           
 39361                           ; BSR set to: 1
 39362                           ;../../VLCBlib_PIC/event_teach_large.c: 1101:     if (f.eVsUsed <= evNum) {
 39363   00350C  51D4               	movf	writeEv@f& (0+255),w,b
 39364   00350E  0B0F               	andlw	15
 39365   003510  6FCD               	movwf	??_writeEv& (0+255),b
 39366   003512  51CD               	movf	??_writeEv& (0+255),w,b
 39367   003514  5DCB               	subwf	writeEv@evNum& (0+255),w,b
 39368   003516  A0D8               	btfss	status,0,c
 39369   003518  D026               	goto	l19204
 39370                           
 39371                           ; BSR set to: 1
 39372                           ;../../VLCBlib_PIC/event_teach_large.c: 1102:         f.eVsUsed = evNum+1U;
 39373   00351A  C1CB  F1CD         	movff	writeEv@evNum,??_writeEv
 39374   00351E  0E01               	movlw	1
 39375   003520  27CD               	addwf	??_writeEv& (0+255),f,b
 39376   003522  51D4               	movf	writeEv@f& (0+255),w,b
 39377   003524  19CD               	xorwf	??_writeEv& (0+255),w,b
 39378   003526  0BF0               	andlw	-16
 39379   003528  19CD               	xorwf	??_writeEv& (0+255),w,b
 39380   00352A  6FD4               	movwf	writeEv@f& (0+255),b
 39381                           
 39382                           ; BSR set to: 1
 39383                           ;../../VLCBlib_PIC/event_teach_large.c: 1103:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 
      +                          16*tableIndex+0, f.asByte);
 39384   00352C  51D5               	movf	writeEv@tableIndex& (0+255),w,b
 39385   00352E  6FCD               	movwf	??_writeEv& (0+255),b
 39386   003530  6BCE               	clrf	(??_writeEv+1)& (0+255),b
 39387   003532  3BCD               	swapf	??_writeEv& (0+255),f,b
 39388   003534  3BCE               	swapf	(??_writeEv+1)& (0+255),f,b
 39389   003536  0EF0               	movlw	240
 39390   003538  17CE               	andwf	(??_writeEv+1)& (0+255),f,b
 39391   00353A  51CD               	movf	??_writeEv& (0+255),w,b
 39392   00353C  0B0F               	andlw	15
 39393   00353E  13CE               	iorwf	(??_writeEv+1)& (0+255),f,b
 39394   003540  0EF0               	movlw	240
 39395   003542  17CD               	andwf	??_writeEv& (0+255),f,b
 39396   003544  0E80               	movlw	128
 39397   003546  25CD               	addwf	??_writeEv& (0+255),w,b
 39398   003548  6FCF               	movwf	(??_writeEv+2)& (0+255),b
 39399   00354A  0EEF               	movlw	239
 39400   00354C  21CE               	addwfc	(??_writeEv+1)& (0+255),w,b
 39401   00354E  6FD0               	movwf	(??_writeEv+3)& (0+255),b
 39402   003550  C1CF  F0A4         	movff	??_writeEv+2,writeNVM@index
 39403   003554  C1D0  F0A5         	movff	??_writeEv+3,writeNVM@index+1
 39404   003558  0100               	movlb	0	; () banked
 39405   00355A  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39406   00355C  C1D4  F0A7         	movff	writeEv@f,writeNVM@value
 39407   003560  0E01               	movlw	1
 39408   003562  ECE7  F05B         	call	_writeNVM
 39409   003566                     l19204:
 39410                           
 39411                           ;../../VLCBlib_PIC/event_teach_large.c: 1106:     if (evVal == 0) {
 39412   003566  0101               	movlb	1	; () banked
 39413   003568  51CC               	movf	writeEv@evVal& (0+255),w,b
 39414   00356A  A4D8               	btfss	status,2,c
 39415   00356C  D688               	goto	u18860
 39416                           
 39417                           ; BSR set to: 1
 39418                           ;../../VLCBlib_PIC/event_teach_large.c: 1107:         checkRemoveTableEntry(startIndex);
 39419   00356E  51D1               	movf	writeEv@startIndex& (0+255),w,b
 39420   003570  EC11  F05D         	call	_checkRemoveTableEntry
 39421   003574  D684               	goto	u18860
 39422   003576                     __end_of_writeEv:
 39423                           	callstack 0
 39424                           
 39425 ;; *************** function _checkRemoveTableEntry *****************
 39426 ;; Defined at:
 39427 ;;		line 908 in file "../../VLCBlib_PIC/event_teach_large.c"
 39428 ;; Parameters:    Size  Location     Type
 39429 ;;  tableIndex      1    wreg     unsigned char 
 39430 ;; Auto vars:     Size  Location     Type
 39431 ;;  tableIndex      1   15[BANK1 ] unsigned char 
 39432 ;;  e               1   16[BANK1 ] unsigned char 
 39433 ;; Return value:  Size  Location     Type
 39434 ;;                  1    wreg      void 
 39435 ;; Registers used:
 39436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39437 ;; Tracked objects:
 39438 ;;		On entry : 0/0
 39439 ;;		On exit  : 0/0
 39440 ;;		Unchanged: 0/0
 39441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39443 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39445 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39446 ;;Total ram usage:        2 bytes
 39447 ;; Hardware stack levels used: 1
 39448 ;; Hardware stack levels required when called: 19
 39449 ;; This function calls:
 39450 ;;		_getEVs
 39451 ;;		_removeTableEntry
 39452 ;;		_validStart
 39453 ;; This function is called by:
 39454 ;;		_deleteActionRange
 39455 ;;		_APP_addEvent
 39456 ;;		_writeEv
 39457 ;;		_deleteHappeningRange
 39458 ;; This function uses a non-reentrant model
 39459 ;;
 39460                           
 39461                           	psect	text168
 39462   00BA22                     __ptext168:
 39463                           	callstack 0
 39464   00BA22                     _checkRemoveTableEntry:
 39465                           	callstack 6
 39466                           
 39467                           ;incstack = 0
 39468                           ;checkRemoveTableEntry@tableIndex stored from wreg
 39469   00BA22  0101               	movlb	1	; () banked
 39470   00BA24  6FC9               	movwf	checkRemoveTableEntry@tableIndex& (0+255),b
 39471                           
 39472                           ;../../VLCBlib_PIC/event_teach_large.c: 909:     uint8_t e;;../../VLCBlib_PIC/event_teac
      +                          h_large.c: 911:     if ( validStart(tableIndex)) {
 39473   00BA26  0101               	movlb	1	; () banked
 39474   00BA28  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39475   00BA2A  ECC0  F05B         	call	_validStart
 39476   00BA2E  0900               	iorlw	0
 39477   00BA30  B4D8               	btfsc	status,2,c
 39478   00BA32  0012               	return	
 39479                           
 39480                           ;../../VLCBlib_PIC/event_teach_large.c: 912:         if (getEVs(tableIndex)) {
 39481   00BA34  0101               	movlb	1	; () banked
 39482   00BA36  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39483   00BA38  ECB2  F040         	call	_getEVs
 39484   00BA3C  0900               	iorlw	0
 39485   00BA3E  A4D8               	btfss	status,2,c
 39486   00BA40  0012               	return	
 39487                           
 39488                           ;../../VLCBlib_PIC/event_teach_large.c: 915:         for (e=0; e<20; e++) {
 39489   00BA42  0E00               	movlw	0
 39490   00BA44  0101               	movlb	1	; () banked
 39491   00BA46  6FCA               	movwf	checkRemoveTableEntry@e& (0+255),b
 39492   00BA48                     l19042:
 39493                           
 39494                           ; BSR set to: 1
 39495                           ;../../VLCBlib_PIC/event_teach_large.c: 916:             if (evs[e] != 0) {
 39496   00BA48  0E20               	movlw	low _evs
 39497   00BA4A  25CA               	addwf	checkRemoveTableEntry@e& (0+255),w,b
 39498   00BA4C  6ED9               	movwf	fsr2l,c
 39499   00BA4E  6ADA               	clrf	fsr2h,c
 39500   00BA50  0E02               	movlw	high _evs
 39501   00BA52  22DA               	addwfc	fsr2h,f,c
 39502   00BA54  50DF               	movf	indf2,w,c
 39503   00BA56  A4D8               	btfss	status,2,c
 39504   00BA58  0012               	return	
 39505                           
 39506                           ; BSR set to: 1
 39507                           ;../../VLCBlib_PIC/event_teach_large.c: 919:         }
 39508   00BA5A  2BCA               	incf	checkRemoveTableEntry@e& (0+255),f,b
 39509                           
 39510                           ; BSR set to: 1
 39511   00BA5C  0E13               	movlw	19
 39512   00BA5E  65CA               	cpfsgt	checkRemoveTableEntry@e& (0+255),b
 39513   00BA60  D7F3               	goto	l19042
 39514                           
 39515                           ; BSR set to: 1
 39516                           ;../../VLCBlib_PIC/event_teach_large.c: 920:         removeTableEntry(tableIndex);
 39517   00BA62  51C9               	movf	checkRemoveTableEntry@tableIndex& (0+255),w,b
 39518   00BA64  ECAF  F03C         	call	_removeTableEntry
 39519   00BA68  0012               	return		;funcret
 39520   00BA6A                     __end_of_checkRemoveTableEntry:
 39521                           	callstack 0
 39522                           
 39523 ;; *************** function _removeTableEntry *****************
 39524 ;; Defined at:
 39525 ;;		line 872 in file "../../VLCBlib_PIC/event_teach_large.c"
 39526 ;; Parameters:    Size  Location     Type
 39527 ;;  tableIndex      1    wreg     unsigned char 
 39528 ;; Auto vars:     Size  Location     Type
 39529 ;;  tableIndex      1   14[BANK1 ] unsigned char 
 39530 ;;  f               1   13[BANK1 ] struct .
 39531 ;; Return value:  Size  Location     Type
 39532 ;;                  1    wreg      unsigned char 
 39533 ;; Registers used:
 39534 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39535 ;; Tracked objects:
 39536 ;;		On entry : 0/0
 39537 ;;		On exit  : 0/0
 39538 ;;		Unchanged: 0/0
 39539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39541 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39542 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39543 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39544 ;;Total ram usage:        6 bytes
 39545 ;; Hardware stack levels used: 1
 39546 ;; Hardware stack levels required when called: 18
 39547 ;; This function calls:
 39548 ;;		_flushFlashBlock
 39549 ;;		_readNVM
 39550 ;;		_rebuildHashtable
 39551 ;;		_validStart
 39552 ;;		_writeNVM
 39553 ;; This function is called by:
 39554 ;;		_removeEvent
 39555 ;;		_checkRemoveTableEntry
 39556 ;; This function uses a non-reentrant model
 39557 ;;
 39558                           
 39559                           	psect	text169
 39560   00795E                     __ptext169:
 39561                           	callstack 0
 39562   00795E                     _removeTableEntry:
 39563                           	callstack 8
 39564                           
 39565                           ;incstack = 0
 39566                           ;removeTableEntry@tableIndex stored from wreg
 39567   00795E  0101               	movlb	1	; () banked
 39568   007960  6FC8               	movwf	removeTableEntry@tableIndex& (0+255),b
 39569                           
 39570                           ;../../VLCBlib_PIC/event_teach_large.c: 873:     EventTableFlags f;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 878:     if (validStart(tableIndex)) {
 39571   007962  0101               	movlb	1	; () banked
 39572   007964  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39573   007966  ECC0  F05B         	call	_validStart
 39574   00796A  0900               	iorlw	0
 39575   00796C  B4D8               	btfsc	status,2,c
 39576   00796E  D09F               	goto	l19026
 39577                           
 39578                           ;../../VLCBlib_PIC/event_teach_large.c: 879:         f.asByte = (uint8_t)readNVM(FLASH_N
      +                          VM_TYPE, 0xEF80 + 16*tableIndex+0);
 39579   007970  0101               	movlb	1	; () banked
 39580   007972  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39581   007974  6FC3               	movwf	??_removeTableEntry& (0+255),b
 39582   007976  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 39583   007978  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 39584   00797A  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39585   00797C  0EF0               	movlw	240
 39586   00797E  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39587   007980  51C3               	movf	??_removeTableEntry& (0+255),w,b
 39588   007982  0B0F               	andlw	15
 39589   007984  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39590   007986  0EF0               	movlw	240
 39591   007988  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 39592   00798A  0E80               	movlw	128
 39593   00798C  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39594   00798E  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39595   007990  0EEF               	movlw	239
 39596   007992  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39597   007994  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39598   007996  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 39599   00799A  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39600   00799E  0100               	movlb	0	; () banked
 39601   0079A0  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39602   0079A2  0E01               	movlw	1
 39603   0079A4  EC57  F059         	call	_readNVM
 39604   0079A8  0100               	movlb	0	; () banked
 39605   0079AA  5191               	movf	?_readNVM& (0+255),w,b
 39606   0079AC  0101               	movlb	1	; () banked
 39607   0079AE  6FC7               	movwf	removeTableEntry@f& (0+255),b
 39608                           
 39609                           ;../../VLCBlib_PIC/event_teach_large.c: 881:         writeNVM(FLASH_NVM_TYPE, 0xEF80 + 1
      +                          6*tableIndex+0, 0xff);
 39610   0079B0  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39611   0079B2  6FC3               	movwf	??_removeTableEntry& (0+255),b
 39612   0079B4  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 39613   0079B6  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 39614   0079B8  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39615   0079BA  0EF0               	movlw	240
 39616   0079BC  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39617   0079BE  51C3               	movf	??_removeTableEntry& (0+255),w,b
 39618   0079C0  0B0F               	andlw	15
 39619   0079C2  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39620   0079C4  0EF0               	movlw	240
 39621   0079C6  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 39622   0079C8  0E80               	movlw	128
 39623   0079CA  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39624   0079CC  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39625   0079CE  0EEF               	movlw	239
 39626   0079D0  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39627   0079D2  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39628   0079D4  C1C5  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 39629   0079D8  C1C6  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 39630   0079DC  0100               	movlb	0	; () banked
 39631   0079DE  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39632   0079E0  0EFF               	movlw	255
 39633   0079E2  6FA7               	movwf	writeNVM@value& (0+255),b
 39634   0079E4  0E01               	movlw	1
 39635   0079E6  ECE7  F05B         	call	_writeNVM
 39636                           
 39637                           ;../../VLCBlib_PIC/event_teach_large.c: 883:         while (f.continued) {
 39638   0079EA  D05A               	goto	l19020
 39639   0079EC                     l19008:
 39640                           
 39641                           ; BSR set to: 1
 39642                           ;../../VLCBlib_PIC/event_teach_large.c: 884:             tableIndex = (uint8_t)readNVM(F
      +                          LASH_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 39643   0079EC  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39644   0079EE  0D10               	mullw	16
 39645   0079F0  CFF3 F1C3          	movff	prodl,??_removeTableEntry
 39646   0079F4  CFF4 F1C4          	movff	prodh,??_removeTableEntry+1
 39647   0079F8  0E81               	movlw	129
 39648   0079FA  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39649   0079FC  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39650   0079FE  0EEF               	movlw	239
 39651   007A00  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39652   007A02  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39653   007A04  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 39654   007A08  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39655   007A0C  0100               	movlb	0	; () banked
 39656   007A0E  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39657   007A10  0E01               	movlw	1
 39658   007A12  EC57  F059         	call	_readNVM
 39659   007A16  0100               	movlb	0	; () banked
 39660   007A18  5191               	movf	?_readNVM& (0+255),w,b
 39661   007A1A  0101               	movlb	1	; () banked
 39662   007A1C  6FC8               	movwf	removeTableEntry@tableIndex& (0+255),b
 39663                           
 39664                           ; BSR set to: 1
 39665                           ;../../VLCBlib_PIC/event_teach_large.c: 885:             f.asByte = (uint8_t)readNVM(FLA
      +                          SH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 39666   007A1E  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39667   007A20  6FC3               	movwf	??_removeTableEntry& (0+255),b
 39668   007A22  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 39669   007A24  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 39670   007A26  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39671   007A28  0EF0               	movlw	240
 39672   007A2A  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39673   007A2C  51C3               	movf	??_removeTableEntry& (0+255),w,b
 39674   007A2E  0B0F               	andlw	15
 39675   007A30  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39676   007A32  0EF0               	movlw	240
 39677   007A34  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 39678   007A36  0E80               	movlw	128
 39679   007A38  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39680   007A3A  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39681   007A3C  0EEF               	movlw	239
 39682   007A3E  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39683   007A40  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39684   007A42  C1C5  F091         	movff	??_removeTableEntry+2,readNVM@index
 39685   007A46  C1C6  F092         	movff	??_removeTableEntry+3,readNVM@index+1
 39686   007A4A  0100               	movlb	0	; () banked
 39687   007A4C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 39688   007A4E  0E01               	movlw	1
 39689   007A50  EC57  F059         	call	_readNVM
 39690   007A54  0100               	movlb	0	; () banked
 39691   007A56  5191               	movf	?_readNVM& (0+255),w,b
 39692   007A58  0101               	movlb	1	; () banked
 39693   007A5A  6FC7               	movwf	removeTableEntry@f& (0+255),b
 39694                           
 39695                           ; BSR set to: 1
 39696                           ;../../VLCBlib_PIC/event_teach_large.c: 887:             if (tableIndex >= 255) return C
      +                          MDERR_INV_EV_IDX;
 39697   007A5C  29C8               	incf	removeTableEntry@tableIndex& (0+255),w,b
 39698   007A5E  A4D8               	btfss	status,2,c
 39699   007A60  D002               	goto	l19018
 39700                           
 39701                           ; BSR set to: 1
 39702   007A62  0E06               	movlw	6
 39703   007A64  0012               	return	
 39704   007A66                     l19018:
 39705                           
 39706                           ; BSR set to: 1
 39707                           ;../../VLCBlib_PIC/event_teach_large.c: 890:             writeNVM(FLASH_NVM_TYPE, 0xEF80
      +                           + 16*tableIndex+0, 0xff);
 39708   007A66  51C8               	movf	removeTableEntry@tableIndex& (0+255),w,b
 39709   007A68  6FC3               	movwf	??_removeTableEntry& (0+255),b
 39710   007A6A  6BC4               	clrf	(??_removeTableEntry+1)& (0+255),b
 39711   007A6C  3BC3               	swapf	??_removeTableEntry& (0+255),f,b
 39712   007A6E  3BC4               	swapf	(??_removeTableEntry+1)& (0+255),f,b
 39713   007A70  0EF0               	movlw	240
 39714   007A72  17C4               	andwf	(??_removeTableEntry+1)& (0+255),f,b
 39715   007A74  51C3               	movf	??_removeTableEntry& (0+255),w,b
 39716   007A76  0B0F               	andlw	15
 39717   007A78  13C4               	iorwf	(??_removeTableEntry+1)& (0+255),f,b
 39718   007A7A  0EF0               	movlw	240
 39719   007A7C  17C3               	andwf	??_removeTableEntry& (0+255),f,b
 39720   007A7E  0E80               	movlw	128
 39721   007A80  25C3               	addwf	??_removeTableEntry& (0+255),w,b
 39722   007A82  6FC5               	movwf	(??_removeTableEntry+2)& (0+255),b
 39723   007A84  0EEF               	movlw	239
 39724   007A86  21C4               	addwfc	(??_removeTableEntry+1)& (0+255),w,b
 39725   007A88  6FC6               	movwf	(??_removeTableEntry+3)& (0+255),b
 39726   007A8A  C1C5  F0A4         	movff	??_removeTableEntry+2,writeNVM@index
 39727   007A8E  C1C6  F0A5         	movff	??_removeTableEntry+3,writeNVM@index+1
 39728   007A92  0100               	movlb	0	; () banked
 39729   007A94  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 39730   007A96  0EFF               	movlw	255
 39731   007A98  6FA7               	movwf	writeNVM@value& (0+255),b
 39732   007A9A  0E01               	movlw	1
 39733   007A9C  ECE7  F05B         	call	_writeNVM
 39734   007AA0                     l19020:
 39735                           
 39736                           ;../../VLCBlib_PIC/event_teach_large.c: 883:         while (f.continued) {
 39737   007AA0  0101               	movlb	1	; () banked
 39738   007AA2  B9C7               	btfsc	removeTableEntry@f& (0+255),4,b
 39739   007AA4  D7A3               	goto	l19008
 39740                           
 39741                           ; BSR set to: 1
 39742                           ;../../VLCBlib_PIC/event_teach_large.c: 893:         flushFlashBlock();
 39743   007AA6  ECE6  F052         	call	_flushFlashBlock	;wreg free
 39744                           
 39745                           ;../../VLCBlib_PIC/event_teach_large.c: 896:         rebuildHashtable();
 39746   007AAA  EC8D  F03E         	call	_rebuildHashtable	;wreg free
 39747   007AAE                     l19026:
 39748                           
 39749                           ;../../VLCBlib_PIC/event_teach_large.c: 899:     return 0;
 39750   007AAE  0E00               	movlw	0
 39751   007AB0  0012               	return		;funcret
 39752   007AB2                     __end_of_removeTableEntry:
 39753                           	callstack 0
 39754                           
 39755 ;; *************** function _rebuildHashtable *****************
 39756 ;; Defined at:
 39757 ;;		line 1328 in file "../../VLCBlib_PIC/event_teach_large.c"
 39758 ;; Parameters:    Size  Location     Type
 39759 ;;		None
 39760 ;; Auto vars:     Size  Location     Type
 39761 ;;  ev              2    3[BANK1 ] short 
 39762 ;;  a               2    0        int 
 39763 ;;  tableIndex      1    8[BANK1 ] unsigned char 
 39764 ;;  chainIdx        1    7[BANK1 ] unsigned char 
 39765 ;;  happening       1    6[BANK1 ] unsigned char 
 39766 ;;  hash            1    5[BANK1 ] unsigned char 
 39767 ;; Return value:  Size  Location     Type
 39768 ;;                  1    wreg      void 
 39769 ;; Registers used:
 39770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39771 ;; Tracked objects:
 39772 ;;		On entry : 0/0
 39773 ;;		On exit  : 0/0
 39774 ;;		Unchanged: 0/0
 39775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39777 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39778 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39779 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39780 ;;Total ram usage:        9 bytes
 39781 ;; Hardware stack levels used: 1
 39782 ;; Hardware stack levels required when called: 16
 39783 ;; This function calls:
 39784 ;;		_getEN
 39785 ;;		_getEv
 39786 ;;		_getHash
 39787 ;;		_getNN
 39788 ;;		_validStart
 39789 ;; This function is called by:
 39790 ;;		_deleteActionRange
 39791 ;;		_APP_addEvent
 39792 ;;		_mnsProcessMessage
 39793 ;;		_teachPowerUp
 39794 ;;		_clearAllEvents
 39795 ;;		_removeTableEntry
 39796 ;;		_addEvent
 39797 ;;		_deleteHappeningRange
 39798 ;; This function uses a non-reentrant model
 39799 ;;
 39800                           
 39801                           	psect	text170
 39802   007D1A                     __ptext170:
 39803                           	callstack 0
 39804   007D1A                     _rebuildHashtable:
 39805                           	callstack 12
 39806                           
 39807                           ;../../VLCBlib_PIC/event_teach_large.c: 1330:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1331:     uint8_t chainIdx;;../../VLCBlib_PIC/event_teach_large.c: 1332: 
      +                              uint8_t tableIndex;;../../VLCBlib_PIC/event_teach_large.c: 1333:     int a;;../../VL
      +                          CBlib_PIC/event_teach_large.c: 1336:     Happening happening;;../../VLCBlib_PIC/event_te
      +                          ach_large.c: 1337:     for (happening=0; happening<=(1+(7+16*4)-1); happening++) {
 39808                           
 39809                           ;incstack = 0
 39810   007D1A  0E00               	movlw	0
 39811   007D1C  0101               	movlb	1	; () banked
 39812   007D1E  6FC0               	movwf	rebuildHashtable@happening& (0+255),b
 39813   007D20                     l18874:
 39814                           
 39815                           ; BSR set to: 1
 39816                           ;../../VLCBlib_PIC/event_teach_large.c: 1338:         happening2Event[happening] = 0xff;
 39817   007D20  0E00               	movlw	low _happening2Event
 39818   007D22  25C0               	addwf	rebuildHashtable@happening& (0+255),w,b
 39819   007D24  6ED9               	movwf	fsr2l,c
 39820   007D26  6ADA               	clrf	fsr2h,c
 39821   007D28  0E03               	movlw	high _happening2Event
 39822   007D2A  22DA               	addwfc	fsr2h,f,c
 39823   007D2C  0EFF               	movlw	255
 39824   007D2E  6EDF               	movwf	indf2,c
 39825                           
 39826                           ; BSR set to: 1
 39827                           ;../../VLCBlib_PIC/event_teach_large.c: 1339:     }
 39828   007D30  2BC0               	incf	rebuildHashtable@happening& (0+255),f,b
 39829                           
 39830                           ; BSR set to: 1
 39831   007D32  0E47               	movlw	71
 39832   007D34  65C0               	cpfsgt	rebuildHashtable@happening& (0+255),b
 39833   007D36  D7F4               	goto	l18874
 39834                           
 39835                           ; BSR set to: 1
 39836                           ;../../VLCBlib_PIC/event_teach_large.c: 1341:     for (hash=0; hash<32; hash++) {
 39837   007D38  0E00               	movlw	0
 39838   007D3A  6FBF               	movwf	rebuildHashtable@hash& (0+255),b
 39839   007D3C                     l18886:
 39840                           
 39841                           ; BSR set to: 1
 39842                           ;../../VLCBlib_PIC/event_teach_large.c: 1342:         for (chainIdx=0; chainIdx < 20; ch
      +                          ainIdx++) {
 39843   007D3C  0E00               	movlw	0
 39844   007D3E  6FC1               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39845   007D40                     l18892:
 39846                           
 39847                           ; BSR set to: 1
 39848                           ;../../VLCBlib_PIC/event_teach_large.c: 1343:             eventChains[hash][chainIdx] = 
      +                          0xff;
 39849   007D40  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 39850   007D42  0D14               	mullw	20
 39851   007D44  0E48               	movlw	low _eventChains
 39852   007D46  24F3               	addwf	243,w,c
 39853   007D48  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 39854   007D4A  0E05               	movlw	high _eventChains
 39855   007D4C  20F4               	addwfc	prodh,w,c
 39856   007D4E  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39857   007D50  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39858   007D52  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 39859   007D54  6ED9               	movwf	fsr2l,c
 39860   007D56  0E00               	movlw	0
 39861   007D58  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39862   007D5A  6EDA               	movwf	fsr2h,c
 39863   007D5C  0EFF               	movlw	255
 39864   007D5E  6EDF               	movwf	indf2,c
 39865                           
 39866                           ; BSR set to: 1
 39867                           ;../../VLCBlib_PIC/event_teach_large.c: 1344:         }
 39868   007D60  2BC1               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 39869                           
 39870                           ; BSR set to: 1
 39871   007D62  0E13               	movlw	19
 39872   007D64  65C1               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 39873   007D66  D7EC               	goto	l18892
 39874                           
 39875                           ; BSR set to: 1
 39876                           ;../../VLCBlib_PIC/event_teach_large.c: 1345:     }
 39877   007D68  2BBF               	incf	rebuildHashtable@hash& (0+255),f,b
 39878                           
 39879                           ; BSR set to: 1
 39880   007D6A  0E1F               	movlw	31
 39881   007D6C  65BF               	cpfsgt	rebuildHashtable@hash& (0+255),b
 39882   007D6E  D7E6               	goto	l18886
 39883                           
 39884                           ; BSR set to: 1
 39885                           ;../../VLCBlib_PIC/event_teach_large.c: 1348:     for (tableIndex=0; tableIndex<255; tab
      +                          leIndex++) {
 39886   007D70  0E00               	movlw	0
 39887   007D72  6FC2               	movwf	rebuildHashtable@tableIndex& (0+255),b
 39888   007D74                     l18908:
 39889                           
 39890                           ; BSR set to: 1
 39891                           ;../../VLCBlib_PIC/event_teach_large.c: 1349:         if (validStart(tableIndex)) {
 39892   007D74  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39893   007D76  ECC0  F05B         	call	_validStart
 39894   007D7A  0900               	iorlw	0
 39895   007D7C  B4D8               	btfsc	status,2,c
 39896   007D7E  D059               	goto	u18590
 39897                           
 39898                           ;../../VLCBlib_PIC/event_teach_large.c: 1350:             int16_t ev;;../../VLCBlib_PIC/
      +                          event_teach_large.c: 1365:             ev = getEv(tableIndex, 0);
 39899   007D80  0E00               	movlw	0
 39900   007D82  0100               	movlb	0	; () banked
 39901   007D84  6F9D               	movwf	getEv@evNum& (0+255),b
 39902   007D86  0101               	movlb	1	; () banked
 39903   007D88  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39904   007D8A  EC04  F03C         	call	_getEv
 39905   007D8E  C09D  F1BD         	movff	?_getEv,rebuildHashtable@ev
 39906   007D92  C09E  F1BE         	movff	?_getEv+1,rebuildHashtable@ev+1
 39907                           
 39908                           ;../../VLCBlib_PIC/event_teach_large.c: 1366:             if (ev < 0) continue;
 39909   007D96  0101               	movlb	1	; () banked
 39910   007D98  BFBE               	btfsc	(rebuildHashtable@ev+1)& (0+255),7,b
 39911   007D9A  D04B               	goto	u18590
 39912                           
 39913                           ; BSR set to: 1
 39914                           ;../../VLCBlib_PIC/event_teach_large.c: 1367:             happening = (uint8_t) ev;
 39915   007D9C  C1BD  F1C0         	movff	rebuildHashtable@ev,rebuildHashtable@happening
 39916                           
 39917                           ; BSR set to: 1
 39918                           ;../../VLCBlib_PIC/event_teach_large.c: 1369:             if ((happening<= (7+16*4)) && 
      +                          (happening >= 1)) {
 39919   007DA0  0E48               	movlw	72
 39920   007DA2  61C0               	cpfslt	rebuildHashtable@happening& (0+255),b
 39921   007DA4  D00B               	goto	l18922
 39922                           
 39923                           ; BSR set to: 1
 39924   007DA6  51C0               	movf	rebuildHashtable@happening& (0+255),w,b
 39925   007DA8  B4D8               	btfsc	status,2,c
 39926   007DAA  D008               	goto	l18922
 39927                           
 39928                           ; BSR set to: 1
 39929                           ;../../VLCBlib_PIC/event_teach_large.c: 1370:                 happening2Event[happening-
      +                          1] = tableIndex;
 39930   007DAC  0EFF               	movlw	low (_happening2Event+65535)
 39931   007DAE  25C0               	addwf	rebuildHashtable@happening& (0+255),w,b
 39932   007DB0  6ED9               	movwf	fsr2l,c
 39933   007DB2  6ADA               	clrf	fsr2h,c
 39934   007DB4  0E02               	movlw	high (_happening2Event+65535)
 39935   007DB6  22DA               	addwfc	fsr2h,f,c
 39936   007DB8  C1C2  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39937   007DBC                     l18922:
 39938                           
 39939                           ; BSR set to: 1
 39940                           ;../../VLCBlib_PIC/event_teach_large.c: 1373:             hash = getHash(getNN(tableInde
      +                          x), getEN(tableIndex));
 39941   007DBC  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39942   007DBE  EC46  F049         	call	_getNN
 39943   007DC2  C097  F0A3         	movff	?_getNN,getHash@nn
 39944   007DC6  C098  F0A4         	movff	?_getNN+1,getHash@nn+1
 39945   007DCA  0101               	movlb	1	; () banked
 39946   007DCC  51C2               	movf	rebuildHashtable@tableIndex& (0+255),w,b
 39947   007DCE  EC22  F055         	call	_getEN
 39948   007DD2  C097  F0A5         	movff	?_getEN,getHash@en
 39949   007DD6  C098  F0A6         	movff	?_getEN+1,getHash@en+1
 39950   007DDA  EC89  F061         	call	_getHash	;wreg free
 39951   007DDE  0101               	movlb	1	; () banked
 39952   007DE0  6FBF               	movwf	rebuildHashtable@hash& (0+255),b
 39953                           
 39954                           ; BSR set to: 1
 39955                           ;../../VLCBlib_PIC/event_teach_large.c: 1375:             for (chainIdx=0; chainIdx<20; 
      +                          chainIdx++) {
 39956   007DE2  0E00               	movlw	0
 39957   007DE4  6FC1               	movwf	rebuildHashtable@chainIdx& (0+255),b
 39958   007DE6                     l18930:
 39959                           
 39960                           ; BSR set to: 1
 39961                           ;../../VLCBlib_PIC/event_teach_large.c: 1376:                 if (eventChains[hash][chai
      +                          nIdx] == 0xff) {
 39962   007DE6  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 39963   007DE8  0D14               	mullw	20
 39964   007DEA  0E48               	movlw	low _eventChains
 39965   007DEC  24F3               	addwf	243,w,c
 39966   007DEE  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 39967   007DF0  0E05               	movlw	high _eventChains
 39968   007DF2  20F4               	addwfc	prodh,w,c
 39969   007DF4  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39970   007DF6  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39971   007DF8  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 39972   007DFA  6ED9               	movwf	fsr2l,c
 39973   007DFC  0E00               	movlw	0
 39974   007DFE  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39975   007E00  6EDA               	movwf	fsr2h,c
 39976   007E02  28DE               	incf	postinc2,w,c
 39977   007E04  A4D8               	btfss	status,2,c
 39978   007E06  D011               	goto	l18934
 39979                           
 39980                           ; BSR set to: 1
 39981                           ;../../VLCBlib_PIC/event_teach_large.c: 1378:                     eventChains[hash][chai
      +                          nIdx] = tableIndex;
 39982   007E08  51BF               	movf	rebuildHashtable@hash& (0+255),w,b
 39983   007E0A  0D14               	mullw	20
 39984   007E0C  0E48               	movlw	low _eventChains
 39985   007E0E  24F3               	addwf	243,w,c
 39986   007E10  6FBA               	movwf	??_rebuildHashtable& (0+255),b
 39987   007E12  0E05               	movlw	high _eventChains
 39988   007E14  20F4               	addwfc	prodh,w,c
 39989   007E16  6FBB               	movwf	(??_rebuildHashtable+1)& (0+255),b
 39990   007E18  51C1               	movf	rebuildHashtable@chainIdx& (0+255),w,b
 39991   007E1A  25BA               	addwf	??_rebuildHashtable& (0+255),w,b
 39992   007E1C  6ED9               	movwf	fsr2l,c
 39993   007E1E  0E00               	movlw	0
 39994   007E20  21BB               	addwfc	(??_rebuildHashtable+1)& (0+255),w,b
 39995   007E22  6EDA               	movwf	fsr2h,c
 39996   007E24  C1C2  FFDF         	movff	rebuildHashtable@tableIndex,indf2
 39997                           
 39998                           ;../../VLCBlib_PIC/event_teach_large.c: 1379:                     break;
 39999   007E28  D004               	goto	u18590
 40000   007E2A                     l18934:
 40001                           
 40002                           ; BSR set to: 1
 40003                           ;../../VLCBlib_PIC/event_teach_large.c: 1381:             }
 40004   007E2A  2BC1               	incf	rebuildHashtable@chainIdx& (0+255),f,b
 40005                           
 40006                           ; BSR set to: 1
 40007   007E2C  0E13               	movlw	19
 40008   007E2E  65C1               	cpfsgt	rebuildHashtable@chainIdx& (0+255),b
 40009   007E30  D7DA               	goto	l18930
 40010   007E32                     u18590:
 40011   007E32  0101               	movlb	1	; () banked
 40012   007E34  2BC2               	incf	rebuildHashtable@tableIndex& (0+255),f,b
 40013                           
 40014                           ; BSR set to: 1
 40015   007E36  29C2               	incf	rebuildHashtable@tableIndex& (0+255),w,b
 40016   007E38  B4D8               	btfsc	status,2,c
 40017   007E3A  0012               	return	
 40018   007E3C  D79B               	goto	l18908
 40019   007E3E                     __end_of_rebuildHashtable:
 40020                           	callstack 0
 40021                           
 40022 ;; *************** function _getEv *****************
 40023 ;; Defined at:
 40024 ;;		line 1119 in file "../../VLCBlib_PIC/event_teach_large.c"
 40025 ;; Parameters:    Size  Location     Type
 40026 ;;  tableIndex      1    wreg     unsigned char 
 40027 ;;  evNum           1   61[BANK0 ] unsigned char 
 40028 ;; Auto vars:     Size  Location     Type
 40029 ;;  tableIndex      1   69[BANK0 ] unsigned char 
 40030 ;;  f               1   68[BANK0 ] struct .
 40031 ;; Return value:  Size  Location     Type
 40032 ;;                  2   61[BANK0 ] short 
 40033 ;; Registers used:
 40034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40035 ;; Tracked objects:
 40036 ;;		On entry : 0/0
 40037 ;;		On exit  : 0/0
 40038 ;;		Unchanged: 0/0
 40039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40040 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40041 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40042 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40043 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40044 ;;Total ram usage:        9 bytes
 40045 ;; Hardware stack levels used: 1
 40046 ;; Hardware stack levels required when called: 15
 40047 ;; This function calls:
 40048 ;;		_readNVM
 40049 ;;		_validStart
 40050 ;; This function is called by:
 40051 ;;		_isConsumedEvent
 40052 ;;		_doReval
 40053 ;;		_doReqev
 40054 ;;		_reqevCallback
 40055 ;;		_rebuildHashtable
 40056 ;;		_producerProcessMessage
 40057 ;; This function uses a non-reentrant model
 40058 ;;
 40059                           
 40060                           	psect	text171
 40061   007808                     __ptext171:
 40062                           	callstack 0
 40063   007808                     _getEv:
 40064                           	callstack 12
 40065                           
 40066                           ; BSR set to: 1
 40067                           ;incstack = 0
 40068                           ;getEv@tableIndex stored from wreg
 40069   007808  0100               	movlb	0	; () banked
 40070   00780A  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40071                           
 40072                           ;../../VLCBlib_PIC/event_teach_large.c: 1120:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1121:     if ( ! validStart(tableIndex)) {
 40073   00780C  0100               	movlb	0	; () banked
 40074   00780E  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40075   007810  ECC0  F05B         	call	_validStart
 40076   007814  0900               	iorlw	0
 40077   007816  A4D8               	btfss	status,2,c
 40078   007818  D006               	goto	l18716
 40079   00781A                     u18340:
 40080                           
 40081                           ;../../VLCBlib_PIC/event_teach_large.c: 1123:         return -CMDERR_INVALID_EVENT;
 40082   00781A  0EFF               	movlw	255
 40083   00781C  0100               	movlb	0	; () banked
 40084   00781E  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40085   007820  0EF9               	movlw	249
 40086   007822  6F9D               	movwf	?_getEv& (0+255),b
 40087   007824  0012               	return	
 40088   007826                     l18716:
 40089                           
 40090                           ;../../VLCBlib_PIC/event_teach_large.c: 1125:     if (evNum >= 20) {
 40091   007826  0E13               	movlw	19
 40092   007828  0100               	movlb	0	; () banked
 40093   00782A  659D               	cpfsgt	getEv@evNum& (0+255),b
 40094   00782C  D005               	goto	l18722
 40095                           
 40096                           ; BSR set to: 0
 40097                           ;../../VLCBlib_PIC/event_teach_large.c: 1126:         return -CMDERR_INV_EV_IDX;
 40098   00782E  0EFF               	movlw	255
 40099   007830  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40100   007832  0EFA               	movlw	250
 40101   007834  6F9D               	movwf	?_getEv& (0+255),b
 40102   007836  0012               	return	
 40103   007838                     l18722:
 40104                           
 40105                           ; BSR set to: 0
 40106                           ;../../VLCBlib_PIC/event_teach_large.c: 1128:     f.asByte = (uint8_t)readNVM(FLASH_NVM_
      +                          TYPE, 0xEF80 + 16*tableIndex+0);
 40107   007838  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40108   00783A  6F9F               	movwf	??_getEv& (0+255),b
 40109   00783C  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40110   00783E  3B9F               	swapf	??_getEv& (0+255),f,b
 40111   007840  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40112   007842  0EF0               	movlw	240
 40113   007844  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40114   007846  519F               	movf	??_getEv& (0+255),w,b
 40115   007848  0B0F               	andlw	15
 40116   00784A  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40117   00784C  0EF0               	movlw	240
 40118   00784E  179F               	andwf	??_getEv& (0+255),f,b
 40119   007850  0E80               	movlw	128
 40120   007852  259F               	addwf	??_getEv& (0+255),w,b
 40121   007854  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40122   007856  0EEF               	movlw	239
 40123   007858  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40124   00785A  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40125   00785C  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40126   007860  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40127   007864  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40128   007866  0E01               	movlw	1
 40129   007868  EC57  F059         	call	_readNVM
 40130   00786C  0100               	movlb	0	; () banked
 40131   00786E  5191               	movf	?_readNVM& (0+255),w,b
 40132   007870  6FA4               	movwf	getEv@f& (0+255),b
 40133                           
 40134                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:     while (evNum >= 10) {
 40135   007872  D040               	goto	l18740
 40136   007874                     l2903:
 40137                           
 40138                           ; BSR set to: 0
 40139                           ;../../VLCBlib_PIC/event_teach_large.c: 1131:         if (! f.continued) {
 40140   007874  B9A4               	btfsc	getEv@f& (0+255),4,b
 40141   007876  D005               	goto	l18728
 40142   007878                     u18360:
 40143                           
 40144                           ; BSR set to: 0
 40145                           ;../../VLCBlib_PIC/event_teach_large.c: 1132:             return -CMDERR_NO_EV;
 40146   007878  0EFF               	movlw	255
 40147   00787A  6F9E               	movwf	(?_getEv+1)& (0+255),b
 40148   00787C  0EFB               	movlw	251
 40149   00787E  6F9D               	movwf	?_getEv& (0+255),b
 40150   007880  0012               	return	
 40151   007882                     l18728:
 40152                           
 40153                           ; BSR set to: 0
 40154                           ;../../VLCBlib_PIC/event_teach_large.c: 1134:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40155   007882  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40156   007884  0D10               	mullw	16
 40157   007886  CFF3 F09F          	movff	prodl,??_getEv
 40158   00788A  CFF4 F0A0          	movff	prodh,??_getEv+1
 40159   00788E  0E81               	movlw	129
 40160   007890  259F               	addwf	??_getEv& (0+255),w,b
 40161   007892  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40162   007894  0EEF               	movlw	239
 40163   007896  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40164   007898  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40165   00789A  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40166   00789E  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40167   0078A2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40168   0078A4  0E01               	movlw	1
 40169   0078A6  EC57  F059         	call	_readNVM
 40170   0078AA  0100               	movlb	0	; () banked
 40171   0078AC  5191               	movf	?_readNVM& (0+255),w,b
 40172   0078AE  6FA5               	movwf	getEv@tableIndex& (0+255),b
 40173                           
 40174                           ; BSR set to: 0
 40175                           ;../../VLCBlib_PIC/event_teach_large.c: 1135:         if (tableIndex == 0xff) {
 40176   0078B0  29A5               	incf	getEv@tableIndex& (0+255),w,b
 40177   0078B2  B4D8               	btfsc	status,2,c
 40178   0078B4  D7B2               	goto	u18340
 40179                           
 40180                           ; BSR set to: 0
 40181                           ;../../VLCBlib_PIC/event_teach_large.c: 1138:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40182   0078B6  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40183   0078B8  6F9F               	movwf	??_getEv& (0+255),b
 40184   0078BA  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40185   0078BC  3B9F               	swapf	??_getEv& (0+255),f,b
 40186   0078BE  3BA0               	swapf	(??_getEv+1)& (0+255),f,b
 40187   0078C0  0EF0               	movlw	240
 40188   0078C2  17A0               	andwf	(??_getEv+1)& (0+255),f,b
 40189   0078C4  519F               	movf	??_getEv& (0+255),w,b
 40190   0078C6  0B0F               	andlw	15
 40191   0078C8  13A0               	iorwf	(??_getEv+1)& (0+255),f,b
 40192   0078CA  0EF0               	movlw	240
 40193   0078CC  179F               	andwf	??_getEv& (0+255),f,b
 40194   0078CE  0E80               	movlw	128
 40195   0078D0  259F               	addwf	??_getEv& (0+255),w,b
 40196   0078D2  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40197   0078D4  0EEF               	movlw	239
 40198   0078D6  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40199   0078D8  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40200   0078DA  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40201   0078DE  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40202   0078E2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40203   0078E4  0E01               	movlw	1
 40204   0078E6  EC57  F059         	call	_readNVM
 40205   0078EA  0100               	movlb	0	; () banked
 40206   0078EC  5191               	movf	?_readNVM& (0+255),w,b
 40207   0078EE  6FA4               	movwf	getEv@f& (0+255),b
 40208                           
 40209                           ; BSR set to: 0
 40210                           ;../../VLCBlib_PIC/event_teach_large.c: 1139:         evNum -= 10;
 40211   0078F0  0E0A               	movlw	10
 40212   0078F2  5F9D               	subwf	getEv@evNum& (0+255),f,b
 40213   0078F4                     l18740:
 40214                           
 40215                           ; BSR set to: 0
 40216                           ;../../VLCBlib_PIC/event_teach_large.c: 1129:     while (evNum >= 10) {
 40217   0078F4  0E0A               	movlw	10
 40218   0078F6  619D               	cpfslt	getEv@evNum& (0+255),b
 40219   0078F8  D7BD               	goto	l2903
 40220                           
 40221                           ; BSR set to: 0
 40222                           ;../../VLCBlib_PIC/event_teach_large.c: 1141:     if (evNum+1 > f.eVsUsed) {
 40223   0078FA  519D               	movf	getEv@evNum& (0+255),w,b
 40224   0078FC  6F9F               	movwf	??_getEv& (0+255),b
 40225   0078FE  6BA0               	clrf	(??_getEv+1)& (0+255),b
 40226   007900  0E01               	movlw	1
 40227   007902  279F               	addwf	??_getEv& (0+255),f,b
 40228   007904  0E00               	movlw	0
 40229   007906  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40230   007908  51A4               	movf	getEv@f& (0+255),w,b
 40231   00790A  0B0F               	andlw	15
 40232   00790C  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40233   00790E  6BA2               	clrf	(??_getEv+3)& (0+255),b
 40234   007910  519F               	movf	??_getEv& (0+255),w,b
 40235   007912  5DA1               	subwf	(??_getEv+2)& (0+255),w,b
 40236   007914  51A2               	movf	(??_getEv+3)& (0+255),w,b
 40237   007916  0A80               	xorlw	128
 40238   007918  6FA3               	movwf	(??_getEv+4)& (0+255),b
 40239   00791A  51A0               	movf	(??_getEv+1)& (0+255),w,b
 40240   00791C  0A80               	xorlw	128
 40241   00791E  59A3               	subwfb	(??_getEv+4)& (0+255),w,b
 40242   007920  A0D8               	btfss	status,0,c
 40243   007922  D7AA               	goto	u18360
 40244                           
 40245                           ; BSR set to: 0
 40246                           ;../../VLCBlib_PIC/event_teach_large.c: 1145:     return (uint8_t)readNVM(FLASH_NVM_TYPE
      +                          , 0xEF80 + 16*tableIndex+6 +evNum);
 40247   007924  51A5               	movf	getEv@tableIndex& (0+255),w,b
 40248   007926  0D10               	mullw	16
 40249   007928  CFF3 F09F          	movff	prodl,??_getEv
 40250   00792C  CFF4 F0A0          	movff	prodh,??_getEv+1
 40251   007930  519D               	movf	getEv@evNum& (0+255),w,b
 40252   007932  279F               	addwf	??_getEv& (0+255),f,b
 40253   007934  0E00               	movlw	0
 40254   007936  23A0               	addwfc	(??_getEv+1)& (0+255),f,b
 40255   007938  0E86               	movlw	134
 40256   00793A  259F               	addwf	??_getEv& (0+255),w,b
 40257   00793C  6FA1               	movwf	(??_getEv+2)& (0+255),b
 40258   00793E  0EEF               	movlw	239
 40259   007940  21A0               	addwfc	(??_getEv+1)& (0+255),w,b
 40260   007942  6FA2               	movwf	(??_getEv+3)& (0+255),b
 40261   007944  C0A1  F091         	movff	??_getEv+2,readNVM@index
 40262   007948  C0A2  F092         	movff	??_getEv+3,readNVM@index+1
 40263   00794C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40264   00794E  0E01               	movlw	1
 40265   007950  EC57  F059         	call	_readNVM
 40266   007954  0100               	movlb	0	; () banked
 40267   007956  5191               	movf	?_readNVM& (0+255),w,b
 40268   007958  6F9D               	movwf	?_getEv& (0+255),b
 40269   00795A  6B9E               	clrf	(?_getEv+1)& (0+255),b
 40270                           
 40271                           ; BSR set to: 0
 40272   00795C  0012               	return		;funcret
 40273   00795E                     __end_of_getEv:
 40274                           	callstack 0
 40275                           
 40276 ;; *************** function _getEVs *****************
 40277 ;; Defined at:
 40278 ;;		line 1184 in file "../../VLCBlib_PIC/event_teach_large.c"
 40279 ;; Parameters:    Size  Location     Type
 40280 ;;  tableIndex      1    wreg     unsigned char 
 40281 ;; Auto vars:     Size  Location     Type
 40282 ;;  tableIndex      1   67[BANK0 ] unsigned char 
 40283 ;;  evIdx           1   66[BANK0 ] unsigned char 
 40284 ;;  evNum           1   68[BANK0 ] unsigned char 
 40285 ;;  f               1   65[BANK0 ] struct .
 40286 ;; Return value:  Size  Location     Type
 40287 ;;                  1    wreg      unsigned char 
 40288 ;; Registers used:
 40289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40290 ;; Tracked objects:
 40291 ;;		On entry : 0/0
 40292 ;;		On exit  : 0/0
 40293 ;;		Unchanged: 0/0
 40294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40296 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40297 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40298 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40299 ;;Total ram usage:        8 bytes
 40300 ;; Hardware stack levels used: 1
 40301 ;; Hardware stack levels required when called: 15
 40302 ;; This function calls:
 40303 ;;		_readNVM
 40304 ;;		_validStart
 40305 ;; This function is called by:
 40306 ;;		_consumer2QProcessMessage
 40307 ;;		_deleteActionRange
 40308 ;;		_checkRemoveTableEntry
 40309 ;; This function uses a non-reentrant model
 40310 ;;
 40311                           
 40312                           	psect	text172
 40313   008164                     __ptext172:
 40314                           	callstack 0
 40315   008164                     _getEVs:
 40316                           	callstack 9
 40317                           
 40318                           ; BSR set to: 0
 40319                           ;incstack = 0
 40320                           ;getEVs@tableIndex stored from wreg
 40321   008164  0100               	movlb	0	; () banked
 40322   008166  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 40323                           
 40324                           ;../../VLCBlib_PIC/event_teach_large.c: 1185:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1186:     uint8_t evNum;;../../VLCBlib_PIC/event_teach_large.c: 1188
      +                          :     if ( ! validStart(tableIndex)) {
 40325   008168  0100               	movlb	0	; () banked
 40326   00816A  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40327   00816C  ECC0  F05B         	call	_validStart
 40328   008170  0900               	iorlw	0
 40329   008172  A4D8               	btfss	status,2,c
 40330   008174  D002               	goto	l18948
 40331   008176                     u18610:
 40332                           
 40333                           ;../../VLCBlib_PIC/event_teach_large.c: 1190:         return CMDERR_INVALID_EVENT;
 40334   008176  0E07               	movlw	7
 40335   008178  0012               	return	
 40336   00817A                     l18948:
 40337                           
 40338                           ;../../VLCBlib_PIC/event_teach_large.c: 1192:     for (evNum=0; evNum < 20; ) {
 40339   00817A  0E00               	movlw	0
 40340   00817C  0100               	movlb	0	; () banked
 40341   00817E  6FA4               	movwf	getEVs@evNum& (0+255),b
 40342   008180                     l18954:
 40343                           
 40344                           ; BSR set to: 0
 40345                           ;../../VLCBlib_PIC/event_teach_large.c: 1193:         uint8_t evIdx;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1194:         for (evIdx=0; evIdx < 10; evIdx++) {
 40346   008180  0E00               	movlw	0
 40347   008182  6FA2               	movwf	getEVs@evIdx& (0+255),b
 40348   008184                     l18960:
 40349                           
 40350                           ; BSR set to: 0
 40351                           ;../../VLCBlib_PIC/event_teach_large.c: 1195:             evs[evNum] = (uint8_t)readNVM(
      +                          FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+6 +evIdx);
 40352   008184  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40353   008186  0D10               	mullw	16
 40354   008188  CFF3 F09D          	movff	prodl,??_getEVs
 40355   00818C  CFF4 F09E          	movff	prodh,??_getEVs+1
 40356   008190  51A2               	movf	getEVs@evIdx& (0+255),w,b
 40357   008192  279D               	addwf	??_getEVs& (0+255),f,b
 40358   008194  0E00               	movlw	0
 40359   008196  239E               	addwfc	(??_getEVs+1)& (0+255),f,b
 40360   008198  0E86               	movlw	134
 40361   00819A  259D               	addwf	??_getEVs& (0+255),w,b
 40362   00819C  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40363   00819E  0EEF               	movlw	239
 40364   0081A0  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40365   0081A2  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40366   0081A4  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40367   0081A8  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40368   0081AC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40369   0081AE  0E01               	movlw	1
 40370   0081B0  EC57  F059         	call	_readNVM
 40371   0081B4  0E20               	movlw	low _evs
 40372   0081B6  0100               	movlb	0	; () banked
 40373   0081B8  25A4               	addwf	getEVs@evNum& (0+255),w,b
 40374   0081BA  6ED9               	movwf	fsr2l,c
 40375   0081BC  6ADA               	clrf	fsr2h,c
 40376   0081BE  0E02               	movlw	high _evs
 40377   0081C0  22DA               	addwfc	fsr2h,f,c
 40378   0081C2  C091  FFDF         	movff	?_readNVM,indf2
 40379                           
 40380                           ; BSR set to: 0
 40381                           ;../../VLCBlib_PIC/event_teach_large.c: 1196:             evNum++;
 40382   0081C6  2BA4               	incf	getEVs@evNum& (0+255),f,b
 40383                           
 40384                           ; BSR set to: 0
 40385                           ;../../VLCBlib_PIC/event_teach_large.c: 1197:         }
 40386   0081C8  2BA2               	incf	getEVs@evIdx& (0+255),f,b
 40387                           
 40388                           ; BSR set to: 0
 40389   0081CA  0E09               	movlw	9
 40390   0081CC  65A2               	cpfsgt	getEVs@evIdx& (0+255),b
 40391   0081CE  D7DA               	goto	l18960
 40392                           
 40393                           ; BSR set to: 0
 40394                           ;../../VLCBlib_PIC/event_teach_large.c: 1198:         f.asByte = (uint8_t)readNVM(FLASH_
      +                          NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40395   0081D0  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40396   0081D2  6F9D               	movwf	??_getEVs& (0+255),b
 40397   0081D4  6B9E               	clrf	(??_getEVs+1)& (0+255),b
 40398   0081D6  3B9D               	swapf	??_getEVs& (0+255),f,b
 40399   0081D8  3B9E               	swapf	(??_getEVs+1)& (0+255),f,b
 40400   0081DA  0EF0               	movlw	240
 40401   0081DC  179E               	andwf	(??_getEVs+1)& (0+255),f,b
 40402   0081DE  519D               	movf	??_getEVs& (0+255),w,b
 40403   0081E0  0B0F               	andlw	15
 40404   0081E2  139E               	iorwf	(??_getEVs+1)& (0+255),f,b
 40405   0081E4  0EF0               	movlw	240
 40406   0081E6  179D               	andwf	??_getEVs& (0+255),f,b
 40407   0081E8  0E80               	movlw	128
 40408   0081EA  259D               	addwf	??_getEVs& (0+255),w,b
 40409   0081EC  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40410   0081EE  0EEF               	movlw	239
 40411   0081F0  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40412   0081F2  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40413   0081F4  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40414   0081F8  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40415   0081FC  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40416   0081FE  0E01               	movlw	1
 40417   008200  EC57  F059         	call	_readNVM
 40418   008204  0100               	movlb	0	; () banked
 40419   008206  5191               	movf	?_readNVM& (0+255),w,b
 40420   008208  6FA1               	movwf	getEVs@f& (0+255),b
 40421                           
 40422                           ; BSR set to: 0
 40423                           ;../../VLCBlib_PIC/event_teach_large.c: 1199:         if (! f.continued) {
 40424   00820A  B9A1               	btfsc	getEVs@f& (0+255),4,b
 40425   00820C  D00F               	goto	l18986
 40426   00820E                     u18630:
 40427                           
 40428                           ; BSR set to: 0
 40429                           ;../../VLCBlib_PIC/event_teach_large.c: 1200:             for (; evNum < 20; evNum++) {
 40430   00820E  0E13               	movlw	19
 40431   008210  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 40432   008212  D001               	goto	l18976
 40433   008214  D009               	goto	l18982
 40434   008216                     l18976:
 40435                           
 40436                           ; BSR set to: 0
 40437                           ;../../VLCBlib_PIC/event_teach_large.c: 1201:                 evs[evNum] = 0;
 40438   008216  0E20               	movlw	low _evs
 40439   008218  25A4               	addwf	getEVs@evNum& (0+255),w,b
 40440   00821A  6ED9               	movwf	fsr2l,c
 40441   00821C  6ADA               	clrf	fsr2h,c
 40442   00821E  0E02               	movlw	high _evs
 40443   008220  22DA               	addwfc	fsr2h,f,c
 40444   008222  6ADF               	clrf	indf2,c
 40445                           
 40446                           ; BSR set to: 0
 40447                           ;../../VLCBlib_PIC/event_teach_large.c: 1202:             }
 40448   008224  2BA4               	incf	getEVs@evNum& (0+255),f,b
 40449   008226  D7F3               	goto	u18630
 40450   008228                     l18982:
 40451                           
 40452                           ; BSR set to: 0
 40453                           ;../../VLCBlib_PIC/event_teach_large.c: 1203:             return 0;
 40454   008228  0E00               	movlw	0
 40455   00822A  0012               	return	
 40456   00822C                     l18986:
 40457                           
 40458                           ; BSR set to: 0
 40459                           ;../../VLCBlib_PIC/event_teach_large.c: 1205:         tableIndex = (uint8_t)readNVM(FLAS
      +                          H_NVM_TYPE, 0xEF80 + 16*tableIndex+1);
 40460   00822C  51A3               	movf	getEVs@tableIndex& (0+255),w,b
 40461   00822E  0D10               	mullw	16
 40462   008230  CFF3 F09D          	movff	prodl,??_getEVs
 40463   008234  CFF4 F09E          	movff	prodh,??_getEVs+1
 40464   008238  0E81               	movlw	129
 40465   00823A  259D               	addwf	??_getEVs& (0+255),w,b
 40466   00823C  6F9F               	movwf	(??_getEVs+2)& (0+255),b
 40467   00823E  0EEF               	movlw	239
 40468   008240  219E               	addwfc	(??_getEVs+1)& (0+255),w,b
 40469   008242  6FA0               	movwf	(??_getEVs+3)& (0+255),b
 40470   008244  C09F  F091         	movff	??_getEVs+2,readNVM@index
 40471   008248  C0A0  F092         	movff	??_getEVs+3,readNVM@index+1
 40472   00824C  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40473   00824E  0E01               	movlw	1
 40474   008250  EC57  F059         	call	_readNVM
 40475   008254  0100               	movlb	0	; () banked
 40476   008256  5191               	movf	?_readNVM& (0+255),w,b
 40477   008258  6FA3               	movwf	getEVs@tableIndex& (0+255),b
 40478                           
 40479                           ; BSR set to: 0
 40480                           ;../../VLCBlib_PIC/event_teach_large.c: 1206:         if (tableIndex == 0xff) {
 40481   00825A  29A3               	incf	getEVs@tableIndex& (0+255),w,b
 40482   00825C  B4D8               	btfsc	status,2,c
 40483   00825E  D78B               	goto	u18610
 40484                           
 40485                           ; BSR set to: 0
 40486                           ;../../VLCBlib_PIC/event_teach_large.c: 1209:     }
 40487   008260  0E13               	movlw	19
 40488   008262  65A4               	cpfsgt	getEVs@evNum& (0+255),b
 40489   008264  D78D               	goto	l18954
 40490   008266  D7E0               	goto	l18982
 40491   008268                     __end_of_getEVs:
 40492                           	callstack 0
 40493                           
 40494 ;; *************** function _validStart *****************
 40495 ;; Defined at:
 40496 ;;		line 1283 in file "../../VLCBlib_PIC/event_teach_large.c"
 40497 ;; Parameters:    Size  Location     Type
 40498 ;;  tableIndex      1    wreg     unsigned char 
 40499 ;; Auto vars:     Size  Location     Type
 40500 ;;  tableIndex      1   59[BANK0 ] unsigned char 
 40501 ;;  f               1   60[BANK0 ] struct .
 40502 ;; Return value:  Size  Location     Type
 40503 ;;                  1    wreg      enum E12760
 40504 ;; Registers used:
 40505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40506 ;; Tracked objects:
 40507 ;;		On entry : 0/0
 40508 ;;		On exit  : 0/0
 40509 ;;		Unchanged: 0/0
 40510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40512 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40514 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40515 ;;Total ram usage:        6 bytes
 40516 ;; Hardware stack levels used: 1
 40517 ;; Hardware stack levels required when called: 14
 40518 ;; This function calls:
 40519 ;;		_readNVM
 40520 ;; This function is called by:
 40521 ;;		_deleteActionRange
 40522 ;;		_nerdCallback
 40523 ;;		_doNenrd
 40524 ;;		_doRqevn
 40525 ;;		_doReval
 40526 ;;		_removeTableEntry
 40527 ;;		_checkRemoveTableEntry
 40528 ;;		_getEv
 40529 ;;		_numEv
 40530 ;;		_getEVs
 40531 ;;		_rebuildHashtable
 40532 ;;		_deleteHappeningRange
 40533 ;; This function uses a non-reentrant model
 40534 ;;
 40535                           
 40536                           	psect	text173
 40537   00B780                     __ptext173:
 40538                           	callstack 0
 40539   00B780                     _validStart:
 40540                           	callstack 13
 40541                           
 40542                           ;incstack = 0
 40543                           ;validStart@tableIndex stored from wreg
 40544   00B780  0100               	movlb	0	; () banked
 40545   00B782  6F9B               	movwf	validStart@tableIndex& (0+255),b
 40546                           
 40547                           ;../../VLCBlib_PIC/event_teach_large.c: 1284:     EventTableFlags f;;../../VLCBlib_PIC/e
      +                          vent_teach_large.c: 1288:     f.asByte = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*ta
      +                          bleIndex+0);
 40548   00B784  0100               	movlb	0	; () banked
 40549   00B786  519B               	movf	validStart@tableIndex& (0+255),w,b
 40550   00B788  6F97               	movwf	??_validStart& (0+255),b
 40551   00B78A  6B98               	clrf	(??_validStart+1)& (0+255),b
 40552   00B78C  3B97               	swapf	??_validStart& (0+255),f,b
 40553   00B78E  3B98               	swapf	(??_validStart+1)& (0+255),f,b
 40554   00B790  0EF0               	movlw	240
 40555   00B792  1798               	andwf	(??_validStart+1)& (0+255),f,b
 40556   00B794  5197               	movf	??_validStart& (0+255),w,b
 40557   00B796  0B0F               	andlw	15
 40558   00B798  1398               	iorwf	(??_validStart+1)& (0+255),f,b
 40559   00B79A  0EF0               	movlw	240
 40560   00B79C  1797               	andwf	??_validStart& (0+255),f,b
 40561   00B79E  0E80               	movlw	128
 40562   00B7A0  2597               	addwf	??_validStart& (0+255),w,b
 40563   00B7A2  6F99               	movwf	(??_validStart+2)& (0+255),b
 40564   00B7A4  0EEF               	movlw	239
 40565   00B7A6  2198               	addwfc	(??_validStart+1)& (0+255),w,b
 40566   00B7A8  6F9A               	movwf	(??_validStart+3)& (0+255),b
 40567   00B7AA  C099  F091         	movff	??_validStart+2,readNVM@index
 40568   00B7AE  C09A  F092         	movff	??_validStart+3,readNVM@index+1
 40569   00B7B2  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40570   00B7B4  0E01               	movlw	1
 40571   00B7B6  EC57  F059         	call	_readNVM
 40572   00B7BA  0100               	movlb	0	; () banked
 40573   00B7BC  5191               	movf	?_readNVM& (0+255),w,b
 40574   00B7BE  6F9C               	movwf	validStart@f& (0+255),b
 40575                           
 40576                           ; BSR set to: 0
 40577                           ;../../VLCBlib_PIC/event_teach_large.c: 1289:     if (( !f.freeEntry) && ( ! f.continuat
      +                          ion)) {
 40578   00B7C0  AF9C               	btfss	validStart@f& (0+255),7,b
 40579                           
 40580                           ; BSR set to: 0
 40581   00B7C2  BB9C               	btfsc	validStart@f& (0+255),5,b
 40582   00B7C4  D002               	goto	l18678
 40583                           
 40584                           ; BSR set to: 0
 40585                           ;../../VLCBlib_PIC/event_teach_large.c: 1290:         return TRUE;
 40586   00B7C6  0E01               	movlw	1
 40587   00B7C8  0012               	return	
 40588   00B7CA                     l18678:
 40589                           
 40590                           ; BSR set to: 0
 40591                           ;../../VLCBlib_PIC/event_teach_large.c: 1292:         return FALSE;
 40592   00B7CA  0E00               	movlw	0
 40593                           
 40594                           ; BSR set to: 0
 40595   00B7CC  0012               	return		;funcret
 40596   00B7CE                     __end_of_validStart:
 40597                           	callstack 0
 40598                           
 40599 ;; *************** function _findEvent *****************
 40600 ;; Defined at:
 40601 ;;		line 999 in file "../../VLCBlib_PIC/event_teach_large.c"
 40602 ;; Parameters:    Size  Location     Type
 40603 ;;  nodeNumber      2    0[BANK1 ] unsigned short 
 40604 ;;  eventNumber     2    2[BANK1 ] unsigned short 
 40605 ;; Auto vars:     Size  Location     Type
 40606 ;;  en              2    8[BANK1 ] unsigned short 
 40607 ;;  nn              2    6[BANK1 ] unsigned short 
 40608 ;;  tableIndex      1   12[BANK1 ] unsigned char 
 40609 ;;  chainIdx        1   11[BANK1 ] unsigned char 
 40610 ;;  hash            1   10[BANK1 ] unsigned char 
 40611 ;; Return value:  Size  Location     Type
 40612 ;;                  1    wreg      unsigned char 
 40613 ;; Registers used:
 40614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40615 ;; Tracked objects:
 40616 ;;		On entry : 0/0
 40617 ;;		On exit  : 0/0
 40618 ;;		Unchanged: 0/0
 40619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40620 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40621 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40622 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40623 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40624 ;;Total ram usage:       13 bytes
 40625 ;; Hardware stack levels used: 1
 40626 ;; Hardware stack levels required when called: 15
 40627 ;; This function calls:
 40628 ;;		_getEN
 40629 ;;		_getHash
 40630 ;;		_getNN
 40631 ;; This function is called by:
 40632 ;;		_consumer2QProcessMessage
 40633 ;;		_ackEventProcessMessage
 40634 ;;		_doReqev
 40635 ;;		_removeEvent
 40636 ;;		_addEvent
 40637 ;;		_producerProcessMessage
 40638 ;; This function uses a non-reentrant model
 40639 ;;
 40640                           
 40641                           	psect	text174
 40642   00A284                     __ptext174:
 40643                           	callstack 0
 40644   00A284                     _findEvent:
 40645                           	callstack 12
 40646                           
 40647                           ;../../VLCBlib_PIC/event_teach_large.c: 1001:     uint8_t hash = getHash(nodeNumber, eve
      +                          ntNumber);
 40648                           
 40649                           ; BSR set to: 0
 40650                           ;incstack = 0
 40651   00A284  C1BA  F0A3         	movff	findEvent@nodeNumber,getHash@nn
 40652   00A288  C1BB  F0A4         	movff	findEvent@nodeNumber+1,getHash@nn+1
 40653   00A28C  C1BC  F0A5         	movff	findEvent@eventNumber,getHash@en
 40654   00A290  C1BD  F0A6         	movff	findEvent@eventNumber+1,getHash@en+1
 40655   00A294  EC89  F061         	call	_getHash	;wreg free
 40656   00A298  0101               	movlb	1	; () banked
 40657   00A29A  6FC4               	movwf	findEvent@hash& (0+255),b
 40658                           
 40659                           ; BSR set to: 1
 40660                           ;../../VLCBlib_PIC/event_teach_large.c: 1002:     uint8_t chainIdx;;../../VLCBlib_PIC/ev
      +                          ent_teach_large.c: 1003:     for (chainIdx=0; chainIdx<20; chainIdx++) {
 40661   00A29C  0E00               	movlw	0
 40662   00A29E  6FC5               	movwf	findEvent@chainIdx& (0+255),b
 40663   00A2A0                     l19352:
 40664                           
 40665                           ; BSR set to: 1
 40666                           ;../../VLCBlib_PIC/event_teach_large.c: 1004:         uint8_t tableIndex = eventChains[h
      +                          ash][chainIdx];
 40667   00A2A0  51C4               	movf	findEvent@hash& (0+255),w,b
 40668   00A2A2  0D14               	mullw	20
 40669   00A2A4  0E48               	movlw	low _eventChains
 40670   00A2A6  24F3               	addwf	243,w,c
 40671   00A2A8  6FBE               	movwf	??_findEvent& (0+255),b
 40672   00A2AA  0E05               	movlw	high _eventChains
 40673   00A2AC  20F4               	addwfc	prodh,w,c
 40674   00A2AE  6FBF               	movwf	(??_findEvent+1)& (0+255),b
 40675   00A2B0  51C5               	movf	findEvent@chainIdx& (0+255),w,b
 40676   00A2B2  25BE               	addwf	??_findEvent& (0+255),w,b
 40677   00A2B4  6ED9               	movwf	fsr2l,c
 40678   00A2B6  0E00               	movlw	0
 40679   00A2B8  21BF               	addwfc	(??_findEvent+1)& (0+255),w,b
 40680   00A2BA  6EDA               	movwf	fsr2h,c
 40681   00A2BC  50DF               	movf	indf2,w,c
 40682   00A2BE  6FC6               	movwf	findEvent@tableIndex& (0+255),b
 40683                           
 40684                           ; BSR set to: 1
 40685                           ;../../VLCBlib_PIC/event_teach_large.c: 1005:         uint16_t nn, en;;../../VLCBlib_PIC
      +                          /event_teach_large.c: 1006:         if (tableIndex == 0xff) return 0xff;
 40686   00A2C0  29C6               	incf	findEvent@tableIndex& (0+255),w,b
 40687   00A2C2  A4D8               	btfss	status,2,c
 40688   00A2C4  D002               	goto	l19360
 40689   00A2C6                     u19170:
 40690                           
 40691                           ; BSR set to: 1
 40692   00A2C6  0EFF               	movlw	255
 40693   00A2C8  0012               	return	
 40694   00A2CA                     l19360:
 40695                           
 40696                           ; BSR set to: 1
 40697                           ;../../VLCBlib_PIC/event_teach_large.c: 1007:         nn = getNN(tableIndex);
 40698   00A2CA  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 40699   00A2CC  EC46  F049         	call	_getNN
 40700   00A2D0  C097  F1C0         	movff	?_getNN,findEvent@nn
 40701   00A2D4  C098  F1C1         	movff	?_getNN+1,findEvent@nn+1
 40702                           
 40703                           ;../../VLCBlib_PIC/event_teach_large.c: 1008:         en = getEN(tableIndex);
 40704   00A2D8  0101               	movlb	1	; () banked
 40705   00A2DA  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 40706   00A2DC  EC22  F055         	call	_getEN
 40707   00A2E0  C097  F1C2         	movff	?_getEN,findEvent@en
 40708   00A2E4  C098  F1C3         	movff	?_getEN+1,findEvent@en+1
 40709                           
 40710                           ;../../VLCBlib_PIC/event_teach_large.c: 1009:         if ((nn == nodeNumber) && (en == e
      +                          ventNumber)) {
 40711   00A2E8  0101               	movlb	1	; () banked
 40712   00A2EA  51BA               	movf	findEvent@nodeNumber& (0+255),w,b
 40713   00A2EC  19C0               	xorwf	findEvent@nn& (0+255),w,b
 40714   00A2EE  E10D               	bnz	l19370
 40715   00A2F0  51BB               	movf	(findEvent@nodeNumber+1)& (0+255),w,b
 40716   00A2F2  19C1               	xorwf	(findEvent@nn+1)& (0+255),w,b
 40717   00A2F4  A4D8               	btfss	status,2,c
 40718   00A2F6  D009               	goto	l19370
 40719                           
 40720                           ; BSR set to: 1
 40721   00A2F8  51BC               	movf	findEvent@eventNumber& (0+255),w,b
 40722   00A2FA  19C2               	xorwf	findEvent@en& (0+255),w,b
 40723   00A2FC  E106               	bnz	l19370
 40724   00A2FE  51BD               	movf	(findEvent@eventNumber+1)& (0+255),w,b
 40725   00A300  19C3               	xorwf	(findEvent@en+1)& (0+255),w,b
 40726   00A302  A4D8               	btfss	status,2,c
 40727   00A304  D002               	goto	l19370
 40728                           
 40729                           ; BSR set to: 1
 40730                           ;../../VLCBlib_PIC/event_teach_large.c: 1010:             return tableIndex;
 40731   00A306  51C6               	movf	findEvent@tableIndex& (0+255),w,b
 40732   00A308  0012               	return	
 40733   00A30A                     l19370:
 40734                           
 40735                           ; BSR set to: 1
 40736                           ;../../VLCBlib_PIC/event_teach_large.c: 1012:     }
 40737   00A30A  2BC5               	incf	findEvent@chainIdx& (0+255),f,b
 40738                           
 40739                           ; BSR set to: 1
 40740   00A30C  0E13               	movlw	19
 40741   00A30E  65C5               	cpfsgt	findEvent@chainIdx& (0+255),b
 40742   00A310  D7C7               	goto	l19352
 40743   00A312  D7D9               	goto	u19170
 40744   00A314                     __end_of_findEvent:
 40745                           	callstack 0
 40746                           
 40747 ;; *************** function _getNN *****************
 40748 ;; Defined at:
 40749 ;;		line 1220 in file "../../VLCBlib_PIC/event_teach_large.c"
 40750 ;; Parameters:    Size  Location     Type
 40751 ;;  tableIndex      1    wreg     unsigned char 
 40752 ;; Auto vars:     Size  Location     Type
 40753 ;;  tableIndex      1   66[BANK0 ] unsigned char 
 40754 ;;  lo              2   63[BANK0 ] unsigned short 
 40755 ;;  hi              2   61[BANK0 ] unsigned short 
 40756 ;;  f               1   65[BANK0 ] struct .
 40757 ;; Return value:  Size  Location     Type
 40758 ;;                  2   55[BANK0 ] unsigned short 
 40759 ;; Registers used:
 40760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40761 ;; Tracked objects:
 40762 ;;		On entry : 0/0
 40763 ;;		On exit  : 0/0
 40764 ;;		Unchanged: 0/0
 40765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40767 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40768 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40769 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40770 ;;Total ram usage:       12 bytes
 40771 ;; Hardware stack levels used: 1
 40772 ;; Hardware stack levels required when called: 14
 40773 ;; This function calls:
 40774 ;;		_readNVM
 40775 ;; This function is called by:
 40776 ;;		_nerdCallback
 40777 ;;		_doNenrd
 40778 ;;		_reqevCallback
 40779 ;;		_findEvent
 40780 ;;		_rebuildHashtable
 40781 ;;		_sendProducedEvent
 40782 ;; This function uses a non-reentrant model
 40783 ;;
 40784                           
 40785                           	psect	text175
 40786   00928C                     __ptext175:
 40787                           	callstack 0
 40788   00928C                     _getNN:
 40789                           	callstack 13
 40790                           
 40791                           ; BSR set to: 1
 40792                           ;incstack = 0
 40793                           ;getNN@tableIndex stored from wreg
 40794   00928C  0100               	movlb	0	; () banked
 40795   00928E  6FA2               	movwf	getNN@tableIndex& (0+255),b
 40796                           
 40797                           ;../../VLCBlib_PIC/event_teach_large.c: 1221:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1222:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1223:     Ev
      +                          entTableFlags f;;../../VLCBlib_PIC/event_teach_large.c: 1225:     f.asByte = (uint8_t)re
      +                          adNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+0);
 40798   009290  0100               	movlb	0	; () banked
 40799   009292  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40800   009294  6F99               	movwf	??_getNN& (0+255),b
 40801   009296  6B9A               	clrf	(??_getNN+1)& (0+255),b
 40802   009298  3B99               	swapf	??_getNN& (0+255),f,b
 40803   00929A  3B9A               	swapf	(??_getNN+1)& (0+255),f,b
 40804   00929C  0EF0               	movlw	240
 40805   00929E  179A               	andwf	(??_getNN+1)& (0+255),f,b
 40806   0092A0  5199               	movf	??_getNN& (0+255),w,b
 40807   0092A2  0B0F               	andlw	15
 40808   0092A4  139A               	iorwf	(??_getNN+1)& (0+255),f,b
 40809   0092A6  0EF0               	movlw	240
 40810   0092A8  1799               	andwf	??_getNN& (0+255),f,b
 40811   0092AA  0E80               	movlw	128
 40812   0092AC  2599               	addwf	??_getNN& (0+255),w,b
 40813   0092AE  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40814   0092B0  0EEF               	movlw	239
 40815   0092B2  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40816   0092B4  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40817   0092B6  C09B  F091         	movff	??_getNN+2,readNVM@index
 40818   0092BA  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40819   0092BE  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40820   0092C0  0E01               	movlw	1
 40821   0092C2  EC57  F059         	call	_readNVM
 40822   0092C6  0100               	movlb	0	; () banked
 40823   0092C8  5191               	movf	?_readNVM& (0+255),w,b
 40824   0092CA  6FA1               	movwf	getNN@f& (0+255),b
 40825                           
 40826                           ; BSR set to: 0
 40827                           ;../../VLCBlib_PIC/event_teach_large.c: 1226:     if (f.forceOwnNN) {
 40828   0092CC  ADA1               	btfss	getNN@f& (0+255),6,b
 40829   0092CE  D005               	goto	l18826
 40830                           
 40831                           ; BSR set to: 0
 40832                           ;../../VLCBlib_PIC/event_teach_large.c: 1227:         return nn.word;
 40833   0092D0  C0BF  F097         	movff	_nn,?_getNN
 40834   0092D4  C0C0  F098         	movff	_nn+1,?_getNN+1
 40835   0092D8  0012               	return	
 40836   0092DA                     l18826:
 40837                           
 40838                           ; BSR set to: 0
 40839                           ;../../VLCBlib_PIC/event_teach_large.c: 1229:     lo = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2);
 40840   0092DA  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40841   0092DC  0D10               	mullw	16
 40842   0092DE  CFF3 F099          	movff	prodl,??_getNN
 40843   0092E2  CFF4 F09A          	movff	prodh,??_getNN+1
 40844   0092E6  0E82               	movlw	130
 40845   0092E8  2599               	addwf	??_getNN& (0+255),w,b
 40846   0092EA  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40847   0092EC  0EEF               	movlw	239
 40848   0092EE  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40849   0092F0  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40850   0092F2  C09B  F091         	movff	??_getNN+2,readNVM@index
 40851   0092F6  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40852   0092FA  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40853   0092FC  0E01               	movlw	1
 40854   0092FE  EC57  F059         	call	_readNVM
 40855   009302  0100               	movlb	0	; () banked
 40856   009304  5191               	movf	?_readNVM& (0+255),w,b
 40857   009306  6F9F               	movwf	getNN@lo& (0+255),b
 40858   009308  6BA0               	clrf	(getNN@lo+1)& (0+255),b
 40859                           
 40860                           ;../../VLCBlib_PIC/event_teach_large.c: 1230:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+2 +1);
 40861   00930A  51A2               	movf	getNN@tableIndex& (0+255),w,b
 40862   00930C  0D10               	mullw	16
 40863   00930E  CFF3 F099          	movff	prodl,??_getNN
 40864   009312  CFF4 F09A          	movff	prodh,??_getNN+1
 40865   009316  0E83               	movlw	131
 40866   009318  2599               	addwf	??_getNN& (0+255),w,b
 40867   00931A  6F9B               	movwf	(??_getNN+2)& (0+255),b
 40868   00931C  0EEF               	movlw	239
 40869   00931E  219A               	addwfc	(??_getNN+1)& (0+255),w,b
 40870   009320  6F9C               	movwf	(??_getNN+3)& (0+255),b
 40871   009322  C09B  F091         	movff	??_getNN+2,readNVM@index
 40872   009326  C09C  F092         	movff	??_getNN+3,readNVM@index+1
 40873   00932A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 40874   00932C  0E01               	movlw	1
 40875   00932E  EC57  F059         	call	_readNVM
 40876   009332  0100               	movlb	0	; () banked
 40877   009334  5191               	movf	?_readNVM& (0+255),w,b
 40878   009336  6F9D               	movwf	getNN@hi& (0+255),b
 40879   009338  6B9E               	clrf	(getNN@hi+1)& (0+255),b
 40880                           
 40881                           ; BSR set to: 0
 40882                           ;../../VLCBlib_PIC/event_teach_large.c: 1231:     return lo | (hi << 8);
 40883   00933A  519D               	movf	getNN@hi& (0+255),w,b
 40884   00933C  6F9A               	movwf	(??_getNN+1)& (0+255),b
 40885   00933E  6B99               	clrf	??_getNN& (0+255),b
 40886   009340  519F               	movf	getNN@lo& (0+255),w,b
 40887   009342  1199               	iorwf	??_getNN& (0+255),w,b
 40888   009344  6F97               	movwf	?_getNN& (0+255),b
 40889   009346  51A0               	movf	(getNN@lo+1)& (0+255),w,b
 40890   009348  119A               	iorwf	(??_getNN+1)& (0+255),w,b
 40891   00934A  6F98               	movwf	(?_getNN+1)& (0+255),b
 40892                           
 40893                           ; BSR set to: 0
 40894   00934C  0012               	return		;funcret
 40895   00934E                     __end_of_getNN:
 40896                           	callstack 0
 40897                           
 40898 ;; *************** function _getHash *****************
 40899 ;; Defined at:
 40900 ;;		line 1314 in file "../../VLCBlib_PIC/event_teach_large.c"
 40901 ;; Parameters:    Size  Location     Type
 40902 ;;  nn              2   67[BANK0 ] unsigned short 
 40903 ;;  en              2   69[BANK0 ] unsigned short 
 40904 ;; Auto vars:     Size  Location     Type
 40905 ;;  hash            1   72[BANK0 ] unsigned char 
 40906 ;; Return value:  Size  Location     Type
 40907 ;;                  1    wreg      unsigned char 
 40908 ;; Registers used:
 40909 ;;		wreg, status,2, status,0, prodl, prodh
 40910 ;; Tracked objects:
 40911 ;;		On entry : 0/0
 40912 ;;		On exit  : 0/0
 40913 ;;		Unchanged: 0/0
 40914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40915 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40917 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40918 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40919 ;;Total ram usage:        6 bytes
 40920 ;; Hardware stack levels used: 1
 40921 ;; Hardware stack levels required when called: 12
 40922 ;; This function calls:
 40923 ;;		Nothing
 40924 ;; This function is called by:
 40925 ;;		_findEvent
 40926 ;;		_rebuildHashtable
 40927 ;; This function uses a non-reentrant model
 40928 ;;
 40929                           
 40930                           	psect	text176
 40931   00C312                     __ptext176:
 40932                           	callstack 0
 40933   00C312                     _getHash:
 40934                           	callstack 15
 40935                           
 40936                           ;../../VLCBlib_PIC/event_teach_large.c: 1315:     uint8_t hash;;../../VLCBlib_PIC/event_
      +                          teach_large.c: 1317:     hash = (uint8_t)(nn ^ (nn >> 8U));
 40937                           
 40938                           ; BSR set to: 0
 40939                           ;incstack = 0
 40940   00C312  0100               	movlb	0	; () banked
 40941   00C314  51A4               	movf	(getHash@nn+1)& (0+255),w,b
 40942   00C316  19A3               	xorwf	getHash@nn& (0+255),w,b
 40943   00C318  6FA8               	movwf	getHash@hash& (0+255),b
 40944                           
 40945                           ; BSR set to: 0
 40946                           ;../../VLCBlib_PIC/event_teach_large.c: 1318:     hash = (uint8_t)(7U*hash + (en ^ (en>>
      +                          8U)));
 40947   00C31A  51A6               	movf	(getHash@en+1)& (0+255),w,b
 40948   00C31C  19A5               	xorwf	getHash@en& (0+255),w,b
 40949   00C31E  6FA7               	movwf	??_getHash& (0+255),b
 40950   00C320  51A8               	movf	getHash@hash& (0+255),w,b
 40951   00C322  0D07               	mullw	7
 40952   00C324  50F3               	movf	243,w,c
 40953   00C326  25A7               	addwf	??_getHash& (0+255),w,b
 40954   00C328  6FA8               	movwf	getHash@hash& (0+255),b
 40955                           
 40956                           ; BSR set to: 0
 40957                           ;../../VLCBlib_PIC/event_teach_large.c: 1320:     hash %= 32;
 40958   00C32A  0E1F               	movlw	31
 40959   00C32C  17A8               	andwf	getHash@hash& (0+255),f,b
 40960                           
 40961                           ; BSR set to: 0
 40962                           ;../../VLCBlib_PIC/event_teach_large.c: 1321:     return hash;
 40963   00C32E  51A8               	movf	getHash@hash& (0+255),w,b
 40964                           
 40965                           ; BSR set to: 0
 40966   00C330  0012               	return		;funcret
 40967   00C332                     __end_of_getHash:
 40968                           	callstack 0
 40969                           
 40970 ;; *************** function _getEN *****************
 40971 ;; Defined at:
 40972 ;;		line 1241 in file "../../VLCBlib_PIC/event_teach_large.c"
 40973 ;; Parameters:    Size  Location     Type
 40974 ;;  tableIndex      1    wreg     unsigned char 
 40975 ;; Auto vars:     Size  Location     Type
 40976 ;;  tableIndex      1   65[BANK0 ] unsigned char 
 40977 ;;  lo              2   63[BANK0 ] unsigned short 
 40978 ;;  hi              2   61[BANK0 ] unsigned short 
 40979 ;; Return value:  Size  Location     Type
 40980 ;;                  2   55[BANK0 ] unsigned short 
 40981 ;; Registers used:
 40982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40983 ;; Tracked objects:
 40984 ;;		On entry : 0/0
 40985 ;;		On exit  : 0/0
 40986 ;;		Unchanged: 0/0
 40987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 40988 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40989 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40990 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40991 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 40992 ;;Total ram usage:       11 bytes
 40993 ;; Hardware stack levels used: 1
 40994 ;; Hardware stack levels required when called: 14
 40995 ;; This function calls:
 40996 ;;		_readNVM
 40997 ;; This function is called by:
 40998 ;;		_nerdCallback
 40999 ;;		_doNenrd
 41000 ;;		_reqevCallback
 41001 ;;		_findEvent
 41002 ;;		_rebuildHashtable
 41003 ;;		_sendProducedEvent
 41004 ;; This function uses a non-reentrant model
 41005 ;;
 41006                           
 41007                           	psect	text177
 41008   00AA44                     __ptext177:
 41009                           	callstack 0
 41010   00AA44                     _getEN:
 41011                           	callstack 13
 41012                           
 41013                           ; BSR set to: 0
 41014                           ;incstack = 0
 41015                           ;getEN@tableIndex stored from wreg
 41016   00AA44  0100               	movlb	0	; () banked
 41017   00AA46  6FA1               	movwf	getEN@tableIndex& (0+255),b
 41018                           
 41019                           ;../../VLCBlib_PIC/event_teach_large.c: 1242:     uint16_t hi;;../../VLCBlib_PIC/event_t
      +                          each_large.c: 1243:     uint16_t lo;;../../VLCBlib_PIC/event_teach_large.c: 1245:     lo
      +                           = (uint8_t)readNVM(FLASH_NVM_TYPE, 0xEF80 + 16*tableIndex+4);
 41020   00AA48  0100               	movlb	0	; () banked
 41021   00AA4A  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41022   00AA4C  0D10               	mullw	16
 41023   00AA4E  CFF3 F099          	movff	prodl,??_getEN
 41024   00AA52  CFF4 F09A          	movff	prodh,??_getEN+1
 41025   00AA56  0E84               	movlw	132
 41026   00AA58  2599               	addwf	??_getEN& (0+255),w,b
 41027   00AA5A  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41028   00AA5C  0EEF               	movlw	239
 41029   00AA5E  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41030   00AA60  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41031   00AA62  C09B  F091         	movff	??_getEN+2,readNVM@index
 41032   00AA66  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41033   00AA6A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41034   00AA6C  0E01               	movlw	1
 41035   00AA6E  EC57  F059         	call	_readNVM
 41036   00AA72  0100               	movlb	0	; () banked
 41037   00AA74  5191               	movf	?_readNVM& (0+255),w,b
 41038   00AA76  6F9F               	movwf	getEN@lo& (0+255),b
 41039   00AA78  6BA0               	clrf	(getEN@lo+1)& (0+255),b
 41040                           
 41041                           ;../../VLCBlib_PIC/event_teach_large.c: 1246:     hi = (uint8_t)readNVM(FLASH_NVM_TYPE, 
      +                          0xEF80 + 16*tableIndex+4 +1);
 41042   00AA7A  51A1               	movf	getEN@tableIndex& (0+255),w,b
 41043   00AA7C  0D10               	mullw	16
 41044   00AA7E  CFF3 F099          	movff	prodl,??_getEN
 41045   00AA82  CFF4 F09A          	movff	prodh,??_getEN+1
 41046   00AA86  0E85               	movlw	133
 41047   00AA88  2599               	addwf	??_getEN& (0+255),w,b
 41048   00AA8A  6F9B               	movwf	(??_getEN+2)& (0+255),b
 41049   00AA8C  0EEF               	movlw	239
 41050   00AA8E  219A               	addwfc	(??_getEN+1)& (0+255),w,b
 41051   00AA90  6F9C               	movwf	(??_getEN+3)& (0+255),b
 41052   00AA92  C09B  F091         	movff	??_getEN+2,readNVM@index
 41053   00AA96  C09C  F092         	movff	??_getEN+3,readNVM@index+1
 41054   00AA9A  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41055   00AA9C  0E01               	movlw	1
 41056   00AA9E  EC57  F059         	call	_readNVM
 41057   00AAA2  0100               	movlb	0	; () banked
 41058   00AAA4  5191               	movf	?_readNVM& (0+255),w,b
 41059   00AAA6  6F9D               	movwf	getEN@hi& (0+255),b
 41060   00AAA8  6B9E               	clrf	(getEN@hi+1)& (0+255),b
 41061                           
 41062                           ; BSR set to: 0
 41063                           ;../../VLCBlib_PIC/event_teach_large.c: 1247:     return lo | (hi << 8);
 41064   00AAAA  519D               	movf	getEN@hi& (0+255),w,b
 41065   00AAAC  6F9A               	movwf	(??_getEN+1)& (0+255),b
 41066   00AAAE  6B99               	clrf	??_getEN& (0+255),b
 41067   00AAB0  519F               	movf	getEN@lo& (0+255),w,b
 41068   00AAB2  1199               	iorwf	??_getEN& (0+255),w,b
 41069   00AAB4  6F97               	movwf	?_getEN& (0+255),b
 41070   00AAB6  51A0               	movf	(getEN@lo+1)& (0+255),w,b
 41071   00AAB8  119A               	iorwf	(??_getEN+1)& (0+255),w,b
 41072   00AABA  6F98               	movwf	(?_getEN+1)& (0+255),b
 41073                           
 41074                           ; BSR set to: 0
 41075   00AABC  0012               	return		;funcret
 41076   00AABE                     __end_of_getEN:
 41077                           	callstack 0
 41078                           
 41079 ;; *************** function _configIO *****************
 41080 ;; Defined at:
 41081 ;;		line 558 in file "../main.c"
 41082 ;; Parameters:    Size  Location     Type
 41083 ;;  i               1    wreg     unsigned char 
 41084 ;; Auto vars:     Size  Location     Type
 41085 ;;  i               1    9[BANK1 ] unsigned char 
 41086 ;;  type            1    8[BANK1 ] unsigned char 
 41087 ;;  action          1    7[BANK1 ] unsigned char 
 41088 ;; Return value:  Size  Location     Type
 41089 ;;                  1    wreg      void 
 41090 ;; Registers used:
 41091 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41092 ;; Tracked objects:
 41093 ;;		On entry : 0/0
 41094 ;;		On exit  : 0/0
 41095 ;;		Unchanged: 0/0
 41096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41098 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41099 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41100 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41101 ;;Total ram usage:        8 bytes
 41102 ;; Hardware stack levels used: 1
 41103 ;; Hardware stack levels required when called: 18
 41104 ;; This function calls:
 41105 ;;		_getNV
 41106 ;;		_readNVM
 41107 ;;		_setDigitalOutput
 41108 ;;		_writeNVM
 41109 ;; This function is called by:
 41110 ;;		_setup
 41111 ;;		_setType
 41112 ;; This function uses a non-reentrant model
 41113 ;;
 41114                           
 41115                           	psect	text178
 41116   004C98                     __ptext178:
 41117                           	callstack 0
 41118   004C98                     _configIO:
 41119                           	callstack 11
 41120                           
 41121                           ; BSR set to: 0
 41122                           ;incstack = 0
 41123                           ;configIO@i stored from wreg
 41124   004C98  0101               	movlb	1	; () banked
 41125   004C9A  6FC3               	movwf	configIO@i& (0+255),b
 41126                           
 41127                           ;../main.c: 559:     uint8_t action;;../main.c: 560:     uint8_t type;;../main.c: 562:  
      +                             if (i >= 16) return;
 41128   004C9C  0E0F               	movlw	15
 41129   004C9E  0101               	movlb	1	; () banked
 41130   004CA0  65C3               	cpfsgt	configIO@i& (0+255),b
 41131   004CA2  D001               	goto	l19588
 41132   004CA4  0012               	return	
 41133   004CA6                     l19588:
 41134                           
 41135                           ; BSR set to: 1
 41136                           ;../main.c: 565:     type = (uint8_t)getNV((16 + 7*(i) + 0));
 41137   004CA6  51C3               	movf	configIO@i& (0+255),w,b
 41138   004CA8  0D07               	mullw	7
 41139   004CAA  50F3               	movf	243,w,c
 41140   004CAC  0F10               	addlw	16
 41141   004CAE  ECD9  F05D         	call	_getNV
 41142   004CB2  0100               	movlb	0	; () banked
 41143   004CB4  518D               	movf	?_getNV& (0+255),w,b
 41144   004CB6  0101               	movlb	1	; () banked
 41145   004CB8  6FC2               	movwf	configIO@type& (0+255),b
 41146                           
 41147                           ;../main.c: 566:     switch (type) {
 41148   004CBA  D060               	goto	l19612
 41149   004CBC                     l19590:
 41150                           
 41151                           ; BSR set to: 1
 41152                           ;../main.c: 568:             if (getNV((16 + 7*(i) + 1)) & 0x04) {
 41153   004CBC  51C3               	movf	configIO@i& (0+255),w,b
 41154   004CBE  0D07               	mullw	7
 41155   004CC0  50F3               	movf	243,w,c
 41156   004CC2  0F11               	addlw	17
 41157   004CC4  ECD9  F05D         	call	_getNV
 41158   004CC8  0100               	movlb	0	; () banked
 41159   004CCA  A58D               	btfss	?_getNV& (0+255),2,b
 41160   004CCC  D018               	goto	l19594
 41161                           
 41162                           ; BSR set to: 0
 41163                           ;../main.c: 569:                 setDigitalOutput(i, (uint8_t)readNVM(EEPROM_NVM_TYPE, (
      +                          eeprom_address_t)((eeprom_address_t)((0x3FF -8))-25)+i));
 41164   004CCE  0EDE               	movlw	222
 41165   004CD0  0101               	movlb	1	; () banked
 41166   004CD2  25C3               	addwf	configIO@i& (0+255),w,b
 41167   004CD4  6FBC               	movwf	??_configIO& (0+255),b
 41168   004CD6  6BBD               	clrf	(??_configIO+1)& (0+255),b
 41169   004CD8  0E03               	movlw	3
 41170   004CDA  23BD               	addwfc	(??_configIO+1)& (0+255),f,b
 41171   004CDC  C1BC  F091         	movff	??_configIO,readNVM@index
 41172   004CE0  C1BD  F092         	movff	??_configIO+1,readNVM@index+1
 41173   004CE4  0100               	movlb	0	; () banked
 41174   004CE6  6B93               	clrf	(readNVM@index+2)& (0+255),b
 41175   004CE8  0E00               	movlw	0
 41176   004CEA  EC57  F059         	call	_readNVM
 41177   004CEE  0100               	movlb	0	; () banked
 41178   004CF0  5191               	movf	?_readNVM& (0+255),w,b
 41179   004CF2  6F97               	movwf	setDigitalOutput@state& (0+255),b
 41180   004CF4  0101               	movlb	1	; () banked
 41181   004CF6  51C3               	movf	configIO@i& (0+255),w,b
 41182   004CF8  ECD1  F051         	call	_setDigitalOutput
 41183                           
 41184                           ;../main.c: 570:             } else {
 41185   004CFC  D122               	goto	l19646
 41186   004CFE                     l19594:
 41187                           
 41188                           ; BSR set to: 0
 41189                           ;../main.c: 571:                 action = (getNV((16 + 7*(i) + 1)) & 0x20) ? 1 : 2;
 41190   004CFE  0101               	movlb	1	; () banked
 41191   004D00  51C3               	movf	configIO@i& (0+255),w,b
 41192   004D02  0D07               	mullw	7
 41193   004D04  50F3               	movf	243,w,c
 41194   004D06  0F11               	addlw	17
 41195   004D08  ECD9  F05D         	call	_getNV
 41196   004D0C  0100               	movlb	0	; () banked
 41197   004D0E  BB8D               	btfsc	?_getNV& (0+255),5,b
 41198   004D10  D005               	goto	l19598
 41199                           
 41200                           ; BSR set to: 0
 41201   004D12  0E00               	movlw	0
 41202   004D14  0101               	movlb	1	; () banked
 41203   004D16  6FC0               	movwf	(_configIO$746+1)& (0+255),b
 41204   004D18  0E02               	movlw	2
 41205   004D1A  D004               	goto	L24
 41206   004D1C                     l19598:
 41207                           
 41208                           ; BSR set to: 0
 41209   004D1C  0E00               	movlw	0
 41210   004D1E  0101               	movlb	1	; () banked
 41211   004D20  6FC0               	movwf	(_configIO$746+1)& (0+255),b
 41212   004D22  0E01               	movlw	1
 41213   004D24                     L24:
 41214   004D24  6FBF               	movwf	_configIO$746& (0+255),b
 41215                           
 41216                           ; BSR set to: 1
 41217   004D26  C1BF  F1C1         	movff	_configIO$746,configIO@action
 41218                           
 41219                           ; BSR set to: 1
 41220                           ;../main.c: 572:                 setDigitalOutput(i, action);
 41221   004D2A  C1C1  F097         	movff	configIO@action,setDigitalOutput@state
 41222   004D2E  51C3               	movf	configIO@i& (0+255),w,b
 41223   004D30  ECD1  F051         	call	_setDigitalOutput
 41224                           
 41225                           ;../main.c: 574:                 writeNVM(EEPROM_NVM_TYPE, (eeprom_address_t)(((eeprom_a
      +                          ddress_t)((0x3FF -8))-25)+i), action);
 41226   004D34  0EDE               	movlw	222
 41227   004D36  0101               	movlb	1	; () banked
 41228   004D38  25C3               	addwf	configIO@i& (0+255),w,b
 41229   004D3A  6FBC               	movwf	??_configIO& (0+255),b
 41230   004D3C  6BBD               	clrf	(??_configIO+1)& (0+255),b
 41231   004D3E  0E03               	movlw	3
 41232   004D40  23BD               	addwfc	(??_configIO+1)& (0+255),f,b
 41233   004D42  C1BC  F0A4         	movff	??_configIO,writeNVM@index
 41234   004D46  C1BD  F0A5         	movff	??_configIO+1,writeNVM@index+1
 41235   004D4A  0100               	movlb	0	; () banked
 41236   004D4C  6BA6               	clrf	(writeNVM@index+2)& (0+255),b
 41237   004D4E  C1C1  F0A7         	movff	configIO@action,writeNVM@value
 41238   004D52  0E00               	movlw	0
 41239   004D54  ECE7  F05B         	call	_writeNVM
 41240   004D58  D0F4               	goto	l19646
 41241   004D5A                     l19606:
 41242                           
 41243                           ; BSR set to: 1
 41244                           ;../main.c: 583:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41245   004D5A  51C3               	movf	configIO@i& (0+255),w,b
 41246   004D5C  0D07               	mullw	7
 41247   004D5E  50F3               	movf	243,w,c
 41248   004D60  0F11               	addlw	17
 41249   004D62  ECD9  F05D         	call	_getNV
 41250   004D66  0100               	movlb	0	; () banked
 41251   004D68  518D               	movf	?_getNV& (0+255),w,b
 41252   004D6A  0B10               	andlw	16
 41253   004D6C  0101               	movlb	1	; () banked
 41254   004D6E  6FBE               	movwf	_configIO$8063& (0+255),b
 41255                           
 41256                           ; BSR set to: 1
 41257                           ;../main.c: 583:             setDigitalOutput(i, getNV((16 + 7*(i) + 1)) & 0x10);
 41258   004D70  C1BE  F097         	movff	_configIO$8063,setDigitalOutput@state
 41259   004D74  51C3               	movf	configIO@i& (0+255),w,b
 41260   004D76  ECD1  F051         	call	_setDigitalOutput
 41261                           
 41262                           ;../main.c: 584:             break;
 41263   004D7A  D0E3               	goto	l19646
 41264   004D7C                     l19612:
 41265                           
 41266                           ; BSR set to: 1
 41267   004D7C  51C2               	movf	configIO@type& (0+255),w,b
 41268                           
 41269                           ; Switch size 1, requested type "simple"
 41270                           ; Number of cases is 3, Range of values is 1 to 3
 41271                           ; switch strategies available:
 41272                           ; Name         Instructions Cycles
 41273                           ; simple_byte           10     6 (average)
 41274                           ;	Chosen strategy is simple_byte
 41275   004D7E  0A01               	xorlw	1	; case 1
 41276   004D80  B4D8               	btfsc	status,2,c
 41277   004D82  D79C               	goto	l19590
 41278   004D84  0A03               	xorlw	3	; case 2
 41279   004D86  B4D8               	btfsc	status,2,c
 41280   004D88  D7E8               	goto	l19606
 41281   004D8A  0A01               	xorlw	1	; case 3
 41282   004D8C  B4D8               	btfsc	status,2,c
 41283   004D8E  D7E5               	goto	l19606
 41284   004D90  D0D8               	goto	l19646
 41285   004D92                     l19614:
 41286                           
 41287                           ; BSR set to: 1
 41288                           ;../main.c: 598:             if ((type == 0) || (type == 5) || (type == 6)) {
 41289   004D92  51C2               	movf	configIO@type& (0+255),w,b
 41290   004D94  B4D8               	btfsc	status,2,c
 41291   004D96  D008               	goto	u19550
 41292                           
 41293                           ; BSR set to: 1
 41294   004D98  0E05               	movlw	5
 41295   004D9A  19C2               	xorwf	configIO@type& (0+255),w,b
 41296   004D9C  B4D8               	btfsc	status,2,c
 41297   004D9E  D004               	goto	u19550
 41298                           
 41299                           ; BSR set to: 1
 41300   004DA0  0E06               	movlw	6
 41301   004DA2  19C2               	xorwf	configIO@type& (0+255),w,b
 41302   004DA4  A4D8               	btfss	status,2,c
 41303   004DA6  D01E               	goto	l19622
 41304   004DA8                     u19550:
 41305                           
 41306                           ; BSR set to: 1
 41307                           ;../main.c: 599:                 TRISA |= (1 << configs[i].no);
 41308   004DA8  51C3               	movf	configIO@i& (0+255),w,b
 41309   004DAA  0D04               	mullw	4
 41310   004DAC  0E02               	movlw	2
 41311   004DAE  26F3               	addwf	243,f,c
 41312   004DB0  0E00               	movlw	0
 41313   004DB2  22F4               	addwfc	244,f,c
 41314   004DB4  0E35               	movlw	low _configs
 41315   004DB6  24F3               	addwf	243,w,c
 41316   004DB8  6EF6               	movwf	tblptrl,c
 41317   004DBA  0EEE               	movlw	high _configs
 41318   004DBC  20F4               	addwfc	244,w,c
 41319   004DBE  6EF7               	movwf	tblptrh,c
 41320   004DC0                     	if	1	;There are 3 active tblptr bytes
 41321   004DC0  6AF8               	clrf	tblptru,c
 41322   004DC2  0E00               	movlw	low (__mediumconst shr (0+16))
 41323   004DC4  22F8               	addwfc	tblptru,f,c
 41324   004DC6                     	endif
 41325   004DC6  0008               	tblrd		*
 41326   004DC8  CFF5 F1BC          	movff	tablat,??_configIO
 41327   004DCC  0E01               	movlw	1
 41328   004DCE  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41329   004DD0  2BBC               	incf	??_configIO& (0+255),f,b
 41330   004DD2  D002               	goto	u19564
 41331   004DD4                     u19565:
 41332   004DD4  90D8               	bcf	status,0,c
 41333   004DD6  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41334   004DD8                     u19564:
 41335   004DD8  2FBC               	decfsz	??_configIO& (0+255),f,b
 41336   004DDA  D7FC               	goto	u19565
 41337   004DDC  0101               	movlb	1	; () banked
 41338   004DDE  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41339   004DE0  1292               	iorwf	146,f,c	;volatile
 41340                           
 41341                           ;../main.c: 600:             } else {
 41342   004DE2  0012               	return	
 41343   004DE4                     l19622:
 41344                           
 41345                           ; BSR set to: 1
 41346                           ;../main.c: 601:                 TRISA &= ~(1 << configs[i].no);
 41347   004DE4  51C3               	movf	configIO@i& (0+255),w,b
 41348   004DE6  0D04               	mullw	4
 41349   004DE8  0E02               	movlw	2
 41350   004DEA  26F3               	addwf	243,f,c
 41351   004DEC  0E00               	movlw	0
 41352   004DEE  22F4               	addwfc	244,f,c
 41353   004DF0  0E35               	movlw	low _configs
 41354   004DF2  24F3               	addwf	243,w,c
 41355   004DF4  6EF6               	movwf	tblptrl,c
 41356   004DF6  0EEE               	movlw	high _configs
 41357   004DF8  20F4               	addwfc	244,w,c
 41358   004DFA  6EF7               	movwf	tblptrh,c
 41359   004DFC                     	if	1	;There are 3 active tblptr bytes
 41360   004DFC  6AF8               	clrf	tblptru,c
 41361   004DFE  0E00               	movlw	low (__mediumconst shr (0+16))
 41362   004E00  22F8               	addwfc	tblptru,f,c
 41363   004E02                     	endif
 41364   004E02  0008               	tblrd		*
 41365   004E04  CFF5 F1BC          	movff	tablat,??_configIO
 41366   004E08  0E01               	movlw	1
 41367   004E0A  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41368   004E0C  2BBC               	incf	??_configIO& (0+255),f,b
 41369   004E0E  D002               	goto	u19574
 41370   004E10                     u19575:
 41371   004E10  90D8               	bcf	status,0,c
 41372   004E12  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41373   004E14                     u19574:
 41374   004E14  2FBC               	decfsz	??_configIO& (0+255),f,b
 41375   004E16  D7FC               	goto	u19575
 41376   004E18  0101               	movlb	1	; () banked
 41377   004E1A  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41378   004E1C  0AFF               	xorlw	255
 41379   004E1E  1692               	andwf	146,f,c	;volatile
 41380   004E20  0012               	return	
 41381   004E22                     l19624:
 41382                           
 41383                           ; BSR set to: 1
 41384                           ;../main.c: 605:             if ((type == 0) || (type == 5) || (type == 6)) {
 41385   004E22  51C2               	movf	configIO@type& (0+255),w,b
 41386   004E24  B4D8               	btfsc	status,2,c
 41387   004E26  D008               	goto	u19600
 41388                           
 41389                           ; BSR set to: 1
 41390   004E28  0E05               	movlw	5
 41391   004E2A  19C2               	xorwf	configIO@type& (0+255),w,b
 41392   004E2C  B4D8               	btfsc	status,2,c
 41393   004E2E  D004               	goto	u19600
 41394                           
 41395                           ; BSR set to: 1
 41396   004E30  0E06               	movlw	6
 41397   004E32  19C2               	xorwf	configIO@type& (0+255),w,b
 41398   004E34  A4D8               	btfss	status,2,c
 41399   004E36  D01E               	goto	l19632
 41400   004E38                     u19600:
 41401                           
 41402                           ; BSR set to: 1
 41403                           ;../main.c: 606:                 TRISB |= (1 << configs[i].no);
 41404   004E38  51C3               	movf	configIO@i& (0+255),w,b
 41405   004E3A  0D04               	mullw	4
 41406   004E3C  0E02               	movlw	2
 41407   004E3E  26F3               	addwf	243,f,c
 41408   004E40  0E00               	movlw	0
 41409   004E42  22F4               	addwfc	244,f,c
 41410   004E44  0E35               	movlw	low _configs
 41411   004E46  24F3               	addwf	243,w,c
 41412   004E48  6EF6               	movwf	tblptrl,c
 41413   004E4A  0EEE               	movlw	high _configs
 41414   004E4C  20F4               	addwfc	244,w,c
 41415   004E4E  6EF7               	movwf	tblptrh,c
 41416   004E50                     	if	1	;There are 3 active tblptr bytes
 41417   004E50  6AF8               	clrf	tblptru,c
 41418   004E52  0E00               	movlw	low (__mediumconst shr (0+16))
 41419   004E54  22F8               	addwfc	tblptru,f,c
 41420   004E56                     	endif
 41421   004E56  0008               	tblrd		*
 41422   004E58  CFF5 F1BC          	movff	tablat,??_configIO
 41423   004E5C  0E01               	movlw	1
 41424   004E5E  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41425   004E60  2BBC               	incf	??_configIO& (0+255),f,b
 41426   004E62  D002               	goto	u19614
 41427   004E64                     u19615:
 41428   004E64  90D8               	bcf	status,0,c
 41429   004E66  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41430   004E68                     u19614:
 41431   004E68  2FBC               	decfsz	??_configIO& (0+255),f,b
 41432   004E6A  D7FC               	goto	u19615
 41433   004E6C  0101               	movlb	1	; () banked
 41434   004E6E  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41435   004E70  1293               	iorwf	147,f,c	;volatile
 41436                           
 41437                           ;../main.c: 607:             } else {
 41438   004E72  0012               	return	
 41439   004E74                     l19632:
 41440                           
 41441                           ; BSR set to: 1
 41442                           ;../main.c: 608:                 TRISB &= ~(1 << configs[i].no);
 41443   004E74  51C3               	movf	configIO@i& (0+255),w,b
 41444   004E76  0D04               	mullw	4
 41445   004E78  0E02               	movlw	2
 41446   004E7A  26F3               	addwf	243,f,c
 41447   004E7C  0E00               	movlw	0
 41448   004E7E  22F4               	addwfc	244,f,c
 41449   004E80  0E35               	movlw	low _configs
 41450   004E82  24F3               	addwf	243,w,c
 41451   004E84  6EF6               	movwf	tblptrl,c
 41452   004E86  0EEE               	movlw	high _configs
 41453   004E88  20F4               	addwfc	244,w,c
 41454   004E8A  6EF7               	movwf	tblptrh,c
 41455   004E8C                     	if	1	;There are 3 active tblptr bytes
 41456   004E8C  6AF8               	clrf	tblptru,c
 41457   004E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 41458   004E90  22F8               	addwfc	tblptru,f,c
 41459   004E92                     	endif
 41460   004E92  0008               	tblrd		*
 41461   004E94  CFF5 F1BC          	movff	tablat,??_configIO
 41462   004E98  0E01               	movlw	1
 41463   004E9A  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41464   004E9C  2BBC               	incf	??_configIO& (0+255),f,b
 41465   004E9E  D002               	goto	u19624
 41466   004EA0                     u19625:
 41467   004EA0  90D8               	bcf	status,0,c
 41468   004EA2  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41469   004EA4                     u19624:
 41470   004EA4  2FBC               	decfsz	??_configIO& (0+255),f,b
 41471   004EA6  D7FC               	goto	u19625
 41472   004EA8  0101               	movlb	1	; () banked
 41473   004EAA  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41474   004EAC  0AFF               	xorlw	255
 41475   004EAE  1693               	andwf	147,f,c	;volatile
 41476   004EB0  0012               	return	
 41477   004EB2                     l19634:
 41478                           
 41479                           ; BSR set to: 1
 41480                           ;../main.c: 612:             if ((type == 0) || (type == 5) || (type == 6)) {
 41481   004EB2  51C2               	movf	configIO@type& (0+255),w,b
 41482   004EB4  B4D8               	btfsc	status,2,c
 41483   004EB6  D008               	goto	u19650
 41484                           
 41485                           ; BSR set to: 1
 41486   004EB8  0E05               	movlw	5
 41487   004EBA  19C2               	xorwf	configIO@type& (0+255),w,b
 41488   004EBC  B4D8               	btfsc	status,2,c
 41489   004EBE  D004               	goto	u19650
 41490                           
 41491                           ; BSR set to: 1
 41492   004EC0  0E06               	movlw	6
 41493   004EC2  19C2               	xorwf	configIO@type& (0+255),w,b
 41494   004EC4  A4D8               	btfss	status,2,c
 41495   004EC6  D01E               	goto	l19642
 41496   004EC8                     u19650:
 41497                           
 41498                           ; BSR set to: 1
 41499                           ;../main.c: 613:                 TRISC |= (1 << configs[i].no);
 41500   004EC8  51C3               	movf	configIO@i& (0+255),w,b
 41501   004ECA  0D04               	mullw	4
 41502   004ECC  0E02               	movlw	2
 41503   004ECE  26F3               	addwf	243,f,c
 41504   004ED0  0E00               	movlw	0
 41505   004ED2  22F4               	addwfc	244,f,c
 41506   004ED4  0E35               	movlw	low _configs
 41507   004ED6  24F3               	addwf	243,w,c
 41508   004ED8  6EF6               	movwf	tblptrl,c
 41509   004EDA  0EEE               	movlw	high _configs
 41510   004EDC  20F4               	addwfc	244,w,c
 41511   004EDE  6EF7               	movwf	tblptrh,c
 41512   004EE0                     	if	1	;There are 3 active tblptr bytes
 41513   004EE0  6AF8               	clrf	tblptru,c
 41514   004EE2  0E00               	movlw	low (__mediumconst shr (0+16))
 41515   004EE4  22F8               	addwfc	tblptru,f,c
 41516   004EE6                     	endif
 41517   004EE6  0008               	tblrd		*
 41518   004EE8  CFF5 F1BC          	movff	tablat,??_configIO
 41519   004EEC  0E01               	movlw	1
 41520   004EEE  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41521   004EF0  2BBC               	incf	??_configIO& (0+255),f,b
 41522   004EF2  D002               	goto	u19664
 41523   004EF4                     u19665:
 41524   004EF4  90D8               	bcf	status,0,c
 41525   004EF6  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41526   004EF8                     u19664:
 41527   004EF8  2FBC               	decfsz	??_configIO& (0+255),f,b
 41528   004EFA  D7FC               	goto	u19665
 41529   004EFC  0101               	movlb	1	; () banked
 41530   004EFE  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41531   004F00  1294               	iorwf	148,f,c	;volatile
 41532                           
 41533                           ;../main.c: 614:             } else {
 41534   004F02  0012               	return	
 41535   004F04                     l19642:
 41536                           
 41537                           ; BSR set to: 1
 41538                           ;../main.c: 615:                 TRISC &= ~(1 << configs[i].no);
 41539   004F04  51C3               	movf	configIO@i& (0+255),w,b
 41540   004F06  0D04               	mullw	4
 41541   004F08  0E02               	movlw	2
 41542   004F0A  26F3               	addwf	243,f,c
 41543   004F0C  0E00               	movlw	0
 41544   004F0E  22F4               	addwfc	244,f,c
 41545   004F10  0E35               	movlw	low _configs
 41546   004F12  24F3               	addwf	243,w,c
 41547   004F14  6EF6               	movwf	tblptrl,c
 41548   004F16  0EEE               	movlw	high _configs
 41549   004F18  20F4               	addwfc	244,w,c
 41550   004F1A  6EF7               	movwf	tblptrh,c
 41551   004F1C                     	if	1	;There are 3 active tblptr bytes
 41552   004F1C  6AF8               	clrf	tblptru,c
 41553   004F1E  0E00               	movlw	low (__mediumconst shr (0+16))
 41554   004F20  22F8               	addwfc	tblptru,f,c
 41555   004F22                     	endif
 41556   004F22  0008               	tblrd		*
 41557   004F24  CFF5 F1BC          	movff	tablat,??_configIO
 41558   004F28  0E01               	movlw	1
 41559   004F2A  6FBD               	movwf	(??_configIO+1)& (0+255),b
 41560   004F2C  2BBC               	incf	??_configIO& (0+255),f,b
 41561   004F2E  D002               	goto	u19674
 41562   004F30                     u19675:
 41563   004F30  90D8               	bcf	status,0,c
 41564   004F32  37BD               	rlcf	(??_configIO+1)& (0+255),f,b
 41565   004F34                     u19674:
 41566   004F34  2FBC               	decfsz	??_configIO& (0+255),f,b
 41567   004F36  D7FC               	goto	u19675
 41568   004F38  0101               	movlb	1	; () banked
 41569   004F3A  51BD               	movf	(??_configIO+1)& (0+255),w,b
 41570   004F3C  0AFF               	xorlw	255
 41571   004F3E  1694               	andwf	148,f,c	;volatile
 41572   004F40  0012               	return	
 41573   004F42                     l19646:
 41574   004F42  0101               	movlb	1	; () banked
 41575   004F44  51C3               	movf	configIO@i& (0+255),w,b
 41576   004F46  0D04               	mullw	4
 41577   004F48  0E01               	movlw	1
 41578   004F4A  26F3               	addwf	243,f,c
 41579   004F4C  0E00               	movlw	0
 41580   004F4E  22F4               	addwfc	244,f,c
 41581   004F50  0E35               	movlw	low _configs
 41582   004F52  24F3               	addwf	243,w,c
 41583   004F54  6EF6               	movwf	tblptrl,c
 41584   004F56  0EEE               	movlw	high _configs
 41585   004F58  20F4               	addwfc	244,w,c
 41586   004F5A  6EF7               	movwf	tblptrh,c
 41587   004F5C                     	if	1	;There are 3 active tblptr bytes
 41588   004F5C  6AF8               	clrf	tblptru,c
 41589   004F5E  0E00               	movlw	low (__mediumconst shr (0+16))
 41590   004F60  22F8               	addwfc	tblptru,f,c
 41591   004F62                     	endif
 41592   004F62  0008               	tblrd		*
 41593   004F64  50F5               	movf	tablat,w,c
 41594                           
 41595                           ; Switch size 1, requested type "simple"
 41596                           ; Number of cases is 3, Range of values is 65 to 67
 41597                           ; switch strategies available:
 41598                           ; Name         Instructions Cycles
 41599                           ; simple_byte           10     6 (average)
 41600                           ;	Chosen strategy is simple_byte
 41601   004F66  0A41               	xorlw	65	; case 65
 41602   004F68  B4D8               	btfsc	status,2,c
 41603   004F6A  D713               	goto	l19614
 41604   004F6C  0A03               	xorlw	3	; case 66
 41605   004F6E  B4D8               	btfsc	status,2,c
 41606   004F70  D758               	goto	l19624
 41607   004F72  0A01               	xorlw	1	; case 67
 41608   004F74  A4D8               	btfss	status,2,c
 41609   004F76  0012               	return	
 41610   004F78  D79C               	goto	l19634
 41611   004F7A                     __end_of_configIO:
 41612                           	callstack 0
 41613                           
 41614 ;; *************** function _writeNVM *****************
 41615 ;; Defined at:
 41616 ;;		line 525 in file "../../VLCBlib_PIC/nvm.c"
 41617 ;; Parameters:    Size  Location     Type
 41618 ;;  type            1    wreg     enum E12732
 41619 ;;  index           3   68[BANK0 ] unsigned um
 41620 ;;  value           1   71[BANK0 ] unsigned char 
 41621 ;; Auto vars:     Size  Location     Type
 41622 ;;  type            1   72[BANK0 ] enum E12732
 41623 ;; Return value:  Size  Location     Type
 41624 ;;                  1    wreg      unsigned char 
 41625 ;; Registers used:
 41626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41627 ;; Tracked objects:
 41628 ;;		On entry : 0/0
 41629 ;;		On exit  : 0/0
 41630 ;;		Unchanged: 0/0
 41631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41634 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41635 ;;      Totals:         0       5       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41636 ;;Total ram usage:        7 bytes
 41637 ;; Hardware stack levels used: 1
 41638 ;; Hardware stack levels required when called: 17
 41639 ;; This function calls:
 41640 ;;		_EEPROM_Write
 41641 ;;		_FLASH_Write
 41642 ;; This function is called by:
 41643 ;;		_configIO
 41644 ;;		_startDigitalOutput
 41645 ;;		_inputScan
 41646 ;;		_pollServos
 41647 ;;		_bootProcessMessage
 41648 ;;		_mnsFactoryReset
 41649 ;;		_mnsProcessMessage
 41650 ;;		_mnsPoll
 41651 ;;		_nvFactoryReset
 41652 ;;		_saveNV
 41653 ;;		_setNV
 41654 ;;		_factoryReset
 41655 ;;		_canFactoryReset
 41656 ;;		_setNewCanId
 41657 ;;		_clearAllEvents
 41658 ;;		_removeTableEntry
 41659 ;;		_addEvent
 41660 ;;		_writeEv
 41661 ;; This function uses a non-reentrant model
 41662 ;;
 41663                           
 41664                           	psect	text179
 41665   00B7CE                     __ptext179:
 41666                           	callstack 0
 41667   00B7CE                     _writeNVM:
 41668                           	callstack 11
 41669                           
 41670                           ; BSR set to: 1
 41671                           ;incstack = 0
 41672                           ;writeNVM@type stored from wreg
 41673   00B7CE  0100               	movlb	0	; () banked
 41674   00B7D0  6FA8               	movwf	writeNVM@type& (0+255),b
 41675                           
 41676                           ;../../VLCBlib_PIC/nvm.c: 526:     switch(type) {
 41677   00B7D2  D012               	goto	l18860
 41678   00B7D4                     l18850:
 41679                           
 41680                           ; BSR set to: 1
 41681                           ;../../VLCBlib_PIC/nvm.c: 528:             return EEPROM_Write((eeprom_address_t)index, 
      +                          value);;	Return value of _writeNVM is never used
 41682   00B7D4  C0A4  F08F         	movff	writeNVM@index,EEPROM_Write@index
 41683   00B7D8  C0A5  F090         	movff	writeNVM@index+1,EEPROM_Write@index+1
 41684   00B7DC  C0A7  F091         	movff	writeNVM@value,EEPROM_Write@value
 41685   00B7E0  ECC9  F057         	call	_EEPROM_Write	;wreg free
 41686   00B7E4  0012               	return	
 41687   00B7E6                     l18854:
 41688                           
 41689                           ; BSR set to: 1
 41690                           ;../../VLCBlib_PIC/nvm.c: 530:             return FLASH_Write((flash_address_t)index, va
      +                          lue);;	Return value of _writeNVM is never used
 41691   00B7E6  C0A4  F090         	movff	writeNVM@index,FLASH_Write@index
 41692   00B7EA  C0A5  F091         	movff	writeNVM@index+1,FLASH_Write@index+1
 41693   00B7EE  C0A7  F092         	movff	writeNVM@value,FLASH_Write@value
 41694   00B7F2  EC4E  F047         	call	_FLASH_Write	;wreg free
 41695   00B7F6  0012               	return	
 41696   00B7F8                     l18860:
 41697   00B7F8  0100               	movlb	0	; () banked
 41698   00B7FA  51A8               	movf	writeNVM@type& (0+255),w,b
 41699   00B7FC  0101               	movlb	1	; () banked
 41700   00B7FE  6FBA               	movwf	??_writeNVM& (0+255),b
 41701   00B800  6BBB               	clrf	(??_writeNVM+1)& (0+255),b
 41702                           
 41703                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41704                           ; Switch size 1, requested type "simple"
 41705                           ; Number of cases is 1, Range of values is 0 to 0
 41706                           ; switch strategies available:
 41707                           ; Name         Instructions Cycles
 41708                           ; simple_byte            4     3 (average)
 41709                           ;	Chosen strategy is simple_byte
 41710   00B802  51BB               	movf	(??_writeNVM+1)& (0+255),w,b
 41711   00B804  0A00               	xorlw	0	; case 0
 41712   00B806  A4D8               	btfss	status,2,c
 41713   00B808  0012               	return	
 41714                           
 41715                           ; BSR set to: 1
 41716                           ; Switch size 1, requested type "simple"
 41717                           ; Number of cases is 2, Range of values is 0 to 1
 41718                           ; switch strategies available:
 41719                           ; Name         Instructions Cycles
 41720                           ; simple_byte            7     4 (average)
 41721                           ;	Chosen strategy is simple_byte
 41722   00B80A  51BA               	movf	??_writeNVM& (0+255),w,b
 41723   00B80C  0A00               	xorlw	0	; case 0
 41724   00B80E  B4D8               	btfsc	status,2,c
 41725   00B810  D7E1               	goto	l18850
 41726   00B812  0A01               	xorlw	1	; case 1
 41727   00B814  A4D8               	btfss	status,2,c
 41728   00B816  0012               	return	
 41729   00B818  D7E6               	goto	l18854
 41730   00B81A                     __end_of_writeNVM:
 41731                           	callstack 0
 41732                           
 41733 ;; *************** function _FLASH_Write *****************
 41734 ;; Defined at:
 41735 ;;		line 479 in file "../../VLCBlib_PIC/nvm.c"
 41736 ;; Parameters:    Size  Location     Type
 41737 ;;  index           2   48[BANK0 ] unsigned short 
 41738 ;;  value           1   50[BANK0 ] unsigned char 
 41739 ;; Auto vars:     Size  Location     Type
 41740 ;;  oldValue        1    0        unsigned char 
 41741 ;; Return value:  Size  Location     Type
 41742 ;;                  1    wreg      unsigned char 
 41743 ;; Registers used:
 41744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41745 ;; Tracked objects:
 41746 ;;		On entry : 0/0
 41747 ;;		On exit  : 0/0
 41748 ;;		Unchanged: 0/0
 41749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41750 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41752 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41753 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41754 ;;Total ram usage:        7 bytes
 41755 ;; Hardware stack levels used: 1
 41756 ;; Hardware stack levels required when called: 16
 41757 ;; This function calls:
 41758 ;;		_eraseFlashBlock
 41759 ;;		_flushFlashBlock
 41760 ;;		_loadFlashBlock
 41761 ;; This function is called by:
 41762 ;;		_writeNVM
 41763 ;; This function uses a non-reentrant model
 41764 ;;
 41765                           
 41766                           	psect	text180
 41767   008E9C                     __ptext180:
 41768                           	callstack 0
 41769   008E9C                     _FLASH_Write:
 41770                           	callstack 11
 41771                           
 41772                           ;../../VLCBlib_PIC/nvm.c: 480:     uint8_t oldValue;;../../VLCBlib_PIC/nvm.c: 495:     i
      +                          f ((index&(~((flash_address_t)64 -1))) != flashBlock) {
 41773                           
 41774                           ;incstack = 0
 41775   008E9C  0EC0               	movlw	192
 41776   008E9E  0100               	movlb	0	; () banked
 41777   008EA0  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41778   008EA2  6F93               	movwf	??_FLASH_Write& (0+255),b
 41779   008EA4  0EFF               	movlw	255
 41780   008EA6  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41781   008EA8  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41782   008EAA  51B9               	movf	_flashBlock& (0+255),w,b
 41783   008EAC  1993               	xorwf	??_FLASH_Write& (0+255),w,b
 41784   008EAE  E104               	bnz	u18440
 41785   008EB0  51BA               	movf	(_flashBlock+1)& (0+255),w,b
 41786   008EB2  1994               	xorwf	(??_FLASH_Write+1)& (0+255),w,b
 41787   008EB4  B4D8               	btfsc	status,2,c
 41788   008EB6  D015               	goto	l18808
 41789   008EB8                     u18440:
 41790                           
 41791                           ; BSR set to: 0
 41792                           ;../../VLCBlib_PIC/nvm.c: 496:         if (flashBlock != 0) {
 41793   008EB8  51B9               	movf	_flashBlock& (0+255),w,b
 41794   008EBA  11BA               	iorwf	(_flashBlock+1)& (0+255),w,b
 41795   008EBC  B4D8               	btfsc	status,2,c
 41796   008EBE  D008               	goto	l18804
 41797                           
 41798                           ; BSR set to: 0
 41799                           ;../../VLCBlib_PIC/nvm.c: 498:             if (flashFlags.eraseNeeded) {
 41800   008EC0  A3C4               	btfss	_flashFlags& (0+255),1,b
 41801   008EC2  D004               	goto	l18802
 41802                           
 41803                           ; BSR set to: 0
 41804                           ;../../VLCBlib_PIC/nvm.c: 499:                 eraseFlashBlock();
 41805   008EC4  EC0D  F05C         	call	_eraseFlashBlock	;wreg free
 41806                           
 41807                           ;../../VLCBlib_PIC/nvm.c: 500:                 flashFlags.eraseNeeded = 0;
 41808   008EC8  0100               	movlb	0	; () banked
 41809   008ECA  93C4               	bcf	_flashFlags& (0+255),1,b
 41810   008ECC                     l18802:
 41811                           
 41812                           ; BSR set to: 0
 41813                           ;../../VLCBlib_PIC/nvm.c: 503:             flushFlashBlock();
 41814   008ECC  ECE6  F052         	call	_flushFlashBlock	;wreg free
 41815   008ED0                     l18804:
 41816                           
 41817                           ;../../VLCBlib_PIC/nvm.c: 507:         flashBlock = (index&(~((flash_address_t)64 -1)));
 41818   008ED0  0EC0               	movlw	192
 41819   008ED2  0100               	movlb	0	; () banked
 41820   008ED4  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41821   008ED6  6FB9               	movwf	_flashBlock& (0+255),b
 41822   008ED8  0EFF               	movlw	255
 41823   008EDA  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41824   008EDC  6FBA               	movwf	(_flashBlock+1)& (0+255),b
 41825                           
 41826                           ; BSR set to: 0
 41827                           ;../../VLCBlib_PIC/nvm.c: 508:         loadFlashBlock();
 41828   008EDE  ECC8  F05C         	call	_loadFlashBlock	;wreg free
 41829   008EE2                     l18808:
 41830                           
 41831                           ;../../VLCBlib_PIC/nvm.c: 510:     flashFlags.eraseNeeded |= (value & ~flashBuffer[(inde
      +                          x&(64 -1))])?1:0;
 41832   008EE2  0E3F               	movlw	63
 41833   008EE4  0100               	movlb	0	; () banked
 41834   008EE6  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41835   008EE8  6F93               	movwf	??_FLASH_Write& (0+255),b
 41836   008EEA  0E00               	movlw	0
 41837   008EEC  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41838   008EEE  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41839   008EF0  0E48               	movlw	low _flashBuffer
 41840   008EF2  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41841   008EF4  6ED9               	movwf	fsr2l,c
 41842   008EF6  0E03               	movlw	high _flashBuffer
 41843   008EF8  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41844   008EFA  6EDA               	movwf	fsr2h,c
 41845   008EFC  50DF               	movf	indf2,w,c
 41846   008EFE  0AFF               	xorlw	255
 41847   008F00  1592               	andwf	FLASH_Write@value& (0+255),w,b
 41848   008F02  0900               	iorlw	0
 41849   008F04  B4D8               	btfsc	status,2,c
 41850   008F06  D003               	goto	u18470
 41851   008F08  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 41852   008F0A  2B95               	incf	(??_FLASH_Write+2)& (0+255),f,b
 41853   008F0C  D002               	goto	u18488
 41854   008F0E                     u18470:
 41855   008F0E  0100               	movlb	0	; () banked
 41856   008F10  6B95               	clrf	(??_FLASH_Write+2)& (0+255),b
 41857   008F12                     u18488:
 41858   008F12  31C4               	rrcf	_flashFlags& (0+255),w,b
 41859   008F14  0B01               	andlw	1
 41860   008F16  6F96               	movwf	(??_FLASH_Write+3)& (0+255),b
 41861   008F18  5195               	movf	(??_FLASH_Write+2)& (0+255),w,b
 41862   008F1A  1396               	iorwf	(??_FLASH_Write+3)& (0+255),f,b
 41863   008F1C  3796               	rlcf	(??_FLASH_Write+3)& (0+255),f,b
 41864   008F1E  51C4               	movf	_flashFlags& (0+255),w,b
 41865   008F20  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 41866   008F22  0BFD               	andlw	-3
 41867   008F24  1996               	xorwf	(??_FLASH_Write+3)& (0+255),w,b
 41868   008F26  6FC4               	movwf	_flashFlags& (0+255),b
 41869                           
 41870                           ; BSR set to: 0
 41871                           ;../../VLCBlib_PIC/nvm.c: 511:     if (flashBuffer[(index&(64 -1))] != value) {
 41872   008F28  0E3F               	movlw	63
 41873   008F2A  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41874   008F2C  6F93               	movwf	??_FLASH_Write& (0+255),b
 41875   008F2E  0E00               	movlw	0
 41876   008F30  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41877   008F32  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41878   008F34  0E48               	movlw	low _flashBuffer
 41879   008F36  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41880   008F38  6ED9               	movwf	fsr2l,c
 41881   008F3A  0E03               	movlw	high _flashBuffer
 41882   008F3C  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41883   008F3E  6EDA               	movwf	fsr2h,c
 41884   008F40  5192               	movf	FLASH_Write@value& (0+255),w,b
 41885   008F42  18DE               	xorwf	postinc2,w,c
 41886   008F44  B4D8               	btfsc	status,2,c
 41887   008F46  D00F               	goto	l18816
 41888                           
 41889                           ; BSR set to: 0
 41890                           ;../../VLCBlib_PIC/nvm.c: 512:         flashFlags.writeNeeded = 1;
 41891   008F48  81C4               	bsf	_flashFlags& (0+255),0,b
 41892                           
 41893                           ; BSR set to: 0
 41894                           ;../../VLCBlib_PIC/nvm.c: 513:         flashBuffer[(index&(64 -1))] = value;
 41895   008F4A  0E3F               	movlw	63
 41896   008F4C  1590               	andwf	FLASH_Write@index& (0+255),w,b
 41897   008F4E  6F93               	movwf	??_FLASH_Write& (0+255),b
 41898   008F50  0E00               	movlw	0
 41899   008F52  1591               	andwf	(FLASH_Write@index+1)& (0+255),w,b
 41900   008F54  6F94               	movwf	(??_FLASH_Write+1)& (0+255),b
 41901   008F56  0E48               	movlw	low _flashBuffer
 41902   008F58  2593               	addwf	??_FLASH_Write& (0+255),w,b
 41903   008F5A  6ED9               	movwf	fsr2l,c
 41904   008F5C  0E03               	movlw	high _flashBuffer
 41905   008F5E  2194               	addwfc	(??_FLASH_Write+1)& (0+255),w,b
 41906   008F60  6EDA               	movwf	fsr2h,c
 41907   008F62  C092  FFDF         	movff	FLASH_Write@value,indf2
 41908   008F66                     l18816:
 41909                           
 41910                           ; BSR set to: 0
 41911                           ;../../VLCBlib_PIC/nvm.c: 515:     return GRSP_OK;
 41912   008F66  0E00               	movlw	0
 41913                           
 41914                           ; BSR set to: 0
 41915   008F68  0012               	return		;funcret
 41916   008F6A                     __end_of_FLASH_Write:
 41917                           	callstack 0
 41918                           
 41919 ;; *************** function _loadFlashBlock *****************
 41920 ;; Defined at:
 41921 ;;		line 441 in file "../../VLCBlib_PIC/nvm.c"
 41922 ;; Parameters:    Size  Location     Type
 41923 ;;		None
 41924 ;; Auto vars:     Size  Location     Type
 41925 ;;  i               1   45[BANK0 ] unsigned char 
 41926 ;; Return value:  Size  Location     Type
 41927 ;;                  1    wreg      void 
 41928 ;; Registers used:
 41929 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41930 ;; Tracked objects:
 41931 ;;		On entry : 0/0
 41932 ;;		On exit  : 0/0
 41933 ;;		Unchanged: 0/0
 41934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 41935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41938 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 41939 ;;Total ram usage:        1 bytes
 41940 ;; Hardware stack levels used: 1
 41941 ;; Hardware stack levels required when called: 12
 41942 ;; This function calls:
 41943 ;;		Nothing
 41944 ;; This function is called by:
 41945 ;;		_FLASH_Write
 41946 ;; This function uses a non-reentrant model
 41947 ;;
 41948                           
 41949                           	psect	text181
 41950   00B990                     __ptext181:
 41951                           	callstack 0
 41952   00B990                     _loadFlashBlock:
 41953                           	callstack 14
 41954                           
 41955                           ;../../VLCBlib_PIC/nvm.c: 443:     EECON1=0X80;
 41956                           
 41957                           ; BSR set to: 0
 41958                           ;incstack = 0
 41959   00B990  0E80               	movlw	128
 41960   00B992  6E7F               	movwf	127,c	;volsfr
 41961                           
 41962                           ;../../VLCBlib_PIC/nvm.c: 444:     TBLPTR = flashBlock;
 41963   00B994  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 41964   00B998  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 41965   00B99C  6AF8               	clrf	248,c	;volatile
 41966                           
 41967                           ;../../VLCBlib_PIC/nvm.c: 445:     TBLPTRU = 0;
 41968   00B99E  0E00               	movlw	0
 41969   00B9A0  6EF8               	movwf	248,c	;volatile
 41970                           
 41971                           ;../../VLCBlib_PIC/nvm.c: 446:     for (uint8_t i=0; i<64; i++) {
 41972   00B9A2  0E00               	movlw	0
 41973   00B9A4  0100               	movlb	0	; () banked
 41974   00B9A6  6F8D               	movwf	loadFlashBlock@i& (0+255),b
 41975   00B9A8                     l2181:
 41976                           
 41977                           ; BSR set to: 0
 41978   00B9A8  0009               	tblrd		*+	;# 
 41979                           
 41980                           ;../../VLCBlib_PIC/nvm.c: 448:         __nop();
 41981   00B9AA  0000               	nop	
 41982                           
 41983                           ;../../VLCBlib_PIC/nvm.c: 449:         flashBuffer[i] = TABLAT;
 41984   00B9AC  0E48               	movlw	low _flashBuffer
 41985   00B9AE  0100               	movlb	0	; () banked
 41986   00B9B0  258D               	addwf	loadFlashBlock@i& (0+255),w,b
 41987   00B9B2  6ED9               	movwf	fsr2l,c
 41988   00B9B4  6ADA               	clrf	fsr2h,c
 41989   00B9B6  0E03               	movlw	high _flashBuffer
 41990   00B9B8  22DA               	addwfc	fsr2h,f,c
 41991   00B9BA  CFF5 FFDF          	movff	tablat,indf2	;volatile
 41992                           
 41993                           ; BSR set to: 0
 41994                           ;../../VLCBlib_PIC/nvm.c: 450:     }
 41995   00B9BE  2B8D               	incf	loadFlashBlock@i& (0+255),f,b
 41996                           
 41997                           ; BSR set to: 0
 41998   00B9C0  0E3F               	movlw	63
 41999   00B9C2  658D               	cpfsgt	loadFlashBlock@i& (0+255),b
 42000   00B9C4  D7F1               	goto	l2181
 42001                           
 42002                           ; BSR set to: 0
 42003                           ;../../VLCBlib_PIC/nvm.c: 451:     TBLPTR = flashBlock;
 42004   00B9C6  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42005   00B9CA  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42006   00B9CE  6AF8               	clrf	248,c	;volatile
 42007                           
 42008                           ; BSR set to: 0
 42009                           ;../../VLCBlib_PIC/nvm.c: 452:     TBLPTRU = 0;
 42010   00B9D0  0E00               	movlw	0
 42011   00B9D2  6EF8               	movwf	248,c	;volatile
 42012                           
 42013                           ; BSR set to: 0
 42014                           ;../../VLCBlib_PIC/nvm.c: 468:     flashFlags.asByte = 0;
 42015   00B9D4  0E00               	movlw	0
 42016   00B9D6  6FC4               	movwf	_flashFlags& (0+255),b
 42017                           
 42018                           ; BSR set to: 0
 42019   00B9D8  0012               	return		;funcret
 42020   00B9DA                     __end_of_loadFlashBlock:
 42021                           	callstack 0
 42022                           
 42023 ;; *************** function _flushFlashBlock *****************
 42024 ;; Defined at:
 42025 ;;		line 367 in file "../../VLCBlib_PIC/nvm.c"
 42026 ;; Parameters:    Size  Location     Type
 42027 ;;		None
 42028 ;; Auto vars:     Size  Location     Type
 42029 ;;  i               1   47[BANK0 ] unsigned char 
 42030 ;;  interruptEna    1   46[BANK0 ] unsigned char 
 42031 ;; Return value:  Size  Location     Type
 42032 ;;                  1    wreg      void 
 42033 ;; Registers used:
 42034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42035 ;; Tracked objects:
 42036 ;;		On entry : 0/0
 42037 ;;		On exit  : 0/0
 42038 ;;		Unchanged: 0/0
 42039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42041 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42043 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42044 ;;Total ram usage:        2 bytes
 42045 ;; Hardware stack levels used: 1
 42046 ;; Hardware stack levels required when called: 15
 42047 ;; This function calls:
 42048 ;;		_APP_isSuitableTimeToWriteFlash
 42049 ;;		_eraseFlashBlock
 42050 ;; This function is called by:
 42051 ;;		_APP_factoryReset
 42052 ;;		_deleteActionRange
 42053 ;;		_poll
 42054 ;;		_FLASH_Write
 42055 ;;		_clearAllEvents
 42056 ;;		_removeTableEntry
 42057 ;;		_addEvent
 42058 ;;		_deleteHappeningRange
 42059 ;; This function uses a non-reentrant model
 42060 ;;
 42061                           
 42062                           	psect	text182
 42063   00A5CC                     __ptext182:
 42064                           	callstack 0
 42065   00A5CC                     _flushFlashBlock:
 42066                           	callstack 11
 42067                           
 42068                           ;../../VLCBlib_PIC/nvm.c: 368:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 37
      +                          0:     TBLPTR = flashBlock;
 42069                           
 42070                           ; BSR set to: 0
 42071                           ;incstack = 0
 42072   00A5CC  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42073   00A5D0  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42074   00A5D4  6AF8               	clrf	248,c	;volatile
 42075                           
 42076                           ;../../VLCBlib_PIC/nvm.c: 371:     TBLPTRU = 0;
 42077   00A5D6  0E00               	movlw	0
 42078   00A5D8  6EF8               	movwf	248,c	;volatile
 42079                           
 42080                           ;../../VLCBlib_PIC/nvm.c: 376:     if (! flashFlags.writeNeeded) return;
 42081   00A5DA  0100               	movlb	0	; () banked
 42082   00A5DC  A1C4               	btfss	_flashFlags& (0+255),0,b
 42083   00A5DE  0012               	return	
 42084   00A5E0                     l18618:
 42085                           
 42086                           ;../../VLCBlib_PIC/nvm.c: 379:     while (APP_isSuitableTimeToWriteFlash() == BAD_TIME)
 42087   00A5E0  EC4B  F062         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42088   00A5E4  0900               	iorlw	0
 42089   00A5E6  B4D8               	btfsc	status,2,c
 42090   00A5E8  D7FB               	goto	l18618
 42091                           
 42092                           ;../../VLCBlib_PIC/nvm.c: 382:     if (flashFlags.eraseNeeded) {
 42093   00A5EA  0100               	movlb	0	; () banked
 42094   00A5EC  B3C4               	btfsc	_flashFlags& (0+255),1,b
 42095                           
 42096                           ; BSR set to: 0
 42097                           ;../../VLCBlib_PIC/nvm.c: 383:         eraseFlashBlock();
 42098   00A5EE  EC0D  F05C         	call	_eraseFlashBlock	;wreg free
 42099                           
 42100                           ;../../VLCBlib_PIC/nvm.c: 386:     interruptEnabled = (INTCONbits.GIEH);
 42101   00A5F2  0E00               	movlw	0
 42102   00A5F4  BEF2               	btfsc	242,7,c	;volatile
 42103   00A5F6  0E01               	movlw	1
 42104   00A5F8  0100               	movlb	0	; () banked
 42105   00A5FA  6F8E               	movwf	flushFlashBlock@interruptEnabled& (0+255),b
 42106                           
 42107                           ; BSR set to: 0
 42108                           ;../../VLCBlib_PIC/nvm.c: 387:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42109   00A5FC  9EF2               	bcf	242,7,c	;volatile
 42110                           
 42111                           ; BSR set to: 0
 42112   00A5FE  9CF2               	bcf	242,6,c	;volatile
 42113                           
 42114                           ; BSR set to: 0
 42115                           ;../../VLCBlib_PIC/nvm.c: 389:     for (uint8_t i=0; i<64; i++) {
 42116   00A600  0E00               	movlw	0
 42117   00A602  6F8F               	movwf	flushFlashBlock@i& (0+255),b
 42118   00A604                     l18634:
 42119                           
 42120                           ; BSR set to: 0
 42121                           ;../../VLCBlib_PIC/nvm.c: 390:         TABLAT = flashBuffer[i];
 42122   00A604  0E48               	movlw	low _flashBuffer
 42123   00A606  258F               	addwf	flushFlashBlock@i& (0+255),w,b
 42124   00A608  6ED9               	movwf	fsr2l,c
 42125   00A60A  6ADA               	clrf	fsr2h,c
 42126   00A60C  0E03               	movlw	high _flashBuffer
 42127   00A60E  22DA               	addwfc	fsr2h,f,c
 42128   00A610  50DF               	movf	indf2,w,c
 42129   00A612  6EF5               	movwf	245,c	;volatile
 42130   00A614  000D               	tblwt		*+	;# 
 42131                           
 42132                           ;../../VLCBlib_PIC/nvm.c: 392:     }
 42133   00A616  0100               	movlb	0	; () banked
 42134   00A618  2B8F               	incf	flushFlashBlock@i& (0+255),f,b
 42135                           
 42136                           ; BSR set to: 0
 42137   00A61A  0E3F               	movlw	63
 42138   00A61C  658F               	cpfsgt	flushFlashBlock@i& (0+255),b
 42139   00A61E  D7F2               	goto	l18634
 42140                           
 42141                           ; BSR set to: 0
 42142                           ;../../VLCBlib_PIC/nvm.c: 399:     TBLPTR = flashBlock;
 42143   00A620  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42144   00A624  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42145   00A628  6AF8               	clrf	248,c	;volatile
 42146                           
 42147                           ; BSR set to: 0
 42148                           ;../../VLCBlib_PIC/nvm.c: 400:     TBLPTRU = 0;
 42149   00A62A  0E00               	movlw	0
 42150   00A62C  6EF8               	movwf	248,c	;volatile
 42151                           
 42152                           ; BSR set to: 0
 42153                           ;../../VLCBlib_PIC/nvm.c: 401:     EECON1bits.EEPGD = 1;
 42154   00A62E  8E7F               	bsf	127,7,c	;volsfr
 42155                           
 42156                           ; BSR set to: 0
 42157                           ;../../VLCBlib_PIC/nvm.c: 402:     EECON1bits.CFGS = 0;
 42158   00A630  9C7F               	bcf	127,6,c	;volsfr
 42159                           
 42160                           ; BSR set to: 0
 42161                           ;../../VLCBlib_PIC/nvm.c: 403:     EECON1bits.FREE = 0;
 42162   00A632  987F               	bcf	127,4,c	;volsfr
 42163                           
 42164                           ; BSR set to: 0
 42165                           ;../../VLCBlib_PIC/nvm.c: 404:     EECON1bits.WREN = 1;
 42166   00A634  847F               	bsf	127,2,c	;volsfr
 42167                           
 42168                           ; BSR set to: 0
 42169                           ;../../VLCBlib_PIC/nvm.c: 406:     EECON2 = 0x55;
 42170   00A636  0E55               	movlw	85
 42171   00A638  6E7E               	movwf	126,c	;volsfr
 42172                           
 42173                           ; BSR set to: 0
 42174                           ;../../VLCBlib_PIC/nvm.c: 407:     EECON2 = 0xAA;
 42175   00A63A  0EAA               	movlw	170
 42176   00A63C  6E7E               	movwf	126,c	;volsfr
 42177                           
 42178                           ; BSR set to: 0
 42179                           ;../../VLCBlib_PIC/nvm.c: 408:     EECON1bits.WR = 1;
 42180   00A63E  827F               	bsf	127,1,c	;volsfr
 42181                           
 42182                           ; BSR set to: 0
 42183                           ;../../VLCBlib_PIC/nvm.c: 409:     EECON1bits.WREN = 0;
 42184   00A640  947F               	bcf	127,2,c	;volsfr
 42185                           
 42186                           ; BSR set to: 0
 42187                           ;../../VLCBlib_PIC/nvm.c: 432:     if (interruptEnabled) {
 42188   00A642  518E               	movf	flushFlashBlock@interruptEnabled& (0+255),w,b
 42189   00A644  B4D8               	btfsc	status,2,c
 42190   00A646  D002               	goto	l18664
 42191                           
 42192                           ; BSR set to: 0
 42193                           ;../../VLCBlib_PIC/nvm.c: 433:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42194   00A648  8EF2               	bsf	242,7,c	;volatile
 42195   00A64A  8CF2               	bsf	242,6,c	;volatile
 42196   00A64C                     l18664:
 42197                           
 42198                           ; BSR set to: 0
 42199                           ;../../VLCBlib_PIC/nvm.c: 435:     flashFlags.asByte = 0;
 42200   00A64C  0E00               	movlw	0
 42201   00A64E  6FC4               	movwf	_flashFlags& (0+255),b
 42202                           
 42203                           ; BSR set to: 0
 42204   00A650  0012               	return		;funcret
 42205   00A652                     __end_of_flushFlashBlock:
 42206                           	callstack 0
 42207                           
 42208 ;; *************** function _eraseFlashBlock *****************
 42209 ;; Defined at:
 42210 ;;		line 316 in file "../../VLCBlib_PIC/nvm.c"
 42211 ;; Parameters:    Size  Location     Type
 42212 ;;		None
 42213 ;; Auto vars:     Size  Location     Type
 42214 ;;  interruptEna    1   45[BANK0 ] unsigned char 
 42215 ;; Return value:  Size  Location     Type
 42216 ;;                  1    wreg      void 
 42217 ;; Registers used:
 42218 ;;		wreg, status,2, cstack
 42219 ;; Tracked objects:
 42220 ;;		On entry : 0/0
 42221 ;;		On exit  : 0/0
 42222 ;;		Unchanged: 0/0
 42223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42227 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42228 ;;Total ram usage:        1 bytes
 42229 ;; Hardware stack levels used: 1
 42230 ;; Hardware stack levels required when called: 14
 42231 ;; This function calls:
 42232 ;;		_APP_isSuitableTimeToWriteFlash
 42233 ;; This function is called by:
 42234 ;;		_flushFlashBlock
 42235 ;;		_FLASH_Write
 42236 ;; This function uses a non-reentrant model
 42237 ;;
 42238                           
 42239                           	psect	text183
 42240   00B81A                     __ptext183:
 42241                           	callstack 0
 42242   00B81A                     _eraseFlashBlock:
 42243                           	callstack 11
 42244                           
 42245                           ;../../VLCBlib_PIC/nvm.c: 320:     while (! APP_isSuitableTimeToWriteFlash())
 42246                           
 42247                           ;../../VLCBlib_PIC/nvm.c: 317:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 32
      +                          0:     while (! APP_isSuitableTimeToWriteFlash())
 42248                           
 42249                           ; BSR set to: 0
 42250                           ;incstack = 0
 42251   00B81A  EC4B  F062         	call	_APP_isSuitableTimeToWriteFlash	;wreg free
 42252   00B81E  0900               	iorlw	0
 42253   00B820  B4D8               	btfsc	status,2,c
 42254   00B822  D7FB               	goto	__ptext183
 42255                           
 42256                           ;../../VLCBlib_PIC/nvm.c: 323:     interruptEnabled = (INTCONbits.GIEH);
 42257   00B824  0E00               	movlw	0
 42258   00B826  BEF2               	btfsc	242,7,c	;volatile
 42259   00B828  0E01               	movlw	1
 42260   00B82A  0100               	movlb	0	; () banked
 42261   00B82C  6F8D               	movwf	eraseFlashBlock@interruptEnabled& (0+255),b
 42262                           
 42263                           ; BSR set to: 0
 42264                           ;../../VLCBlib_PIC/nvm.c: 325:     TBLPTR = flashBlock;
 42265   00B82E  C0B9  FFF6         	movff	_flashBlock,tblptrl	;volatile
 42266   00B832  C0BA  FFF7         	movff	_flashBlock+1,tblptrh	;volatile
 42267   00B836  6AF8               	clrf	248,c	;volatile
 42268                           
 42269                           ;../../VLCBlib_PIC/nvm.c: 326:     TBLPTRU = 0;
 42270   00B838  0E00               	movlw	0
 42271   00B83A  6EF8               	movwf	248,c	;volatile
 42272                           
 42273                           ; BSR set to: 0
 42274                           ;../../VLCBlib_PIC/nvm.c: 327:     EECON1bits.EEPGD = 1;
 42275   00B83C  8E7F               	bsf	127,7,c	;volsfr
 42276                           
 42277                           ; BSR set to: 0
 42278                           ;../../VLCBlib_PIC/nvm.c: 328:     EECON1bits.CFGS = 0;
 42279   00B83E  9C7F               	bcf	127,6,c	;volsfr
 42280                           
 42281                           ; BSR set to: 0
 42282                           ;../../VLCBlib_PIC/nvm.c: 329:     EECON1bits.WREN = 1;
 42283   00B840  847F               	bsf	127,2,c	;volsfr
 42284                           
 42285                           ; BSR set to: 0
 42286                           ;../../VLCBlib_PIC/nvm.c: 330:     EECON1bits.FREE = 1;
 42287   00B842  887F               	bsf	127,4,c	;volsfr
 42288                           
 42289                           ; BSR set to: 0
 42290                           ;../../VLCBlib_PIC/nvm.c: 331:     {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42291   00B844  9EF2               	bcf	242,7,c	;volatile
 42292                           
 42293                           ; BSR set to: 0
 42294   00B846  9CF2               	bcf	242,6,c	;volatile
 42295                           
 42296                           ;../../VLCBlib_PIC/nvm.c: 332:     EECON2 = 0x55;
 42297   00B848  0E55               	movlw	85
 42298   00B84A  6E7E               	movwf	126,c	;volsfr
 42299                           
 42300                           ;../../VLCBlib_PIC/nvm.c: 333:     EECON2 = 0xaa;
 42301   00B84C  0EAA               	movlw	170
 42302   00B84E  6E7E               	movwf	126,c	;volsfr
 42303                           
 42304                           ; BSR set to: 0
 42305                           ;../../VLCBlib_PIC/nvm.c: 334:     EECON1bits.WR = 1;
 42306   00B850  827F               	bsf	127,1,c	;volsfr
 42307   00B852                     l2163:
 42308                           
 42309                           ;../../VLCBlib_PIC/nvm.c: 335:     while(EECON1bits.WR)
 42310   00B852  B27F               	btfsc	127,1,c	;volsfr
 42311   00B854  D7FE               	goto	l2163
 42312                           
 42313                           ;../../VLCBlib_PIC/nvm.c: 337:     EECON1bits.WREN = 0;
 42314   00B856  947F               	bcf	127,2,c	;volsfr
 42315                           
 42316                           ;../../VLCBlib_PIC/nvm.c: 357:     if (interruptEnabled) {
 42317   00B858  0100               	movlb	0	; () banked
 42318   00B85A  518D               	movf	eraseFlashBlock@interruptEnabled& (0+255),w,b
 42319   00B85C  B4D8               	btfsc	status,2,c
 42320   00B85E  0012               	return	
 42321                           
 42322                           ; BSR set to: 0
 42323                           ;../../VLCBlib_PIC/nvm.c: 358:         {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42324   00B860  8EF2               	bsf	242,7,c	;volatile
 42325   00B862  8CF2               	bsf	242,6,c	;volatile
 42326                           
 42327                           ; BSR set to: 0
 42328   00B864  0012               	return		;funcret
 42329   00B866                     __end_of_eraseFlashBlock:
 42330                           	callstack 0
 42331                           
 42332 ;; *************** function _APP_isSuitableTimeToWriteFlash *****************
 42333 ;; Defined at:
 42334 ;;		line 402 in file "../main.c"
 42335 ;; Parameters:    Size  Location     Type
 42336 ;;		None
 42337 ;; Auto vars:     Size  Location     Type
 42338 ;;		None
 42339 ;; Return value:  Size  Location     Type
 42340 ;;                  1    wreg      enum E12686
 42341 ;; Registers used:
 42342 ;;		wreg, status,2, cstack
 42343 ;; Tracked objects:
 42344 ;;		On entry : 0/0
 42345 ;;		On exit  : 0/0
 42346 ;;		Unchanged: 0/0
 42347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42352 ;;Total ram usage:        0 bytes
 42353 ;; Hardware stack levels used: 1
 42354 ;; Hardware stack levels required when called: 13
 42355 ;; This function calls:
 42356 ;;		_isNoServoPulses
 42357 ;; This function is called by:
 42358 ;;		_eraseFlashBlock
 42359 ;;		_flushFlashBlock
 42360 ;; This function uses a non-reentrant model
 42361 ;;
 42362                           
 42363                           	psect	text184
 42364   00C496                     __ptext184:
 42365                           	callstack 0
 42366   00C496                     _APP_isSuitableTimeToWriteFlash:
 42367                           	callstack 11
 42368                           
 42369                           ;../main.c: 404:     return isNoServoPulses() ? GOOD_TIME : BAD_TIME;
 42370                           
 42371                           ; BSR set to: 0
 42372                           ;incstack = 0
 42373   00C496  EC54  F062         	call	_isNoServoPulses	;wreg free
 42374   00C49A  0900               	iorlw	0
 42375   00C49C  B4D8               	btfsc	status,2,c
 42376   00C49E  D002               	goto	u18170
 42377   00C4A0  0E01               	movlw	1
 42378   00C4A2  0012               	return	
 42379   00C4A4                     u18170:
 42380   00C4A4  0E00               	movlw	0
 42381   00C4A6  0012               	return		;funcret
 42382   00C4A8                     __end_of_APP_isSuitableTimeToWriteFlash:
 42383                           	callstack 0
 42384                           
 42385 ;; *************** function _isNoServoPulses *****************
 42386 ;; Defined at:
 42387 ;;		line 694 in file "../servo.c"
 42388 ;; Parameters:    Size  Location     Type
 42389 ;;		None
 42390 ;; Auto vars:     Size  Location     Type
 42391 ;;		None
 42392 ;; Return value:  Size  Location     Type
 42393 ;;                  1    wreg      enum E12710
 42394 ;; Registers used:
 42395 ;;		wreg
 42396 ;; Tracked objects:
 42397 ;;		On entry : 0/0
 42398 ;;		On exit  : 0/0
 42399 ;;		Unchanged: 0/0
 42400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42405 ;;Total ram usage:        0 bytes
 42406 ;; Hardware stack levels used: 1
 42407 ;; Hardware stack levels required when called: 12
 42408 ;; This function calls:
 42409 ;;		Nothing
 42410 ;; This function is called by:
 42411 ;;		_APP_isSuitableTimeToWriteFlash
 42412 ;; This function uses a non-reentrant model
 42413 ;;
 42414                           
 42415                           	psect	text185
 42416   00C4A8                     __ptext185:
 42417                           	callstack 0
 42418   00C4A8                     _isNoServoPulses:
 42419                           	callstack 11
 42420                           
 42421                           ;../servo.c: 696:     if (T1CONbits.TMR1ON) return FALSE;
 42422                           
 42423                           ;incstack = 0
 42424   00C4A8  A0CD               	btfss	205,0,c	;volatile
 42425   00C4AA  D002               	goto	l1180
 42426   00C4AC                     u18150:
 42427   00C4AC  0E00               	movlw	0
 42428   00C4AE  0012               	return	
 42429   00C4B0                     l1180:
 42430                           
 42431                           ;../servo.c: 697:     if (T3CONbits.TMR3ON) return FALSE;
 42432   00C4B0  B0B1               	btfsc	177,0,c	;volatile
 42433   00C4B2  D7FC               	goto	u18150
 42434                           
 42435                           ;../servo.c: 699:     return TRUE;
 42436   00C4B4  0E01               	movlw	1
 42437   00C4B6  0012               	return		;funcret
 42438   00C4B8                     __end_of_isNoServoPulses:
 42439                           	callstack 0
 42440                           
 42441 ;; *************** function _EEPROM_Write *****************
 42442 ;; Defined at:
 42443 ;;		line 208 in file "../../VLCBlib_PIC/nvm.c"
 42444 ;; Parameters:    Size  Location     Type
 42445 ;;  index           2   47[BANK0 ] unsigned short 
 42446 ;;  value           1   49[BANK0 ] unsigned char 
 42447 ;; Auto vars:     Size  Location     Type
 42448 ;;  interruptEna    1   50[BANK0 ] unsigned char 
 42449 ;; Return value:  Size  Location     Type
 42450 ;;                  1    wreg      unsigned char 
 42451 ;; Registers used:
 42452 ;;		wreg, status,2, status,0, cstack
 42453 ;; Tracked objects:
 42454 ;;		On entry : 0/0
 42455 ;;		On exit  : 0/0
 42456 ;;		Unchanged: 0/0
 42457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42458 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42459 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42461 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42462 ;;Total ram usage:        4 bytes
 42463 ;; Hardware stack levels used: 1
 42464 ;; Hardware stack levels required when called: 13
 42465 ;; This function calls:
 42466 ;;		_EEPROM_Read
 42467 ;;		_updateModuleErrorStatus
 42468 ;; This function is called by:
 42469 ;;		_writeNVM
 42470 ;; This function uses a non-reentrant model
 42471 ;;
 42472                           
 42473                           	psect	text186
 42474   00AF92                     __ptext186:
 42475                           	callstack 0
 42476   00AF92                     _EEPROM_Write:
 42477                           	callstack 14
 42478                           
 42479                           ;../../VLCBlib_PIC/nvm.c: 209:     uint8_t interruptEnabled;;../../VLCBlib_PIC/nvm.c: 21
      +                          0:     interruptEnabled = (INTCONbits.GIEH);
 42480                           
 42481                           ;incstack = 0
 42482   00AF92  0E00               	movlw	0
 42483   00AF94  BEF2               	btfsc	242,7,c	;volatile
 42484   00AF96  0E01               	movlw	1
 42485   00AF98  0100               	movlb	0	; () banked
 42486   00AF9A  6F92               	movwf	EEPROM_Write@interruptEnabled& (0+255),b
 42487   00AF9C                     l18754:
 42488                           
 42489                           ;../../VLCBlib_PIC/nvm.c: 213:         EEADRH = (index >> 8)&0xFF;
 42490   00AF9C  0100               	movlb	0	; () banked
 42491   00AF9E  5190               	movf	(EEPROM_Write@index+1)& (0+255),w,b
 42492   00AFA0  6E75               	movwf	117,c	;volatile
 42493                           
 42494                           ; BSR set to: 0
 42495                           ;../../VLCBlib_PIC/nvm.c: 214:         EEADR = index & 0xFF;
 42496   00AFA2  C08F  FF74         	movff	EEPROM_Write@index,3956	;volatile
 42497                           
 42498                           ; BSR set to: 0
 42499                           ;../../VLCBlib_PIC/nvm.c: 215:         EEDATA = value;
 42500   00AFA6  C091  FF73         	movff	EEPROM_Write@value,3955	;volatile
 42501                           
 42502                           ; BSR set to: 0
 42503                           ;../../VLCBlib_PIC/nvm.c: 216:         EECON1bits.EEPGD = 0;
 42504   00AFAA  9E7F               	bcf	127,7,c	;volsfr
 42505                           
 42506                           ; BSR set to: 0
 42507                           ;../../VLCBlib_PIC/nvm.c: 217:         EECON1bits.CFGS = 0;
 42508   00AFAC  9C7F               	bcf	127,6,c	;volsfr
 42509                           
 42510                           ; BSR set to: 0
 42511                           ;../../VLCBlib_PIC/nvm.c: 218:         EECON1bits.WREN = 1;
 42512   00AFAE  847F               	bsf	127,2,c	;volsfr
 42513                           
 42514                           ; BSR set to: 0
 42515                           ;../../VLCBlib_PIC/nvm.c: 220:         {INTCONbits.GIEH = 0; INTCONbits.GIEL = 0;};
 42516   00AFB0  9EF2               	bcf	242,7,c	;volatile
 42517                           
 42518                           ; BSR set to: 0
 42519   00AFB2  9CF2               	bcf	242,6,c	;volatile
 42520                           
 42521                           ; BSR set to: 0
 42522                           ;../../VLCBlib_PIC/nvm.c: 221:         EECON2 = 0x55;
 42523   00AFB4  0E55               	movlw	85
 42524   00AFB6  6E7E               	movwf	126,c	;volsfr
 42525                           
 42526                           ; BSR set to: 0
 42527                           ;../../VLCBlib_PIC/nvm.c: 222:         EECON2 = 0xAA;
 42528   00AFB8  0EAA               	movlw	170
 42529   00AFBA  6E7E               	movwf	126,c	;volsfr
 42530                           
 42531                           ; BSR set to: 0
 42532                           ;../../VLCBlib_PIC/nvm.c: 223:         EECON1bits.WR = 1;
 42533   00AFBC  827F               	bsf	127,1,c	;volsfr
 42534   00AFBE                     l2143:
 42535                           
 42536                           ;../../VLCBlib_PIC/nvm.c: 224:         while (EECON1bits.WR)
 42537   00AFBE  B27F               	btfsc	127,1,c	;volsfr
 42538   00AFC0  D7FE               	goto	l2143
 42539   00AFC2                     u18400:
 42540                           
 42541                           ;../../VLCBlib_PIC/nvm.c: 226:         while (!EEIF)
 42542                           
 42543                           ;../../VLCBlib_PIC/nvm.c: 227:             ;
 42544   00AFC2  ACB7               	btfss	4023,6,c	;volatile
 42545   00AFC4  D7FE               	goto	u18400
 42546                           
 42547                           ;../../VLCBlib_PIC/nvm.c: 228:         EEIF = 0;
 42548   00AFC6  9CB7               	bcf	4023,6,c	;volatile
 42549                           
 42550                           ;../../VLCBlib_PIC/nvm.c: 229:         if (interruptEnabled) {
 42551   00AFC8  0100               	movlb	0	; () banked
 42552   00AFCA  5192               	movf	EEPROM_Write@interruptEnabled& (0+255),w,b
 42553   00AFCC  B4D8               	btfsc	status,2,c
 42554   00AFCE  D002               	goto	l2149
 42555                           
 42556                           ; BSR set to: 0
 42557                           ;../../VLCBlib_PIC/nvm.c: 231:             {INTCONbits.GIEH = 1; INTCONbits.GIEL = 1;};
 42558   00AFD0  8EF2               	bsf	242,7,c	;volatile
 42559   00AFD2  8CF2               	bsf	242,6,c	;volatile
 42560   00AFD4                     l2149:
 42561                           
 42562                           ; BSR set to: 0
 42563                           ;../../VLCBlib_PIC/nvm.c: 233:         EECON1bits.WREN = 0;
 42564   00AFD4  947F               	bcf	127,2,c	;volsfr
 42565                           
 42566                           ; BSR set to: 0
 42567                           ;../../VLCBlib_PIC/nvm.c: 269:         if (EEPROM_Read(index) == value) {
 42568   00AFD6  C08F  F08D         	movff	EEPROM_Write@index,EEPROM_Read@index
 42569   00AFDA  C090  F08E         	movff	EEPROM_Write@index+1,EEPROM_Read@index+1
 42570   00AFDE  ECC8  F061         	call	_EEPROM_Read	;wreg free
 42571   00AFE2  0100               	movlb	0	; () banked
 42572   00AFE4  1991               	xorwf	EEPROM_Write@value& (0+255),w,b
 42573   00AFE6  B4D8               	btfsc	status,2,c
 42574   00AFE8  D006               	goto	l18788
 42575                           
 42576                           ; BSR set to: 0
 42577                           ;../../VLCBlib_PIC/nvm.c: 273:         mnsDiagnostics[0x04].asUint++;
 42578   00AFEA  0101               	movlb	1	; () banked
 42579   00AFEC  4B95               	infsnz	(_mnsDiagnostics+8)& (0+255),f,b
 42580   00AFEE  2B96               	incf	(_mnsDiagnostics+9)& (0+255),f,b
 42581                           
 42582                           ; BSR set to: 1
 42583                           ;../../VLCBlib_PIC/nvm.c: 274:         updateModuleErrorStatus();
 42584   00AFF0  EC62  F062         	call	_updateModuleErrorStatus	;wreg free
 42585                           
 42586                           ;../../VLCBlib_PIC/nvm.c: 276:     } while (1);
 42587   00AFF4  D7D3               	goto	l18754
 42588   00AFF6                     l18788:
 42589                           
 42590                           ; BSR set to: 0
 42591                           ;../../VLCBlib_PIC/nvm.c: 277:     return GRSP_OK;
 42592   00AFF6  0E00               	movlw	0
 42593                           
 42594                           ; BSR set to: 0
 42595   00AFF8  0012               	return		;funcret
 42596   00AFFA                     __end_of_EEPROM_Write:
 42597                           	callstack 0
 42598                           
 42599 ;; *************** function _updateModuleErrorStatus *****************
 42600 ;; Defined at:
 42601 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 42602 ;; Parameters:    Size  Location     Type
 42603 ;;		None
 42604 ;; Auto vars:     Size  Location     Type
 42605 ;;		None
 42606 ;; Return value:  Size  Location     Type
 42607 ;;                  1    wreg      void 
 42608 ;; Registers used:
 42609 ;;		wreg, status,2, status,0
 42610 ;; Tracked objects:
 42611 ;;		On entry : 0/0
 42612 ;;		On exit  : 0/0
 42613 ;;		Unchanged: 0/0
 42614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42619 ;;Total ram usage:        0 bytes
 42620 ;; Hardware stack levels used: 1
 42621 ;; Hardware stack levels required when called: 12
 42622 ;; This function calls:
 42623 ;;		Nothing
 42624 ;; This function is called by:
 42625 ;;		_EEPROM_Write
 42626 ;;		_canSendMessage
 42627 ;;		_processEnumeration
 42628 ;; This function uses a non-reentrant model
 42629 ;;
 42630                           
 42631                           	psect	text187
 42632   00C4C4                     __ptext187:
 42633                           	callstack 0
 42634   00C4C4                     _updateModuleErrorStatus:
 42635                           	callstack 14
 42636                           
 42637                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 42638                           
 42639                           ; BSR set to: 0
 42640                           ;incstack = 0
 42641   00C4C4  0101               	movlb	1	; () banked
 42642   00C4C6  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 42643   00C4C8  B4D8               	btfsc	status,2,c
 42644   00C4CA  0012               	return	
 42645                           
 42646                           ; BSR set to: 1
 42647                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 42648   00C4CC  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 42649                           
 42650                           ; BSR set to: 1
 42651   00C4CE  0012               	return		;funcret
 42652   00C4D0                     __end_of_updateModuleErrorStatus:
 42653                           	callstack 0
 42654                           
 42655 ;; *************** function _setDigitalOutput *****************
 42656 ;; Defined at:
 42657 ;;		line 226 in file "../digitalOut.c"
 42658 ;; Parameters:    Size  Location     Type
 42659 ;;  io              1    wreg     unsigned char 
 42660 ;;  state           1   55[BANK0 ] unsigned char 
 42661 ;; Auto vars:     Size  Location     Type
 42662 ;;  io              1   57[BANK0 ] unsigned char 
 42663 ;;  pinState        1   56[BANK0 ] enum E12760
 42664 ;; Return value:  Size  Location     Type
 42665 ;;                  1    wreg      void 
 42666 ;; Registers used:
 42667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42668 ;; Tracked objects:
 42669 ;;		On entry : 0/0
 42670 ;;		On exit  : 0/0
 42671 ;;		Unchanged: 0/0
 42672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42673 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42674 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42676 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42677 ;;Total ram usage:        3 bytes
 42678 ;; Hardware stack levels used: 1
 42679 ;; Hardware stack levels required when called: 13
 42680 ;; This function calls:
 42681 ;;		_getNV
 42682 ;;		_setOutputPin
 42683 ;; This function is called by:
 42684 ;;		_configIO
 42685 ;;		_setOutputPosition
 42686 ;; This function uses a non-reentrant model
 42687 ;;
 42688                           
 42689                           	psect	text188
 42690   00A3A2                     __ptext188:
 42691                           	callstack 0
 42692   00A3A2                     _setDigitalOutput:
 42693                           	callstack 14
 42694                           
 42695                           ; BSR set to: 1
 42696                           ;incstack = 0
 42697                           ;setDigitalOutput@io stored from wreg
 42698   00A3A2  0100               	movlb	0	; () banked
 42699   00A3A4  6F99               	movwf	setDigitalOutput@io& (0+255),b
 42700                           
 42701                           ;../digitalOut.c: 227:     Boolean pinState;;../digitalOut.c: 228:     switch (state) {
 42702   00A3A6  D038               	goto	l19494
 42703   00A3A8                     l19478:
 42704                           
 42705                           ; BSR set to: 0
 42706                           ;../digitalOut.c: 230:             state = 2;
 42707   00A3A8  0E02               	movlw	2
 42708   00A3AA  6F97               	movwf	setDigitalOutput@state& (0+255),b
 42709   00A3AC                     l19480:
 42710                           
 42711                           ; BSR set to: 0
 42712                           ;../digitalOut.c: 234:             pinState = (state == 1);
 42713   00A3AC  0597               	decf	setDigitalOutput@state& (0+255),w,b
 42714   00A3AE  A4D8               	btfss	status,2,c
 42715   00A3B0  D002               	goto	u19350
 42716   00A3B2  0E01               	movlw	1
 42717   00A3B4  D001               	goto	u19360
 42718   00A3B6                     u19350:
 42719   00A3B6  0E00               	movlw	0
 42720   00A3B8                     u19360:
 42721   00A3B8  6F98               	movwf	setDigitalOutput@pinState& (0+255),b
 42722                           
 42723                           ; BSR set to: 0
 42724                           ;../digitalOut.c: 238:             if (getNV((16 + 7*(io) + 1)) & 0x20) {
 42725   00A3BA  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42726   00A3BC  0D07               	mullw	7
 42727   00A3BE  50F3               	movf	243,w,c
 42728   00A3C0  0F11               	addlw	17
 42729   00A3C2  ECD9  F05D         	call	_getNV
 42730   00A3C6  0100               	movlb	0	; () banked
 42731   00A3C8  AB8D               	btfss	?_getNV& (0+255),5,b
 42732   00A3CA  D00B               	goto	l19486
 42733                           
 42734                           ; BSR set to: 0
 42735                           ;../digitalOut.c: 239:                 setOutputPin(io, ! pinState);
 42736   00A3CC  5198               	movf	setDigitalOutput@pinState& (0+255),w,b
 42737   00A3CE  A4D8               	btfss	status,2,c
 42738   00A3D0  D002               	goto	u19380
 42739   00A3D2  0E01               	movlw	1
 42740   00A3D4  D001               	goto	u19390
 42741   00A3D6                     u19380:
 42742   00A3D6  0E00               	movlw	0
 42743   00A3D8                     u19390:
 42744   00A3D8  6F91               	movwf	setOutputPin@state& (0+255),b
 42745   00A3DA  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42746   00A3DC  ECA5  F036         	call	_setOutputPin
 42747                           
 42748                           ;../digitalOut.c: 240:             } else {
 42749   00A3E0  0012               	return	
 42750   00A3E2                     l19486:
 42751                           
 42752                           ; BSR set to: 0
 42753                           ;../digitalOut.c: 241:                 setOutputPin(io, pinState);
 42754   00A3E2  C098  F091         	movff	setDigitalOutput@pinState,setOutputPin@state
 42755   00A3E6  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42756   00A3E8  ECA5  F036         	call	_setOutputPin
 42757   00A3EC  0012               	return	
 42758   00A3EE                     l19488:
 42759                           
 42760                           ; BSR set to: 0
 42761                           ;../digitalOut.c: 245:             flashDelays[io] = (int8_t)getNV((16 + 7*(io) + 3));
 42762   00A3EE  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42763   00A3F0  0D07               	mullw	7
 42764   00A3F2  50F3               	movf	243,w,c
 42765   00A3F4  0F13               	addlw	19
 42766   00A3F6  ECD9  F05D         	call	_getNV
 42767   00A3FA  0E30               	movlw	low _flashDelays
 42768   00A3FC  0100               	movlb	0	; () banked
 42769   00A3FE  2599               	addwf	setDigitalOutput@io& (0+255),w,b
 42770   00A400  6ED9               	movwf	fsr2l,c
 42771   00A402  6ADA               	clrf	fsr2h,c
 42772   00A404  0E01               	movlw	high _flashDelays
 42773   00A406  22DA               	addwfc	fsr2h,f,c
 42774   00A408  C08D  FFDF         	movff	?_getNV,indf2
 42775                           
 42776                           ; BSR set to: 0
 42777                           ;../digitalOut.c: 246:             setOutputPin(io, TRUE);
 42778   00A40C  0E01               	movlw	1
 42779   00A40E  6F91               	movwf	setOutputPin@state& (0+255),b
 42780   00A410  5199               	movf	setDigitalOutput@io& (0+255),w,b
 42781   00A412  ECA5  F036         	call	_setOutputPin
 42782                           
 42783                           ;../digitalOut.c: 247:             break;
 42784   00A416  0012               	return	
 42785   00A418                     l19494:
 42786   00A418  0100               	movlb	0	; () banked
 42787   00A41A  5197               	movf	setDigitalOutput@state& (0+255),w,b
 42788                           
 42789                           ; Switch size 1, requested type "simple"
 42790                           ; Number of cases is 3, Range of values is 1 to 3
 42791                           ; switch strategies available:
 42792                           ; Name         Instructions Cycles
 42793                           ; simple_byte           10     6 (average)
 42794                           ;	Chosen strategy is simple_byte
 42795   00A41C  0A01               	xorlw	1	; case 1
 42796   00A41E  B4D8               	btfsc	status,2,c
 42797   00A420  D7C5               	goto	l19480
 42798   00A422  0A03               	xorlw	3	; case 2
 42799   00A424  B4D8               	btfsc	status,2,c
 42800   00A426  D7C2               	goto	l19480
 42801   00A428  0A01               	xorlw	1	; case 3
 42802   00A42A  B4D8               	btfsc	status,2,c
 42803   00A42C  D7E0               	goto	l19488
 42804   00A42E  D7BC               	goto	l19478
 42805   00A430                     __end_of_setDigitalOutput:
 42806                           	callstack 0
 42807                           
 42808 ;; *************** function _setOutputPin *****************
 42809 ;; Defined at:
 42810 ;;		line 256 in file "../digitalOut.c"
 42811 ;; Parameters:    Size  Location     Type
 42812 ;;  io              1    wreg     unsigned char 
 42813 ;;  state           1   49[BANK0 ] enum E12760
 42814 ;; Auto vars:     Size  Location     Type
 42815 ;;  io              1   52[BANK0 ] unsigned char 
 42816 ;; Return value:  Size  Location     Type
 42817 ;;                  1    wreg      void 
 42818 ;; Registers used:
 42819 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 42820 ;; Tracked objects:
 42821 ;;		On entry : 0/0
 42822 ;;		On exit  : 0/0
 42823 ;;		Unchanged: 0/0
 42824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 42825 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42827 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42828 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 42829 ;;Total ram usage:        4 bytes
 42830 ;; Hardware stack levels used: 1
 42831 ;; Hardware stack levels required when called: 12
 42832 ;; This function calls:
 42833 ;;		Nothing
 42834 ;; This function is called by:
 42835 ;;		_startDigitalOutput
 42836 ;;		_processOutputs
 42837 ;;		_setDigitalOutput
 42838 ;;		_setOutputPosition
 42839 ;;		_setupTimer1
 42840 ;;		_setupTimer3
 42841 ;; This function uses a non-reentrant model
 42842 ;;
 42843                           
 42844                           	psect	text189
 42845   006D4A                     __ptext189:
 42846                           	callstack 0
 42847   006D4A                     _setOutputPin:
 42848                           	callstack 15
 42849                           
 42850                           ;incstack = 0
 42851                           ;setOutputPin@io stored from wreg
 42852   006D4A  0100               	movlb	0	; () banked
 42853   006D4C  6F94               	movwf	setOutputPin@io& (0+255),b
 42854                           
 42855                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 42856   006D4E  D0C0               	goto	l19342
 42857   006D50                     l19322:
 42858                           
 42859                           ; BSR set to: 0
 42860                           ;../digitalOut.c: 259:             if (state) {
 42861   006D50  5191               	movf	setOutputPin@state& (0+255),w,b
 42862   006D52  B4D8               	btfsc	status,2,c
 42863   006D54  D01E               	goto	l19326
 42864                           
 42865                           ; BSR set to: 0
 42866                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 42867   006D56  5194               	movf	setOutputPin@io& (0+255),w,b
 42868   006D58  0D04               	mullw	4
 42869   006D5A  0E02               	movlw	2
 42870   006D5C  26F3               	addwf	243,f,c
 42871   006D5E  0E00               	movlw	0
 42872   006D60  22F4               	addwfc	244,f,c
 42873   006D62  0E35               	movlw	low _configs
 42874   006D64  24F3               	addwf	243,w,c
 42875   006D66  6EF6               	movwf	tblptrl,c
 42876   006D68  0EEE               	movlw	high _configs
 42877   006D6A  20F4               	addwfc	244,w,c
 42878   006D6C  6EF7               	movwf	tblptrh,c
 42879   006D6E                     	if	1	;There are 3 active tblptr bytes
 42880   006D6E  6AF8               	clrf	tblptru,c
 42881   006D70  0E00               	movlw	low (__mediumconst shr (0+16))
 42882   006D72  22F8               	addwfc	tblptru,f,c
 42883   006D74                     	endif
 42884   006D74  0008               	tblrd		*
 42885   006D76  CFF5 F092          	movff	tablat,??_setOutputPin
 42886   006D7A  0E01               	movlw	1
 42887   006D7C  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42888   006D7E  2B92               	incf	??_setOutputPin& (0+255),f,b
 42889   006D80  D002               	goto	u19094
 42890   006D82                     u19095:
 42891   006D82  90D8               	bcf	status,0,c
 42892   006D84  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42893   006D86                     u19094:
 42894   006D86  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42895   006D88  D7FC               	goto	u19095
 42896   006D8A  0100               	movlb	0	; () banked
 42897   006D8C  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42898   006D8E  1289               	iorwf	137,f,c	;volatile
 42899                           
 42900                           ;../digitalOut.c: 262:             } else {
 42901   006D90  0012               	return	
 42902   006D92                     l19326:
 42903                           
 42904                           ; BSR set to: 0
 42905                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 42906   006D92  5194               	movf	setOutputPin@io& (0+255),w,b
 42907   006D94  0D04               	mullw	4
 42908   006D96  0E02               	movlw	2
 42909   006D98  26F3               	addwf	243,f,c
 42910   006D9A  0E00               	movlw	0
 42911   006D9C  22F4               	addwfc	244,f,c
 42912   006D9E  0E35               	movlw	low _configs
 42913   006DA0  24F3               	addwf	243,w,c
 42914   006DA2  6EF6               	movwf	tblptrl,c
 42915   006DA4  0EEE               	movlw	high _configs
 42916   006DA6  20F4               	addwfc	244,w,c
 42917   006DA8  6EF7               	movwf	tblptrh,c
 42918   006DAA                     	if	1	;There are 3 active tblptr bytes
 42919   006DAA  6AF8               	clrf	tblptru,c
 42920   006DAC  0E00               	movlw	low (__mediumconst shr (0+16))
 42921   006DAE  22F8               	addwfc	tblptru,f,c
 42922   006DB0                     	endif
 42923   006DB0  0008               	tblrd		*
 42924   006DB2  CFF5 F092          	movff	tablat,??_setOutputPin
 42925   006DB6  0E01               	movlw	1
 42926   006DB8  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42927   006DBA  2B92               	incf	??_setOutputPin& (0+255),f,b
 42928   006DBC  D002               	goto	u19104
 42929   006DBE                     u19105:
 42930   006DBE  90D8               	bcf	status,0,c
 42931   006DC0  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42932   006DC2                     u19104:
 42933   006DC2  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42934   006DC4  D7FC               	goto	u19105
 42935   006DC6  0100               	movlb	0	; () banked
 42936   006DC8  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42937   006DCA  0AFF               	xorlw	255
 42938   006DCC  1689               	andwf	137,f,c	;volatile
 42939   006DCE  0012               	return	
 42940   006DD0                     l19328:
 42941                           
 42942                           ; BSR set to: 0
 42943                           ;../digitalOut.c: 268:             if (state) {
 42944   006DD0  5191               	movf	setOutputPin@state& (0+255),w,b
 42945   006DD2  B4D8               	btfsc	status,2,c
 42946   006DD4  D01E               	goto	l19332
 42947                           
 42948                           ; BSR set to: 0
 42949                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 42950   006DD6  5194               	movf	setOutputPin@io& (0+255),w,b
 42951   006DD8  0D04               	mullw	4
 42952   006DDA  0E02               	movlw	2
 42953   006DDC  26F3               	addwf	243,f,c
 42954   006DDE  0E00               	movlw	0
 42955   006DE0  22F4               	addwfc	244,f,c
 42956   006DE2  0E35               	movlw	low _configs
 42957   006DE4  24F3               	addwf	243,w,c
 42958   006DE6  6EF6               	movwf	tblptrl,c
 42959   006DE8  0EEE               	movlw	high _configs
 42960   006DEA  20F4               	addwfc	244,w,c
 42961   006DEC  6EF7               	movwf	tblptrh,c
 42962   006DEE                     	if	1	;There are 3 active tblptr bytes
 42963   006DEE  6AF8               	clrf	tblptru,c
 42964   006DF0  0E00               	movlw	low (__mediumconst shr (0+16))
 42965   006DF2  22F8               	addwfc	tblptru,f,c
 42966   006DF4                     	endif
 42967   006DF4  0008               	tblrd		*
 42968   006DF6  CFF5 F092          	movff	tablat,??_setOutputPin
 42969   006DFA  0E01               	movlw	1
 42970   006DFC  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 42971   006DFE  2B92               	incf	??_setOutputPin& (0+255),f,b
 42972   006E00  D002               	goto	u19124
 42973   006E02                     u19125:
 42974   006E02  90D8               	bcf	status,0,c
 42975   006E04  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 42976   006E06                     u19124:
 42977   006E06  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 42978   006E08  D7FC               	goto	u19125
 42979   006E0A  0100               	movlb	0	; () banked
 42980   006E0C  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 42981   006E0E  128A               	iorwf	138,f,c	;volatile
 42982                           
 42983                           ;../digitalOut.c: 271:             } else {
 42984   006E10  0012               	return	
 42985   006E12                     l19332:
 42986                           
 42987                           ; BSR set to: 0
 42988                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 42989   006E12  5194               	movf	setOutputPin@io& (0+255),w,b
 42990   006E14  0D04               	mullw	4
 42991   006E16  0E02               	movlw	2
 42992   006E18  26F3               	addwf	243,f,c
 42993   006E1A  0E00               	movlw	0
 42994   006E1C  22F4               	addwfc	244,f,c
 42995   006E1E  0E35               	movlw	low _configs
 42996   006E20  24F3               	addwf	243,w,c
 42997   006E22  6EF6               	movwf	tblptrl,c
 42998   006E24  0EEE               	movlw	high _configs
 42999   006E26  20F4               	addwfc	244,w,c
 43000   006E28  6EF7               	movwf	tblptrh,c
 43001   006E2A                     	if	1	;There are 3 active tblptr bytes
 43002   006E2A  6AF8               	clrf	tblptru,c
 43003   006E2C  0E00               	movlw	low (__mediumconst shr (0+16))
 43004   006E2E  22F8               	addwfc	tblptru,f,c
 43005   006E30                     	endif
 43006   006E30  0008               	tblrd		*
 43007   006E32  CFF5 F092          	movff	tablat,??_setOutputPin
 43008   006E36  0E01               	movlw	1
 43009   006E38  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43010   006E3A  2B92               	incf	??_setOutputPin& (0+255),f,b
 43011   006E3C  D002               	goto	u19134
 43012   006E3E                     u19135:
 43013   006E3E  90D8               	bcf	status,0,c
 43014   006E40  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43015   006E42                     u19134:
 43016   006E42  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43017   006E44  D7FC               	goto	u19135
 43018   006E46  0100               	movlb	0	; () banked
 43019   006E48  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43020   006E4A  0AFF               	xorlw	255
 43021   006E4C  168A               	andwf	138,f,c	;volatile
 43022   006E4E  0012               	return	
 43023   006E50                     l19334:
 43024                           
 43025                           ; BSR set to: 0
 43026                           ;../digitalOut.c: 277:             if (state) {
 43027   006E50  5191               	movf	setOutputPin@state& (0+255),w,b
 43028   006E52  B4D8               	btfsc	status,2,c
 43029   006E54  D01E               	goto	l19338
 43030                           
 43031                           ; BSR set to: 0
 43032                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 43033   006E56  5194               	movf	setOutputPin@io& (0+255),w,b
 43034   006E58  0D04               	mullw	4
 43035   006E5A  0E02               	movlw	2
 43036   006E5C  26F3               	addwf	243,f,c
 43037   006E5E  0E00               	movlw	0
 43038   006E60  22F4               	addwfc	244,f,c
 43039   006E62  0E35               	movlw	low _configs
 43040   006E64  24F3               	addwf	243,w,c
 43041   006E66  6EF6               	movwf	tblptrl,c
 43042   006E68  0EEE               	movlw	high _configs
 43043   006E6A  20F4               	addwfc	244,w,c
 43044   006E6C  6EF7               	movwf	tblptrh,c
 43045   006E6E                     	if	1	;There are 3 active tblptr bytes
 43046   006E6E  6AF8               	clrf	tblptru,c
 43047   006E70  0E00               	movlw	low (__mediumconst shr (0+16))
 43048   006E72  22F8               	addwfc	tblptru,f,c
 43049   006E74                     	endif
 43050   006E74  0008               	tblrd		*
 43051   006E76  CFF5 F092          	movff	tablat,??_setOutputPin
 43052   006E7A  0E01               	movlw	1
 43053   006E7C  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43054   006E7E  2B92               	incf	??_setOutputPin& (0+255),f,b
 43055   006E80  D002               	goto	u19154
 43056   006E82                     u19155:
 43057   006E82  90D8               	bcf	status,0,c
 43058   006E84  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43059   006E86                     u19154:
 43060   006E86  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43061   006E88  D7FC               	goto	u19155
 43062   006E8A  0100               	movlb	0	; () banked
 43063   006E8C  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43064   006E8E  128B               	iorwf	139,f,c	;volatile
 43065                           
 43066                           ;../digitalOut.c: 280:             } else {
 43067   006E90  0012               	return	
 43068   006E92                     l19338:
 43069                           
 43070                           ; BSR set to: 0
 43071                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 43072   006E92  5194               	movf	setOutputPin@io& (0+255),w,b
 43073   006E94  0D04               	mullw	4
 43074   006E96  0E02               	movlw	2
 43075   006E98  26F3               	addwf	243,f,c
 43076   006E9A  0E00               	movlw	0
 43077   006E9C  22F4               	addwfc	244,f,c
 43078   006E9E  0E35               	movlw	low _configs
 43079   006EA0  24F3               	addwf	243,w,c
 43080   006EA2  6EF6               	movwf	tblptrl,c
 43081   006EA4  0EEE               	movlw	high _configs
 43082   006EA6  20F4               	addwfc	244,w,c
 43083   006EA8  6EF7               	movwf	tblptrh,c
 43084   006EAA                     	if	1	;There are 3 active tblptr bytes
 43085   006EAA  6AF8               	clrf	tblptru,c
 43086   006EAC  0E00               	movlw	low (__mediumconst shr (0+16))
 43087   006EAE  22F8               	addwfc	tblptru,f,c
 43088   006EB0                     	endif
 43089   006EB0  0008               	tblrd		*
 43090   006EB2  CFF5 F092          	movff	tablat,??_setOutputPin
 43091   006EB6  0E01               	movlw	1
 43092   006EB8  6F93               	movwf	(??_setOutputPin+1)& (0+255),b
 43093   006EBA  2B92               	incf	??_setOutputPin& (0+255),f,b
 43094   006EBC  D002               	goto	u19164
 43095   006EBE                     u19165:
 43096   006EBE  90D8               	bcf	status,0,c
 43097   006EC0  3793               	rlcf	(??_setOutputPin+1)& (0+255),f,b
 43098   006EC2                     u19164:
 43099   006EC2  2F92               	decfsz	??_setOutputPin& (0+255),f,b
 43100   006EC4  D7FC               	goto	u19165
 43101   006EC6  0100               	movlb	0	; () banked
 43102   006EC8  5193               	movf	(??_setOutputPin+1)& (0+255),w,b
 43103   006ECA  0AFF               	xorlw	255
 43104   006ECC  168B               	andwf	139,f,c	;volatile
 43105   006ECE  0012               	return	
 43106   006ED0                     l19342:
 43107   006ED0  0100               	movlb	0	; () banked
 43108   006ED2  5194               	movf	setOutputPin@io& (0+255),w,b
 43109   006ED4  0D04               	mullw	4
 43110   006ED6  0E01               	movlw	1
 43111   006ED8  26F3               	addwf	243,f,c
 43112   006EDA  0E00               	movlw	0
 43113   006EDC  22F4               	addwfc	244,f,c
 43114   006EDE  0E35               	movlw	low _configs
 43115   006EE0  24F3               	addwf	243,w,c
 43116   006EE2  6EF6               	movwf	tblptrl,c
 43117   006EE4  0EEE               	movlw	high _configs
 43118   006EE6  20F4               	addwfc	244,w,c
 43119   006EE8  6EF7               	movwf	tblptrh,c
 43120   006EEA                     	if	1	;There are 3 active tblptr bytes
 43121   006EEA  6AF8               	clrf	tblptru,c
 43122   006EEC  0E00               	movlw	low (__mediumconst shr (0+16))
 43123   006EEE  22F8               	addwfc	tblptru,f,c
 43124   006EF0                     	endif
 43125   006EF0  0008               	tblrd		*
 43126   006EF2  50F5               	movf	tablat,w,c
 43127                           
 43128                           ; Switch size 1, requested type "simple"
 43129                           ; Number of cases is 3, Range of values is 65 to 67
 43130                           ; switch strategies available:
 43131                           ; Name         Instructions Cycles
 43132                           ; simple_byte           10     6 (average)
 43133                           ;	Chosen strategy is simple_byte
 43134   006EF4  0A41               	xorlw	65	; case 65
 43135   006EF6  B4D8               	btfsc	status,2,c
 43136   006EF8  D72B               	goto	l19322
 43137   006EFA  0A03               	xorlw	3	; case 66
 43138   006EFC  B4D8               	btfsc	status,2,c
 43139   006EFE  D768               	goto	l19328
 43140   006F00  0A01               	xorlw	1	; case 67
 43141   006F02  A4D8               	btfss	status,2,c
 43142   006F04  0012               	return	
 43143   006F06  D7A4               	goto	l19334
 43144   006F08                     __end_of_setOutputPin:
 43145                           	callstack 0
 43146                           
 43147 ;; *************** function _getNV *****************
 43148 ;; Defined at:
 43149 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 43150 ;; Parameters:    Size  Location     Type
 43151 ;;  index           1    wreg     unsigned char 
 43152 ;; Auto vars:     Size  Location     Type
 43153 ;;  index           1   48[BANK0 ] unsigned char 
 43154 ;; Return value:  Size  Location     Type
 43155 ;;                  2   45[BANK0 ] short 
 43156 ;; Registers used:
 43157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43158 ;; Tracked objects:
 43159 ;;		On entry : 0/0
 43160 ;;		On exit  : 0/0
 43161 ;;		Unchanged: 0/0
 43162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43165 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43166 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43167 ;;Total ram usage:        4 bytes
 43168 ;; Hardware stack levels used: 1
 43169 ;; Hardware stack levels required when called: 12
 43170 ;; This function calls:
 43171 ;;		Nothing
 43172 ;; This function is called by:
 43173 ;;		_setup
 43174 ;;		_loop
 43175 ;;		_APP_GetEventState
 43176 ;;		_configIO
 43177 ;;		_startDigitalOutput
 43178 ;;		_processOutputs
 43179 ;;		_setDigitalOutput
 43180 ;;		_initInputScan
 43181 ;;		_inputScan
 43182 ;;		_readInput
 43183 ;;		_consumer2QProcessMessage
 43184 ;;		_processActions
 43185 ;;		_sodTRCallback
 43186 ;;		_APP_nvValueChanged
 43187 ;;		_setOutputPosition
 43188 ;;		_initServos
 43189 ;;		_startServos
 43190 ;;		_setupTimer1
 43191 ;;		_setupTimer3
 43192 ;;		_pollServos
 43193 ;;		_startServoOutput
 43194 ;;		_startMultiOutput
 43195 ;;		_setServoState
 43196 ;;		_setBounceState
 43197 ;;		_setMultiState
 43198 ;;		_bounceDown
 43199 ;;		_bounceUp
 43200 ;;		_nvProcessMessage
 43201 ;;		_nvTRnvrdCallback
 43202 ;; This function uses a non-reentrant model
 43203 ;;
 43204                           
 43205                           	psect	text190
 43206   00BBB2                     __ptext190:
 43207                           	callstack 0
 43208   00BBB2                     _getNV:
 43209                           	callstack 14
 43210                           
 43211                           ; BSR set to: 0
 43212                           ;incstack = 0
 43213                           ;getNV@index stored from wreg
 43214   00BBB2  0100               	movlb	0	; () banked
 43215   00BBB4  6F90               	movwf	getNV@index& (0+255),b
 43216                           
 43217                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 43218   00BBB6  0100               	movlb	0	; () banked
 43219   00BBB8  5190               	movf	getNV@index& (0+255),w,b
 43220   00BBBA  A4D8               	btfss	status,2,c
 43221   00BBBC  D005               	goto	l19310
 43222                           
 43223                           ; BSR set to: 0
 43224   00BBBE  0E00               	movlw	0
 43225   00BBC0  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43226   00BBC2  0E7F               	movlw	127
 43227   00BBC4  6F8D               	movwf	?_getNV& (0+255),b
 43228   00BBC6  0012               	return	
 43229   00BBC8                     l19310:
 43230                           
 43231                           ; BSR set to: 0
 43232                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 43233   00BBC8  0E7F               	movlw	127
 43234   00BBCA  6590               	cpfsgt	getNV@index& (0+255),b
 43235   00BBCC  D005               	goto	l19316
 43236                           
 43237                           ; BSR set to: 0
 43238   00BBCE  0EFF               	movlw	255
 43239   00BBD0  6F8E               	movwf	(?_getNV+1)& (0+255),b
 43240   00BBD2  0EF6               	movlw	246
 43241   00BBD4  6F8D               	movwf	?_getNV& (0+255),b
 43242   00BBD6  0012               	return	
 43243   00BBD8                     l19316:
 43244                           
 43245                           ; BSR set to: 0
 43246                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 43247   00BBD8  0E00               	movlw	low _nvCache
 43248   00BBDA  2590               	addwf	getNV@index& (0+255),w,b
 43249   00BBDC  6ED9               	movwf	fsr2l,c
 43250   00BBDE  6ADA               	clrf	fsr2h,c
 43251   00BBE0  0E04               	movlw	high _nvCache
 43252   00BBE2  22DA               	addwfc	fsr2h,f,c
 43253   00BBE4  50DF               	movf	indf2,w,c
 43254   00BBE6  6F8F               	movwf	??_getNV& (0+255),b
 43255   00BBE8  518F               	movf	??_getNV& (0+255),w,b
 43256   00BBEA  6F8D               	movwf	?_getNV& (0+255),b
 43257   00BBEC  6B8E               	clrf	(?_getNV+1)& (0+255),b
 43258                           
 43259                           ; BSR set to: 0
 43260   00BBEE  0012               	return		;funcret
 43261   00BBF0                     __end_of_getNV:
 43262                           	callstack 0
 43263                           
 43264 ;; *************** function _readNVM *****************
 43265 ;; Defined at:
 43266 ;;		line 542 in file "../../VLCBlib_PIC/nvm.c"
 43267 ;; Parameters:    Size  Location     Type
 43268 ;;  type            1    wreg     enum E12732
 43269 ;;  index           3   49[BANK0 ] unsigned um
 43270 ;; Auto vars:     Size  Location     Type
 43271 ;;  type            1   54[BANK0 ] enum E12732
 43272 ;; Return value:  Size  Location     Type
 43273 ;;                  2   49[BANK0 ] short 
 43274 ;; Registers used:
 43275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43276 ;; Tracked objects:
 43277 ;;		On entry : 0/0
 43278 ;;		On exit  : 0/0
 43279 ;;		Unchanged: 0/0
 43280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43281 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43282 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43283 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43284 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43285 ;;Total ram usage:        6 bytes
 43286 ;; Hardware stack levels used: 1
 43287 ;; Hardware stack levels required when called: 13
 43288 ;; This function calls:
 43289 ;;		_EEPROM_Read
 43290 ;;		_FLASH_Read
 43291 ;; This function is called by:
 43292 ;;		_APP_GetEventState
 43293 ;;		_configIO
 43294 ;;		_initInputScan
 43295 ;;		_initServos
 43296 ;;		_mnsPowerUp
 43297 ;;		_loadNvCache
 43298 ;;		_main
 43299 ;;		_canPowerUp
 43300 ;;		_doNnevn
 43301 ;;		_removeTableEntry
 43302 ;;		_addEvent
 43303 ;;		_writeEv
 43304 ;;		_getEv
 43305 ;;		_numEv
 43306 ;;		_getEVs
 43307 ;;		_getNN
 43308 ;;		_getEN
 43309 ;;		_validStart
 43310 ;;		_deleteHappeningRange
 43311 ;; This function uses a non-reentrant model
 43312 ;;
 43313                           
 43314                           	psect	text191
 43315   00B2AE                     __ptext191:
 43316                           	callstack 0
 43317   00B2AE                     _readNVM:
 43318                           	callstack 15
 43319                           
 43320                           ; BSR set to: 0
 43321                           ;incstack = 0
 43322                           ;readNVM@type stored from wreg
 43323   00B2AE  0100               	movlb	0	; () banked
 43324   00B2B0  6F96               	movwf	readNVM@type& (0+255),b
 43325                           
 43326                           ;../../VLCBlib_PIC/nvm.c: 543:     switch(type) {
 43327   00B2B2  D01D               	goto	l18578
 43328   00B2B4                     l18564:
 43329                           
 43330                           ; BSR set to: 0
 43331                           ;../../VLCBlib_PIC/nvm.c: 545:             return EEPROM_Read((uint16_t)index);
 43332   00B2B4  C091  F08D         	movff	readNVM@index,EEPROM_Read@index
 43333   00B2B8  C092  F08E         	movff	readNVM@index+1,EEPROM_Read@index+1
 43334   00B2BC  ECC8  F061         	call	_EEPROM_Read	;wreg free
 43335   00B2C0  0100               	movlb	0	; () banked
 43336   00B2C2  6F94               	movwf	??_readNVM& (0+255),b
 43337   00B2C4  5194               	movf	??_readNVM& (0+255),w,b
 43338   00B2C6  6F91               	movwf	?_readNVM& (0+255),b
 43339   00B2C8  6B92               	clrf	(?_readNVM+1)& (0+255),b
 43340   00B2CA  0012               	return	
 43341   00B2CC                     l18568:
 43342                           
 43343                           ; BSR set to: 0
 43344                           ;../../VLCBlib_PIC/nvm.c: 548:             return FLASH_Read((uint16_t)index);
 43345   00B2CC  C091  F08D         	movff	readNVM@index,FLASH_Read@address
 43346   00B2D0  C092  F08E         	movff	readNVM@index+1,FLASH_Read@address+1
 43347   00B2D4  EC33  F05C         	call	_FLASH_Read	;wreg free
 43348   00B2D8  0100               	movlb	0	; () banked
 43349   00B2DA  6F94               	movwf	??_readNVM& (0+255),b
 43350   00B2DC  5194               	movf	??_readNVM& (0+255),w,b
 43351   00B2DE  6F91               	movwf	?_readNVM& (0+255),b
 43352   00B2E0  6B92               	clrf	(?_readNVM+1)& (0+255),b
 43353   00B2E2  0012               	return	
 43354   00B2E4                     l18572:
 43355                           
 43356                           ; BSR set to: 0
 43357                           ;../../VLCBlib_PIC/nvm.c: 554:             return -GRSP_UNKNOWN_NVM_TYPE;
 43358   00B2E4  0EFF               	movlw	255
 43359   00B2E6  6F92               	movwf	(?_readNVM+1)& (0+255),b
 43360   00B2E8  0E02               	movlw	2
 43361   00B2EA  6F91               	movwf	?_readNVM& (0+255),b
 43362   00B2EC  0012               	return	
 43363   00B2EE                     l18578:
 43364   00B2EE  0100               	movlb	0	; () banked
 43365   00B2F0  5196               	movf	readNVM@type& (0+255),w,b
 43366   00B2F2  6F94               	movwf	??_readNVM& (0+255),b
 43367   00B2F4  6B95               	clrf	(??_readNVM+1)& (0+255),b
 43368                           
 43369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 43370                           ; Switch size 1, requested type "simple"
 43371                           ; Number of cases is 1, Range of values is 0 to 0
 43372                           ; switch strategies available:
 43373                           ; Name         Instructions Cycles
 43374                           ; simple_byte            4     3 (average)
 43375                           ;	Chosen strategy is simple_byte
 43376   00B2F6  5195               	movf	(??_readNVM+1)& (0+255),w,b
 43377   00B2F8  0A00               	xorlw	0	; case 0
 43378   00B2FA  A4D8               	btfss	status,2,c
 43379   00B2FC  D7F3               	goto	l18572
 43380                           
 43381                           ; BSR set to: 0
 43382                           ; Switch size 1, requested type "simple"
 43383                           ; Number of cases is 2, Range of values is 0 to 1
 43384                           ; switch strategies available:
 43385                           ; Name         Instructions Cycles
 43386                           ; simple_byte            7     4 (average)
 43387                           ;	Chosen strategy is simple_byte
 43388   00B2FE  5194               	movf	??_readNVM& (0+255),w,b
 43389   00B300  0A00               	xorlw	0	; case 0
 43390   00B302  B4D8               	btfsc	status,2,c
 43391   00B304  D7D7               	goto	l18564
 43392   00B306  0A01               	xorlw	1	; case 1
 43393   00B308  B4D8               	btfsc	status,2,c
 43394   00B30A  D7E0               	goto	l18568
 43395   00B30C  D7EB               	goto	l18572
 43396   00B30E                     __end_of_readNVM:
 43397                           	callstack 0
 43398                           
 43399 ;; *************** function _FLASH_Read *****************
 43400 ;; Defined at:
 43401 ;;		line 287 in file "../../VLCBlib_PIC/nvm.c"
 43402 ;; Parameters:    Size  Location     Type
 43403 ;;  address         2   45[BANK0 ] unsigned short 
 43404 ;; Auto vars:     Size  Location     Type
 43405 ;;		None
 43406 ;; Return value:  Size  Location     Type
 43407 ;;                  1    wreg      unsigned char 
 43408 ;; Registers used:
 43409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 43410 ;; Tracked objects:
 43411 ;;		On entry : 0/0
 43412 ;;		On exit  : 0/0
 43413 ;;		Unchanged: 0/0
 43414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43419 ;;Total ram usage:        4 bytes
 43420 ;; Hardware stack levels used: 1
 43421 ;; Hardware stack levels required when called: 12
 43422 ;; This function calls:
 43423 ;;		Nothing
 43424 ;; This function is called by:
 43425 ;;		_readNVM
 43426 ;; This function uses a non-reentrant model
 43427 ;;
 43428                           
 43429                           	psect	text192
 43430   00B866                     __ptext192:
 43431                           	callstack 0
 43432   00B866                     _FLASH_Read:
 43433                           	callstack 15
 43434                           
 43435                           ;../../VLCBlib_PIC/nvm.c: 289:     if ((address&(~((flash_address_t)64 -1))) == flashBlo
      +                          ck) {
 43436                           
 43437                           ; BSR set to: 0
 43438                           ;incstack = 0
 43439   00B866  0EC0               	movlw	192
 43440   00B868  0100               	movlb	0	; () banked
 43441   00B86A  158D               	andwf	FLASH_Read@address& (0+255),w,b
 43442   00B86C  6F8F               	movwf	??_FLASH_Read& (0+255),b
 43443   00B86E  0EFF               	movlw	255
 43444   00B870  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 43445   00B872  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 43446   00B874  51B9               	movf	_flashBlock& (0+255),w,b
 43447   00B876  198F               	xorwf	??_FLASH_Read& (0+255),w,b
 43448   00B878  E112               	bnz	l18554
 43449   00B87A  51BA               	movf	(_flashBlock+1)& (0+255),w,b
 43450   00B87C  1990               	xorwf	(??_FLASH_Read+1)& (0+255),w,b
 43451   00B87E  A4D8               	btfss	status,2,c
 43452   00B880  D00E               	goto	l18554
 43453                           
 43454                           ; BSR set to: 0
 43455                           ;../../VLCBlib_PIC/nvm.c: 291:         return flashBuffer[(address&(64 -1))];
 43456   00B882  0E3F               	movlw	63
 43457   00B884  158D               	andwf	FLASH_Read@address& (0+255),w,b
 43458   00B886  6F8F               	movwf	??_FLASH_Read& (0+255),b
 43459   00B888  0E00               	movlw	0
 43460   00B88A  158E               	andwf	(FLASH_Read@address+1)& (0+255),w,b
 43461   00B88C  6F90               	movwf	(??_FLASH_Read+1)& (0+255),b
 43462   00B88E  0E48               	movlw	low _flashBuffer
 43463   00B890  258F               	addwf	??_FLASH_Read& (0+255),w,b
 43464   00B892  6ED9               	movwf	fsr2l,c
 43465   00B894  0E03               	movlw	high _flashBuffer
 43466   00B896  2190               	addwfc	(??_FLASH_Read+1)& (0+255),w,b
 43467   00B898  6EDA               	movwf	fsr2h,c
 43468   00B89A  50DF               	movf	indf2,w,c
 43469   00B89C  0012               	return	
 43470   00B89E                     l18554:
 43471                           
 43472                           ; BSR set to: 0
 43473                           ;../../VLCBlib_PIC/nvm.c: 295:         TBLPTR = address;
 43474   00B89E  C08D  FFF6         	movff	FLASH_Read@address,tblptrl	;volatile
 43475   00B8A2  C08E  FFF7         	movff	FLASH_Read@address+1,tblptrh	;volatile
 43476   00B8A6  6AF8               	clrf	248,c	;volatile
 43477                           
 43478                           ; BSR set to: 0
 43479                           ;../../VLCBlib_PIC/nvm.c: 296:         TBLPTRU = 0;
 43480   00B8A8  0E00               	movlw	0
 43481   00B8AA  6EF8               	movwf	248,c	;volatile
 43482   00B8AC  0008               	tblrd		*	;# 
 43483                           
 43484                           ;../../VLCBlib_PIC/nvm.c: 307:         return TABLAT;
 43485   00B8AE  50F5               	movf	245,w,c	;volatile
 43486   00B8B0  0012               	return		;funcret
 43487   00B8B2                     __end_of_FLASH_Read:
 43488                           	callstack 0
 43489                           
 43490 ;; *************** function _EEPROM_Read *****************
 43491 ;; Defined at:
 43492 ;;		line 163 in file "../../VLCBlib_PIC/nvm.c"
 43493 ;; Parameters:    Size  Location     Type
 43494 ;;  index           2   45[BANK0 ] unsigned short 
 43495 ;; Auto vars:     Size  Location     Type
 43496 ;;		None
 43497 ;; Return value:  Size  Location     Type
 43498 ;;                  1    wreg      unsigned char 
 43499 ;; Registers used:
 43500 ;;		wreg, status,2
 43501 ;; Tracked objects:
 43502 ;;		On entry : 0/0
 43503 ;;		On exit  : 0/0
 43504 ;;		Unchanged: 0/0
 43505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43509 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43510 ;;Total ram usage:        2 bytes
 43511 ;; Hardware stack levels used: 1
 43512 ;; Hardware stack levels required when called: 12
 43513 ;; This function calls:
 43514 ;;		Nothing
 43515 ;; This function is called by:
 43516 ;;		_EEPROM_Write
 43517 ;;		_readNVM
 43518 ;; This function uses a non-reentrant model
 43519 ;;
 43520                           
 43521                           	psect	text193
 43522   00C390                     __ptext193:
 43523                           	callstack 0
 43524   00C390                     _EEPROM_Read:
 43525                           	callstack 15
 43526                           
 43527                           ;../../VLCBlib_PIC/nvm.c: 166:     while (EECON1bits.WR)
 43528                           
 43529                           ;../../VLCBlib_PIC/nvm.c: 167:         ;
 43530                           
 43531                           ;incstack = 0
 43532   00C390  B27F               	btfsc	127,1,c	;volsfr
 43533   00C392  D7FE               	goto	__ptext193
 43534                           
 43535                           ;../../VLCBlib_PIC/nvm.c: 169:     EEADRH = (index >> 8)&0xFF;
 43536   00C394  0100               	movlb	0	; () banked
 43537   00C396  518E               	movf	(EEPROM_Read@index+1)& (0+255),w,b
 43538   00C398  6E75               	movwf	117,c	;volatile
 43539                           
 43540                           ; BSR set to: 0
 43541                           ;../../VLCBlib_PIC/nvm.c: 170:     EEADR = index & 0xFF;
 43542   00C39A  C08D  FF74         	movff	EEPROM_Read@index,3956	;volatile
 43543                           
 43544                           ; BSR set to: 0
 43545                           ;../../VLCBlib_PIC/nvm.c: 171:     EECON1bits.EEPGD = 0;
 43546   00C39E  9E7F               	bcf	127,7,c	;volsfr
 43547                           
 43548                           ; BSR set to: 0
 43549                           ;../../VLCBlib_PIC/nvm.c: 172:     EECON1bits.CFGS = 0;
 43550   00C3A0  9C7F               	bcf	127,6,c	;volsfr
 43551                           
 43552                           ; BSR set to: 0
 43553                           ;../../VLCBlib_PIC/nvm.c: 173:     EECON1bits.RD = 1;
 43554   00C3A2  807F               	bsf	127,0,c	;volsfr
 43555   00C3A4                     l2136:
 43556                           
 43557                           ;../../VLCBlib_PIC/nvm.c: 174:     while (EECON1bits.RD)
 43558   00C3A4  B07F               	btfsc	127,0,c	;volsfr
 43559   00C3A6  D7FE               	goto	l2136
 43560   00C3A8  0000               	nop		;# 
 43561                           
 43562                           ;../../VLCBlib_PIC/nvm.c: 179:     return EEDATA;
 43563   00C3AA  5073               	movf	115,w,c	;volatile
 43564   00C3AC  0012               	return		;funcret
 43565   00C3AE                     __end_of_EEPROM_Read:
 43566                           	callstack 0
 43567                           
 43568 ;; *************** function _factoryResetGlobalEvents *****************
 43569 ;; Defined at:
 43570 ;;		line 100 in file "../universalEvents.c"
 43571 ;; Parameters:    Size  Location     Type
 43572 ;;		None
 43573 ;; Auto vars:     Size  Location     Type
 43574 ;;		None
 43575 ;; Return value:  Size  Location     Type
 43576 ;;                  1    wreg      void 
 43577 ;; Registers used:
 43578 ;;		None
 43579 ;; Tracked objects:
 43580 ;;		On entry : 0/0
 43581 ;;		On exit  : 0/0
 43582 ;;		Unchanged: 0/0
 43583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43588 ;;Total ram usage:        0 bytes
 43589 ;; Hardware stack levels used: 1
 43590 ;; Hardware stack levels required when called: 12
 43591 ;; This function calls:
 43592 ;;		Nothing
 43593 ;; This function is called by:
 43594 ;;		_APP_factoryReset
 43595 ;; This function uses a non-reentrant model
 43596 ;;
 43597                           
 43598                           	psect	text194
 43599   00C53C                     __ptext194:
 43600                           	callstack 0
 43601   00C53C                     _factoryResetGlobalEvents:
 43602                           	callstack 14
 43603                           
 43604                           ;incstack = 0
 43605   00C53C  0012               	return		;funcret
 43606   00C53E                     __end_of_factoryResetGlobalEvents:
 43607                           	callstack 0
 43608                           
 43609 ;; *************** function _APP_testMode *****************
 43610 ;; Defined at:
 43611 ;;		line 229 in file "../main.c"
 43612 ;; Parameters:    Size  Location     Type
 43613 ;;		None
 43614 ;; Auto vars:     Size  Location     Type
 43615 ;;		None
 43616 ;; Return value:  Size  Location     Type
 43617 ;;                  1    wreg      void 
 43618 ;; Registers used:
 43619 ;;		None
 43620 ;; Tracked objects:
 43621 ;;		On entry : 0/0
 43622 ;;		On exit  : 0/0
 43623 ;;		Unchanged: 0/0
 43624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43629 ;;Total ram usage:        0 bytes
 43630 ;; Hardware stack levels used: 1
 43631 ;; Hardware stack levels required when called: 12
 43632 ;; This function calls:
 43633 ;;		Nothing
 43634 ;; This function is called by:
 43635 ;;		_checkPowerOnPb
 43636 ;; This function uses a non-reentrant model
 43637 ;;
 43638                           
 43639                           	psect	text195
 43640   00C53E                     __ptext195:
 43641                           	callstack 0
 43642   00C53E                     _APP_testMode:
 43643                           	callstack 17
 43644                           
 43645                           ;incstack = 0
 43646   00C53E  0012               	return		;funcret
 43647   00C540                     __end_of_APP_testMode:
 43648                           	callstack 0
 43649                           
 43650 ;; *************** function _isrLow *****************
 43651 ;; Defined at:
 43652 ;;		line 1331 in file "../../VLCBlib_PIC/vlcb.c"
 43653 ;; Parameters:    Size  Location     Type
 43654 ;;		None
 43655 ;; Auto vars:     Size  Location     Type
 43656 ;;		None
 43657 ;; Return value:  Size  Location     Type
 43658 ;;                  1    wreg      void 
 43659 ;; Registers used:
 43660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43661 ;; Tracked objects:
 43662 ;;		On entry : 0/0
 43663 ;;		On exit  : 0/0
 43664 ;;		Unchanged: 0/0
 43665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43668 ;;      Temps:          0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43669 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43670 ;;Total ram usage:       15 bytes
 43671 ;; Hardware stack levels used: 1
 43672 ;; Hardware stack levels required when called: 11
 43673 ;; This function calls:
 43674 ;;		_lowIsr
 43675 ;; This function is called by:
 43676 ;;		Interrupt level 1
 43677 ;; This function uses a non-reentrant model
 43678 ;;
 43679                           
 43680 ;; *************** function _isrHigh *****************
 43681 ;; Defined at:
 43682 ;;		line 1324 in file "../../VLCBlib_PIC/vlcb.c"
 43683 ;; Parameters:    Size  Location     Type
 43684 ;;		None
 43685 ;; Auto vars:     Size  Location     Type
 43686 ;;		None
 43687 ;; Return value:  Size  Location     Type
 43688 ;;                  1    wreg      void 
 43689 ;; Registers used:
 43690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43691 ;; Tracked objects:
 43692 ;;		On entry : 0/0
 43693 ;;		On exit  : 0/0
 43694 ;;		Unchanged: 0/0
 43695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43698 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43699 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43700 ;;Total ram usage:       12 bytes
 43701 ;; Hardware stack levels used: 1
 43702 ;; Hardware stack levels required when called: 5
 43703 ;; This function calls:
 43704 ;;		_highIsr
 43705 ;; This function is called by:
 43706 ;;		Interrupt level 2
 43707 ;; This function uses a non-reentrant model
 43708 ;;
 43709                           
 43710                           	psect	mainSec
 43711   008366                     __pmainSec:
 43712                           	callstack 0
 43713   008366                     _isrLow:
 43714                           	callstack 2
 43715                           
 43716                           ;incstack = 0
 43717   008366  8052               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 43718   008368  CFD8 F07E          	movff	status,??_isrLow
 43719   00836C  CFE8 F07F          	movff	wreg,??_isrLow+1
 43720   008370  CFE0 F080          	movff	bsr,??_isrLow+2
 43721   008374  CFFA F081          	movff	pclath,??_isrLow+3
 43722   008378  CFFB F082          	movff	pclatu,??_isrLow+4
 43723   00837C  CFE1 F083          	movff	fsr1l,??_isrLow+5
 43724   008380  CFE2 F084          	movff	fsr1h,??_isrLow+6
 43725   008384  CFD9 F085          	movff	fsr2l,??_isrLow+7
 43726   008388  CFDA F086          	movff	fsr2h,??_isrLow+8
 43727   00838C  CFF3 F087          	movff	prodl,??_isrLow+9
 43728   008390  CFF4 F088          	movff	prodh,??_isrLow+10
 43729   008394  CFF6 F089          	movff	tblptrl,??_isrLow+11
 43730   008398  CFF7 F08A          	movff	tblptrh,??_isrLow+12
 43731   00839C  CFF8 F08B          	movff	tblptru,??_isrLow+13
 43732   0083A0  CFF5 F08C          	movff	tablat,??_isrLow+14
 43733   0083A4                     
 43734                           ;../../VLCBlib_PIC/vlcb.c: 1332:     lowIsr();
 43735   0083A4  ECB5  F047         	call	_lowIsr	;wreg free
 43736   0083A8  C08C  FFF5         	movff	??_isrLow+14,tablat
 43737   0083AC  C08B  FFF8         	movff	??_isrLow+13,tblptru
 43738   0083B0  C08A  FFF7         	movff	??_isrLow+12,tblptrh
 43739   0083B4  C089  FFF6         	movff	??_isrLow+11,tblptrl
 43740   0083B8  C088  FFF4         	movff	??_isrLow+10,prodh
 43741   0083BC  C087  FFF3         	movff	??_isrLow+9,prodl
 43742   0083C0  C086  FFDA         	movff	??_isrLow+8,fsr2h
 43743   0083C4  C085  FFD9         	movff	??_isrLow+7,fsr2l
 43744   0083C8  C084  FFE2         	movff	??_isrLow+6,fsr1h
 43745   0083CC  C083  FFE1         	movff	??_isrLow+5,fsr1l
 43746   0083D0  C082  FFFB         	movff	??_isrLow+4,pclatu
 43747   0083D4  C081  FFFA         	movff	??_isrLow+3,pclath
 43748   0083D8  C080  FFE0         	movff	??_isrLow+2,bsr
 43749   0083DC  C07F  FFE8         	movff	??_isrLow+1,wreg
 43750   0083E0  C07E  FFD8         	movff	??_isrLow,status
 43751   0083E4  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 43752   0083E6  0010               	retfie	
 43753   0083E8                     __end_of_isrLow:
 43754                           	callstack 0
 43755   0083E8                     _isrHigh:
 43756                           	callstack 2
 43757                           
 43758                           ;incstack = 0
 43759   0083E8  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 43760   0083EA  CFFA F01F          	movff	pclath,??_isrHigh
 43761   0083EE  CFFB F020          	movff	pclatu,??_isrHigh+1
 43762   0083F2  CFE1 F021          	movff	fsr1l,??_isrHigh+2
 43763   0083F6  CFE2 F022          	movff	fsr1h,??_isrHigh+3
 43764   0083FA  CFD9 F023          	movff	fsr2l,??_isrHigh+4
 43765   0083FE  CFDA F024          	movff	fsr2h,??_isrHigh+5
 43766   008402  CFF3 F025          	movff	prodl,??_isrHigh+6
 43767   008406  CFF4 F026          	movff	prodh,??_isrHigh+7
 43768   00840A  CFF6 F027          	movff	tblptrl,??_isrHigh+8
 43769   00840E  CFF7 F028          	movff	tblptrh,??_isrHigh+9
 43770   008412  CFF8 F029          	movff	tblptru,??_isrHigh+10
 43771   008416  CFF5 F02A          	movff	tablat,??_isrHigh+11
 43772   00841A                     
 43773                           ;../../VLCBlib_PIC/vlcb.c: 1325:     highIsr();
 43774   00841A  EC1C  F048         	call	_highIsr	;wreg free
 43775   00841E  C02A  FFF5         	movff	??_isrHigh+11,tablat
 43776   008422  C029  FFF8         	movff	??_isrHigh+10,tblptru
 43777   008426  C028  FFF7         	movff	??_isrHigh+9,tblptrh
 43778   00842A  C027  FFF6         	movff	??_isrHigh+8,tblptrl
 43779   00842E  C026  FFF4         	movff	??_isrHigh+7,prodh
 43780   008432  C025  FFF3         	movff	??_isrHigh+6,prodl
 43781   008436  C024  FFDA         	movff	??_isrHigh+5,fsr2h
 43782   00843A  C023  FFD9         	movff	??_isrHigh+4,fsr2l
 43783   00843E  C022  FFE2         	movff	??_isrHigh+3,fsr1h
 43784   008442  C021  FFE1         	movff	??_isrHigh+2,fsr1l
 43785   008446  C020  FFFB         	movff	??_isrHigh+1,pclatu
 43786   00844A  C01F  FFFA         	movff	??_isrHigh,pclath
 43787   00844E  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 43788   008450  0011               	retfie		f
 43789   008452                     __end_of_isrHigh:
 43790                           	callstack 0
 43791                           
 43792                           	psect	intcodelo
 43793   000818                     __pintcodelo:
 43794                           	callstack 2
 43795   000818  EFB3  F041         	goto	_isrLow
 43796                           
 43797 ;; *************** function _lowIsr *****************
 43798 ;; Defined at:
 43799 ;;		line 1076 in file "../../VLCBlib_PIC/vlcb.c"
 43800 ;; Parameters:    Size  Location     Type
 43801 ;;		None
 43802 ;; Auto vars:     Size  Location     Type
 43803 ;;  i               1   29[BANK0 ] unsigned char 
 43804 ;; Return value:  Size  Location     Type
 43805 ;;                  1    wreg      void 
 43806 ;; Registers used:
 43807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 43808 ;; Tracked objects:
 43809 ;;		On entry : 0/0
 43810 ;;		On exit  : 0/0
 43811 ;;		Unchanged: 0/0
 43812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43816 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43817 ;;Total ram usage:        5 bytes
 43818 ;; Hardware stack levels used: 1
 43819 ;; Hardware stack levels required when called: 10
 43820 ;; This function calls:
 43821 ;;		NULL
 43822 ;;		_APP_lowIsr
 43823 ;;		_canIsr
 43824 ;;		_mnsLowIsr
 43825 ;; This function is called by:
 43826 ;;		_isrLow
 43827 ;; This function uses a non-reentrant model
 43828 ;;
 43829                           
 43830                           	psect	text197
 43831   008F6A                     __ptext197:
 43832                           	callstack 0
 43833   008F6A                     _lowIsr:
 43834                           	callstack 2
 43835                           
 43836                           ;../../VLCBlib_PIC/vlcb.c: 1077:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1079:     for 
      +                          (i=0; i<9; i++) {
 43837                           
 43838                           ;incstack = 0
 43839   008F6A  0E00               	movlw	0
 43840   008F6C  0100               	movlb	0	; () banked
 43841   008F6E  6F7D               	movwf	lowIsr@i& (0+255),b
 43842   008F70                     i1l24790:
 43843                           
 43844                           ; BSR set to: 0
 43845                           ;../../VLCBlib_PIC/vlcb.c: 1080:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->lowIsr != ((void*)0))) {
 43846   008F70  517D               	movf	lowIsr@i& (0+255),w,b
 43847   008F72  0D02               	mullw	2
 43848   008F74  0E75               	movlw	low _services
 43849   008F76  24F3               	addwf	243,w,c
 43850   008F78  6EF6               	movwf	tblptrl,c
 43851   008F7A  0EEE               	movlw	high _services
 43852   008F7C  20F4               	addwfc	244,w,c
 43853   008F7E  6EF7               	movwf	tblptrh,c
 43854   008F80                     	if	1	;There are 3 active tblptr bytes
 43855   008F80  6AF8               	clrf	tblptru,c
 43856   008F82  0E00               	movlw	low (__mediumconst shr (0+16))
 43857   008F84  22F8               	addwfc	tblptru,f,c
 43858   008F86                     	endif
 43859   008F86  0009               	tblrd		*+
 43860   008F88  50F5               	movf	tablat,w,c
 43861   008F8A  0009               	tblrd		*+
 43862   008F8C  10F5               	iorwf	tablat,w,c
 43863   008F8E  B4D8               	btfsc	status,2,c
 43864   008F90  D04B               	goto	i1u2669_29
 43865                           
 43866                           ; BSR set to: 0
 43867   008F92  517D               	movf	lowIsr@i& (0+255),w,b
 43868   008F94  0D02               	mullw	2
 43869   008F96  0E75               	movlw	low _services
 43870   008F98  24F3               	addwf	243,w,c
 43871   008F9A  6EF6               	movwf	tblptrl,c
 43872   008F9C  0EEE               	movlw	high _services
 43873   008F9E  20F4               	addwfc	244,w,c
 43874   008FA0  6EF7               	movwf	tblptrh,c
 43875   008FA2                     	if	1	;There are 3 active tblptr bytes
 43876   008FA2  6AF8               	clrf	tblptru,c
 43877   008FA4  0E00               	movlw	low (__mediumconst shr (0+16))
 43878   008FA6  22F8               	addwfc	tblptru,f,c
 43879   008FA8                     	endif
 43880   008FA8  0009               	tblrd		*+
 43881   008FAA  CFF5 F079          	movff	tablat,??_lowIsr
 43882   008FAE  0009               	tblrd		*+
 43883   008FB0  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43884   008FB4  0E0C               	movlw	12
 43885   008FB6  2779               	addwf	??_lowIsr& (0+255),f,b
 43886   008FB8  0E00               	movlw	0
 43887   008FBA  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43888   008FBC  C079  FFF6         	movff	??_lowIsr,tblptrl
 43889   008FC0  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43890   008FC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43891   008FC4  6AF8               	clrf	tblptru,c
 43892   008FC6                     	endif
 43893   008FC6                     	if	0	;tblptru may be non-zero
 43894   008FC6                     	endif
 43895   008FC6  0009               	tblrd		*+
 43896   008FC8  50F5               	movf	tablat,w,c
 43897   008FCA  0009               	tblrd		*+
 43898   008FCC  10F5               	iorwf	tablat,w,c
 43899   008FCE  B4D8               	btfsc	status,2,c
 43900   008FD0  D02B               	goto	i1u2669_29
 43901                           
 43902                           ; BSR set to: 0
 43903                           ;../../VLCBlib_PIC/vlcb.c: 1081:             services[i]->lowIsr();
 43904   008FD2  517D               	movf	lowIsr@i& (0+255),w,b
 43905   008FD4  0D02               	mullw	2
 43906   008FD6  0E75               	movlw	low _services
 43907   008FD8  24F3               	addwf	243,w,c
 43908   008FDA  6EF6               	movwf	tblptrl,c
 43909   008FDC  0EEE               	movlw	high _services
 43910   008FDE  20F4               	addwfc	244,w,c
 43911   008FE0  6EF7               	movwf	tblptrh,c
 43912   008FE2                     	if	1	;There are 3 active tblptr bytes
 43913   008FE2  6AF8               	clrf	tblptru,c
 43914   008FE4  0E00               	movlw	low (__mediumconst shr (0+16))
 43915   008FE6  22F8               	addwfc	tblptru,f,c
 43916   008FE8                     	endif
 43917   008FE8  0009               	tblrd		*+
 43918   008FEA  CFF5 F079          	movff	tablat,??_lowIsr
 43919   008FEE  0009               	tblrd		*+
 43920   008FF0  CFF5 F07A          	movff	tablat,??_lowIsr+1
 43921   008FF4  0E0C               	movlw	12
 43922   008FF6  2779               	addwf	??_lowIsr& (0+255),f,b
 43923   008FF8  0E00               	movlw	0
 43924   008FFA  237A               	addwfc	(??_lowIsr+1)& (0+255),f,b
 43925   008FFC  C079  FFF6         	movff	??_lowIsr,tblptrl
 43926   009000  C07A  FFF7         	movff	??_lowIsr+1,tblptrh
 43927   009004                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 43928   009004  6AF8               	clrf	tblptru,c
 43929   009006                     	endif
 43930   009006                     	if	0	;tblptru may be non-zero
 43931   009006                     	endif
 43932   009006  0009               	tblrd		*+
 43933   009008  CFF5 F07B          	movff	tablat,??_lowIsr+2
 43934   00900C  0009               	tblrd		*+
 43935   00900E  CFF5 F07C          	movff	tablat,??_lowIsr+3
 43936   009012  D801               	call	i1u2669_28
 43937   009014  D009               	goto	i1u2669_29
 43938   009016                     i1u2669_28:
 43939   009016  0005               	push	
 43940   009018  6EFA               	movwf	pclath,c
 43941   00901A  517B               	movf	(??_lowIsr+2)& (0+255),w,b
 43942   00901C  6EFD               	movwf	tosl,c
 43943   00901E  517C               	movf	(??_lowIsr+3)& (0+255),w,b
 43944   009020  6EFE               	movwf	tosh,c
 43945   009022  6AFF               	clrf	tosu,c
 43946   009024  50FA               	movf	pclath,w,c
 43947   009026  0012               	return		;indir
 43948   009028                     i1u2669_29:
 43949                           
 43950                           ;../../VLCBlib_PIC/vlcb.c: 1083:     }
 43951   009028  0100               	movlb	0	; () banked
 43952   00902A  2B7D               	incf	lowIsr@i& (0+255),f,b
 43953                           
 43954                           ; BSR set to: 0
 43955   00902C  0E08               	movlw	8
 43956   00902E  657D               	cpfsgt	lowIsr@i& (0+255),b
 43957   009030  D79F               	goto	i1l24790
 43958                           
 43959                           ; BSR set to: 0
 43960                           ;../../VLCBlib_PIC/vlcb.c: 1084:     APP_lowIsr();
 43961   009032  ECA0  F062         	call	_APP_lowIsr	;wreg free
 43962   009036  0012               	return		;funcret
 43963   009038                     __end_of_lowIsr:
 43964                           	callstack 0
 43965                           
 43966 ;; *************** function _canIsr *****************
 43967 ;; Defined at:
 43968 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 43969 ;; Parameters:    Size  Location     Type
 43970 ;;		None
 43971 ;; Auto vars:     Size  Location     Type
 43972 ;;		None
 43973 ;; Return value:  Size  Location     Type
 43974 ;;                  1    wreg      void 
 43975 ;; Registers used:
 43976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 43977 ;; Tracked objects:
 43978 ;;		On entry : 0/0
 43979 ;;		On exit  : 0/0
 43980 ;;		Unchanged: 0/0
 43981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 43982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 43986 ;;Total ram usage:        0 bytes
 43987 ;; Hardware stack levels used: 1
 43988 ;; Hardware stack levels required when called: 9
 43989 ;; This function calls:
 43990 ;;		_canFillRxFifo
 43991 ;;		_canTxError
 43992 ;;		_checkCANTimeout
 43993 ;;		_checkTxFifo
 43994 ;; This function is called by:
 43995 ;;		_highIsr
 43996 ;;		_lowIsr
 43997 ;; This function uses a non-reentrant model
 43998 ;;
 43999                           
 44000                           	psect	text198
 44001   00C332                     __ptext198:
 44002                           	callstack 0
 44003   00C332                     _canIsr:
 44004                           	callstack 0
 44005                           
 44006                           ;Skip over the trampoline to the duplicate function for level 2
 44007   00C332  A252               	btfss	btemp,1,c
 44008   00C334  D002               	goto	_canIsr$intlevel1
 44009   00C336  EF17  F062         	goto	i2_canIsr
 44010   00C33A                     _canIsr$intlevel1:
 44011                           	callstack 2
 44012                           
 44013                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 44014                           
 44015                           ;incstack = 0
 44016   00C33A  B077               	btfsc	119,0,c	;volatile
 44017                           
 44018                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 44019   00C33C  EC38  F039         	call	_canFillRxFifo	;wreg free
 44020                           
 44021                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 44022   00C340  BA77               	btfsc	119,5,c	;volatile
 44023                           
 44024                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 44025   00C342  EC95  F058         	call	_canTxError	;wreg free
 44026                           
 44027                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 44028   00C346  B877               	btfsc	119,4,c	;volatile
 44029                           
 44030                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 44031   00C348  EC23  F029         	call	_checkTxFifo	;wreg free
 44032                           
 44033                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 44034                           
 44035                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 44036   00C34C  EC44  F05B         	call	_checkCANTimeout	;wreg free
 44037   00C350  0012               	return		;funcret
 44038   00C352                     __end_of_canIsr:
 44039                           	callstack 0
 44040                           
 44041 ;; *************** function _mnsLowIsr *****************
 44042 ;; Defined at:
 44043 ;;		line 781 in file "../../VLCBlib_PIC/mns.c"
 44044 ;; Parameters:    Size  Location     Type
 44045 ;;		None
 44046 ;; Auto vars:     Size  Location     Type
 44047 ;;		None
 44048 ;; Return value:  Size  Location     Type
 44049 ;;                  1    wreg      void 
 44050 ;; Registers used:
 44051 ;;		wreg, status,2, status,0
 44052 ;; Tracked objects:
 44053 ;;		On entry : 0/0
 44054 ;;		On exit  : 0/0
 44055 ;;		Unchanged: 0/0
 44056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44061 ;;Total ram usage:        0 bytes
 44062 ;; Hardware stack levels used: 1
 44063 ;; Hardware stack levels required when called: 6
 44064 ;; This function calls:
 44065 ;;		Nothing
 44066 ;; This function is called by:
 44067 ;;		_lowIsr
 44068 ;; This function uses a non-reentrant model
 44069 ;;
 44070                           
 44071                           	psect	text199
 44072   00C470                     __ptext199:
 44073                           	callstack 0
 44074   00C470                     _mnsLowIsr:
 44075                           	callstack 5
 44076                           
 44077                           ;../../VLCBlib_PIC/mns.c: 784:     if(INTCONbits.TMR0IF) {
 44078                           
 44079                           ;incstack = 0
 44080   00C470  A4F2               	btfss	242,2,c	;volatile
 44081   00C472  0012               	return	
 44082                           
 44083                           ;../../VLCBlib_PIC/mns.c: 786:         INTCONbits.TMR0IF = 0;
 44084   00C474  94F2               	bcf	242,2,c	;volatile
 44085                           
 44086                           ;../../VLCBlib_PIC/mns.c: 787:         timerExtension1++;
 44087   00C476  0100               	movlb	0	; () banked
 44088   00C478  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 44089                           
 44090                           ; BSR set to: 0
 44091                           ;../../VLCBlib_PIC/mns.c: 788:         if(timerExtension1 == 0) {
 44092   00C47A  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44093   00C47C  A4D8               	btfss	status,2,c
 44094   00C47E  0012               	return	
 44095                           
 44096                           ; BSR set to: 0
 44097                           ;../../VLCBlib_PIC/mns.c: 789:             timerExtension2++;
 44098   00C480  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 44099   00C482  0012               	return		;funcret
 44100   00C484                     __end_of_mnsLowIsr:
 44101                           	callstack 0
 44102                           
 44103 ;; *************** function _checkCANTimeout *****************
 44104 ;; Defined at:
 44105 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 44106 ;; Parameters:    Size  Location     Type
 44107 ;;		None
 44108 ;; Auto vars:     Size  Location     Type
 44109 ;;		None
 44110 ;; Return value:  Size  Location     Type
 44111 ;;                  1    wreg      void 
 44112 ;; Registers used:
 44113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44114 ;; Tracked objects:
 44115 ;;		On entry : 0/0
 44116 ;;		On exit  : 0/0
 44117 ;;		Unchanged: 0/0
 44118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44121 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44122 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44123 ;;Total ram usage:        4 bytes
 44124 ;; Hardware stack levels used: 1
 44125 ;; Hardware stack levels required when called: 8
 44126 ;; This function calls:
 44127 ;;		_checkTxFifo
 44128 ;;		i1_tickGet
 44129 ;;		i1_updateModuleErrorStatus
 44130 ;; This function is called by:
 44131 ;;		_canIsr
 44132 ;; This function uses a non-reentrant model
 44133 ;;
 44134                           
 44135                           	psect	text200
 44136   00B688                     __ptext200:
 44137                           	callstack 0
 44138   00B688                     _checkCANTimeout:
 44139                           	callstack 2
 44140                           
 44141                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 44142                           
 44143                           ;incstack = 0
 44144   00B688  502F               	movf	_canTransmitTimeout^0,w,c
 44145   00B68A  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 44146   00B68C  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 44147   00B68E  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 44148   00B690  B4D8               	btfsc	status,2,c
 44149   00B692  0012               	return	
 44150                           
 44151                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 44152   00B694  ECC3  F05A         	call	i1_tickGet	;wreg free
 44153   00B698  502F               	movf	_canTransmitTimeout^0,w,c
 44154   00B69A  0100               	movlb	0	; () banked
 44155   00B69C  5D60               	subwf	?i1_tickGet& (0+255),w,b
 44156   00B69E  6F75               	movwf	??_checkCANTimeout& (0+255),b
 44157   00B6A0  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 44158   00B6A2  5961               	subwfb	(?i1_tickGet+1)& (0+255),w,b
 44159   00B6A4  6F76               	movwf	(??_checkCANTimeout+1)& (0+255),b
 44160   00B6A6  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 44161   00B6A8  5962               	subwfb	(?i1_tickGet+2)& (0+255),w,b
 44162   00B6AA  6F77               	movwf	(??_checkCANTimeout+2)& (0+255),b
 44163   00B6AC  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 44164   00B6AE  5963               	subwfb	(?i1_tickGet+3)& (0+255),w,b
 44165   00B6B0  6F78               	movwf	(??_checkCANTimeout+3)& (0+255),b
 44166   00B6B2  5178               	movf	(??_checkCANTimeout+3)& (0+255),w,b
 44167   00B6B4  1177               	iorwf	(??_checkCANTimeout+2)& (0+255),w,b
 44168   00B6B6  E106               	bnz	i1u2326_20
 44169   00B6B8  0E25               	movlw	37
 44170   00B6BA  5D75               	subwf	??_checkCANTimeout& (0+255),w,b
 44171   00B6BC  0EF4               	movlw	244
 44172   00B6BE  5976               	subwfb	(??_checkCANTimeout+1)& (0+255),w,b
 44173   00B6C0  A0D8               	btfss	status,0,c
 44174   00B6C2  0012               	return	
 44175   00B6C4                     i1u2326_20:
 44176                           
 44177                           ; BSR set to: 0
 44178                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 44179   00B6C4  0E01               	movlw	1
 44180   00B6C6  6FC2               	movwf	_canTransmitFailed& (0+255),b
 44181                           
 44182                           ; BSR set to: 0
 44183                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 44184   00B6C8  010F               	movlb	15	; () banked
 44185   00B6CA  9720               	bcf	32,3,b	;volatile
 44186                           
 44187                           ; BSR set to: 15
 44188                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 44189   00B6CC  EC23  F029         	call	_checkTxFifo	;wreg free
 44190                           
 44191                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 44192   00B6D0  0101               	movlb	1	; () banked
 44193   00B6D2  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44194   00B6D4  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 44195                           
 44196                           ; BSR set to: 1
 44197                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 44198   00B6D6  EC68  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44199   00B6DA  0012               	return		;funcret
 44200   00B6DC                     __end_of_checkCANTimeout:
 44201                           	callstack 0
 44202                           
 44203 ;; *************** function _canTxError *****************
 44204 ;; Defined at:
 44205 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 44206 ;; Parameters:    Size  Location     Type
 44207 ;;		None
 44208 ;; Auto vars:     Size  Location     Type
 44209 ;;		None
 44210 ;; Return value:  Size  Location     Type
 44211 ;;                  1    wreg      void 
 44212 ;; Registers used:
 44213 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44214 ;; Tracked objects:
 44215 ;;		On entry : 0/0
 44216 ;;		On exit  : 0/0
 44217 ;;		Unchanged: 0/0
 44218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44223 ;;Total ram usage:        0 bytes
 44224 ;; Hardware stack levels used: 1
 44225 ;; Hardware stack levels required when called: 8
 44226 ;; This function calls:
 44227 ;;		_checkTxFifo
 44228 ;;		i1_updateModuleErrorStatus
 44229 ;; This function is called by:
 44230 ;;		_canIsr
 44231 ;; This function uses a non-reentrant model
 44232 ;;
 44233                           
 44234                           	psect	text201
 44235   00B12A                     __ptext201:
 44236                           	callstack 0
 44237   00B12A                     _canTxError:
 44238                           	callstack 2
 44239                           
 44240                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 44241                           
 44242                           ;incstack = 0
 44243   00B12A  010F               	movlb	15	; () banked
 44244   00B12C  AB20               	btfss	32,5,b	;volatile
 44245   00B12E  D012               	goto	i1l22174
 44246                           
 44247                           ; BSR set to: 15
 44248                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 44249   00B130  0E01               	movlw	1
 44250   00B132  0100               	movlb	0	; () banked
 44251   00B134  6FC2               	movwf	_canTransmitFailed& (0+255),b
 44252                           
 44253                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 44254   00B136  0E00               	movlw	0
 44255   00B138  6E2F               	movwf	_canTransmitTimeout^0,c
 44256   00B13A  0E00               	movlw	0
 44257   00B13C  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44258   00B13E  0E00               	movlw	0
 44259   00B140  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44260   00B142  0E00               	movlw	0
 44261   00B144  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44262                           
 44263                           ; BSR set to: 0
 44264                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 44265   00B146  010F               	movlb	15	; () banked
 44266   00B148  9720               	bcf	32,3,b	;volatile
 44267                           
 44268                           ; BSR set to: 15
 44269                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 44270   00B14A  0101               	movlb	1	; () banked
 44271   00B14C  4B7F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 44272   00B14E  2B80               	incf	(_canDiagnostics+25)& (0+255),f,b
 44273                           
 44274                           ; BSR set to: 1
 44275                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 44276   00B150  EC68  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44277   00B154                     i1l22174:
 44278                           
 44279                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 44280   00B154  010F               	movlb	15	; () banked
 44281   00B156  A920               	btfss	32,4,b	;volatile
 44282   00B158  D012               	goto	i1l22184
 44283                           
 44284                           ; BSR set to: 15
 44285                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 44286   00B15A  0E01               	movlw	1
 44287   00B15C  0100               	movlb	0	; () banked
 44288   00B15E  6FC2               	movwf	_canTransmitFailed& (0+255),b
 44289                           
 44290                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 44291   00B160  0E00               	movlw	0
 44292   00B162  6E2F               	movwf	_canTransmitTimeout^0,c
 44293   00B164  0E00               	movlw	0
 44294   00B166  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44295   00B168  0E00               	movlw	0
 44296   00B16A  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44297   00B16C  0E00               	movlw	0
 44298   00B16E  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44299                           
 44300                           ; BSR set to: 0
 44301                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 44302   00B170  010F               	movlb	15	; () banked
 44303   00B172  9720               	bcf	32,3,b	;volatile
 44304                           
 44305                           ; BSR set to: 15
 44306                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 44307   00B174  0101               	movlb	1	; () banked
 44308   00B176  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 44309   00B178  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 44310                           
 44311                           ; BSR set to: 1
 44312                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 44313   00B17A  EC68  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44314   00B17E                     i1l22184:
 44315                           
 44316                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 44317   00B17E  0100               	movlb	0	; () banked
 44318   00B180  51C2               	movf	_canTransmitFailed& (0+255),w,b
 44319   00B182  A4D8               	btfss	status,2,c
 44320                           
 44321                           ; BSR set to: 0
 44322                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 44323   00B184  EC23  F029         	call	_checkTxFifo	;wreg free
 44324                           
 44325                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 44326   00B188  9A77               	bcf	119,5,c	;volatile
 44327   00B18A  0012               	return		;funcret
 44328   00B18C                     __end_of_canTxError:
 44329                           	callstack 0
 44330                           
 44331 ;; *************** function _checkTxFifo *****************
 44332 ;; Defined at:
 44333 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 44334 ;; Parameters:    Size  Location     Type
 44335 ;;		None
 44336 ;; Auto vars:     Size  Location     Type
 44337 ;;  mp              2   19[BANK0 ] PTR struct Message
 44338 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44339 ;;  m               2   17[BANK0 ] PTR struct Message
 44340 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 44341 ;; Return value:  Size  Location     Type
 44342 ;;                  1    wreg      void 
 44343 ;; Registers used:
 44344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 44345 ;; Tracked objects:
 44346 ;;		On entry : 0/0
 44347 ;;		On exit  : 0/0
 44348 ;;		Unchanged: 0/0
 44349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44351 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44352 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44353 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44354 ;;Total ram usage:        9 bytes
 44355 ;; Hardware stack levels used: 1
 44356 ;; Hardware stack levels required when called: 7
 44357 ;; This function calls:
 44358 ;;		i1_getNextWriteMessage
 44359 ;;		i1_isEvent
 44360 ;;		i1_pop
 44361 ;;		i1_tickGet
 44362 ;;		i1_updateModuleErrorStatus
 44363 ;; This function is called by:
 44364 ;;		_canIsr
 44365 ;;		_checkCANTimeout
 44366 ;;		_canTxError
 44367 ;; This function uses a non-reentrant model
 44368 ;;
 44369                           
 44370                           	psect	text202
 44371   005246                     __ptext202:
 44372                           	callstack 0
 44373   005246                     _checkTxFifo:
 44374                           	callstack 3
 44375                           
 44376                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 44377                           
 44378                           ;incstack = 0
 44379   005246  9877               	bcf	119,4,c	;volatile
 44380                           
 44381                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 44382   005248  010F               	movlb	15	; () banked
 44383   00524A  B720               	btfsc	32,3,b	;volatile
 44384   00524C  D158               	goto	i1l2510
 44385                           
 44386                           ; BSR set to: 15
 44387                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 44388   00524E  0E48               	movlw	low _txQueue
 44389   005250  0100               	movlb	0	; () banked
 44390   005252  6F60               	movwf	i1pop@q& (0+255),b
 44391   005254  EC0D  F04E         	call	i1_pop	;wreg free
 44392   005258  C060  F073         	movff	?i1_pop,checkTxFifo@mp
 44393   00525C  C061  F074         	movff	?i1_pop+1,checkTxFifo@mp+1
 44394                           
 44395                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 44396   005260  0100               	movlb	0	; () banked
 44397   005262  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44398   005264  1174               	iorwf	(checkTxFifo@mp+1)& (0+255),w,b
 44399   005266  B4D8               	btfsc	status,2,c
 44400   005268  D13C               	goto	i1l21046
 44401                           
 44402                           ; BSR set to: 0
 44403                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 44404   00526A  EE20 F001          	lfsr	2,1
 44405   00526E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44406   005270  26D9               	addwf	fsr2l,f,c
 44407   005272  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44408   005274  22DA               	addwfc	fsr2h,f,c
 44409   005276  50DF               	movf	indf2,w,c
 44410   005278  6F6C               	movwf	??_checkTxFifo& (0+255),b
 44411   00527A  6B6D               	clrf	(??_checkTxFifo+1)& (0+255),b
 44412   00527C  0E35               	movlw	low _priorities
 44413   00527E  256C               	addwf	??_checkTxFifo& (0+255),w,b
 44414   005280  6EF6               	movwf	tblptrl,c
 44415   005282  0EED               	movlw	high _priorities
 44416   005284  216D               	addwfc	(??_checkTxFifo+1)& (0+255),w,b
 44417   005286  6EF7               	movwf	tblptrh,c
 44418   005288                     	if	1	;There are 3 active tblptr bytes
 44419   005288  6AF8               	clrf	tblptru,c
 44420   00528A  0E00               	movlw	low (__mediumconst shr (0+16))
 44421   00528C  22F8               	addwfc	tblptru,f,c
 44422   00528E                     	endif
 44423   00528E  0008               	tblrd		*
 44424   005290  50F5               	movf	tablat,w,c
 44425   005292  6F6E               	movwf	(??_checkTxFifo+2)& (0+255),b
 44426   005294  6B6F               	clrf	(??_checkTxFifo+3)& (0+255),b
 44427   005296  0E87               	movlw	low _canPri
 44428   005298  256E               	addwf	(??_checkTxFifo+2)& (0+255),w,b
 44429   00529A  6EF6               	movwf	tblptrl,c
 44430   00529C  0EEE               	movlw	high _canPri
 44431   00529E  216F               	addwfc	(??_checkTxFifo+3)& (0+255),w,b
 44432   0052A0  6EF7               	movwf	tblptrh,c
 44433   0052A2                     	if	1	;There are 3 active tblptr bytes
 44434   0052A2  6AF8               	clrf	tblptru,c
 44435   0052A4  0E00               	movlw	low (__mediumconst shr (0+16))
 44436   0052A6  22F8               	addwfc	tblptru,f,c
 44437   0052A8                     	endif
 44438   0052A8  0008               	tblrd		*
 44439   0052AA  CFF5 F070          	movff	tablat,??_checkTxFifo+4
 44440   0052AE  39C3               	swapf	_canId& (0+255),w,b
 44441   0052B0  46E8               	rlncf	wreg,f,c
 44442   0052B2  0B1F               	andlw	31
 44443   0052B4  0B0F               	andlw	15
 44444   0052B6  1170               	iorwf	(??_checkTxFifo+4)& (0+255),w,b
 44445   0052B8  010F               	movlb	15	; () banked
 44446   0052BA  6F21               	movwf	33,b	;volatile
 44447                           
 44448                           ; BSR set to: 15
 44449                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 44450   0052BC  C0C3  F06C         	movff	_canId,??_checkTxFifo
 44451   0052C0  0E07               	movlw	7
 44452   0052C2  0100               	movlb	0	; () banked
 44453   0052C4  176C               	andwf	??_checkTxFifo& (0+255),f,b
 44454   0052C6  0E05               	movlw	5
 44455   0052C8  6F6D               	movwf	(??_checkTxFifo+1)& (0+255),b
 44456   0052CA                     i1u2159_25:
 44457   0052CA  90D8               	bcf	status,0,c
 44458   0052CC  376C               	rlcf	??_checkTxFifo& (0+255),f,b
 44459   0052CE  2F6D               	decfsz	(??_checkTxFifo+1)& (0+255),f,b
 44460   0052D0  D7FC               	goto	i1u2159_25
 44461   0052D2  516C               	movf	??_checkTxFifo& (0+255),w,b
 44462   0052D4  010F               	movlb	15	; () banked
 44463   0052D6  6F22               	movwf	34,b	;volatile
 44464                           
 44465                           ; BSR set to: 15
 44466                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 44467   0052D8  0100               	movlb	0	; () banked
 44468   0052DA  EE20 F001          	lfsr	2,1
 44469   0052DE  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44470   0052E0  26D9               	addwf	fsr2l,f,c
 44471   0052E2  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44472   0052E4  22DA               	addwfc	fsr2h,f,c
 44473   0052E6  50DF               	movf	indf2,w,c
 44474   0052E8  010F               	movlb	15	; () banked
 44475   0052EA  6F26               	movwf	38,b	;volatile
 44476                           
 44477                           ; BSR set to: 15
 44478                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 44479   0052EC  0100               	movlb	0	; () banked
 44480   0052EE  EE20 F002          	lfsr	2,2
 44481   0052F2  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44482   0052F4  26D9               	addwf	fsr2l,f,c
 44483   0052F6  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44484   0052F8  22DA               	addwfc	fsr2h,f,c
 44485   0052FA  50DF               	movf	indf2,w,c
 44486   0052FC  010F               	movlb	15	; () banked
 44487   0052FE  6F27               	movwf	39,b	;volatile
 44488                           
 44489                           ; BSR set to: 15
 44490                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 44491   005300  0100               	movlb	0	; () banked
 44492   005302  EE20 F003          	lfsr	2,3
 44493   005306  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44494   005308  26D9               	addwf	fsr2l,f,c
 44495   00530A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44496   00530C  22DA               	addwfc	fsr2h,f,c
 44497   00530E  50DF               	movf	indf2,w,c
 44498   005310  010F               	movlb	15	; () banked
 44499   005312  6F28               	movwf	40,b	;volatile
 44500                           
 44501                           ; BSR set to: 15
 44502                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 44503   005314  0100               	movlb	0	; () banked
 44504   005316  EE20 F004          	lfsr	2,4
 44505   00531A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44506   00531C  26D9               	addwf	fsr2l,f,c
 44507   00531E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44508   005320  22DA               	addwfc	fsr2h,f,c
 44509   005322  50DF               	movf	indf2,w,c
 44510   005324  010F               	movlb	15	; () banked
 44511   005326  6F29               	movwf	41,b	;volatile
 44512                           
 44513                           ; BSR set to: 15
 44514                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 44515   005328  0100               	movlb	0	; () banked
 44516   00532A  EE20 F005          	lfsr	2,5
 44517   00532E  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44518   005330  26D9               	addwf	fsr2l,f,c
 44519   005332  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44520   005334  22DA               	addwfc	fsr2h,f,c
 44521   005336  50DF               	movf	indf2,w,c
 44522   005338  010F               	movlb	15	; () banked
 44523   00533A  6F2A               	movwf	42,b	;volatile
 44524                           
 44525                           ; BSR set to: 15
 44526                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 44527   00533C  0100               	movlb	0	; () banked
 44528   00533E  EE20 F006          	lfsr	2,6
 44529   005342  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44530   005344  26D9               	addwf	fsr2l,f,c
 44531   005346  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44532   005348  22DA               	addwfc	fsr2h,f,c
 44533   00534A  50DF               	movf	indf2,w,c
 44534   00534C  010F               	movlb	15	; () banked
 44535   00534E  6F2B               	movwf	43,b	;volatile
 44536                           
 44537                           ; BSR set to: 15
 44538                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 44539   005350  0100               	movlb	0	; () banked
 44540   005352  EE20 F007          	lfsr	2,7
 44541   005356  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44542   005358  26D9               	addwf	fsr2l,f,c
 44543   00535A  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44544   00535C  22DA               	addwfc	fsr2h,f,c
 44545   00535E  50DF               	movf	indf2,w,c
 44546   005360  010F               	movlb	15	; () banked
 44547   005362  6F2C               	movwf	44,b	;volatile
 44548                           
 44549                           ; BSR set to: 15
 44550                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 44551   005364  0100               	movlb	0	; () banked
 44552   005366  EE20 F008          	lfsr	2,8
 44553   00536A  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44554   00536C  26D9               	addwf	fsr2l,f,c
 44555   00536E  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44556   005370  22DA               	addwfc	fsr2h,f,c
 44557   005372  50DF               	movf	indf2,w,c
 44558   005374  010F               	movlb	15	; () banked
 44559   005376  6F2D               	movwf	45,b	;volatile
 44560                           
 44561                           ; BSR set to: 15
 44562                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 44563   005378  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44564   00537C  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44565   005380  50DF               	movf	indf2,w,c
 44566   005382  6F25               	movwf	37,b	;volatile
 44567                           
 44568                           ; BSR set to: 15
 44569                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 44570   005384  ECC3  F05A         	call	i1_tickGet	;wreg free
 44571   005388  C060  F02F         	movff	?i1_tickGet,_canTransmitTimeout
 44572   00538C  C061  F030         	movff	?i1_tickGet+1,_canTransmitTimeout+1
 44573   005390  C062  F031         	movff	?i1_tickGet+2,_canTransmitTimeout+2
 44574   005394  C063  F032         	movff	?i1_tickGet+3,_canTransmitTimeout+3
 44575                           
 44576                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 44577   005398  0E00               	movlw	0
 44578   00539A  0100               	movlb	0	; () banked
 44579   00539C  6FC2               	movwf	_canTransmitFailed& (0+255),b
 44580                           
 44581                           ; BSR set to: 0
 44582                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 44583   00539E  010F               	movlb	15	; () banked
 44584   0053A0  8720               	bsf	32,3,b	;volatile
 44585                           
 44586                           ; BSR set to: 15
 44587                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 44588   0053A2  8876               	bsf	118,4,c	;volatile
 44589                           
 44590                           ; BSR set to: 15
 44591                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 44592   0053A4  0101               	movlb	1	; () banked
 44593   0053A6  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 44594   0053A8  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 44595                           
 44596                           ; BSR set to: 1
 44597                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 44598   0053AA  0100               	movlb	0	; () banked
 44599   0053AC  EE20 F001          	lfsr	2,1
 44600   0053B0  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44601   0053B2  26D9               	addwf	fsr2l,f,c
 44602   0053B4  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44603   0053B6  22DA               	addwfc	fsr2h,f,c
 44604   0053B8  50DF               	movf	indf2,w,c
 44605   0053BA  ECEA  F060         	call	i1_isEvent
 44606   0053BE  0900               	iorlw	0
 44607   0053C0  B4D8               	btfsc	status,2,c
 44608   0053C2  0012               	return	
 44609                           
 44610                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 44611   0053C4  0E4D               	movlw	low _rxQueue
 44612   0053C6  0100               	movlb	0	; () banked
 44613   0053C8  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 44614   0053CA  EC7D  F046         	call	i1_getNextWriteMessage	;wreg free
 44615   0053CE  C060  F071         	movff	?i1_getNextWriteMessage,checkTxFifo@m
 44616   0053D2  C061  F072         	movff	?i1_getNextWriteMessage+1,checkTxFifo@m+1
 44617                           
 44618                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 44619   0053D6  0100               	movlb	0	; () banked
 44620   0053D8  5171               	movf	checkTxFifo@m& (0+255),w,b
 44621   0053DA  1172               	iorwf	(checkTxFifo@m+1)& (0+255),w,b
 44622   0053DC  A4D8               	btfss	status,2,c
 44623   0053DE  D006               	goto	i1l21028
 44624                           
 44625                           ; BSR set to: 0
 44626                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 44627   0053E0  0101               	movlb	1	; () banked
 44628   0053E2  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 44629   0053E4  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 44630                           
 44631                           ; BSR set to: 1
 44632                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 44633   0053E6  EC68  F062         	call	i1_updateModuleErrorStatus	;wreg free
 44634                           
 44635                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 44636   0053EA  0012               	return	
 44637   0053EC                     i1l21028:
 44638                           
 44639                           ; BSR set to: 0
 44640                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 44641   0053EC  EE20 F001          	lfsr	2,1
 44642   0053F0  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44643   0053F2  26D9               	addwf	fsr2l,f,c
 44644   0053F4  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44645   0053F6  22DA               	addwfc	fsr2h,f,c
 44646   0053F8  EE10 F001          	lfsr	1,1
 44647   0053FC  5171               	movf	checkTxFifo@m& (0+255),w,b
 44648   0053FE  26E1               	addwf	fsr1l,f,c
 44649   005400  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44650   005402  22E2               	addwfc	fsr1h,f,c
 44651   005404  CFDF FFE7          	movff	indf2,indf1
 44652                           
 44653                           ; BSR set to: 0
 44654                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 44655   005408  C073  FFD9         	movff	checkTxFifo@mp,fsr2l
 44656   00540C  C074  FFDA         	movff	checkTxFifo@mp+1,fsr2h
 44657   005410  C071  FFE1         	movff	checkTxFifo@m,fsr1l
 44658   005414  C072  FFE2         	movff	checkTxFifo@m+1,fsr1h
 44659   005418  CFDF FFE7          	movff	indf2,indf1
 44660                           
 44661                           ; BSR set to: 0
 44662                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 44663   00541C  EE20 F002          	lfsr	2,2
 44664   005420  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44665   005422  26D9               	addwf	fsr2l,f,c
 44666   005424  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44667   005426  22DA               	addwfc	fsr2h,f,c
 44668   005428  EE10 F002          	lfsr	1,2
 44669   00542C  5171               	movf	checkTxFifo@m& (0+255),w,b
 44670   00542E  26E1               	addwf	fsr1l,f,c
 44671   005430  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44672   005432  22E2               	addwfc	fsr1h,f,c
 44673   005434  CFDF FFE7          	movff	indf2,indf1
 44674                           
 44675                           ; BSR set to: 0
 44676                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 44677   005438  EE20 F003          	lfsr	2,3
 44678   00543C  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44679   00543E  26D9               	addwf	fsr2l,f,c
 44680   005440  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44681   005442  22DA               	addwfc	fsr2h,f,c
 44682   005444  EE10 F003          	lfsr	1,3
 44683   005448  5171               	movf	checkTxFifo@m& (0+255),w,b
 44684   00544A  26E1               	addwf	fsr1l,f,c
 44685   00544C  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44686   00544E  22E2               	addwfc	fsr1h,f,c
 44687   005450  CFDF FFE7          	movff	indf2,indf1
 44688                           
 44689                           ; BSR set to: 0
 44690                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 44691   005454  EE20 F004          	lfsr	2,4
 44692   005458  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44693   00545A  26D9               	addwf	fsr2l,f,c
 44694   00545C  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44695   00545E  22DA               	addwfc	fsr2h,f,c
 44696   005460  EE10 F004          	lfsr	1,4
 44697   005464  5171               	movf	checkTxFifo@m& (0+255),w,b
 44698   005466  26E1               	addwf	fsr1l,f,c
 44699   005468  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44700   00546A  22E2               	addwfc	fsr1h,f,c
 44701   00546C  CFDF FFE7          	movff	indf2,indf1
 44702                           
 44703                           ; BSR set to: 0
 44704                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 44705   005470  EE20 F005          	lfsr	2,5
 44706   005474  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44707   005476  26D9               	addwf	fsr2l,f,c
 44708   005478  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44709   00547A  22DA               	addwfc	fsr2h,f,c
 44710   00547C  EE10 F005          	lfsr	1,5
 44711   005480  5171               	movf	checkTxFifo@m& (0+255),w,b
 44712   005482  26E1               	addwf	fsr1l,f,c
 44713   005484  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44714   005486  22E2               	addwfc	fsr1h,f,c
 44715   005488  CFDF FFE7          	movff	indf2,indf1
 44716                           
 44717                           ; BSR set to: 0
 44718                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 44719   00548C  EE20 F006          	lfsr	2,6
 44720   005490  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44721   005492  26D9               	addwf	fsr2l,f,c
 44722   005494  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44723   005496  22DA               	addwfc	fsr2h,f,c
 44724   005498  EE10 F006          	lfsr	1,6
 44725   00549C  5171               	movf	checkTxFifo@m& (0+255),w,b
 44726   00549E  26E1               	addwf	fsr1l,f,c
 44727   0054A0  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44728   0054A2  22E2               	addwfc	fsr1h,f,c
 44729   0054A4  CFDF FFE7          	movff	indf2,indf1
 44730                           
 44731                           ; BSR set to: 0
 44732                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 44733   0054A8  EE20 F007          	lfsr	2,7
 44734   0054AC  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44735   0054AE  26D9               	addwf	fsr2l,f,c
 44736   0054B0  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44737   0054B2  22DA               	addwfc	fsr2h,f,c
 44738   0054B4  EE10 F007          	lfsr	1,7
 44739   0054B8  5171               	movf	checkTxFifo@m& (0+255),w,b
 44740   0054BA  26E1               	addwf	fsr1l,f,c
 44741   0054BC  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44742   0054BE  22E2               	addwfc	fsr1h,f,c
 44743   0054C0  CFDF FFE7          	movff	indf2,indf1
 44744                           
 44745                           ; BSR set to: 0
 44746                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 44747   0054C4  EE20 F008          	lfsr	2,8
 44748   0054C8  5173               	movf	checkTxFifo@mp& (0+255),w,b
 44749   0054CA  26D9               	addwf	fsr2l,f,c
 44750   0054CC  5174               	movf	(checkTxFifo@mp+1)& (0+255),w,b
 44751   0054CE  22DA               	addwfc	fsr2h,f,c
 44752   0054D0  EE10 F008          	lfsr	1,8
 44753   0054D4  5171               	movf	checkTxFifo@m& (0+255),w,b
 44754   0054D6  26E1               	addwf	fsr1l,f,c
 44755   0054D8  5172               	movf	(checkTxFifo@m+1)& (0+255),w,b
 44756   0054DA  22E2               	addwfc	fsr1h,f,c
 44757   0054DC  CFDF FFE7          	movff	indf2,indf1
 44758   0054E0  0012               	return	
 44759   0054E2                     i1l21046:
 44760                           
 44761                           ; BSR set to: 0
 44762                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 44763   0054E2  0E00               	movlw	0
 44764   0054E4  6E2F               	movwf	_canTransmitTimeout^0,c
 44765   0054E6  0E00               	movlw	0
 44766   0054E8  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 44767   0054EA  0E00               	movlw	0
 44768   0054EC  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 44769   0054EE  0E00               	movlw	0
 44770   0054F0  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 44771                           
 44772                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 44773   0054F2  0E00               	movlw	0
 44774   0054F4  010F               	movlb	15	; () banked
 44775   0054F6  6F20               	movwf	32,b	;volatile
 44776                           
 44777                           ; BSR set to: 15
 44778                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 44779   0054F8  9877               	bcf	119,4,c	;volatile
 44780                           
 44781                           ; BSR set to: 15
 44782                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 44783   0054FA  9876               	bcf	118,4,c	;volatile
 44784   0054FC  0012               	return	
 44785   0054FE                     i1l2510:
 44786                           
 44787                           ; BSR set to: 15
 44788                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 44789   0054FE  9877               	bcf	119,4,c	;volatile
 44790                           
 44791                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 44792   005500  8876               	bsf	118,4,c	;volatile
 44793   005502  0012               	return		;funcret
 44794   005504                     __end_of_checkTxFifo:
 44795                           	callstack 0
 44796                           
 44797 ;; *************** function i1_tickGet *****************
 44798 ;; Defined at:
 44799 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 44800 ;; Parameters:    Size  Location     Type
 44801 ;;		None
 44802 ;; Auto vars:     Size  Location     Type
 44803 ;;  currentTime     4    6[BANK0 ] struct _TickValue
 44804 ;;  IntFlag1        1    5[BANK0 ] unsigned char 
 44805 ;;  IntFlag2        1    4[BANK0 ] unsigned char 
 44806 ;; Return value:  Size  Location     Type
 44807 ;;                  4    0[BANK0 ] unsigned long 
 44808 ;; Registers used:
 44809 ;;		wreg, status,2, status,0
 44810 ;; Tracked objects:
 44811 ;;		On entry : 0/0
 44812 ;;		On exit  : 0/0
 44813 ;;		Unchanged: 0/0
 44814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44815 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44816 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44818 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44819 ;;Total ram usage:       10 bytes
 44820 ;; Hardware stack levels used: 1
 44821 ;; Hardware stack levels required when called: 6
 44822 ;; This function calls:
 44823 ;;		Nothing
 44824 ;; This function is called by:
 44825 ;;		_checkTxFifo
 44826 ;;		_checkCANTimeout
 44827 ;; This function uses a non-reentrant model
 44828 ;;
 44829                           
 44830                           	psect	text203
 44831   00B586                     __ptext203:
 44832                           	callstack 0
 44833   00B586                     i1_tickGet:
 44834                           	callstack 3
 44835                           
 44836                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 44837                           
 44838                           ;incstack = 0
 44839   00B586  0E00               	movlw	0
 44840   00B588  0100               	movlb	0	; () banked
 44841   00B58A  6F68               	movwf	(i1tickGet@currentTime+2)& (0+255),b
 44842                           
 44843                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 44844   00B58C  0E00               	movlw	0
 44845   00B58E  6F69               	movwf	(i1tickGet@currentTime+3)& (0+255),b
 44846                           
 44847                           ; BSR set to: 0
 44848                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 44849   00B590  9AF2               	bcf	242,5,c	;volatile
 44850   00B592                     i1l20144:
 44851                           
 44852                           ; BSR set to: 0
 44853                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 44854   00B592  0E00               	movlw	0
 44855   00B594  B4F2               	btfsc	242,2,c	;volatile
 44856   00B596  0E01               	movlw	1
 44857   00B598  6F65               	movwf	i1tickGet@IntFlag1& (0+255),b
 44858                           
 44859                           ; BSR set to: 0
 44860                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 44861   00B59A  CFD6 F066          	movff	4054,i1tickGet@currentTime	;volatile
 44862                           
 44863                           ; BSR set to: 0
 44864                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 44865   00B59E  CFD7 F067          	movff	4055,i1tickGet@currentTime+1	;volatile
 44866                           
 44867                           ; BSR set to: 0
 44868                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 44869   00B5A2  0E00               	movlw	0
 44870   00B5A4  B4F2               	btfsc	242,2,c	;volatile
 44871   00B5A6  0E01               	movlw	1
 44872   00B5A8  6F64               	movwf	i1tickGet@IntFlag2& (0+255),b
 44873                           
 44874                           ; BSR set to: 0
 44875                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 44876   00B5AA  5164               	movf	i1tickGet@IntFlag2& (0+255),w,b
 44877   00B5AC  1965               	xorwf	i1tickGet@IntFlag1& (0+255),w,b
 44878   00B5AE  A4D8               	btfss	status,2,c
 44879   00B5B0  D7F0               	goto	i1l20144
 44880                           
 44881                           ; BSR set to: 0
 44882                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 44883   00B5B2  5165               	movf	i1tickGet@IntFlag1& (0+255),w,b
 44884   00B5B4  B4D8               	btfsc	status,2,c
 44885   00B5B6  D005               	goto	i1l20164
 44886                           
 44887                           ; BSR set to: 0
 44888                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 44889   00B5B8  94F2               	bcf	242,2,c	;volatile
 44890                           
 44891                           ; BSR set to: 0
 44892                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 44893   00B5BA  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 44894                           
 44895                           ; BSR set to: 0
 44896                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 44897   00B5BC  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44898   00B5BE  B4D8               	btfsc	status,2,c
 44899                           
 44900                           ; BSR set to: 0
 44901                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 44902   00B5C0  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 44903   00B5C2                     i1l20164:
 44904                           
 44905                           ; BSR set to: 0
 44906                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 44907   00B5C2  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 44908   00B5C4  2768               	addwf	(i1tickGet@currentTime+2)& (0+255),f,b
 44909                           
 44910                           ; BSR set to: 0
 44911                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 44912   00B5C6  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 44913   00B5C8  2769               	addwf	(i1tickGet@currentTime+3)& (0+255),f,b
 44914                           
 44915                           ; BSR set to: 0
 44916                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 44917   00B5CA  8AF2               	bsf	242,5,c	;volatile
 44918                           
 44919                           ; BSR set to: 0
 44920                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 44921   00B5CC  C066  F060         	movff	i1tickGet@currentTime,?i1_tickGet
 44922   00B5D0  C067  F061         	movff	i1tickGet@currentTime+1,?i1_tickGet+1
 44923   00B5D4  C068  F062         	movff	i1tickGet@currentTime+2,?i1_tickGet+2
 44924   00B5D8  C069  F063         	movff	i1tickGet@currentTime+3,?i1_tickGet+3
 44925                           
 44926                           ; BSR set to: 0
 44927   00B5DC  0012               	return		;funcret
 44928   00B5DE                     __end_ofi1_tickGet:
 44929                           	callstack 0
 44930                           
 44931 ;; *************** function i1_pop *****************
 44932 ;; Defined at:
 44933 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 44934 ;; Parameters:    Size  Location     Type
 44935 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 44936 ;;		 -> txQueue(5), rxQueue(5), 
 44937 ;; Auto vars:     Size  Location     Type
 44938 ;;  ret             2    7[BANK0 ] PTR struct Message
 44939 ;;		 -> txBuffers(72), rxBuffers(288), 
 44940 ;; Return value:  Size  Location     Type
 44941 ;;                  2    0[BANK0 ] PTR struct Message
 44942 ;; Registers used:
 44943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44944 ;; Tracked objects:
 44945 ;;		On entry : 0/0
 44946 ;;		On exit  : 0/0
 44947 ;;		Unchanged: 0/0
 44948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 44949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44950 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44951 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44952 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 44953 ;;Total ram usage:        9 bytes
 44954 ;; Hardware stack levels used: 1
 44955 ;; Hardware stack levels required when called: 6
 44956 ;; This function calls:
 44957 ;;		Nothing
 44958 ;; This function is called by:
 44959 ;;		_checkTxFifo
 44960 ;; This function uses a non-reentrant model
 44961 ;;
 44962                           
 44963                           	psect	text204
 44964   009C1A                     __ptext204:
 44965                           	callstack 0
 44966   009C1A                     i1_pop:
 44967                           	callstack 3
 44968                           
 44969                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 44970                           
 44971                           ; BSR set to: 0
 44972                           ;incstack = 0
 44973   009C1A  0100               	movlb	0	; () banked
 44974   009C1C  5160               	movf	i1pop@q& (0+255),w,b
 44975   009C1E  6ED9               	movwf	fsr2l,c
 44976   009C20  6ADA               	clrf	fsr2h,c
 44977   009C22  0E02               	movlw	2
 44978   009C24  26D9               	addwf	fsr2l,f,c
 44979   009C26  5160               	movf	i1pop@q& (0+255),w,b
 44980   009C28  6EE1               	movwf	fsr1l,c
 44981   009C2A  6AE2               	clrf	fsr1h,c
 44982   009C2C  0E03               	movlw	3
 44983   009C2E  26E1               	addwf	fsr1l,f,c
 44984   009C30  50DE               	movf	postinc2,w,c
 44985   009C32  18E6               	xorwf	postinc1,w,c
 44986   009C34  A4D8               	btfss	status,2,c
 44987   009C36  D005               	goto	i1l20206
 44988                           
 44989                           ; BSR set to: 0
 44990                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 44991   009C38  0E00               	movlw	0
 44992   009C3A  6F60               	movwf	?i1_pop& (0+255),b
 44993   009C3C  0E00               	movlw	0
 44994   009C3E  6F61               	movwf	(?i1_pop+1)& (0+255),b
 44995   009C40  0012               	return	
 44996   009C42                     i1l20206:
 44997                           
 44998                           ; BSR set to: 0
 44999                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 45000   009C42  5160               	movf	i1pop@q& (0+255),w,b
 45001   009C44  6ED9               	movwf	fsr2l,c
 45002   009C46  6ADA               	clrf	fsr2h,c
 45003   009C48  0E02               	movlw	2
 45004   009C4A  26D9               	addwf	fsr2l,f,c
 45005   009C4C  50DF               	movf	indf2,w,c
 45006   009C4E  6F62               	movwf	??i1_pop& (0+255),b
 45007   009C50  5162               	movf	??i1_pop& (0+255),w,b
 45008   009C52  0D09               	mullw	9
 45009   009C54  CFF3 F063          	movff	prodl,??i1_pop+1
 45010   009C58  CFF4 F064          	movff	prodh,??i1_pop+2
 45011   009C5C  5160               	movf	i1pop@q& (0+255),w,b
 45012   009C5E  6ED9               	movwf	fsr2l,c
 45013   009C60  6ADA               	clrf	fsr2h,c
 45014   009C62  CFDE F065          	movff	postinc2,??i1_pop+3
 45015   009C66  CFDD F066          	movff	postdec2,??i1_pop+4
 45016   009C6A  5163               	movf	(??i1_pop+1)& (0+255),w,b
 45017   009C6C  2565               	addwf	(??i1_pop+3)& (0+255),w,b
 45018   009C6E  6F67               	movwf	i1pop@ret& (0+255),b
 45019   009C70  5164               	movf	(??i1_pop+2)& (0+255),w,b
 45020   009C72  2166               	addwfc	(??i1_pop+4)& (0+255),w,b
 45021   009C74  6F68               	movwf	(i1pop@ret+1)& (0+255),b
 45022                           
 45023                           ; BSR set to: 0
 45024   009C76  5160               	movf	i1pop@q& (0+255),w,b
 45025   009C78  6ED9               	movwf	fsr2l,c
 45026   009C7A  6ADA               	clrf	fsr2h,c
 45027   009C7C  0E02               	movlw	2
 45028   009C7E  26D9               	addwf	fsr2l,f,c
 45029   009C80  2ADF               	incf	indf2,f,c
 45030                           
 45031                           ; BSR set to: 0
 45032                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 45033   009C82  5160               	movf	i1pop@q& (0+255),w,b
 45034   009C84  6ED9               	movwf	fsr2l,c
 45035   009C86  6ADA               	clrf	fsr2h,c
 45036   009C88  0E04               	movlw	4
 45037   009C8A  26D9               	addwf	fsr2l,f,c
 45038   009C8C  5160               	movf	i1pop@q& (0+255),w,b
 45039   009C8E  6EE1               	movwf	fsr1l,c
 45040   009C90  6AE2               	clrf	fsr1h,c
 45041   009C92  0E02               	movlw	2
 45042   009C94  26E1               	addwf	fsr1l,f,c
 45043   009C96  50DE               	movf	postinc2,w,c
 45044   009C98  5CE6               	subwf	postinc1,w,c
 45045   009C9A  A0D8               	btfss	status,0,c
 45046   009C9C  D006               	goto	i1l20214
 45047                           
 45048                           ; BSR set to: 0
 45049   009C9E  5160               	movf	i1pop@q& (0+255),w,b
 45050   009CA0  6ED9               	movwf	fsr2l,c
 45051   009CA2  6ADA               	clrf	fsr2h,c
 45052   009CA4  0E02               	movlw	2
 45053   009CA6  26D9               	addwf	fsr2l,f,c
 45054   009CA8  6ADF               	clrf	indf2,c
 45055   009CAA                     i1l20214:
 45056                           
 45057                           ; BSR set to: 0
 45058                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 45059   009CAA  C067  F060         	movff	i1pop@ret,?i1_pop
 45060   009CAE  C068  F061         	movff	i1pop@ret+1,?i1_pop+1
 45061                           
 45062                           ; BSR set to: 0
 45063   009CB2  0012               	return		;funcret
 45064   009CB4                     __end_ofi1_pop:
 45065                           	callstack 0
 45066                           
 45067 ;; *************** function i1_isEvent *****************
 45068 ;; Defined at:
 45069 ;;		line 1117 in file "../../VLCBlib_PIC/vlcb.c"
 45070 ;; Parameters:    Size  Location     Type
 45071 ;;  opc             1    wreg     unsigned char 
 45072 ;; Auto vars:     Size  Location     Type
 45073 ;;  opc             1    1[BANK0 ] unsigned char 
 45074 ;; Return value:  Size  Location     Type
 45075 ;;                  1    wreg      enum E12760
 45076 ;; Registers used:
 45077 ;;		wreg, status,2, status,0
 45078 ;; Tracked objects:
 45079 ;;		On entry : 0/0
 45080 ;;		On exit  : 0/0
 45081 ;;		Unchanged: 0/0
 45082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45084 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45086 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45087 ;;Total ram usage:        2 bytes
 45088 ;; Hardware stack levels used: 1
 45089 ;; Hardware stack levels required when called: 6
 45090 ;; This function calls:
 45091 ;;		Nothing
 45092 ;; This function is called by:
 45093 ;;		_checkTxFifo
 45094 ;; This function uses a non-reentrant model
 45095 ;;
 45096                           
 45097                           	psect	text205
 45098   00C1D4                     __ptext205:
 45099                           	callstack 0
 45100   00C1D4                     i1_isEvent:
 45101                           	callstack 3
 45102                           
 45103                           ; BSR set to: 0
 45104                           ;incstack = 0
 45105                           ;i1isEvent@opc stored from wreg
 45106   00C1D4  0100               	movlb	0	; () banked
 45107   00C1D6  6F61               	movwf	i1isEvent@opc& (0+255),b
 45108                           
 45109                           ;../../VLCBlib_PIC/vlcb.c: 1118:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 45110   00C1D8  0E00               	movlw	0
 45111   00C1DA  0100               	movlb	0	; () banked
 45112   00C1DC  6F60               	movwf	i1_isEvent$4867& (0+255),b
 45113                           
 45114                           ; BSR set to: 0
 45115   00C1DE  5161               	movf	i1isEvent@opc& (0+255),w,b
 45116   00C1E0  0B90               	andlw	144
 45117   00C1E2  0A90               	xorlw	144
 45118   00C1E4  A4D8               	btfss	status,2,c
 45119   00C1E6  D008               	goto	i1l2018
 45120                           
 45121                           ; BSR set to: 0
 45122   00C1E8  5161               	movf	i1isEvent@opc& (0+255),w,b
 45123   00C1EA  0AFF               	xorlw	255
 45124   00C1EC  0B06               	andlw	6
 45125   00C1EE  0A06               	xorlw	6
 45126   00C1F0  A4D8               	btfss	status,2,c
 45127   00C1F2  D002               	goto	i1l2018
 45128                           
 45129                           ; BSR set to: 0
 45130   00C1F4  0E01               	movlw	1
 45131   00C1F6  6F60               	movwf	i1_isEvent$4867& (0+255),b
 45132   00C1F8                     i1l2018:
 45133                           
 45134                           ; BSR set to: 0
 45135   00C1F8  5160               	movf	i1_isEvent$4867& (0+255),w,b
 45136                           
 45137                           ; BSR set to: 0
 45138   00C1FA  0012               	return		;funcret
 45139   00C1FC                     __end_ofi1_isEvent:
 45140                           	callstack 0
 45141                           
 45142 ;; *************** function _canFillRxFifo *****************
 45143 ;; Defined at:
 45144 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 45145 ;; Parameters:    Size  Location     Type
 45146 ;;		None
 45147 ;; Auto vars:     Size  Location     Type
 45148 ;;  ptr             2   14[BANK0 ] PTR unsigned char 
 45149 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 45150 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 45151 ;;		 -> NULL(0), 
 45152 ;;  m               2   12[BANK0 ] PTR struct Message
 45153 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 45154 ;;  hiIndex         1    0        unsigned char 
 45155 ;; Return value:  Size  Location     Type
 45156 ;;                  1    wreg      void 
 45157 ;; Registers used:
 45158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45159 ;; Tracked objects:
 45160 ;;		On entry : 0/0
 45161 ;;		On exit  : 0/0
 45162 ;;		Unchanged: 0/0
 45163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45165 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45167 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45168 ;;Total ram usage:        4 bytes
 45169 ;; Hardware stack levels used: 1
 45170 ;; Hardware stack levels required when called: 7
 45171 ;; This function calls:
 45172 ;;		i1_getBufferPointer
 45173 ;;		i1_getNextWriteMessage
 45174 ;;		i1_updateModuleErrorStatus
 45175 ;; This function is called by:
 45176 ;;		_canIsr
 45177 ;; This function uses a non-reentrant model
 45178 ;;
 45179                           
 45180                           	psect	text206
 45181   007270                     __ptext206:
 45182                           	callstack 0
 45183   007270                     _canFillRxFifo:
 45184                           	callstack 3
 45185                           
 45186                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45187                           
 45188                           ; BSR set to: 0
 45189                           ;incstack = 0
 45190   007270  D0B4               	goto	i1l22162
 45191   007272                     i1l22124:
 45192                           
 45193                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 45194   007272  506F               	movf	111,w,c	;volatile
 45195   007274  0B07               	andlw	7
 45196   007276  EC88  F04F         	call	i1_getBufferPointer
 45197   00727A  C060  F06E         	movff	?i1_getBufferPointer,canFillRxFifo@ptr
 45198   00727E  C061  F06F         	movff	?i1_getBufferPointer+1,canFillRxFifo@ptr+1
 45199                           
 45200                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 45201   007282  9277               	bcf	119,1,c	;volatile
 45202                           
 45203                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 45204   007284  BC71               	btfsc	113,6,c	;volatile
 45205                           
 45206                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 45207   007286  9C71               	bcf	113,6,c	;volatile
 45208                           
 45209                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 45210   007288  0100               	movlb	0	; () banked
 45211   00728A  EE20 F002          	lfsr	2,2
 45212   00728E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45213   007290  26D9               	addwf	fsr2l,f,c
 45214   007292  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45215   007294  22DA               	addwfc	fsr2h,f,c
 45216   007296  B6DF               	btfsc	indf2,3,c
 45217   007298  D093               	goto	i1l22152
 45218                           
 45219                           ; BSR set to: 0
 45220                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 45221   00729A  0E4D               	movlw	low _rxQueue
 45222   00729C  6F60               	movwf	i1getNextWriteMessage@q& (0+255),b
 45223   00729E  EC7D  F046         	call	i1_getNextWriteMessage	;wreg free
 45224   0072A2  C060  F06C         	movff	?i1_getNextWriteMessage,canFillRxFifo@m
 45225   0072A6  C061  F06D         	movff	?i1_getNextWriteMessage+1,canFillRxFifo@m+1
 45226                           
 45227                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 45228   0072AA  0100               	movlb	0	; () banked
 45229   0072AC  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45230   0072AE  116D               	iorwf	(canFillRxFifo@m+1)& (0+255),w,b
 45231   0072B0  A4D8               	btfss	status,2,c
 45232   0072B2  D009               	goto	i1l22148
 45233                           
 45234                           ; BSR set to: 0
 45235                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 45236   0072B4  0101               	movlb	1	; () banked
 45237   0072B6  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 45238   0072B8  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 45239                           
 45240                           ; BSR set to: 1
 45241                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 45242   0072BA  EC68  F062         	call	i1_updateModuleErrorStatus	;wreg free
 45243                           
 45244                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 45245   0072BE  AE77               	btfss	119,7,c	;volatile
 45246   0072C0  0012               	return	
 45247                           
 45248                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 45249   0072C2  9E77               	bcf	119,7,c	;volatile
 45250   0072C4  0012               	return	
 45251   0072C6                     i1l22148:
 45252                           
 45253                           ; BSR set to: 0
 45254                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 45255   0072C6  EE20 F006          	lfsr	2,6
 45256   0072CA  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45257   0072CC  26D9               	addwf	fsr2l,f,c
 45258   0072CE  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45259   0072D0  22DA               	addwfc	fsr2h,f,c
 45260   0072D2  EE10 F001          	lfsr	1,1
 45261   0072D6  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45262   0072D8  26E1               	addwf	fsr1l,f,c
 45263   0072DA  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45264   0072DC  22E2               	addwfc	fsr1h,f,c
 45265   0072DE  CFDF FFE7          	movff	indf2,indf1
 45266                           
 45267                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 45268   0072E2  EE20 F007          	lfsr	2,7
 45269   0072E6  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45270   0072E8  26D9               	addwf	fsr2l,f,c
 45271   0072EA  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45272   0072EC  22DA               	addwfc	fsr2h,f,c
 45273   0072EE  EE10 F002          	lfsr	1,2
 45274   0072F2  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45275   0072F4  26E1               	addwf	fsr1l,f,c
 45276   0072F6  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45277   0072F8  22E2               	addwfc	fsr1h,f,c
 45278   0072FA  CFDF FFE7          	movff	indf2,indf1
 45279                           
 45280                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 45281   0072FE  EE20 F008          	lfsr	2,8
 45282   007302  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45283   007304  26D9               	addwf	fsr2l,f,c
 45284   007306  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45285   007308  22DA               	addwfc	fsr2h,f,c
 45286   00730A  EE10 F003          	lfsr	1,3
 45287   00730E  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45288   007310  26E1               	addwf	fsr1l,f,c
 45289   007312  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45290   007314  22E2               	addwfc	fsr1h,f,c
 45291   007316  CFDF FFE7          	movff	indf2,indf1
 45292                           
 45293                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 45294   00731A  EE20 F009          	lfsr	2,9
 45295   00731E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45296   007320  26D9               	addwf	fsr2l,f,c
 45297   007322  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45298   007324  22DA               	addwfc	fsr2h,f,c
 45299   007326  EE10 F004          	lfsr	1,4
 45300   00732A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45301   00732C  26E1               	addwf	fsr1l,f,c
 45302   00732E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45303   007330  22E2               	addwfc	fsr1h,f,c
 45304   007332  CFDF FFE7          	movff	indf2,indf1
 45305                           
 45306                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 45307   007336  EE20 F00A          	lfsr	2,10
 45308   00733A  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45309   00733C  26D9               	addwf	fsr2l,f,c
 45310   00733E  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45311   007340  22DA               	addwfc	fsr2h,f,c
 45312   007342  EE10 F005          	lfsr	1,5
 45313   007346  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45314   007348  26E1               	addwf	fsr1l,f,c
 45315   00734A  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45316   00734C  22E2               	addwfc	fsr1h,f,c
 45317   00734E  CFDF FFE7          	movff	indf2,indf1
 45318                           
 45319                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 45320   007352  EE20 F00B          	lfsr	2,11
 45321   007356  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45322   007358  26D9               	addwf	fsr2l,f,c
 45323   00735A  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45324   00735C  22DA               	addwfc	fsr2h,f,c
 45325   00735E  EE10 F006          	lfsr	1,6
 45326   007362  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45327   007364  26E1               	addwf	fsr1l,f,c
 45328   007366  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45329   007368  22E2               	addwfc	fsr1h,f,c
 45330   00736A  CFDF FFE7          	movff	indf2,indf1
 45331                           
 45332                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 45333   00736E  EE20 F00C          	lfsr	2,12
 45334   007372  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45335   007374  26D9               	addwf	fsr2l,f,c
 45336   007376  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45337   007378  22DA               	addwfc	fsr2h,f,c
 45338   00737A  EE10 F007          	lfsr	1,7
 45339   00737E  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45340   007380  26E1               	addwf	fsr1l,f,c
 45341   007382  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45342   007384  22E2               	addwfc	fsr1h,f,c
 45343   007386  CFDF FFE7          	movff	indf2,indf1
 45344                           
 45345                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 45346   00738A  EE20 F00D          	lfsr	2,13
 45347   00738E  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45348   007390  26D9               	addwf	fsr2l,f,c
 45349   007392  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45350   007394  22DA               	addwfc	fsr2h,f,c
 45351   007396  EE10 F008          	lfsr	1,8
 45352   00739A  516C               	movf	canFillRxFifo@m& (0+255),w,b
 45353   00739C  26E1               	addwf	fsr1l,f,c
 45354   00739E  516D               	movf	(canFillRxFifo@m+1)& (0+255),w,b
 45355   0073A0  22E2               	addwfc	fsr1h,f,c
 45356   0073A2  CFDF FFE7          	movff	indf2,indf1
 45357                           
 45358                           ; BSR set to: 0
 45359                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 45360   0073A6  EE20 F005          	lfsr	2,5
 45361   0073AA  516E               	movf	canFillRxFifo@ptr& (0+255),w,b
 45362   0073AC  26D9               	addwf	fsr2l,f,c
 45363   0073AE  516F               	movf	(canFillRxFifo@ptr+1)& (0+255),w,b
 45364   0073B0  22DA               	addwfc	fsr2h,f,c
 45365   0073B2  50DF               	movf	indf2,w,c
 45366   0073B4  0B0F               	andlw	15
 45367   0073B6  C06C  FFD9         	movff	canFillRxFifo@m,fsr2l
 45368   0073BA  C06D  FFDA         	movff	canFillRxFifo@m+1,fsr2h
 45369   0073BE  6EDF               	movwf	indf2,c
 45370   0073C0                     i1l22152:
 45371                           
 45372                           ; BSR set to: 0
 45373                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 45374   0073C0  AE77               	btfss	119,7,c	;volatile
 45375   0073C2  D004               	goto	i1l22158
 45376                           
 45377                           ; BSR set to: 0
 45378                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 45379   0073C4  0101               	movlb	1	; () banked
 45380   0073C6  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 45381   0073C8  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 45382                           
 45383                           ; BSR set to: 1
 45384                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 45385   0073CA  9E77               	bcf	119,7,c	;volatile
 45386   0073CC                     i1l22158:
 45387                           
 45388                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 45389   0073CC  C06E  FFD9         	movff	canFillRxFifo@ptr,fsr2l
 45390   0073D0  C06F  FFDA         	movff	canFillRxFifo@ptr+1,fsr2h
 45391   0073D4  0E7F               	movlw	127
 45392   0073D6  16DF               	andwf	indf2,f,c
 45393                           
 45394                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 45395   0073D8  9077               	bcf	119,0,c	;volatile
 45396   0073DA                     i1l22162:
 45397                           
 45398                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 45399   0073DA  AE71               	btfss	113,7,c	;volatile
 45400   0073DC  0012               	return	
 45401   0073DE  D749               	goto	i1l22124
 45402   0073E0                     __end_of_canFillRxFifo:
 45403                           	callstack 0
 45404                           
 45405 ;; *************** function i1_updateModuleErrorStatus *****************
 45406 ;; Defined at:
 45407 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 45408 ;; Parameters:    Size  Location     Type
 45409 ;;		None
 45410 ;; Auto vars:     Size  Location     Type
 45411 ;;		None
 45412 ;; Return value:  Size  Location     Type
 45413 ;;                  1    wreg      void 
 45414 ;; Registers used:
 45415 ;;		wreg, status,2, status,0
 45416 ;; Tracked objects:
 45417 ;;		On entry : 0/0
 45418 ;;		On exit  : 0/0
 45419 ;;		Unchanged: 0/0
 45420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45425 ;;Total ram usage:        0 bytes
 45426 ;; Hardware stack levels used: 1
 45427 ;; Hardware stack levels required when called: 6
 45428 ;; This function calls:
 45429 ;;		Nothing
 45430 ;; This function is called by:
 45431 ;;		_checkTxFifo
 45432 ;;		_checkCANTimeout
 45433 ;;		_canTxError
 45434 ;;		_canFillRxFifo
 45435 ;; This function uses a non-reentrant model
 45436 ;;
 45437                           
 45438                           	psect	text207
 45439   00C4D0                     __ptext207:
 45440                           	callstack 0
 45441   00C4D0                     i1_updateModuleErrorStatus:
 45442                           	callstack 3
 45443                           
 45444                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 45445                           
 45446                           ;incstack = 0
 45447   00C4D0  0101               	movlb	1	; () banked
 45448   00C4D2  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 45449   00C4D4  B4D8               	btfsc	status,2,c
 45450   00C4D6  0012               	return	
 45451                           
 45452                           ; BSR set to: 1
 45453                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 45454   00C4D8  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 45455                           
 45456                           ; BSR set to: 1
 45457   00C4DA  0012               	return		;funcret
 45458   00C4DC                     __end_ofi1_updateModuleErrorStatus:
 45459                           	callstack 0
 45460                           
 45461 ;; *************** function i1_getNextWriteMessage *****************
 45462 ;; Defined at:
 45463 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 45464 ;; Parameters:    Size  Location     Type
 45465 ;;  q               1    0[BANK0 ] PTR struct MessageQueue
 45466 ;;		 -> rxQueue(5), 
 45467 ;; Auto vars:     Size  Location     Type
 45468 ;;  wr              1   11[BANK0 ] unsigned char 
 45469 ;; Return value:  Size  Location     Type
 45470 ;;                  2    0[BANK0 ] PTR struct Message
 45471 ;; Registers used:
 45472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45473 ;; Tracked objects:
 45474 ;;		On entry : 0/0
 45475 ;;		On exit  : 0/0
 45476 ;;		Unchanged: 0/0
 45477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45480 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45481 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45482 ;;Total ram usage:       12 bytes
 45483 ;; Hardware stack levels used: 1
 45484 ;; Hardware stack levels required when called: 6
 45485 ;; This function calls:
 45486 ;;		Nothing
 45487 ;; This function is called by:
 45488 ;;		_checkTxFifo
 45489 ;;		_canFillRxFifo
 45490 ;; This function uses a non-reentrant model
 45491 ;;
 45492                           
 45493                           	psect	text208
 45494   008CFA                     __ptext208:
 45495                           	callstack 0
 45496   008CFA                     i1_getNextWriteMessage:
 45497                           	callstack 3
 45498                           
 45499                           ; BSR set to: 1
 45500                           ;incstack = 0
 45501   008CFA  0100               	movlb	0	; () banked
 45502   008CFC  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45503   008CFE  6ED9               	movwf	fsr2l,c
 45504   008D00  6ADA               	clrf	fsr2h,c
 45505   008D02  0E02               	movlw	2
 45506   008D04  26D9               	addwf	fsr2l,f,c
 45507   008D06  50DF               	movf	indf2,w,c
 45508   008D08  6F62               	movwf	??i1_getNextWriteMessage& (0+255),b
 45509   008D0A  6B63               	clrf	(??i1_getNextWriteMessage+1)& (0+255),b
 45510   008D0C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45511   008D0E  6ED9               	movwf	fsr2l,c
 45512   008D10  6ADA               	clrf	fsr2h,c
 45513   008D12  0E04               	movlw	4
 45514   008D14  26D9               	addwf	fsr2l,f,c
 45515   008D16  50DF               	movf	indf2,w,c
 45516   008D18  6F64               	movwf	(??i1_getNextWriteMessage+2)& (0+255),b
 45517   008D1A  0EFF               	movlw	255
 45518   008D1C  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 45519   008D1E  6F65               	movwf	(??i1_getNextWriteMessage+3)& (0+255),b
 45520   008D20  6B66               	clrf	(??i1_getNextWriteMessage+4)& (0+255),b
 45521   008D22  0EFF               	movlw	255
 45522   008D24  2366               	addwfc	(??i1_getNextWriteMessage+4)& (0+255),f,b
 45523   008D26  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45524   008D28  6ED9               	movwf	fsr2l,c
 45525   008D2A  6ADA               	clrf	fsr2h,c
 45526   008D2C  0E03               	movlw	3
 45527   008D2E  26D9               	addwf	fsr2l,f,c
 45528   008D30  50DF               	movf	indf2,w,c
 45529   008D32  6F67               	movwf	(??i1_getNextWriteMessage+5)& (0+255),b
 45530   008D34  6B68               	clrf	(??i1_getNextWriteMessage+6)& (0+255),b
 45531   008D36  0E01               	movlw	1
 45532   008D38  2767               	addwf	(??i1_getNextWriteMessage+5)& (0+255),f,b
 45533   008D3A  0E00               	movlw	0
 45534   008D3C  2368               	addwfc	(??i1_getNextWriteMessage+6)& (0+255),f,b
 45535   008D3E  5165               	movf	(??i1_getNextWriteMessage+3)& (0+255),w,b
 45536   008D40  1567               	andwf	(??i1_getNextWriteMessage+5)& (0+255),w,b
 45537   008D42  6F69               	movwf	(??i1_getNextWriteMessage+7)& (0+255),b
 45538   008D44  5166               	movf	(??i1_getNextWriteMessage+4)& (0+255),w,b
 45539   008D46  1568               	andwf	(??i1_getNextWriteMessage+6)& (0+255),w,b
 45540   008D48  6F6A               	movwf	(??i1_getNextWriteMessage+8)& (0+255),b
 45541   008D4A  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 45542   008D4C  1969               	xorwf	(??i1_getNextWriteMessage+7)& (0+255),w,b
 45543   008D4E  E109               	bnz	i1l20190
 45544   008D50  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 45545   008D52  196A               	xorwf	(??i1_getNextWriteMessage+8)& (0+255),w,b
 45546   008D54  A4D8               	btfss	status,2,c
 45547   008D56  D005               	goto	i1l20190
 45548                           
 45549                           ; BSR set to: 0
 45550   008D58  0E00               	movlw	0
 45551   008D5A  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 45552   008D5C  0E00               	movlw	0
 45553   008D5E  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 45554   008D60  0012               	return	
 45555   008D62                     i1l20190:
 45556                           
 45557                           ; BSR set to: 0
 45558   008D62  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45559   008D64  6ED9               	movwf	fsr2l,c
 45560   008D66  6ADA               	clrf	fsr2h,c
 45561   008D68  0E03               	movlw	3
 45562   008D6A  26D9               	addwf	fsr2l,f,c
 45563   008D6C  50DF               	movf	indf2,w,c
 45564   008D6E  6F6B               	movwf	i1getNextWriteMessage@wr& (0+255),b
 45565   008D70  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45566   008D72  6ED9               	movwf	fsr2l,c
 45567   008D74  6ADA               	clrf	fsr2h,c
 45568   008D76  0E03               	movlw	3
 45569   008D78  26D9               	addwf	fsr2l,f,c
 45570   008D7A  2ADF               	incf	indf2,f,c
 45571                           
 45572                           ; BSR set to: 0
 45573   008D7C  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45574   008D7E  6ED9               	movwf	fsr2l,c
 45575   008D80  6ADA               	clrf	fsr2h,c
 45576   008D82  0E04               	movlw	4
 45577   008D84  26D9               	addwf	fsr2l,f,c
 45578   008D86  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45579   008D88  6EE1               	movwf	fsr1l,c
 45580   008D8A  6AE2               	clrf	fsr1h,c
 45581   008D8C  0E03               	movlw	3
 45582   008D8E  26E1               	addwf	fsr1l,f,c
 45583   008D90  50DE               	movf	postinc2,w,c
 45584   008D92  5CE6               	subwf	postinc1,w,c
 45585   008D94  A0D8               	btfss	status,0,c
 45586   008D96  D006               	goto	i1l20196
 45587                           
 45588                           ; BSR set to: 0
 45589   008D98  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45590   008D9A  6ED9               	movwf	fsr2l,c
 45591   008D9C  6ADA               	clrf	fsr2h,c
 45592   008D9E  0E03               	movlw	3
 45593   008DA0  26D9               	addwf	fsr2l,f,c
 45594   008DA2  6ADF               	clrf	indf2,c
 45595   008DA4                     i1l20196:
 45596                           
 45597                           ; BSR set to: 0
 45598   008DA4  516B               	movf	i1getNextWriteMessage@wr& (0+255),w,b
 45599   008DA6  0D09               	mullw	9
 45600   008DA8  CFF3 F062          	movff	prodl,??i1_getNextWriteMessage
 45601   008DAC  CFF4 F063          	movff	prodh,??i1_getNextWriteMessage+1
 45602   008DB0  5160               	movf	i1getNextWriteMessage@q& (0+255),w,b
 45603   008DB2  6ED9               	movwf	fsr2l,c
 45604   008DB4  6ADA               	clrf	fsr2h,c
 45605   008DB6  CFDE F064          	movff	postinc2,??i1_getNextWriteMessage+2
 45606   008DBA  CFDD F065          	movff	postdec2,??i1_getNextWriteMessage+3
 45607   008DBE  5162               	movf	??i1_getNextWriteMessage& (0+255),w,b
 45608   008DC0  2564               	addwf	(??i1_getNextWriteMessage+2)& (0+255),w,b
 45609   008DC2  6F60               	movwf	?i1_getNextWriteMessage& (0+255),b
 45610   008DC4  5163               	movf	(??i1_getNextWriteMessage+1)& (0+255),w,b
 45611   008DC6  2165               	addwfc	(??i1_getNextWriteMessage+3)& (0+255),w,b
 45612   008DC8  6F61               	movwf	(?i1_getNextWriteMessage+1)& (0+255),b
 45613                           
 45614                           ; BSR set to: 0
 45615   008DCA  0012               	return		;funcret
 45616   008DCC                     __end_ofi1_getNextWriteMessage:
 45617                           	callstack 0
 45618                           
 45619 ;; *************** function i1_getBufferPointer *****************
 45620 ;; Defined at:
 45621 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 45622 ;; Parameters:    Size  Location     Type
 45623 ;;  b               1    wreg     unsigned char 
 45624 ;; Auto vars:     Size  Location     Type
 45625 ;;  b               1    2[BANK0 ] unsigned char 
 45626 ;; Return value:  Size  Location     Type
 45627 ;;                  2    0[BANK0 ] PTR unsigned char 
 45628 ;; Registers used:
 45629 ;;		wreg, status,2, status,0
 45630 ;; Tracked objects:
 45631 ;;		On entry : 0/0
 45632 ;;		On exit  : 0/0
 45633 ;;		Unchanged: 0/0
 45634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45636 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45638 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45639 ;;Total ram usage:        3 bytes
 45640 ;; Hardware stack levels used: 1
 45641 ;; Hardware stack levels required when called: 6
 45642 ;; This function calls:
 45643 ;;		Nothing
 45644 ;; This function is called by:
 45645 ;;		_canFillRxFifo
 45646 ;; This function uses a non-reentrant model
 45647 ;;
 45648                           
 45649                           	psect	text209
 45650   009F10                     __ptext209:
 45651                           	callstack 0
 45652   009F10                     i1_getBufferPointer:
 45653                           	callstack 3
 45654                           
 45655                           ; BSR set to: 0
 45656                           ;incstack = 0
 45657                           ;i1getBufferPointer@b stored from wreg
 45658   009F10  0100               	movlb	0	; () banked
 45659   009F12  6F62               	movwf	i1getBufferPointer@b& (0+255),b
 45660                           
 45661                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 45662   009F14  D02D               	goto	i1l21212
 45663   009F16                     i1l21174:
 45664                           
 45665                           ; BSR set to: 0
 45666                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 45667   009F16  0E60               	movlw	96
 45668   009F18  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45669   009F1A  0E0F               	movlw	15
 45670   009F1C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45671   009F1E  0012               	return	
 45672   009F20                     i1l21178:
 45673                           
 45674                           ; BSR set to: 0
 45675                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 45676   009F20  0E30               	movlw	48
 45677   009F22  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45678   009F24  0E0F               	movlw	15
 45679   009F26  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45680   009F28  0012               	return	
 45681   009F2A                     i1l21182:
 45682                           
 45683                           ; BSR set to: 0
 45684                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 45685   009F2A  0E80               	movlw	128
 45686   009F2C  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45687   009F2E  0E0E               	movlw	14
 45688   009F30  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45689   009F32  0012               	return	
 45690   009F34                     i1l21186:
 45691                           
 45692                           ; BSR set to: 0
 45693                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 45694   009F34  0E90               	movlw	144
 45695   009F36  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45696   009F38  0E0E               	movlw	14
 45697   009F3A  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45698   009F3C  0012               	return	
 45699   009F3E                     i1l21190:
 45700                           
 45701                           ; BSR set to: 0
 45702                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 45703   009F3E  0EA0               	movlw	160
 45704   009F40  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45705   009F42  0E0E               	movlw	14
 45706   009F44  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45707   009F46  0012               	return	
 45708   009F48                     i1l21194:
 45709                           
 45710                           ; BSR set to: 0
 45711                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 45712   009F48  0EB0               	movlw	176
 45713   009F4A  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45714   009F4C  0E0E               	movlw	14
 45715   009F4E  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45716   009F50  0012               	return	
 45717   009F52                     i1l21198:
 45718                           
 45719                           ; BSR set to: 0
 45720                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 45721   009F52  0EC0               	movlw	192
 45722   009F54  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45723   009F56  0E0E               	movlw	14
 45724   009F58  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45725   009F5A  0012               	return	
 45726   009F5C                     i1l21202:
 45727                           
 45728                           ; BSR set to: 0
 45729                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 45730   009F5C  0ED0               	movlw	208
 45731   009F5E  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45732   009F60  0E0E               	movlw	14
 45733   009F62  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45734   009F64  0012               	return	
 45735   009F66                     i1l21206:
 45736                           
 45737                           ; BSR set to: 0
 45738                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 45739   009F66  0E00               	movlw	0
 45740   009F68  6F60               	movwf	?i1_getBufferPointer& (0+255),b
 45741   009F6A  0E00               	movlw	0
 45742   009F6C  6F61               	movwf	(?i1_getBufferPointer+1)& (0+255),b
 45743   009F6E  0012               	return	
 45744   009F70                     i1l21212:
 45745   009F70  0100               	movlb	0	; () banked
 45746   009F72  5162               	movf	i1getBufferPointer@b& (0+255),w,b
 45747                           
 45748                           ; Switch size 1, requested type "simple"
 45749                           ; Number of cases is 8, Range of values is 0 to 7
 45750                           ; switch strategies available:
 45751                           ; Name         Instructions Cycles
 45752                           ; simple_byte           25    13 (average)
 45753                           ;	Chosen strategy is simple_byte
 45754   009F74  0A00               	xorlw	0	; case 0
 45755   009F76  B4D8               	btfsc	status,2,c
 45756   009F78  D7CE               	goto	i1l21174
 45757   009F7A  0A01               	xorlw	1	; case 1
 45758   009F7C  B4D8               	btfsc	status,2,c
 45759   009F7E  D7D0               	goto	i1l21178
 45760   009F80  0A03               	xorlw	3	; case 2
 45761   009F82  B4D8               	btfsc	status,2,c
 45762   009F84  D7D2               	goto	i1l21182
 45763   009F86  0A01               	xorlw	1	; case 3
 45764   009F88  B4D8               	btfsc	status,2,c
 45765   009F8A  D7D4               	goto	i1l21186
 45766   009F8C  0A07               	xorlw	7	; case 4
 45767   009F8E  B4D8               	btfsc	status,2,c
 45768   009F90  D7D6               	goto	i1l21190
 45769   009F92  0A01               	xorlw	1	; case 5
 45770   009F94  B4D8               	btfsc	status,2,c
 45771   009F96  D7D8               	goto	i1l21194
 45772   009F98  0A03               	xorlw	3	; case 6
 45773   009F9A  B4D8               	btfsc	status,2,c
 45774   009F9C  D7DA               	goto	i1l21198
 45775   009F9E  0A01               	xorlw	1	; case 7
 45776   009FA0  B4D8               	btfsc	status,2,c
 45777   009FA2  D7DC               	goto	i1l21202
 45778   009FA4  D7E0               	goto	i1l21206
 45779   009FA6                     __end_ofi1_getBufferPointer:
 45780                           	callstack 0
 45781                           
 45782 ;; *************** function _APP_lowIsr *****************
 45783 ;; Defined at:
 45784 ;;		line 707 in file "../main.c"
 45785 ;; Parameters:    Size  Location     Type
 45786 ;;		None
 45787 ;; Auto vars:     Size  Location     Type
 45788 ;;		None
 45789 ;; Return value:  Size  Location     Type
 45790 ;;                  1    wreg      void 
 45791 ;; Registers used:
 45792 ;;		None
 45793 ;; Tracked objects:
 45794 ;;		On entry : 0/0
 45795 ;;		On exit  : 0/0
 45796 ;;		Unchanged: 0/0
 45797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45802 ;;Total ram usage:        0 bytes
 45803 ;; Hardware stack levels used: 1
 45804 ;; Hardware stack levels required when called: 6
 45805 ;; This function calls:
 45806 ;;		Nothing
 45807 ;; This function is called by:
 45808 ;;		_lowIsr
 45809 ;; This function uses a non-reentrant model
 45810 ;;
 45811                           
 45812                           	psect	text210
 45813   00C540                     __ptext210:
 45814                           	callstack 0
 45815   00C540                     _APP_lowIsr:
 45816                           	callstack 5
 45817                           
 45818                           ; BSR set to: 0
 45819                           ;incstack = 0
 45820   00C540  0012               	return		;funcret
 45821   00C542                     __end_of_APP_lowIsr:
 45822                           	callstack 0
 45823                           
 45824                           	psect	intcode
 45825   000808                     __pintcode:
 45826                           	callstack 2
 45827   000808  EFF4  F041         	goto	_isrHigh
 45828                           
 45829 ;; *************** function _highIsr *****************
 45830 ;; Defined at:
 45831 ;;		line 1056 in file "../../VLCBlib_PIC/vlcb.c"
 45832 ;; Parameters:    Size  Location     Type
 45833 ;;		None
 45834 ;; Auto vars:     Size  Location     Type
 45835 ;;  i               1   29[COMRAM] unsigned char 
 45836 ;; Return value:  Size  Location     Type
 45837 ;;                  1    wreg      void 
 45838 ;; Registers used:
 45839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 45840 ;; Tracked objects:
 45841 ;;		On entry : 0/0
 45842 ;;		On exit  : 0/0
 45843 ;;		Unchanged: 0/0
 45844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 45845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45847 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45848 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 45849 ;;Total ram usage:        5 bytes
 45850 ;; Hardware stack levels used: 1
 45851 ;; Hardware stack levels required when called: 4
 45852 ;; This function calls:
 45853 ;;		NULL
 45854 ;;		_APP_highIsr
 45855 ;;		i2_canIsr
 45856 ;; This function is called by:
 45857 ;;		_isrHigh
 45858 ;; This function uses a non-reentrant model
 45859 ;;
 45860                           
 45861                           	psect	text212
 45862   009038                     __ptext212:
 45863                           	callstack 0
 45864   009038                     _highIsr:
 45865                           	callstack 2
 45866                           
 45867                           ;../../VLCBlib_PIC/vlcb.c: 1057:     uint8_t i;;../../VLCBlib_PIC/vlcb.c: 1059:     for 
      +                          (i=0; i<9; i++) {
 45868                           
 45869                           ;incstack = 0
 45870   009038  0E00               	movlw	0
 45871   00903A  6E1E               	movwf	highIsr@i^0,c
 45872   00903C                     i2l24772:
 45873                           
 45874                           ;../../VLCBlib_PIC/vlcb.c: 1060:         if ((services[i] != ((void*)0)) && (services[i]
      +                          ->highIsr != ((void*)0))) {
 45875   00903C  501E               	movf	highIsr@i^0,w,c
 45876   00903E  0D02               	mullw	2
 45877   009040  0E75               	movlw	low _services
 45878   009042  24F3               	addwf	243,w,c
 45879   009044  6EF6               	movwf	tblptrl,c
 45880   009046  0EEE               	movlw	high _services
 45881   009048  20F4               	addwfc	244,w,c
 45882   00904A  6EF7               	movwf	tblptrh,c
 45883   00904C                     	if	1	;There are 3 active tblptr bytes
 45884   00904C  6AF8               	clrf	tblptru,c
 45885   00904E  0E00               	movlw	low (__mediumconst shr (0+16))
 45886   009050  22F8               	addwfc	tblptru,f,c
 45887   009052                     	endif
 45888   009052  0009               	tblrd		*+
 45889   009054  50F5               	movf	tablat,w,c
 45890   009056  0009               	tblrd		*+
 45891   009058  10F5               	iorwf	tablat,w,c
 45892   00905A  B4D8               	btfsc	status,2,c
 45893   00905C  D04B               	goto	i2u2665_49
 45894   00905E  501E               	movf	highIsr@i^0,w,c
 45895   009060  0D02               	mullw	2
 45896   009062  0E75               	movlw	low _services
 45897   009064  24F3               	addwf	243,w,c
 45898   009066  6EF6               	movwf	tblptrl,c
 45899   009068  0EEE               	movlw	high _services
 45900   00906A  20F4               	addwfc	244,w,c
 45901   00906C  6EF7               	movwf	tblptrh,c
 45902   00906E                     	if	1	;There are 3 active tblptr bytes
 45903   00906E  6AF8               	clrf	tblptru,c
 45904   009070  0E00               	movlw	low (__mediumconst shr (0+16))
 45905   009072  22F8               	addwfc	tblptru,f,c
 45906   009074                     	endif
 45907   009074  0009               	tblrd		*+
 45908   009076  CFF5 F01A          	movff	tablat,??_highIsr
 45909   00907A  0009               	tblrd		*+
 45910   00907C  CFF5 F01B          	movff	tablat,??_highIsr+1
 45911   009080  0E0A               	movlw	10
 45912   009082  261A               	addwf	??_highIsr^0,f,c
 45913   009084  0E00               	movlw	0
 45914   009086  221B               	addwfc	(??_highIsr+1)^0,f,c
 45915   009088  C01A  FFF6         	movff	??_highIsr,tblptrl
 45916   00908C  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 45917   009090                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45918   009090  6AF8               	clrf	tblptru,c
 45919   009092                     	endif
 45920   009092                     	if	0	;tblptru may be non-zero
 45921   009092                     	endif
 45922   009092  0009               	tblrd		*+
 45923   009094  50F5               	movf	tablat,w,c
 45924   009096  0009               	tblrd		*+
 45925   009098  10F5               	iorwf	tablat,w,c
 45926   00909A  B4D8               	btfsc	status,2,c
 45927   00909C  D02B               	goto	i2u2665_49
 45928                           
 45929                           ;../../VLCBlib_PIC/vlcb.c: 1061:             services[i]->highIsr();
 45930   00909E  501E               	movf	highIsr@i^0,w,c
 45931   0090A0  0D02               	mullw	2
 45932   0090A2  0E75               	movlw	low _services
 45933   0090A4  24F3               	addwf	243,w,c
 45934   0090A6  6EF6               	movwf	tblptrl,c
 45935   0090A8  0EEE               	movlw	high _services
 45936   0090AA  20F4               	addwfc	244,w,c
 45937   0090AC  6EF7               	movwf	tblptrh,c
 45938   0090AE                     	if	1	;There are 3 active tblptr bytes
 45939   0090AE  6AF8               	clrf	tblptru,c
 45940   0090B0  0E00               	movlw	low (__mediumconst shr (0+16))
 45941   0090B2  22F8               	addwfc	tblptru,f,c
 45942   0090B4                     	endif
 45943   0090B4  0009               	tblrd		*+
 45944   0090B6  CFF5 F01A          	movff	tablat,??_highIsr
 45945   0090BA  0009               	tblrd		*+
 45946   0090BC  CFF5 F01B          	movff	tablat,??_highIsr+1
 45947   0090C0  0E0A               	movlw	10
 45948   0090C2  261A               	addwf	??_highIsr^0,f,c
 45949   0090C4  0E00               	movlw	0
 45950   0090C6  221B               	addwfc	(??_highIsr+1)^0,f,c
 45951   0090C8  C01A  FFF6         	movff	??_highIsr,tblptrl
 45952   0090CC  C01B  FFF7         	movff	??_highIsr+1,tblptrh
 45953   0090D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 45954   0090D0  6AF8               	clrf	tblptru,c
 45955   0090D2                     	endif
 45956   0090D2                     	if	0	;tblptru may be non-zero
 45957   0090D2                     	endif
 45958   0090D2  0009               	tblrd		*+
 45959   0090D4  CFF5 F01C          	movff	tablat,??_highIsr+2
 45960   0090D8  0009               	tblrd		*+
 45961   0090DA  CFF5 F01D          	movff	tablat,??_highIsr+3
 45962   0090DE  D801               	call	i2u2665_48
 45963   0090E0  D009               	goto	i2u2665_49
 45964   0090E2                     i2u2665_48:
 45965   0090E2  0005               	push	
 45966   0090E4  6EFA               	movwf	pclath,c
 45967   0090E6  501C               	movf	(??_highIsr+2)^0,w,c
 45968   0090E8  6EFD               	movwf	tosl,c
 45969   0090EA  501D               	movf	(??_highIsr+3)^0,w,c
 45970   0090EC  6EFE               	movwf	tosh,c
 45971   0090EE  6AFF               	clrf	tosu,c
 45972   0090F0  50FA               	movf	pclath,w,c
 45973   0090F2  0012               	return		;indir
 45974   0090F4                     i2u2665_49:
 45975                           
 45976                           ;../../VLCBlib_PIC/vlcb.c: 1063:     }
 45977   0090F4  2A1E               	incf	highIsr@i^0,f,c
 45978   0090F6  0E08               	movlw	8
 45979   0090F8  641E               	cpfsgt	highIsr@i^0,c
 45980   0090FA  D7A0               	goto	i2l24772
 45981                           
 45982                           ;../../VLCBlib_PIC/vlcb.c: 1064:     APP_highIsr();
 45983   0090FC  EC23  F062         	call	_APP_highIsr	;wreg free
 45984   009100  0012               	return		;funcret
 45985   009102                     __end_of_highIsr:
 45986                           	callstack 0
 45987                           
 45988 ;; *************** function i2_canIsr *****************
 45989 ;; Defined at:
 45990 ;;		line 402 in file "../../VLCBlib_PIC/can18_ecan.c"
 45991 ;; Parameters:    Size  Location     Type
 45992 ;;		None
 45993 ;; Auto vars:     Size  Location     Type
 45994 ;;		None
 45995 ;; Return value:  Size  Location     Type
 45996 ;;                  1    wreg      void 
 45997 ;; Registers used:
 45998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 45999 ;; Tracked objects:
 46000 ;;		On entry : 0/0
 46001 ;;		On exit  : 0/0
 46002 ;;		Unchanged: 0/0
 46003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46008 ;;Total ram usage:        0 bytes
 46009 ;; Hardware stack levels used: 1
 46010 ;; Hardware stack levels required when called: 3
 46011 ;; This function calls:
 46012 ;;		i2_canFillRxFifo
 46013 ;;		i2_canTxError
 46014 ;;		i2_checkCANTimeout
 46015 ;;		i2_checkTxFifo
 46016 ;; This function is called by:
 46017 ;;		_highIsr
 46018 ;;		_lowIsr
 46019 ;; This function uses a non-reentrant model
 46020 ;;
 46021                           
 46022                           	psect	text213
 46023   00C42E                     __ptext213:
 46024                           	callstack 0
 46025   00C42E                     i2_canIsr:
 46026                           	callstack 2
 46027                           
 46028                           ;../../VLCBlib_PIC/can18_ecan.c: 404:     if (PIR5bits.FIFOWMIF) {
 46029                           
 46030                           ;incstack = 0
 46031   00C42E  B077               	btfsc	119,0,c	;volatile
 46032                           
 46033                           ;../../VLCBlib_PIC/can18_ecan.c: 405:         canFillRxFifo();
 46034   00C430  ECF0  F039         	call	i2_canFillRxFifo	;wreg free
 46035                           
 46036                           ;../../VLCBlib_PIC/can18_ecan.c: 407:     if (PIR5bits.ERRIF) {
 46037   00C434  BA77               	btfsc	119,5,c	;volatile
 46038                           
 46039                           ;../../VLCBlib_PIC/can18_ecan.c: 408:         canTxError();
 46040   00C436  ECC6  F058         	call	i2_canTxError	;wreg free
 46041                           
 46042                           ;../../VLCBlib_PIC/can18_ecan.c: 410:     if (PIR5bits.TXBnIF) {
 46043   00C43A  B877               	btfsc	119,4,c	;volatile
 46044                           
 46045                           ;../../VLCBlib_PIC/can18_ecan.c: 411:         checkTxFifo();
 46046   00C43C  ECDD  F02B         	call	i2_checkTxFifo	;wreg free
 46047                           
 46048                           ;../../VLCBlib_PIC/can18_ecan.c: 413:     checkCANTimeout();
 46049                           
 46050                           ;../../VLCBlib_PIC/can18_ecan.c: 412:     }
 46051   00C440  EC6E  F05B         	call	i2_checkCANTimeout	;wreg free
 46052   00C444  0012               	return		;funcret
 46053   00C446                     __end_ofi2_canIsr:
 46054                           	callstack 0
 46055                           
 46056 ;; *************** function i2_checkCANTimeout *****************
 46057 ;; Defined at:
 46058 ;;		line 766 in file "../../VLCBlib_PIC/can18_ecan.c"
 46059 ;; Parameters:    Size  Location     Type
 46060 ;;		None
 46061 ;; Auto vars:     Size  Location     Type
 46062 ;;		None
 46063 ;; Return value:  Size  Location     Type
 46064 ;;                  1    wreg      void 
 46065 ;; Registers used:
 46066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46067 ;; Tracked objects:
 46068 ;;		On entry : 0/0
 46069 ;;		On exit  : 0/0
 46070 ;;		Unchanged: 0/0
 46071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46074 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46075 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46076 ;;Total ram usage:        4 bytes
 46077 ;; Hardware stack levels used: 1
 46078 ;; Hardware stack levels required when called: 2
 46079 ;; This function calls:
 46080 ;;		i2_checkTxFifo
 46081 ;;		i2_tickGet
 46082 ;;		i2_updateModuleErrorStatus
 46083 ;; This function is called by:
 46084 ;;		i2_canIsr
 46085 ;; This function uses a non-reentrant model
 46086 ;;
 46087                           
 46088                           	psect	text214
 46089   00B6DC                     __ptext214:
 46090                           	callstack 0
 46091   00B6DC                     i2_checkCANTimeout:
 46092                           	callstack 2
 46093                           
 46094                           ;../../VLCBlib_PIC/can18_ecan.c: 767:     if (canTransmitTimeout.val != 0) {
 46095                           
 46096                           ;incstack = 0
 46097   00B6DC  502F               	movf	_canTransmitTimeout^0,w,c
 46098   00B6DE  1030               	iorwf	(_canTransmitTimeout+1)^0,w,c
 46099   00B6E0  1031               	iorwf	(_canTransmitTimeout+2)^0,w,c
 46100   00B6E2  1032               	iorwf	(_canTransmitTimeout+3)^0,w,c
 46101   00B6E4  B4D8               	btfsc	status,2,c
 46102   00B6E6  0012               	return	
 46103                           
 46104                           ;../../VLCBlib_PIC/can18_ecan.c: 768:         if ((tickGet() - canTransmitTimeout.val) >
      +                           62500) {
 46105   00B6E8  EC12  F05A         	call	i2_tickGet	;wreg free
 46106   00B6EC  502F               	movf	_canTransmitTimeout^0,w,c
 46107   00B6EE  5C01               	subwf	?i2_tickGet^0,w,c
 46108   00B6F0  6E16               	movwf	??i2_checkCANTimeout^0,c
 46109   00B6F2  5030               	movf	(_canTransmitTimeout+1)^0,w,c
 46110   00B6F4  5802               	subwfb	(?i2_tickGet+1)^0,w,c
 46111   00B6F6  6E17               	movwf	(??i2_checkCANTimeout+1)^0,c
 46112   00B6F8  5031               	movf	(_canTransmitTimeout+2)^0,w,c
 46113   00B6FA  5803               	subwfb	(?i2_tickGet+2)^0,w,c
 46114   00B6FC  6E18               	movwf	(??i2_checkCANTimeout+2)^0,c
 46115   00B6FE  5032               	movf	(_canTransmitTimeout+3)^0,w,c
 46116   00B700  5804               	subwfb	(?i2_tickGet+3)^0,w,c
 46117   00B702  6E19               	movwf	(??i2_checkCANTimeout+3)^0,c
 46118   00B704  5019               	movf	(??i2_checkCANTimeout+3)^0,w,c
 46119   00B706  1018               	iorwf	(??i2_checkCANTimeout+2)^0,w,c
 46120   00B708  E106               	bnz	i2u1494_40
 46121   00B70A  0E25               	movlw	37
 46122   00B70C  5C16               	subwf	??i2_checkCANTimeout^0,w,c
 46123   00B70E  0EF4               	movlw	244
 46124   00B710  5817               	subwfb	(??i2_checkCANTimeout+1)^0,w,c
 46125   00B712  A0D8               	btfss	status,0,c
 46126   00B714  0012               	return	
 46127   00B716                     i2u1494_40:
 46128                           
 46129                           ;../../VLCBlib_PIC/can18_ecan.c: 769:             canTransmitFailed = 1;
 46130   00B716  0E01               	movlw	1
 46131   00B718  0100               	movlb	0	; () banked
 46132   00B71A  6FC2               	movwf	_canTransmitFailed& (0+255),b
 46133                           
 46134                           ; BSR set to: 0
 46135                           ;../../VLCBlib_PIC/can18_ecan.c: 770:             TXB0CONbits.TXREQ = 0;
 46136   00B71C  010F               	movlb	15	; () banked
 46137   00B71E  9720               	bcf	32,3,b	;volatile
 46138                           
 46139                           ; BSR set to: 15
 46140                           ;../../VLCBlib_PIC/can18_ecan.c: 771:             checkTxFifo();
 46141   00B720  ECDD  F02B         	call	i2_checkTxFifo	;wreg free
 46142                           
 46143                           ;../../VLCBlib_PIC/can18_ecan.c: 773:             canDiagnostics[0x02].asUint++;
 46144   00B724  0101               	movlb	1	; () banked
 46145   00B726  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46146   00B728  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 46147                           
 46148                           ; BSR set to: 1
 46149                           ;../../VLCBlib_PIC/can18_ecan.c: 774:             updateModuleErrorStatus();
 46150   00B72A  EC6E  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46151   00B72E  0012               	return		;funcret
 46152   00B730                     __end_ofi2_checkCANTimeout:
 46153                           	callstack 0
 46154                           
 46155 ;; *************** function i2_canTxError *****************
 46156 ;; Defined at:
 46157 ;;		line 785 in file "../../VLCBlib_PIC/can18_ecan.c"
 46158 ;; Parameters:    Size  Location     Type
 46159 ;;		None
 46160 ;; Auto vars:     Size  Location     Type
 46161 ;;		None
 46162 ;; Return value:  Size  Location     Type
 46163 ;;                  1    wreg      void 
 46164 ;; Registers used:
 46165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46166 ;; Tracked objects:
 46167 ;;		On entry : 0/0
 46168 ;;		On exit  : 0/0
 46169 ;;		Unchanged: 0/0
 46170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46175 ;;Total ram usage:        0 bytes
 46176 ;; Hardware stack levels used: 1
 46177 ;; Hardware stack levels required when called: 2
 46178 ;; This function calls:
 46179 ;;		i2_checkTxFifo
 46180 ;;		i2_updateModuleErrorStatus
 46181 ;; This function is called by:
 46182 ;;		i2_canIsr
 46183 ;; This function uses a non-reentrant model
 46184 ;;
 46185                           
 46186                           	psect	text215
 46187   00B18C                     __ptext215:
 46188                           	callstack 0
 46189   00B18C                     i2_canTxError:
 46190                           	callstack 2
 46191                           
 46192                           ;../../VLCBlib_PIC/can18_ecan.c: 786:     if (TXB0CONbits.TXLARB) {
 46193                           
 46194                           ;incstack = 0
 46195   00B18C  010F               	movlb	15	; () banked
 46196   00B18E  AB20               	btfss	32,5,b	;volatile
 46197   00B190  D012               	goto	i2l15448
 46198                           
 46199                           ; BSR set to: 15
 46200                           ;../../VLCBlib_PIC/can18_ecan.c: 787:         canTransmitFailed = 1;
 46201   00B192  0E01               	movlw	1
 46202   00B194  0100               	movlb	0	; () banked
 46203   00B196  6FC2               	movwf	_canTransmitFailed& (0+255),b
 46204                           
 46205                           ;../../VLCBlib_PIC/can18_ecan.c: 788:         canTransmitTimeout.val = 0;
 46206   00B198  0E00               	movlw	0
 46207   00B19A  6E2F               	movwf	_canTransmitTimeout^0,c
 46208   00B19C  0E00               	movlw	0
 46209   00B19E  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46210   00B1A0  0E00               	movlw	0
 46211   00B1A2  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46212   00B1A4  0E00               	movlw	0
 46213   00B1A6  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46214                           
 46215                           ; BSR set to: 0
 46216                           ;../../VLCBlib_PIC/can18_ecan.c: 789:         TXB0CONbits.TXREQ = 0;
 46217   00B1A8  010F               	movlb	15	; () banked
 46218   00B1AA  9720               	bcf	32,3,b	;volatile
 46219                           
 46220                           ; BSR set to: 15
 46221                           ;../../VLCBlib_PIC/can18_ecan.c: 791:         canDiagnostics[0x0C].asUint++;
 46222   00B1AC  0101               	movlb	1	; () banked
 46223   00B1AE  4B7F               	infsnz	(_canDiagnostics+24)& (0+255),f,b
 46224   00B1B0  2B80               	incf	(_canDiagnostics+25)& (0+255),f,b
 46225                           
 46226                           ; BSR set to: 1
 46227                           ;../../VLCBlib_PIC/can18_ecan.c: 792:         updateModuleErrorStatus();
 46228   00B1B2  EC6E  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46229   00B1B6                     i2l15448:
 46230                           
 46231                           ;../../VLCBlib_PIC/can18_ecan.c: 795:     if (TXB0CONbits.TXERR) {
 46232   00B1B6  010F               	movlb	15	; () banked
 46233   00B1B8  A920               	btfss	32,4,b	;volatile
 46234   00B1BA  D012               	goto	i2l15458
 46235                           
 46236                           ; BSR set to: 15
 46237                           ;../../VLCBlib_PIC/can18_ecan.c: 796:         canTransmitFailed = 1;
 46238   00B1BC  0E01               	movlw	1
 46239   00B1BE  0100               	movlb	0	; () banked
 46240   00B1C0  6FC2               	movwf	_canTransmitFailed& (0+255),b
 46241                           
 46242                           ;../../VLCBlib_PIC/can18_ecan.c: 797:         canTransmitTimeout.val = 0;
 46243   00B1C2  0E00               	movlw	0
 46244   00B1C4  6E2F               	movwf	_canTransmitTimeout^0,c
 46245   00B1C6  0E00               	movlw	0
 46246   00B1C8  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46247   00B1CA  0E00               	movlw	0
 46248   00B1CC  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46249   00B1CE  0E00               	movlw	0
 46250   00B1D0  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46251                           
 46252                           ; BSR set to: 0
 46253                           ;../../VLCBlib_PIC/can18_ecan.c: 798:         TXB0CONbits.TXREQ = 0;
 46254   00B1D2  010F               	movlb	15	; () banked
 46255   00B1D4  9720               	bcf	32,3,b	;volatile
 46256                           
 46257                           ; BSR set to: 15
 46258                           ;../../VLCBlib_PIC/can18_ecan.c: 800:         canDiagnostics[0x02].asUint++;
 46259   00B1D6  0101               	movlb	1	; () banked
 46260   00B1D8  4B6B               	infsnz	(_canDiagnostics+4)& (0+255),f,b
 46261   00B1DA  2B6C               	incf	(_canDiagnostics+5)& (0+255),f,b
 46262                           
 46263                           ; BSR set to: 1
 46264                           ;../../VLCBlib_PIC/can18_ecan.c: 801:         updateModuleErrorStatus();
 46265   00B1DC  EC6E  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46266   00B1E0                     i2l15458:
 46267                           
 46268                           ;../../VLCBlib_PIC/can18_ecan.c: 804:     if (canTransmitFailed) {
 46269   00B1E0  0100               	movlb	0	; () banked
 46270   00B1E2  51C2               	movf	_canTransmitFailed& (0+255),w,b
 46271   00B1E4  A4D8               	btfss	status,2,c
 46272                           
 46273                           ; BSR set to: 0
 46274                           ;../../VLCBlib_PIC/can18_ecan.c: 805:         checkTxFifo();
 46275   00B1E6  ECDD  F02B         	call	i2_checkTxFifo	;wreg free
 46276                           
 46277                           ;../../VLCBlib_PIC/can18_ecan.c: 807:     PIR5bits.ERRIF = 0;
 46278   00B1EA  9A77               	bcf	119,5,c	;volatile
 46279   00B1EC  0012               	return		;funcret
 46280   00B1EE                     __end_ofi2_canTxError:
 46281                           	callstack 0
 46282                           
 46283 ;; *************** function i2_checkTxFifo *****************
 46284 ;; Defined at:
 46285 ;;		line 695 in file "../../VLCBlib_PIC/can18_ecan.c"
 46286 ;; Parameters:    Size  Location     Type
 46287 ;;		None
 46288 ;; Auto vars:     Size  Location     Type
 46289 ;;  mp              2   19[COMRAM] PTR struct Message
 46290 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46291 ;;  m               2   17[COMRAM] PTR struct Message
 46292 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 46293 ;; Return value:  Size  Location     Type
 46294 ;;                  1    wreg      void 
 46295 ;; Registers used:
 46296 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46297 ;; Tracked objects:
 46298 ;;		On entry : 0/0
 46299 ;;		On exit  : 0/0
 46300 ;;		Unchanged: 0/0
 46301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46303 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46304 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46305 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46306 ;;Total ram usage:        9 bytes
 46307 ;; Hardware stack levels used: 1
 46308 ;; Hardware stack levels required when called: 1
 46309 ;; This function calls:
 46310 ;;		i2_getNextWriteMessage
 46311 ;;		i2_isEvent
 46312 ;;		i2_pop
 46313 ;;		i2_tickGet
 46314 ;;		i2_updateModuleErrorStatus
 46315 ;; This function is called by:
 46316 ;;		i2_canIsr
 46317 ;;		i2_checkCANTimeout
 46318 ;;		i2_canTxError
 46319 ;; This function uses a non-reentrant model
 46320 ;;
 46321                           
 46322                           	psect	text216
 46323   0057BA                     __ptext216:
 46324                           	callstack 0
 46325   0057BA                     i2_checkTxFifo:
 46326                           	callstack 3
 46327                           
 46328                           ;../../VLCBlib_PIC/can18_ecan.c: 696:     Message * mp;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          698:     Message * m;;../../VLCBlib_PIC/can18_ecan.c: 701:     PIR5bits.TXBnIF = 0;
 46329                           
 46330                           ;incstack = 0
 46331   0057BA  9877               	bcf	119,4,c	;volatile
 46332                           
 46333                           ;../../VLCBlib_PIC/can18_ecan.c: 702:     if (!TXB0CONbits.TXREQ) {
 46334   0057BC  010F               	movlb	15	; () banked
 46335   0057BE  B720               	btfsc	32,3,b	;volatile
 46336   0057C0  D142               	goto	i2l2510
 46337                           
 46338                           ; BSR set to: 15
 46339                           ;../../VLCBlib_PIC/can18_ecan.c: 703:         mp = pop(&txQueue);
 46340   0057C2  0E48               	movlw	low _txQueue
 46341   0057C4  6E01               	movwf	i2pop@q^0,c
 46342   0057C6  ECA6  F04E         	call	i2_pop	;wreg free
 46343   0057CA  C001  F014         	movff	?i2_pop,i2checkTxFifo@mp
 46344   0057CE  C002  F015         	movff	?i2_pop+1,i2checkTxFifo@mp+1
 46345                           
 46346                           ;../../VLCBlib_PIC/can18_ecan.c: 704:         if (mp != ((void*)0)) {
 46347   0057D2  5014               	movf	i2checkTxFifo@mp^0,w,c
 46348   0057D4  1015               	iorwf	(i2checkTxFifo@mp+1)^0,w,c
 46349   0057D6  B4D8               	btfsc	status,2,c
 46350   0057D8  D128               	goto	i2l14040
 46351                           
 46352                           ;../../VLCBlib_PIC/can18_ecan.c: 706:             TXB0SIDH = canPri[priorities[mp->opc]]
      +                           | ((canId & 0x78) >> 3);
 46353   0057DA  EE20 F001          	lfsr	2,1
 46354   0057DE  5014               	movf	i2checkTxFifo@mp^0,w,c
 46355   0057E0  26D9               	addwf	fsr2l,f,c
 46356   0057E2  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46357   0057E4  22DA               	addwfc	fsr2h,f,c
 46358   0057E6  50DF               	movf	indf2,w,c
 46359   0057E8  6E0D               	movwf	??i2_checkTxFifo^0,c
 46360   0057EA  6A0E               	clrf	(??i2_checkTxFifo+1)^0,c
 46361   0057EC  0E35               	movlw	low _priorities
 46362   0057EE  240D               	addwf	??i2_checkTxFifo^0,w,c
 46363   0057F0  6EF6               	movwf	tblptrl,c
 46364   0057F2  0EED               	movlw	high _priorities
 46365   0057F4  200E               	addwfc	(??i2_checkTxFifo+1)^0,w,c
 46366   0057F6  6EF7               	movwf	tblptrh,c
 46367   0057F8                     	if	1	;There are 3 active tblptr bytes
 46368   0057F8  6AF8               	clrf	tblptru,c
 46369   0057FA  0E00               	movlw	low (__mediumconst shr (0+16))
 46370   0057FC  22F8               	addwfc	tblptru,f,c
 46371   0057FE                     	endif
 46372   0057FE  0008               	tblrd		*
 46373   005800  50F5               	movf	tablat,w,c
 46374   005802  6E0F               	movwf	(??i2_checkTxFifo+2)^0,c
 46375   005804  6A10               	clrf	(??i2_checkTxFifo+3)^0,c
 46376   005806  0E87               	movlw	low _canPri
 46377   005808  240F               	addwf	(??i2_checkTxFifo+2)^0,w,c
 46378   00580A  6EF6               	movwf	tblptrl,c
 46379   00580C  0EEE               	movlw	high _canPri
 46380   00580E  2010               	addwfc	(??i2_checkTxFifo+3)^0,w,c
 46381   005810  6EF7               	movwf	tblptrh,c
 46382   005812                     	if	1	;There are 3 active tblptr bytes
 46383   005812  6AF8               	clrf	tblptru,c
 46384   005814  0E00               	movlw	low (__mediumconst shr (0+16))
 46385   005816  22F8               	addwfc	tblptru,f,c
 46386   005818                     	endif
 46387   005818  0008               	tblrd		*
 46388   00581A  CFF5 F011          	movff	tablat,??i2_checkTxFifo+4
 46389   00581E  0100               	movlb	0	; () banked
 46390   005820  39C3               	swapf	_canId& (0+255),w,b
 46391   005822  46E8               	rlncf	wreg,f,c
 46392   005824  0B1F               	andlw	31
 46393   005826  0B0F               	andlw	15
 46394   005828  1011               	iorwf	(??i2_checkTxFifo+4)^0,w,c
 46395   00582A  010F               	movlb	15	; () banked
 46396   00582C  6F21               	movwf	33,b	;volatile
 46397                           
 46398                           ; BSR set to: 15
 46399                           ;../../VLCBlib_PIC/can18_ecan.c: 707:             TXB0SIDL = (uint8_t)((canId & 0x07) <<
      +                           5);
 46400   00582E  C0C3  F00D         	movff	_canId,??i2_checkTxFifo
 46401   005832  0E07               	movlw	7
 46402   005834  160D               	andwf	??i2_checkTxFifo^0,f,c
 46403   005836  0E05               	movlw	5
 46404   005838  6E0E               	movwf	(??i2_checkTxFifo+1)^0,c
 46405   00583A                     i2u1290_45:
 46406   00583A  90D8               	bcf	status,0,c
 46407   00583C  360D               	rlcf	??i2_checkTxFifo^0,f,c
 46408   00583E  2E0E               	decfsz	(??i2_checkTxFifo+1)^0,f,c
 46409   005840  D7FC               	goto	i2u1290_45
 46410   005842  500D               	movf	??i2_checkTxFifo^0,w,c
 46411   005844  6F22               	movwf	34,b	;volatile
 46412                           
 46413                           ; BSR set to: 15
 46414                           ;../../VLCBlib_PIC/can18_ecan.c: 708:             TXB0D0 = mp->opc;
 46415   005846  EE20 F001          	lfsr	2,1
 46416   00584A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46417   00584C  26D9               	addwf	fsr2l,f,c
 46418   00584E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46419   005850  22DA               	addwfc	fsr2h,f,c
 46420   005852  50DF               	movf	indf2,w,c
 46421   005854  6F26               	movwf	38,b	;volatile
 46422                           
 46423                           ; BSR set to: 15
 46424                           ;../../VLCBlib_PIC/can18_ecan.c: 709:             TXB0D1 = mp->bytes[0];
 46425   005856  EE20 F002          	lfsr	2,2
 46426   00585A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46427   00585C  26D9               	addwf	fsr2l,f,c
 46428   00585E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46429   005860  22DA               	addwfc	fsr2h,f,c
 46430   005862  50DF               	movf	indf2,w,c
 46431   005864  6F27               	movwf	39,b	;volatile
 46432                           
 46433                           ; BSR set to: 15
 46434                           ;../../VLCBlib_PIC/can18_ecan.c: 710:             TXB0D2 = mp->bytes[1];
 46435   005866  EE20 F003          	lfsr	2,3
 46436   00586A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46437   00586C  26D9               	addwf	fsr2l,f,c
 46438   00586E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46439   005870  22DA               	addwfc	fsr2h,f,c
 46440   005872  50DF               	movf	indf2,w,c
 46441   005874  6F28               	movwf	40,b	;volatile
 46442                           
 46443                           ; BSR set to: 15
 46444                           ;../../VLCBlib_PIC/can18_ecan.c: 711:             TXB0D3 = mp->bytes[2];
 46445   005876  EE20 F004          	lfsr	2,4
 46446   00587A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46447   00587C  26D9               	addwf	fsr2l,f,c
 46448   00587E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46449   005880  22DA               	addwfc	fsr2h,f,c
 46450   005882  50DF               	movf	indf2,w,c
 46451   005884  6F29               	movwf	41,b	;volatile
 46452                           
 46453                           ; BSR set to: 15
 46454                           ;../../VLCBlib_PIC/can18_ecan.c: 712:             TXB0D4 = mp->bytes[3];
 46455   005886  EE20 F005          	lfsr	2,5
 46456   00588A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46457   00588C  26D9               	addwf	fsr2l,f,c
 46458   00588E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46459   005890  22DA               	addwfc	fsr2h,f,c
 46460   005892  50DF               	movf	indf2,w,c
 46461   005894  6F2A               	movwf	42,b	;volatile
 46462                           
 46463                           ; BSR set to: 15
 46464                           ;../../VLCBlib_PIC/can18_ecan.c: 713:             TXB0D5 = mp->bytes[4];
 46465   005896  EE20 F006          	lfsr	2,6
 46466   00589A  5014               	movf	i2checkTxFifo@mp^0,w,c
 46467   00589C  26D9               	addwf	fsr2l,f,c
 46468   00589E  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46469   0058A0  22DA               	addwfc	fsr2h,f,c
 46470   0058A2  50DF               	movf	indf2,w,c
 46471   0058A4  6F2B               	movwf	43,b	;volatile
 46472                           
 46473                           ; BSR set to: 15
 46474                           ;../../VLCBlib_PIC/can18_ecan.c: 714:             TXB0D6 = mp->bytes[5];
 46475   0058A6  EE20 F007          	lfsr	2,7
 46476   0058AA  5014               	movf	i2checkTxFifo@mp^0,w,c
 46477   0058AC  26D9               	addwf	fsr2l,f,c
 46478   0058AE  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46479   0058B0  22DA               	addwfc	fsr2h,f,c
 46480   0058B2  50DF               	movf	indf2,w,c
 46481   0058B4  6F2C               	movwf	44,b	;volatile
 46482                           
 46483                           ; BSR set to: 15
 46484                           ;../../VLCBlib_PIC/can18_ecan.c: 715:             TXB0D7 = mp->bytes[6];
 46485   0058B6  EE20 F008          	lfsr	2,8
 46486   0058BA  5014               	movf	i2checkTxFifo@mp^0,w,c
 46487   0058BC  26D9               	addwf	fsr2l,f,c
 46488   0058BE  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46489   0058C0  22DA               	addwfc	fsr2h,f,c
 46490   0058C2  50DF               	movf	indf2,w,c
 46491   0058C4  6F2D               	movwf	45,b	;volatile
 46492                           
 46493                           ; BSR set to: 15
 46494                           ;../../VLCBlib_PIC/can18_ecan.c: 716:             TXB0DLC = mp->len;
 46495   0058C6  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 46496   0058CA  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 46497   0058CE  50DF               	movf	indf2,w,c
 46498   0058D0  6F25               	movwf	37,b	;volatile
 46499                           
 46500                           ; BSR set to: 15
 46501                           ;../../VLCBlib_PIC/can18_ecan.c: 718:             canTransmitTimeout.val = tickGet();
 46502   0058D2  EC12  F05A         	call	i2_tickGet	;wreg free
 46503   0058D6  C001  F02F         	movff	?i2_tickGet,_canTransmitTimeout
 46504   0058DA  C002  F030         	movff	?i2_tickGet+1,_canTransmitTimeout+1
 46505   0058DE  C003  F031         	movff	?i2_tickGet+2,_canTransmitTimeout+2
 46506   0058E2  C004  F032         	movff	?i2_tickGet+3,_canTransmitTimeout+3
 46507                           
 46508                           ;../../VLCBlib_PIC/can18_ecan.c: 719:             canTransmitFailed = 0;
 46509   0058E6  0E00               	movlw	0
 46510   0058E8  0100               	movlb	0	; () banked
 46511   0058EA  6FC2               	movwf	_canTransmitFailed& (0+255),b
 46512                           
 46513                           ; BSR set to: 0
 46514                           ;../../VLCBlib_PIC/can18_ecan.c: 720:             TXB0CONbits.TXREQ = 1;
 46515   0058EC  010F               	movlb	15	; () banked
 46516   0058EE  8720               	bsf	32,3,b	;volatile
 46517                           
 46518                           ; BSR set to: 15
 46519                           ;../../VLCBlib_PIC/can18_ecan.c: 721:             PIE5bits.TXBnIE = 1;
 46520   0058F0  8876               	bsf	118,4,c	;volatile
 46521                           
 46522                           ; BSR set to: 15
 46523                           ;../../VLCBlib_PIC/can18_ecan.c: 722:             canDiagnostics[0x06].asUint++;
 46524   0058F2  0101               	movlb	1	; () banked
 46525   0058F4  4B73               	infsnz	(_canDiagnostics+12)& (0+255),f,b
 46526   0058F6  2B74               	incf	(_canDiagnostics+13)& (0+255),f,b
 46527                           
 46528                           ; BSR set to: 1
 46529                           ;../../VLCBlib_PIC/can18_ecan.c: 725:             if (isEvent(mp->opc)) {
 46530   0058F8  EE20 F001          	lfsr	2,1
 46531   0058FC  5014               	movf	i2checkTxFifo@mp^0,w,c
 46532   0058FE  26D9               	addwf	fsr2l,f,c
 46533   005900  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46534   005902  22DA               	addwfc	fsr2h,f,c
 46535   005904  50DF               	movf	indf2,w,c
 46536   005906  EC46  F061         	call	i2_isEvent
 46537   00590A  0900               	iorlw	0
 46538   00590C  B4D8               	btfsc	status,2,c
 46539   00590E  0012               	return	
 46540                           
 46541                           ;../../VLCBlib_PIC/can18_ecan.c: 727:                 m = getNextWriteMessage(&rxQueue);
 46542   005910  0E4D               	movlw	low _rxQueue
 46543   005912  6E01               	movwf	i2getNextWriteMessage@q^0,c
 46544   005914  ECE6  F046         	call	i2_getNextWriteMessage	;wreg free
 46545   005918  C001  F012         	movff	?i2_getNextWriteMessage,i2checkTxFifo@m
 46546   00591C  C002  F013         	movff	?i2_getNextWriteMessage+1,i2checkTxFifo@m+1
 46547                           
 46548                           ;../../VLCBlib_PIC/can18_ecan.c: 728:                 if (m == ((void*)0)) {
 46549   005920  5012               	movf	i2checkTxFifo@m^0,w,c
 46550   005922  1013               	iorwf	(i2checkTxFifo@m+1)^0,w,c
 46551   005924  A4D8               	btfss	status,2,c
 46552   005926  D006               	goto	i2l14022
 46553                           
 46554                           ;../../VLCBlib_PIC/can18_ecan.c: 730:                     canDiagnostics[0x08].asUint++;
 46555   005928  0101               	movlb	1	; () banked
 46556   00592A  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 46557   00592C  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 46558                           
 46559                           ; BSR set to: 1
 46560                           ;../../VLCBlib_PIC/can18_ecan.c: 731:                     updateModuleErrorStatus();
 46561   00592E  EC6E  F062         	call	i2_updateModuleErrorStatus	;wreg free
 46562                           
 46563                           ;../../VLCBlib_PIC/can18_ecan.c: 733:                 } else {
 46564   005932  0012               	return	
 46565   005934                     i2l14022:
 46566                           
 46567                           ;../../VLCBlib_PIC/can18_ecan.c: 735:                     m->opc = mp->opc;
 46568   005934  EE20 F001          	lfsr	2,1
 46569   005938  5014               	movf	i2checkTxFifo@mp^0,w,c
 46570   00593A  26D9               	addwf	fsr2l,f,c
 46571   00593C  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46572   00593E  22DA               	addwfc	fsr2h,f,c
 46573   005940  EE10 F001          	lfsr	1,1
 46574   005944  5012               	movf	i2checkTxFifo@m^0,w,c
 46575   005946  26E1               	addwf	fsr1l,f,c
 46576   005948  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46577   00594A  22E2               	addwfc	fsr1h,f,c
 46578   00594C  CFDF FFE7          	movff	indf2,indf1
 46579                           
 46580                           ;../../VLCBlib_PIC/can18_ecan.c: 736:                     m->len = mp->len;
 46581   005950  C014  FFD9         	movff	i2checkTxFifo@mp,fsr2l
 46582   005954  C015  FFDA         	movff	i2checkTxFifo@mp+1,fsr2h
 46583   005958  C012  FFE1         	movff	i2checkTxFifo@m,fsr1l
 46584   00595C  C013  FFE2         	movff	i2checkTxFifo@m+1,fsr1h
 46585   005960  CFDF FFE7          	movff	indf2,indf1
 46586                           
 46587                           ;../../VLCBlib_PIC/can18_ecan.c: 737:                     m->bytes[0] = mp->bytes[0];
 46588   005964  EE20 F002          	lfsr	2,2
 46589   005968  5014               	movf	i2checkTxFifo@mp^0,w,c
 46590   00596A  26D9               	addwf	fsr2l,f,c
 46591   00596C  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46592   00596E  22DA               	addwfc	fsr2h,f,c
 46593   005970  EE10 F002          	lfsr	1,2
 46594   005974  5012               	movf	i2checkTxFifo@m^0,w,c
 46595   005976  26E1               	addwf	fsr1l,f,c
 46596   005978  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46597   00597A  22E2               	addwfc	fsr1h,f,c
 46598   00597C  CFDF FFE7          	movff	indf2,indf1
 46599                           
 46600                           ;../../VLCBlib_PIC/can18_ecan.c: 738:                     m->bytes[1] = mp->bytes[1];
 46601   005980  EE20 F003          	lfsr	2,3
 46602   005984  5014               	movf	i2checkTxFifo@mp^0,w,c
 46603   005986  26D9               	addwf	fsr2l,f,c
 46604   005988  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46605   00598A  22DA               	addwfc	fsr2h,f,c
 46606   00598C  EE10 F003          	lfsr	1,3
 46607   005990  5012               	movf	i2checkTxFifo@m^0,w,c
 46608   005992  26E1               	addwf	fsr1l,f,c
 46609   005994  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46610   005996  22E2               	addwfc	fsr1h,f,c
 46611   005998  CFDF FFE7          	movff	indf2,indf1
 46612                           
 46613                           ;../../VLCBlib_PIC/can18_ecan.c: 739:                     m->bytes[2] = mp->bytes[2];
 46614   00599C  EE20 F004          	lfsr	2,4
 46615   0059A0  5014               	movf	i2checkTxFifo@mp^0,w,c
 46616   0059A2  26D9               	addwf	fsr2l,f,c
 46617   0059A4  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46618   0059A6  22DA               	addwfc	fsr2h,f,c
 46619   0059A8  EE10 F004          	lfsr	1,4
 46620   0059AC  5012               	movf	i2checkTxFifo@m^0,w,c
 46621   0059AE  26E1               	addwf	fsr1l,f,c
 46622   0059B0  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46623   0059B2  22E2               	addwfc	fsr1h,f,c
 46624   0059B4  CFDF FFE7          	movff	indf2,indf1
 46625                           
 46626                           ;../../VLCBlib_PIC/can18_ecan.c: 740:                     m->bytes[3] = mp->bytes[3];
 46627   0059B8  EE20 F005          	lfsr	2,5
 46628   0059BC  5014               	movf	i2checkTxFifo@mp^0,w,c
 46629   0059BE  26D9               	addwf	fsr2l,f,c
 46630   0059C0  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46631   0059C2  22DA               	addwfc	fsr2h,f,c
 46632   0059C4  EE10 F005          	lfsr	1,5
 46633   0059C8  5012               	movf	i2checkTxFifo@m^0,w,c
 46634   0059CA  26E1               	addwf	fsr1l,f,c
 46635   0059CC  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46636   0059CE  22E2               	addwfc	fsr1h,f,c
 46637   0059D0  CFDF FFE7          	movff	indf2,indf1
 46638                           
 46639                           ;../../VLCBlib_PIC/can18_ecan.c: 741:                     m->bytes[4] = mp->bytes[4];
 46640   0059D4  EE20 F006          	lfsr	2,6
 46641   0059D8  5014               	movf	i2checkTxFifo@mp^0,w,c
 46642   0059DA  26D9               	addwf	fsr2l,f,c
 46643   0059DC  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46644   0059DE  22DA               	addwfc	fsr2h,f,c
 46645   0059E0  EE10 F006          	lfsr	1,6
 46646   0059E4  5012               	movf	i2checkTxFifo@m^0,w,c
 46647   0059E6  26E1               	addwf	fsr1l,f,c
 46648   0059E8  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46649   0059EA  22E2               	addwfc	fsr1h,f,c
 46650   0059EC  CFDF FFE7          	movff	indf2,indf1
 46651                           
 46652                           ;../../VLCBlib_PIC/can18_ecan.c: 742:                     m->bytes[5] = mp->bytes[5];
 46653   0059F0  EE20 F007          	lfsr	2,7
 46654   0059F4  5014               	movf	i2checkTxFifo@mp^0,w,c
 46655   0059F6  26D9               	addwf	fsr2l,f,c
 46656   0059F8  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46657   0059FA  22DA               	addwfc	fsr2h,f,c
 46658   0059FC  EE10 F007          	lfsr	1,7
 46659   005A00  5012               	movf	i2checkTxFifo@m^0,w,c
 46660   005A02  26E1               	addwf	fsr1l,f,c
 46661   005A04  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46662   005A06  22E2               	addwfc	fsr1h,f,c
 46663   005A08  CFDF FFE7          	movff	indf2,indf1
 46664                           
 46665                           ;../../VLCBlib_PIC/can18_ecan.c: 743:                     m->bytes[6] = mp->bytes[6];
 46666   005A0C  EE20 F008          	lfsr	2,8
 46667   005A10  5014               	movf	i2checkTxFifo@mp^0,w,c
 46668   005A12  26D9               	addwf	fsr2l,f,c
 46669   005A14  5015               	movf	(i2checkTxFifo@mp+1)^0,w,c
 46670   005A16  22DA               	addwfc	fsr2h,f,c
 46671   005A18  EE10 F008          	lfsr	1,8
 46672   005A1C  5012               	movf	i2checkTxFifo@m^0,w,c
 46673   005A1E  26E1               	addwf	fsr1l,f,c
 46674   005A20  5013               	movf	(i2checkTxFifo@m+1)^0,w,c
 46675   005A22  22E2               	addwfc	fsr1h,f,c
 46676   005A24  CFDF FFE7          	movff	indf2,indf1
 46677   005A28  0012               	return	
 46678   005A2A                     i2l14040:
 46679                           
 46680                           ;../../VLCBlib_PIC/can18_ecan.c: 749:             canTransmitTimeout.val = 0;
 46681   005A2A  0E00               	movlw	0
 46682   005A2C  6E2F               	movwf	_canTransmitTimeout^0,c
 46683   005A2E  0E00               	movlw	0
 46684   005A30  6E30               	movwf	(_canTransmitTimeout+1)^0,c
 46685   005A32  0E00               	movlw	0
 46686   005A34  6E31               	movwf	(_canTransmitTimeout+2)^0,c
 46687   005A36  0E00               	movlw	0
 46688   005A38  6E32               	movwf	(_canTransmitTimeout+3)^0,c
 46689                           
 46690                           ;../../VLCBlib_PIC/can18_ecan.c: 750:             TXB0CON = 0;
 46691   005A3A  0E00               	movlw	0
 46692   005A3C  010F               	movlb	15	; () banked
 46693   005A3E  6F20               	movwf	32,b	;volatile
 46694                           
 46695                           ; BSR set to: 15
 46696                           ;../../VLCBlib_PIC/can18_ecan.c: 751:             PIR5bits.TXBnIF = 0;
 46697   005A40  9877               	bcf	119,4,c	;volatile
 46698                           
 46699                           ; BSR set to: 15
 46700                           ;../../VLCBlib_PIC/can18_ecan.c: 752:             PIE5bits.TXBnIE = 0;
 46701   005A42  9876               	bcf	118,4,c	;volatile
 46702   005A44  0012               	return	
 46703   005A46                     i2l2510:
 46704                           
 46705                           ; BSR set to: 15
 46706                           ;../../VLCBlib_PIC/can18_ecan.c: 756:         PIR5bits.TXBnIF = 0;
 46707   005A46  9877               	bcf	119,4,c	;volatile
 46708                           
 46709                           ;../../VLCBlib_PIC/can18_ecan.c: 757:         PIE5bits.TXBnIE = 1;
 46710   005A48  8876               	bsf	118,4,c	;volatile
 46711   005A4A  0012               	return		;funcret
 46712   005A4C                     __end_ofi2_checkTxFifo:
 46713                           	callstack 0
 46714                           
 46715 ;; *************** function i2_tickGet *****************
 46716 ;; Defined at:
 46717 ;;		line 158 in file "../../VLCBlib_PIC/ticktime.c"
 46718 ;; Parameters:    Size  Location     Type
 46719 ;;		None
 46720 ;; Auto vars:     Size  Location     Type
 46721 ;;  currentTime     4    6[COMRAM] struct _TickValue
 46722 ;;  IntFlag1        1    5[COMRAM] unsigned char 
 46723 ;;  IntFlag2        1    4[COMRAM] unsigned char 
 46724 ;; Return value:  Size  Location     Type
 46725 ;;                  4    0[COMRAM] unsigned long 
 46726 ;; Registers used:
 46727 ;;		wreg, status,2, status,0
 46728 ;; Tracked objects:
 46729 ;;		On entry : 0/0
 46730 ;;		On exit  : 0/0
 46731 ;;		Unchanged: 0/0
 46732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46734 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46736 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46737 ;;Total ram usage:       10 bytes
 46738 ;; Hardware stack levels used: 1
 46739 ;; This function calls:
 46740 ;;		Nothing
 46741 ;; This function is called by:
 46742 ;;		i2_checkTxFifo
 46743 ;;		i2_checkCANTimeout
 46744 ;; This function uses a non-reentrant model
 46745 ;;
 46746                           
 46747                           	psect	text217
 46748   00B424                     __ptext217:
 46749                           	callstack 0
 46750   00B424                     i2_tickGet:
 46751                           	callstack 3
 46752                           
 46753                           ;../../VLCBlib_PIC/ticktime.c: 159:     TickValue currentTime;;../../VLCBlib_PIC/ticktim
      +                          e.c: 162:     uint8_t IntFlag1;;../../VLCBlib_PIC/ticktime.c: 163:     uint8_t IntFlag2;
      +                          ;../../VLCBlib_PIC/ticktime.c: 166:     currentTime.byte.b2 = 0;
 46754                           
 46755                           ;incstack = 0
 46756   00B424  0E00               	movlw	0
 46757   00B426  6E09               	movwf	(i2tickGet@currentTime+2)^0,c
 46758                           
 46759                           ;../../VLCBlib_PIC/ticktime.c: 167:     currentTime.byte.b3 = 0;
 46760   00B428  0E00               	movlw	0
 46761   00B42A  6E0A               	movwf	(i2tickGet@currentTime+3)^0,c
 46762                           
 46763                           ;../../VLCBlib_PIC/ticktime.c: 169:     INTCONbits.TMR0IE = 0;
 46764   00B42C  9AF2               	bcf	242,5,c	;volatile
 46765   00B42E                     i2l12778:
 46766                           
 46767                           ;../../VLCBlib_PIC/ticktime.c: 171:         IntFlag1 = INTCONbits.TMR0IF;
 46768   00B42E  0E00               	movlw	0
 46769   00B430  B4F2               	btfsc	242,2,c	;volatile
 46770   00B432  0E01               	movlw	1
 46771   00B434  6E06               	movwf	i2tickGet@IntFlag1^0,c
 46772                           
 46773                           ;../../VLCBlib_PIC/ticktime.c: 172:         currentTime.byte.b0 = TMR0L;
 46774   00B436  CFD6 F007          	movff	4054,i2tickGet@currentTime	;volatile
 46775                           
 46776                           ;../../VLCBlib_PIC/ticktime.c: 173:         currentTime.byte.b1 = TMR0H;
 46777   00B43A  CFD7 F008          	movff	4055,i2tickGet@currentTime+1	;volatile
 46778                           
 46779                           ;../../VLCBlib_PIC/ticktime.c: 174:         IntFlag2 = INTCONbits.TMR0IF;
 46780   00B43E  0E00               	movlw	0
 46781   00B440  B4F2               	btfsc	242,2,c	;volatile
 46782   00B442  0E01               	movlw	1
 46783   00B444  6E05               	movwf	i2tickGet@IntFlag2^0,c
 46784                           
 46785                           ;../../VLCBlib_PIC/ticktime.c: 175:     } while(IntFlag1 != IntFlag2);
 46786   00B446  5005               	movf	i2tickGet@IntFlag2^0,w,c
 46787   00B448  1806               	xorwf	i2tickGet@IntFlag1^0,w,c
 46788   00B44A  A4D8               	btfss	status,2,c
 46789   00B44C  D7F0               	goto	i2l12778
 46790                           
 46791                           ;../../VLCBlib_PIC/ticktime.c: 177:     if( IntFlag1 > 0 ) {
 46792   00B44E  5006               	movf	i2tickGet@IntFlag1^0,w,c
 46793   00B450  B4D8               	btfsc	status,2,c
 46794   00B452  D006               	goto	i2l12798
 46795                           
 46796                           ;../../VLCBlib_PIC/ticktime.c: 178:         INTCONbits.TMR0IF = 0;
 46797   00B454  94F2               	bcf	242,2,c	;volatile
 46798                           
 46799                           ;../../VLCBlib_PIC/ticktime.c: 179:         timerExtension1++;
 46800   00B456  0100               	movlb	0	; () banked
 46801   00B458  2BCA               	incf	_timerExtension1& (0+255),f,b	;volatile
 46802                           
 46803                           ; BSR set to: 0
 46804                           ;../../VLCBlib_PIC/ticktime.c: 180:         if(timerExtension1 == 0)
 46805   00B45A  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 46806   00B45C  B4D8               	btfsc	status,2,c
 46807                           
 46808                           ; BSR set to: 0
 46809                           ;../../VLCBlib_PIC/ticktime.c: 181:         {;../../VLCBlib_PIC/ticktime.c: 182:        
      +                               timerExtension2++;
 46810   00B45E  2BC9               	incf	_timerExtension2& (0+255),f,b	;volatile
 46811   00B460                     i2l12798:
 46812                           
 46813                           ;../../VLCBlib_PIC/ticktime.c: 187:     currentTime.byte.b2 += timerExtension1;
 46814   00B460  0100               	movlb	0	; () banked
 46815   00B462  51CA               	movf	_timerExtension1& (0+255),w,b	;volatile
 46816   00B464  2609               	addwf	(i2tickGet@currentTime+2)^0,f,c
 46817                           
 46818                           ; BSR set to: 0
 46819                           ;../../VLCBlib_PIC/ticktime.c: 188:     currentTime.byte.b3 += timerExtension2;
 46820   00B466  51C9               	movf	_timerExtension2& (0+255),w,b	;volatile
 46821   00B468  260A               	addwf	(i2tickGet@currentTime+3)^0,f,c
 46822                           
 46823                           ; BSR set to: 0
 46824                           ;../../VLCBlib_PIC/ticktime.c: 191:     INTCONbits.TMR0IE = 1;
 46825   00B46A  8AF2               	bsf	242,5,c	;volatile
 46826                           
 46827                           ; BSR set to: 0
 46828                           ;../../VLCBlib_PIC/ticktime.c: 193:     return currentTime.val;
 46829   00B46C  C007  F001         	movff	i2tickGet@currentTime,?i2_tickGet
 46830   00B470  C008  F002         	movff	i2tickGet@currentTime+1,?i2_tickGet+1
 46831   00B474  C009  F003         	movff	i2tickGet@currentTime+2,?i2_tickGet+2
 46832   00B478  C00A  F004         	movff	i2tickGet@currentTime+3,?i2_tickGet+3
 46833                           
 46834                           ; BSR set to: 0
 46835   00B47C  0012               	return		;funcret
 46836   00B47E                     __end_ofi2_tickGet:
 46837                           	callstack 0
 46838                           
 46839 ;; *************** function i2_pop *****************
 46840 ;; Defined at:
 46841 ;;		line 96 in file "../../VLCBlib_PIC/messageQueue.c"
 46842 ;; Parameters:    Size  Location     Type
 46843 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 46844 ;;		 -> txQueue(5), rxQueue(5), 
 46845 ;; Auto vars:     Size  Location     Type
 46846 ;;  ret             2    7[COMRAM] PTR struct Message
 46847 ;;		 -> txBuffers(72), rxBuffers(288), 
 46848 ;; Return value:  Size  Location     Type
 46849 ;;                  2    0[COMRAM] PTR struct Message
 46850 ;; Registers used:
 46851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46852 ;; Tracked objects:
 46853 ;;		On entry : 0/0
 46854 ;;		On exit  : 0/0
 46855 ;;		Unchanged: 0/0
 46856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46859 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46860 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46861 ;;Total ram usage:        9 bytes
 46862 ;; Hardware stack levels used: 1
 46863 ;; This function calls:
 46864 ;;		Nothing
 46865 ;; This function is called by:
 46866 ;;		i2_checkTxFifo
 46867 ;; This function uses a non-reentrant model
 46868 ;;
 46869                           
 46870                           	psect	text218
 46871   009D4C                     __ptext218:
 46872                           	callstack 0
 46873   009D4C                     i2_pop:
 46874                           	callstack 3
 46875                           
 46876                           ;../../VLCBlib_PIC/messageQueue.c: 97:     Message * ret;;../../VLCBlib_PIC/messageQueue
      +                          .c: 98:  if (q->writeIndex == q->readIndex) {
 46877                           
 46878                           ; BSR set to: 0
 46879                           ;incstack = 0
 46880   009D4C  5001               	movf	i2pop@q^0,w,c
 46881   009D4E  6ED9               	movwf	fsr2l,c
 46882   009D50  6ADA               	clrf	fsr2h,c
 46883   009D52  0E02               	movlw	2
 46884   009D54  26D9               	addwf	fsr2l,f,c
 46885   009D56  5001               	movf	i2pop@q^0,w,c
 46886   009D58  6EE1               	movwf	fsr1l,c
 46887   009D5A  6AE2               	clrf	fsr1h,c
 46888   009D5C  0E03               	movlw	3
 46889   009D5E  26E1               	addwf	fsr1l,f,c
 46890   009D60  50DE               	movf	postinc2,w,c
 46891   009D62  18E6               	xorwf	postinc1,w,c
 46892   009D64  A4D8               	btfss	status,2,c
 46893   009D66  D005               	goto	i2l12884
 46894                           
 46895                           ;../../VLCBlib_PIC/messageQueue.c: 99:         return ((void*)0);
 46896   009D68  0E00               	movlw	0
 46897   009D6A  6E01               	movwf	?i2_pop^0,c
 46898   009D6C  0E00               	movlw	0
 46899   009D6E  6E02               	movwf	(?i2_pop+1)^0,c
 46900   009D70  0012               	return	
 46901   009D72                     i2l12884:
 46902                           
 46903                           ;../../VLCBlib_PIC/messageQueue.c: 101:  ret = &(q->messages[q->readIndex++]);
 46904   009D72  5001               	movf	i2pop@q^0,w,c
 46905   009D74  6ED9               	movwf	fsr2l,c
 46906   009D76  6ADA               	clrf	fsr2h,c
 46907   009D78  0E02               	movlw	2
 46908   009D7A  26D9               	addwf	fsr2l,f,c
 46909   009D7C  50DF               	movf	indf2,w,c
 46910   009D7E  6E03               	movwf	??i2_pop^0,c
 46911   009D80  5003               	movf	??i2_pop^0,w,c
 46912   009D82  0D09               	mullw	9
 46913   009D84  CFF3 F004          	movff	prodl,??i2_pop+1
 46914   009D88  CFF4 F005          	movff	prodh,??i2_pop+2
 46915   009D8C  5001               	movf	i2pop@q^0,w,c
 46916   009D8E  6ED9               	movwf	fsr2l,c
 46917   009D90  6ADA               	clrf	fsr2h,c
 46918   009D92  CFDE F006          	movff	postinc2,??i2_pop+3
 46919   009D96  CFDD F007          	movff	postdec2,??i2_pop+4
 46920   009D9A  5004               	movf	(??i2_pop+1)^0,w,c
 46921   009D9C  2406               	addwf	(??i2_pop+3)^0,w,c
 46922   009D9E  6E08               	movwf	i2pop@ret^0,c
 46923   009DA0  5005               	movf	(??i2_pop+2)^0,w,c
 46924   009DA2  2007               	addwfc	(??i2_pop+4)^0,w,c
 46925   009DA4  6E09               	movwf	(i2pop@ret+1)^0,c
 46926   009DA6  5001               	movf	i2pop@q^0,w,c
 46927   009DA8  6ED9               	movwf	fsr2l,c
 46928   009DAA  6ADA               	clrf	fsr2h,c
 46929   009DAC  0E02               	movlw	2
 46930   009DAE  26D9               	addwf	fsr2l,f,c
 46931   009DB0  2ADF               	incf	indf2,f,c
 46932                           
 46933                           ;../../VLCBlib_PIC/messageQueue.c: 102:  if (q->readIndex >= q->size) q->readIndex = 0;
 46934   009DB2  5001               	movf	i2pop@q^0,w,c
 46935   009DB4  6ED9               	movwf	fsr2l,c
 46936   009DB6  6ADA               	clrf	fsr2h,c
 46937   009DB8  0E04               	movlw	4
 46938   009DBA  26D9               	addwf	fsr2l,f,c
 46939   009DBC  5001               	movf	i2pop@q^0,w,c
 46940   009DBE  6EE1               	movwf	fsr1l,c
 46941   009DC0  6AE2               	clrf	fsr1h,c
 46942   009DC2  0E02               	movlw	2
 46943   009DC4  26E1               	addwf	fsr1l,f,c
 46944   009DC6  50DE               	movf	postinc2,w,c
 46945   009DC8  5CE6               	subwf	postinc1,w,c
 46946   009DCA  A0D8               	btfss	status,0,c
 46947   009DCC  D006               	goto	i2l12892
 46948   009DCE  5001               	movf	i2pop@q^0,w,c
 46949   009DD0  6ED9               	movwf	fsr2l,c
 46950   009DD2  6ADA               	clrf	fsr2h,c
 46951   009DD4  0E02               	movlw	2
 46952   009DD6  26D9               	addwf	fsr2l,f,c
 46953   009DD8  6ADF               	clrf	indf2,c
 46954   009DDA                     i2l12892:
 46955                           
 46956                           ;../../VLCBlib_PIC/messageQueue.c: 103:  return ret;
 46957   009DDA  C008  F001         	movff	i2pop@ret,?i2_pop
 46958   009DDE  C009  F002         	movff	i2pop@ret+1,?i2_pop+1
 46959   009DE2  0012               	return		;funcret
 46960   009DE4                     __end_ofi2_pop:
 46961                           	callstack 0
 46962                           
 46963 ;; *************** function i2_isEvent *****************
 46964 ;; Defined at:
 46965 ;;		line 1117 in file "../../VLCBlib_PIC/vlcb.c"
 46966 ;; Parameters:    Size  Location     Type
 46967 ;;  opc             1    wreg     unsigned char 
 46968 ;; Auto vars:     Size  Location     Type
 46969 ;;  opc             1    1[COMRAM] unsigned char 
 46970 ;; Return value:  Size  Location     Type
 46971 ;;                  1    wreg      enum E12760
 46972 ;; Registers used:
 46973 ;;		wreg, status,2, status,0
 46974 ;; Tracked objects:
 46975 ;;		On entry : 0/0
 46976 ;;		On exit  : 0/0
 46977 ;;		Unchanged: 0/0
 46978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 46979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46980 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 46983 ;;Total ram usage:        2 bytes
 46984 ;; Hardware stack levels used: 1
 46985 ;; This function calls:
 46986 ;;		Nothing
 46987 ;; This function is called by:
 46988 ;;		i2_checkTxFifo
 46989 ;; This function uses a non-reentrant model
 46990 ;;
 46991                           
 46992                           	psect	text219
 46993   00C28C                     __ptext219:
 46994                           	callstack 0
 46995   00C28C                     i2_isEvent:
 46996                           	callstack 3
 46997                           
 46998                           ;incstack = 0
 46999                           ;i2isEvent@opc stored from wreg
 47000   00C28C  6E02               	movwf	i2isEvent@opc^0,c
 47001                           
 47002                           ;../../VLCBlib_PIC/vlcb.c: 1118:     return (((opc & 0b10010000) == 0b10010000) && ((~op
      +                          c & 0b00000110)== 0b00000110)) ? TRUE : FALSE;
 47003   00C28E  0E00               	movlw	0
 47004   00C290  6E01               	movwf	i2_isEvent$4867^0,c
 47005   00C292  5002               	movf	i2isEvent@opc^0,w,c
 47006   00C294  0B90               	andlw	144
 47007   00C296  0A90               	xorlw	144
 47008   00C298  A4D8               	btfss	status,2,c
 47009   00C29A  D008               	goto	i2l2018
 47010   00C29C  5002               	movf	i2isEvent@opc^0,w,c
 47011   00C29E  0AFF               	xorlw	255
 47012   00C2A0  0B06               	andlw	6
 47013   00C2A2  0A06               	xorlw	6
 47014   00C2A4  A4D8               	btfss	status,2,c
 47015   00C2A6  D002               	goto	i2l2018
 47016   00C2A8  0E01               	movlw	1
 47017   00C2AA  6E01               	movwf	i2_isEvent$4867^0,c
 47018   00C2AC                     i2l2018:
 47019   00C2AC  5001               	movf	i2_isEvent$4867^0,w,c
 47020   00C2AE  0012               	return		;funcret
 47021   00C2B0                     __end_ofi2_isEvent:
 47022                           	callstack 0
 47023                           
 47024 ;; *************** function i2_canFillRxFifo *****************
 47025 ;; Defined at:
 47026 ;;		line 848 in file "../../VLCBlib_PIC/can18_ecan.c"
 47027 ;; Parameters:    Size  Location     Type
 47028 ;;		None
 47029 ;; Auto vars:     Size  Location     Type
 47030 ;;  ptr             2   14[COMRAM] PTR unsigned char 
 47031 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 47032 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 47033 ;;		 -> NULL(0), 
 47034 ;;  m               2   12[COMRAM] PTR struct Message
 47035 ;;		 -> txBuffers(72), rxBuffers(288), NULL(0), 
 47036 ;;  hiIndex         1    0        unsigned char 
 47037 ;; Return value:  Size  Location     Type
 47038 ;;                  1    wreg      void 
 47039 ;; Registers used:
 47040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47041 ;; Tracked objects:
 47042 ;;		On entry : 0/0
 47043 ;;		On exit  : 0/0
 47044 ;;		Unchanged: 0/0
 47045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47047 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47050 ;;Total ram usage:        4 bytes
 47051 ;; Hardware stack levels used: 1
 47052 ;; Hardware stack levels required when called: 1
 47053 ;; This function calls:
 47054 ;;		i2_getBufferPointer
 47055 ;;		i2_getNextWriteMessage
 47056 ;;		i2_updateModuleErrorStatus
 47057 ;; This function is called by:
 47058 ;;		i2_canIsr
 47059 ;; This function uses a non-reentrant model
 47060 ;;
 47061                           
 47062                           	psect	text220
 47063   0073E0                     __ptext220:
 47064                           	callstack 0
 47065   0073E0                     i2_canFillRxFifo:
 47066                           	callstack 3
 47067                           
 47068                           ;../../VLCBlib_PIC/can18_ecan.c: 849:     uint8_t *ptr;;../../VLCBlib_PIC/can18_ecan.c: 
      +                          850:     uint8_t hiIndex;;../../VLCBlib_PIC/can18_ecan.c: 851:     Message * m;;../../VL
      +                          CBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47069                           
 47070                           ;incstack = 0
 47071   0073E0  D0B2               	goto	i2l15504
 47072   0073E2                     i2l15466:
 47073                           
 47074                           ;../../VLCBlib_PIC/can18_ecan.c: 854:         ptr = getBufferPointer(CANCON & 0x07U);
 47075   0073E2  506F               	movf	111,w,c	;volatile
 47076   0073E4  0B07               	andlw	7
 47077   0073E6  ECF9  F050         	call	i2_getBufferPointer
 47078   0073EA  C001  F00F         	movff	?i2_getBufferPointer,i2canFillRxFifo@ptr
 47079   0073EE  C002  F010         	movff	?i2_getBufferPointer+1,i2canFillRxFifo@ptr+1
 47080                           
 47081                           ;../../VLCBlib_PIC/can18_ecan.c: 855:         PIR5bits.RXBnIF = 0;
 47082   0073F2  9277               	bcf	119,1,c	;volatile
 47083                           
 47084                           ;../../VLCBlib_PIC/can18_ecan.c: 856:         if (COMSTATbits.RXB1OVFL) {
 47085   0073F4  BC71               	btfsc	113,6,c	;volatile
 47086                           
 47087                           ;../../VLCBlib_PIC/can18_ecan.c: 857:             COMSTATbits.RXB1OVFL = 0;
 47088   0073F6  9C71               	bcf	113,6,c	;volatile
 47089                           
 47090                           ;../../VLCBlib_PIC/can18_ecan.c: 859:         if ((ptr[2] & 0x08) == 0) {
 47091   0073F8  EE20 F002          	lfsr	2,2
 47092   0073FC  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47093   0073FE  26D9               	addwf	fsr2l,f,c
 47094   007400  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47095   007402  22DA               	addwfc	fsr2h,f,c
 47096   007404  B6DF               	btfsc	indf2,3,c
 47097   007406  D092               	goto	i2l15494
 47098                           
 47099                           ;../../VLCBlib_PIC/can18_ecan.c: 862:             m = getNextWriteMessage(&rxQueue);
 47100   007408  0E4D               	movlw	low _rxQueue
 47101   00740A  6E01               	movwf	i2getNextWriteMessage@q^0,c
 47102   00740C  ECE6  F046         	call	i2_getNextWriteMessage	;wreg free
 47103   007410  C001  F00D         	movff	?i2_getNextWriteMessage,i2canFillRxFifo@m
 47104   007414  C002  F00E         	movff	?i2_getNextWriteMessage+1,i2canFillRxFifo@m+1
 47105                           
 47106                           ;../../VLCBlib_PIC/can18_ecan.c: 863:             if (m == ((void*)0)) {
 47107   007418  500D               	movf	i2canFillRxFifo@m^0,w,c
 47108   00741A  100E               	iorwf	(i2canFillRxFifo@m+1)^0,w,c
 47109   00741C  A4D8               	btfss	status,2,c
 47110   00741E  D009               	goto	i2l15490
 47111                           
 47112                           ;../../VLCBlib_PIC/can18_ecan.c: 865:                 canDiagnostics[0x08].asUint++;
 47113   007420  0101               	movlb	1	; () banked
 47114   007422  4B77               	infsnz	(_canDiagnostics+16)& (0+255),f,b
 47115   007424  2B78               	incf	(_canDiagnostics+17)& (0+255),f,b
 47116                           
 47117                           ; BSR set to: 1
 47118                           ;../../VLCBlib_PIC/can18_ecan.c: 866:                 updateModuleErrorStatus();
 47119   007426  EC6E  F062         	call	i2_updateModuleErrorStatus	;wreg free
 47120                           
 47121                           ;../../VLCBlib_PIC/can18_ecan.c: 869:                 if (PIR5bits.IRXIF) {
 47122   00742A  AE77               	btfss	119,7,c	;volatile
 47123   00742C  0012               	return	
 47124                           
 47125                           ;../../VLCBlib_PIC/can18_ecan.c: 870:                     PIR5bits.IRXIF = 0;
 47126   00742E  9E77               	bcf	119,7,c	;volatile
 47127   007430  0012               	return	
 47128   007432                     i2l15490:
 47129                           
 47130                           ;../../VLCBlib_PIC/can18_ecan.c: 875:                 m->opc = ptr[6];
 47131   007432  EE20 F006          	lfsr	2,6
 47132   007436  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47133   007438  26D9               	addwf	fsr2l,f,c
 47134   00743A  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47135   00743C  22DA               	addwfc	fsr2h,f,c
 47136   00743E  EE10 F001          	lfsr	1,1
 47137   007442  500D               	movf	i2canFillRxFifo@m^0,w,c
 47138   007444  26E1               	addwf	fsr1l,f,c
 47139   007446  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47140   007448  22E2               	addwfc	fsr1h,f,c
 47141   00744A  CFDF FFE7          	movff	indf2,indf1
 47142                           
 47143                           ;../../VLCBlib_PIC/can18_ecan.c: 876:                 m->bytes[0] = ptr[7];
 47144   00744E  EE20 F007          	lfsr	2,7
 47145   007452  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47146   007454  26D9               	addwf	fsr2l,f,c
 47147   007456  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47148   007458  22DA               	addwfc	fsr2h,f,c
 47149   00745A  EE10 F002          	lfsr	1,2
 47150   00745E  500D               	movf	i2canFillRxFifo@m^0,w,c
 47151   007460  26E1               	addwf	fsr1l,f,c
 47152   007462  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47153   007464  22E2               	addwfc	fsr1h,f,c
 47154   007466  CFDF FFE7          	movff	indf2,indf1
 47155                           
 47156                           ;../../VLCBlib_PIC/can18_ecan.c: 877:                 m->bytes[1] = ptr[8];
 47157   00746A  EE20 F008          	lfsr	2,8
 47158   00746E  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47159   007470  26D9               	addwf	fsr2l,f,c
 47160   007472  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47161   007474  22DA               	addwfc	fsr2h,f,c
 47162   007476  EE10 F003          	lfsr	1,3
 47163   00747A  500D               	movf	i2canFillRxFifo@m^0,w,c
 47164   00747C  26E1               	addwf	fsr1l,f,c
 47165   00747E  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47166   007480  22E2               	addwfc	fsr1h,f,c
 47167   007482  CFDF FFE7          	movff	indf2,indf1
 47168                           
 47169                           ;../../VLCBlib_PIC/can18_ecan.c: 878:                 m->bytes[2] = ptr[9];
 47170   007486  EE20 F009          	lfsr	2,9
 47171   00748A  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47172   00748C  26D9               	addwf	fsr2l,f,c
 47173   00748E  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47174   007490  22DA               	addwfc	fsr2h,f,c
 47175   007492  EE10 F004          	lfsr	1,4
 47176   007496  500D               	movf	i2canFillRxFifo@m^0,w,c
 47177   007498  26E1               	addwf	fsr1l,f,c
 47178   00749A  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47179   00749C  22E2               	addwfc	fsr1h,f,c
 47180   00749E  CFDF FFE7          	movff	indf2,indf1
 47181                           
 47182                           ;../../VLCBlib_PIC/can18_ecan.c: 879:                 m->bytes[3] = ptr[10];
 47183   0074A2  EE20 F00A          	lfsr	2,10
 47184   0074A6  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47185   0074A8  26D9               	addwf	fsr2l,f,c
 47186   0074AA  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47187   0074AC  22DA               	addwfc	fsr2h,f,c
 47188   0074AE  EE10 F005          	lfsr	1,5
 47189   0074B2  500D               	movf	i2canFillRxFifo@m^0,w,c
 47190   0074B4  26E1               	addwf	fsr1l,f,c
 47191   0074B6  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47192   0074B8  22E2               	addwfc	fsr1h,f,c
 47193   0074BA  CFDF FFE7          	movff	indf2,indf1
 47194                           
 47195                           ;../../VLCBlib_PIC/can18_ecan.c: 880:                 m->bytes[4] = ptr[11];
 47196   0074BE  EE20 F00B          	lfsr	2,11
 47197   0074C2  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47198   0074C4  26D9               	addwf	fsr2l,f,c
 47199   0074C6  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47200   0074C8  22DA               	addwfc	fsr2h,f,c
 47201   0074CA  EE10 F006          	lfsr	1,6
 47202   0074CE  500D               	movf	i2canFillRxFifo@m^0,w,c
 47203   0074D0  26E1               	addwf	fsr1l,f,c
 47204   0074D2  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47205   0074D4  22E2               	addwfc	fsr1h,f,c
 47206   0074D6  CFDF FFE7          	movff	indf2,indf1
 47207                           
 47208                           ;../../VLCBlib_PIC/can18_ecan.c: 881:                 m->bytes[5] = ptr[12];
 47209   0074DA  EE20 F00C          	lfsr	2,12
 47210   0074DE  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47211   0074E0  26D9               	addwf	fsr2l,f,c
 47212   0074E2  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47213   0074E4  22DA               	addwfc	fsr2h,f,c
 47214   0074E6  EE10 F007          	lfsr	1,7
 47215   0074EA  500D               	movf	i2canFillRxFifo@m^0,w,c
 47216   0074EC  26E1               	addwf	fsr1l,f,c
 47217   0074EE  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47218   0074F0  22E2               	addwfc	fsr1h,f,c
 47219   0074F2  CFDF FFE7          	movff	indf2,indf1
 47220                           
 47221                           ;../../VLCBlib_PIC/can18_ecan.c: 882:                 m->bytes[6] = ptr[13];
 47222   0074F6  EE20 F00D          	lfsr	2,13
 47223   0074FA  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47224   0074FC  26D9               	addwf	fsr2l,f,c
 47225   0074FE  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47226   007500  22DA               	addwfc	fsr2h,f,c
 47227   007502  EE10 F008          	lfsr	1,8
 47228   007506  500D               	movf	i2canFillRxFifo@m^0,w,c
 47229   007508  26E1               	addwf	fsr1l,f,c
 47230   00750A  500E               	movf	(i2canFillRxFifo@m+1)^0,w,c
 47231   00750C  22E2               	addwfc	fsr1h,f,c
 47232   00750E  CFDF FFE7          	movff	indf2,indf1
 47233                           
 47234                           ;../../VLCBlib_PIC/can18_ecan.c: 883:                 m->len = ptr[5]&0xF;
 47235   007512  EE20 F005          	lfsr	2,5
 47236   007516  500F               	movf	i2canFillRxFifo@ptr^0,w,c
 47237   007518  26D9               	addwf	fsr2l,f,c
 47238   00751A  5010               	movf	(i2canFillRxFifo@ptr+1)^0,w,c
 47239   00751C  22DA               	addwfc	fsr2h,f,c
 47240   00751E  50DF               	movf	indf2,w,c
 47241   007520  0B0F               	andlw	15
 47242   007522  C00D  FFD9         	movff	i2canFillRxFifo@m,fsr2l
 47243   007526  C00E  FFDA         	movff	i2canFillRxFifo@m+1,fsr2h
 47244   00752A  6EDF               	movwf	indf2,c
 47245   00752C                     i2l15494:
 47246                           
 47247                           ;../../VLCBlib_PIC/can18_ecan.c: 887:         if (PIR5bits.IRXIF) {
 47248   00752C  AE77               	btfss	119,7,c	;volatile
 47249   00752E  D004               	goto	i2l15500
 47250                           
 47251                           ;../../VLCBlib_PIC/can18_ecan.c: 889:             canDiagnostics[0x01].asUint++;
 47252   007530  0101               	movlb	1	; () banked
 47253   007532  4B69               	infsnz	(_canDiagnostics+2)& (0+255),f,b
 47254   007534  2B6A               	incf	(_canDiagnostics+3)& (0+255),f,b
 47255                           
 47256                           ; BSR set to: 1
 47257                           ;../../VLCBlib_PIC/can18_ecan.c: 891:             PIR5bits.IRXIF = 0;
 47258   007536  9E77               	bcf	119,7,c	;volatile
 47259   007538                     i2l15500:
 47260                           
 47261                           ;../../VLCBlib_PIC/can18_ecan.c: 894:         ptr[0] &= 0x7f;
 47262   007538  C00F  FFD9         	movff	i2canFillRxFifo@ptr,fsr2l
 47263   00753C  C010  FFDA         	movff	i2canFillRxFifo@ptr+1,fsr2h
 47264   007540  0E7F               	movlw	127
 47265   007542  16DF               	andwf	indf2,f,c
 47266                           
 47267                           ;../../VLCBlib_PIC/can18_ecan.c: 895:         PIR5bits.FIFOWMIF = 0;
 47268   007544  9077               	bcf	119,0,c	;volatile
 47269   007546                     i2l15504:
 47270                           
 47271                           ;../../VLCBlib_PIC/can18_ecan.c: 853:     while (COMSTATbits.NOT_FIFOEMPTY) {
 47272   007546  AE71               	btfss	113,7,c	;volatile
 47273   007548  0012               	return	
 47274   00754A  D74B               	goto	i2l15466
 47275   00754C                     __end_ofi2_canFillRxFifo:
 47276                           	callstack 0
 47277                           
 47278 ;; *************** function i2_updateModuleErrorStatus *****************
 47279 ;; Defined at:
 47280 ;;		line 632 in file "../../VLCBlib_PIC/mns.c"
 47281 ;; Parameters:    Size  Location     Type
 47282 ;;		None
 47283 ;; Auto vars:     Size  Location     Type
 47284 ;;		None
 47285 ;; Return value:  Size  Location     Type
 47286 ;;                  1    wreg      void 
 47287 ;; Registers used:
 47288 ;;		wreg, status,2, status,0
 47289 ;; Tracked objects:
 47290 ;;		On entry : 0/0
 47291 ;;		On exit  : 0/0
 47292 ;;		Unchanged: 0/0
 47293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47298 ;;Total ram usage:        0 bytes
 47299 ;; Hardware stack levels used: 1
 47300 ;; This function calls:
 47301 ;;		Nothing
 47302 ;; This function is called by:
 47303 ;;		i2_checkTxFifo
 47304 ;;		i2_checkCANTimeout
 47305 ;;		i2_canTxError
 47306 ;;		i2_canFillRxFifo
 47307 ;; This function uses a non-reentrant model
 47308 ;;
 47309                           
 47310                           	psect	text221
 47311   00C4DC                     __ptext221:
 47312                           	callstack 0
 47313   00C4DC                     i2_updateModuleErrorStatus:
 47314                           	callstack 3
 47315                           
 47316                           ;../../VLCBlib_PIC/mns.c: 633:     if (mnsDiagnostics[0x01].asBytes.lo < 0xFF) {
 47317                           
 47318                           ;incstack = 0
 47319   00C4DC  0101               	movlb	1	; () banked
 47320   00C4DE  298F               	incf	(_mnsDiagnostics+2)& (0+255),w,b
 47321   00C4E0  B4D8               	btfsc	status,2,c
 47322   00C4E2  0012               	return	
 47323                           
 47324                           ; BSR set to: 1
 47325                           ;../../VLCBlib_PIC/mns.c: 634:         mnsDiagnostics[0x01].asBytes.lo++;
 47326   00C4E4  2B8F               	incf	(_mnsDiagnostics+2)& (0+255),f,b
 47327                           
 47328                           ; BSR set to: 1
 47329   00C4E6  0012               	return		;funcret
 47330   00C4E8                     __end_ofi2_updateModuleErrorStatus:
 47331                           	callstack 0
 47332                           
 47333 ;; *************** function i2_getNextWriteMessage *****************
 47334 ;; Defined at:
 47335 ;;		line 80 in file "../../VLCBlib_PIC/messageQueue.c"
 47336 ;; Parameters:    Size  Location     Type
 47337 ;;  q               1    0[COMRAM] PTR struct MessageQueue
 47338 ;;		 -> rxQueue(5), 
 47339 ;; Auto vars:     Size  Location     Type
 47340 ;;  wr              1   11[COMRAM] unsigned char 
 47341 ;; Return value:  Size  Location     Type
 47342 ;;                  2    0[COMRAM] PTR struct Message
 47343 ;; Registers used:
 47344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 47345 ;; Tracked objects:
 47346 ;;		On entry : 0/0
 47347 ;;		On exit  : 0/0
 47348 ;;		Unchanged: 0/0
 47349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47352 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47353 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47354 ;;Total ram usage:       12 bytes
 47355 ;; Hardware stack levels used: 1
 47356 ;; This function calls:
 47357 ;;		Nothing
 47358 ;; This function is called by:
 47359 ;;		i2_checkTxFifo
 47360 ;;		i2_canFillRxFifo
 47361 ;; This function uses a non-reentrant model
 47362 ;;
 47363                           
 47364                           	psect	text222
 47365   008DCC                     __ptext222:
 47366                           	callstack 0
 47367   008DCC                     i2_getNextWriteMessage:
 47368                           	callstack 3
 47369                           
 47370                           ; BSR set to: 1
 47371                           ;incstack = 0
 47372   008DCC  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47373   008DCE  6ED9               	movwf	fsr2l,c
 47374   008DD0  6ADA               	clrf	fsr2h,c
 47375   008DD2  0E02               	movlw	2
 47376   008DD4  26D9               	addwf	fsr2l,f,c
 47377   008DD6  50DF               	movf	indf2,w,c
 47378   008DD8  6E03               	movwf	??i2_getNextWriteMessage^0,c
 47379   008DDA  6A04               	clrf	(??i2_getNextWriteMessage+1)^0,c
 47380   008DDC  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47381   008DDE  6ED9               	movwf	fsr2l,c
 47382   008DE0  6ADA               	clrf	fsr2h,c
 47383   008DE2  0E04               	movlw	4
 47384   008DE4  26D9               	addwf	fsr2l,f,c
 47385   008DE6  50DF               	movf	indf2,w,c
 47386   008DE8  6E05               	movwf	(??i2_getNextWriteMessage+2)^0,c
 47387   008DEA  0EFF               	movlw	255
 47388   008DEC  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 47389   008DEE  6E06               	movwf	(??i2_getNextWriteMessage+3)^0,c
 47390   008DF0  6A07               	clrf	(??i2_getNextWriteMessage+4)^0,c
 47391   008DF2  0EFF               	movlw	255
 47392   008DF4  2207               	addwfc	(??i2_getNextWriteMessage+4)^0,f,c
 47393   008DF6  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47394   008DF8  6ED9               	movwf	fsr2l,c
 47395   008DFA  6ADA               	clrf	fsr2h,c
 47396   008DFC  0E03               	movlw	3
 47397   008DFE  26D9               	addwf	fsr2l,f,c
 47398   008E00  50DF               	movf	indf2,w,c
 47399   008E02  6E08               	movwf	(??i2_getNextWriteMessage+5)^0,c
 47400   008E04  6A09               	clrf	(??i2_getNextWriteMessage+6)^0,c
 47401   008E06  0E01               	movlw	1
 47402   008E08  2608               	addwf	(??i2_getNextWriteMessage+5)^0,f,c
 47403   008E0A  0E00               	movlw	0
 47404   008E0C  2209               	addwfc	(??i2_getNextWriteMessage+6)^0,f,c
 47405   008E0E  5006               	movf	(??i2_getNextWriteMessage+3)^0,w,c
 47406   008E10  1408               	andwf	(??i2_getNextWriteMessage+5)^0,w,c
 47407   008E12  6E0A               	movwf	(??i2_getNextWriteMessage+7)^0,c
 47408   008E14  5007               	movf	(??i2_getNextWriteMessage+4)^0,w,c
 47409   008E16  1409               	andwf	(??i2_getNextWriteMessage+6)^0,w,c
 47410   008E18  6E0B               	movwf	(??i2_getNextWriteMessage+8)^0,c
 47411   008E1A  5003               	movf	??i2_getNextWriteMessage^0,w,c
 47412   008E1C  180A               	xorwf	(??i2_getNextWriteMessage+7)^0,w,c
 47413   008E1E  E109               	bnz	i2l12850
 47414   008E20  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 47415   008E22  180B               	xorwf	(??i2_getNextWriteMessage+8)^0,w,c
 47416   008E24  A4D8               	btfss	status,2,c
 47417   008E26  D005               	goto	i2l12850
 47418   008E28  0E00               	movlw	0
 47419   008E2A  6E01               	movwf	?i2_getNextWriteMessage^0,c
 47420   008E2C  0E00               	movlw	0
 47421   008E2E  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 47422   008E30  0012               	return	
 47423   008E32                     i2l12850:
 47424   008E32  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47425   008E34  6ED9               	movwf	fsr2l,c
 47426   008E36  6ADA               	clrf	fsr2h,c
 47427   008E38  0E03               	movlw	3
 47428   008E3A  26D9               	addwf	fsr2l,f,c
 47429   008E3C  50DF               	movf	indf2,w,c
 47430   008E3E  6E0C               	movwf	i2getNextWriteMessage@wr^0,c
 47431   008E40  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47432   008E42  6ED9               	movwf	fsr2l,c
 47433   008E44  6ADA               	clrf	fsr2h,c
 47434   008E46  0E03               	movlw	3
 47435   008E48  26D9               	addwf	fsr2l,f,c
 47436   008E4A  2ADF               	incf	indf2,f,c
 47437   008E4C  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47438   008E4E  6ED9               	movwf	fsr2l,c
 47439   008E50  6ADA               	clrf	fsr2h,c
 47440   008E52  0E04               	movlw	4
 47441   008E54  26D9               	addwf	fsr2l,f,c
 47442   008E56  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47443   008E58  6EE1               	movwf	fsr1l,c
 47444   008E5A  6AE2               	clrf	fsr1h,c
 47445   008E5C  0E03               	movlw	3
 47446   008E5E  26E1               	addwf	fsr1l,f,c
 47447   008E60  50DE               	movf	postinc2,w,c
 47448   008E62  5CE6               	subwf	postinc1,w,c
 47449   008E64  A0D8               	btfss	status,0,c
 47450   008E66  D006               	goto	i2l12856
 47451   008E68  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47452   008E6A  6ED9               	movwf	fsr2l,c
 47453   008E6C  6ADA               	clrf	fsr2h,c
 47454   008E6E  0E03               	movlw	3
 47455   008E70  26D9               	addwf	fsr2l,f,c
 47456   008E72  6ADF               	clrf	indf2,c
 47457   008E74                     i2l12856:
 47458   008E74  500C               	movf	i2getNextWriteMessage@wr^0,w,c
 47459   008E76  0D09               	mullw	9
 47460   008E78  CFF3 F003          	movff	prodl,??i2_getNextWriteMessage
 47461   008E7C  CFF4 F004          	movff	prodh,??i2_getNextWriteMessage+1
 47462   008E80  5001               	movf	i2getNextWriteMessage@q^0,w,c
 47463   008E82  6ED9               	movwf	fsr2l,c
 47464   008E84  6ADA               	clrf	fsr2h,c
 47465   008E86  CFDE F005          	movff	postinc2,??i2_getNextWriteMessage+2
 47466   008E8A  CFDD F006          	movff	postdec2,??i2_getNextWriteMessage+3
 47467   008E8E  5003               	movf	??i2_getNextWriteMessage^0,w,c
 47468   008E90  2405               	addwf	(??i2_getNextWriteMessage+2)^0,w,c
 47469   008E92  6E01               	movwf	?i2_getNextWriteMessage^0,c
 47470   008E94  5004               	movf	(??i2_getNextWriteMessage+1)^0,w,c
 47471   008E96  2006               	addwfc	(??i2_getNextWriteMessage+3)^0,w,c
 47472   008E98  6E02               	movwf	(?i2_getNextWriteMessage+1)^0,c
 47473   008E9A  0012               	return		;funcret
 47474   008E9C                     __end_ofi2_getNextWriteMessage:
 47475                           	callstack 0
 47476                           
 47477 ;; *************** function i2_getBufferPointer *****************
 47478 ;; Defined at:
 47479 ;;		line 667 in file "../../VLCBlib_PIC/can18_ecan.c"
 47480 ;; Parameters:    Size  Location     Type
 47481 ;;  b               1    wreg     unsigned char 
 47482 ;; Auto vars:     Size  Location     Type
 47483 ;;  b               1    2[COMRAM] unsigned char 
 47484 ;; Return value:  Size  Location     Type
 47485 ;;                  2    0[COMRAM] PTR unsigned char 
 47486 ;; Registers used:
 47487 ;;		wreg, status,2, status,0
 47488 ;; Tracked objects:
 47489 ;;		On entry : 0/0
 47490 ;;		On exit  : 0/0
 47491 ;;		Unchanged: 0/0
 47492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47497 ;;Total ram usage:        3 bytes
 47498 ;; Hardware stack levels used: 1
 47499 ;; This function calls:
 47500 ;;		Nothing
 47501 ;; This function is called by:
 47502 ;;		i2_canFillRxFifo
 47503 ;; This function uses a non-reentrant model
 47504 ;;
 47505                           
 47506                           	psect	text223
 47507   00A1F2                     __ptext223:
 47508                           	callstack 0
 47509   00A1F2                     i2_getBufferPointer:
 47510                           	callstack 3
 47511                           
 47512                           ;incstack = 0
 47513                           ;i2getBufferPointer@b stored from wreg
 47514   00A1F2  6E03               	movwf	i2getBufferPointer@b^0,c
 47515                           
 47516                           ;../../VLCBlib_PIC/can18_ecan.c: 668:     switch (b) {
 47517   00A1F4  D02D               	goto	i2l13972
 47518   00A1F6                     i2l13934:
 47519                           
 47520                           ;../../VLCBlib_PIC/can18_ecan.c: 670:             return (uint8_t*) & RXB0CON;
 47521   00A1F6  0E60               	movlw	96
 47522   00A1F8  6E01               	movwf	?i2_getBufferPointer^0,c
 47523   00A1FA  0E0F               	movlw	15
 47524   00A1FC  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47525   00A1FE  0012               	return	
 47526   00A200                     i2l13938:
 47527                           
 47528                           ;../../VLCBlib_PIC/can18_ecan.c: 672:             return (uint8_t*) & RXB1CON;
 47529   00A200  0E30               	movlw	48
 47530   00A202  6E01               	movwf	?i2_getBufferPointer^0,c
 47531   00A204  0E0F               	movlw	15
 47532   00A206  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47533   00A208  0012               	return	
 47534   00A20A                     i2l13942:
 47535                           
 47536                           ;../../VLCBlib_PIC/can18_ecan.c: 674:             return (uint8_t*) & B0CON;
 47537   00A20A  0E80               	movlw	128
 47538   00A20C  6E01               	movwf	?i2_getBufferPointer^0,c
 47539   00A20E  0E0E               	movlw	14
 47540   00A210  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47541   00A212  0012               	return	
 47542   00A214                     i2l13946:
 47543                           
 47544                           ;../../VLCBlib_PIC/can18_ecan.c: 676:             return (uint8_t*) & B1CON;
 47545   00A214  0E90               	movlw	144
 47546   00A216  6E01               	movwf	?i2_getBufferPointer^0,c
 47547   00A218  0E0E               	movlw	14
 47548   00A21A  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47549   00A21C  0012               	return	
 47550   00A21E                     i2l13950:
 47551                           
 47552                           ;../../VLCBlib_PIC/can18_ecan.c: 678:             return (uint8_t*) & B2CON;
 47553   00A21E  0EA0               	movlw	160
 47554   00A220  6E01               	movwf	?i2_getBufferPointer^0,c
 47555   00A222  0E0E               	movlw	14
 47556   00A224  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47557   00A226  0012               	return	
 47558   00A228                     i2l13954:
 47559                           
 47560                           ;../../VLCBlib_PIC/can18_ecan.c: 680:             return (uint8_t*) & B3CON;
 47561   00A228  0EB0               	movlw	176
 47562   00A22A  6E01               	movwf	?i2_getBufferPointer^0,c
 47563   00A22C  0E0E               	movlw	14
 47564   00A22E  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47565   00A230  0012               	return	
 47566   00A232                     i2l13958:
 47567                           
 47568                           ;../../VLCBlib_PIC/can18_ecan.c: 682:             return (uint8_t*) & B4CON;
 47569   00A232  0EC0               	movlw	192
 47570   00A234  6E01               	movwf	?i2_getBufferPointer^0,c
 47571   00A236  0E0E               	movlw	14
 47572   00A238  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47573   00A23A  0012               	return	
 47574   00A23C                     i2l13962:
 47575                           
 47576                           ;../../VLCBlib_PIC/can18_ecan.c: 684:             return (uint8_t*) & B5CON;
 47577   00A23C  0ED0               	movlw	208
 47578   00A23E  6E01               	movwf	?i2_getBufferPointer^0,c
 47579   00A240  0E0E               	movlw	14
 47580   00A242  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47581   00A244  0012               	return	
 47582   00A246                     i2l13966:
 47583                           
 47584                           ;../../VLCBlib_PIC/can18_ecan.c: 686:             return ((void*)0);
 47585   00A246  0E00               	movlw	0
 47586   00A248  6E01               	movwf	?i2_getBufferPointer^0,c
 47587   00A24A  0E00               	movlw	0
 47588   00A24C  6E02               	movwf	(?i2_getBufferPointer+1)^0,c
 47589   00A24E  0012               	return	
 47590   00A250                     i2l13972:
 47591   00A250  5003               	movf	i2getBufferPointer@b^0,w,c
 47592                           
 47593                           ; Switch size 1, requested type "simple"
 47594                           ; Number of cases is 8, Range of values is 0 to 7
 47595                           ; switch strategies available:
 47596                           ; Name         Instructions Cycles
 47597                           ; simple_byte           25    13 (average)
 47598                           ;	Chosen strategy is simple_byte
 47599   00A252  0A00               	xorlw	0	; case 0
 47600   00A254  B4D8               	btfsc	status,2,c
 47601   00A256  D7CF               	goto	i2l13934
 47602   00A258  0A01               	xorlw	1	; case 1
 47603   00A25A  B4D8               	btfsc	status,2,c
 47604   00A25C  D7D1               	goto	i2l13938
 47605   00A25E  0A03               	xorlw	3	; case 2
 47606   00A260  B4D8               	btfsc	status,2,c
 47607   00A262  D7D3               	goto	i2l13942
 47608   00A264  0A01               	xorlw	1	; case 3
 47609   00A266  B4D8               	btfsc	status,2,c
 47610   00A268  D7D5               	goto	i2l13946
 47611   00A26A  0A07               	xorlw	7	; case 4
 47612   00A26C  B4D8               	btfsc	status,2,c
 47613   00A26E  D7D7               	goto	i2l13950
 47614   00A270  0A01               	xorlw	1	; case 5
 47615   00A272  B4D8               	btfsc	status,2,c
 47616   00A274  D7D9               	goto	i2l13954
 47617   00A276  0A03               	xorlw	3	; case 6
 47618   00A278  B4D8               	btfsc	status,2,c
 47619   00A27A  D7DB               	goto	i2l13958
 47620   00A27C  0A01               	xorlw	1	; case 7
 47621   00A27E  B4D8               	btfsc	status,2,c
 47622   00A280  D7DD               	goto	i2l13962
 47623   00A282  D7E1               	goto	i2l13966
 47624   00A284                     __end_ofi2_getBufferPointer:
 47625                           	callstack 0
 47626                           
 47627 ;; *************** function _APP_highIsr *****************
 47628 ;; Defined at:
 47629 ;;		line 711 in file "../main.c"
 47630 ;; Parameters:    Size  Location     Type
 47631 ;;		None
 47632 ;; Auto vars:     Size  Location     Type
 47633 ;;		None
 47634 ;; Return value:  Size  Location     Type
 47635 ;;                  1    wreg      void 
 47636 ;; Registers used:
 47637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47638 ;; Tracked objects:
 47639 ;;		On entry : 0/0
 47640 ;;		On exit  : 0/0
 47641 ;;		Unchanged: 0/0
 47642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47647 ;;Total ram usage:        0 bytes
 47648 ;; Hardware stack levels used: 1
 47649 ;; Hardware stack levels required when called: 2
 47650 ;; This function calls:
 47651 ;;		_timer1DoneInterruptHandler
 47652 ;;		_timer3DoneInterruptHandler
 47653 ;; This function is called by:
 47654 ;;		_highIsr
 47655 ;; This function uses a non-reentrant model
 47656 ;;
 47657                           
 47658                           	psect	text224
 47659   00C446                     __ptext224:
 47660                           	callstack 0
 47661   00C446                     _APP_highIsr:
 47662                           	callstack 3
 47663                           
 47664                           ;../main.c: 714:     if (PIR1bits.TMR1IF) {
 47665                           
 47666                           ;incstack = 0
 47667   00C446  A09E               	btfss	158,0,c	;volatile
 47668   00C448  D003               	goto	i2l15858
 47669                           
 47670                           ;../main.c: 715:         timer1DoneInterruptHandler();
 47671   00C44A  ECA9  F061         	call	_timer1DoneInterruptHandler	;wreg free
 47672                           
 47673                           ;../main.c: 716:         PIR1bits.TMR1IF = 0;
 47674   00C44E  909E               	bcf	158,0,c	;volatile
 47675   00C450                     i2l15858:
 47676                           
 47677                           ;../main.c: 718:     if (PIR2bits.TMR3IF) {
 47678   00C450  A2A1               	btfss	161,1,c	;volatile
 47679   00C452  0012               	return	
 47680                           
 47681                           ;../main.c: 719:         timer3DoneInterruptHandler();
 47682   00C454  EC58  F061         	call	_timer3DoneInterruptHandler	;wreg free
 47683                           
 47684                           ;../main.c: 720:         PIR2bits.TMR3IF = 0;
 47685   00C458  92A1               	bcf	161,1,c	;volatile
 47686   00C45A  0012               	return		;funcret
 47687   00C45C                     __end_of_APP_highIsr:
 47688                           	callstack 0
 47689                           
 47690 ;; *************** function _timer3DoneInterruptHandler *****************
 47691 ;; Defined at:
 47692 ;;		line 240 in file "../servo.c"
 47693 ;; Parameters:    Size  Location     Type
 47694 ;;		None
 47695 ;; Auto vars:     Size  Location     Type
 47696 ;;		None
 47697 ;; Return value:  Size  Location     Type
 47698 ;;                  1    wreg      void 
 47699 ;; Registers used:
 47700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47701 ;; Tracked objects:
 47702 ;;		On entry : 0/0
 47703 ;;		On exit  : 0/0
 47704 ;;		Unchanged: 0/0
 47705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47710 ;;Total ram usage:        0 bytes
 47711 ;; Hardware stack levels used: 1
 47712 ;; Hardware stack levels required when called: 1
 47713 ;; This function calls:
 47714 ;;		i2_getNV
 47715 ;;		i2_setOutputPin
 47716 ;; This function is called by:
 47717 ;;		_APP_highIsr
 47718 ;; This function uses a non-reentrant model
 47719 ;;
 47720                           
 47721                           	psect	text225
 47722   00C2B0                     __ptext225:
 47723                           	callstack 0
 47724   00C2B0                     _timer3DoneInterruptHandler:
 47725                           	callstack 3
 47726                           
 47727                           ;../servo.c: 241:     T3CONbits.TMR3ON = 0;
 47728                           
 47729                           ;incstack = 0
 47730   00C2B0  90B1               	bcf	177,0,c	;volatile
 47731                           
 47732                           ;../servo.c: 242:     setOutputPin(servoInBlock+8, (uint8_t)getNV((16 + 7*(servoInBlock+
      +                          8) + 1)) & 0x20);
 47733   00C2B2  0100               	movlb	0	; () banked
 47734   00C2B4  51CB               	movf	_servoInBlock& (0+255),w,b
 47735   00C2B6  0D07               	mullw	7
 47736   00C2B8  50F3               	movf	243,w,c
 47737   00C2BA  0F49               	addlw	73
 47738   00C2BC  EC50  F05E         	call	i2_getNV
 47739   00C2C0  5001               	movf	?i2_getNV^0,w,c
 47740   00C2C2  0B20               	andlw	32
 47741   00C2C4  6E05               	movwf	i2setOutputPin@state^0,c
 47742   00C2C6  0100               	movlb	0	; () banked
 47743   00C2C8  51CB               	movf	_servoInBlock& (0+255),w,b
 47744   00C2CA  0F08               	addlw	8
 47745   00C2CC  EC61  F038         	call	i2_setOutputPin
 47746   00C2D0  0012               	return		;funcret
 47747   00C2D2                     __end_of_timer3DoneInterruptHandler:
 47748                           	callstack 0
 47749                           
 47750 ;; *************** function _timer1DoneInterruptHandler *****************
 47751 ;; Defined at:
 47752 ;;		line 235 in file "../servo.c"
 47753 ;; Parameters:    Size  Location     Type
 47754 ;;		None
 47755 ;; Auto vars:     Size  Location     Type
 47756 ;;		None
 47757 ;; Return value:  Size  Location     Type
 47758 ;;                  1    wreg      void 
 47759 ;; Registers used:
 47760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 47761 ;; Tracked objects:
 47762 ;;		On entry : 0/0
 47763 ;;		On exit  : 0/0
 47764 ;;		Unchanged: 0/0
 47765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47770 ;;Total ram usage:        0 bytes
 47771 ;; Hardware stack levels used: 1
 47772 ;; Hardware stack levels required when called: 1
 47773 ;; This function calls:
 47774 ;;		i2_getNV
 47775 ;;		i2_setOutputPin
 47776 ;; This function is called by:
 47777 ;;		_APP_highIsr
 47778 ;; This function uses a non-reentrant model
 47779 ;;
 47780                           
 47781                           	psect	text226
 47782   00C352                     __ptext226:
 47783                           	callstack 0
 47784   00C352                     _timer1DoneInterruptHandler:
 47785                           	callstack 3
 47786                           
 47787                           ;../servo.c: 236:     T1CONbits.TMR1ON = 0;
 47788                           
 47789                           ;incstack = 0
 47790   00C352  90CD               	bcf	205,0,c	;volatile
 47791                           
 47792                           ;../servo.c: 237:     setOutputPin(servoInBlock, (uint8_t)getNV((16 + 7*(servoInBlock) +
      +                           1)) & 0x20);
 47793   00C354  0100               	movlb	0	; () banked
 47794   00C356  51CB               	movf	_servoInBlock& (0+255),w,b
 47795   00C358  0D07               	mullw	7
 47796   00C35A  50F3               	movf	243,w,c
 47797   00C35C  0F11               	addlw	17
 47798   00C35E  EC50  F05E         	call	i2_getNV
 47799   00C362  5001               	movf	?i2_getNV^0,w,c
 47800   00C364  0B20               	andlw	32
 47801   00C366  6E05               	movwf	i2setOutputPin@state^0,c
 47802   00C368  0100               	movlb	0	; () banked
 47803   00C36A  51CB               	movf	_servoInBlock& (0+255),w,b
 47804   00C36C  EC61  F038         	call	i2_setOutputPin
 47805   00C370  0012               	return		;funcret
 47806   00C372                     __end_of_timer1DoneInterruptHandler:
 47807                           	callstack 0
 47808                           
 47809 ;; *************** function i2_setOutputPin *****************
 47810 ;; Defined at:
 47811 ;;		line 256 in file "../digitalOut.c"
 47812 ;; Parameters:    Size  Location     Type
 47813 ;;  io              1    wreg     unsigned char 
 47814 ;;  state           1    4[COMRAM] enum E12760
 47815 ;; Auto vars:     Size  Location     Type
 47816 ;;  io              1    7[COMRAM] unsigned char 
 47817 ;; Return value:  Size  Location     Type
 47818 ;;                  1    wreg      void 
 47819 ;; Registers used:
 47820 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 47821 ;; Tracked objects:
 47822 ;;		On entry : 0/0
 47823 ;;		On exit  : 0/0
 47824 ;;		Unchanged: 0/0
 47825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 47826 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47829 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 47830 ;;Total ram usage:        4 bytes
 47831 ;; Hardware stack levels used: 1
 47832 ;; This function calls:
 47833 ;;		Nothing
 47834 ;; This function is called by:
 47835 ;;		_timer1DoneInterruptHandler
 47836 ;;		_timer3DoneInterruptHandler
 47837 ;; This function uses a non-reentrant model
 47838 ;;
 47839                           
 47840                           	psect	text227
 47841   0070C2                     __ptext227:
 47842                           	callstack 0
 47843   0070C2                     i2_setOutputPin:
 47844                           	callstack 3
 47845                           
 47846                           ;incstack = 0
 47847                           ;i2setOutputPin@io stored from wreg
 47848   0070C2  6E08               	movwf	i2setOutputPin@io^0,c
 47849                           
 47850                           ;../digitalOut.c: 257:     switch (configs[io].port) {
 47851   0070C4  D0BA               	goto	i2l13872
 47852   0070C6                     i2l13852:
 47853                           
 47854                           ;../digitalOut.c: 259:             if (state) {
 47855   0070C6  5005               	movf	i2setOutputPin@state^0,w,c
 47856   0070C8  B4D8               	btfsc	status,2,c
 47857   0070CA  D01D               	goto	i2l13856
 47858                           
 47859                           ;../digitalOut.c: 261:                LATA |= (1<<configs[io].no);
 47860   0070CC  5008               	movf	i2setOutputPin@io^0,w,c
 47861   0070CE  0D04               	mullw	4
 47862   0070D0  0E02               	movlw	2
 47863   0070D2  26F3               	addwf	243,f,c
 47864   0070D4  0E00               	movlw	0
 47865   0070D6  22F4               	addwfc	244,f,c
 47866   0070D8  0E35               	movlw	low _configs
 47867   0070DA  24F3               	addwf	243,w,c
 47868   0070DC  6EF6               	movwf	tblptrl,c
 47869   0070DE  0EEE               	movlw	high _configs
 47870   0070E0  20F4               	addwfc	244,w,c
 47871   0070E2  6EF7               	movwf	tblptrh,c
 47872   0070E4                     	if	1	;There are 3 active tblptr bytes
 47873   0070E4  6AF8               	clrf	tblptru,c
 47874   0070E6  0E00               	movlw	low (__mediumconst shr (0+16))
 47875   0070E8  22F8               	addwfc	tblptru,f,c
 47876   0070EA                     	endif
 47877   0070EA  0008               	tblrd		*
 47878   0070EC  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47879   0070F0  0E01               	movlw	1
 47880   0070F2  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47881   0070F4  2A06               	incf	??i2_setOutputPin^0,f,c
 47882   0070F6  D002               	goto	i2u1278_44
 47883   0070F8                     i2u1278_45:
 47884   0070F8  90D8               	bcf	status,0,c
 47885   0070FA  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47886   0070FC                     i2u1278_44:
 47887   0070FC  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47888   0070FE  D7FC               	goto	i2u1278_45
 47889   007100  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47890   007102  1289               	iorwf	137,f,c	;volatile
 47891                           
 47892                           ;../digitalOut.c: 262:             } else {
 47893   007104  0012               	return	
 47894   007106                     i2l13856:
 47895                           
 47896                           ;../digitalOut.c: 264:                 LATA &= ~(1<<configs[io].no);
 47897   007106  5008               	movf	i2setOutputPin@io^0,w,c
 47898   007108  0D04               	mullw	4
 47899   00710A  0E02               	movlw	2
 47900   00710C  26F3               	addwf	243,f,c
 47901   00710E  0E00               	movlw	0
 47902   007110  22F4               	addwfc	244,f,c
 47903   007112  0E35               	movlw	low _configs
 47904   007114  24F3               	addwf	243,w,c
 47905   007116  6EF6               	movwf	tblptrl,c
 47906   007118  0EEE               	movlw	high _configs
 47907   00711A  20F4               	addwfc	244,w,c
 47908   00711C  6EF7               	movwf	tblptrh,c
 47909   00711E                     	if	1	;There are 3 active tblptr bytes
 47910   00711E  6AF8               	clrf	tblptru,c
 47911   007120  0E00               	movlw	low (__mediumconst shr (0+16))
 47912   007122  22F8               	addwfc	tblptru,f,c
 47913   007124                     	endif
 47914   007124  0008               	tblrd		*
 47915   007126  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47916   00712A  0E01               	movlw	1
 47917   00712C  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47918   00712E  2A06               	incf	??i2_setOutputPin^0,f,c
 47919   007130  D002               	goto	i2u1279_44
 47920   007132                     i2u1279_45:
 47921   007132  90D8               	bcf	status,0,c
 47922   007134  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47923   007136                     i2u1279_44:
 47924   007136  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47925   007138  D7FC               	goto	i2u1279_45
 47926   00713A  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47927   00713C  0AFF               	xorlw	255
 47928   00713E  1689               	andwf	137,f,c	;volatile
 47929   007140  0012               	return	
 47930   007142                     i2l13858:
 47931                           
 47932                           ;../digitalOut.c: 268:             if (state) {
 47933   007142  5005               	movf	i2setOutputPin@state^0,w,c
 47934   007144  B4D8               	btfsc	status,2,c
 47935   007146  D01D               	goto	i2l13862
 47936                           
 47937                           ;../digitalOut.c: 270:                 LATB |= (1<<configs[io].no);
 47938   007148  5008               	movf	i2setOutputPin@io^0,w,c
 47939   00714A  0D04               	mullw	4
 47940   00714C  0E02               	movlw	2
 47941   00714E  26F3               	addwf	243,f,c
 47942   007150  0E00               	movlw	0
 47943   007152  22F4               	addwfc	244,f,c
 47944   007154  0E35               	movlw	low _configs
 47945   007156  24F3               	addwf	243,w,c
 47946   007158  6EF6               	movwf	tblptrl,c
 47947   00715A  0EEE               	movlw	high _configs
 47948   00715C  20F4               	addwfc	244,w,c
 47949   00715E  6EF7               	movwf	tblptrh,c
 47950   007160                     	if	1	;There are 3 active tblptr bytes
 47951   007160  6AF8               	clrf	tblptru,c
 47952   007162  0E00               	movlw	low (__mediumconst shr (0+16))
 47953   007164  22F8               	addwfc	tblptru,f,c
 47954   007166                     	endif
 47955   007166  0008               	tblrd		*
 47956   007168  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47957   00716C  0E01               	movlw	1
 47958   00716E  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47959   007170  2A06               	incf	??i2_setOutputPin^0,f,c
 47960   007172  D002               	goto	i2u1281_44
 47961   007174                     i2u1281_45:
 47962   007174  90D8               	bcf	status,0,c
 47963   007176  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 47964   007178                     i2u1281_44:
 47965   007178  2E06               	decfsz	??i2_setOutputPin^0,f,c
 47966   00717A  D7FC               	goto	i2u1281_45
 47967   00717C  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 47968   00717E  128A               	iorwf	138,f,c	;volatile
 47969                           
 47970                           ;../digitalOut.c: 271:             } else {
 47971   007180  0012               	return	
 47972   007182                     i2l13862:
 47973                           
 47974                           ;../digitalOut.c: 273:                 LATB &= ~(1<<configs[io].no);
 47975   007182  5008               	movf	i2setOutputPin@io^0,w,c
 47976   007184  0D04               	mullw	4
 47977   007186  0E02               	movlw	2
 47978   007188  26F3               	addwf	243,f,c
 47979   00718A  0E00               	movlw	0
 47980   00718C  22F4               	addwfc	244,f,c
 47981   00718E  0E35               	movlw	low _configs
 47982   007190  24F3               	addwf	243,w,c
 47983   007192  6EF6               	movwf	tblptrl,c
 47984   007194  0EEE               	movlw	high _configs
 47985   007196  20F4               	addwfc	244,w,c
 47986   007198  6EF7               	movwf	tblptrh,c
 47987   00719A                     	if	1	;There are 3 active tblptr bytes
 47988   00719A  6AF8               	clrf	tblptru,c
 47989   00719C  0E00               	movlw	low (__mediumconst shr (0+16))
 47990   00719E  22F8               	addwfc	tblptru,f,c
 47991   0071A0                     	endif
 47992   0071A0  0008               	tblrd		*
 47993   0071A2  CFF5 F006          	movff	tablat,??i2_setOutputPin
 47994   0071A6  0E01               	movlw	1
 47995   0071A8  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 47996   0071AA  2A06               	incf	??i2_setOutputPin^0,f,c
 47997   0071AC  D002               	goto	i2u1282_44
 47998   0071AE                     i2u1282_45:
 47999   0071AE  90D8               	bcf	status,0,c
 48000   0071B0  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48001   0071B2                     i2u1282_44:
 48002   0071B2  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48003   0071B4  D7FC               	goto	i2u1282_45
 48004   0071B6  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48005   0071B8  0AFF               	xorlw	255
 48006   0071BA  168A               	andwf	138,f,c	;volatile
 48007   0071BC  0012               	return	
 48008   0071BE                     i2l13864:
 48009                           
 48010                           ;../digitalOut.c: 277:             if (state) {
 48011   0071BE  5005               	movf	i2setOutputPin@state^0,w,c
 48012   0071C0  B4D8               	btfsc	status,2,c
 48013   0071C2  D01D               	goto	i2l13868
 48014                           
 48015                           ;../digitalOut.c: 279:                 LATC |= (1<<configs[io].no);
 48016   0071C4  5008               	movf	i2setOutputPin@io^0,w,c
 48017   0071C6  0D04               	mullw	4
 48018   0071C8  0E02               	movlw	2
 48019   0071CA  26F3               	addwf	243,f,c
 48020   0071CC  0E00               	movlw	0
 48021   0071CE  22F4               	addwfc	244,f,c
 48022   0071D0  0E35               	movlw	low _configs
 48023   0071D2  24F3               	addwf	243,w,c
 48024   0071D4  6EF6               	movwf	tblptrl,c
 48025   0071D6  0EEE               	movlw	high _configs
 48026   0071D8  20F4               	addwfc	244,w,c
 48027   0071DA  6EF7               	movwf	tblptrh,c
 48028   0071DC                     	if	1	;There are 3 active tblptr bytes
 48029   0071DC  6AF8               	clrf	tblptru,c
 48030   0071DE  0E00               	movlw	low (__mediumconst shr (0+16))
 48031   0071E0  22F8               	addwfc	tblptru,f,c
 48032   0071E2                     	endif
 48033   0071E2  0008               	tblrd		*
 48034   0071E4  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48035   0071E8  0E01               	movlw	1
 48036   0071EA  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48037   0071EC  2A06               	incf	??i2_setOutputPin^0,f,c
 48038   0071EE  D002               	goto	i2u1284_44
 48039   0071F0                     i2u1284_45:
 48040   0071F0  90D8               	bcf	status,0,c
 48041   0071F2  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48042   0071F4                     i2u1284_44:
 48043   0071F4  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48044   0071F6  D7FC               	goto	i2u1284_45
 48045   0071F8  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48046   0071FA  128B               	iorwf	139,f,c	;volatile
 48047                           
 48048                           ;../digitalOut.c: 280:             } else {
 48049   0071FC  0012               	return	
 48050   0071FE                     i2l13868:
 48051                           
 48052                           ;../digitalOut.c: 282:                 LATC &= ~(1<<configs[io].no);
 48053   0071FE  5008               	movf	i2setOutputPin@io^0,w,c
 48054   007200  0D04               	mullw	4
 48055   007202  0E02               	movlw	2
 48056   007204  26F3               	addwf	243,f,c
 48057   007206  0E00               	movlw	0
 48058   007208  22F4               	addwfc	244,f,c
 48059   00720A  0E35               	movlw	low _configs
 48060   00720C  24F3               	addwf	243,w,c
 48061   00720E  6EF6               	movwf	tblptrl,c
 48062   007210  0EEE               	movlw	high _configs
 48063   007212  20F4               	addwfc	244,w,c
 48064   007214  6EF7               	movwf	tblptrh,c
 48065   007216                     	if	1	;There are 3 active tblptr bytes
 48066   007216  6AF8               	clrf	tblptru,c
 48067   007218  0E00               	movlw	low (__mediumconst shr (0+16))
 48068   00721A  22F8               	addwfc	tblptru,f,c
 48069   00721C                     	endif
 48070   00721C  0008               	tblrd		*
 48071   00721E  CFF5 F006          	movff	tablat,??i2_setOutputPin
 48072   007222  0E01               	movlw	1
 48073   007224  6E07               	movwf	(??i2_setOutputPin+1)^0,c
 48074   007226  2A06               	incf	??i2_setOutputPin^0,f,c
 48075   007228  D002               	goto	i2u1285_44
 48076   00722A                     i2u1285_45:
 48077   00722A  90D8               	bcf	status,0,c
 48078   00722C  3607               	rlcf	(??i2_setOutputPin+1)^0,f,c
 48079   00722E                     i2u1285_44:
 48080   00722E  2E06               	decfsz	??i2_setOutputPin^0,f,c
 48081   007230  D7FC               	goto	i2u1285_45
 48082   007232  5007               	movf	(??i2_setOutputPin+1)^0,w,c
 48083   007234  0AFF               	xorlw	255
 48084   007236  168B               	andwf	139,f,c	;volatile
 48085   007238  0012               	return	
 48086   00723A                     i2l13872:
 48087   00723A  5008               	movf	i2setOutputPin@io^0,w,c
 48088   00723C  0D04               	mullw	4
 48089   00723E  0E01               	movlw	1
 48090   007240  26F3               	addwf	243,f,c
 48091   007242  0E00               	movlw	0
 48092   007244  22F4               	addwfc	244,f,c
 48093   007246  0E35               	movlw	low _configs
 48094   007248  24F3               	addwf	243,w,c
 48095   00724A  6EF6               	movwf	tblptrl,c
 48096   00724C  0EEE               	movlw	high _configs
 48097   00724E  20F4               	addwfc	244,w,c
 48098   007250  6EF7               	movwf	tblptrh,c
 48099   007252                     	if	1	;There are 3 active tblptr bytes
 48100   007252  6AF8               	clrf	tblptru,c
 48101   007254  0E00               	movlw	low (__mediumconst shr (0+16))
 48102   007256  22F8               	addwfc	tblptru,f,c
 48103   007258                     	endif
 48104   007258  0008               	tblrd		*
 48105   00725A  50F5               	movf	tablat,w,c
 48106                           
 48107                           ; Switch size 1, requested type "simple"
 48108                           ; Number of cases is 3, Range of values is 65 to 67
 48109                           ; switch strategies available:
 48110                           ; Name         Instructions Cycles
 48111                           ; simple_byte           10     6 (average)
 48112                           ;	Chosen strategy is simple_byte
 48113   00725C  0A41               	xorlw	65	; case 65
 48114   00725E  B4D8               	btfsc	status,2,c
 48115   007260  D732               	goto	i2l13852
 48116   007262  0A03               	xorlw	3	; case 66
 48117   007264  B4D8               	btfsc	status,2,c
 48118   007266  D76D               	goto	i2l13858
 48119   007268  0A01               	xorlw	1	; case 67
 48120   00726A  A4D8               	btfss	status,2,c
 48121   00726C  0012               	return	
 48122   00726E  D7A7               	goto	i2l13864
 48123   007270                     __end_ofi2_setOutputPin:
 48124                           	callstack 0
 48125                           
 48126 ;; *************** function i2_getNV *****************
 48127 ;; Defined at:
 48128 ;;		line 182 in file "../../VLCBlib_PIC/nv.c"
 48129 ;; Parameters:    Size  Location     Type
 48130 ;;  index           1    wreg     unsigned char 
 48131 ;; Auto vars:     Size  Location     Type
 48132 ;;  index           1    3[COMRAM] unsigned char 
 48133 ;; Return value:  Size  Location     Type
 48134 ;;                  2    0[COMRAM] short 
 48135 ;; Registers used:
 48136 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48137 ;; Tracked objects:
 48138 ;;		On entry : 0/0
 48139 ;;		On exit  : 0/0
 48140 ;;		Unchanged: 0/0
 48141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 48142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48143 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48144 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48145 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 48146 ;;Total ram usage:        4 bytes
 48147 ;; Hardware stack levels used: 1
 48148 ;; This function calls:
 48149 ;;		Nothing
 48150 ;; This function is called by:
 48151 ;;		_timer1DoneInterruptHandler
 48152 ;;		_timer3DoneInterruptHandler
 48153 ;; This function uses a non-reentrant model
 48154 ;;
 48155                           
 48156                           	psect	text228
 48157   00BCA0                     __ptext228:
 48158                           	callstack 0
 48159   00BCA0                     i2_getNV:
 48160                           	callstack 3
 48161                           
 48162                           ;incstack = 0
 48163                           ;i2getNV@index stored from wreg
 48164   00BCA0  6E04               	movwf	i2getNV@index^0,c
 48165                           
 48166                           ;../../VLCBlib_PIC/nv.c: 183:     if (index == 0) return (15+7*16);
 48167   00BCA2  5004               	movf	i2getNV@index^0,w,c
 48168   00BCA4  A4D8               	btfss	status,2,c
 48169   00BCA6  D005               	goto	i2l13880
 48170   00BCA8  0E00               	movlw	0
 48171   00BCAA  6E02               	movwf	(?i2_getNV+1)^0,c
 48172   00BCAC  0E7F               	movlw	127
 48173   00BCAE  6E01               	movwf	?i2_getNV^0,c
 48174   00BCB0  0012               	return	
 48175   00BCB2                     i2l13880:
 48176                           
 48177                           ;../../VLCBlib_PIC/nv.c: 184:     if (index > (15+7*16)) return -CMDERR_INV_NV_IDX;
 48178   00BCB2  0E7F               	movlw	127
 48179   00BCB4  6404               	cpfsgt	i2getNV@index^0,c
 48180   00BCB6  D005               	goto	i2l13886
 48181   00BCB8  0EFF               	movlw	255
 48182   00BCBA  6E02               	movwf	(?i2_getNV+1)^0,c
 48183   00BCBC  0EF6               	movlw	246
 48184   00BCBE  6E01               	movwf	?i2_getNV^0,c
 48185   00BCC0  0012               	return	
 48186   00BCC2                     i2l13886:
 48187                           
 48188                           ;../../VLCBlib_PIC/nv.c: 186:     return nvCache[index];
 48189   00BCC2  0E00               	movlw	low _nvCache
 48190   00BCC4  2404               	addwf	i2getNV@index^0,w,c
 48191   00BCC6  6ED9               	movwf	fsr2l,c
 48192   00BCC8  6ADA               	clrf	fsr2h,c
 48193   00BCCA  0E04               	movlw	high _nvCache
 48194   00BCCC  22DA               	addwfc	fsr2h,f,c
 48195   00BCCE  50DF               	movf	indf2,w,c
 48196   00BCD0  6E03               	movwf	??i2_getNV^0,c
 48197   00BCD2  5003               	movf	??i2_getNV^0,w,c
 48198   00BCD4  6E01               	movwf	?i2_getNV^0,c
 48199   00BCD6  6A02               	clrf	(?i2_getNV+1)^0,c
 48200   00BCD8  0012               	return		;funcret
 48201   00BCDA                     __end_ofi2_getNV:
 48202                           	callstack 0
 48203                           
 48204                           	psect	rparam
 48205   000000                     
 48206                           	psect	temp
 48207   000052                     btemp:
 48208                           	callstack 0
 48209   000052                     	ds	1
 48210   000000                     int$flags	set	btemp
 48211   000000                     wtemp8	set	btemp+1
 48212   000000                     ttemp5	set	btemp+1
 48213   000000                     ttemp6	set	btemp+4
 48214   000000                     ttemp7	set	btemp+8
 48215                           
 48216                           	psect	config
 48217                           
 48218                           ;Config register CONFIG1L @ 0x300000
 48219                           ;	VREG Sleep Enable bit
 48220                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 48221                           ;	LF-INTOSC Low-power Enable bit
 48222                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 48223                           ;	SOSC Power Selection and mode Configuration bits
 48224                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 48225                           ;	Extended Instruction Set
 48226                           ;	XINST = OFF, Disabled
 48227   300000                     	org	3145728
 48228   300000  15                 	db	21
 48229                           
 48230                           ;Config register CONFIG1H @ 0x300001
 48231                           ;	Oscillator
 48232                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
 48233                           ;	PLL x4 Enable bit
 48234                           ;	PLLCFG = OFF, Disabled
 48235                           ;	Fail-Safe Clock Monitor
 48236                           ;	FCMEN = OFF, Disabled
 48237                           ;	Internal External Oscillator Switch Over Mode
 48238                           ;	IESO = OFF, Disabled
 48239   300001                     	org	3145729
 48240   300001  03                 	db	3
 48241                           
 48242                           ;Config register CONFIG2L @ 0x300002
 48243                           ;	Power Up Timer
 48244                           ;	PWRTEN = ON, Enabled
 48245                           ;	Brown Out Detect
 48246                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 48247                           ;	Brown-out Reset Voltage bits
 48248                           ;	BORV = 0, 3.0V
 48249                           ;	BORMV Power level
 48250                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 48251   300002                     	org	3145730
 48252   300002  66                 	db	102
 48253                           
 48254                           ;Config register CONFIG2H @ 0x300003
 48255                           ;	Watchdog Timer
 48256                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 48257                           ;	Watchdog Postscaler
 48258                           ;	WDTPS = 1048576, 1:1048576
 48259   300003                     	org	3145731
 48260   300003  50                 	db	80
 48261                           
 48262                           ; Padding undefined space
 48263   300004                     	org	3145732
 48264   300004  FF                 	db	255
 48265                           
 48266                           ;Config register CONFIG3H @ 0x300005
 48267                           ;	ECAN Mux bit
 48268                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 48269                           ;	MSSP address masking
 48270                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 48271                           ;	Master Clear Enable
 48272                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 48273   300005                     	org	3145733
 48274   300005  89                 	db	137
 48275                           
 48276                           ;Config register CONFIG4L @ 0x300006
 48277                           ;	Stack Overflow Reset
 48278                           ;	STVREN = ON, Enabled
 48279                           ;	Boot Block Size
 48280                           ;	BBSIZ = BB1K, 1K word Boot Block size
 48281                           ;	Background Debugger
 48282                           ;	DEBUG = 0x1, unprogrammed default
 48283   300006                     	org	3145734
 48284   300006  81                 	db	129
 48285                           
 48286                           ; Padding undefined space
 48287   300007                     	org	3145735
 48288   300007  FF                 	db	255
 48289                           
 48290                           ;Config register CONFIG5L @ 0x300008
 48291                           ;	Code Protect 00800-03FFF
 48292                           ;	CP0 = OFF, Disabled
 48293                           ;	Code Protect 04000-07FFF
 48294                           ;	CP1 = OFF, Disabled
 48295                           ;	Code Protect 08000-0BFFF
 48296                           ;	CP2 = OFF, Disabled
 48297                           ;	Code Protect 0C000-0FFFF
 48298                           ;	CP3 = OFF, Disabled
 48299   300008                     	org	3145736
 48300   300008  0F                 	db	15
 48301                           
 48302                           ;Config register CONFIG5H @ 0x300009
 48303                           ;	Code Protect Boot
 48304                           ;	CPB = OFF, Disabled
 48305                           ;	Data EE Read Protect
 48306                           ;	CPD = OFF, Disabled
 48307   300009                     	org	3145737
 48308   300009  C0                 	db	192
 48309                           
 48310                           ;Config register CONFIG6L @ 0x30000A
 48311                           ;	Table Write Protect 00800-03FFF
 48312                           ;	WRT0 = OFF, Disabled
 48313                           ;	Table Write Protect 04000-07FFF
 48314                           ;	WRT1 = OFF, Disabled
 48315                           ;	Table Write Protect 08000-0BFFF
 48316                           ;	WRT2 = OFF, Disabled
 48317                           ;	Table Write Protect 0C000-0FFFF
 48318                           ;	WRT3 = OFF, Disabled
 48319   30000A                     	org	3145738
 48320   30000A  0F                 	db	15
 48321                           
 48322                           ;Config register CONFIG6H @ 0x30000B
 48323                           ;	Config. Write Protect
 48324                           ;	WRTC = OFF, Disabled
 48325                           ;	Table Write Protect Boot
 48326                           ;	WRTB = OFF, Disabled
 48327                           ;	Data EE Write Protect
 48328                           ;	WRTD = OFF, Disabled
 48329   30000B                     	org	3145739
 48330   30000B  E0                 	db	224
 48331                           
 48332                           ;Config register CONFIG7L @ 0x30000C
 48333                           ;	Table Read Protect 00800-03FFF
 48334                           ;	EBTR0 = OFF, Disabled
 48335                           ;	Table Read Protect 04000-07FFF
 48336                           ;	EBTR1 = OFF, Disabled
 48337                           ;	Table Read Protect 08000-0BFFF
 48338                           ;	EBTR2 = OFF, Disabled
 48339                           ;	Table Read Protect 0C000-0FFFF
 48340                           ;	EBTR3 = OFF, Disabled
 48341   30000C                     	org	3145740
 48342   30000C  0F                 	db	15
 48343                           
 48344                           ;Config register CONFIG7H @ 0x30000D
 48345                           ;	Table Read Protect Boot
 48346                           ;	EBTRB = OFF, Disabled
 48347   30000D                     	org	3145741
 48348   30000D  40                 	db	64
 48349                           tosu	equ	0xFFF
 48350                           tosh	equ	0xFFE
 48351                           tosl	equ	0xFFD
 48352                           stkptr	equ	0xFFC
 48353                           pclatu	equ	0xFFB
 48354                           pclath	equ	0xFFA
 48355                           pcl	equ	0xFF9
 48356                           tblptru	equ	0xFF8
 48357                           tblptrh	equ	0xFF7
 48358                           tblptrl	equ	0xFF6
 48359                           tablat	equ	0xFF5
 48360                           prodh	equ	0xFF4
 48361                           prodl	equ	0xFF3
 48362                           indf0	equ	0xFEF
 48363                           postinc0	equ	0xFEE
 48364                           postdec0	equ	0xFED
 48365                           preinc0	equ	0xFEC
 48366                           plusw0	equ	0xFEB
 48367                           fsr0h	equ	0xFEA
 48368                           fsr0l	equ	0xFE9
 48369                           wreg	equ	0xFE8
 48370                           indf1	equ	0xFE7
 48371                           postinc1	equ	0xFE6
 48372                           postdec1	equ	0xFE5
 48373                           preinc1	equ	0xFE4
 48374                           plusw1	equ	0xFE3
 48375                           fsr1h	equ	0xFE2
 48376                           fsr1l	equ	0xFE1
 48377                           bsr	equ	0xFE0
 48378                           indf2	equ	0xFDF
 48379                           postinc2	equ	0xFDE
 48380                           postdec2	equ	0xFDD
 48381                           preinc2	equ	0xFDC
 48382                           plusw2	equ	0xFDB
 48383                           fsr2h	equ	0xFDA
 48384                           fsr2l	equ	0xFD9
 48385                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    586
    Data        0
    BSS         1863
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      81
    BANK0           160     73     115
    BANK1           256     69     255
    BANK2           256     45     249
    BANK3           256      0     200
    BANK4           256      0     192
    BANK5           256      0      72
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    ackEventCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    ackEventProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_postProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    APP_preProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    bootService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    bootService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    bootService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    bootService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    bootService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    bootService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    bootService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    bootService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canFillRxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canFillRxFifo@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    canReceiveMessage@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canReceiveMessage@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    canSendMessage@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    canSendMessage@mp	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    canService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    canService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    canService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    canService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), NULL(), 

    canService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), i2_canIsr(), mnsLowIsr(), NULL(), 

    canService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    canService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    canService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    canTransport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    canTransport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    checkLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    checkTxFifo@m	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    checkTxFifo@mp	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    consumer2QProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    eventAckService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventAckService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventAckService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventAckService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventAckService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventAckService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventAckService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventAckService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventCoeService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventCoeService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventCoeService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventCoeService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventCoeService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventCoeService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventCoeService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventCoeService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventConsumer2QService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventConsumer2QService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventConsumer2QService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventConsumer2QService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventConsumer2QService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventConsumer2QService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventConsumer2QService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventConsumer2QService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventProducerService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventProducerService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventProducerService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventProducerService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventProducerService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventProducerService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventProducerService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventProducerService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    eventTeachService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    eventTeachService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    eventTeachService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    eventTeachService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    eventTeachService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    eventTeachService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    eventTeachService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    eventTeachService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    factoryReset$8076	const PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    getNextWriteMessage@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), 

    getNextWriteMessage@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    getNumRxBuffersInUse@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    handleSelfEnumeration@p	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    mnsProcessMessage@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    mnsProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    mnsService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    mnsService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    mnsService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    mnsService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    mnsService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    mnsService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    mnsService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    mnsService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    mnsTRallDiagnosticsCallback@d	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    nvProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    nvService$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    nvService$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    nvService$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    nvService$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    nvService$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    nvService$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    nvService$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    nvService$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    peek@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    poll$8077	const PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    poll$8078	const PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    poll$8078$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    pop@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    pop@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    pop@ret	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    producerProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    push@m	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    push@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> txQueue(COMRAM[5]), 

    push@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    quantity@q	PTR struct MessageQueue size(1) Largest target is 6
		 -> rxQueue(COMRAM[5]), txQueue(COMRAM[5]), 

    quantity@q$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    rxQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    S208$4$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S208Service$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    S208Service$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    S208Service$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    S208Service$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    S208Service$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    S208Service$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    S208Service$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    S208Service$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    S352$0$0	PTR struct Message size(2) Largest target is 9
		 -> tmpMessage(BANK1[9]), 

    S352$1$0	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    S352Transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    S352Transport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    S5107MessageQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 

    services	const PTR const struct Service[9] size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), 

    services$factoryReset	PTR FTN()void  size(2) Largest target is 1
		 -> canFactoryReset(), mnsFactoryReset(), nvFactoryReset(), teachFactoryReset(), 
		 -> NULL(), 

    services$getDiagnostic	PTR FTN(unsigned char ,)PTR struct DiagnosticVal size(2) Largest target is 2
		 -> ackGetDiagnostic(), canGetDiagnostic(), consumer2QGetDiagnostic(), mnsGetDiagnostic(), 
		 -> nvGetDiagnostic(), producerGetDiagnostic(), teachGetDiagnostic(), NULL(), 

    services$getESDdata	PTR FTN(unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> canEsdData(), consumer2QEsdData(), nvGetESDdata(), producerEsdData(), 
		 -> teachGetESDdata(), NULL(), 

    services$highIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), NULL(), 

    services$lowIsr	PTR FTN()void  size(2) Largest target is 1
		 -> canIsr(), mnsLowIsr(), NULL(), 

    services$poll	PTR FTN()void  size(2) Largest target is 1
		 -> mnsPoll(), NULL(), 

    services$powerUp	PTR FTN()void  size(2) Largest target is 1
		 -> ackPowerUp(), canPowerUp(), consumer2QPowerUp(), mnsPowerUp(), 
		 -> nvPowerUp(), producerPowerUp(), teachPowerUp(), NULL(), 

    services$processMessage	PTR FTN(PTR struct Message,)enum E12743 size(2) Largest target is 1
		 -> ackEventProcessMessage(), bootProcessMessage(), canProcessMessage(), consumer2QProcessMessage(), 
		 -> mnsProcessMessage(), nvProcessMessage(), producerProcessMessage(), teachProcessMessage(), 
		 -> NULL(), 

    sp__ackGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__canGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__consumer2QGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__findService	PTR const struct Service size(2) Largest target is 18
		 -> bootService(CODE[18]), canService(CODE[18]), eventAckService(CODE[18]), eventCoeService(CODE[18]), 
		 -> eventConsumer2QService(CODE[18]), eventProducerService(CODE[18]), eventTeachService(CODE[18]), mnsService(CODE[18]), 
		 -> nvService(CODE[18]), NULL(NULL[0]), 

    sp__getBufferPointer	PTR unsigned char  size(2) Largest target is 1
		 -> B0CON(ABS[1]), B1CON(BITBIGSFRllhllhl[1]), B2CON(BITBIGSFRllhllhhl[1]), B3CON(BITBIGSFRllhllhhhl[1]), 
		 -> B4CON(BITBIGSFRllhllhhhhl[1]), B5CON(BITBIGSFRllhllhhhhhl[1]), RXB0CON(BITBIGSFRlhhllllll[1]), RXB1CON(BITBIGSFRllhhllll[1]), 
		 -> NULL(NULL[0]), 

    sp__getNextWriteMessage	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    sp__mnsGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__nvGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__peek	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__pop	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), NULL(NULL[0]), 

    sp__producerGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp__teachGetDiagnostic	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    sp_S208$9	PTR struct DiagnosticVal size(2) Largest target is 38
		 -> ackDiagnostics(BANK1[4]), canDiagnostics(BANK1[38]), consumer2QDiagnostics(BANK1[4]), mnsDiagnostics(BANK1[14]), 
		 -> nvDiagnostics(BANK1[6]), producerDiagnostics(BANK1[4]), teachDiagnostics(BANK1[4]), NULL(NULL[0]), 

    startTimedResponse@callback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12922 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), 

    teachCheckLen@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    teachProcessMessage@m	PTR struct Message size(2) Largest target is 9
		 -> poll@m(BANK2[9]), 

    timedResponseCallback	PTR FTN(unsigned char ,unsigned char ,unsigned char ,)enum E12922 size(2) Largest target is 1
		 -> mnsTRallDiagnosticsCallback(), mnsTRrqnpnCallback(), mnsTRserviceDiscoveryCallback(), nerdCallback(), 
		 -> nvTRnvrdCallback(), reqevCallback(), sodTRCallback(), NULL(), 

    transport	PTR const struct Transport size(2) Largest target is 4
		 -> canTransport(CODE[4]), NULL(NULL[0]), 

    transport$receiveMessage	PTR FTN(PTR struct Message,)enum E12854 size(2) Largest target is 1
		 -> canReceiveMessage(), 

    transport$sendMessage	PTR FTN(PTR struct Message,)enum E12858 size(2) Largest target is 1
		 -> canSendMessage(), 

    txQueue$messages	PTR struct Message size(2) Largest target is 288
		 -> rxBuffers(BIGRAM[288]), txBuffers(BANK5[72]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isrLow in COMRAM

    None.

Critical Paths under _isrHigh in COMRAM

    _isrHigh->_highIsr
    i2_canIsr->i2_checkCANTimeout
    i2_checkCANTimeout->i2_checkTxFifo
    i2_canTxError->i2_checkTxFifo
    i2_checkTxFifo->i2_getNextWriteMessage
    i2_canFillRxFifo->i2_getNextWriteMessage
    _timer3DoneInterruptHandler->i2_setOutputPin
    _timer1DoneInterruptHandler->i2_setOutputPin
    i2_setOutputPin->i2_getNV

Critical Paths under _main in BANK0

    _setup->_initServos
    _initServos->_setOutputPosition
    _setOutputPosition->_setServoPosition
    _initInputScan->_readNVM
    _nvPowerUp->_loadNvCache
    _mnsPowerUp->_readNVM
    _mnsPowerUp->_tickGet
    _leds_powerUp->_tickGet
    _canPowerUp->_readNVM
    _canPowerUp->_tickGet
    _teachProcessMessage->_sendMessage3
    _teachProcessMessage->_teachCheckLen
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage3
    _doReqev->_sendMessage3
    _doNnevn->_sendMessage3
    _doNnclr->_sendMessage2
    _doNerd->_startTimedResponse
    _doNenrd->_sendMessage3
    _doEvuln->_sendMessage2
    _doEvuln->_sendMessage3
    _doEvlrn->_sendMessage2
    _doEvlrn->_sendMessage3
    _producerProcessMessage->_sendMessage3
    _APP_GetEventState->___awdiv
    _numEv->_validStart
    _nvProcessMessage->_sendMessage2
    _nvProcessMessage->_sendMessage3
    _setNV->_writeNVM
    _setServoPosition->___awdiv
    _APP_nvValidate->___awdiv
    _mnsProcessMessage->_sendMessage2
    _mnsProcessMessage->_sendMessage3
    _mnsProcessMessage->_writeNVM
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _getParameter->_getParameterFlags
    _getParameterFlags->_have
    _canGetDiagnostic->_getNumRxBuffersInUse
    _mnsPoll->_sendMessage2
    _mnsPoll->_writeNVM
    _setLEDsByMode->_showStatus
    _sendMessage2->_sendMessage
    _setNewCanId->_writeNVM
    _handleSelfEnumeration->_tickGet
    _getNumRxBuffersInUse->_quantity
    _bootProcessMessage->_writeNVM
    _sendMessage7->_sendMessage
    _isConsumedEvent->_getEv
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_sendProducedEvent
    _setupTimer3->_setOutputPin
    _setupTimer1->_setOutputPin
    _pollServos->_sendProducedEvent
    _pollServos->_writeNVM
    _bounceUp->___awdiv
    _bounceDown->___awdiv
    _processOutputs->_sendProducedEvent
    _startServoOutput->_getNV
    _startMultiOutput->_getNV
    _startDigitalOutput->_writeNVM
    _sendInvertedProducedEvent->_sendProducedEvent
    _setOutputState->_setBounceState
    _setOutputState->_setMultiState
    _setOutputState->_setServoState
    _setServoState->_getNV
    _setMultiState->_getNV
    _setBounceState->_getNV
    _getTwoAction->_peekTwoActionQueue
    _doWait->___lmul
    _doSOD->_startTimedResponse
    _startTimedResponse->_findServiceIndex
    _inputScan->_sendProducedEvent
    _inputScan->_writeNVM
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _sendMessage->_canSendMessage
    _canSendMessage->_getNextWriteMessage
    _canSendMessage->_push
    _getNumTxBuffersInUse->_quantity
    _readInput->_getNV
    _checkPowerOnPb->_pbDownTimer
    _checkPowerOnPb->_pbUpTimer
    _pbUpTimer->___lldiv
    _pbDownTimer->___lldiv
    _leds_poll->___awdiv
    ___lmul->_getNV
    ___lldiv->_tickGet
    _factoryReset->_writeNVM
    _clearAllEvents->_writeNVM
    _nvFactoryReset->_writeNVM
    _APP_nvDefault->___awdiv
    ___wmul->_getNV
    ___awdiv->___wmul
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _saveNV->_writeNVM
    _loadNvCache->_readNVM
    _addEvent->_writeNVM
    _writeEv->_writeNVM
    _removeTableEntry->_writeNVM
    _rebuildHashtable->_getHash
    _getEv->_validStart
    _getEVs->_validStart
    _validStart->_readNVM
    _findEvent->_getHash
    _getNN->_readNVM
    _getHash->_getNN
    _getEN->_readNVM
    _configIO->_writeNVM
    _writeNVM->_APP_nvDefault
    _FLASH_Write->_flushFlashBlock
    _flushFlashBlock->_eraseFlashBlock
    _EEPROM_Write->_EEPROM_Read
    _setDigitalOutput->_readNVM
    _setOutputPin->_getNV
    _readNVM->_FLASH_Read

Critical Paths under _isrLow in BANK0

    _isrLow->_lowIsr
    _canIsr->_checkCANTimeout
    _checkCANTimeout->_checkTxFifo
    _canTxError->_checkTxFifo
    _checkTxFifo->i1_getNextWriteMessage
    _canFillRxFifo->i1_getNextWriteMessage

Critical Paths under _isrHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _setup->_configIO
    _powerUp->_teachPowerUp
    _teachPowerUp->_rebuildHashtable
    _poll->_mnsProcessMessage
    _poll->_nvProcessMessage
    _poll->_producerProcessMessage
    _teachCheckLen->_checkLen
    _doRqevn->_sendMessage3
    _doReval->_sendMessage5
    _doReqev->_sendMessage6
    _doNnevn->_sendMessage3
    _doNnclr->_clearAllEvents
    _doNenrd->_sendMessage5
    _doEvuln->_removeEvent
    _removeEvent->_removeTableEntry
    _doEvlrn->_APP_addEvent
    _APP_addEvent->_addEvent
    _pollTimedResponse->_reqevCallback
    _sodTRCallback->_sendInvertedProducedEvent
    _nvProcessMessage->_setNV
    _setNV->_APP_nvValueChanged
    _APP_nvValueChanged->_setType
    _sendMessage6->_sendMessage
    _sendMessage3->_sendMessage
    _mnsPoll->_sendMessage5
    _sendMessage2->_sendMessage
    _canReceiveMessage->_processEnumeration
    _processEnumeration->_setNewCanId
    _setNewCanId->_writeNVM
    _sendMessage7->_sendMessage
    _ackEventCheckLen->_checkLen
    _checkLen->_sendMessage5
    _sendMessage5->_sendMessage
    _loop->_processActions
    _startServos->_pollServos
    _pollServos->_sendProducedEvent
    _processOutputs->_sendProducedEvent
    _processActions->_startOutput
    _startOutput->_startDigitalOutput
    _startDigitalOutput->_sendInvertedProducedEvent
    _sendInvertedProducedEvent->_sendProducedEvent
    _inputScan->_sendProducedEvent
    _sendProducedEvent->_sendMessage4
    _sendMessage4->_sendMessage
    _checkPowerOnPb->_factoryReset
    _factoryReset->_APP_factoryReset
    _teachFactoryReset->_clearAllEvents
    _clearAllEvents->_rebuildHashtable
    _nvFactoryReset->_writeNVM
    _mnsFactoryReset->_writeNVM
    _canFactoryReset->_writeNVM
    _APP_factoryReset->_setType
    _setType->_defaultEvents
    _defaultNVs->_saveNV
    _saveNV->_writeNVM
    _defaultEvents->_addEvent
    _clearEvents->_deleteActionRange
    _deleteHappeningRange->_writeEv
    _deleteActionRange->_writeEv
    _addEvent->_writeEv
    _writeEv->_checkRemoveTableEntry
    _checkRemoveTableEntry->_removeTableEntry
    _removeTableEntry->_rebuildHashtable
    _configIO->_writeNVM

Critical Paths under _isrLow in BANK1

    None.

Critical Paths under _isrHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_poll
    _poll->_mnsProcessMessage

Critical Paths under _isrLow in BANK2

    None.

Critical Paths under _isrHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrLow in BANK3

    None.

Critical Paths under _isrHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isrLow in BANK4

    None.

Critical Paths under _isrHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isrLow in BANK5

    None.

Critical Paths under _isrHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isrLow in BANK6

    None.

Critical Paths under _isrHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isrLow in BANK7

    None.

Critical Paths under _isrHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isrLow in BANK8

    None.

Critical Paths under _isrHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isrLow in BANK9

    None.

Critical Paths under _isrHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isrLow in BANK10

    None.

Critical Paths under _isrHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isrLow in BANK11

    None.

Critical Paths under _isrHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isrLow in BANK12

    None.

Critical Paths under _isrHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isrLow in BANK13

    None.

Critical Paths under _isrHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isrLow in BANK14

    None.

Critical Paths under _isrHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 4082251
                     _checkPowerOnPb
                       _factoryReset
                         _initRomOps
                               _loop
                               _poll
                            _powerUp
                            _readNVM
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   31895
                           _configIO
                              _getNV
                      _initInputScan
                        _initOutputs
                         _initServos
              _setTimedResponseDelay
                            _tickGet
                _universalEventsInit
 ---------------------------------------------------------------------------------
 (2) _universalEventsInit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initServos                                           5     5      0    9755
                                             68 BANK0      5     5      0
                              _getNV
                            _readNVM
                  _setOutputPosition
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _setOutputPosition                                    3     1      2    4743
                                             65 BANK0      3     1      2
                              _getNV
                            _readNVM (ARG)
                   _setDigitalOutput
                       _setOutputPin
                   _setServoPosition
 ---------------------------------------------------------------------------------
 (2) _initOutputs                                          1     1      0      90
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _initInputScan                                        3     3      0    4468
                                             55 BANK0      3     3      0
                              _getNV
                          _readInput
                            _readNVM
 ---------------------------------------------------------------------------------
 (1) _powerUp                                              6     6      0   37523
                                             10 BANK1      5     5      0
                                NULL *
                         _ackPowerUp *
                         _canPowerUp *
                  _consumer2QPowerUp *
                         _initTicker
                  _initTimedResponse
                       _leds_powerUp
                         _mnsPowerUp *
                          _nvPowerUp *
                    _producerPowerUp *
                       _teachPowerUp *
 ---------------------------------------------------------------------------------
 (2) _teachPowerUp                                         1     1      0   23142
                                              9 BANK1      1     1      0
                   _rebuildHashtable
 ---------------------------------------------------------------------------------
 (2) _producerPowerUp                                      1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _nvPowerUp                                            1     1      0    4322
                                             60 BANK0      1     1      0
                        _loadNvCache
 ---------------------------------------------------------------------------------
 (2) _mnsPowerUp                                           3     3      0    4736
                                             55 BANK0      3     3      0
                            _readNVM
                      _setLEDsByMode
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_powerUp                                         0     0      0     318
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _initTimedResponse                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTicker                                           3     3      0     136
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _consumer2QPowerUp                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _canPowerUp                                           3     3      0    4510
                                             55 BANK0      3     3      0
                            _readNVM
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _ackPowerUp                                           1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _poll                                                15    15      0 2628137
                                             30 BANK2     15    15      0
                                NULL *
             _APP_postProcessMessage
              _APP_preProcessMessage
                             ___lmul
             _ackEventProcessMessage *
                 _bootProcessMessage *
                  _canProcessMessage *
                  _canReceiveMessage *
           _consumer2QProcessMessage *
                    _flushFlashBlock
                          _leds_poll
                            _mnsPoll *
                  _mnsProcessMessage *
                   _nvProcessMessage *
                  _pollTimedResponse
             _producerProcessMessage *
                         _showStatus
                _teachProcessMessage *
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _teachProcessMessage                                  8     6      2  876696
                                             63 BANK1      2     0      2
                                              0 BANK2      6     6      0
                            _doEvlrn
                            _doEvuln
                            _doNenrd
                             _doNerd
                            _doNnclr
                            _doNnevn
                            _doReqev
                            _doReval
                            _doRqevn
                       _sendMessage3
                       _sendMessage5
                      _teachCheckLen
 ---------------------------------------------------------------------------------
 (3) _teachCheckLen                                        5     1      4   62481
                                             72 BANK0      1     1      0
                                             17 BANK1      4     0      4
                           _checkLen
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doRqevn                                              2     2      0   19982
                                              9 BANK1      2     2      0
                       _sendMessage3
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReval                                              7     6      1   66921
                                             13 BANK1      7     6      1
                 _evtIdxToTableIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _doReqev                                              8     3      5   88679
                                             14 BANK1      8     3      5
                          _findEvent
                   _findServiceIndex
                              _getEv
                              _numEv
                       _sendMessage3
                       _sendMessage5
                       _sendMessage6
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNnevn                                              7     7      0   19920
                                              9 BANK1      7     7      0
                            _readNVM
                       _sendMessage3
 ---------------------------------------------------------------------------------
 (3) _doNnclr                                              0     0      0   74278
                     _clearAllEvents
                       _sendMessage2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _doNerd                                               0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _doNenrd                                              6     6      0   57560
                                             13 BANK1      6     6      0
                 _evtIdxToTableIndex
                              _getEN
                              _getNN
                       _sendMessage3
                       _sendMessage5
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _evtIdxToTableIndex                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _doEvuln                                              5     1      4  109783
                                             20 BANK1      5     1      4
                        _removeEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _removeEvent                                          5     1      4   52528
                                             15 BANK1      5     1      4
                          _findEvent
                   _removeTableEntry
 ---------------------------------------------------------------------------------
 (3) _doEvlrn                                              7     1      6  328678
                                             52 BANK1      7     1      6
                       _APP_addEvent
                       _sendMessage2
                       _sendMessage3
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _APP_addEvent                                         8     1      7  270787
                                             44 BANK1      8     1      7
                           _addEvent
              _checkRemoveTableEntry
                   _rebuildHashtable
                            _writeEv
 ---------------------------------------------------------------------------------
 (2) _producerProcessMessage                              12    10      2   61588
                                             63 BANK1      6     4      2
                                              0 BANK2      6     6      0
                  _APP_GetEventState
                          _findEvent
                              _getEv
                       _sendMessage3
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (2) _pollTimedResponse                                    3     3      0  183718
                                             41 BANK1      3     3      0
                                NULL *
        _mnsTRallDiagnosticsCallback *
                 _mnsTRrqnpnCallback *
      _mnsTRserviceDiscoveryCallback *
                       _nerdCallback *
                   _nvTRnvrdCallback *
                      _reqevCallback *
                      _sodTRCallback *
 ---------------------------------------------------------------------------------
 (3) _sodTRCallback                                       14    12      2   45824
                                             26 BANK1     13    11      2
                  _APP_GetEventState
                            ___awdiv
                              _getNV
          _sendInvertedProducedEvent
 ---------------------------------------------------------------------------------
 (3) _APP_GetEventState                                   11    11      0   11334
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                              _getNV
                            _readNVM
 ---------------------------------------------------------------------------------
 (3) _reqevCallback                                       15    13      2   39302
                                             26 BANK1     15    13      2
                              _getEN
                              _getEv
                              _getNN
                              _numEv
                       _sendMessage6
 ---------------------------------------------------------------------------------
 (4) _numEv                                                7     7      0    8418
                                             61 BANK0      7     7      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (3) _nvTRnvrdCallback                                     5     3      2   13934
                                             26 BANK1      4     2      2
                              _getNV
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _nerdCallback                                         7     5      2   26783
                                             26 BANK1      6     4      2
                              _getEN
                              _getNN
                       _sendMessage7
                 _tableIndexToEvtIdx
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _tableIndexToEvtIdx                                   1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _mnsTRserviceDiscoveryCallback                        7     5      2   29138
                                             26 BANK1      6     4      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (3) _mnsTRrqnpnCallback                                   3     1      2   14215
                                             26 BANK1      2     0      2
                       _getParameter
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _mnsTRallDiagnosticsCallback                          9     7      2   14488
                                             26 BANK1      8     6      2
                                NULL *
                   _ackGetDiagnostic *
                   _canGetDiagnostic *
            _consumer2QGetDiagnostic *
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
              _producerGetDiagnostic *
                       _sendMessage6
                 _teachGetDiagnostic *
 ---------------------------------------------------------------------------------
 (2) _nvProcessMessage                                     6     4      2  591458
                                             63 BANK1      6     4      2
                   _findServiceIndex
                              _getNV
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                              _setNV
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (3) _setNV                                                5     4      1  518036
                                             58 BANK1      5     4      1
                     _APP_nvValidate
                 _APP_nvValueChanged
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_nvValueChanged                                   8     6      2  498723
                                             51 BANK1      7     5      2
                            ___awdiv
                            ___awmod
                              _getNV
                     _setBounceState
                      _setMultiState
                   _setServoPosition
                      _setServoState
              _setTimedResponseDelay
                            _setType
                  _startBounceOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (2) _setTimedResponseDelay                                1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _setServoPosition                                     2     1      1     304
                                             63 BANK0      2     1      1
                            ___awdiv (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _APP_nvValidate                                       3     2      1    9015
                                             63 BANK0      2     1      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _mnsProcessMessage                                   37    35      2  705086
                                             63 BANK1      6     4      2
                                              0 BANK2     30    30      0
                                NULL *
                   _ackGetDiagnostic *
                         _canEsdData *
                   _canGetDiagnostic *
                  _consumer2QEsdData *
            _consumer2QGetDiagnostic *
                       _factoryReset
                   _findServiceIndex
                       _getParameter
                  _getParameterFlags
                   _mnsGetDiagnostic *
                    _nvGetDiagnostic *
                       _nvGetESDdata *
                    _producerEsdData *
              _producerGetDiagnostic *
                   _rebuildHashtable
                       _sendMessage2
                       _sendMessage3
                       _sendMessage4
                       _sendMessage5
                       _sendMessage6
                       _sendMessage7
                      _setLEDsByMode
                 _startTimedResponse
                 _teachGetDiagnostic *
                    _teachGetESDdata *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _teachGetESDdata                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _teachGetDiagnostic                                   3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _sendMessage6                                         7     1      6   12845
                                             70 BANK0      1     1      0
                                              8 BANK1      6     0      6
                              _numEv (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (3) _sendMessage3                                         4     1      3   15722
                                             70 BANK0      3     0      3
                                              8 BANK1      1     1      0
                        _sendMessage
 ---------------------------------------------------------------------------------
 (4) _producerGetDiagnostic                                3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _producerEsdData                                      1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _nvGetESDdata                                         1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _nvGetDiagnostic                                      3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _mnsGetDiagnostic                                     3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _getParameter                                         2     2      0     439
                                             50 BANK0      1     1      0
                  _getParameterFlags
                               _have
 ---------------------------------------------------------------------------------
 (5) _getParameterFlags                                    1     1      0     247
                                             49 BANK0      1     1      0
                               _have
 ---------------------------------------------------------------------------------
 (4) _consumer2QGetDiagnostic                              3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _consumer2QEsdData                                    1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _canGetDiagnostic                                     4     2      2    1020
                                             54 BANK0      4     2      2
               _getNumRxBuffersInUse
               _getNumTxBuffersInUse
 ---------------------------------------------------------------------------------
 (3) _canEsdData                                           1     1      0      31
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ackGetDiagnostic                                     3     1      2      62
                                             54 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _mnsPoll                                              4     4      0   51318
                                             13 BANK1      4     4      0
                       _sendMessage2
                       _sendMessage5
                      _setLEDsByMode
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _setLEDsByMode                                        0     0      0      31
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _sendMessage2                                         3     1      2   12181
                                             70 BANK0      3     1      2
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _consumer2QProcessMessage                            20    18      2   30238
                                             63 BANK1      5     3      2
                                              0 BANK2     14    14      0
                            ___awdiv
                            ___awmod
                          _findEvent
                             _getEVs
                              _getNV
                      _pushTwoAction
                _setExpeditedActions
                   _setNormalActions
 ---------------------------------------------------------------------------------
 (3) _setNormalActions                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _setExpeditedActions                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pushTwoAction                                        1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _canReceiveMessage                                   10     8      2   13809
                                             10 BANK1      9     7      2
                   _getBufferPointer
               _getNumRxBuffersInUse
              _handleSelfEnumeration
                             _memcpy
                                _pop
                 _processEnumeration
 ---------------------------------------------------------------------------------
 (3) _processEnumeration                                   7     7      0   10643
                                              3 BANK1      7     7      0
                        _setNewCanId
                            _tickGet
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (4) _setNewCanId                                          1     1      0    9960
                                              2 BANK1      1     1      0
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _pop                                                  9     7      2     427
                                             45 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     478
                                             45 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) _handleSelfEnumeration                                7     5      2     659
                                             55 BANK0      7     5      2
                            _tickGet
 ---------------------------------------------------------------------------------
 (5) _getNumRxBuffersInUse                                 4     4      0     564
                                             50 BANK0      4     4      0
                   _getBufferPointer
                           _quantity
 ---------------------------------------------------------------------------------
 (6) _getBufferPointer                                     3     1      2      31
                                             45 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _canProcessMessage                                    4     2      2   29169
                                             63 BANK1      4     2      2
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (2) _bootProcessMessage                                   4     2      2    9898
                                             63 BANK1      4     2      2
                           _writeNVM
 ---------------------------------------------------------------------------------
 (2) _ackEventProcessMessage                              11     9      2   64898
                                             63 BANK1      4     2      2
                                              0 BANK2      5     5      0
                   _ackEventCheckLen
                          _findEvent
                        _findService
                    _isConsumedEvent
                       _sendMessage7
 ---------------------------------------------------------------------------------
 (4) _sendMessage7                                         8     1      7   13956
                                             70 BANK0      1     1      0
                                              8 BANK1      7     0      7
                                NULL (ARG) *
                         _canEsdData (ARG) *
                  _consumer2QEsdData (ARG) *
                       _nvGetESDdata (ARG) *
                    _producerEsdData (ARG) *
                        _sendMessage
                 _tableIndexToEvtIdx (ARG)
                    _teachGetESDdata (ARG) *
 ---------------------------------------------------------------------------------
 (3) _isConsumedEvent                                      2     2      0    9141
                                             70 BANK0      2     2      0
                              _getEv
 ---------------------------------------------------------------------------------
 (3) _findService                                          6     4      2     192
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _ackEventCheckLen                                     3     0      3   30013
                                             17 BANK1      3     0      3
                           _checkLen
 ---------------------------------------------------------------------------------
 (4) _checkLen                                             5     1      4   29771
                                             71 BANK0      1     1      0
                                             13 BANK1      4     0      4
                       _sendMessage5
 ---------------------------------------------------------------------------------
 (4) _sendMessage5                                         6     1      5   29014
                                             70 BANK0      1     1      0
                                              8 BANK1      5     0      5
                  _getParameterFlags (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (2) _APP_preProcessMessage                                2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _APP_postProcessMessage                               2     0      2      90
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _loop                                                 8     8      0  223557
                                             46 BANK1      8     8      0
                             ___lmul
                              _getNV
                          _inputScan
                     _processActions
                     _processOutputs
                  _sendProducedEvent
                        _startServos
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _startServos                                          1     1      0   72844
                                             30 BANK1      1     1      0
                              _getNV
                         _pollServos
                        _setupTimer1
                        _setupTimer3
 ---------------------------------------------------------------------------------
 (3) _setupTimer3                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _setupTimer1                                          8     8      0    1850
                                             53 BANK0      8     8      0
                              _getNV
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (3) _pollServos                                          12    12      0   68859
                                             18 BANK1     12    12      0
                            ___awdiv
                         _bounceDown
                           _bounceUp
                              _getNV
                         _initBounce
                  _sendProducedEvent
                            _tickGet
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _initBounce                                           1     1      0      62
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _bounceUp                                             9     9      0    8078
                                             63 BANK0      9     9      0
                            ___awdiv
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _bounceDown                                          11    11      0   12774
                                             63 BANK0      7     7      0
                                              0 BANK1      4     4      0
                            ___awdiv
                             ___wmul
                              _getNV
 ---------------------------------------------------------------------------------
 (2) _processOutputs                                       2     2      0   27391
                                             18 BANK1      2     2      0
                              _getNV
                  _sendProducedEvent
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (2) _processActions                                       9     9      0   61571
                                             37 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                          _completed
               _deleteTwoActionQueue
                              _doSOD
                             _doWait
                      _doneTwoAction
                     _finaliseOutput
                              _getNV
                       _getTwoAction
                      _needsStarting
                 _peekTwoActionQueue
                     _setOutputState
                        _startOutput
 ---------------------------------------------------------------------------------
 (3) _startOutput                                          3     1      2   42050
                                             34 BANK1      3     1      2
                  _startBounceOutput
                 _startDigitalOutput
                   _startMultiOutput
                   _startServoOutput
 ---------------------------------------------------------------------------------
 (5) _startServoOutput                                     3     2      1     766
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _startMultiOutput                                     3     2      1     822
                                             49 BANK0      3     2      1
                              _getNV
 ---------------------------------------------------------------------------------
 (4) _startDigitalOutput                                   8     7      1   39398
                                             26 BANK1      8     7      1
                              _getNV
          _sendInvertedProducedEvent
                       _setOutputPin
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _sendInvertedProducedEvent                            8     4      4   26683
                                             18 BANK1      8     4      4
                              _getNV (ARG)
                  _sendProducedEvent
 ---------------------------------------------------------------------------------
 (5) _startBounceOutput                                    2     1      1     425
                                             45 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _setOutputState                                       3     1      2    2869
                                             51 BANK0      3     1      2
                     _setBounceState
                      _setMultiState
                      _setServoState
 ---------------------------------------------------------------------------------
 (5) _setServoState                                        2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setMultiState                                        2     1      1     884
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (5) _setBounceState                                       2     1      1     704
                                             49 BANK0      2     1      1
                              _getNV
 ---------------------------------------------------------------------------------
 (3) _needsStarting                                        5     3      2     515
                                             45 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _getTwoAction                                         0     0      0     362
                 _peekTwoActionQueue
 ---------------------------------------------------------------------------------
 (3) _peekTwoActionQueue                                   2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _finaliseOutput                                       2     1      1     211
                                             45 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (3) _doWait                                               6     4      2    1905
                                             61 BANK0      6     4      2
                             ___lmul
                      _doneTwoAction
                            _tickGet
 ---------------------------------------------------------------------------------
 (3) _doneTwoAction                                        0     0      0      20
                       _popTwoAction
 ---------------------------------------------------------------------------------
 (4) _popTwoAction                                         1     1      0      20
 ---------------------------------------------------------------------------------
 (3) _doSOD                                                0     0      0    1818
                   _findServiceIndex
                 _startTimedResponse
 ---------------------------------------------------------------------------------
 (4) _startTimedResponse                                   4     1      3    1626
                                             49 BANK0      4     1      3
                   _findServiceIndex (ARG)
 ---------------------------------------------------------------------------------
 (4) _findServiceIndex                                     4     4      0     192
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _deleteTwoActionQueue                                 2     2      0     362
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _completed                                            6     4      2     583
                                             45 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _inputScan                                            4     4      0   35240
                                             18 BANK1      4     4      0
                              _getNV
                          _readInput
                  _sendProducedEvent
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _sendProducedEvent                                    8     7      1   24924
                                             71 BANK0      2     1      1
                                             12 BANK1      6     6      0
                              _getEN
                              _getNN
                              _getNV (ARG)
                       _sendMessage4
 ---------------------------------------------------------------------------------
 (3) _sendMessage4                                         5     1      4   13683
                                             70 BANK0      1     1      0
                                              8 BANK1      4     0      4
                       _getParameter (ARG)
                        _sendMessage
 ---------------------------------------------------------------------------------
 (5) _sendMessage                                         11     3      8    9928
                                             67 BANK0      3     3      0
                                              0 BANK1      8     0      8
                     _canSendMessage *
 ---------------------------------------------------------------------------------
 (6) _canSendMessage                                      10     8      2    3889
                                             57 BANK0     10     8      2
                _getNextWriteMessage
               _getNumTxBuffersInUse
                               _have
                            _isEvent
                               _push
                           _quantity
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (7) _push                                                12     9      3    1234
                                             45 BANK0     12     9      3
 ---------------------------------------------------------------------------------
 (7) _isEvent                                              2     2      0      99
                                             45 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _have                                                 4     4      0     161
                                             45 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) _getNumTxBuffersInUse                                 0     0      0     363
                           _quantity
 ---------------------------------------------------------------------------------
 (7) _quantity                                             5     4      1     363
                                             45 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (7) _getNextWriteMessage                                 12    10      2     513
                                             45 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (3) _readInput                                            3     3      0     248
                                             49 BANK0      3     3      0
                              _getNV
 ---------------------------------------------------------------------------------
 (1) _initRomOps                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkPowerOnPb                                       1     1      0  587918
                                             57 BANK1      1     1      0
                       _APP_testMode
                       _factoryReset
                        _pbDownTimer
                          _pbUpTimer
                         _showStatus
 ---------------------------------------------------------------------------------
 (4) _showStatus                                           3     3      0      31
                                             45 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pbUpTimer                                            5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _pbDownTimer                                          5     5      0    9234
                                             68 BANK0      5     5      0
                            ___lldiv
                             ___lmul
                          _leds_poll
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _leds_poll                                            4     4      0    7243
                                             63 BANK0      4     4      0
                            ___awdiv
                            _tickGet
 ---------------------------------------------------------------------------------
 (2) _tickGet                                             10     6      4     318
                                             45 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8    1176
                                             49 BANK0     12     4      8
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     466
                                             55 BANK0     13     5      8
                            _tickGet (ARG)
 ---------------------------------------------------------------------------------
 (3) _factoryReset                                         5     5      0  569193
                                             52 BANK1      5     5      0
                                NULL *
                   _APP_factoryReset
                    _canFactoryReset *
                    _mnsFactoryReset *
                     _nvFactoryReset *
                  _teachFactoryReset *
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _teachFactoryReset                                    0     0      0   33083
                     _clearAllEvents
 ---------------------------------------------------------------------------------
 (4) _clearAllEvents                                       5     5      0   33083
                                              9 BANK1      5     5      0
                    _flushFlashBlock
                   _rebuildHashtable
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _nvFactoryReset                                       3     3      0   23401
                                              2 BANK1      3     3      0
                      _APP_nvDefault
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _APP_nvDefault                                        7     7      0   13497
                                             63 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    4538
                                             49 BANK0      6     2      4
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1873
                                             45 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    6925
                                             55 BANK0      8     4      4
                             ___wmul (ARG)
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (4) _mnsFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _canFactoryReset                                      0     0      0    9774
                           _writeNVM
 ---------------------------------------------------------------------------------
 (4) _APP_factoryReset                                     3     3      0  483226
                                             51 BANK1      1     1      0
           _factoryResetGlobalEvents
                    _flushFlashBlock
                            _setType
 ---------------------------------------------------------------------------------
 (5) _setType                                              3     2      1  482892
                                             48 BANK1      3     2      1
                           _configIO
                      _defaultEvents
                         _defaultNVs
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _defaultNVs                                           5     4      1   14583
                                              6 BANK1      5     4      1
                        _loadNvCache
                             _saveNV
 ---------------------------------------------------------------------------------
 (6) _saveNV                                               4     3      1   10078
                                              2 BANK1      4     3      1
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _loadNvCache                                          5     5      0    4223
                                             55 BANK0      5     5      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (6) _defaultEvents                                        5     4      1  440536
                                             44 BANK1      4     3      1
                           _addEvent
                        _clearEvents
 ---------------------------------------------------------------------------------
 (7) _clearEvents                                          1     1      0  317492
                                             39 BANK1      1     1      0
                  _deleteActionRange
               _deleteHappeningRange
 ---------------------------------------------------------------------------------
 (8) _deleteHappeningRange                                10     9      1  156300
                                             29 BANK1      9     8      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (8) _deleteActionRange                                   10     9      1  161099
                                             29 BANK1     10     9      1
              _checkRemoveTableEntry
                    _flushFlashBlock
                             _getEVs
                   _rebuildHashtable
                         _validStart
                            _writeEv
 ---------------------------------------------------------------------------------
 (5) _addEvent                                            15     8      7  122424
                                             29 BANK1     15     8      7
                          _findEvent
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                            _writeEv
                           _writeNVM
 ---------------------------------------------------------------------------------
 (5) _writeEv                                             12    10      2   70117
                                             17 BANK1     12    10      2
              _checkRemoveTableEntry
                            _readNVM
                           _writeNVM
 ---------------------------------------------------------------------------------
 (6) _checkRemoveTableEntry                                2     2      0   54347
                                             15 BANK1      2     2      0
                             _getEVs
                   _removeTableEntry
                         _validStart
 ---------------------------------------------------------------------------------
 (5) _removeTableEntry                                     6     6      0   41393
                                              9 BANK1      6     6      0
                    _flushFlashBlock
                            _readNVM
                   _rebuildHashtable
                         _validStart
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _rebuildHashtable                                    11    11      0   23043
                                              0 BANK1      9     9      0
                              _getEN
                              _getEv
                            _getHash
                              _getNN
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _getEv                                                9     7      2    9076
                                             61 BANK0      9     7      2
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (7) _getEVs                                               8     8      0    8638
                                             61 BANK0      8     8      0
                            _readNVM
                         _validStart
 ---------------------------------------------------------------------------------
 (4) _validStart                                           6     6      0    4124
                                             55 BANK0      6     6      0
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _findEvent                                           13     9      4   10828
                                              0 BANK1     13     9      4
                              _getEN
                            _getHash
                              _getNN
 ---------------------------------------------------------------------------------
 (4) _getNN                                               12    10      2    4223
                                             55 BANK0     12    10      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (4) _getHash                                              6     2      4     555
                                             67 BANK0      6     2      4
                              _getEN (ARG)
                              _getNN (ARG)
 ---------------------------------------------------------------------------------
 (4) _getEN                                               11     9      2    4158
                                             55 BANK0     11     9      2
                            _readNVM
 ---------------------------------------------------------------------------------
 (2) _configIO                                             8     8      0   17140
                                              2 BANK1      8     8      0
                              _getNV
                            _readNVM
                   _setDigitalOutput
                           _writeNVM
 ---------------------------------------------------------------------------------
 (3) _writeNVM                                             7     3      4    9774
                                             68 BANK0      5     1      4
                                              0 BANK1      2     2      0
                      _APP_nvDefault (ARG)
                       _EEPROM_Write
                        _FLASH_Write
 ---------------------------------------------------------------------------------
 (4) _FLASH_Write                                          8     5      3     728
                                             48 BANK0      7     4      3
                    _eraseFlashBlock
                    _flushFlashBlock
                     _loadFlashBlock
 ---------------------------------------------------------------------------------
 (5) _loadFlashBlock                                       1     1      0      99
                                             45 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _flushFlashBlock                                      2     2      0     167
                                             46 BANK0      2     2      0
     _APP_isSuitableTimeToWriteFlash
                    _eraseFlashBlock
 ---------------------------------------------------------------------------------
 (6) _eraseFlashBlock                                      1     1      0      34
                                             45 BANK0      1     1      0
     _APP_isSuitableTimeToWriteFlash
 ---------------------------------------------------------------------------------
 (7) _APP_isSuitableTimeToWriteFlash                       0     0      0       0
                    _isNoServoPulses
 ---------------------------------------------------------------------------------
 (8) _isNoServoPulses                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Write                                         4     1      3     611
                                             47 BANK0      4     1      3
                        _EEPROM_Read
            _updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (5) _updateModuleErrorStatus                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _setDigitalOutput                                     3     2      1    2269
                                             55 BANK0      3     2      1
                              _getNV
                            _readNVM (ARG)
                       _setOutputPin
 ---------------------------------------------------------------------------------
 (4) _setOutputPin                                         4     3      1    1500
                                             49 BANK0      4     3      1
                              _getNV (ARG)
 ---------------------------------------------------------------------------------
 (5) _getNV                                                4     2      2      93
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _readNVM                                              6     3      3    4028
                                             49 BANK0      6     3      3
                        _EEPROM_Read
                         _FLASH_Read
 ---------------------------------------------------------------------------------
 (4) _FLASH_Read                                           4     2      2     183
                                             45 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _EEPROM_Read                                          2     0      2     242
                                             45 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _factoryResetGlobalEvents                             0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _APP_testMode                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _isrLow                                             15    15      0    7802
                                             30 BANK0     15    15      0
                             _lowIsr
 ---------------------------------------------------------------------------------
 (19) _lowIsr                                              5     5      0    7802
                                             25 BANK0      5     5      0
                                NULL *
                         _APP_lowIsr
                             _canIsr *
                          _mnsLowIsr *
 ---------------------------------------------------------------------------------
 (20) _mnsLowIsr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (20) _canIsr                                              0     0      0    7641
                      _canFillRxFifo
                         _canTxError
                    _checkCANTimeout
                        _checkTxFifo
 ---------------------------------------------------------------------------------
 (21) _checkCANTimeout                                     4     4      0    2402
                                             21 BANK0      4     4      0
                        _checkTxFifo
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _canTxError                                          0     0      0    2084
                        _checkTxFifo
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (21) _checkTxFifo                                         9     9      0    2084
                                             12 BANK0      9     9      0
              i1_getNextWriteMessage
                          i1_isEvent
                              i1_pop
                          i1_tickGet
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_tickGet                                          10     6      4     318
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (22) i1_pop                                               9     7      2     317
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (22) i1_isEvent                                           2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (21) _canFillRxFifo                                       5     5      0    1071
                                             12 BANK0      4     4      0
                 i1_getBufferPointer
              i1_getNextWriteMessage
          i1_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (22) i1_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (22) i1_getNextWriteMessage                              12    10      2     383
                                              0 BANK0     12    10      2
 ---------------------------------------------------------------------------------
 (22) i1_getBufferPointer                                  3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (20) _APP_lowIsr                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (24) _isrHigh                                            12    12      0    6190
                                             30 COMRAM    12    12      0
                            _highIsr
 ---------------------------------------------------------------------------------
 (25) _highIsr                                             5     5      0    6190
                                             25 COMRAM     5     5      0
                                NULL *
                        _APP_highIsr
                           i2_canIsr *
 ---------------------------------------------------------------------------------
 (26) i2_canIsr                                            0     0      0    5353
                    i2_canFillRxFifo
                       i2_canTxError
                  i2_checkCANTimeout
                      i2_checkTxFifo
 ---------------------------------------------------------------------------------
 (27) i2_checkCANTimeout                                   4     4      0    1672
                                             21 COMRAM     4     4      0
                      i2_checkTxFifo
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_canTxError                                        0     0      0    1461
                      i2_checkTxFifo
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (27) i2_checkTxFifo                                       9     9      0    1461
                                             12 COMRAM     9     9      0
              i2_getNextWriteMessage
                          i2_isEvent
                              i2_pop
                          i2_tickGet
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_tickGet                                          10     6      4     211
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (28) i2_pop                                               9     7      2     225
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (28) i2_isEvent                                           2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (27) i2_canFillRxFifo                                     5     5      0     759
                                             12 COMRAM     4     4      0
                 i2_getBufferPointer
              i2_getNextWriteMessage
          i2_updateModuleErrorStatus
 ---------------------------------------------------------------------------------
 (28) i2_updateModuleErrorStatus                           0     0      0       0
 ---------------------------------------------------------------------------------
 (28) i2_getNextWriteMessage                              12    10      2     273
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (28) i2_getBufferPointer                                  3     1      2      22
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (26) _APP_highIsr                                         0     0      0     676
         _timer1DoneInterruptHandler
         _timer3DoneInterruptHandler
 ---------------------------------------------------------------------------------
 (27) _timer3DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (27) _timer1DoneInterruptHandler                          0     0      0     338
                            i2_getNV
                     i2_setOutputPin
 ---------------------------------------------------------------------------------
 (28) i2_setOutputPin                                      4     3      1     272
                                              4 COMRAM     4     3      1
                            i2_getNV (ARG)
 ---------------------------------------------------------------------------------
 (28) i2_getNV                                             4     2      2      66
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (26) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 28
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkPowerOnPb
     _APP_testMode
     _factoryReset
       NULL(Fake) *
       _APP_factoryReset *
         _factoryResetGlobalEvents
         _flushFlashBlock
           _APP_isSuitableTimeToWriteFlash
             _isNoServoPulses
           _eraseFlashBlock
             _APP_isSuitableTimeToWriteFlash
         _setType
           _configIO
             _getNV
             _readNVM
               _EEPROM_Read
               _FLASH_Read
             _setDigitalOutput
               _getNV
               _readNVM (ARG)
               _setOutputPin (ARG)
                 _getNV (ARG)
             _writeNVM
               _APP_nvDefault (ARG)
                 ___awdiv
                   ___wmul (ARG)
                     _getNV (ARG)
                   _getNV (ARG)
                 ___awmod
                 ___wmul
               _EEPROM_Write (ARG)
                 _EEPROM_Read
                 _updateModuleErrorStatus
               _FLASH_Write (ARG)
                 _eraseFlashBlock
                 _flushFlashBlock
                 _loadFlashBlock
           _defaultEvents
             _addEvent
               _findEvent
                 _getEN
                   _readNVM
                 _getHash
                   _getEN (ARG)
                   _getNN (ARG)
                     _readNVM
                 _getNN
               _flushFlashBlock
               _readNVM
               _rebuildHashtable
                 _getEN
                 _getEv
                   _readNVM
                   _validStart
                     _readNVM
                 _getHash
                 _getNN
                 _validStart
               _writeEv
                 _checkRemoveTableEntry
                   _getEVs
                     _readNVM
                     _validStart
                   _removeTableEntry
                     _flushFlashBlock
                     _readNVM
                     _rebuildHashtable
                     _validStart
                     _writeNVM
                   _validStart
                 _readNVM
                 _writeNVM
               _writeNVM
             _clearEvents
               _deleteActionRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _getEVs
                 _rebuildHashtable
                 _validStart
                 _writeEv
               _deleteHappeningRange
                 _checkRemoveTableEntry
                 _flushFlashBlock
                 _readNVM
                 _rebuildHashtable
                 _validStart
                 _writeEv
           _defaultNVs
             _loadNvCache
               _readNVM
             _saveNV
               _writeNVM
           _saveNV
       _canFactoryReset *
         _writeNVM
       _mnsFactoryReset *
         _writeNVM
       _nvFactoryReset *
         _APP_nvDefault
         _writeNVM
       _teachFactoryReset *
         _clearAllEvents
           _flushFlashBlock
           _rebuildHashtable
           _writeNVM
       _writeNVM *
     _pbDownTimer
       ___lldiv
         _tickGet (ARG)
       ___lmul
         _getNV (ARG)
       _leds_poll
         ___awdiv
         _tickGet
       _tickGet
     _pbUpTimer
       ___lldiv
       ___lmul
       _leds_poll
       _tickGet
     _showStatus
   _factoryReset
   _initRomOps
   _loop
     ___lmul
     _getNV
     _inputScan
       _getNV
       _readInput
         _getNV
       _sendProducedEvent
         _getEN
         _getNN
         _getNV (ARG)
         _sendMessage4 (ARG)
           _getParameter (ARG)
             _getParameterFlags
               _have
             _have
           _sendMessage (ARG)
             _canSendMessage *
               _getNextWriteMessage
               _getNumTxBuffersInUse
                 _quantity
               _have
               _isEvent
               _push
               _quantity
               _updateModuleErrorStatus
       _writeNVM
     _processActions
       ___awdiv
       ___awmod
       _completed
       _deleteTwoActionQueue
       _doSOD
         _findServiceIndex
         _startTimedResponse
           _findServiceIndex (ARG)
       _doWait
         ___lmul
         _doneTwoAction
           _popTwoAction
         _tickGet
       _doneTwoAction
       _finaliseOutput
       _getNV
       _getTwoAction
         _peekTwoActionQueue
       _needsStarting
       _peekTwoActionQueue
       _setOutputState
         _setBounceState
           _getNV
         _setMultiState
           _getNV
         _setServoState
           _getNV
       _startOutput
         _startBounceOutput
         _startDigitalOutput
           _getNV
           _sendInvertedProducedEvent
             _getNV (ARG)
             _sendProducedEvent (ARG)
           _setOutputPin
           _writeNVM
         _startMultiOutput
           _getNV
         _startServoOutput
           _getNV
     _processOutputs
       _getNV
       _sendProducedEvent
       _setOutputPin
     _sendProducedEvent
     _startServos
       _getNV
       _pollServos
         ___awdiv
         _bounceDown
           ___awdiv
           ___wmul
           _getNV
         _bounceUp
           ___awdiv
           _getNV
         _getNV
         _initBounce
         _sendProducedEvent
         _tickGet
         _writeNVM
       _setupTimer1
         _getNV
         _setOutputPin
       _setupTimer3
         _getNV
         _setOutputPin
     _tickGet
   _poll
     NULL(Fake) *
     _APP_postProcessMessage *
     _APP_preProcessMessage *
     ___lmul *
     _ackEventProcessMessage *
       _ackEventCheckLen
         _checkLen
           _sendMessage5
             _getParameterFlags (ARG)
             _sendMessage (ARG)
       _findEvent
       _findService
       _isConsumedEvent
         _getEv
       _sendMessage7
         NULL(Fake) (ARG) *
         _canEsdData (ARG) *
         _consumer2QEsdData (ARG) *
         _nvGetESDdata (ARG) *
         _producerEsdData (ARG) *
         _sendMessage (ARG) *
         _tableIndexToEvtIdx (ARG) *
         _teachGetESDdata (ARG) *
     _bootProcessMessage *
       _writeNVM
     _canProcessMessage *
       _sendMessage5
     _canReceiveMessage *
       _getBufferPointer
       _getNumRxBuffersInUse
         _getBufferPointer
         _quantity
       _handleSelfEnumeration
         _tickGet
       _memcpy
       _pop
       _processEnumeration
         _setNewCanId
           _writeNVM
         _tickGet
         _updateModuleErrorStatus
     _consumer2QProcessMessage *
       ___awdiv
       ___awmod
       _findEvent
       _getEVs
       _getNV
       _pushTwoAction
       _setExpeditedActions
       _setNormalActions
     _flushFlashBlock *
     _leds_poll *
     _mnsPoll *
       _sendMessage2
         _sendMessage
       _sendMessage5
       _setLEDsByMode
         _showStatus
       _tickGet
       _writeNVM
     _mnsProcessMessage *
       NULL(Fake) *
       _ackGetDiagnostic *
       _canEsdData *
       _canGetDiagnostic *
         _getNumRxBuffersInUse
         _getNumTxBuffersInUse
       _consumer2QEsdData *
       _consumer2QGetDiagnostic *
       _factoryReset *
       _findServiceIndex *
       _getParameter *
       _getParameterFlags *
       _mnsGetDiagnostic *
       _nvGetDiagnostic *
       _nvGetESDdata *
       _producerEsdData *
       _producerGetDiagnostic *
       _rebuildHashtable *
       _sendMessage2 *
       _sendMessage3 *
         _sendMessage
       _sendMessage4 *
       _sendMessage5 *
       _sendMessage6 *
         _numEv (ARG)
           _readNVM
           _validStart
         _sendMessage (ARG)
       _sendMessage7 *
       _setLEDsByMode *
       _startTimedResponse *
       _teachGetDiagnostic *
       _teachGetESDdata *
       _writeNVM *
     _nvProcessMessage *
       _findServiceIndex
       _getNV
       _sendMessage2
       _sendMessage3
       _sendMessage4
       _sendMessage5
       _setNV
         _APP_nvValidate
           ___awdiv
           ___awmod
         _APP_nvValueChanged
           ___awdiv
           ___awmod
           _getNV
           _setBounceState
           _setMultiState
           _setServoPosition
             ___awdiv (ARG)
             _getNV (ARG)
           _setServoState
           _setTimedResponseDelay
           _setType
           _startBounceOutput
           _startMultiOutput
           _startServoOutput
         _writeNVM
       _startTimedResponse
     _pollTimedResponse *
       NULL(Fake) *
       _mnsTRallDiagnosticsCallback *
         NULL(Fake) *
         _ackGetDiagnostic *
         _canGetDiagnostic *
         _consumer2QGetDiagnostic *
         _mnsGetDiagnostic *
         _nvGetDiagnostic *
         _producerGetDiagnostic *
         _sendMessage6 *
         _teachGetDiagnostic *
       _mnsTRrqnpnCallback *
         _getParameter
         _sendMessage4
       _mnsTRserviceDiscoveryCallback *
         _sendMessage5
       _nerdCallback *
         _getEN
         _getNN
         _sendMessage7
         _tableIndexToEvtIdx
         _validStart
       _nvTRnvrdCallback *
         _getNV
         _sendMessage4
       _reqevCallback *
         _getEN
         _getEv
         _getNN
         _numEv
         _sendMessage6
       _sodTRCallback *
         _APP_GetEventState
           ___awdiv
           _getNV
           _readNVM
         ___awdiv
         _getNV
         _sendInvertedProducedEvent
     _producerProcessMessage *
       _APP_GetEventState
       _findEvent
       _getEv
       _sendMessage3
       _sendMessage4
     _showStatus *
     _teachProcessMessage *
       _doEvlrn
         _APP_addEvent
           _addEvent
           _checkRemoveTableEntry
           _rebuildHashtable
           _writeEv
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doEvuln
         _removeEvent
           _findEvent
           _removeTableEntry
         _sendMessage2
         _sendMessage3
         _sendMessage5
       _doNenrd
         _evtIdxToTableIndex
         _getEN
         _getNN
         _sendMessage3
         _sendMessage5
         _validStart
       _doNerd
         _findServiceIndex
         _startTimedResponse
       _doNnclr
         _clearAllEvents
         _sendMessage2
         _sendMessage5
       _doNnevn
         _readNVM
         _sendMessage3
       _doReqev
         _findEvent
         _findServiceIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _sendMessage6
         _startTimedResponse
       _doReval
         _evtIdxToTableIndex
         _getEv
         _numEv
         _sendMessage3
         _sendMessage5
         _validStart
       _doRqevn
         _sendMessage3
         _validStart
       _sendMessage3
       _sendMessage5
       _teachCheckLen
         _checkLen
         _sendMessage5
     _tickGet *
   _powerUp
     NULL(Fake) *
     _ackPowerUp *
     _canPowerUp *
       _readNVM
       _tickGet
     _consumer2QPowerUp *
     _initTicker *
     _initTimedResponse *
     _leds_powerUp *
       _tickGet
     _mnsPowerUp *
       _readNVM
       _setLEDsByMode
       _tickGet
     _nvPowerUp *
       _loadNvCache
     _producerPowerUp *
     _teachPowerUp *
       _rebuildHashtable
   _readNVM
   _setup
     _configIO
     _getNV
     _initInputScan
       _getNV
       _readInput
       _readNVM
     _initOutputs
     _initServos
       _getNV
       _readNVM
       _setOutputPosition
         _getNV
         _readNVM (ARG)
         _setDigitalOutput (ARG)
         _setOutputPin (ARG)
         _setServoPosition (ARG)
       _tickGet
     _setTimedResponseDelay
     _tickGet
     _universalEventsInit

 _isrLow (ROOT)
   _lowIsr
     NULL(Fake) *
     _APP_lowIsr *
     _canIsr *
       _canFillRxFifo
         i1_getBufferPointer
         i1_getNextWriteMessage
         i1_updateModuleErrorStatus
       _canTxError
         _checkTxFifo
           i1_getNextWriteMessage
           i1_isEvent
           i1_pop
           i1_tickGet
           i1_updateModuleErrorStatus
         i1_updateModuleErrorStatus
       _checkCANTimeout
         _checkTxFifo
         i1_tickGet
         i1_updateModuleErrorStatus
       _checkTxFifo
     _mnsLowIsr *

 _isrHigh (ROOT)
   _highIsr
     NULL(Fake) *
     _APP_highIsr *
       _timer1DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
           i2_getNV (ARG)
       _timer3DoneInterruptHandler
         i2_getNV
         i2_setOutputPin
     i2_canIsr *
       i2_canFillRxFifo
         i2_getBufferPointer
         i2_getNextWriteMessage
         i2_updateModuleErrorStatus
       i2_canTxError
         i2_checkTxFifo
           i2_getNextWriteMessage
           i2_isEvent
           i2_pop
           i2_tickGet
           i2_updateModuleErrorStatus
         i2_updateModuleErrorStatus
       i2_checkCANTimeout
         i2_checkTxFifo
         i2_tickGet
         i2_updateModuleErrorStatus
       i2_checkTxFifo

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     3A0      70       25.4%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      68        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      67        0.0%
BANK12             100      0       0      21        0.0%
BITBANK11          100      0       0      66        0.0%
BANK11             100      0       0      20        0.0%
BITBANK10          100      0       0      65        0.0%
BANK10             100      0       0      19        0.0%
BITBANK9           100      0       0      64        0.0%
BANK9              100      0       0      18        0.0%
BITBANK8           100      0       0      63        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      62        0.0%
BANK7              100      0       0      16        0.0%
BITBANK6           100      0       0      61        0.0%
BANK6              100      0       0      15        0.0%
BITBANK5           100      0       0      60        0.0%
BANK5              100      0      48      14       28.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C0      13       75.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     2D      F9       9       97.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      73       5       71.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      51       1       86.2%
BITBANK14           41      0       0      69        0.0%
BANK14              41      0       0      23        0.0%
BITBIGSFRllhhh      2A      0       0      40        0.0%
BITBIGSFRlllhl      2A      0       0      57        0.0%
BITBIGSFRlhhhhh     19      0       0      26        0.0%
BITBIGSFRllhlh      16      0       0      48        0.0%
BITBIGSFRlhhhhh     15      0       0      28        0.0%
BITBIGSFRllhllh     10      0       0      49        0.0%
BITBIGSFRllhllh      F      0       0      50        0.0%
BITBIGSFRllhllh      F      0       0      51        0.0%
BITBIGSFRllhllh      F      0       0      52        0.0%
BITBIGSFRllhllh      F      0       0      53        0.0%
BITBIGSFRllhllh      F      0       0      54        0.0%
BITBIGSFRlhhlll      D      0       0      38        0.0%
BITBIGSFRllhhll      A      0       0      45        0.0%
BITBIGSFRllhhll      A      0       0      43        0.0%
BITBIGSFRlhhhhh      8      0       0      31        0.0%
BITBIGSFRlllhhl      7      0       0      56        0.0%
BITBIGSFRlhhllh      6      0       0      36        0.0%
BITBIGSFRlhhlh       6      0       0      35        0.0%
BITBIGSFRlhhhll      6      0       0      34        0.0%
BITBIGSFRlhhlll      5      0       0      37        0.0%
BITBIGSFRlhhhhh      5      0       0      30        0.0%
BITBIGSFRllhhll      4      0       0      47        0.0%
BITBIGSFRhh          4      0       0      24        0.0%
BITBIGSFRlhhhhh      4      0       0      27        0.0%
BITBIGSFRlllhhh      3      0       0      55        0.0%
BITBIGSFRlhhhhh      3      0       0      29        0.0%
BITBIGSFRllhhll      2      0       0      46        0.0%
BITBIGSFRllhhll      2      0       0      44        0.0%
BITBIGSFRllhhlh      2      0       0      41        0.0%
BITBIGSFRllhhlh      2      0       0      42        0.0%
BITBIGSFRlhhlll      2      0       0      39        0.0%
BITBIGSFRhl          2      0       0      25        0.0%
BITBIGSFRllll        2      0       0      58        0.0%
BITBIGSFRlhhhlh      1      0       0      33        0.0%
BITBIGSFRlhhhhl      1      0       0      32        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     48C      59        0.0%
DATA                 0      0     82C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 27 21:25:43 2024

                   nerdCallback@nodeNumber 01D6                        findEvent@tableIndex 01C6  
                __end_of_pollTimedResponse A94E                     ?_handleSelfEnumeration 0097  
                       APP_GetEventState@h 01BC                           sendMessage@data1 01BB  
                         sendMessage@data2 01BC                           sendMessage@data3 01BD  
                         sendMessage@data4 01BE                           sendMessage@data5 01BF  
                         sendMessage@data6 01C0                           sendMessage@data7 01C1  
                      findEvent@nodeNumber 01BA              __end_of_setTimedResponseDelay C506  
            __end_of_producerGetDiagnostic C0BC                          ackEventCheckLen@m 01CB  
                           _completed$1545 0091                              ?_APP_addEvent 01E6  
                     _getNumRxBuffersInUse BC2C                      _timedResponseCallback 003F  
                             ___awdiv@sign 009C                            _normalReadIndex 00CF  
                                       _io 00D1                                         _nn 00BF  
                                       bsr 0FE0                                ?_APP_lowIsr 0001  
                      ___wmul@multiplicand 0093                               configIO@type 01C2  
                       i2_getBufferPointer A1F2             _sendInvertedProducedEvent$1404 01D1  
                         ?_flushFlashBlock 0001                     _eventConsumer2QService EF0F  
                             ?_APP_highIsr 0001                    __end_of_eraseFlashBlock B866  
              __end_of_universalEventsInit C496                  ?_consumer2QProcessMessage 01F9  
                              _startServos 99A0                             ??_getTwoAction 008F  
                __end_of_deleteActionRange 96EC                                        l500 3892  
                                      l501 389E                                        l352 5064  
                                      l281 6B7C                                        l259 5600  
                                      l453 35C0                                        l550 A52E  
                                      l462 35D6                                        l279 6AE6  
                                      l560 A83C                                        l448 35B6  
                                      l465 37BA                                        l457 35CC  
                                      l546 A4EC                                        l490 38EC  
                                      l555 A7FA                                _startOutput B3CA  
                                      l645 7590                                        l813 31E0  
                                      l653 AE9C                                        l469 37AE  
                                      l819 AC88                                        l916 A0A6  
                          checkPowerOnPb@i 01F3                         _enumerationResults 0234  
                    deleteHappeningRange@h 01DE            ?_APP_isSuitableTimeToWriteFlash 0001  
         ??_APP_isSuitableTimeToWriteFlash 008D                        _expeditedWriteIndex 00CC  
                          _initServos$8064 00A7                            _initServos$8065 00A6  
                                      _evs 0220                                        _pop 9B80  
                            _APP_nvDefault 8C28                               ___awmod@sign 0092  
                                      prod 0FF3                    i2getNextWriteMessage@wr 000C  
                                      tosl 0FFD                                        wreg 0FE8  
             tableIndexToEvtIdx@tableIndex 008D                        ?i2_getBufferPointer 0001  
     sendInvertedProducedEvent@can_send_on 01CE                    APP_nvValueChanged@index 01F2  
             APP_GetEventState@disable_off 01BB                    APP_nvValueChanged@value 01ED  
      __end_of_mnsTRallDiagnosticsCallback 8538                _mnsTRallDiagnosticsCallback 8452  
                                     l2018 C1A8                                       l1410 7EBA  
                                     l1411 7EE6                                       l1180 C4B0  
                                     l1405 7E6A                                       l2143 AFBE  
                                     l2136 C3A4                                       l1096 13B2  
                                     l1280 6678                                       l1409 7EB6  
                                     l1514 44DE                                       l3026 604E  
                                     l2163 B852                                       l1523 45E4  
                                     l1516 4512                                       l2149 AFD4  
                                     l2181 B9A8                                       l1509 4474  
                                     l2421 7016                                       l2414 6F58  
                                     l1447 1A6E                                       l1448 1A92  
                                     l1721 5D28                                       l1730 5DB0  
                                     l2418 6FA6                                       l1723 5D30  
                                     l1732 5DC0                                       l1741 5E34  
                                     l1750 5EB6                                       l1734 5DD2  
                                     l1743 5E3C                                       l2455 AED4  
                                     l1479 21AC                                       l3096 A6C4  
                                     l1752 5EC6                                       l1736 5DD8  
                                     l2480 4C94                                       l1754 5ED6  
                                     l1738 5DDE                                       l1771 8726  
                                     l2803 BCF4                                       l2707 230E  
                                     l1756 5EE0                                       l2484 6830  
                                     l1758 5EEA                                       l2903 7874  
                                     l2488 6854                                       l1962 9760  
                                     l1955 9810                                       l1987 3C60  
            __end_ofi2_getNextWriteMessage 8E9C                                       _BIE0 0E7E  
                       doEvuln@eventNumber 01D0                                       ?_pop 008D  
                         setOutputState@io 0095                                       _EEIF 7DBE  
                   __end_of_checkPowerOnPb B3CA                                       _LATA 0F89  
                                     _LATB 0F8A                                       _LATC 0F8B  
                                     _IPR5 0F78                          doEvuln@nodeNumber 01CE  
                    __end_of_sodTRCallback 8366                             configIO@action 01C1  
                                     _WPUB 0F5B                          setOutputPin@state 0091  
                           i2_setOutputPin 70C2                                _outputState 02B4  
                            _pushTwoAction B30E                      i1_getNextWriteMessage 8CFA  
                                     _have ACFE                                       _main B8B2  
                                     _name 0848                                       _loop 6B88  
                                     _poll 3900                 __end_of_mnsTRrqnpnCallback C040  
                                     fsr1h 0FE2                                       fsr2h 0FDA  
                                     indf1 0FE7                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     _push 3FD6                        setMultiState@action 0091  
                                     btemp 0052                           ?_producerEsdData 0001  
                        ?_removeTableEntry 0001                sodTRCallback@happeningIndex 01DB  
                                     pop@q 008D                                       prodh 0FF4  
                                     prodl 0FF3                            __end_ofi2_getNV BCDA  
                                     start 081C                               ?_loadNvCache 0001  
                       bounceDown@reversed 01BA            APP_GetEventState@happeningIndex 01BD  
                            setupTimer1@io 009C                        _setExpeditedActions C522  
                            setupTimer3@io 009C                 __end_of_startDigitalOutput 57BA  
                           _setBounceState 94C8                consumer2QProcessMessage@end 02CC  
              consumer2QProcessMessage@enn 02CF                       ??i2_getBufferPointer 0003  
              consumer2QProcessMessage@opc 02CE                         ??_removeTableEntry 01C3  
                            ?_APP_testMode 0001                            getEN@tableIndex 00A1  
                             ___param_bank 0000                             ??_APP_addEvent 00A9  
                    ?_getNumRxBuffersInUse 0001                      __end_of_defaultEvents 76AE  
                         ?_producerPowerUp 0001                          findServiceIndex@i 0090  
                              completed@io 0092                       __end_of_EEPROM_Write AFFA  
                              _uptimeTimer 014C                                      ??_pop 008F  
                                    l20012 9500                                      l20014 9520  
                                    l20022 9572                                      l20008 94CE  
                                    l20040 880C                                      l20032 B096  
                                    _B0CON 0E80                                      l20018 9552  
                                    l20042 882C                                      l20034 B0A6  
                                    l20026 B066                                      l20052 88A8  
                                    l20028 B07C                                      l20060 9B2E  
                                    l20108 BC3E                                      l20300 3D0C  
                                    l20126 B63A                                      l20046 886A  
                                    l20038 87EC                                      l20310 3D5C  
                                    l20302 3D1E                                      l22000 5D2A  
                                    l20080 B4A4                                      l21120 8AD6  
                                    _B1CON 0E90                                      l20226 C272  
                                    l22010 5D60                                      l20410 56CA  
                                    l20314 3D84                                      l20244 B4E2  
                                    l22004 5D34                                      l20420 571C  
                                    l20404 56AA                                      l20092 B4C8  
                                    l20076 B494                                      l21060 AEF0  
                                    l21132 8B48                                      l20332 3E6E  
                                    l20324 3E30                                      l20308 3D50  
                                    l21222 7FAE                                      l20414 56F4  
                                    l22110 9BA8                                      l21118 8A98  
                                    l20342 3EE2                                      l20334 3E7A  
                                    l20326 3E48                                      l20318 3DAC  
                                    l20264 B512                                      l22016 5D88  
                                    l21232 8026                                      l21312 A812  
                                    l20088 B4BE                                      l21064 AF02  
                                    l20360 3FA4                                      _B2CON 0EA0  
                                    l22050 5E40                                      l21226 7FEA  
                                    l21218 7F72                                      l21234 805A  
                                    l20530 BB4E                                      l21402 B3E8  
                                    l21058 AEDE                                      l21066 AF16  
                                    l22210 C3D2                                      l20610 30A8  
                                    l20338 3EAE                                      l20282 3CA6  
                                    l21164 B540                                      l22044 5DE4  
                                    l21420 A044                                      l20516 ACF2  
                                    l20508 AC96                                      l20460 A504  
                                    l20428 577E                                      l20380 55C2  
                                    l21412 B400                                      l22220 76B0  
                                    l20436 C14A                                      l20604 306A  
                                    l20356 3F86                                      l20348 3F34  
                                    l20292 3CEA                                      l21148 C062  
                                    l22062 5E90                                      l22046 5E36  
                                    l20534 BB62                                      l21406 B3F4  
                                    l20702 5C42                                      l22310 808C  
                                    l22118 9C10                                      l21254 B342  
                                    l21158 C0AA                                      l22206 C3CE  
                                    l20622 3124                                      l20550 2DB4  
                                    l23006 37C2                                      l23110 9FDC  
                                    l21168 B554                                      l22056 5E6A  
                                    l21424 A05E                                      l21416 A040  
                                    l20448 A4DE                                      l21352 B5F0  
                                    l21600 0C16                                      l22216 C3D6  
                                    l20616 30E6                                      l20632 31B2  
                                    l20288 3CCE                                      l22400 7B3A  
                                    l23040 3820                                      l23016 37E4  
                                    l23104 9FC2                                      l23200 669C  
                                    l21512 ABBA                                      l21520 ABEE  
                                    _B3CON 0EB0                                      l22090 5EF0  
                                    l21338 A452                                      l21370 A6E0  
                                    l21362 B608                                      l20394 5632  
                                    l20714 5C9C                                      l21610 0CCC  
                                    l22242 7734                                      l21098 C172  
                                    l21282 C2FC                                      l21274 C2F8  
                                    l20562 2E14                                      l20554 2DC4  
                                    l22410 7B80                                      l23050 3886  
                                    l23042 3866                                      l23202 66EE  
                                    l21356 B5FC                                      l21348 B5E4  
                                    l20732 2976                                      l20716 5CCC  
                                    l21612 0CF4                                      l21540 0940  
                                    l21532 08B6                                      l22260 77B8  
                                    l22228 76F2                                      l20820 862C  
                                    l20812 8624                                      l20900 868A  
                                    l20652 AC66                                      l22500 93F6  
                                    l22340 B230                                      l23060 38AE  
                                    l23116 9FF0                                      l23204 6704  
                                    l23212 671E                                      l21508 ABAE  
                                    l21438 A0AA                                      l21374 A6FA  
                                    l21366 A6DC                                      l20742 2B2C  
                                    l22318 8116                                      l22270 77D6  
                                    l22246 7778                                      l20910 C0FA  
                                    l20646 AC62                                      l20590 2F9C  
                                    l20582 2F1E                                      l20574 2E92  
                                    l23214 6756                                      l23310 182C  
                                    l23142 BF64                                      l20920 871C  
                                    l20752 2CF6                                      l20760 2D50  
                                    l20664 5A88                                      l21704 127A  
                                    l21624 0D8C                                      l21560 0A3C  
                                    l21552 09D8                                      l21536 090C  
                                    l21616 0D28                                      l21528 085A  
                                    l22328 8142                                      l22256 77B2  
                                    l22248 777A                                      l20840 863C  
                                    l20824 8630                                      l20816 8628  
                                    l22512 C22E                                      l22504 C226  
                                    l21288 C300                                      l20568 2E54  
                                    l22360 913E                                      l22344 B234  
                                    l23128 A00E                                      l23400 1A08  
                                    l23320 1886                                      l23304 17A6  
                                    l24200 BD86                                      _B4CON 0EC0  
                                    l15410 A682                                      l20930 874E  
                                    l21386 A732                                      l21394 B3D0  
                                    l20746 2B84                                      l20690 5BD0  
                                    l21618 0D66                                      l21554 09F6  
                                    l21546 0970                                      l21570 0AB0  
                                    l21538 092E                                      l22290 BAC2  
                                    l22282 77E6                                      l24114 67F0  
                                    l20586 2F5E                                      l21482 82E6  
                                    l21458 828E                                      l22418 7BD2  
                                    l23058 38A8                                      l23330 18AC  
                                    l23242 7E92                                      l15420 A6B6  
                                    l20924 8730                                      l20916 8708  
                                    l20756 2D4C                                      l20684 5B90  
                                    l20676 5B28                                      l21740 14BE  
                                    l21724 1396                                      l21716 1332  
                                    l21708 12B0                                      l21564 0A70  
                                    l20780 A7D2                                      l20852 864A  
                                    l20844 8640                                      l20836 8638  
                                    l20828 8634                                      l22508 C22A  
                                    l21492 830A                                      l21476 82CE  
                                    l22532 B05C                                      l22436 AF34  
                                    l22452 BCE4                                      l22348 B238  
                                    l24212 2200                                      l23068 38BC  
                                    l23172 665C                                      l23180 6674  
                                    l23324 188A                                      l24060 9A8A  
                                    l20942 8772                                      l20934 875A  
                                    l20926 8742                                      l20918 8712  
                                    l22710 50AE                                      l21398 B3DC  
                                    l21718 1350                                      l21670 102A  
                                    l21654 0F3E                                      l21638 0E5A  
                                    l21590 0BAA                                      l21582 0B46  
                                    l21806 A19A                                      l21822 A108  
                                    l22278 77DE                                      l24134 6850  
                                    l20790 C122                                      l22518 C232  
                                    l20598 302A                                      l21486 82FE  
                                    l21910 8498                                      l22526 B006  
                                    l22550 9E76                                      l24230 225C  
                                    l23158 6612                                      l23510 2090  
                                    l23430 1AEA                                      l23318 184E  
                                    l23262 7F08                                      l23254 7EEA  
                                    l22622 98FC                                      l20960 BBF6  
                                    l15408 A676                                      l22720 5134  
                                    l20688 5BB8                                      l21752 15A8  
                                    l21744 151A                                      l21736 1462  
                                    l21584 0B64                                      l21576 0AE0  
                                    l20776 A7CE                                      l20848 8646  
                                    l21496 8316                                      l22544 9E20  
                                    l22368 9198                                      l22384 AA18  
                                    l22480 937A                                      l24224 2256  
                                    l24064 9A8E                                      l24048 9A58  
                                    l22640 998E                                      _B5CON 0ED0  
                                    l20938 8766                                      l20946 8784  
                                    l22730 5190                                      l21682 112A  
                                    l21674 107E                                      l21594 0BDE  
                                    l22298 BAE2                                      l20890 8686  
                                    l20882 8674                                      l20866 865E  
                                    l20858 865A                                      l22570 C2E0  
                                    l21498 833E                                      l21930 C020  
                                    l22394 7B02                                      l22490 93BC  
                                    l24314 24BA                                      l24218 2220  
                                    l23506 2074                                      l23442 1B96  
                                    l23426 1AC0                                      l23418 1A94  
                                    l23354 191A                                      l23338 18D8  
                                    l23274 16D8                                      l22634 993E  
                                    l22626 9904                                      l22740 5200  
                                    l22804 62CA                                      l21748 1576  
                                    l21668 0FF2                                      l21756 15E0  
                                    l21852 9D3A                                      l21844 9CBE  
                                    l24156 68CE                                      l24172 6996  
                                    l20972 C0D2                                      l22564 C2DC  
                                    l22556 C2D8                                      l22468 AE14  
                                    l24260 22D8                                      l23452 1BCC  
                                    l23372 1962                                      l23292 1778  
                                    l23364 1926                                      l22734 51B4  
                                    l22718 5124                                      l22742 521E  
                                    l22806 62D2                                      l21758 160E  
                                    l21686 1180                                      l21678 10D4  
                                    l21766 1692                                      l22654 99B2  
                                    l21862 BDB0                                      l21870 BDC8  
                                    l23622 43B6                                      l20878 8662  
                                    l21942 A95E                                      l24334 2508  
                                    l23526 20CE                                      l23550 2158  
                                    l23438 1B18                                      l23366 1952  
                                    l23294 177C                                      l23278 1704  
                                    l24078 9AB8                                      l24510 5F62  
                                    l22910 B9E8                                      l22582 7C1C  
                                    l22728 517E                                      l22736 51C6  
                                    l22744 5230                                      l22680 4F80  
                                    l22832 637E                                      l22840 63AC  
                                    l21768 16C2                                      l21696 1216  
                                    l21688 1192                                      l21864 BDB8  
                                    l23712 4668                                      l23616 439A  
                                    l21960 C3E8                                      l22496 93DE  
                                    l22488 93AA                                      l24416 2688  
                                    l24264 22DC                                      l23472 1CFA  
                                    l23464 1CCE                                      l23392 19C2  
                                    l23384 1996                                      l22592 7CA2  
                                    l22584 7C2A                                      l22746 5240  
                                    l21698 1234                                      l22666 99FA  
                                    l24178 69A2                                      l21866 BDC0  
                                    l23650 448E                                      l21970 C3F0  
                                    l24354 258C                                      l24282 239A  
                                    l24258 22D4                                      l23562 2182  
                                    l23458 1C82                                      l23298 1780  
                                    l24514 5F66                                      l24506 5F40  
                                    l22906 B9E0                                      l15562 BFEE  
                                    l22578 7BF8                                      l19020 7AA0  
                                    l22684 4F88                                      l22772 61DE  
                                    l23636 4408                                      l23628 43DC  
                                    l21964 C3EC                                      l21948 A972  
                                    l24436 26EA                                      l24356 2592  
                                    l22940 365E                                      l22924 3588  
                                    l23548 2146                                      l23492 1E52  
                                    l23804 47E0                                      l24540 60BC  
                                    l24700 3992                                      l22916 BA00  
                                    l23732 BD50                                      l22596 7CD4  
                                    l21878 853E                                      l22838 63A8  
                                    l22790 6226                                      l22766 61C6  
                                    l22758 61BA                                      l23638 440C  
                                    l23478 1D3E                                      l23582 21B2  
                                    l23822 485A                                      l24542 6106  
                                    l24518 5FE2                                      l19008 79EC  
                                    l22848 63D8                                      l22784 620E  
                                    l22872 6A9A                                      l22856 69BC  
                                    l24632 6CEC                                      l24624 6C8C  
                                    l23920 A90E                                      l24456 275C  
                                    l24376 25E4                                      l22960 36C0  
                                    l23488 1D6C                                      l23832 4884  
                                    l23816 482E                                      l23760 46C4  
                                    l24712 39F6                                      l19018 7A66  
                                    l19026 7AAE                                      l19042 BA48  
                                    l19130 31F6                                      l19114 8C00  
                                    l22698 5014                                      l22778 61F6  
                                    l22866 6A44                                      l24618 6C36  
                                    l23690 45D6                                      l23666 450C  
                                    l21898 A320                                      l21978 BB02  
                                    l23930 A926                                      l24298 2422  
                                    l22938 35DE                                      l23498 2046  
                                    l23770 470C                                      l24546 6144  
                                    l24554 6176                                      l24706 39F0  
                                    l19204 3566                                      l19108 8BBE  
                                    l22876 6AC2                                      l23684 4580  
                                    l24396 2636                                      l22980 3754  
                                    l23844 48EE                                      l23764 4702  
                                    l23748 4692                                      l24556 61A2  
                                    l24652 88DE                                      l19310 BBC8  
                                    l19150 3282                                      l19230 49EA  
                                    l22886 6B38                                      l23934 A92A  
                                    l23918 A8E8                                      l24478 2830  
                                    l22974 36F8                                      l23782 4762  
                                    l23766 4708                                      l23870 496E  
                                    l24590 9898                                      l19144 3278  
                                    l23944 97B6                                      l19224 49CE  
                                    l22888 6B44                                      l23928 A920  
                                    l22992 3774                                      l22976 373E  
                                    l23856 4944                                      l24752 3C3E  
                                    l24744 3B6C                                      l24496 BF36  
                                    l19322 6D50                                      l19154 3288  
                                    l19066 AD64                                      l19058 AD08  
                                    l19090 4038                                      l23794 47B6  
                                    l24586 9890                                      l19316 BBD8  
                                    l19332 6E12                                      l23956 9706  
                                    l22988 3768                                      l22996 377E  
                                    l23892 BA78                                      l24596 98A4  
                                    l19334 6E50                                      l19326 6D92  
                                    l19342 6ED0                                      l19182 347C  
                                    l19406 96C4                                      l19414 96D8  
                                    l24678 B392                                      l23990 6F64  
                                    l24838 B8F2                                      l19328 6DD0  
                                    l19360 A2CA                                      l19352 A2A0  
                                    l19184 347E                                      l19168 33CA  
                                    l19192 3490                                      l19440 8A6A  
                                    l23984 6F5C                                      l18554 B89E  
                                    l19338 6E92                                      l18634 A604  
                                    l18618 A5E0                                      l18802 8ECC  
                                    l19370 A30A                                      l18722 7838  
                                    l19514 640E                                      l19098 432C  
                                    l18572 B2E4                                      l18564 B2B4  
                                    l18804 8ED0                                      l19612 4D7C  
                                    l18740 78F4                                      l18716 7826  
                                    l19532 6568                                      l19540 65AE  
                                    l19508 6406                                      l19428 89AC  
                                    l19268 4B5C                                      l19622 4DE4  
                                    l19614 4D92                                      l19606 4D5A  
                                    l19550 65C0                                      l19710 7566  
                                    l18568 B2CC                                      l19480 A3AC  
                                    l18664 A64C                                      l18816 8F66  
                                    l18808 8EE2                                      l19632 4E74  
                                    l19624 4E22                                      l18728 7882  
                                    l19384 9644                                      l19712 75BA  
                                    l19800 A5AA                                      l19288 4C52  
                                    l18578 B2EE                                      l18754 AF9C  
                                    l18850 B7D4                                      l19642 4F04  
                                    l19634 4EB2                                      l18826 92DA  
                                    l18930 7DE6                                      l18922 7DBC  
                                    l19714 75E2                                      l19570 B94C  
                                    l19298 4C78                                      l19730 9E94  
                                    l19722 9E80                                      l18860 B7F8  
                                    l18908 7D74                                      l19556 65D8  
                                    l19804 A5B4                                      l19820 AD86  
                                    l19900 BFD2                                      l19486 A3E2  
                                    l19478 A3A8                                      l19494 A418  
                                    l18854 B7E6                                      l19646 4F42  
                                    l19590 4CBC                                      l18678 B7CA  
                                    l18934 7E2A                                      l19398 9668  
                                    l19718 768E                                      l19830 ADA8  
                                    l19670 95F8                                      l19750 9EC6  
                                    l19742 9EB2                                      l19734 9E9E  
                                    l19726 9E8A                                      l19488 A3EE  
                                    l18960 8184                                      l19808 A5C2  
                                    l19840 ADCA                                      l19824 AD92  
                                    l19680 961A                                      l19656 959A  
                                    l19760 9EDA                                      l19594 4CFE  
                                    l18954 8180                                      l18874 7D20  
                                    l19578 B986                                      l19930 8C3E  
                                    l19674 9608                                      l19754 9ED0  
                                    l19746 9EBC                                      l19738 9EA8  
                                    l18788 AFF6                                      l19588 4CA6  
                                    l18948 817A                                      l18892 7D40  
                                    l19844 ADD8                                      l19836 ADC0  
                                    l19828 ADA0                                      l19598 4D1C  
                                    l18982 8228                                      l18886 7D3C  
                                    l19790 A58A                                      l19782 A56C  
                                    l19942 8C4A                                      l19934 8C42  
                                    l19926 8C3A                                      l19918 8C36  
                                    l19678 9614                                      l18976 8216  
                                    l19864 B2A2                                      l19776 A55C  
                                    l19952 8C4E                                      l19872 B90E  
                                    l18986 822C                                      l19698 B73A  
                                    l19938 8C46                                      l19954 8C88  
                                    l19970 9444                                      l19788 A582  
                                    l19972 9464                                      l19980 94B6  
                                    l19966 9412                                      l19990 91FC  
                                    l19976 9496                                      l19992 920C  
                                    l19984 91CE                                      l19986 91DC  
                                    l19996 923A                                      ?_have 0001  
                                    ?_main 0001                  ??_consumer2QGetDiagnostic 0098  
                             ?_initOutputs 0001                        processEnumeration@i 01C3  
                          __end_of___awdiv A5CC                                      _EEADR 0F74  
                                    ?_loop 0001                          setOutputState@act 0093  
                          __end_of___awmod ADE2                                      ?_poll 0001  
                                    ?_push 008D                                      _BSEL0 0E7D  
                          __end_of___lldiv A6D6                                      _T0CON 0FD5  
                                    u21010 BB5E                            ___awdiv@divisor 0099  
                                    u20070 884A                                      u20080 8888  
                                    u20410 3D80                                      u20330 3CA2  
                                    u22020 A0A2                                      u20340 3CE6  
                                    u22100 ABE2                                      u21141 2FBA  
                                    u20510 3EDE                                      u20430 3DA8  
                                    u22110 ABE4                                      u20600 5560  
                                    u21400 29AA                                      u20610 5562  
                                    u21330 5C2E                                      u22210 0A9C  
                                    u20530 3F02                                      u20450 3E2C  
                                    u20370 3D08                                      u21091 2EB0  
                                    u23100 5ECC                                      u20620 55DA  
                                    u21260 5A82                                      u22220 0A9E  
                                    u20540 3F30                                      u20630 55DC  
                                    u21270 5A84                                      u20390 3D4C  
                                    u24000 50EE                                      u20800 578A  
                                    u20560 3F54                                      u22080 8306  
                                    u24010 50F0                                      u20810 578C  
                                    u20650 55FC                                      u21370 2954  
                                    u22330 0CB8                                      u20570 3F82  
                                    u20490 3EAA                                      u20740 5718  
                                    u20660 55FE                                      u21380 2976  
                                    u22420 0EFA                                      u22340 0CBA  
                                    u20750 571A                                      u21390 29A8  
                                    u22430 0EFC                                      u22350 0CE2  
                                    u23310 7792                                      u20840 A4DA  
                                    u22360 0CE4                                      u23400 80E0  
                                    u23090 5EBC                                      u22610 1450  
                                    u22530 1296                                      u21490 8656  
                                    u20780 574E                                      u24220 63B2  
                                    u22700 1564                                      u22620 1452  
                                    u22380 0E14                                      u21820 C264  
                                    u21660 8A94                                      u24070 51EE  
                                    u20790 5750                                      u22710 1566  
                                    u22390 0E16                                      u23414 80F4  
                                    u23270 76EE                                      u23415 80F0  
                                    u21744 7FA2                                      u24080 51F0  
                                    u22640 14AC                                      u22800 A154  
                                    u23440 8160                                      u25200 43F2  
                                    u21745 7F9E                                      u21754 7FDE  
                                    u21930 A6F6                                      u24090 61B4  
                                    u22730 1682                                      u22650 14AE  
                                    u23290 7772                                      u25210 444C  
                                    u21755 7FDA                                      u21764 801A  
                                    u25140 437A                                      u21765 8016  
                   APP_GetEventState@flags 01BA                                      u14910 A686  
                                    u24270 6A6C                                      u22670 1508  
                                    u25230 4478                                      u21960 A72E  
                                    u24280 6A6E                                      u22680 150A  
                                    u22760 A1E4                                      u25320 4628  
                                    u25240 44CE                                      u24600 9FBE  
                                    u23385 80A0                                      u22770 A1E6  
                                    u23810 99E0                                      u24370 3584  
                                    u25058 1F28                                      u25059 1F3C  
                                    u21980 A05A                                      u26300 6CD4  
                                    u22908 84DC                                      u25500 A8E2  
                                    u25068 1FA6                                      u19005 4A4A  
                                    u22909 84F0                                      u25069 1FBA  
                                    u18150 C4AC                                      u22790 A152  
                                    u26310 6D2C                                      u25270 4556  
                                    u22950 BAFE                                      u25078 2024  
                                    u25430 481A                                      u23750 993A  
                                    u25079 2038                                      u19104 6DC2  
                                    u18400 AFC2                                      u25360 468E  
                                    u23760 993C                                      u19105 6DBE  
                                    u18170 C4A4                                      u22970 5D0E  
                                    u23850 9A28                                      u25290 45BE  
                                    u22890 8494                                      u24650 660E  
                                    u25450 48BE                                      u19124 6E06  
                                    u18340 781A                                      u22868 85E4  
                                    u25620 9A54                                      u19125 6E02  
                                    u22869 85F6                                      u19134 6E42  
                                    u25518 A8EC                                      u24590 38F6  
                                    u24750 7E60                                      u19135 6E3E  
                                    u25519 A908                                      u18440 8EB8  
                                    u18360 7878                                      u23960 50AA  
                                    u26280 6C74                                      u25720 684E  
                                    u25800 2250                                      u26600 3C48  
                                    u19154 6E86                                      u19170 A2C6  
                                    u18610 8176                                      u19410 6402  
                                    u23970 50AC                                      u26450 39D8  
                                    u19155 6E82                                      u19164 6EC2  
                                    u26348 8984                                      u19165 6EBE  
                                    u25485 BA9C                                      u26349 8996  
                                    u19094 6D86                                      u19350 A3B6  
                                    u18470 8F0E                                      u18630 820E  
                                    u25486 BA9E                                      u25590 6F8E  
                                    u19095 6D82                                      u19360 A3B8  
                                    u19600 4E38                                      u26528 3B2A  
                                    u26529 3B3C                                      u19450 65B6  
                                    u19435 6524                                      u19380 A3D6  
                                    u18900 3484                                      u19436 6528  
                                    u19348 A8C0                                      u25780 221C  
                                    u19390 A3D8                                      u19614 4E68  
                                    u19550 4DA8                                      u18590 7E32  
                                    u19615 4E64                                      u18488 8F12  
                                    u19624 4EA4                                      u26488 3A9C  
                                    u19625 4EA0                                      u26489 3AAE  
                                    u19650 4EC8                            reqevCallback@ev 01DC  
                     __end_of_factoryReset 861E                                      u19564 4DD8  
                                    u18860 327E                                      u26588 3C1E  
                                    u19565 4DD4                                      u26589 3C30  
                                    u19574 4E14                                      u19910 B918  
                                    u24998 1C32                                      u19575 4E10  
                                    u24999 1C54                                      u19664 4EF8  
                                    u19840 ADAC                                      u19920 B91A  
                                    u19665 4EF4                                      u19674 4F34  
                                    u19690 9596                                      u19675 4F30  
                                    u19780 A58E                                      u19940 B92E  
                        _initTimedResponse C516                                      u19960 B93A  
                                    u19890 B296                             ?_APP_nvDefault 0001  
                          ___awdiv@counter 009B                                      _MSEL0 0E79  
                 __end_of_nvTRnvrdCallback BB36                               i2_canTxError B18C  
         __end_of_factoryResetGlobalEvents C53E                             _APP_nvValidate AC1A  
                                    _TMR0H 0FD7                                      _TMR1H 0FCF  
                                    _TMR0L 0FD6                                      _TMR1L 0FCE  
                                    _TMR3H 0FB3                                      _TMR3L 0FB2  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                           i2setOutputPin@io 0008  
                                    _TRISA 0F92                                      _TRISB 0F93  
                                    _TRISC 0F94                            __end_of_doEvlrn 91C8  
                          __end_of_doNenrd AE52                       ?_setExpeditedActions 0001  
             nvProcessMessage@valueOrError 01FD                            __end_of_doEvuln AA44  
                           _ackDiagnostics 01B2                            __end_of_doNnclr BE40  
                          __end_of_doNnevn AF92         sendInvertedProducedEvent@happening 01D0  
                          __end_of_doReqev 7BF2                            __end_of_doReval 940C  
                                    i1_pop 9C1A                                      i2_pop 9D4C  
                          __end_of_doRqevn BD12                            __end_of_getHash C332  
                      ___lmul@multiplicand 0095                         _canTransmitTimeout 002F  
                       ?_initTimedResponse 0001                         __p_paramBlock_text 0820  
                          __end_of_highIsr 9102                              ?_leds_powerUp 0001  
                          __end_of_isEvent C1AC                            __end_of_configs EE75  
                                    _canId 00C3                                      _doSOD C3FC  
              ??_sendInvertedProducedEvent 00A9                                      _getEN AA44  
                                    _getNN 928C                                      _getNV BBB2  
                                    _getEv 7808                           needsStarting@act 008D  
                     _enumerationStartTime 002B                            __end_of_readNVM B30E  
                          __end_of_isrHigh 8452                                      _setNV A94E  
                   __end_ofi2_setOutputPin 7270                                      _numEv 8A7E  
                                    have@i 0090                                      _speed 0200  
                                    _setup 984C                        canReceiveMessage@mp 01C8  
                      canReceiveMessage@no 01CA               __end_of_getNumTxBuffersInUse C4C4  
                          __end_of_mnsPoll 4680                              setNV@oldValue 01F7  
                   APP_preProcessMessage@m 008D                            __end_of_tickGet B52E  
                          ?_checkPowerOnPb 0001                            __end_of_setType B2AE  
                                    pclath 0FFA                                      pclatu 0FFB  
                                    tablat 0FF5                             ?_pushTwoAction 0001  
                      ??_initTimedResponse 008D                            ??_doneTwoAction 008D  
          mnsTRallDiagnosticsCallback@step 01D5            mnsTRallDiagnosticsCallback@type 0001  
                                    poll@i 02EF                                      poll@m 02F0  
                         __end_ofi2_canIsr C446                            __end_of_powerUp 89A2  
                                    plusw2 0FDB                                      push@m 008E  
                                    push@q 008D                    reqevCallback@tableIndex 01E2  
                                    ttemp5 0053                                      ttemp6 0056  
                                    ttemp7 005A                           _setServoPosition C1FC  
                                    status 0FD8                                      wtemp8 0053  
                            ?_nvGetESDdata 0001                     __end_of_setBounceState 9584  
                  reqevCallback@nodeNumber 01DE                            __end_of_writeEv 3576  
                 ?_updateModuleErrorStatus 0001                 __end_of_startTimedResponse BB74  
                             bounceDown@io 01BD                           ?_nvGetDiagnostic 0096  
                        ?_startMultiOutput 0091                           bounceUp@reversed 00A5  
                           ??_APP_testMode 008D                          ?_startServoOutput 0091  
             processEnumeration@enumResult 01C1                            __initialization AB36  
                       ??_startMultiOutput 0092                         ??_startServoOutput 0092  
                             __end_of_have AD70                               __end_of_main B8FC  
                             __end_of_name 0850                               __end_of_loop 6D4A  
                             __end_of_poll 3C76                               __end_of_push 4330  
                            ?_nerdCallback 01D4                           i2canFillRxFifo@m 000D  
                         _setupTimer1$1931 0098                           _setupTimer3$1935 0098  
                     __end_of_getParameter 8702                  __end_of_initTimedResponse C51C  
                   __end_of_APP_nvValidate AC8C                                     ??_have 008D  
                             ?_setNewCanId 0001                                     ??_main 00A9  
                         ?_eraseFlashBlock 0001                                     ??_loop 01E8  
                             ?_sendMessage 01BA                                     ??_poll 02EA  
                                   ??_push 0090                      __end_of_reqevCallback 9E7A  
                 __end_of_ackEventCheckLen C42E                              __activetblptr 0003  
                              readNVM@type 0096                      ??_setExpeditedActions 008D  
                  ?_ackEventProcessMessage 01F9                          _pollsPerStepSpeed 0274  
                                   ?i1_pop 0060                                     ?i2_pop 0001  
                           ??_leds_powerUp 0097                           _normalWriteIndex 00CE  
                  APP_postProcessMessage@m 008D                   ??_APP_postProcessMessage 008F  
                    __end_of_setMultiState 88C6                                     ?_doSOD 0001  
                    __end_of_setServoState 94C8                          ?_getBufferPointer 008D  
                                   ?_getEN 0097                                     ?_getNN 0097  
                                   ?_getNV 008D                                     ?_getEv 009D  
                       _lastServoStartTime 015C                                     _CANCON 0F6F  
                                   _EEADRH 0F75                           __end_of_addEvent 65E2  
                                   ?_setNV 01F4                                     _EEDATA 0F73  
                                   _EECON1 0F7F                                     _EECON2 0F7E  
                             _canTransport EF7B                                     ?_numEv 0001  
                                   _ANCON0 0F5D                                     _ANCON1 0F5C  
                         ___awdiv@dividend 0097                            ?i2_setOutputPin 0005  
                                   _CIOCON 0F70                                     ?_setup 0001  
                      APP_nvValidate@index 00A0        consumer2QProcessMessage@firstAction 02D3  
                       ??_getBufferPointer 008F                        APP_nvValidate@value 009F  
                       setOutputState@type 0094                                  ??i2_getNV 0003  
                   ?i1_getNextWriteMessage 0060                                     i1l2018 C1F8  
                         reqevCallback@nEv 01DB                                     i1l2067 83A8  
                                   i1l2510 54FE                                     i2l2018 C2AC  
                                   i2l2062 841E                                     i2l2510 5A46  
                    getNumRxBuffersInUse@i 0095                                     _TABLAT 0FF5  
                       rebuildHashtable@ev 01BD                     _producerProcessMessage 5F3E  
                  ackEventProcessMessage@m 01F9                                     _TBLPTR 0FF6  
                           ??_nvGetESDdata 008D                              _needsStarting A6D6  
          __end_of_consumer2QGetDiagnostic C15C                                     _TXB0D0 0F26  
                                   _TXB0D1 0F27                                     _TXB0D2 0F28  
                                   _TXB0D3 0F29                                     _TXB0D4 0F2A  
                                   _TXB0D5 0F2B                                     _TXB0D6 0F2C  
                                   _TXB0D7 0F2D                           __end_of_checkLen A7D6  
                             ?_removeEvent 01C9                            ?_setBounceState 0091  
                      setServoPosition@pos 009F                             _clearAllEvents B634  
                 __end_of_APP_factoryReset C28C                       __end_of_getTwoAction C50E  
                      setServoState@action 0091                            setMultiState@io 0092  
                            _canFillRxFifo 7270                                initTicker@i 008F  
                        ?_findServiceIndex 0001                           _rebuildHashtable 7D1A  
                         ??_processActions 00A9                          _canProcessMessage 9A46  
                                   i1pop@q 0060                              teachPowerUp@i 01C3  
                                   i2pop@q 0001                            completed@action 008D  
                       finaliseOutput@type 008D                   reqevCallback@eventNumber 01E0  
               __end_of_APP_nvValueChanged 31E2                            setServoState@io 0092  
                         __end_of_configIO 4F7A                         ??_findServiceIndex 008D  
                _sendInvertedProducedEvent B8FC                         _processEnumeration 76AE  
                              readInput@io 0093                         ?_canProcessMessage 01F9  
                   ??_getNumRxBuffersInUse 0092                           pollServos@midway 01D6  
               startDigitalOutput@pinState 01D9                             teachCheckLen@m 01CB  
             ??_timer3DoneInterruptHandler 0009                           __end_of_bounceUp 5CD0  
                         pollServos@target 01D4                                     ___lmul B52E  
                 __end_of_mnsGetDiagnostic C10C                             ??_nerdCallback 00A9  
                                   _canIsr C332            checkRemoveTableEntry@tableIndex 01C9  
                                   _canPri EE87                                     ___wmul C1AC  
                                ??___awdiv 009B                                     _doNerd C3AE  
                                ??___awmod 0091                      _APP_preProcessMessage C534  
                                   _doWait A430                           ??_finaliseOutput 008E  
                                   _getEVs 8164                                  ??___lldiv 009F  
                deleteTwoActionQueue@index 008E                            sodTRCallback@io 01E0  
                            _nvDiagnostics 01A4                            getParameter@idx 0092  
                        needsStarting@type 008E                                     _memcpy BAB0  
                                ??_doEvlrn 00A9                                  ??_doNenrd 00A9  
                                   _isrLow 8366                                  ??_doEvuln 00A9  
                                   getNN@f 00A1                                  ??_doNnclr 00A9  
                                   clear_0 AB3E                                     clear_1 AB50  
                                   clear_2 AB5C                                  ??_doNnevn 01C3  
                                   clear_3 AB68                                     clear_4 AB74  
                                   clear_5 AB80                                     clear_6 AB8C  
                                   clear_7 AB98                                  ??_doReqev 00A9  
                                ??_doReval 01C8                                     _lowIsr 8F6A  
                                   _saveNV BC66                           ___awdiv@quotient 009D  
                                   getEv@f 00A4                   __end_of_setDigitalOutput A430  
                          ___awmod@divisor 008F                                  ??_doRqevn 00A9  
                         flushFlashBlock@i 008F                        ?_processEnumeration 0001  
                                   have@id 008F                                  ??_getHash 00A7  
                          ??_APP_nvDefault 009F                        ??_canProcessMessage 01FB  
                                   isa$std 0001                            ___awmod@counter 0091  
                          ?_APP_nvValidate 009F                           ??_processOutputs 01CC  
                                ??_highIsr 001A                                  ??_isEvent 008D  
           __end_of_ackEventProcessMessage 67D0                   __end_of_setNormalActions C522  
              producerProcessMessage@index 01FE                                  ??_readNVM 0094  
                 nerdCallback@serviceIndex 01D4                                  ??_isrHigh 001F  
                            i2_checkTxFifo 57BA                      ackGetDiagnostic@index 0098  
                        _canReceiveMessage 67D0                 __end_of_teachGetDiagnostic C184  
                         _nvProcessMessage 4680                                     numEv@f 00A2  
                                ??_mnsPoll 01C7                                     pop@ret 0094  
                         canFillRxFifo@ptr 006E                          ??_mnsFactoryReset 00A9  
                             __mediumconst ED34                                  ??_tickGet 0091  
                         __end_of_services EE87                         _tableIndexToEvtIdx C4F2  
              findServiceIndex@serviceType 008F                                  ??_setType 00A9  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                        doEvlrn@nodeNumber 01EE                                     tblptru 0FF8  
                             ??_FLASH_Read 008F                              _initInputScan 98F6  
                         __end_of_quantity BD4A                          nvProcessMessage@m 01F9  
                       ?_canReceiveMessage 01C4                                  ??_powerUp 01C4  
                        __end_ofi1_isEvent C1FC                               i2getNV@index 0004  
               __end_of_peekTwoActionQueue A546                     getParameterFlags@flags 0091  
                             ?_setupTimer1 0001          mnsTRserviceDiscoveryCallback@step 01D5  
                             ?_setupTimer3 0001                            ??_pushTwoAction 008D  
        mnsTRserviceDiscoveryCallback@type 0001                              checkTxFifo@mp 0073  
                        __end_ofi2_isEvent C2B0                          i2_checkCANTimeout B6DC  
                     __end_of_APP_addEvent AEBE                                  ??_writeEv 01CD  
                             __p_name_text 0848                      _checkRemoveTableEntry BA22  
                      addEvent@eventNumber 01D9                          _expeditedQueueBuf 02C4  
             nvTRnvrdCallback@valueOrError 01D6                           __end_of_writeNVM B81A  
                           ?_needsStarting 008D                        ?_tableIndexToEvtIdx 0001  
                   __end_of_clearAllEvents B688                      mnsGetDiagnostic@index 0098  
                        __end_ofi1_tickGet B5DE                     startServoOutput@action 0091  
                     ??_processEnumeration 01BD                         ?i2_checkCANTimeout 0001  
                               __accesstop 0060                    __end_of__initialization AB9E  
                __end_of_canProcessMessage 9AE4                          __end_ofi2_tickGet B47E  
                            bounceDown@tmp 01BB                        ??_canReceiveMessage 01C6  
                        EEPROM_Write@index 008F                             nvGetESDdata@id 008D  
                        EEPROM_Write@value 0091                             ?_canFillRxFifo 0001  
                           setOutputPin@io 0094                     checkRemoveTableEntry@e 01CA  
                            doEvuln@result 01D2                              ___rparam_used 0001  
                       teachCheckLen@learn 01CE                                 _eeBootFlag 0042  
                        i1tickGet@IntFlag1 0065                          i1tickGet@IntFlag2 0064  
                  ??_handleSelfEnumeration 0099                  ?_factoryResetGlobalEvents 0001  
                            ?_teachPowerUp 0001                           FLASH_Write@index 0090  
                        _getParameterFlags B47E                              __end_ofi1_pop 9CB4  
                         FLASH_Write@value 0092                              __end_ofi2_pop 9DE4  
                      ??i2_checkCANTimeout 0016                             __pcstackCOMRAM 0001  
               ?i1_updateModuleErrorStatus 0001  mnsTRserviceDiscoveryCallback@serviceIndex 01D4  
                           _io@inputs$F849 00D0                                 _canEsdData C3C8  
                            __end_of_doSOD C416                         ?_getParameterFlags 0001  
                            __end_of_getEN AABE                              __end_of_getNN 934E  
                            __end_of_getNV BBF0                              __end_of_getEv 795E  
                       __end_of_FLASH_Read B8B2                                 _ackPowerUp BF5E  
                   ackEventCheckLen@needed 01CD                              __end_of_setNV A9CA  
                            __end_of_numEv 8B56                              __end_of_setup 98F6  
                     ??_tableIndexToEvtIdx 008D                               i1isEvent@opc 0061  
                             ??_APP_lowIsr 0060                       _getNumTxBuffersInUse C4B8  
                   consumer2QEsdData@index 008D                         APP_factoryReset@io 01ED  
                             ?_startServos 0001                  __end_of_canReceiveMessage 69B6  
                             ?_startOutput 01DC               nvTRnvrdCallback@serviceIndex 01D4  
               __end_of_bootProcessMessage A03A                                  ?i2_canIsr 0001  
                      ??_getParameterFlags 0091                             ?i2_checkTxFifo 0001  
                               _canTxError B12A                                 _canService EF69  
                        ??_isConsumedEvent 00A6                                 _canPowerUp 6F08  
                  producerProcessMessage@h 01FD                    producerProcessMessage@m 01F9  
                                  ??i1_pop 0062                                    ??i2_pop 0003  
                           ?_initInputScan 0001                  reqevCallback@serviceIndex 01D4  
                     __end_of_APP_testMode C540                 rebuildHashtable@tableIndex 01C2  
             __end_of_deleteHappeningRange 8A7E                  __end_ofi2_checkCANTimeout B730  
             consumer2QGetDiagnostic@index 0098                                    ??_doSOD 0095  
                            completed@type 008E                                    ??_getEN 0099  
                                  ??_getNN 0099                                    ??_getNV 008F  
                                  ??_getEv 009F                    startDigitalOutput@state 01D4  
                              saveNV@index 01BF                             canFillRxFifo@m 006C  
                                  ??_setNV 01F5                              ?_sendMessage2 00A6  
                            ?_sendMessage3 00A6                              ?_sendMessage4 01C2  
                            ?_sendMessage5 01C2                              ?_sendMessage6 01C2  
                            ?_sendMessage7 01C2                                    ??_numEv 009D  
                    _setupModePreviousMode 0165                                    ??_setup 00A9  
                             canEsdData@id 008D                                saveNV@value 01BC  
                             readNVM@index 0091                   mnsProcessMessage@newMode 01FE  
                        initTicker@divider 008E                               _EEPROM_Write AF92  
                               __pbssBANK0 00A9                                 __pbssBANK1 0100  
                               __pbssBANK2 0200                                 __pbssBANK3 0300  
                               __pbssBANK4 0400                                 __pbssBANK5 0500  
                             loadNvCache@i 009B                               i2isEvent@opc 0002  
                          ?_clearAllEvents 0001                 startTimedResponse@callback 0092  
                          canSendMessage@m 00A1                                 _defaultNVs B730  
                       __end_of_APP_lowIsr C542                        setNewCanId@newCanId 01BC  
                        ??_checkCANTimeout 0075                  __end_of_getParameterFlags B4D6  
                               _delayCount 0284                             _loadFlashBlock B990  
                             _factoryReset 8538                             ??_teachPowerUp 00A9  
                            _setLEDsByMode BDAE                              addEvent@evVal 01DC  
                            addEvent@evNum 01DB                             _canDiagnostics 0167  
                            addEvent@error 01E2             __end_of_eventConsumer2QService EF21  
                   processActions@ioAction 01E4                                mnsPowerUp@i 0097  
                       mnsProcessMessage@d 01FC                         mnsProcessMessage@i 01FB  
                       mnsProcessMessage@m 01F9                       __end_of_leds_powerUp BE10  
                   ?_APP_preProcessMessage 008D                                    ?___lmul 0091  
                                  ?_canIsr 0001                       i2tickGet@currentTime 0007  
                                  ?___wmul 0091                               initBounce@io 008D  
                                  ?_doNerd 0001                                    ?_doWait 009D  
        __end_ofi1_updateModuleErrorStatus C4DC                                    ?_getEVs 0001  
                        i2tickGet@IntFlag1 0006                          i2tickGet@IntFlag2 0005  
                    ?_getNumTxBuffersInUse 0001                                    ?_memcpy 008D  
                                ?_addEvent 01D7                                    _ECANCON 0F72  
                                  ?_isrLow 0001                         _mnsTRrqnpnCallback C014  
                           ___lmul@product 0099                        i1getBufferPointer@b 0062  
                                  ?_lowIsr 0001                                    ?_saveNV 01BC  
                      setOutputPosition@io 00A3                      _setTimedResponseDelay C4FC  
                    _producerGetDiagnostic C094                                    _BRGCON1 0E43  
                                  _BRGCON2 0E44                                    _BRGCON3 0E45  
                   processActions@peekItem 01E0                   __end_of_setServoPosition C220  
                     __end_of_nvGetESDdata C3FC                                 ??i2_canIsr 001A  
                       _startDigitalOutput 5504                                    _COMSTAT 0F71  
                         _canGetDiagnostic AEBE                                 _flashBlock 00B9  
                               _flashFlags 00C4                                    i1l20214 9CAA  
                                  i1l20206 9C42                                    i1l20144 B592  
                                  i1l21202 9F5C                                    i1l21212 9F70  
                                  i1l20164 B5C2                                    i1l21028 53EC  
                                  i1l21206 9F66                                    i1l20190 8D62  
                                  i1l21046 54E2                                    i1l20196 8DA4  
                                  i1l22124 7272                                    i1l21190 9F3E  
                                  i1l21182 9F2A                                    i1l21174 9F16  
                                  i1l22152 73C0                                    i1l21194 9F48  
                                  i1l21186 9F34                                    i1l21178 9F20  
                                  i1l22162 73DA                                    i1l22148 72C6  
                                  i1l21198 9F52                                    i1l22158 73CC  
                                  i1l22174 B154                                    i1l22184 B17E  
                                  i1l24844 83A4                                    i1l24790 8F70  
                                  i2l14022 5934                                    i2l14040 5A2A  
                                  i2l12850 8E32                                    i2l15500 7538  
                                  i2l12856 8E74                                    i2l15504 7546  
                                  i2l12778 B42E                                    i2l13852 70C6  
                                  i2l12892 9DDA                                    i2l12884 9D72  
                                  i2l13862 7182                                    i2l13950 A21E  
                                  i2l13942 A20A                                    i2l13934 A1F6  
                                  i2l12798 B460                                    i2l13880 BCB2  
                                  i2l13864 71BE                                    i2l13856 7106  
                                  i2l13872 723A                                    i2l15448 B1B6  
                                  i2l13858 7142                                    i2l13962 A23C  
                                  i2l13954 A228                                    i2l13946 A214  
                                  i2l13938 A200                                    i2l15490 7432  
                                  i2l15466 73E2                                    i2l15458 B1E0  
                                  i2l13868 71FE                                    i2l13972 A250  
                                  i2l13886 BCC2                                    i2l13966 A246  
                                  i2l13958 A232                                    i2l15494 752C  
                                  i2l15858 C450                                    i2l24842 841A  
                                  i2l24772 903C                                  ?_checkLen 01C7  
                           _setOutputState B5DE                     getNumRxBuffersInUse@no 0094  
                        ?_nvTRnvrdCallback 01D4                          reqevCallback@step 01D5  
                   processActions@nextType 01E1                        ?_mnsTRrqnpnCallback 01D4  
                         ??_checkPowerOnPb 00A9                          ??i2_canFillRxFifo 000D  
                                  _TBLPTRU 0FF8            flushFlashBlock@interruptEnabled 008E  
                                  _RXB0CON 0F60                                    _RXB1CON 0F30  
                       ??_nvTRnvrdCallback 00A9                                    _TXB0DLC 0F25  
                                  _TXB1DLC 0F15                                    _TXB0CON 0F20  
                                  _TXB2DLC 0F05                                    _TXB1CON 0F10  
                                  _TXB2CON 0F00                             ??_sendMessage2 00A8  
                           ??_sendMessage3 00A9                             ??_sendMessage4 00A6  
                           ??_sendMessage5 00A6                             ??_sendMessage6 00A6  
                           ??_sendMessage7 00A6                              ?_setOutputPin 0091  
                      ?_startDigitalOutput 01D4                     ?_checkRemoveTableEntry 0001  
                                  _RXFCON0 0E46                           _teachDiagnostics 01AE  
                          ??_needsStarting 008F                                  ?_configIO 0001  
                               _bounceDown 28A0                       __end_of_nerdCallback B060  
                           inputScan@input 01CF                                  ?_bounceUp 0001  
                isConsumedEvent@eventIndex 00A6                                    i2_getNV BCA0  
                          loadFlashBlock@i 008D                            ??_canFillRxFifo 006C  
                           checkLen@needed 01C9                               _getParameter 861E  
                   __end_of_loadFlashBlock B9DA                          _sendProducedEvent 9584  
                    i2_getNextWriteMessage 8DCC                            _timerExtension1 00CA  
                          _timerExtension2 00C9                             ?_setLEDsByMode 0001  
                   mnsTRrqnpnCallback@step 01D5                     mnsTRrqnpnCallback@type 0001  
                       ?_sendProducedEvent 00A7                                poll@handled 02EE  
                     ??_mnsTRrqnpnCallback 00A9                          __end_of_findEvent A314  
                                  __Hparam 0000                               initServos@io 00A8  
                    setOutputPosition@type 00A2                              ?_popTwoAction 0001  
                                  __Lparam 0000         __end_of_timer3DoneInterruptHandler C2D2  
               _timer3DoneInterruptHandler C2B0                                 _initBounce C06A  
                   _APP_postProcessMessage C538                                 _eventTable EF80  
                     ??_startDigitalOutput 01D5                         pbDownTimer@timeout 00A8  
                              ?_canEsdData 0001                          __end_of_pbUpTimer 979C  
                         pbUpTimer@timeout 00A8                                 _initTicker BA6A  
                                  ___awdiv A546                                 _initRomOps C45C  
                                  ___awmod AD70                   _consumer2QProcessMessage 3576  
                         _ackGetDiagnostic C10C                                 _initServos 7BF2  
                                ?_quantity 008D                                    ___lldiv A652  
                      ??_sendProducedEvent 00A8                          __end_of_completed A0CE  
                              ?_ackPowerUp 0001                                validStart@f 009C  
             EEPROM_Write@interruptEnabled 0092                       startDigitalOutput@io 01DB  
                               ??_addEvent 01DE                                 _currentPos 00A9  
                                  _doEvlrn 9102                                 _paramBlock 0820  
                                  _doNenrd ADE2                         canProcessMessage@m 01F9  
                                  _doEvuln A9CA                                    _doNnclr BE10  
                 sodTRCallback@disable_off 01DC                                    _doNnevn AF2A  
                                  _doReqev 7AB2                                    _doReval 934E  
                                  __pcinit AB36                            ??i2_checkTxFifo 000D  
                              setType@type 01EA                              _teachCheckLen B1EE  
                                  _doRqevn BCDA                          __end_of_leds_poll 5F3E  
                       _startTimedResponse BB36                                    __ramtop 0F00  
                                  _getHash C312                                  ?_writeNVM 00A4  
                       doEvlrn@eventNumber 01F0                              ??_checkTxFifo 006C  
                                  __ptext0 B8B2                                    __ptext1 984C  
                                  __ptext2 C484                                    __ptext3 7BF2  
                                  __ptext4 ABA8                                    __ptext5 BFE8  
                                  __ptext6 98F6                                    __ptext7 88C6  
                                  __ptext8 BF30                                    __ptext9 6F08  
                   __end_of_setOutputState B634                                    _highIsr 9038  
                                  _isEvent C184                                    _configs EE35  
                                  _pbTimer 0033                                  _T0CONbits 0FD5  
                       APP_nvDefault@index 00A3                            getEv@tableIndex 00A5  
                              ?_canTxError 0001                           _EnumerationState 0041  
                        ??_canFactoryReset 00A9                          _mnsProcessMessage 16CE  
                                  _nvCache 0400                            ??_initInputScan 0097  
                               _mode_flags 0166                                  _T1CONbits 0FCD  
                              ?_canPowerUp 0001                                    _readNVM B2AE  
                        __end_of_readInput 805E                             _nvFactoryReset BBF0  
                             _getTwoAction C506                                    getEN@hi 009D  
                                  getEN@lo 009F                          ?_ackEventCheckLen 01CB  
                                  _isrHigh 83E8                          ??_teachGetESDdata 008D  
                 __end_of_rebuildHashtable 7E3E                                 ??_checkLen 00A7  
                         ??i2_setOutputPin 0006                                  _T3CONbits 0FB1  
                                  getNN@hi 009D                                    getNN@lo 009F  
                               _mode_state 00C8                                    getEVs@f 00A1  
                         ___awmod@dividend 008D                               _configIO$746 01BF  
                       doReqev@eventNumber 01CA                                    _mnsPoll 4330  
                       ?_mnsProcessMessage 01F9                                    _tickGet B4D6  
                             _flashCounter 00BB                          doNenrd@tableIndex 01CC  
                      ?_startTimedResponse 0091                                    _setType B24E  
                             _isEvent$4867 008D                         ??_ackEventCheckLen 00A8  
                           ??_setOutputPin 0092                    ??i1_getNextWriteMessage 0062  
                               getNV@index 0090                                 _inputState 0294  
                                  _rxQueue 004D                          doNenrd@nodeNumber 01C8  
                 processActions@nextAction 01E5                                    _powerUp 88C6  
                        __end_of_inputScan 5246                          __end_of_mnsLowIsr C484  
                        _consumer2QEsdData C2F2                                    _txQueue 0048  
                  ?_producerProcessMessage 01F9                            defaultEvents@en 01E7  
                          defaultEvents@io 01E9                                    _started 00D2  
                               ??_configIO 01BC                                 _mnsService EF57  
                        __end_of_nvService EF57                           ??_setBounceState 0092  
                               _mnsPowerUp 7E3E                          __end_of_nvPowerUp BD7C  
                                  _writeEv 31E2                  __end_of_sendProducedEvent 963A  
                               ??_bounceUp 009F                       end_of_initialization AB9E  
                       _expeditedReadIndex 00CD                              startOutput@io 01DE  
                       ?_consumer2QEsdData 0001                        ??_mnsProcessMessage 02CC  
                             writeNVM@type 00A8                                 getEv@evNum 009D  
                         producerPowerUp@i 008D                                    memcpy@d 0094  
                                  memcpy@n 0091                                    memcpy@s 0096  
               APP_nvValueChanged@oldValue 01EE                                ?_defaultNVs 01C0  
                            ??_EEPROM_Read 008F                            ?_loadFlashBlock 0001  
                            ??_clearEvents 00A9                                  i1u2326_20 B6C4  
                                i1u2159_25 52CA                      __end_of_doneTwoAction C52E  
                                  lowIsr@i 007D                          _consumer2QPowerUp B9DA  
                                i1u2669_28 9016                                  i1u2669_29 9028  
                                i2u1281_44 7178                                  i2u1281_45 7174  
                                i2u1282_44 71B2                                  i2u1282_45 71AE  
                                i2u1290_45 583A                                  i2u1284_44 71F4  
                                i2u1284_45 71F0                                  i2u1285_44 722E  
                                i2u1285_45 722A                                  i2u1278_44 70FC  
                                i2u1278_45 70F8                                  i2u1279_44 7136  
                                i2u1279_45 7132                          ?_APP_factoryReset 0001  
                                i2u1494_40 B716                             ??_popTwoAction 008D  
                               _validStart B780                                  i2u2665_48 90E2  
                                i2u2665_49 90F4                            ___lldiv@divisor 009B  
                      ??_consumer2QEsdData 008D                               writeEv@evVal 01CC  
                 __end_of_nvProcessMessage 49A0                               writeEv@evNum 01CB  
                          ___lldiv@counter 00A3                       ??_startTimedResponse 0094  
                       ?_consumer2QPowerUp 0001                               writeEv@nextF 01D2  
                  pollTimedResponse@result 01E5                         ??_APP_factoryReset 00A9  
          eraseFlashBlock@interruptEnabled 008D                                 _pollServos 0850  
                   pollServos@beforeMidway 01D5                           ??_APP_nvValidate 00A0  
                consumer2QProcessMessage@e 02D8                  consumer2QProcessMessage@m 01F9  
                     _deleteHappeningRange 89A2                              ??_FLASH_Write 0093  
                     nvGetDiagnostic@index 0098                                    postdec1 0FE5  
                                  postdec2 0FDD                     ??_getNumTxBuffersInUse 0092  
                                  postinc0 0FEE                                    postinc1 0FE6  
                                  postinc2 0FDE                   ?_consumer2QGetDiagnostic 0096  
                          _mnsFactoryReset AABE                          ?_mnsGetDiagnostic 0096  
                               ??_quantity 008E                __end_of_setExpeditedActions C528  
                   ?_setTimedResponseDelay 0001                               _APP_addEvent AE52  
                        ??_isNoServoPulses 008D                     ?_producerGetDiagnostic 0096  
                           ?_teachCheckLen 01CB                        ??_consumer2QPowerUp 008D  
                __end_of_mnsProcessMessage 21FE                                 _tmpMessage 019B  
                       ??_mnsGetDiagnostic 0098             startTimedResponse@serviceIndex 0091  
                   __end_of_nvFactoryReset BC2C                                 _servoState 0110  
                               ??_writeNVM 01BA                                 _showStatus 8702  
                                _PORTAbits 0F80                          ?_setDigitalOutput 0097  
                          ?_setOutputState 0093                                 _previousNN 0160  
           deleteHappeningRange@tableIndex 01DF                          ?_setNormalActions 0001  
                       _APP_nvValueChanged 2D54                  _timedResponseServiceIndex 00C6  
                       setDigitalOutput@io 0099                         ??_setDigitalOutput 0098  
                       deleteActionRange@e 01DF                                 _priorities ED35  
                       _lastActionPollTime 0154                              ??_pbDownTimer 00A4  
        __end_of_sendInvertedProducedEvent B946                            sendMessage2@opc 00A8  
                     __end_of_teachPowerUp BDAE                            sendMessage3@opc 01C2  
                __end_of_consumer2QEsdData C312                            sendMessage4@opc 00A6  
                          sendMessage5@opc 00A6                            sendMessage6@opc 00A6  
                          sendMessage7@opc 00A6                         _sodTRCallback$1424 01D9  
                       _sodTRCallback$1425 01DA                          _eventTeachService EF21  
           __end_of_producerProcessMessage 61A6                           setupTimer1@ticks 009A  
                                _TRISAbits 0F92                                  _TRISBbits 0F93  
                                _TXBIEbits 0E7F                         ??_setNormalActions 008D  
        canReceiveMessage@messageAvailable 01C7                           setupTimer3@ticks 009A  
                       _timedResponseDelay 0164                        __end_of_checkTxFifo 5504  
                     APP_nvValueChanged@io 01F3                                showStatus@s 008F  
                            ??_findService 008F                            loadNvCache@temp 0099  
                              ?_bounceDown 0001                             i1_isEvent$4867 0060  
                      ?_APP_nvValueChanged 01ED                              clearEvents@io 01E1  
                               isEvent@opc 008E                     ?i2_getNextWriteMessage 0001  
                  peekTwoActionQueue@index 008E                     i2getNextWriteMessage@q 0001  
                          ??_setLEDsByMode 0090                  __end_of_consumer2QPowerUp BA22  
                            _sodTRCallback 8268                                  i1_isEvent C1D4  
                      teachCheckLen@needed 01CD            ??_mnsTRserviceDiscoveryCallback 01D6  
                        ??_flushFlashBlock 008E                                  i2_isEvent C28C  
                       _teachGetDiagnostic C15C     sendInvertedProducedEvent@state_to_send 01D3  
               deleteHappeningRange@number 01D7                          _heartbeatSequence 0045  
                      _teachProcessMessage 21FE           sendProducedEvent@producedEventEN 01C7  
         sendProducedEvent@producedEventNN 01C9                                  i1_tickGet B586  
                        removeTableEntry@f 01C7                             bounceUp@midway 00A6  
                           _normalQueueBuf 0480                         _peekTwoActionQueue A4BC  
               consumer2QProcessMessage@ca 02D7                                  i2_tickGet B424  
               consumer2QProcessMessage@io 02D5                                 bounceUp@io 00A7  
                              ?_initBounce 0001          sodTRCallback@disable_SOD_response 01D6  
                             _APP_testMode C53E                            _isConsumedEvent C244  
                    ?_deleteHappeningRange 01D7              __end_of_handleSelfEnumeration 8164  
             ??_timer1DoneInterruptHandler 0009                        __end_of_EEPROM_Read C3AE  
                      ?_teachGetDiagnostic 0096                        __end_of_clearEvents BBB2  
                        _canTransmitFailed 00C2                ??i1_updateModuleErrorStatus 0060  
                              ?_initTicker 0001                                ?_initRomOps 0001  
                     ??_APP_nvValueChanged 01EF                                ?_initServos 0001  
                     __end_of_sendMessage2 BEA0                       __end_of_sendMessage3 BFBA  
                     __end_of_sendMessage4 BF30                       __end_of_sendMessage5 BF00  
                     __end_of_sendMessage6 BE70                       __end_of_sendMessage7 BED0  
                           __end_of___lmul B586                              _defaultEvents 754C  
                           __end_of_canIsr C352                             __end_of_canPri EE8C  
                           __end_of___wmul C1D4                        ?_peekTwoActionQueue 0001  
                           __end_of_doNerd C3C8                 removeTableEntry@tableIndex 01C8  
                           __end_of_doWait A4BC                             __end_of_getEVs 8268  
                            ??_APP_highIsr 0009                            ?_nvFactoryReset 0001  
                         _removeTableEntry 795E                            needsStarting@io 0091  
                           __end_of_memcpy BAF6                             __end_of_isrLow 83E8  
                       canReceiveMessage@m 01C4                         canReceiveMessage@p 01CB  
                           __end_of_lowIsr 9038                             __end_of_saveNV BCA0  
               __end_ofi1_getBufferPointer 9FA6                       ?_teachProcessMessage 01F9  
                __end_of_eventTeachService EF33                        __end_of_FLASH_Write 8F6A  
                    __end_of_APP_nvDefault 8CFA                             _canSendMessage 49A0  
                        ??_producerEsdData 008D                               _name_absaddr 0848  
                      start_initialization AB36                           ??_clearAllEvents 01C3  
                          _checkCANTimeout B688                               _leds_powerUp BDE0  
                     ??_teachGetDiagnostic 0098                                __end_of_pop 9C1A  
                            factoryReset@i 01F2                                ?_mnsPowerUp 0001  
             ?_mnsTRallDiagnosticsCallback 01D4                       setBounceState@action 0091  
                 setDigitalOutput@pinState 0098                          ??_producerPowerUp 008D  
                     ??_peekTwoActionQueue 008D                                _CANSTATbits 0F6E  
                           ?_sodTRCallback 01D4                         i2canFillRxFifo@ptr 000F  
                    __end_of_pushTwoAction B36C                        __end_of_pbDownTimer 984C  
                       _bootProcessMessage 9FA6                                 ?i1_isEvent 0001  
                 producerProcessMessage@ev 01FB                        _getNextWriteMessage 8B56  
                               ?i2_isEvent 0001                               _nvGetESDdata C3E2  
                 __end_of_canGetDiagnostic AF2A                    ??_APP_preProcessMessage 008F  
                  __end_of_mnsFactoryReset AB36                        __end_of_findService 9D4C  
                            ??_loadNvCache 0097                                 ?i1_tickGet 0060  
                              ?_validStart 0001                         setServoPosition@io 00A0  
                        isConsumedEvent@ev 00A7                        ?_bootProcessMessage 01F9  
                               ?i2_tickGet 0001                               doEvlrn@evVal 01F3  
                             doEvlrn@evNum 01F2                            numEv@tableIndex 00A3  
                   startTimedResponse@type 0094               __end_of_deleteTwoActionQueue A854  
                             doEvlrn@error 01F4                                ?_pollServos 0001  
               __end_of_evtIdxToTableIndex C4F2                   rebuildHashtable@chainIdx 01C1  
                     __end_of_setOutputPin 6F08                                   ??___lmul 0099  
                          ??_teachCheckLen 00A8                                   ??_canIsr 0079  
                      _universalEventsInit C484                                   ??___wmul 0095  
                             doNenrd@index 01C7                                   ??_doNerd 0095  
                                 ??_doWait 009F                                   ??_getEVs 009D  
                           ?_defaultEvents 01E6                        bootProcessMessage@m 01F9  
                       addEvent@forceOwnNN 01DD                               _nerdCallback AFFA  
                          i2_canFillRxFifo 73E0                 ?i2_updateModuleErrorStatus 0001  
                  _updateModuleErrorStatus C4C4                        __end_of_bootService EF45  
                                 ??_memcpy 0093                                   ??_isrLow 007E  
                                 ??_lowIsr 0079                                   ??_saveNV 01BD  
                   __end_of_canSendMessage 4C98                                ?_showStatus 0001  
                            ??_initOutputs 008D                   sodTRCallback@send_off_ok 01D8  
                     ?_getNextWriteMessage 008D                      ??_teachProcessMessage 02CC  
                             checkTxFifo@m 0071                                _checkTxFifo 5246  
                         _startMultiOutput 9AE4                          ?_setServoPosition 009F  
                            ?i2_canTxError 0001                         startMultiOutput@io 0093  
                         _startServoOutput 91C8                                __pbssBIGRAM 0548  
                            _reqevCallback 9DE4         consumer2QProcessMessage@tableIndex 02D1  
                  ??_checkRemoveTableEntry 00A9      consumer2QProcessMessage@masked_action 02D6  
                     ??_bootProcessMessage 01FB                                __pbssCOMRAM 002B  
                    peekTwoActionQueue@qty 008D                          ??_nvGetDiagnostic 0098  
                     __end_of_popTwoAction BFE8                         ??_setServoPosition 00A0  
                         canSendMessage@mp 0099                           canSendMessage@no 00A0  
                            __pcstackBANK0 0060                              __pcstackBANK1 01BA  
                            __pcstackBANK2 02CC                        __end_of_APP_highIsr C45C  
                i1_updateModuleErrorStatus C4D0         consumer2QProcessMessage@nextAction 02D2  
                     ?_universalEventsInit 0001                                 setNV@index 01F8  
                            _setMultiState 87E6                            _happening2Event 0300  
                            _setServoState 940C                                 setNV@value 01F4  
                       startServoOutput@io 0093                         addEvent@tableIndex 01E5  
                 __end_of_ackGetDiagnostic C134                             i2_isEvent$4867 0001  
               setTimedResponseDelay@delay 008D                                  addEvent@e 01E4  
                                addEvent@f 01E3                                   ?i2_getNV 0001  
                       addEvent@nodeNumber 01D7              ??_mnsTRallDiagnosticsCallback 01D6  
                 _factoryResetGlobalEvents C53C                    __end_of_isConsumedEvent C268  
                       initInputScan@input 0099      sendInvertedProducedEvent@can_send_off 01CF  
                              _EEPROM_Read C390                 ??_consumer2QProcessMessage 01FB  
                       initTicker@priority 008D                                _clearEvents BB74  
                  ?_APP_postProcessMessage 008D                          ??_eraseFlashBlock 008D  
                          i2checkTxFifo@mp 0014                           setBounceState@io 0092  
                   ??_deleteHappeningRange 01D8                             mnsPowerUp@temp 0098  
                             doNnevn@count 01C8                                  __pmainSec 8366  
                     teachProcessMessage@m 01F9                           _getBufferPointer 9E7A  
                          _canFactoryReset C372                ?_timer3DoneInterruptHandler 0001  
    __end_of_mnsTRserviceDiscoveryCallback A3A2              _mnsTRserviceDiscoveryCallback A314  
             mnsTRallDiagnosticsCallback@d 01DA                                 nvPowerUp@i 009C  
                          tickGet@IntFlag1 0092                            tickGet@IntFlag2 0091  
                                __pintcode 0808                            _teachGetESDdata C220  
                             ??_canEsdData 008D         handleSelfEnumeration@incomingCanId 009D  
                        _lastInputScanTime 0158                              __pmediumconst ED34  
                 ??_ackEventProcessMessage 01FB                       i1tickGet@currentTime 0066  
                              ackPowerUp@i 008D                           getEVs@tableIndex 00A3  
                                 ?___awdiv 0097                                  __ptext100 5A4C  
                                __ptext101 28A0                                  __ptext110 B5DE  
                                __ptext102 69B6                                  __ptext111 940C  
                                __ptext103 61A6                                  __ptext200 B688  
                                __ptext120 BFBA                                  __ptext112 87E6  
                                __ptext104 B3CA                                  __ptext201 B12A  
                                __ptext121 C3FC                                  __ptext113 94C8  
                                __ptext105 91C8                                  __ptext210 C540  
                                __ptext202 5246                                  __ptext130 49A0  
                                __ptext122 BB36                                  __ptext114 A6D6  
                                __ptext106 9AE4                                  __ptext203 B586  
                                __ptext131 3FD6                                  __ptext123 AC8C  
                                __ptext115 C506                                  __ptext107 5504  
                                __ptext220 73E0                                  __ptext212 9038  
                                __ptext204 9C1A                                  __ptext140 8702  
                                __ptext132 C184                                  __ptext124 A7D6  
                                __ptext116 A4BC                                  __ptext108 B8FC  
                                __ptext221 C4DC                                  __ptext213 C42E  
                                __ptext205 C1D4                                  __ptext141 96EC  
                                __ptext133 ACFE                                  __ptext125 A03A  
                                __ptext117 C50E                                  __ptext109 B060  
                              _FLASH_Write 8E9C                                  __ptext222 8DCC  
                                __ptext214 B6DC                                  __ptext206 7270  
                                __ptext150 AABE                                  __ptext142 979C  
                                __ptext134 C4B8                                  __ptext126 4F7A  
                                __ptext118 A430                                  __ptext223 A1F2  
                                __ptext215 B18C                                  __ptext207 C4D0  
                                __ptext151 C52E                                  __ptext143 5CD0  
                                __ptext135 BD12                                  __ptext127 9584  
                                __ptext119 C528                                  __ptext224 C446  
                                __ptext216 57BA                                  __ptext208 8CFA  
                                __ptext160 BC66                                  __ptext152 B634  
                                __ptext144 B4D6                                  __ptext136 8B56  
                                __ptext128 BF00                                  __ptext225 C2B0  
                                __ptext217 B424                                  __ptext209 9F10  
                                __ptext161 B946                                  __ptext153 8C28  
                                __ptext145 B52E                                  __ptext137 7F54  
                                __ptext129 A854                                  __ptext226 C352  
                                __ptext218 9D4C                                  __ptext170 7D1A  
                                __ptext162 754C                                  __ptext154 C1AC  
                                __ptext146 A652                                  __ptext138 C45C  
                                __ptext227 70C2                                  __ptext219 C28C  
                                __ptext171 7808                                  __ptext163 BB74  
                                __ptext155 AD70                                  __ptext147 8538  
                                __ptext139 B36C                                  __ptext228 BCA0  
                                __ptext180 8E9C                                  __ptext172 8164  
                                __ptext164 89A2                                  __ptext156 A546  
                                __ptext148 C372                                  __ptext181 B990  
                                __ptext173 B780                                  __ptext165 963A  
                                __ptext157 C268                                  __ptext149 BBF0  
                                __ptext190 BBB2                                  __ptext182 A5CC  
                                __ptext174 A284                                  __ptext166 63DE  
                                __ptext158 B24E                                  __ptext191 B2AE  
                                __ptext183 B81A                                  __ptext175 928C  
                                __ptext167 31E2                                  __ptext159 B730  
                                __ptext192 B866                                  __ptext184 C496  
                                __ptext176 C312                                  __ptext168 BA22  
                                __ptext193 C390                                  __ptext185 C4A8  
                                __ptext177 AA44                                  __ptext169 795E  
                                __ptext194 C53C                                  __ptext186 AF92  
                                __ptext178 4C98                                  __ptext195 C53E  
                                __ptext187 C4C4                                  __ptext179 B7CE  
                                 ?___awmod 008D                                  __ptext188 A3A2  
                                __ptext197 8F6A                                  __ptext189 6D4A  
                                __ptext198 C332                                  __ptext199 C470  
                             defaultNVs@io 01C3                                  _findEvent A284  
                                 ?___lldiv 0097                               ??_ackPowerUp 008D  
                   _startDigitalOutput$808 01D7                        __end_of_loadNvCache B990  
                             doReqev@evVal 01CD                               doReqev@evNum 01CC  
                          getNN@tableIndex 00A2                           processActions@io 01E6  
                             doReval@enNum 01CA                         sodTRCallback@flags 01DF  
                             doReval@evVal 01CB                               doReval@evNum 01C7  
                                 ?_doEvlrn 01EE                                   ?_doNenrd 0001  
                                 ?_doEvuln 01CE                                __pintcodelo 0818  
                                 ?_doNnclr 0001                                   ?_doNnevn 0001  
                      i2getBufferPointer@b 0003                                   ?_doReqev 01C8  
                                 ?_doReval 01C7                          teachGetESDdata@id 008D  
                       sodTRCallback@value 01DD          __end_ofi2_updateModuleErrorStatus C4E8  
                                 ?_doRqevn 0001                      ??_getNextWriteMessage 008F  
                                 ?_getHash 00A3                   deleteActionRange@updated 01DD  
                  __end_of_checkCANTimeout B6DC                              ??_setNewCanId 00A9  
                                _pbUpTimer 96EC                            ?_canSendMessage 0099  
                            ??_sendMessage 00A3                                   ?_highIsr 0001  
                           ??i2_canTxError 0016                                   ?_isEvent 0001  
                             ??_canTxError 0075                           _findServiceIndex AC8C  
                                _completed A03A                           nerdCallback@step 01D5  
                         nerdCallback@type 0001                             ?_reqevCallback 01D4  
                             ??_canPowerUp 0097                             _heartbeatTimer 0150  
                                 ?_readNVM 0091                                   ?_isrHigh 0001  
                              _COMSTATbits 0F71                    i1getNextWriteMessage@wr 006B  
                                _leds_poll 5CD0                 producerGetDiagnostic@index 0098  
                                 ?_mnsPoll 0001                          ?_rebuildHashtable 0001  
                         _canIsr$intlevel1 C33A                       setOutputPosition@pos 00A1  
                                 ?_tickGet 008D    mnsTRallDiagnosticsCallback@serviceIndex 01D4  
                              _pbDownTimer 979C                                  checkLen@m 01C7  
                                 ?_setType 01EA           ackEventProcessMessage@eventIndex 02CE  
                    ??_universalEventsInit 008D                             defaultNVs@type 01C0  
                           ?_setMultiState 0091                    startBounceOutput@action 008D  
                      __end_of_initOutputs C014                           ??_loadFlashBlock 008D  
                           ?_setServoState 0091                                   ?_powerUp 0001  
                                _readInput 7F54                         ??_rebuildHashtable 01BA  
                          ??_sodTRCallback 00A9                                _findService 9CB4  
            __end_ofi1_getNextWriteMessage 8DCC                                   ?_writeEv 01CB  
                          startServos@type 01D8                                _flashDelays 0130  
                       processActions@type 01E3                                  _expedited 0047  
                       __end_of_canEsdData C3E2                      __end_of_needsStarting A758  
                              _flashBuffer 0348                             doReval@evIndex 01C9  
                              ??i1_isEvent 0060              deleteHappeningRange@happening 01DD  
                             ??_defaultNVs 01C1                                  _inputScan 4F7A  
           __end_of_APP_postProcessMessage C53C                            _eventAckService EED9  
                                _mnsLowIsr C470                         __end_of_ackPowerUp BF8C  
                                _nvService EF45                             ___wmul@product 0095  
                                _loopCount 0254                              ??_removeEvent 00A9  
                              ??i2_isEvent 0001                       sendProducedEvent@opc 01C6  
                                 _LATBbits 0F8A                                  _nvPowerUp BD4A  
                    __end_of_canFillRxFifo 73E0                          findEvent@chainIdx 01C5  
                          _isNoServoPulses C4A8                 __end_ofi2_getBufferPointer A284  
                  getNumRxBuffersInUse@ptr 0092                                   _PIE1bits 0F9D  
                                 _PIE2bits 0FA0                       rebuildHashtable@hash 01BF  
                         ?_mnsFactoryReset 0001                                   _PIE5bits 0F76  
                              ??i1_tickGet 0064                                  _rxBuffers 07C8  
                       __p_eventTable_text EF80                                  getHash@en 00A5  
                                getHash@nn 00A3                    __end_ofi2_canFillRxFifo 754C  
                           _flashFlushTime 0140     __end_of_APP_isSuitableTimeToWriteFlash C4A8  
           _APP_isSuitableTimeToWriteFlash C496                          _channelDefaultNVs EE8C  
                                _targetPos 0120                                _bootService EF33  
       __end_of_timer1DoneInterruptHandler C372                 _timer1DoneInterruptHandler C352  
                              ??i2_tickGet 0005                         __end_of_canTxError B18C  
                       __end_of_canService EF7B                               _teachPowerUp BD7C  
                                _pollCount 0264                                   _PIR1bits 0F9E  
                                 _PIR2bits 0FA1                         __end_of_canPowerUp 70C2  
                        ?_nvProcessMessage 01F9                    ??_setTimedResponseDelay 008D  
                                 _PIR5bits 0F77                          doReqev@tableIndex 01CF  
                  ??_producerGetDiagnostic 0098                            ??_defaultEvents 00A9  
                                _txBuffers 0500                             _mnsDiagnostics 018D  
                ??_updateModuleErrorStatus 008D                                   _RCONbits 0FD0  
                        doReqev@nodeNumber 01C8                           ??_setOutputState 0095  
                                 _RXF0SIDL 0EE1              startDigitalOutput@actionState 01DA  
                       ??_nvProcessMessage 01FB                                   _RXM0EIDH 0EFA  
                                 _RXM0EIDL 0EFB                                 ?_findEvent 01BA  
                                 _TXB0SIDH 0F21                                   _TXB0SIDL 0F22  
                                 _TXB1SIDH 0F11                                   _TXB1SIDL 0F12  
                                 _TXB2SIDH 0F01                                   _TXB2SIDL 0F02  
                                 _RXFBCON0 0E71                                   _RXM0SIDH 0EF8  
                                 _RXM0SIDL 0EF9                             pushTwoAction@a 008D  
              sodTRCallback@event_inverted 01DE                            inputScan@change 01CE  
                      i2setOutputPin@state 0005                          _stepsPerPollSpeed 0100  
                        _teachFactoryReset C52E                                 ?_pbUpTimer 0001  
                                configIO@i 01C3                                _bounceState 0244  
                              _APP_highIsr C446                             sendMessage@len 01BA  
                           sendMessage@opc 00A5                          _timedResponseTime 0144  
                        ___wmul@multiplier 0091                          _timedResponseStep 0043  
                        _timedResponseType 00C5                                  _startWait 0037  
                                _startTime 003B                                 ?_completed 008D  
                                 i2_canIsr C42E                      __end_ofi2_checkTxFifo 5A4C  
                         _enumerationState 00C1                               doRqevn@count 01C3  
                                _transport 0162                         ?_teachFactoryReset 0001  
                        defaultEvents@type 01E6                         __end_of_defaultNVs B780  
                               ?_leds_poll 0001                      __end_of_initInputScan 99A0  
                          _flushFlashBlock A5CC                 processActions@simultaneous 01DF  
                  ??i2_getNextWriteMessage 0003                        __end_of_setNewCanId B12A  
                      __end_of_sendMessage A8D2                                 ?_readInput 0001  
                           doWait@duration 009D                              ??_setupTimer1 0095  
                            ??_setupTimer3 0095                       _deleteTwoActionQueue A7D6  
                          _eventCoeService EEEB                               ??_bounceDown 009F  
                      ??_teachFactoryReset 00A9                            checkLen@service 01CA  
                        ___lmul@multiplier 0091                                _INTCON2bits 0FF1  
                             _sendMessage2 BE70                               _sendMessage3 BF8C  
                             _sendMessage4 BF00                               _sendMessage5 BED0  
                             _sendMessage6 BE40                               _sendMessage7 BEA0  
                                 i1pop@ret 0067                                   i2pop@ret 0008  
                          startOutput@type 01DD                            nvFactoryReset@i 01BE  
                               ?_inputScan 0001                                 ?_mnsLowIsr 0001  
                  __end_of_canFactoryReset C390                   __end_of_removeTableEntry 7AB2  
                         ?_isConsumedEvent 0001                    __end_of_teachGetESDdata C244  
                               ?_nvPowerUp 0001                  __end_of_channelDefaultNVs EED9  
             __end_of_eventProducerService EF0F                     handleSelfEnumeration@p 0097  
                               _EECON1bits 0F7F                        startBounceOutput@io 008E  
                              _loadNvCache B946                                   __Hrparam 0000  
                              _eventChains 0548                           finaliseOutput@io 0001  
                 evtIdxToTableIndex@evtIdx 008D                               ??_initBounce 008D  
                  APP_addEvent@eventNumber 01E8                                  memcpy@tmp 0093  
                                 __Lrparam 0000                          doReval@tableIndex 01CD  
                          _producerEsdData C2D2                           ??_nvFactoryReset 01BC  
                             ??_initTicker 008D                        __end_of_removeEvent C06A  
                             ??_initRomOps 008D                     removeEvent@eventNumber 01CB  
 consumer2QProcessMessage@nextSimultaneous 02D4                               ??_initServos 00A4  
                __end_of_teachFactoryReset C534                    sodTRCallback@send_on_ok 01D7  
                                 _addEvent 63DE                          _startBounceOutput B060  
           ?_mnsTRserviceDiscoveryCallback 01D4                             _processActions 61A6  
                       __end_of_bounceDown 2D54                            ??_reqevCallback 01D6  
                            ??_startServos 00A9                           ?_checkCANTimeout 0001  
                            ??_startOutput 00A9                                _initOutputs BFE8  
                       ?_startBounceOutput 008D                            _producerPowerUp BF30  
                       doNenrd@eventNumber 01CA                  rebuildHashtable@happening 01C0  
                             setType@index 01EB                                   _checkLen A758  
                          ??_setMultiState 0092                            ??_setServoState 0092  
                           i2checkTxFifo@m 0012                             _finaliseOutput C50E  
                      _producerDiagnostics 01AA                    deleteActionRange@action 01DE  
                            initOutputs@io 008D                       processActions@action 01E7  
          __end_of_updateModuleErrorStatus C4D0                    __end_of_eventAckService EEEB  
                               _FLASH_Read B866                 ?_sendInvertedProducedEvent 01CC  
                    ?_deleteTwoActionQueue 0001                      getNextWriteMessage@wr 0098  
                                 __ptext10 BD4A                                   __ptext11 7E3E  
                                 __ptext20 9A46                                   __ptext12 BF5E  
                                 __ptext21 4680                                   __ptext13 B9DA  
                               _T1GCONbits 0FAA                                   __ptext30 7AB2  
                                 __ptext22 16CE                                   __ptext14 BD7C  
                                 __ptext31 AF2A                                   __ptext23 65E2  
                                 __ptext15 BDE0                                defaultNVs@i 01C4  
                                 __ptext40 A8D2                                   __ptext32 BE10  
                                 __ptext24 9FA6                                   __ptext16 C516  
                                 __ptext41 9DE4                                   __ptext33 C3AE  
                                 __ptext25 3576                                   __ptext17 BA6A  
                                 __ptext50 C4F2                                   __ptext42 AFFA  
                                 __ptext34 ADE2                                   __ptext26 21FE  
                                 __ptext18 3900                                   __ptext51 A94E  
                                 __ptext43 BAF6                                   __ptext35 C4E8  
                                 __ptext27 B1EE                                   __ptext19 5F3E  
                                 __ptext60 C220                                   __ptext52 2D54  
                                 __ptext44 A314                                   __ptext36 A9CA  
                                 __ptext28 BCDA                                   __ptext61 C094  
                                 __ptext53 C4FC                                   __ptext45 8452  
                                 __ptext37 C040                                   __ptext29 934E  
                                 __ptext70 861E                                   __ptext62 AEBE  
                                 __ptext54 C1FC                                   __ptext46 C014  
                                 __ptext38 9102                                   __ptext71 B47E  
                                 __ptext63 C0BC                                   __ptext55 AC1A  
                                 __ptext47 8268                                   __ptext39 AE52  
                                 __ptext80 B0C6                                   __ptext72 4330  
                                 __ptext64 C0E4                                   __ptext56 C2D2  
                                 __ptext48 3C76                                   __ptext81 9B80  
                                 __ptext73 BDAE                                   __ptext65 C10C  
                                 __ptext57 C3C8                                   __ptext49 8A7E  
                                 __ptext90 A758                                   __ptext82 BAB0  
                                 __ptext74 BE70                                   __ptext66 C134  
                                 __ptext58 C3E2                                   __ptext91 BED0  
                                 __ptext83 805E                                   __ptext75 C51C  
                                 __ptext67 C15C                                   __ptext59 C2F2  
                                 __ptext92 C534                                   __ptext84 BC2C  
                                 __ptext76 C522                                   __ptext68 BE40  
                                 __ptext93 C538                                   __ptext85 9E7A  
                                 __ptext77 B30E                                   __ptext69 BF8C  
                                 __ptext94 6B88                                   __ptext86 BEA0  
                                 __ptext78 67D0                                   __ptext95 99A0  
                                 __ptext87 C244                                   __ptext79 76AE  
                                 __ptext96 A0CE                                   __ptext88 9CB4  
                                 __ptext97 A160                                   __ptext89 C416  
                                 __ptext98 0850                                   __ptext99 C06A  
                      ??_startBounceOutput 008E               __end_of_getNumRxBuffersInUse BC66  
                  __end_of_isNoServoPulses C4B8                               _setOutputPin 6D4A  
                     processActions@nextIo 01E2                               ??_mnsPowerUp 0097  
                                 _configIO 4C98                                   _ledTimer 0148  
                  deleteActionRange@number 01D7                             _processOutputs 69B6  
                        _APP_GetEventState 3C76                                   _ledState 00BD  
                        sodTRCallback@step 01D5                         __end_of_initBounce C094  
                        sodTRCallback@type 0001                              ?_EEPROM_Write 008F  
                       __end_of_eventTable FF70                                   _bounceUp 5A4C  
                               _T3GCONbits 0FB0                     i1getNextWriteMessage@q 0060  
                       __end_of_initTicker BAB0                         __end_of_initRomOps C470  
                       i1_getBufferPointer 9F10                         ?_APP_GetEventState 0001  
                       __end_of_initServos 7D1A           __end_of_consumer2QProcessMessage 3900  
                                setType@io 01EC                                   doNnevn@f 01C7  
                                 doNnevn@i 01C9                 sendProducedEvent@happening 01CB  
                       __end_of_paramBlock 0840                             canPowerUp@temp 0098  
                    __end_of_setLEDsByMode BDE0                        __end_of_setupTimer1 A1F2  
                      __end_of_setupTimer3 A160                       __end_ofi2_canTxError B1EE  
                            ?_factoryReset 0001                   __end_of_startMultiOutput 9B80  
                            _configIO$8063 01BE                           _nvTRnvrdCallback BAF6  
                            findEvent@hash 01C4                   __end_of_startServoOutput 928C  
                             ??_validStart 0097                                   doRqevn@i 01C4  
                        ?_canGetDiagnostic 0096                             writeEv@nextIdx 01D6  
                              getEVs@evIdx 00A2             consumer2QProcessMessage@change 02CD  
           consumer2QProcessMessage@action 02D9                           ?i2_canFillRxFifo 0001  
                              getEVs@evNum 00A4                        ?i1_getBufferPointer 0060  
                      ??_APP_GetEventState 009F              __end_of_APP_preProcessMessage C538  
            ackEventProcessMessage@eventEN 02CC              ackEventProcessMessage@eventNN 02CF  
                             _popTwoAction BFBA                         ??_canGetDiagnostic 0098  
                             ??_pollServos 01CC                                   isa$xinst 0000  
                                 _services EE75                  __end_of_startBounceOutput B0C6  
                   __end_of_processActions 63DE                   clearAllEvents@tableIndex 01C7  
                                 int$flags 0052                            _nvGetDiagnostic C0BC  
                                 highIsr@i 001E                                ??_findEvent 01BE  
                                 _quantity BD12                      _handleSelfEnumeration 805E  
              ??i2_updateModuleErrorStatus 0001                                 _APP_lowIsr C540  
                   sendProducedEvent@onOff 00A7                         __end_of_mnsService EF69  
                  __end_of_flushFlashBlock A652                          writeEv@tableIndex 01D5  
                       __end_of_mnsPowerUp 7F54                          _setOutputPosition ABA8  
                             ??_showStatus 008D                                ??_pbUpTimer 00A4  
                         processOutputs@io 01CD                                   _writeNVM B7CE  
               processEnumeration@newCanId 01C2                     APP_addEvent@forceOwnNN 01EC  
                              _setNewCanId B0C6                               ?_checkTxFifo 0001  
                             pollServos@io 01D7                                ??_completed 008F  
                              _sendMessage A854                     __end_of_finaliseOutput C516  
                           startOutput@act 01DC                    __end_of_eventCoeService EEFD  
                            writeNVM@index 00A4                         ?_setOutputPosition 00A1  
                                quantity@q 008D                              writeNVM@value 00A7  
                              _OSCTUNEbits 0F9B                                 _INTCONbits 0FF2  
                              ??_leds_poll 009F                 ??_factoryResetGlobalEvents 008D  
                       _evtIdxToTableIndex C4E8                       ??i1_getBufferPointer 0062  
                    canGetDiagnostic@index 0099                                   memcpy@d1 008D  
                                 memcpy@s1 008F                     __end_of_processOutputs 6B88  
                __end_of_APP_GetEventState 3FD6                   __end_of_getBufferPointer 9F10  
                          _eraseFlashBlock B81A                          APP_addEvent@evVal 01EB  
            __end_of_checkRemoveTableEntry BA6A                          APP_addEvent@evNum 01EA  
                       __end_of_validStart B7CE                        __end_of_startServos 9A46  
                  teachGetDiagnostic@index 0098                                ??_readInput 0091  
                      __end_of_startOutput B424                     _ackEventProcessMessage 65E2  
                  deleteTwoActionQueue@qty 008D                             ??_EEPROM_Write 0092  
                      ??_setOutputPosition 00A3                 __end_of_processEnumeration 7808  
                              getHash@hash 00A8                         __end_of_pollServos 16CE  
                        ?_ackGetDiagnostic 0096                                   intlevel1 0000  
                                 intlevel2 0000                        ?_evtIdxToTableIndex 0001  
                            ?_getParameter 0001                                ??_inputScan 01CC  
                             _servoInBlock 00CB                                ??_mnsLowIsr 0060  
                     getNextWriteMessage@q 008D                           ?_canFactoryReset 0001  
                   APP_addEvent@tableIndex 01ED                                   numEv@num 00A1  
                             ?_EEPROM_Read 008D                           ___lldiv@dividend 0097  
                       ??_ackGetDiagnostic 0098            sendInvertedProducedEvent@invert 01CD  
                           ??_factoryReset 01EE                    __end_of_producerEsdData C2F2  
                              ??_nvPowerUp 009C                               ?_clearEvents 0001  
                         _ackEventCheckLen C416                      removeEvent@tableIndex 01CD  
                         ?_teachGetESDdata 0001                   __end_of_findServiceIndex ACFE  
                              _removeEvent C040                     APP_addEvent@nodeNumber 01E6  
                              _TXB0CONbits 0F20                              _doneTwoAction C528  
                       __end_of_showStatus 87E6             mnsTRrqnpnCallback@serviceIndex 01D4  
                    removeEvent@nodeNumber 01C9                                _TXB1CONbits 0F10  
                              _TXB2CONbits 0F00                         _paramBlock_absaddr 0820  
              deleteActionRange@tableIndex 01E0                         __end_of_priorities EE35  
                         ??_canSendMessage 009B                __end_of_teachProcessMessage 28A0  
               __end_of_tableIndexToEvtIdx C4FC                  sodTRCallback@serviceIndex 01D4  
                     __end_of_canTransport EF7F                               ?_FLASH_Write 0090  
                  __end_of_producerPowerUp BF5E                         tickGet@currentTime 0093  
                          ?_processActions 0001                              findService@id 0091  
                __end_of_setOutputPosition AC1A                                   powerUp@i 01C8  
                     ??_evtIdxToTableIndex 008D                          _pollTimedResponse A8D2  
                    __end_of_teachCheckLen B24E                   ??_producerProcessMessage 02CC  
                    setDigitalOutput@state 0097                         _eventTable_absaddr EF80  
                       ?_pollTimedResponse 0001                          FLASH_Read@address 008D  
                         _APP_factoryReset C268                            ?_finaliseOutput 008D  
                  nerdCallback@eventNumber 01D8                              ?_getTwoAction 0001  
                         _ticksWhenStopped 0388                           ___lldiv@quotient 009F  
                     producerEsdData@index 008D                       _eventProducerService EEFD  
           sendInvertedProducedEvent@state 01CC                    _consumer2QGetDiagnostic C134  
                   ??_deleteTwoActionQueue 008D                          _deleteActionRange 963A  
                             ?_pbDownTimer 0001                                findEvent@en 01C2  
                              findEvent@nn 01C0                          writeEv@startIndex 01D1  
                     findEvent@eventNumber 01BC                                   writeEv@e 01D3  
                                 writeEv@f 01D4                            ?_processOutputs 0001  
                              ?_FLASH_Read 008D                        ??_pollTimedResponse 01E3  
                         _mnsGetDiagnostic C0E4                               findService@i 0092  
                       ?_deleteActionRange 01D7               _timedResponseAllServicesFlag 0044  
                              _setupTimer1 A160                                _setupTimer3 A0CE  
                         ?_isNoServoPulses 0001                               ?_findService 008D  
                   startMultiOutput@action 0091                  i2_updateModuleErrorStatus C4DC  
                           ??_getParameter 0092                          sendMessage2@data1 00A6  
                        sendMessage2@data2 00A7                          sendMessage3@data1 00A6  
                        sendMessage3@data2 00A7                          sendMessage3@data3 00A8  
                        sendMessage4@data1 01C2                          sendMessage4@data2 01C3  
                        sendMessage4@data3 01C4                          sendMessage4@data4 01C5  
                         _setDigitalOutput A3A2                          getBufferPointer@b 008F  
                        sendMessage5@data1 01C2                          sendMessage5@data2 01C3  
                        sendMessage5@data3 01C4                          sendMessage5@data4 01C5  
                        sendMessage5@data5 01C6                      _consumer2QDiagnostics 01B6  
                        sendMessage6@data1 01C2                          sendMessage6@data2 01C3  
                        sendMessage6@data3 01C4                          sendMessage6@data4 01C5  
                        sendMessage6@data5 01C6                          sendMessage6@data6 01C7  
                          _last_mode_flags 0046                          sendMessage7@data1 01C2  
                        sendMessage7@data2 01C3                          sendMessage7@data3 01C4  
                        sendMessage7@data4 01C5                          sendMessage7@data5 01C6  
                        sendMessage7@data6 01C7                          sendMessage7@data7 01C8  
                           _checkPowerOnPb B36C                           EEPROM_Read@index 008D  
                      ??_deleteActionRange 01D8                           _setNormalActions C51C  
                           ?_doneTwoAction 0001                            _last_mode_state 00C7  
                  __end_of_nvGetDiagnostic C0E4                       validStart@tableIndex 009B  
                     nvTRnvrdCallback@step 01D5                ?_timer1DoneInterruptHandler 0001  
                     nvTRnvrdCallback@type 0001                                _pulseDelays 02A4  
              __end_of_getNextWriteMessage 8C28  
